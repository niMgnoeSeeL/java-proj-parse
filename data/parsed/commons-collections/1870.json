{
    "da5a378c4fd1757393fa599f7e6766e48dd83ce2": {
        "authored_data": "2010 Jul 18 08:07",
        "commit.message": "Applying Thomas Rogan's patch to COLLECTIONS-328, improving the performance to ListUtils.intersection in the manner described by Jilles van Gurp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@965176 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "a11dc6aa1d91106577c75a5986b691b41b493947",
        "changes": {
            "src/java/org/apache/commons/collections/ListUtils.java": {
                "old": {
                    "('org.apache.commons.collections#ListUtils', 'intersection(List,List)')": [
                        73,
                        74,
                        75,
                        76,
                        78
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.collections#ListUtils', 'intersection(List,List)')": [
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        87
                    ]
                }
            }
        }
    },
    "a11dc6aa1d91106577c75a5986b691b41b493947": {
        "authored_data": "2010 Jul 18 07:43",
        "commit.message": "Applying Mark Shead's patch to COLLECTIONS-359. The intersection method was not handling duplicates correctly. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@965173 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "ca34318ae2fed482b75f0b4cd1a082bb17d4b9c9",
        "changes": {
            "src/java/org/apache/commons/collections/ListUtils.java": {
                "old": {
                    "('org.apache.commons.collections#ListUtils', 'intersection(List,List)')": [
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#ListUtils', 'intersection(List,List)')": [
                        73,
                        76,
                        78
                    ]
                }
            },
            "src/test/org/apache/commons/collections/TestListUtils.java": {
                "new": {
                    "('org.apache.commons.collections#TestListUtils', None)": [
                        111,
                        112,
                        113,
                        114,
                        115
                    ],
                    "('org.apache.commons.collections#TestListUtils', 'testIntersectionOrderInsensitivity')": [
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ]
                }
            }
        }
    },
    "bcdca8e6c9930f0ab2b40f1b752bdaa00914ce22": {
        "authored_data": "2010 Jun 19 23:00",
        "commit.message": "Making the other two addAll methods return boolean on whether anything changes (somewhat related to COLLECTIONS-223)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@956306 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "ae77247f974afd10f06b54889d868c6699b1c1d6",
        "changes": {
            "src/java/org/apache/commons/collections/CollectionUtils.java": {
                "old": {
                    "('org.apache.commons.collections#CollectionUtils', None)": [
                        807,
                        811,
                        827
                    ],
                    "('org.apache.commons.collections#CollectionUtils', 'addAll(Collection,Enumeration)')": [
                        808,
                        810
                    ],
                    "('org.apache.commons.collections#CollectionUtils', 'addAll(Collection,C)')": [
                        824,
                        826
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#CollectionUtils', 'addAll(Collection,Enumeration)')": [
                        807,
                        808,
                        810,
                        811,
                        812
                    ],
                    "('org.apache.commons.collections#CollectionUtils', 'addAll(Collection,C)')": [
                        825,
                        826,
                        828,
                        829,
                        830
                    ]
                }
            }
        }
    },
    "ae77247f974afd10f06b54889d868c6699b1c1d6": {
        "authored_data": "2010 Jun 19 22:41",
        "commit.message": "Moving from StringBuffer API to StringBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@956305 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "f208babdc092ef6de26126fa81f20f47c49cabc0",
        "changes": {
            "src/java/org/apache/commons/collections/ExtendedProperties.java": {
                "old": {
                    "('org.apache.commons.collections#ExtendedProperties', 'interpolateHelper(String,List)')": [
                        241,
                        253
                    ],
                    "('org.apache.commons.collections#ExtendedProperties', 'escape(String)')": [
                        299
                    ],
                    "('org.apache.commons.collections#ExtendedProperties', 'unescape(String)')": [
                        314
                    ],
                    "('org.apache.commons.collections#ExtendedProperties', None)": [
                        372,
                        426
                    ],
                    "('org.apache.commons.collections#ExtendedProperties', 'save(OutputStream,String)')": [
                        760,
                        770
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#ExtendedProperties', 'interpolateHelper(String,List)')": [
                        241,
                        253
                    ],
                    "('org.apache.commons.collections#ExtendedProperties', 'escape(String)')": [
                        299
                    ],
                    "('org.apache.commons.collections#ExtendedProperties', 'unescape(String)')": [
                        314
                    ],
                    "('org.apache.commons.collections#ExtendedProperties', None)": [
                        372,
                        426
                    ],
                    "('org.apache.commons.collections#ExtendedProperties', 'save(OutputStream,String)')": [
                        760,
                        770
                    ]
                }
            },
            "src/java/org/apache/commons/collections/bag/AbstractMapBag.java": {
                "old": {
                    "('org.apache.commons.collections.bag#AbstractMapBag', 'toString')": [
                        582
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.bag#AbstractMapBag', 'toString')": [
                        582
                    ]
                }
            },
            "src/java/org/apache/commons/collections/bidimap/TreeBidiMap.java": {
                "old": {
                    "('org.apache.commons.collections.bidimap#TreeBidiMap', 'doToString(DataElement)')": [
                        1375
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.bidimap#TreeBidiMap', 'doToString(DataElement)')": [
                        1375
                    ]
                }
            },
            "src/java/org/apache/commons/collections/buffer/PriorityBuffer.java": {
                "old": {
                    "('org.apache.commons.collections.buffer#PriorityBuffer', 'toString')": [
                        530
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.buffer#PriorityBuffer', 'toString')": [
                        530
                    ]
                }
            },
            "src/java/org/apache/commons/collections/keyvalue/AbstractKeyValue.java": {
                "old": {
                    "('org.apache.commons.collections.keyvalue#AbstractKeyValue', 'toString')": [
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.keyvalue#AbstractKeyValue', 'toString')": [
                        76
                    ]
                }
            },
            "src/java/org/apache/commons/collections/list/AbstractLinkedList.java": {
                "old": {
                    "('org.apache.commons.collections.list#AbstractLinkedList', 'toString')": [
                        363
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.list#AbstractLinkedList', 'toString')": [
                        363
                    ]
                }
            },
            "src/java/org/apache/commons/collections/map/AbstractHashedMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#AbstractHashedMap', None)": [
                        1098
                    ],
                    "('org.apache.commons.collections.map#AbstractHashedMap', 'toString')": [
                        1334
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#AbstractHashedMap', None)": [
                        1098
                    ],
                    "('org.apache.commons.collections.map#AbstractHashedMap', 'toString')": [
                        1334
                    ]
                }
            },
            "src/java/org/apache/commons/collections/map/Flat3Map.java": {
                "old": {
                    "('org.apache.commons.collections.map#Flat3Map', 'toString')": [
                        1131
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#Flat3Map', 'toString')": [
                        1131
                    ]
                }
            },
            "src/java/org/apache/commons/collections/map/ListOrderedMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#ListOrderedMap', 'toString')": [
                        324
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#ListOrderedMap', 'toString')": [
                        324
                    ]
                }
            },
            "src/java/org/apache/commons/collections/map/SingletonMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#SingletonMap', 'toString')": [
                        560
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#SingletonMap', 'toString')": [
                        560
                    ]
                }
            },
            "src/test/org/apache/commons/collections/AbstractTestObject.java": {
                "old": {
                    "('org.apache.commons.collections#AbstractTestObject', 'getCanonicalEmptyCollectionName(Object)')": [
                        235
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', 'getCanonicalFullCollectionName(Object)')": [
                        247
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#AbstractTestObject', 'getCanonicalEmptyCollectionName(Object)')": [
                        235
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', 'getCanonicalFullCollectionName(Object)')": [
                        247
                    ]
                }
            },
            "src/test/org/apache/commons/collections/TestClosureUtils.java": {
                "old": {
                    "('org.apache.commons.collections#TestClosureUtils', 'testNopClosure')": [
                        124
                    ],
                    "('org.apache.commons.collections#TestClosureUtils', 'testInvokeClosure')": [
                        135,
                        138
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#TestClosureUtils', 'testNopClosure')": [
                        124
                    ],
                    "('org.apache.commons.collections#TestClosureUtils', 'testInvokeClosure')": [
                        135,
                        138
                    ]
                }
            },
            "src/test/org/apache/commons/collections/buffer/TestPriorityBuffer.java": {
                "old": {
                    "('org.apache.commons.collections.buffer#TestPriorityBuffer', 'showTree(PriorityBuffer)')": [
                        335
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.buffer#TestPriorityBuffer', 'showTree(PriorityBuffer)')": [
                        335
                    ]
                }
            },
            "src/test/org/apache/commons/collections/comparators/AbstractTestComparator.java": {
                "old": {
                    "('org.apache.commons.collections.comparators#AbstractTestComparator', 'getCanonicalComparatorName(Object)')": [
                        172
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.comparators#AbstractTestComparator', 'getCanonicalComparatorName(Object)')": [
                        172
                    ]
                }
            },
            "src/test/org/apache/commons/collections/comparators/TestComparatorChain.java": {
                "old": {
                    "('org.apache.commons.collections.comparators#TestComparatorChain', None)": [
                        147
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.comparators#TestComparatorChain', None)": [
                        147
                    ]
                }
            },
            "src/test/org/apache/commons/collections/iterators/TestFilterListIterator.java": {
                "old": {
                    "('org.apache.commons.collections.iterators#TestFilterListIterator', 'walkLists(List,ListIterator)')": [
                        400
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.iterators#TestFilterListIterator', 'walkLists(List,ListIterator)')": [
                        400
                    ]
                }
            }
        }
    },
    "f208babdc092ef6de26126fa81f20f47c49cabc0": {
        "authored_data": "2010 Jun 19 20:30",
        "commit.message": "Applying some of the refactorings from COLLECTIONS-312\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@956291 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "304203ecae413e27f0a6972be42b18efd86f0753",
        "changes": {
            "src/java/org/apache/commons/collections/CollectionUtils.java": {
                "old": {
                    "('org.apache.commons.collections#CollectionUtils', 'addIgnoreNull(Collection,T)')": [
                        758
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#CollectionUtils', 'addIgnoreNull(Collection,T)')": [
                        758
                    ]
                }
            },
            "src/java/org/apache/commons/collections/ExtendedProperties.java": {
                "old": {
                    "('org.apache.commons.collections#ExtendedProperties', 'interpolateHelper(String,List)')": [
                        265
                    ],
                    "('org.apache.commons.collections#ExtendedProperties', 'load(InputStream,String)')": [
                        580
                    ],
                    "('org.apache.commons.collections#ExtendedProperties', 'getProperties(String,Properties)')": [
                        992
                    ],
                    "('org.apache.commons.collections#ExtendedProperties', 'getBoolean(String,Boolean)')": [
                        1189
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#ExtendedProperties', 'interpolateHelper(String,List)')": [
                        265
                    ],
                    "('org.apache.commons.collections#ExtendedProperties', 'load(InputStream,String)')": [
                        580
                    ],
                    "('org.apache.commons.collections#ExtendedProperties', 'getProperties(String,Properties)')": [
                        992
                    ],
                    "('org.apache.commons.collections#ExtendedProperties', 'getBoolean(String,Boolean)')": [
                        1189
                    ]
                }
            },
            "src/java/org/apache/commons/collections/MapUtils.java": {
                "old": {
                    "('org.apache.commons.collections#MapUtils', 'getBoolean(Map,K)')": [
                        171
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#MapUtils', 'getBoolean(Map,K)')": [
                        171
                    ]
                }
            },
            "src/java/org/apache/commons/collections/bag/AbstractMapBag.java": {
                "old": {
                    "('org.apache.commons.collections.bag#AbstractMapBag', None)": [
                        182,
                        183
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.bag#AbstractMapBag', None)": [
                        182,
                        183
                    ]
                }
            },
            "src/java/org/apache/commons/collections/comparators/ComparatorChain.java": {
                "old": {
                    "('org.apache.commons.collections.comparators#ComparatorChain', None)": [
                        98
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.comparators#ComparatorChain', None)": [
                        98
                    ]
                }
            },
            "src/java/org/apache/commons/collections/comparators/ReverseComparator.java": {
                "old": {
                    "('org.apache.commons.collections.comparators#ReverseComparator', None)": [
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.comparators#ReverseComparator', None)": [
                        41
                    ]
                }
            },
            "src/java/org/apache/commons/collections/iterators/EnumerationIterator.java": {
                "old": {
                    "('org.apache.commons.collections.iterators#EnumerationIterator', None)": [
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.iterators#EnumerationIterator', None)": [
                        36
                    ]
                }
            },
            "src/java/org/apache/commons/collections/iterators/ObjectGraphIterator.java": {
                "old": {
                    "('org.apache.commons.collections.iterators#ObjectGraphIterator', None)": [
                        85
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.iterators#ObjectGraphIterator', None)": [
                        85
                    ]
                }
            },
            "src/java/org/apache/commons/collections/iterators/UnmodifiableIterator.java": {
                "old": {
                    "('org.apache.commons.collections.iterators#UnmodifiableIterator', None)": [
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.iterators#UnmodifiableIterator', None)": [
                        36
                    ]
                }
            },
            "src/java/org/apache/commons/collections/iterators/UnmodifiableMapIterator.java": {
                "old": {
                    "('org.apache.commons.collections.iterators#UnmodifiableMapIterator', None)": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.iterators#UnmodifiableMapIterator', None)": [
                        35
                    ]
                }
            },
            "src/java/org/apache/commons/collections/list/SetUniqueList.java": {
                "old": {
                    "('org.apache.commons.collections.list#SetUniqueList', 'createSetBasedOnList(Set,List)')": [
                        289,
                        291
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.list#SetUniqueList', 'createSetBasedOnList(Set,List)')": [
                        289,
                        291
                    ]
                }
            },
            "src/java/org/apache/commons/collections/map/AbstractReferenceMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#AbstractReferenceMap', None)": [
                        908,
                        925
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#AbstractReferenceMap', None)": [
                        908,
                        925
                    ]
                }
            }
        }
    },
    "304203ecae413e27f0a6972be42b18efd86f0753": {
        "authored_data": "2010 Jun 19 19:55",
        "commit.message": "Code cleanup per COLLECTIONS-312\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@956280 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "256c1e365d91f00a3cd4bcfee372eba38874ca53",
        "changes": {
            "src/test/org/apache/commons/collections/comparators/TestFixedOrderComparator.java": {
                "old": {
                    "('org.apache.commons.collections.comparators#TestFixedOrderComparator', 'assertComparatorYieldsOrder(String,Comparator)')": [
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        219,
                        220,
                        221,
                        222,
                        223
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.comparators#TestFixedOrderComparator', 'assertComparatorYieldsOrder(String,Comparator)')": [
                        208,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        218,
                        219,
                        220,
                        221
                    ]
                }
            }
        }
    },
    "256c1e365d91f00a3cd4bcfee372eba38874ca53": {
        "authored_data": "2010 Jun 19 19:47",
        "commit.message": "Simplifying exceptions now that cause is in the parent. Patch from Sebb in COLLECTIONS-336\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@956279 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "74cc4d8330a3f6901c114802280bc779b1e1d48b",
        "changes": {
            "src/java/org/apache/commons/collections/BufferOverflowException.java": {
                "old": {
                    "('org.apache.commons.collections#BufferOverflowException', None)": [
                        37,
                        38,
                        39,
                        45,
                        64,
                        65,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73
                    ],
                    "('org.apache.commons.collections#BufferOverflowException', 'getCause')": [
                        74,
                        75
                    ],
                    "(None, None)": [
                        76,
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#BufferOverflowException', None)": [
                        60
                    ]
                }
            },
            "src/java/org/apache/commons/collections/BufferUnderflowException.java": {
                "old": {
                    "('org.apache.commons.collections#BufferUnderflowException', None)": [
                        38,
                        39,
                        40,
                        41,
                        48,
                        57,
                        68,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('org.apache.commons.collections#BufferUnderflowException', 'getCause')": [
                        77,
                        78
                    ],
                    "(None, None)": [
                        79,
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#BufferUnderflowException', None)": [
                        38,
                        53,
                        64
                    ]
                }
            },
            "src/java/org/apache/commons/collections/FunctorException.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        143,
                        144
                    ],
                    "('org.apache.commons.collections#FunctorException', None)": [
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        63,
                        74,
                        85,
                        86,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        109,
                        110,
                        111,
                        112,
                        113,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136
                    ],
                    "('org.apache.commons.collections#FunctorException', 'getCause')": [
                        107,
                        108
                    ],
                    "('org.apache.commons.collections#FunctorException', 'printStackTrace')": [
                        114,
                        115
                    ],
                    "('org.apache.commons.collections#FunctorException', 'printStackTrace(PrintStream)')": [
                        123,
                        124,
                        125,
                        126,
                        127,
                        128
                    ],
                    "('org.apache.commons.collections#FunctorException', 'printStackTrace(PrintWriter)')": [
                        137,
                        138,
                        139,
                        140,
                        141,
                        142
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#FunctorException', None)": [
                        31,
                        59,
                        71
                    ]
                }
            }
        }
    }
}