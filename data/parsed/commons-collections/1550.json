{
    "76d6a4b8e4403a99bb670fdba799f3e03240cdba": {
        "authored_data": "2013 Jan 21 10:11",
        "commit.message": "Fix findbugs warning wrt exposed internal representation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1436254 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "5954027e47cb99c95e672f93e60a712501577bbd",
        "changes": {
            "src/main/java/org/apache/commons/collections/functors/ChainedClosure.java": {
                "old": {
                    "('org.apache.commons.collections.functors#ChainedClosure', None)": [
                        107,
                        108
                    ],
                    "('org.apache.commons.collections.functors#ChainedClosure', 'getClosures')": [
                        112
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#ChainedClosure', None)": [
                        107,
                        108,
                        109
                    ],
                    "('org.apache.commons.collections.functors#ChainedClosure', 'getClosures')": [
                        113
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/ChainedTransformer.java": {
                "old": {
                    "('org.apache.commons.collections.functors#ChainedTransformer', None)": [
                        108,
                        109
                    ],
                    "('org.apache.commons.collections.functors#ChainedTransformer', 'getTransformers')": [
                        113
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#ChainedTransformer', None)": [
                        108,
                        109,
                        110
                    ],
                    "('org.apache.commons.collections.functors#ChainedTransformer', 'getTransformers')": [
                        114
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/SwitchClosure.java": {
                "old": {
                    "('org.apache.commons.collections.functors#SwitchClosure', None)": [
                        143,
                        145,
                        153,
                        155
                    ],
                    "('org.apache.commons.collections.functors#SwitchClosure', 'getPredicates')": [
                        149
                    ],
                    "('org.apache.commons.collections.functors#SwitchClosure', 'getClosures')": [
                        159
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#SwitchClosure', None)": [
                        143,
                        145,
                        153,
                        155
                    ],
                    "('org.apache.commons.collections.functors#SwitchClosure', 'getPredicates')": [
                        149
                    ],
                    "('org.apache.commons.collections.functors#SwitchClosure', 'getClosures')": [
                        159
                    ]
                }
            }
        }
    },
    "5954027e47cb99c95e672f93e60a712501577bbd": {
        "authored_data": "2013 Jan 21 09:49",
        "commit.message": "Fix findbugs warning wrt exposure of internal representation: introduce a common base class for quantification predicates and clone the internal predicate array.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1436241 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "9d6a3eb828b793c170c29e9efbdccb581dd470ed",
        "changes": {
            "src/main/java/org/apache/commons/collections/functors/AllPredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#AllPredicate', None)": [
                        39,
                        43,
                        44,
                        45,
                        101,
                        102,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ],
                    "('org.apache.commons.collections.functors#AllPredicate', 'getPredicates')": [
                        126,
                        127
                    ],
                    "(None, None)": [
                        128,
                        129
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#AllPredicate', None)": [
                        39,
                        98
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/AnyPredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#AnyPredicate', None)": [
                        35,
                        39,
                        40,
                        41,
                        98,
                        99,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122
                    ],
                    "('org.apache.commons.collections.functors#AnyPredicate', 'getPredicates')": [
                        123,
                        124
                    ],
                    "(None, None)": [
                        125,
                        126
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#AnyPredicate', None)": [
                        35,
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/NonePredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#NonePredicate', None)": [
                        35,
                        39,
                        40,
                        41,
                        88,
                        89,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112
                    ],
                    "('org.apache.commons.collections.functors#NonePredicate', 'getPredicates')": [
                        113,
                        114
                    ],
                    "(None, None)": [
                        115,
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#NonePredicate', None)": [
                        35,
                        85
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/OnePredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#OnePredicate', None)": [
                        35,
                        39,
                        40,
                        41,
                        88,
                        89,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117
                    ],
                    "('org.apache.commons.collections.functors#OnePredicate', 'getPredicates')": [
                        118,
                        119
                    ],
                    "(None, None)": [
                        120,
                        121
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#OnePredicate', None)": [
                        35,
                        85
                    ]
                }
            }
        }
    },
    "9d6a3eb828b793c170c29e9efbdccb581dd470ed": {
        "authored_data": "2013 Jan 21 01:37",
        "commit.message": "Explicit unboxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1436075 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "8864189257d1f93ac867425082e8280d97c54162",
        "changes": {
            "src/main/java/org/apache/commons/collections/trie/ByteKeyAnalyzer.java": {
                "old": {
                    "('org.apache.commons.collections.trie#ByteKeyAnalyzer', 'isBitSet(Byte,int,int)')": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.trie#ByteKeyAnalyzer', 'isBitSet(Byte,int,int)')": [
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/trie/IntegerKeyAnalyzer.java": {
                "old": {
                    "('org.apache.commons.collections.trie#IntegerKeyAnalyzer', 'isBitSet(Integer,int,int)')": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.trie#IntegerKeyAnalyzer', 'isBitSet(Integer,int,int)')": [
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/trie/LongKeyAnalyzer.java": {
                "old": {
                    "('org.apache.commons.collections.trie#LongKeyAnalyzer', 'isBitSet(Long,int,int)')": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.trie#LongKeyAnalyzer', 'isBitSet(Long,int,int)')": [
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/trie/ShortKeyAnalyzer.java": {
                "old": {
                    "('org.apache.commons.collections.trie#ShortKeyAnalyzer', 'isBitSet(Short,int,int)')": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.trie#ShortKeyAnalyzer', 'isBitSet(Short,int,int)')": [
                        69
                    ]
                }
            }
        }
    },
    "8864189257d1f93ac867425082e8280d97c54162": {
        "authored_data": "2013 Jan 21 01:32",
        "commit.message": "Value cannot be null (Eclipse)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1436070 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "80ec6a5e29bf3686abddd468b4502dac28e47b2f",
        "changes": {
            "src/main/java/org/apache/commons/collections/trie/AbstractKeyAnalyzer.java": {
                "old": {
                    "('org.apache.commons.collections.trie#AbstractKeyAnalyzer', 'compare(K,K)')": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.trie#AbstractKeyAnalyzer', 'compare(K,K)')": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/trie/AbstractTrie.java": {
                "old": {
                    "('org.apache.commons.collections.trie#AbstractTrie', 'compareKeys(K,K)')": [
                        153
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.trie#AbstractTrie', 'compareKeys(K,K)')": [
                        153
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/trie/ByteArrayKeyAnalyzer.java": {
                "old": {
                    "('org.apache.commons.collections.trie#ByteArrayKeyAnalyzer', 'compare(byte,byte)')": [
                        184
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.trie#ByteArrayKeyAnalyzer', 'compare(byte,byte)')": [
                        184
                    ]
                }
            }
        }
    },
    "80ec6a5e29bf3686abddd468b4502dac28e47b2f": {
        "authored_data": "2013 Jan 21 01:28",
        "commit.message": "Document some unchecked casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1436066 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "bac08c04d4bcd15c20979cc9a37749247467a054",
        "changes": {
            "src/main/java/org/apache/commons/collections/BagUtils.java": {
                "old": {
                    "('org.apache.commons.collections#BagUtils', None)": [
                        233,
                        244
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#BagUtils', None)": [
                        233,
                        244
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/BufferUtils.java": {
                "old": {
                    "('org.apache.commons.collections#BufferUtils', None)": [
                        201
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#BufferUtils', None)": [
                        201
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/IteratorUtils.java": {
                "old": {
                    "('org.apache.commons.collections#IteratorUtils', None)": [
                        849
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'toArray(Iterator,Class)')": [
                        858
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#IteratorUtils', 'toArray(Iterator,Class)')": [
                        857,
                        858,
                        859
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/MapUtils.java": {
                "old": {
                    "('org.apache.commons.collections#MapUtils', None)": [
                        1132
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#MapUtils', None)": [
                        1132
                    ],
                    "('org.apache.commons.collections#MapUtils', 'putAll(Map,Object)')": [
                        1141,
                        1147,
                        1157,
                        1162
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/SetUtils.java": {
                "old": {
                    "('org.apache.commons.collections#SetUtils', None)": [
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#SetUtils', None)": [
                        72
                    ]
                }
            }
        }
    },
    "bac08c04d4bcd15c20979cc9a37749247467a054": {
        "authored_data": "2013 Jan 21 01:15",
        "commit.message": "Document and fix some unchecked casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1436053 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "550d30609fc3fd600be4e73c5d546660988b69f4",
        "changes": {
            "src/main/java/org/apache/commons/collections/CollectionUtils.java": {
                "old": {
                    "('org.apache.commons.collections#CollectionUtils', None)": [
                        135,
                        148,
                        1208,
                        1240
                    ],
                    "('org.apache.commons.collections#CollectionUtils', 'isFull(Collection)')": [
                        1209,
                        1218
                    ],
                    "('org.apache.commons.collections#CollectionUtils', 'maxSize(Collection)')": [
                        1241,
                        1250
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#CollectionUtils', None)": [
                        135,
                        148
                    ],
                    "('org.apache.commons.collections#CollectionUtils', 'isFull(Collection)')": [
                        1208,
                        1217
                    ],
                    "('org.apache.commons.collections#CollectionUtils', 'maxSize(Collection)')": [
                        1239,
                        1248
                    ]
                }
            }
        }
    },
    "550d30609fc3fd600be4e73c5d546660988b69f4": {
        "authored_data": "2013 Jan 21 01:08",
        "commit.message": "Javadoc\nRemove unsafe @SuppressWarnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1436044 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "2c82062b7ce0c2ac36e7e52da1a22295a67d9edb",
        "changes": {
            "src/main/java/org/apache/commons/collections/bag/AbstractMapBag.java": {
                "old": {
                    "('org.apache.commons.collections.bag#AbstractMapBag', None)": [
                        455
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.bag#AbstractMapBag', None)": [
                        450,
                        451
                    ],
                    "('org.apache.commons.collections.bag#AbstractMapBag', 'toArray(T)')": [
                        460,
                        469
                    ]
                }
            }
        }
    },
    "2c82062b7ce0c2ac36e7e52da1a22295a67d9edb": {
        "authored_data": "2013 Jan 21 00:55",
        "commit.message": "Javadoc syntax fixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1436026 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "aed4c18c1385ffc77ea04de60423555b62675315",
        "changes": {
            "src/main/java/org/apache/commons/collections/Get.java": {
                "old": {
                    "(None, None)": [
                        23,
                        33,
                        38,
                        43,
                        48,
                        53,
                        58,
                        63,
                        68,
                        73
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        33,
                        38,
                        43,
                        48,
                        53,
                        58,
                        63,
                        68,
                        73
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/IterableGet.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/OrderedIterator.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/Trie.java": {
                "old": {
                    "(None, None)": [
                        101,
                        102,
                        103,
                        104,
                        105,
                        108,
                        112,
                        121,
                        122,
                        123,
                        126,
                        130,
                        219,
                        226,
                        229
                    ]
                },
                "new": {
                    "(None, None)": [
                        101,
                        102,
                        103,
                        104,
                        105,
                        108,
                        112,
                        121,
                        122,
                        123,
                        126,
                        130,
                        219,
                        226,
                        229
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/TrieUtils.java": {
                "old": {
                    "('org.apache.commons.collections#TrieUtils', None)": [
                        38,
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#TrieUtils', None)": [
                        38,
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/bag/TreeBag.java": {
                "old": {
                    "(None, None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/comparators/ComparableComparator.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/comparators/sequence/SequencesComparator.java": {
                "old": {
                    "(None, None)": [
                        44,
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        44,
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/iterators/ListIteratorWrapper.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/keyvalue/DefaultMapEntry.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/map/PassiveExpiringMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#PassiveExpiringMap', None)": [
                        68,
                        310
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#PassiveExpiringMap', None)": [
                        68,
                        69,
                        310
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/set/CompositeSet.java": {
                "old": {
                    "('org.apache.commons.collections.set#CompositeSet', None)": [
                        143,
                        144,
                        147
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.set#CompositeSet', None)": [
                        143,
                        144,
                        145,
                        148,
                        149
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/splitmap/TransformedMap.java": {
                "old": {
                    "(None, None)": [
                        52,
                        58,
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        52,
                        58,
                        59
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/trie/KeyAnalyzer.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/trie/PatriciaTrie.java": {
                "old": {
                    "('org.apache.commons.collections.trie#PatriciaTrie', None)": [
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.trie#PatriciaTrie', None)": [
                        143
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/trie/PatriciaTrieBase.java": {
                "old": {
                    "('org.apache.commons.collections.trie#PatriciaTrieBase', None)": [
                        67,
                        68,
                        69,
                        75,
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.trie#PatriciaTrieBase', None)": [
                        72,
                        73
                    ]
                }
            }
        }
    },
    "aed4c18c1385ffc77ea04de60423555b62675315": {
        "authored_data": "2013 Jan 20 21:50",
        "commit.message": "Findbugs fixes: implement Cloneable when defining clone method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1435981 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "8747f6eaab8545b18ff530e4c26be8fbc02537f6",
        "changes": {
            "src/main/java/org/apache/commons/collections/map/MultiKeyMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#MultiKeyMap', None)": [
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#MultiKeyMap', None)": [
                        76
                    ]
                }
            }
        }
    },
    "8747f6eaab8545b18ff530e4c26be8fbc02537f6": {
        "authored_data": "2013 Jan 20 21:48",
        "commit.message": "Findbugs fixes: use e.g. Integer.valueOf instead of new Integer and similar.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1435980 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "8aa8f5e67f3a4ffc48b3246e0974bf92cf7aa0a9",
        "changes": {
            "src/main/java/org/apache/commons/collections/MapUtils.java": {
                "old": {
                    "('org.apache.commons.collections#MapUtils', 'getByte(Map,K)')": [
                        221
                    ],
                    "('org.apache.commons.collections#MapUtils', 'getShort(Map,K)')": [
                        241
                    ],
                    "('org.apache.commons.collections#MapUtils', 'getInteger(Map,K)')": [
                        261
                    ],
                    "('org.apache.commons.collections#MapUtils', 'getLong(Map,K)')": [
                        281
                    ],
                    "('org.apache.commons.collections#MapUtils', 'getFloat(Map,K)')": [
                        301
                    ],
                    "('org.apache.commons.collections#MapUtils', 'getDouble(Map,K)')": [
                        321
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#MapUtils', 'getByte(Map,K)')": [
                        221
                    ],
                    "('org.apache.commons.collections#MapUtils', 'getShort(Map,K)')": [
                        241
                    ],
                    "('org.apache.commons.collections#MapUtils', 'getInteger(Map,K)')": [
                        261
                    ],
                    "('org.apache.commons.collections#MapUtils', 'getLong(Map,K)')": [
                        281
                    ],
                    "('org.apache.commons.collections#MapUtils', 'getFloat(Map,K)')": [
                        301
                    ],
                    "('org.apache.commons.collections#MapUtils', 'getDouble(Map,K)')": [
                        321
                    ]
                }
            }
        }
    }
}