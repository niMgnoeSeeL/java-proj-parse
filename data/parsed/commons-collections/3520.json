{
    "d0d74a4e1a39a0a461efee5322c235a046187d33": {
        "authored_data": "2002 Mar 20 00:25",
        "commit.message": "Fix deviation from Comparator contract\n[sgn(compare(x, y)) == -sgn(compare(y, x))]\n\nEliminate multiplication by switching order of objects passed to\nunderlying comparator.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130667 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Michael Smith",
        "pcid": "96cd122c69baa8fdeb54fe3b8c0c75ec82739d67",
        "changes": {
            "src/java/org/apache/commons/collections/comparators/ReverseComparator.java": {
                "old": {
                    "(None, None)": [
                        64,
                        93
                    ],
                    "('org.apache.commons.collections.comparators#ReverseComparator', None)": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        85
                    ],
                    "('org.apache.commons.collections.comparators#ReverseComparator', 'compare(Object,Object)')": [
                        89,
                        90,
                        91,
                        92
                    ]
                },
                "new": {
                    "(None, None)": [
                        64,
                        65
                    ],
                    "('org.apache.commons.collections.comparators#ReverseComparator', None)": [
                        72,
                        73,
                        76,
                        84,
                        85,
                        86,
                        87,
                        88
                    ],
                    "('org.apache.commons.collections.comparators#ReverseComparator', 'compare(Object,Object)')": [
                        92
                    ]
                }
            }
        }
    },
    "54c23b2da3b97ba926d81500d28bf6f0b4ae62af": {
        "authored_data": "2002 Mar 19 22:25",
        "commit.message": "now throws an exception for comparisons on an empty chain and\nadded no-op constructor\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130665 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Morgan James Delagrange",
        "pcid": "fedb45760005ba58b28548b4396c8109a1ca9213",
        "changes": {
            "src/java/org/apache/commons/collections/comparators/ComparatorChain.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('org.apache.commons.collections.comparators#ComparatorChain', None)": [
                        104
                    ],
                    "('org.apache.commons.collections.comparators#ComparatorChain', 'compare(Object,Object)')": [
                        277,
                        281
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('org.apache.commons.collections.comparators#ComparatorChain', None)": [
                        104,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303
                    ],
                    "('org.apache.commons.collections.comparators#ComparatorChain', 'checkChainIntegrity')": [
                        287,
                        288,
                        289
                    ],
                    "('org.apache.commons.collections.comparators#ComparatorChain', 'compare(Object,Object)')": [
                        304,
                        306,
                        309
                    ]
                }
            },
            "src/test/org/apache/commons/collections/comparators/TestComparatorChain.java": {
                "new": {
                    "('org.apache.commons.collections.comparators#TestComparatorChain', None)": [
                        32,
                        33,
                        42,
                        43,
                        51,
                        52,
                        53,
                        54,
                        55,
                        65,
                        66,
                        75,
                        76,
                        77
                    ],
                    "('org.apache.commons.collections.comparators#TestComparatorChain', 'testNoopComparatorChain')": [
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('org.apache.commons.collections.comparators#TestComparatorChain', 'testBadNoopComparatorChain')": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50
                    ],
                    "('org.apache.commons.collections.comparators#TestComparatorChain', 'testListComparatorChain')": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ],
                    "('org.apache.commons.collections.comparators#TestComparatorChain', 'testBadListComparatorChain')": [
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74
                    ]
                }
            }
        }
    },
    "fedb45760005ba58b28548b4396c8109a1ca9213": {
        "authored_data": "2002 Mar 19 13:19",
        "commit.message": "Fixed API to use new interfaces defined by PriorityQueue.  Now supports\nobjects that do not implement comparable.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130664 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Michael Smith",
        "pcid": "742ffb2d8d4cd75932144adf192f8cec12d7fc9f",
        "changes": {
            "src/java/org/apache/commons/collections/SynchronizedPriorityQueue.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('org.apache.commons.collections#SynchronizedPriorityQueue', 'insert(Comparable)')": [
                        105
                    ],
                    "('org.apache.commons.collections#SynchronizedPriorityQueue', 'peek')": [
                        116
                    ],
                    "('org.apache.commons.collections#SynchronizedPriorityQueue', 'pop')": [
                        127
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('org.apache.commons.collections#SynchronizedPriorityQueue', 'insert(Object)')": [
                        105
                    ],
                    "('org.apache.commons.collections#SynchronizedPriorityQueue', 'peek')": [
                        116
                    ],
                    "('org.apache.commons.collections#SynchronizedPriorityQueue', 'pop')": [
                        127
                    ]
                }
            }
        }
    },
    "742ffb2d8d4cd75932144adf192f8cec12d7fc9f": {
        "authored_data": "2002 Mar 19 05:09",
        "commit.message": "Added static method to retrieve a shared instance.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130663 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Michael Smith",
        "pcid": "ea8731a37449bd7fbd5050372c85956160aea7e2",
        "changes": {
            "src/java/org/apache/commons/collections/comparators/ComparableComparator.java": {
                "old": {
                    "(None, None)": [
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        72
                    ],
                    "('org.apache.commons.collections.comparators#ComparableComparator', None)": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        87,
                        88,
                        89
                    ],
                    "('org.apache.commons.collections.comparators#ComparableComparator', 'getInstance')": [
                        85,
                        86
                    ]
                }
            }
        }
    },
    "ea8731a37449bd7fbd5050372c85956160aea7e2": {
        "authored_data": "2002 Mar 19 04:49",
        "commit.message": "Fixed copyright date in license of TestBinaryHeap and added myself as an\nauthor for BinaryHeap for my recent changes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130662 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Michael Smith",
        "pcid": "d5ca0eeb3c5966d89f4036500768f1e59ff6df76",
        "changes": {
            "src/java/org/apache/commons/collections/BinaryHeap.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        71
                    ]
                }
            },
            "src/test/org/apache/commons/collections/TestBinaryHeap.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        10,
                        75
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        10,
                        75
                    ]
                }
            }
        }
    },
    "d5ca0eeb3c5966d89f4036500768f1e59ff6df76": {
        "authored_data": "2002 Mar 19 04:34",
        "commit.message": "Changed PriorityQueue and BinaryHeap to allow objects that do not\nimplement Comparable.  BinaryHeap implements this by accepting an\noptional Comparator in its constructor.  If no comparator is specified,\nthe object's natural ordering is used (i.e. it is cast to a Comparable\nand compared using its compareTo method)\n\nAlso added basic tests for BinaryHeap\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130661 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Michael Smith",
        "pcid": "94a2ba779b30344101d09f31e965dd42d324051b",
        "changes": {
            "src/java/org/apache/commons/collections/BinaryHeap.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('org.apache.commons.collections#BinaryHeap', None)": [
                        77,
                        134,
                        257,
                        258,
                        259,
                        260,
                        261,
                        291,
                        292,
                        293
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'insert(Comparable)')": [
                        173
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'peek')": [
                        188
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'pop')": [
                        200,
                        201,
                        202
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'percolateDownMinHeap(int)')": [
                        227,
                        238,
                        244
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'percolateDownMaxHeap(int)')": [
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'percolateUpMinHeap(Comparable)')": [
                        299,
                        306
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'percolateUpMaxHeap(Comparable)')": [
                        324,
                        329
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'grow')": [
                        346,
                        347
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        64
                    ],
                    "('org.apache.commons.collections#BinaryHeap', None)": [
                        78,
                        80,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        373,
                        374,
                        375
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'insert(Object)')": [
                        200
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'peek')": [
                        215
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'pop')": [
                        227,
                        228,
                        229
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'percolateDownMinHeap(int)')": [
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'percolateDownMaxHeap(int)')": [
                        289,
                        290,
                        291,
                        302,
                        308
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'percolateUpMinHeap(Object)')": [
                        326,
                        333
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'percolateUpMaxHeap(Object)')": [
                        351,
                        356
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'compare(Object,Object)')": [
                        368,
                        369,
                        370,
                        371,
                        372
                    ],
                    "('org.apache.commons.collections#BinaryHeap', 'grow')": [
                        381
                    ]
                }
            },
            "src/java/org/apache/commons/collections/PriorityQueue.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        90,
                        96,
                        98,
                        104,
                        106
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        89,
                        90,
                        91,
                        92,
                        94,
                        100,
                        102,
                        108,
                        110
                    ]
                }
            },
            "src/test/org/apache/commons/collections/TestAll.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        70
                    ],
                    "('org.apache.commons.collections#TestAll', 'suite')": [
                        83
                    ]
                }
            }
        }
    },
    "94a2ba779b30344101d09f31e965dd42d324051b": {
        "authored_data": "2002 Mar 19 01:37",
        "commit.message": "Test for null passed to setArray in addition to passing null to the\nconstructor.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130660 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Michael Smith",
        "pcid": "d6a241858292c42d08fca1668483e3b7805974e0",
        "changes": {
            "src/test/org/apache/commons/collections/TestArrayIterator.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        76
                    ],
                    "('org.apache.commons.collections#TestArrayIterator', 'testNullToConstructor')": [
                        126
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        76,
                        141,
                        142,
                        143
                    ],
                    "('org.apache.commons.collections#TestArrayIterator', 'testNullArray')": [
                        126,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140
                    ]
                }
            }
        }
    },
    "d6a241858292c42d08fca1668483e3b7805974e0": {
        "authored_data": "2002 Mar 19 01:33",
        "commit.message": "Documentation updates and new test case for specifying null to the\nArrayIterator constructor or the setArray(Object) method.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130659 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Michael Smith",
        "pcid": "96b336fb95553ac01346bd9b00bb84bcbd8bf3b4",
        "changes": {
            "src/java/org/apache/commons/collections/ArrayIterator.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        67,
                        72
                    ],
                    "('org.apache.commons.collections#ArrayIterator', None)": [
                        83
                    ],
                    "('org.apache.commons.collections#ArrayIterator', 'setArray(Object)')": [
                        117,
                        118,
                        119
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        67,
                        72
                    ],
                    "('org.apache.commons.collections#ArrayIterator', None)": [
                        81,
                        82,
                        83,
                        84,
                        85,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        158,
                        159,
                        160
                    ],
                    "('org.apache.commons.collections#ArrayIterator', 'setArray(Object)')": [
                        164,
                        165,
                        166,
                        167
                    ]
                }
            },
            "src/test/org/apache/commons/collections/TestArrayIterator.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        76,
                        132,
                        133,
                        134,
                        135
                    ],
                    "('org.apache.commons.collections#TestArrayIterator', None)": [
                        125
                    ],
                    "('org.apache.commons.collections#TestArrayIterator', 'testNullToConstructor')": [
                        126,
                        127,
                        128,
                        129,
                        130,
                        131
                    ]
                }
            }
        }
    }
}