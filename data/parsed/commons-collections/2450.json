{
    "60a4d56b071ef3f6bcec662b8635118f4aec882a": {
        "authored_data": "2004 Jun 01 22:57",
        "commit.message": "Make serializable\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@131761 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "936f931fdd590b46006244015637052661e681e8",
        "changes": {
            "src/java/org/apache/commons/collections/buffer/UnboundedFifoBuffer.java": {
                "old": {
                    "(None, None)": [
                        47
                    ],
                    "('org.apache.commons.collections.buffer#UnboundedFifoBuffer', None)": [
                        55,
                        56,
                        58,
                        60,
                        62
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19,
                        20,
                        21,
                        49,
                        50,
                        53
                    ],
                    "('org.apache.commons.collections.buffer#UnboundedFifoBuffer', None)": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        67,
                        69,
                        71,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        132,
                        133,
                        134
                    ],
                    "('org.apache.commons.collections.buffer#UnboundedFifoBuffer', 'writeObject(ObjectOutputStream)')": [
                        108,
                        109,
                        110,
                        111,
                        112
                    ],
                    "('org.apache.commons.collections.buffer#UnboundedFifoBuffer', 'readObject(ObjectInputStream)')": [
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131
                    ]
                }
            }
        }
    },
    "936f931fdd590b46006244015637052661e681e8": {
        "authored_data": "2004 Jun 01 22:55",
        "commit.message": "Add serialization tests\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@131760 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "42b98477bd4866b759bab1dc0e4b7ef8537762f1",
        "changes": {
            "src/test/org/apache/commons/collections/buffer/TestBlockingBuffer.java": {
                "old": {
                    "(None, None)": [
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501
                    ],
                    "('org.apache.commons.collections.buffer#TestBlockingBuffer', None)": [
                        58,
                        59,
                        487
                    ],
                    "('org.apache.commons.collections.buffer#TestBlockingBuffer', 'isEqualsCheckable')": [
                        60,
                        61
                    ],
                    "('org.apache.commons.collections.buffer#TestBlockingBuffer', 'getCompatibilityVersion')": [
                        488,
                        489
                    ]
                }
            },
            "src/test/org/apache/commons/collections/buffer/TestUnboundedFifoBuffer.java": {
                "old": {
                    "(None, None)": [
                        30,
                        147
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157
                    ],
                    "('org.apache.commons.collections.buffer#TestUnboundedFifoBuffer', None)": [
                        146
                    ],
                    "('org.apache.commons.collections.buffer#TestUnboundedFifoBuffer', 'getCompatibilityVersion')": [
                        147,
                        148
                    ]
                }
            }
        }
    },
    "42b98477bd4866b759bab1dc0e4b7ef8537762f1": {
        "authored_data": "2004 Jun 01 22:55",
        "commit.message": "Add isEqualsCheckable and fix testSerializeDeserializeThenCompare in AbstractTestObject\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@131759 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "3f58c1e6f0c2499e34d18d6fe34351559919069a",
        "changes": {
            "src/test/org/apache/commons/collections/AbstractTestObject.java": {
                "old": {
                    "(None, None)": [
                        40
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', 'testSerializeDeserializeThenCompare')": [
                        143
                    ]
                },
                "new": {
                    "(None, None)": [
                        40
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', 'isTestSerialization')": [
                        95
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', None)": [
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        153
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', 'isEqualsCheckable')": [
                        102
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', 'testSerializeDeserializeThenCompare')": [
                        151,
                        152
                    ]
                }
            },
            "src/test/org/apache/commons/collections/collection/AbstractTestCollection.java": {
                "old": {
                    "(None, None)": [
                        115
                    ],
                    "('org.apache.commons.collections.collection#AbstractTestCollection', None)": [
                        233
                    ]
                },
                "new": {
                    "(None, None)": [
                        115
                    ],
                    "('org.apache.commons.collections.collection#AbstractTestCollection', None)": [
                        233
                    ]
                }
            }
        }
    },
    "3f58c1e6f0c2499e34d18d6fe34351559919069a": {
        "authored_data": "2004 May 31 22:39",
        "commit.message": "Add isTestSerialization() method to block serialization tests\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@131758 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "111e7b39de04177a37ab24d90c3fe8010a6ff0c2",
        "changes": {
            "src/test/org/apache/commons/collections/AbstractTestObject.java": {
                "old": {
                    "(None, None)": [
                        40
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', 'testSerializeDeserializeThenCompare')": [
                        126
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', 'testSimpleSerialization')": [
                        149
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', 'testCanonicalEmptyCollectionExists')": [
                        160
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', 'testCanonicalFullCollectionExists')": [
                        176
                    ]
                },
                "new": {
                    "(None, None)": [
                        40
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', 'supportsFullCollections')": [
                        87
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', None)": [
                        88,
                        89,
                        90,
                        91,
                        92,
                        93
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', 'isTestSerialization')": [
                        94
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', 'testSerializeDeserializeThenCompare')": [
                        134
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', 'testSimpleSerialization')": [
                        157
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', 'testCanonicalEmptyCollectionExists')": [
                        168
                    ],
                    "('org.apache.commons.collections#AbstractTestObject', 'testCanonicalFullCollectionExists')": [
                        184
                    ]
                }
            },
            "src/test/org/apache/commons/collections/bag/AbstractTestBag.java": {
                "old": {
                    "(None, None)": [
                        39
                    ],
                    "('org.apache.commons.collections.bag#AbstractTestBag', 'testEmptyBagSerialization')": [
                        428
                    ],
                    "('org.apache.commons.collections.bag#AbstractTestBag', 'testFullBagSerialization')": [
                        445
                    ],
                    "('org.apache.commons.collections.bag#AbstractTestBag', 'testEmptyBagCompatibility')": [
                        461
                    ],
                    "('org.apache.commons.collections.bag#AbstractTestBag', 'testFullBagCompatibility')": [
                        480
                    ]
                },
                "new": {
                    "(None, None)": [
                        39
                    ],
                    "('org.apache.commons.collections.bag#AbstractTestBag', 'testEmptyBagSerialization')": [
                        428
                    ],
                    "('org.apache.commons.collections.bag#AbstractTestBag', 'testFullBagSerialization')": [
                        445
                    ],
                    "('org.apache.commons.collections.bag#AbstractTestBag', 'testEmptyBagCompatibility')": [
                        461
                    ],
                    "('org.apache.commons.collections.bag#AbstractTestBag', 'testFullBagCompatibility')": [
                        480
                    ]
                }
            },
            "src/test/org/apache/commons/collections/collection/AbstractTestCollection.java": {
                "old": {
                    "(None, None)": [
                        115
                    ],
                    "('org.apache.commons.collections.collection#AbstractTestCollection', 'testSerializeDeserializeThenCompare')": [
                        1303,
                        1317
                    ]
                },
                "new": {
                    "(None, None)": [
                        115
                    ],
                    "('org.apache.commons.collections.collection#AbstractTestCollection', 'testSerializeDeserializeThenCompare')": [
                        1303,
                        1317
                    ]
                }
            },
            "src/test/org/apache/commons/collections/list/AbstractTestList.java": {
                "old": {
                    "(None, None)": [
                        48
                    ],
                    "('org.apache.commons.collections.list#AbstractTestList', 'testEmptyListSerialization')": [
                        949
                    ],
                    "('org.apache.commons.collections.list#AbstractTestList', 'testFullListSerialization')": [
                        962
                    ],
                    "('org.apache.commons.collections.list#AbstractTestList', 'testEmptyListCompatibility')": [
                        986
                    ],
                    "('org.apache.commons.collections.list#AbstractTestList', 'testFullListCompatibility')": [
                        1008
                    ]
                },
                "new": {
                    "(None, None)": [
                        48
                    ],
                    "('org.apache.commons.collections.list#AbstractTestList', 'testEmptyListSerialization')": [
                        949
                    ],
                    "('org.apache.commons.collections.list#AbstractTestList', 'testFullListSerialization')": [
                        962
                    ],
                    "('org.apache.commons.collections.list#AbstractTestList', 'testEmptyListCompatibility')": [
                        986
                    ],
                    "('org.apache.commons.collections.list#AbstractTestList', 'testFullListCompatibility')": [
                        1008
                    ],
                    "('org.apache.commons.collections.list#AbstractTestList', None)": [
                        1101,
                        1102,
                        1103
                    ]
                }
            },
            "src/test/org/apache/commons/collections/map/AbstractTestMap.java": {
                "old": {
                    "(None, None)": [
                        120
                    ],
                    "('org.apache.commons.collections.map#AbstractTestMap', 'testEmptyMapCompatibility')": [
                        742
                    ],
                    "('org.apache.commons.collections.map#AbstractTestMap', 'testFullMapCompatibility')": [
                        763
                    ],
                    "('org.apache.commons.collections.map#AbstractTestMap', None)": [
                        1258,
                        1259,
                        1260,
                        1261,
                        1262,
                        1263,
                        1264,
                        1418,
                        1419,
                        1420,
                        1421,
                        1422,
                        1487,
                        1488,
                        1489,
                        1490,
                        1491,
                        1492,
                        1493
                    ]
                },
                "new": {
                    "(None, None)": [
                        120
                    ],
                    "('org.apache.commons.collections.map#AbstractTestMap', 'testEmptyMapCompatibility')": [
                        742
                    ],
                    "('org.apache.commons.collections.map#AbstractTestMap', 'testFullMapCompatibility')": [
                        763
                    ],
                    "('org.apache.commons.collections.map#AbstractTestMap', None)": [
                        1258,
                        1259,
                        1260,
                        1261,
                        1415,
                        1416,
                        1481,
                        1482,
                        1483,
                        1484
                    ]
                }
            },
            "src/test/org/apache/commons/collections/map/AbstractTestSortedMap.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.collections.map#AbstractTestSortedMap', None)": [
                        158,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.collections.map#AbstractTestSortedMap', None)": [
                        158,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176
                    ]
                }
            },
            "src/test/org/apache/commons/collections/map/TestLinkedMap.java": {
                "old": {
                    "(None, None)": [
                        35
                    ],
                    "('org.apache.commons.collections.map#TestLinkedMap', None)": [
                        255
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ],
                    "('org.apache.commons.collections.map#TestLinkedMap', None)": [
                        255,
                        256,
                        257
                    ]
                }
            },
            "src/test/org/apache/commons/collections/map/TestListOrderedMap.java": {
                "old": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.commons.collections.map#TestListOrderedMap', None)": [
                        191
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.commons.collections.map#TestListOrderedMap', None)": [
                        191,
                        192,
                        193
                    ]
                }
            },
            "src/test/org/apache/commons/collections/set/AbstractTestSortedSet.java": {
                "old": {
                    "(None, None)": [
                        35
                    ],
                    "('org.apache.commons.collections.set#AbstractTestSortedSet', None)": [
                        287
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ],
                    "('org.apache.commons.collections.set#AbstractTestSortedSet', None)": [
                        287,
                        288,
                        289,
                        290,
                        291
                    ]
                }
            }
        }
    },
    "111e7b39de04177a37ab24d90c3fe8010a6ff0c2": {
        "authored_data": "2004 May 31 19:09",
        "commit.message": "Add isEqualsCheckable and fix testSerializeDeserializeThenCompare in Collection\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@131757 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "145b19acc4e6b1a2b1812e49a93c4285f2e79c75",
        "changes": {
            "src/test/org/apache/commons/collections/collection/AbstractTestCollection.java": {
                "old": {
                    "(None, None)": [
                        115,
                        1317,
                        1318
                    ],
                    "('org.apache.commons.collections.collection#AbstractTestCollection', 'testSerializeDeserializeThenCompare')": [
                        1304,
                        1316
                    ]
                },
                "new": {
                    "(None, None)": [
                        115,
                        1328,
                        1329,
                        1330,
                        1331
                    ],
                    "('org.apache.commons.collections.collection#AbstractTestCollection', 'isFailFastSupported')": [
                        228
                    ],
                    "('org.apache.commons.collections.collection#AbstractTestCollection', None)": [
                        229,
                        230,
                        231,
                        232,
                        233,
                        234
                    ],
                    "('org.apache.commons.collections.collection#AbstractTestCollection', 'isEqualsCheckable')": [
                        235
                    ],
                    "('org.apache.commons.collections.collection#AbstractTestCollection', 'testSerializeDeserializeThenCompare')": [
                        1312,
                        1313,
                        1314,
                        1326,
                        1327
                    ]
                }
            },
            "src/test/org/apache/commons/collections/list/AbstractTestList.java": {
                "old": {
                    "(None, None)": [
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        48
                    ],
                    "('org.apache.commons.collections.list#AbstractTestList', None)": [
                        113,
                        114,
                        117,
                        118,
                        119
                    ],
                    "('org.apache.commons.collections.list#AbstractTestList', 'isEqualsCheckable')": [
                        115,
                        116
                    ]
                }
            },
            "src/test/org/apache/commons/collections/set/AbstractTestSet.java": {
                "old": {
                    "(None, None)": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        41
                    ],
                    "('org.apache.commons.collections.set#AbstractTestSet', None)": [
                        75,
                        76,
                        77,
                        80,
                        81
                    ],
                    "('org.apache.commons.collections.set#AbstractTestSet', 'isEqualsCheckable')": [
                        78,
                        79
                    ]
                }
            }
        }
    },
    "145b19acc4e6b1a2b1812e49a93c4285f2e79c75": {
        "authored_data": "2004 May 31 16:43",
        "commit.message": "Add PredicateDecorator to provide consistent access to predicates\nbased on code from Brian Lloyd-Newberry\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@131756 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "82db8c71956aa485c61f661b1f954df57265bdb6",
        "changes": {
            "src/java/org/apache/commons/collections/functors/AllPredicate.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.collections.functors#AllPredicate', None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.collections.functors#AllPredicate', None)": [
                        31
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/AndPredicate.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.collections.functors#AndPredicate', None)": [
                        30,
                        79,
                        81,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93
                    ],
                    "('org.apache.commons.collections.functors#AndPredicate', 'getPredicate1')": [
                        84,
                        85
                    ],
                    "('org.apache.commons.collections.functors#AndPredicate', 'getPredicate2')": [
                        94,
                        95
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.collections.functors#AndPredicate', None)": [
                        30,
                        79,
                        81
                    ],
                    "('org.apache.commons.collections.functors#AndPredicate', 'getPredicates')": [
                        84,
                        85
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/AnyPredicate.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.collections.functors#AnyPredicate', None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.collections.functors#AnyPredicate', None)": [
                        31
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/NonePredicate.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.collections.functors#NonePredicate', None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.collections.functors#NonePredicate', None)": [
                        31
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/NotPredicate.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.collections.functors#NotPredicate', None)": [
                        30,
                        74,
                        76
                    ],
                    "('org.apache.commons.collections.functors#NotPredicate', 'getPredicate')": [
                        79,
                        80
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.collections.functors#NotPredicate', None)": [
                        30,
                        74,
                        76
                    ],
                    "('org.apache.commons.collections.functors#NotPredicate', 'getPredicates')": [
                        79,
                        80
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/NullIsExceptionPredicate.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.collections.functors#NullIsExceptionPredicate', None)": [
                        31,
                        80,
                        82
                    ],
                    "('org.apache.commons.collections.functors#NullIsExceptionPredicate', 'getPredicate')": [
                        85,
                        86
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.collections.functors#NullIsExceptionPredicate', None)": [
                        31,
                        80,
                        82
                    ],
                    "('org.apache.commons.collections.functors#NullIsExceptionPredicate', 'getPredicates')": [
                        85,
                        86
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/NullIsFalsePredicate.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.collections.functors#NullIsFalsePredicate', None)": [
                        30,
                        78,
                        80
                    ],
                    "('org.apache.commons.collections.functors#NullIsFalsePredicate', 'getPredicate')": [
                        83,
                        84
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.collections.functors#NullIsFalsePredicate', None)": [
                        30,
                        78,
                        80
                    ],
                    "('org.apache.commons.collections.functors#NullIsFalsePredicate', 'getPredicates')": [
                        83,
                        84
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/NullIsTruePredicate.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.collections.functors#NullIsTruePredicate', None)": [
                        30,
                        78,
                        80
                    ],
                    "('org.apache.commons.collections.functors#NullIsTruePredicate', 'getPredicate')": [
                        83,
                        84
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.collections.functors#NullIsTruePredicate', None)": [
                        30,
                        78,
                        80
                    ],
                    "('org.apache.commons.collections.functors#NullIsTruePredicate', 'getPredicates')": [
                        83,
                        84
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/OnePredicate.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.collections.functors#OnePredicate', None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.collections.functors#OnePredicate', None)": [
                        31
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/OrPredicate.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.collections.functors#OrPredicate', None)": [
                        30,
                        79,
                        81,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92
                    ],
                    "('org.apache.commons.collections.functors#OrPredicate', 'getPredicate1')": [
                        84,
                        85
                    ],
                    "('org.apache.commons.collections.functors#OrPredicate', 'getPredicate2')": [
                        93,
                        94
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.collections.functors#OrPredicate', None)": [
                        30,
                        79,
                        81
                    ],
                    "('org.apache.commons.collections.functors#OrPredicate', 'getPredicates')": [
                        84,
                        85
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/TransformedPredicate.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.collections.functors#TransformedPredicate', None)": [
                        32,
                        85,
                        87
                    ],
                    "('org.apache.commons.collections.functors#TransformedPredicate', 'getPredicate')": [
                        89,
                        90
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.collections.functors#TransformedPredicate', None)": [
                        32,
                        85,
                        87,
                        88
                    ],
                    "('org.apache.commons.collections.functors#TransformedPredicate', 'getPredicates')": [
                        90,
                        91
                    ]
                }
            }
        }
    },
    "457b48b89280190624ea49371bb606423b2f5724": {
        "authored_data": "2004 May 26 21:59",
        "commit.message": "Replace IteratorUtils calls with direct implementation calls\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@131754 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "19a707c06ded92cd315cfd2b4fc78797f2395050",
        "changes": {
            "src/java/org/apache/commons/collections/MultiHashMap.java": {
                "old": {
                    "(None, None)": [
                        53
                    ],
                    "('org.apache.commons.collections#MultiHashMap', 'iterator(Object)')": [
                        202
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        55
                    ],
                    "('org.apache.commons.collections#MultiHashMap', 'iterator(Object)')": [
                        204
                    ]
                }
            },
            "src/java/org/apache/commons/collections/bidimap/TreeBidiMap.java": {
                "old": {
                    "(None, None)": [
                        27,
                        70
                    ],
                    "('org.apache.commons.collections.bidimap#TreeBidiMap', 'mapIterator')": [
                        409
                    ],
                    "('org.apache.commons.collections.bidimap#TreeBidiMap', 'orderedMapIterator')": [
                        423
                    ],
                    "('org.apache.commons.collections.bidimap#TreeBidiMap', None)": [
                        2051,
                        2058
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        70
                    ],
                    "('org.apache.commons.collections.bidimap#TreeBidiMap', 'mapIterator')": [
                        409
                    ],
                    "('org.apache.commons.collections.bidimap#TreeBidiMap', 'orderedMapIterator')": [
                        423
                    ],
                    "('org.apache.commons.collections.bidimap#TreeBidiMap', None)": [
                        2051,
                        2058
                    ]
                }
            },
            "src/java/org/apache/commons/collections/collection/CompositeCollection.java": {
                "old": {
                    "(None, None)": [
                        24,
                        36
                    ],
                    "('org.apache.commons.collections.collection#CompositeCollection', 'iterator')": [
                        140
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        36
                    ],
                    "('org.apache.commons.collections.collection#CompositeCollection', 'iterator')": [
                        140
                    ]
                }
            },
            "src/java/org/apache/commons/collections/iterators/IteratorChain.java": {
                "old": {
                    "(None, None)": [
                        23,
                        46
                    ],
                    "('org.apache.commons.collections.iterators#IteratorChain', 'updateCurrentIterator')": [
                        225
                    ]
                },
                "new": {
                    "(None, None)": [
                        45
                    ],
                    "('org.apache.commons.collections.iterators#IteratorChain', 'updateCurrentIterator')": [
                        224
                    ]
                }
            },
            "src/java/org/apache/commons/collections/list/TreeList.java": {
                "old": {
                    "(None, None)": [
                        53
                    ],
                    "('org.apache.commons.collections.list#TreeList', 'listIterator(int)')": [
                        138
                    ]
                },
                "new": {
                    "(None, None)": [
                        53
                    ],
                    "('org.apache.commons.collections.list#TreeList', 'listIterator(int)')": [
                        138
                    ]
                }
            },
            "src/java/org/apache/commons/collections/map/AbstractHashedMap.java": {
                "old": {
                    "(None, None)": [
                        31,
                        49
                    ],
                    "('org.apache.commons.collections.map#AbstractHashedMap', 'mapIterator')": [
                        716
                    ],
                    "('org.apache.commons.collections.map#AbstractHashedMap', 'createEntrySetIterator')": [
                        782
                    ],
                    "('org.apache.commons.collections.map#AbstractHashedMap', 'createKeySetIterator')": [
                        871
                    ],
                    "('org.apache.commons.collections.map#AbstractHashedMap', 'createValuesIterator')": [
                        948
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        34,
                        50
                    ],
                    "('org.apache.commons.collections.map#AbstractHashedMap', 'mapIterator')": [
                        717
                    ],
                    "('org.apache.commons.collections.map#AbstractHashedMap', 'createEntrySetIterator')": [
                        783
                    ],
                    "('org.apache.commons.collections.map#AbstractHashedMap', 'createKeySetIterator')": [
                        872
                    ],
                    "('org.apache.commons.collections.map#AbstractHashedMap', 'createValuesIterator')": [
                        949
                    ]
                }
            },
            "src/java/org/apache/commons/collections/map/AbstractLinkedMap.java": {
                "old": {
                    "(None, None)": [
                        23,
                        59
                    ],
                    "('org.apache.commons.collections.map#AbstractLinkedMap', 'mapIterator')": [
                        334
                    ],
                    "('org.apache.commons.collections.map#AbstractLinkedMap', 'orderedMapIterator')": [
                        351
                    ],
                    "('org.apache.commons.collections.map#AbstractLinkedMap', 'createEntrySetIterator')": [
                        407
                    ],
                    "('org.apache.commons.collections.map#AbstractLinkedMap', 'createKeySetIterator')": [
                        439
                    ],
                    "('org.apache.commons.collections.map#AbstractLinkedMap', 'createValuesIterator')": [
                        471
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        60
                    ],
                    "('org.apache.commons.collections.map#AbstractLinkedMap', 'mapIterator')": [
                        335
                    ],
                    "('org.apache.commons.collections.map#AbstractLinkedMap', 'orderedMapIterator')": [
                        352
                    ],
                    "('org.apache.commons.collections.map#AbstractLinkedMap', 'createEntrySetIterator')": [
                        408
                    ],
                    "('org.apache.commons.collections.map#AbstractLinkedMap', 'createKeySetIterator')": [
                        440
                    ],
                    "('org.apache.commons.collections.map#AbstractLinkedMap', 'createValuesIterator')": [
                        472
                    ]
                }
            },
            "src/java/org/apache/commons/collections/map/Flat3Map.java": {
                "old": {
                    "(None, None)": [
                        31,
                        63
                    ],
                    "('org.apache.commons.collections.map#Flat3Map', 'mapIterator')": [
                        569
                    ],
                    "('org.apache.commons.collections.map#Flat3Map', None)": [
                        720,
                        888,
                        951
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        34,
                        64
                    ],
                    "('org.apache.commons.collections.map#Flat3Map', 'mapIterator')": [
                        570
                    ],
                    "('org.apache.commons.collections.map#Flat3Map', None)": [
                        721,
                        889,
                        952
                    ]
                }
            }
        }
    },
    "19a707c06ded92cd315cfd2b4fc78797f2395050": {
        "authored_data": "2004 May 26 21:56",
        "commit.message": "Ensure empty iterator implementation is as per v3.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@131753 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "bfd55bc3ad365e7a2925123471bafbeb12f7031c",
        "changes": {
            "src/java/org/apache/commons/collections/IteratorUtils.java": {
                "old": {
                    "(None, None)": [
                        66
                    ],
                    "('org.apache.commons.collections#IteratorUtils', None)": [
                        78,
                        85,
                        92,
                        116,
                        131,
                        184,
                        212,
                        241,
                        276
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        67
                    ],
                    "('org.apache.commons.collections#IteratorUtils', None)": [
                        79,
                        86,
                        93,
                        117,
                        132,
                        185,
                        213,
                        242,
                        277
                    ]
                }
            },
            "src/test/org/apache/commons/collections/TestIteratorUtils.java": {
                "old": {
                    "(None, None)": [
                        35
                    ],
                    "('org.apache.commons.collections#TestIteratorUtils', 'testEmptyOrderedIterator')": [
                        496
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        36
                    ],
                    "('org.apache.commons.collections#TestIteratorUtils', 'testEmptyOrderedIterator')": [
                        497,
                        501
                    ]
                }
            }
        }
    },
    "bfd55bc3ad365e7a2925123471bafbeb12f7031c": {
        "authored_data": "2004 May 26 21:53",
        "commit.message": "Ensure implementation is as per v3.0\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@131752 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "a04f82b5a70934cd2f7c8f8313e0782a6a2e16ba",
        "changes": {
            "src/java/org/apache/commons/collections/iterators/EmptyListIterator.java": {
                "old": {
                    "(None, None)": [
                        20,
                        31
                    ],
                    "('org.apache.commons.collections.iterators#EmptyListIterator', None)": [
                        35,
                        47,
                        48,
                        49,
                        50,
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.collections.iterators#EmptyListIterator', None)": [
                        34
                    ]
                }
            }
        }
    }
}