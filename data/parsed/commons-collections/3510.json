{
    "59a50d1b9b3706aa6cdd60b4a348019dd30208e8": {
        "authored_data": "2002 Mar 25 21:20",
        "commit.message": "List constructors for ComparatorChain no longer perform defensive copies\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130676 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Morgan James Delagrange",
        "pcid": "80ea89fd05deb7cf51ba37f8b6d3f4758bfb7c90",
        "changes": {
            "src/java/org/apache/commons/collections/comparators/ComparatorChain.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        88
                    ],
                    "('org.apache.commons.collections.comparators#ComparatorChain', None)": [
                        165,
                        166,
                        167,
                        172,
                        173
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        88,
                        89,
                        90
                    ],
                    "('org.apache.commons.collections.comparators#ComparatorChain', None)": [
                        167,
                        168,
                        173
                    ]
                }
            }
        }
    },
    "80ea89fd05deb7cf51ba37f8b6d3f4758bfb7c90": {
        "authored_data": "2002 Mar 25 05:50",
        "commit.message": "Renamed AbstractBag to DefaultMapBag.  The implementation is more of a\n\"default map based implementation\" and differs in design from the\nAbstractSet, AbstractMap classes which do not make assumptions about\nhow they might be implemented.  To be consistent with JDK AbstractX\ncollections, an AbstractBag class should just be providing default\nimplementations that could be used regardless of underlying storage\nmechanism.  For example, the add(Object) method would call the abstract\nadd(Object,int) method passing the object and 1. Since this\nimplementation assumes a Map based storage for the Bag, it does not\nfollow the AbstractX pattern, and thus has been renamed.  There is\nstill room for future addition of an AbstractBag that does not assume\na storage data structure.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130675 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Michael Smith",
        "pcid": "e25229d271c20c4858fb6362efb7c5571bfe793d",
        "changes": {
            "src/java/org/apache/commons/collections/HashBag.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('org.apache.commons.collections#HashBag', None)": [
                        73
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('org.apache.commons.collections#HashBag', None)": [
                        73
                    ]
                }
            },
            "src/java/org/apache/commons/collections/TreeBag.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('org.apache.commons.collections#TreeBag', None)": [
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('org.apache.commons.collections#TreeBag', None)": [
                        76
                    ]
                }
            }
        }
    },
    "e25229d271c20c4858fb6362efb7c5571bfe793d": {
        "authored_data": "2002 Mar 24 22:00",
        "commit.message": "Updated javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130674 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Michael Smith",
        "pcid": "63cf00bf0e331ab087a6a3180df02d0c20b3dc56",
        "changes": {
            "src/java/org/apache/commons/collections/BeanMap.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('org.apache.commons.collections#BeanMap', None)": [
                        391,
                        392
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('org.apache.commons.collections#BeanMap', None)": [
                        391,
                        392
                    ]
                }
            }
        }
    },
    "63cf00bf0e331ab087a6a3180df02d0c20b3dc56": {
        "authored_data": "2002 Mar 24 21:53",
        "commit.message": "Made BeanMap.values() and BeanMap.keySet() unmodifiable.  This brings it more\nin line with the Map contract where any modifications will throw\nUnsupportedOperationException rather than allow modifications that are not\nreflected in the underlying map.  This also keeps values(), keySet() and\nentrySet() consistent with each other.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130673 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Michael Smith",
        "pcid": "302cc6fd284b76839d86531698f2b2c5d89be4a9",
        "changes": {
            "src/java/org/apache/commons/collections/BeanMap.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('org.apache.commons.collections#BeanMap', None)": [
                        345,
                        346
                    ],
                    "('org.apache.commons.collections#BeanMap', 'keySet')": [
                        349
                    ],
                    "('org.apache.commons.collections#BeanMap', 'values')": [
                        399
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('org.apache.commons.collections#BeanMap', None)": [
                        345,
                        346
                    ],
                    "('org.apache.commons.collections#BeanMap', 'keySet')": [
                        349
                    ],
                    "('org.apache.commons.collections#BeanMap', 'values')": [
                        399
                    ]
                }
            }
        }
    },
    "302cc6fd284b76839d86531698f2b2c5d89be4a9": {
        "authored_data": "2002 Mar 24 21:50",
        "commit.message": "Rather than throw a NullPointerException during hasMoreElements or nextElement\nwhen no array is passed to the constructor, treat a null to the constructor as\nan empty array.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130672 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Michael Smith",
        "pcid": "6d367b97f70e44bbb0cbd158a893197fbe52dfb7",
        "changes": {
            "src/java/org/apache/commons/collections/ArrayEnumeration.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('org.apache.commons.collections#ArrayEnumeration', None)": [
                        90
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('org.apache.commons.collections#ArrayEnumeration', None)": [
                        90,
                        91,
                        92,
                        93,
                        94
                    ]
                }
            }
        }
    },
    "6d367b97f70e44bbb0cbd158a893197fbe52dfb7": {
        "authored_data": "2002 Mar 21 17:11",
        "commit.message": "javadocs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130671 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Morgan James Delagrange",
        "pcid": "11328e166e2e68213fa66cda80e11dd0c9117c0f",
        "changes": {
            "src/java/org/apache/commons/collections/BeanMap.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('org.apache.commons.collections#BeanMap', None)": [
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393
                    ]
                }
            }
        }
    },
    "11328e166e2e68213fa66cda80e11dd0c9117c0f": {
        "authored_data": "2002 Mar 21 03:31",
        "commit.message": "Submitted by Daniel Rall:\n\n\"The definition of \"delegate\" at the beginning of the header JavaDoc is\nmostly meaningless, since the class was renamed to and committed with\nthe name ProxyMap.\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130670 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Michael Smith",
        "pcid": "79b299a70cd71a24bca87f0b251c503e20850514",
        "changes": {
            "src/java/org/apache/commons/collections/ProxyMap.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        68,
                        69,
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ]
                }
            }
        }
    },
    "79b299a70cd71a24bca87f0b251c503e20850514": {
        "authored_data": "2002 Mar 20 17:09",
        "commit.message": "javadocs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130669 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Morgan James Delagrange",
        "pcid": "f62b8ed90016db2f48658405108b347134379400",
        "changes": {
            "src/java/org/apache/commons/collections/comparators/ReverseComparator.java": {
                "old": {
                    "(None, None)": [
                        62,
                        65
                    ],
                    "('org.apache.commons.collections.comparators#ReverseComparator', None)": [
                        73,
                        80,
                        81
                    ]
                },
                "new": {
                    "(None, None)": [
                        62,
                        65
                    ],
                    "('org.apache.commons.collections.comparators#ReverseComparator', None)": [
                        73,
                        74,
                        75,
                        76,
                        77,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90
                    ]
                }
            }
        }
    },
    "f62b8ed90016db2f48658405108b347134379400": {
        "authored_data": "2002 Mar 20 05:16",
        "commit.message": "Fix javadoc warnings\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@130668 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Michael Smith",
        "pcid": "d0d74a4e1a39a0a461efee5322c235a046187d33",
        "changes": {
            "src/java/org/apache/commons/collections/CursorableLinkedList.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        94
                    ],
                    "('org.apache.commons.collections#CursorableLinkedList', None)": [
                        906
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        94
                    ],
                    "('org.apache.commons.collections#CursorableLinkedList', None)": [
                        906
                    ]
                }
            },
            "src/java/org/apache/commons/collections/DefaultMapEntry.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        64,
                        66
                    ]
                }
            }
        }
    }
}