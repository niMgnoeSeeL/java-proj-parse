{
    "dbfa4f25c2fb02f080294be2c1726ed52099a814": {
        "authored_data": "2010 Jan 15 16:57",
        "commit.message": "Adding missing license headers per RAT report\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@899713 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "96925c7a40b83c7cd17fd9bedac43181c7a79d12",
        "changes": {
            "src/java/org/apache/commons/collections/IndexedCollection.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16
                    ]
                }
            },
            "src/java/org/apache/commons/collections/iterators/AbstractUntypedIteratorDecorator.java": {
                "old": {
                    "(None, None)": [
                        1
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "src/java/org/apache/commons/collections/splitmap/SplitMapUtils.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/collections/AbstractDecoratedCollectionTest.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/collections/TestIndexedCollection.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/collections/functors/BasicPredicateTestBase.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/collections/functors/MockPredicateTestBase.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/collections/functors/TestAll.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/collections/functors/TestCompositePredicate.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/collections/functors/TestEqualPredicate.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16
                    ]
                }
            },
            "src/test/org/apache/commons/collections/functors/TestNullPredicate.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16
                    ]
                }
            }
        }
    },
    "4e6e6a8e07f3c2b595daef083d6f50ea99fef4a4": {
        "authored_data": "2010 Jan 15 16:48",
        "commit.message": "Removing the System.out from MapUtils.getNumber as reported by Michaell Akerman. COLLECTIONS-350\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@899702 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "eebcb74fb5e80592aab80f6bbb756026c7812f19",
        "changes": {
            "src/java/org/apache/commons/collections/MapUtils.java": {
                "old": {
                    "('org.apache.commons.collections#MapUtils', 'getNumber(Map,K)')": [
                        207
                    ],
                    "('org.apache.commons.collections#MapUtils', None)": [
                        944,
                        945,
                        946,
                        947,
                        948,
                        949,
                        950,
                        953,
                        954
                    ],
                    "('org.apache.commons.collections#MapUtils', 'logInfo(Exception)')": [
                        951,
                        952
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#MapUtils', 'getNumber(Map,K)')": [
                        207
                    ]
                }
            }
        }
    },
    "eebcb74fb5e80592aab80f6bbb756026c7812f19": {
        "authored_data": "2009 Dec 29 23:12",
        "commit.message": "[COLLECTIONS-343] applied patch to preserve singleton integrity with readResolve\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@894507 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Matthew Jason Benson",
        "pcid": "4016c8eec992ab62747a55dcfb4be1878ecc232c",
        "changes": {
            "src/java/org/apache/commons/collections/functors/CloneTransformer.java": {
                "new": {
                    "('org.apache.commons.collections.functors#CloneTransformer', 'readResolve')": [
                        72,
                        73
                    ],
                    "(None, None)": [
                        74,
                        75
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/ExceptionClosure.java": {
                "new": {
                    "('org.apache.commons.collections.functors#ExceptionClosure', 'readResolve')": [
                        68,
                        69
                    ],
                    "(None, None)": [
                        70,
                        71
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/ExceptionFactory.java": {
                "new": {
                    "('org.apache.commons.collections.functors#ExceptionFactory', 'readResolve')": [
                        68,
                        69
                    ],
                    "(None, None)": [
                        70,
                        71
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/ExceptionPredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#ExceptionPredicate', 'readResolve')": [
                        69,
                        70
                    ],
                    "(None, None)": [
                        71,
                        72
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/ExceptionTransformer.java": {
                "new": {
                    "('org.apache.commons.collections.functors#ExceptionTransformer', 'readResolve')": [
                        69,
                        70
                    ],
                    "(None, None)": [
                        71,
                        72
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/FalsePredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#FalsePredicate', 'readResolve')": [
                        79,
                        80
                    ],
                    "(None, None)": [
                        81,
                        82
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/NOPClosure.java": {
                "old": {
                    "('org.apache.commons.collections.functors#NOPClosure', None)": [
                        66,
                        67,
                        68,
                        69,
                        74,
                        75,
                        76,
                        77
                    ],
                    "('org.apache.commons.collections.functors#NOPClosure', 'equals(Object)')": [
                        70,
                        71
                    ],
                    "('org.apache.commons.collections.functors#NOPClosure', 'hashCode')": [
                        78,
                        79
                    ],
                    "(None, None)": [
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#NOPClosure', 'readResolve')": [
                        66,
                        67
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/NOPTransformer.java": {
                "old": {
                    "('org.apache.commons.collections.functors#NOPTransformer', None)": [
                        41,
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#NOPTransformer', None)": [
                        41,
                        59
                    ],
                    "('org.apache.commons.collections.functors#NOPTransformer', 'readResolve')": [
                        67,
                        68
                    ],
                    "(None, None)": [
                        69,
                        70
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/NotNullPredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#NotNullPredicate', None)": [
                        35,
                        41,
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#NotNullPredicate', None)": [
                        35,
                        41,
                        59
                    ],
                    "('org.apache.commons.collections.functors#NotNullPredicate', 'readResolve')": [
                        67,
                        68
                    ],
                    "(None, None)": [
                        69,
                        70
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/NullPredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#NullPredicate', None)": [
                        35,
                        41,
                        53,
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#NullPredicate', None)": [
                        35,
                        41,
                        53,
                        71
                    ],
                    "('org.apache.commons.collections.functors#NullPredicate', 'readResolve')": [
                        79,
                        80
                    ],
                    "(None, None)": [
                        81,
                        82
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/StringValueTransformer.java": {
                "old": {
                    "('org.apache.commons.collections.functors#StringValueTransformer', None)": [
                        42,
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#StringValueTransformer', None)": [
                        42,
                        60
                    ],
                    "('org.apache.commons.collections.functors#StringValueTransformer', 'readResolve')": [
                        68,
                        69
                    ],
                    "(None, None)": [
                        70,
                        71
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/TruePredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#TruePredicate', None)": [
                        36,
                        42,
                        47,
                        54,
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#TruePredicate', None)": [
                        36,
                        42,
                        47,
                        54,
                        72,
                        79
                    ],
                    "('org.apache.commons.collections.functors#TruePredicate', 'readResolve')": [
                        80,
                        81
                    ],
                    "(None, None)": [
                        82,
                        83
                    ]
                }
            },
            "src/test/org/apache/commons/collections/TestClosureUtils.java": {
                "new": {
                    "(None, None)": [
                        30,
                        446,
                        447,
                        448
                    ],
                    "('org.apache.commons.collections#TestClosureUtils', None)": [
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435
                    ],
                    "('org.apache.commons.collections#TestClosureUtils', 'testSingletonPatternInSerialization')": [
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445
                    ]
                }
            },
            "src/test/org/apache/commons/collections/TestFactoryUtils.java": {
                "old": {
                    "('org.apache.commons.collections#TestFactoryUtils', None)": [
                        78,
                        81,
                        91,
                        109,
                        216,
                        232,
                        243,
                        246
                    ],
                    "('org.apache.commons.collections#TestFactoryUtils', 'testPrototypeFactoryPublicCloneMethod')": [
                        121
                    ],
                    "('org.apache.commons.collections#TestFactoryUtils', 'testPrototypeFactoryPublicCopyConstructor')": [
                        139
                    ],
                    "('org.apache.commons.collections#TestFactoryUtils', 'testPrototypeFactoryPublicSerialization')": [
                        165
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        302,
                        303,
                        304,
                        305
                    ],
                    "('org.apache.commons.collections#TestFactoryUtils', None)": [
                        79,
                        82,
                        92,
                        110,
                        217,
                        233,
                        244,
                        247,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292
                    ],
                    "('org.apache.commons.collections#TestFactoryUtils', 'testPrototypeFactoryPublicCloneMethod')": [
                        122
                    ],
                    "('org.apache.commons.collections#TestFactoryUtils', 'testPrototypeFactoryPublicCopyConstructor')": [
                        140
                    ],
                    "('org.apache.commons.collections#TestFactoryUtils', 'testPrototypeFactoryPublicSerialization')": [
                        166
                    ],
                    "('org.apache.commons.collections#TestFactoryUtils', 'testSingletonPatternInSerialization')": [
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301
                    ]
                }
            },
            "src/test/org/apache/commons/collections/TestPredicateUtils.java": {
                "new": {
                    "(None, None)": [
                        36,
                        38,
                        39
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', None)": [
                        836,
                        837,
                        838,
                        839,
                        840,
                        841,
                        842,
                        856,
                        857,
                        858,
                        859
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', 'testSingletonPatternInSerialization')": [
                        843,
                        844,
                        845,
                        846,
                        847,
                        848,
                        849,
                        850,
                        851,
                        852,
                        853,
                        854,
                        855
                    ]
                }
            },
            "src/test/org/apache/commons/collections/TestTransformerUtils.java": {
                "new": {
                    "(None, None)": [
                        31,
                        34,
                        37,
                        470,
                        471,
                        472,
                        473
                    ],
                    "('org.apache.commons.collections#TestTransformerUtils', None)": [
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457
                    ],
                    "('org.apache.commons.collections#TestTransformerUtils', 'testSingletonPatternInSerialization')": [
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469
                    ]
                }
            }
        }
    },
    "4016c8eec992ab62747a55dcfb4be1878ecc232c": {
        "authored_data": "2009 Dec 29 22:35",
        "commit.message": "[COLLECTIONS-255] re-address unused cache variable in TreeBidiMap\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@894500 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Matthew Jason Benson",
        "pcid": "aa0e7d0a9285f272a811990e0cc9cd83d240adfa",
        "changes": {
            "src/java/org/apache/commons/collections/bidimap/TreeBidiMap.java": {
                "old": {
                    "('org.apache.commons.collections.bidimap#TreeBidiMap', 'entrySet')": [
                        414
                    ],
                    "('org.apache.commons.collections.bidimap#TreeBidiMap', None)": [
                        2095
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.bidimap#TreeBidiMap', 'entrySet')": [
                        414
                    ],
                    "('org.apache.commons.collections.bidimap#TreeBidiMap', None)": [
                        2095
                    ]
                }
            }
        }
    },
    "73579cc5ef885911645dcb65b03ebf16afdf628e": {
        "authored_data": "2009 Oct 14 14:23",
        "commit.message": "[COLLECTIONS-341]\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@825151 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Matthew Jason Benson",
        "pcid": "2e29ad2a8fd33955b488c1edd0b312a6837b7cb9",
        "changes": {
            "src/java/org/apache/commons/collections/functors/NOPClosure.java": {
                "old": {
                    "('org.apache.commons.collections.functors#NOPClosure', None)": [
                        31
                    ],
                    "('org.apache.commons.collections.functors#NOPClosure', 'equals(Object)')": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#NOPClosure', None)": [
                        31
                    ],
                    "('org.apache.commons.collections.functors#NOPClosure', 'equals(Object)')": [
                        71
                    ]
                }
            }
        }
    },
    "2e29ad2a8fd33955b488c1edd0b312a6837b7cb9": {
        "authored_data": "2009 Oct 14 14:16",
        "commit.message": "[COLLECTIONS-340]\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@825148 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Matthew Jason Benson",
        "pcid": "ac4f8bf346d344326a986aa16000db69b2fb4ffc",
        "changes": {
            "src/java/org/apache/commons/collections/functors/NOPClosure.java": {
                "old": {
                    "('org.apache.commons.collections.functors#NOPClosure', None)": [
                        41,
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#NOPClosure', None)": [
                        41,
                        59
                    ],
                    "('org.apache.commons.collections.functors#NOPClosure', 'equals(Object)')": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ]
                }
            }
        }
    },
    "ac4f8bf346d344326a986aa16000db69b2fb4ffc": {
        "authored_data": "2009 Oct 14 14:16",
        "commit.message": "refactor; avoid more generic array classcastexceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@825147 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Matthew Jason Benson",
        "pcid": "d1eecac1f669da8282f3f36219ecb8ecc8522ce0",
        "changes": {
            "src/test/org/apache/commons/collections/bidimap/AbstractTestSortedBidiMap.java": {
                "old": {
                    "('org.apache.commons.collections.bidimap#AbstractTestSortedBidiMap', None)": [
                        45,
                        49,
                        52,
                        53,
                        54,
                        55,
                        65,
                        66,
                        67,
                        68
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.bidimap#AbstractTestSortedBidiMap', None)": [
                        45,
                        51,
                        61
                    ]
                }
            },
            "src/test/org/apache/commons/collections/bidimap/TestDualTreeBidiMap2.java": {
                "old": {
                    "('org.apache.commons.collections.bidimap#TestDualTreeBidiMap2', None)": [
                        52
                    ],
                    "('org.apache.commons.collections.bidimap#TestDualTreeBidiMap2', 'testSerializeDeserializeCheckComparator')": [
                        90
                    ],
                    "('org.apache.commons.collections.bidimap#TestDualTreeBidiMap2', 'testSortOrder')": [
                        102
                    ],
                    "(None, None)": [
                        127
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.bidimap#TestDualTreeBidiMap2', None)": [
                        52
                    ],
                    "('org.apache.commons.collections.bidimap#TestDualTreeBidiMap2', 'testSerializeDeserializeCheckComparator')": [
                        90
                    ],
                    "('org.apache.commons.collections.bidimap#TestDualTreeBidiMap2', 'testSortOrder')": [
                        102
                    ],
                    "(None, None)": [
                        127
                    ]
                }
            },
            "src/test/org/apache/commons/collections/map/AbstractTestMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#AbstractTestMap', None)": [
                        322,
                        1103,
                        1310,
                        1467,
                        1471,
                        1539
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#AbstractTestMap', None)": [
                        318,
                        325,
                        326,
                        331,
                        1112,
                        1319,
                        1476,
                        1480,
                        1548
                    ],
                    "('org.apache.commons.collections.map#AbstractTestMap', 'getAsList(Object)')": [
                        319,
                        320,
                        321,
                        322,
                        323,
                        324
                    ]
                }
            }
        }
    },
    "d1eecac1f669da8282f3f36219ecb8ecc8522ce0": {
        "authored_data": "2009 Oct 14 14:04",
        "commit.message": "avoid some generic array classcastexceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@825140 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Matthew Jason Benson",
        "pcid": "2c5a64eec4deb32f95092279ea35d613762357bc",
        "changes": {
            "src/test/org/apache/commons/collections/bidimap/AbstractTestSortedBidiMap.java": {
                "old": {
                    "('org.apache.commons.collections.bidimap#AbstractTestSortedBidiMap', None)": [
                        51,
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.bidimap#AbstractTestSortedBidiMap', None)": [
                        49,
                        52,
                        53,
                        54,
                        55,
                        65,
                        66,
                        67,
                        68
                    ]
                }
            }
        }
    }
}