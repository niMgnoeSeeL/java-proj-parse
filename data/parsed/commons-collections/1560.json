{
    "8aa8f5e67f3a4ffc48b3246e0974bf92cf7aa0a9": {
        "authored_data": "2013 Jan 20 21:47",
        "commit.message": "Findbugs fixes: use e.g. Integer.valueOf instead of new Integer and similar.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1435979 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "df73c74f8836c468e3cc89bbe48e54ec72773d61",
        "changes": {
            "src/main/java/org/apache/commons/collections/ExtendedProperties.java": {
                "old": {
                    "('org.apache.commons.collections#ExtendedProperties', 'getLong(String,long)')": [
                        1502
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#ExtendedProperties', 'getLong(String,long)')": [
                        1502
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/comparators/FixedOrderComparator.java": {
                "old": {
                    "('org.apache.commons.collections.comparators#FixedOrderComparator', 'add(T)')": [
                        184
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.comparators#FixedOrderComparator', 'add(T)')": [
                        184
                    ]
                }
            }
        }
    },
    "a2e56d388be9c40b3368db183edb89e167c83990": {
        "authored_data": "2013 Jan 20 21:20",
        "commit.message": "Add javadoc, minor formatting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1435970 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "5546efd9f7cb1055d30af938f5bf22b2977a5ffa",
        "changes": {
            "src/main/java/org/apache/commons/collections/iterators/TransformIterator.java": {
                "old": {
                    "('org.apache.commons.collections.iterators#TransformIterator', None)": [
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.iterators#TransformIterator', None)": [
                        65,
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator.java": {
                "old": {
                    "('org.apache.commons.collections.iterators#UnmodifiableOrderedMapIterator', 'unmodifiableOrderedMapIterator(OrderedMapIterator)')": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.iterators#UnmodifiableOrderedMapIterator', 'unmodifiableOrderedMapIterator(OrderedMapIterator)')": [
                        46,
                        47,
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/list/AbstractLinkedList.java": {
                "old": {
                    "('org.apache.commons.collections.list#AbstractLinkedList', None)": [
                        776
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.list#AbstractLinkedList', None)": [
                        597,
                        598,
                        599,
                        614,
                        615,
                        616,
                        617,
                        783,
                        784
                    ]
                }
            }
        }
    },
    "5546efd9f7cb1055d30af938f5bf22b2977a5ffa": {
        "authored_data": "2013 Jan 20 21:13",
        "commit.message": "Add javadoc, minor formatting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1435965 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "1b9d8b4b3e48f41b6e448a8b55c6d84cb13df44d",
        "changes": {
            "src/main/java/org/apache/commons/collections/functors/ChainedTransformer.java": {
                "old": {
                    "('org.apache.commons.collections.functors#ChainedTransformer', None)": [
                        43,
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#ChainedTransformer', None)": [
                        43,
                        44,
                        62,
                        63
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/CloneTransformer.java": {
                "old": {
                    "('org.apache.commons.collections.functors#CloneTransformer', None)": [
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#CloneTransformer', None)": [
                        41,
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/ClosureTransformer.java": {
                "old": {
                    "('org.apache.commons.collections.functors#ClosureTransformer', None)": [
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#ClosureTransformer', None)": [
                        41,
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/ComparatorPredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#ComparatorPredicate', 'comparatorPredicate(T,Comparator,Criterion)')": [
                        121
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#ComparatorPredicate', 'comparatorPredicate(T,Comparator,Criterion)')": [
                        121,
                        122
                    ],
                    "('org.apache.commons.collections.functors#ComparatorPredicate', None)": [
                        161,
                        162
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/ConstantFactory.java": {
                "new": {
                    "('org.apache.commons.collections.functors#ConstantFactory', None)": [
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/ConstantTransformer.java": {
                "old": {
                    "('org.apache.commons.collections.functors#ConstantTransformer', None)": [
                        46,
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#ConstantTransformer', None)": [
                        46,
                        47,
                        48,
                        59,
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/DefaultEquator.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.collections.functors#DefaultEquator', None)": [
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.collections.functors#DefaultEquator', None)": [
                        59
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/ExceptionFactory.java": {
                "new": {
                    "('org.apache.commons.collections.functors#ExceptionFactory', None)": [
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/ExceptionPredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#ExceptionPredicate', None)": [
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/ExceptionTransformer.java": {
                "new": {
                    "('org.apache.commons.collections.functors#ExceptionTransformer', None)": [
                        41,
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/FactoryTransformer.java": {
                "new": {
                    "('org.apache.commons.collections.functors#FactoryTransformer', None)": [
                        41,
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/FunctorUtils.java": {
                "old": {
                    "('org.apache.commons.collections.functors#FunctorUtils', 'validate(Collection)')": [
                        108
                    ],
                    "('org.apache.commons.collections.functors#FunctorUtils', 'validate(Closure)')": [
                        140
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#FunctorUtils', 'validate(Collection)')": [
                        108,
                        109
                    ],
                    "('org.apache.commons.collections.functors#FunctorUtils', 'validate(Closure)')": [
                        141,
                        142
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/IfClosure.java": {
                "old": {
                    "('org.apache.commons.collections.functors#IfClosure', None)": [
                        105
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#IfClosure', None)": [
                        105,
                        106
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/InstantiateFactory.java": {
                "old": {
                    "('org.apache.commons.collections.functors#InstantiateFactory', 'instantiateFactory(Class,Class,Object)')": [
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#InstantiateFactory', None)": [
                        49
                    ],
                    "('org.apache.commons.collections.functors#InstantiateFactory', 'instantiateFactory(Class,Class,Object)')": [
                        55,
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/InstantiateTransformer.java": {
                "old": {
                    "('org.apache.commons.collections.functors#InstantiateTransformer', None)": [
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#InstantiateTransformer', None)": [
                        47,
                        48,
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/InvokerTransformer.java": {
                "old": {
                    "('org.apache.commons.collections.functors#InvokerTransformer', None)": [
                        60
                    ],
                    "('org.apache.commons.collections.functors#InvokerTransformer', 'invokerTransformer(String,Class,Object)')": [
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#InvokerTransformer', None)": [
                        47,
                        48,
                        62,
                        63,
                        64
                    ],
                    "('org.apache.commons.collections.functors#InvokerTransformer', 'invokerTransformer(String,Class,Object)')": [
                        70,
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/MapTransformer.java": {
                "new": {
                    "('org.apache.commons.collections.functors#MapTransformer', None)": [
                        44,
                        45
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/NOPTransformer.java": {
                "new": {
                    "('org.apache.commons.collections.functors#NOPTransformer', None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/OrPredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#OrPredicate', 'orPredicate(Predicate,Predicate)')": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#OrPredicate', 'orPredicate(Predicate,Predicate)')": [
                        48,
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/PredicateTransformer.java": {
                "new": {
                    "('org.apache.commons.collections.functors#PredicateTransformer', None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/PrototypeFactory.java": {
                "new": {
                    "('org.apache.commons.collections.functors#PrototypeFactory', None)": [
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/StringValueTransformer.java": {
                "new": {
                    "('org.apache.commons.collections.functors#StringValueTransformer', None)": [
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/SwitchTransformer.java": {
                "old": {
                    "('org.apache.commons.collections.functors#SwitchTransformer', 'switchTransformer(Predicate,Transformer,Transformer)')": [
                        64
                    ],
                    "('org.apache.commons.collections.functors#SwitchTransformer', None)": [
                        82,
                        129
                    ],
                    "('org.apache.commons.collections.functors#SwitchTransformer', 'switchTransformer(Map)')": [
                        90,
                        91,
                        94,
                        98,
                        99,
                        101,
                        106
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#SwitchTransformer', None)": [
                        47,
                        48,
                        85,
                        86,
                        87,
                        137,
                        138
                    ],
                    "('org.apache.commons.collections.functors#SwitchTransformer', 'switchTransformer(Predicate,Transformer,Transformer)')": [
                        66,
                        67
                    ],
                    "('org.apache.commons.collections.functors#SwitchTransformer', 'switchTransformer(Map)')": [
                        95,
                        96,
                        97,
                        100,
                        104,
                        105,
                        107,
                        108,
                        113,
                        114
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/TransformedPredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#TransformedPredicate', None)": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#TransformedPredicate', None)": [
                        69,
                        70
                    ]
                }
            }
        }
    },
    "1b9d8b4b3e48f41b6e448a8b55c6d84cb13df44d": {
        "authored_data": "2013 Jan 20 11:41",
        "commit.message": "Fix checkstyle warnings: line longer than 120 chars.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1435824 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "99b53bcce882a486f18fc7b6acc00d0bd0cac0f5",
        "changes": {
            "src/main/java/org/apache/commons/collections/BufferUtils.java": {
                "old": {
                    "('org.apache.commons.collections#BufferUtils', 'transformingBuffer(Buffer,Transformer)')": [
                        190
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#BufferUtils', 'transformingBuffer(Buffer,Transformer)')": [
                        190,
                        191
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/ClosureUtils.java": {
                "old": {
                    "('org.apache.commons.collections#ClosureUtils', 'invokerClosure(String,Class,Object)')": [
                        175
                    ],
                    "('org.apache.commons.collections#ClosureUtils', 'ifClosure(Predicate,Closure)')": [
                        240
                    ],
                    "('org.apache.commons.collections#ClosureUtils', 'switchClosure(Predicate,Closure)')": [
                        280
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#ClosureUtils', 'invokerClosure(String,Class,Object)')": [
                        175,
                        176
                    ],
                    "('org.apache.commons.collections#ClosureUtils', 'ifClosure(Predicate,Closure)')": [
                        241,
                        242
                    ],
                    "('org.apache.commons.collections#ClosureUtils', 'switchClosure(Predicate,Closure)')": [
                        282,
                        283
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/CollectionUtils.java": {
                "old": {
                    "('org.apache.commons.collections#CollectionUtils', 'selectRejected(Collection,Predicate,R)')": [
                        702,
                        703
                    ],
                    "('org.apache.commons.collections#CollectionUtils', 'isFull(Collection)')": [
                        1216
                    ],
                    "('org.apache.commons.collections#CollectionUtils', 'maxSize(Collection)')": [
                        1247
                    ],
                    "('org.apache.commons.collections#CollectionUtils', 'predicatedCollection(Collection,Predicate)')": [
                        1348
                    ],
                    "('org.apache.commons.collections#CollectionUtils', 'transformingCollection(Collection,Transformer)')": [
                        1367
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#CollectionUtils', 'selectRejected(Collection,Predicate,R)')": [
                        702,
                        703,
                        704
                    ],
                    "('org.apache.commons.collections#CollectionUtils', 'isFull(Collection)')": [
                        1217,
                        1218
                    ],
                    "('org.apache.commons.collections#CollectionUtils', 'maxSize(Collection)')": [
                        1249,
                        1250
                    ],
                    "('org.apache.commons.collections#CollectionUtils', 'predicatedCollection(Collection,Predicate)')": [
                        1351,
                        1352
                    ],
                    "('org.apache.commons.collections#CollectionUtils', 'transformingCollection(Collection,Transformer)')": [
                        1371,
                        1372
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/ComparatorUtils.java": {
                "old": {
                    "('org.apache.commons.collections#ComparatorUtils', 'chainedComparator(Comparator)')": [
                        93
                    ],
                    "('org.apache.commons.collections#ComparatorUtils', 'chainedComparator(Collection)')": [
                        116
                    ],
                    "('org.apache.commons.collections#ComparatorUtils', 'transformedComparator(Comparator,Transformer)')": [
                        200
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#ComparatorUtils', 'chainedComparator(Comparator)')": [
                        93,
                        94,
                        95
                    ],
                    "('org.apache.commons.collections#ComparatorUtils', 'chainedComparator(Collection)')": [
                        118,
                        119,
                        120
                    ],
                    "('org.apache.commons.collections#ComparatorUtils', 'transformedComparator(Comparator,Transformer)')": [
                        204,
                        205,
                        206
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/FactoryUtils.java": {
                "old": {
                    "('org.apache.commons.collections#FactoryUtils', 'instantiateFactory(Class,Class,Object)')": [
                        141
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#FactoryUtils', 'instantiateFactory(Class,Class,Object)')": [
                        141,
                        142
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/IteratorUtils.java": {
                "old": {
                    "('org.apache.commons.collections#IteratorUtils', None)": [
                        106
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'chainedIterator(Iterator,Iterator)')": [
                        457
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'collatedIterator(Comparator,Iterator,Iterator)')": [
                        504
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'collatedIterator(Comparator,Iterator)')": [
                        523
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'objectGraphIterator(E,Transformer)')": [
                        603
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'transformedIterator(Iterator,Transformer)')": [
                        620
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'filteredIterator(Iterator,Predicate)')": [
                        643
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'filteredListIterator(ListIterator,Predicate)')": [
                        664
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'asIterator(Enumeration,Collection)')": [
                        735
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#IteratorUtils', None)": [
                        106,
                        107
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'chainedIterator(Iterator,Iterator)')": [
                        458,
                        459
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'collatedIterator(Comparator,Iterator,Iterator)')": [
                        506,
                        507,
                        508
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'collatedIterator(Comparator,Iterator)')": [
                        527,
                        528
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'objectGraphIterator(E,Transformer)')": [
                        608,
                        609
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'transformedIterator(Iterator,Transformer)')": [
                        626,
                        627,
                        628
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'filteredIterator(Iterator,Predicate)')": [
                        651,
                        652
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'filteredListIterator(ListIterator,Predicate)')": [
                        673,
                        674,
                        675
                    ],
                    "('org.apache.commons.collections#IteratorUtils', 'asIterator(Enumeration,Collection)')": [
                        746,
                        747
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/ListUtils.java": {
                "old": {
                    "('org.apache.commons.collections#ListUtils', 'transformedList(List,Transformer)')": [
                        433
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#ListUtils', 'transformedList(List,Transformer)')": [
                        433,
                        434
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/MapUtils.java": {
                "old": {
                    "('org.apache.commons.collections#MapUtils', 'safeAddToMap(Map,K,Object)')": [
                        1079
                    ],
                    "('org.apache.commons.collections#MapUtils', 'predicatedMap(Map,Predicate,Predicate)')": [
                        1261
                    ],
                    "('org.apache.commons.collections#MapUtils', 'lazyMap(Map,Transformer)')": [
                        1373
                    ],
                    "('org.apache.commons.collections#MapUtils', 'multiValueMap(Map,Class)')": [
                        1416
                    ],
                    "('org.apache.commons.collections#MapUtils', 'multiValueMap(Map,Factory)')": [
                        1431
                    ],
                    "('org.apache.commons.collections#MapUtils', 'populateMap(Map,Collection,Transformer)')": [
                        1622
                    ],
                    "('org.apache.commons.collections#MapUtils', 'populateMap(Map,Collection,Transformer,Transformer)')": [
                        1638,
                        1639
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#MapUtils', 'safeAddToMap(Map,K,Object)')": [
                        1079,
                        1080
                    ],
                    "('org.apache.commons.collections#MapUtils', 'predicatedMap(Map,Predicate,Predicate)')": [
                        1262,
                        1263
                    ],
                    "('org.apache.commons.collections#MapUtils', 'lazyMap(Map,Transformer)')": [
                        1375,
                        1376
                    ],
                    "('org.apache.commons.collections#MapUtils', 'multiValueMap(Map,Class)')": [
                        1419,
                        1420
                    ],
                    "('org.apache.commons.collections#MapUtils', 'multiValueMap(Map,Factory)')": [
                        1435,
                        1436
                    ],
                    "('org.apache.commons.collections#MapUtils', 'populateMap(Map,Collection,Transformer)')": [
                        1627,
                        1628
                    ],
                    "('org.apache.commons.collections#MapUtils', 'populateMap(Map,Collection,Transformer,Transformer)')": [
                        1644,
                        1645
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/PredicateUtils.java": {
                "old": {
                    "('org.apache.commons.collections#PredicateUtils', 'invokerPredicate(String,Class,Object)')": [
                        247
                    ],
                    "('org.apache.commons.collections#PredicateUtils', 'andPredicate(Predicate,Predicate)')": [
                        266
                    ],
                    "('org.apache.commons.collections#PredicateUtils', 'orPredicate(Predicate,Predicate)')": [
                        315
                    ],
                    "('org.apache.commons.collections#PredicateUtils', 'eitherPredicate(Predicate,Predicate)')": [
                        362
                    ],
                    "('org.apache.commons.collections#PredicateUtils', 'neitherPredicate(Predicate,Predicate)')": [
                        412
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#PredicateUtils', 'invokerPredicate(String,Class,Object)')": [
                        247,
                        248
                    ],
                    "('org.apache.commons.collections#PredicateUtils', 'andPredicate(Predicate,Predicate)')": [
                        267,
                        268
                    ],
                    "('org.apache.commons.collections#PredicateUtils', 'orPredicate(Predicate,Predicate)')": [
                        317,
                        318
                    ],
                    "('org.apache.commons.collections#PredicateUtils', 'eitherPredicate(Predicate,Predicate)')": [
                        365,
                        366
                    ],
                    "('org.apache.commons.collections#PredicateUtils', 'neitherPredicate(Predicate,Predicate)')": [
                        416,
                        417
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/TransformerUtils.java": {
                "old": {
                    "('org.apache.commons.collections#TransformerUtils', 'switchMapTransformer(Map)')": [
                        340
                    ],
                    "('org.apache.commons.collections#TransformerUtils', 'invokerTransformer(String)')": [
                        414
                    ],
                    "('org.apache.commons.collections#TransformerUtils', 'invokerTransformer(String,Class,Object)')": [
                        432
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#TransformerUtils', 'switchMapTransformer(Map)')": [
                        340,
                        341,
                        342
                    ],
                    "('org.apache.commons.collections#TransformerUtils', 'invokerTransformer(String)')": [
                        416
                    ],
                    "('org.apache.commons.collections#TransformerUtils', 'invokerTransformer(String,Class,Object)')": [
                        434,
                        435
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/bag/PredicatedSortedBag.java": {
                "old": {
                    "('org.apache.commons.collections.bag#PredicatedSortedBag', 'predicatedSortedBag(SortedBag,Predicate)')": [
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.bag#PredicatedSortedBag', 'predicatedSortedBag(SortedBag,Predicate)')": [
                        58,
                        59
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/bag/TransformedSortedBag.java": {
                "old": {
                    "('org.apache.commons.collections.bag#TransformedSortedBag', 'transformingSortedBag(SortedBag,Transformer)')": [
                        55
                    ],
                    "('org.apache.commons.collections.bag#TransformedSortedBag', 'transformedSortedBag(SortedBag,Transformer)')": [
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.bag#TransformedSortedBag', 'transformingSortedBag(SortedBag,Transformer)')": [
                        55
                    ],
                    "('org.apache.commons.collections.bag#TransformedSortedBag', 'transformedSortedBag(SortedBag,Transformer)')": [
                        75,
                        76
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/bidimap/AbstractDualBidiMap.java": {
                "old": {
                    "('org.apache.commons.collections.bidimap#AbstractDualBidiMap', None)": [
                        113
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.bidimap#AbstractDualBidiMap', None)": [
                        113,
                        114
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/bidimap/DualHashBidiMap.java": {
                "old": {
                    "('org.apache.commons.collections.bidimap#DualHashBidiMap', None)": [
                        72
                    ],
                    "('org.apache.commons.collections.bidimap#DualHashBidiMap', 'createBidiMap(Map,Map,BidiMap)')": [
                        85
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.bidimap#DualHashBidiMap', None)": [
                        72,
                        73
                    ],
                    "('org.apache.commons.collections.bidimap#DualHashBidiMap', 'createBidiMap(Map,Map,BidiMap)')": [
                        86,
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/bidimap/DualTreeBidiMap.java": {
                "old": {
                    "('org.apache.commons.collections.bidimap#DualTreeBidiMap', None)": [
                        108
                    ],
                    "('org.apache.commons.collections.bidimap#DualTreeBidiMap', 'createBidiMap(Map,Map,BidiMap)')": [
                        123
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.bidimap#DualTreeBidiMap', None)": [
                        108,
                        109
                    ],
                    "('org.apache.commons.collections.bidimap#DualTreeBidiMap', 'createBidiMap(Map,Map,BidiMap)')": [
                        124,
                        125
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/collection/IndexedCollection.java": {
                "old": {
                    "('org.apache.commons.collections.collection#IndexedCollection', None)": [
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.collection#IndexedCollection', None)": [
                        76,
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/collection/TransformedCollection.java": {
                "old": {
                    "('org.apache.commons.collections.collection#TransformedCollection', 'transformingCollection(Collection,Transformer)')": [
                        61
                    ],
                    "('org.apache.commons.collections.collection#TransformedCollection', 'transformedCollection(Collection,Transformer)')": [
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.collection#TransformedCollection', 'transformingCollection(Collection,Transformer)')": [
                        61
                    ],
                    "('org.apache.commons.collections.collection#TransformedCollection', 'transformedCollection(Collection,Transformer)')": [
                        81,
                        82
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/comparators/TransformingComparator.java": {
                "old": {
                    "('org.apache.commons.collections.comparators#TransformingComparator', None)": [
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.comparators#TransformingComparator', None)": [
                        66,
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/AndPredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#AndPredicate', 'andPredicate(Predicate,Predicate)')": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#AndPredicate', 'andPredicate(Predicate,Predicate)')": [
                        48,
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/list/TreeList.java": {
                "old": {
                    "('org.apache.commons.collections.list#TreeList', None)": [
                        301
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.list#TreeList', None)": [
                        301,
                        302
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/map/AbstractHashedMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#AbstractHashedMap', 'reuseEntry(HashEntry,int,int,K,V)')": [
                        492
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#AbstractHashedMap', 'reuseEntry(HashEntry,int,int,K,V)')": [
                        492,
                        493
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/map/AbstractInputCheckedMapDecorator.java": {
                "old": {
                    "('org.apache.commons.collections.map#AbstractInputCheckedMapDecorator', None)": [
                        171
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#AbstractInputCheckedMapDecorator', None)": [
                        171,
                        172
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/map/AbstractReferenceMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#AbstractReferenceMap', 'createEntry(HashEntry,int,K,V)')": [
                        470
                    ],
                    "('org.apache.commons.collections.map#AbstractReferenceMap', None)": [
                        604
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#AbstractReferenceMap', 'createEntry(HashEntry,int,K,V)')": [
                        470,
                        471
                    ],
                    "('org.apache.commons.collections.map#AbstractReferenceMap', None)": [
                        605,
                        606
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/map/DefaultedMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#DefaultedMap', 'defaultedMap(Map,Transformer)')": [
                        123
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#DefaultedMap', 'defaultedMap(Map,Transformer)')": [
                        123,
                        124
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/map/IdentityMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#IdentityMap', 'createEntry(HashEntry,int,K,V)')": [
                        139
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#IdentityMap', 'createEntry(HashEntry,int,K,V)')": [
                        139,
                        140
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/map/LRUMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#LRUMap', 'reuseMapping(LinkEntry,int,int,K,V)')": [
                        296
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#LRUMap', 'reuseMapping(LinkEntry,int,int,K,V)')": [
                        296,
                        297
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/map/LazySortedMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#LazySortedMap', 'lazySortedMap(SortedMap,Factory)')": [
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#LazySortedMap', 'lazySortedMap(SortedMap,Factory)')": [
                        76,
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/map/MultiKeyMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#MultiKeyMap', 'containsKey(Object,Object,Object,Object,Object)')": [
                        575
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#MultiKeyMap', 'containsKey(Object,Object,Object,Object,Object)')": [
                        575,
                        576
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/map/MultiValueMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#MultiValueMap', 'multiValueMap(Map,Factory)')": [
                        113
                    ],
                    "('org.apache.commons.collections.map#MultiValueMap', None)": [
                        135
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#MultiValueMap', 'multiValueMap(Map,Factory)')": [
                        113
                    ],
                    "('org.apache.commons.collections.map#MultiValueMap', None)": [
                        135,
                        136
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/map/PredicatedMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#PredicatedMap', None)": [
                        92
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#PredicatedMap', None)": [
                        92,
                        93
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/map/TransformedSortedMap.java": {
                "old": {
                    "('org.apache.commons.collections.map#TransformedSortedMap', 'transformedSortedMap(SortedMap,Transformer,Transformer)')": [
                        91
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.map#TransformedSortedMap', 'transformedSortedMap(SortedMap,Transformer,Transformer)')": [
                        91,
                        92,
                        93
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/set/PredicatedSortedSet.java": {
                "old": {
                    "('org.apache.commons.collections.set#PredicatedSortedSet', 'predicatedSortedSet(SortedSet,Predicate)')": [
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.set#PredicatedSortedSet', 'predicatedSortedSet(SortedSet,Predicate)')": [
                        58,
                        59
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/set/TransformedSet.java": {
                "old": {
                    "('org.apache.commons.collections.set#TransformedSet', 'transformingSet(Set,Transformer)')": [
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.set#TransformedSet', 'transformingSet(Set,Transformer)')": [
                        55,
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/set/TransformedSortedSet.java": {
                "old": {
                    "('org.apache.commons.collections.set#TransformedSortedSet', 'transformingSortedSet(SortedSet,Transformer)')": [
                        56
                    ],
                    "('org.apache.commons.collections.set#TransformedSortedSet', 'transformedSortedSet(SortedSet,Transformer)')": [
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.set#TransformedSortedSet', 'transformingSortedSet(SortedSet,Transformer)')": [
                        56
                    ],
                    "('org.apache.commons.collections.set#TransformedSortedSet', 'transformedSortedSet(SortedSet,Transformer)')": [
                        76,
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/trie/PatriciaTrieBase.java": {
                "old": {
                    "('org.apache.commons.collections.trie#PatriciaTrieBase', 'removeInternalEntry(TrieEntry)')": [
                        618,
                        638
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.trie#PatriciaTrieBase', 'removeInternalEntry(TrieEntry)')": [
                        618,
                        638
                    ]
                }
            }
        }
    }
}