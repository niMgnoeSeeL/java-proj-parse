{
    "88b7b4b3a07390db01c9fe2ae15581ace220032b": {
        "authored_data": "2012 Jul 26 21:18",
        "commit.message": "[COLLECTIONS-379] Fixed javadoc in CollectionUtils.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1366204 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "4303c163b15bd43cb34626c0cd2c7984e5644297",
        "changes": {
            "src/main/java/org/apache/commons/collections/CollectionUtils.java": {
                "old": {
                    "('org.apache.commons.collections#CollectionUtils', None)": [
                        613,
                        614,
                        660,
                        729,
                        734,
                        753,
                        758
                    ]
                },
                "new": {
                    "('org.apache.commons.collections#CollectionUtils', None)": [
                        613,
                        614,
                        615,
                        661,
                        662,
                        731,
                        732,
                        737,
                        738,
                        757,
                        758,
                        763,
                        764
                    ]
                }
            }
        }
    },
    "4303c163b15bd43cb34626c0cd2c7984e5644297": {
        "authored_data": "2012 Jul 26 20:50",
        "commit.message": "Add change for 3.2.2 also for 4.0 release, fix javadoc for COLLECTIONS-331.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1366195 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "bc715edab37df7003cd6387f93715ec797fd4d49",
        "changes": {
            "src/main/java/org/apache/commons/collections/iterators/CollatingIterator.java": {
                "old": {
                    "('org.apache.commons.collections.iterators#CollatingIterator', None)": [
                        349
                    ],
                    "('org.apache.commons.collections.iterators#CollatingIterator', 'least')": [
                        365
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.iterators#CollatingIterator', None)": [
                        349
                    ],
                    "('org.apache.commons.collections.iterators#CollatingIterator', 'least')": [
                        365
                    ]
                }
            }
        }
    },
    "459f14b33c02509a4b9cc5360f3ff2f4edba9284": {
        "authored_data": "2012 Jul 26 20:24",
        "commit.message": "[COLLECTIONS-239] to keep backwards compatibility, do not use DefaultEquator in case no equator is specific, but rather use the original equals method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1366185 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "bb72bc51ce46c102124d09ac862860f44d169cb4",
        "changes": {
            "src/main/java/org/apache/commons/collections/functors/EqualPredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#EqualPredicate', None)": [
                        82
                    ],
                    "('org.apache.commons.collections.functors#EqualPredicate', 'evaluate(T)')": [
                        106
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#EqualPredicate', None)": [
                        82,
                        83,
                        84,
                        112
                    ],
                    "('org.apache.commons.collections.functors#EqualPredicate', 'evaluate(T)')": [
                        108,
                        109,
                        110,
                        111
                    ]
                }
            }
        }
    },
    "30bbfaf6d6920bca647889026339a13dd63d6736": {
        "authored_data": "2012 Jul 26 19:53",
        "commit.message": "Javadoc fixes for predicates.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1366175 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "b7327a42da0a48e223dd7ce014439a36f1850929",
        "changes": {
            "src/main/java/org/apache/commons/collections/functors/FalsePredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#FalsePredicate', None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/IdentityPredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#IdentityPredicate', None)": [
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/NonePredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#NonePredicate', None)": [
                        48,
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/NotNullPredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#NotNullPredicate', None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/NotPredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#NotPredicate', None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/NullIsExceptionPredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#NullIsExceptionPredicate', None)": [
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/NullIsFalsePredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#NullIsFalsePredicate', None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/NullIsTruePredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#NullIsTruePredicate', None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/NullPredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#NullPredicate', 'evaluate(Object)')": [
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#NullPredicate', None)": [
                        40
                    ],
                    "('org.apache.commons.collections.functors#NullPredicate', 'evaluate(T)')": [
                        62
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/OnePredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#OnePredicate', None)": [
                        49,
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/OrPredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#OrPredicate', None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/TransformedPredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#TransformedPredicate', 'transformedPredicate(Transformer,Predicate)')": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#TransformedPredicate', None)": [
                        45
                    ],
                    "('org.apache.commons.collections.functors#TransformedPredicate', 'transformedPredicate(Transformer,Predicate)')": [
                        51,
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/TransformerPredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#TransformerPredicate', None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/TruePredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#TruePredicate', None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections/functors/UniquePredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#UniquePredicate', 'uniquePredicate')": [
                        46,
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#UniquePredicate', None)": [
                        43
                    ],
                    "('org.apache.commons.collections.functors#UniquePredicate', 'uniquePredicate')": [
                        47,
                        48
                    ]
                }
            }
        }
    },
    "b7327a42da0a48e223dd7ce014439a36f1850929": {
        "authored_data": "2012 Jul 26 19:46",
        "commit.message": "[COLLECTIONS-239] Use of generic Equator in EqualPredicate.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1366174 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "09c256dbb3c3a3f39234651635cc814ec57cba8d",
        "changes": {
            "src/main/java/org/apache/commons/collections/functors/EqualPredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#EqualPredicate', None)": [
                        38,
                        41,
                        60
                    ],
                    "('org.apache.commons.collections.functors#EqualPredicate', 'evaluate(Object)')": [
                        71,
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#EqualPredicate', None)": [
                        38,
                        39,
                        40,
                        41,
                        44,
                        46,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        73,
                        74,
                        75,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        96
                    ],
                    "('org.apache.commons.collections.functors#EqualPredicate', 'equalPredicate(T,Equator)')": [
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.collections.functors#EqualPredicate', 'evaluate(T)')": [
                        105,
                        106
                    ]
                }
            }
        }
    },
    "09c256dbb3c3a3f39234651635cc814ec57cba8d": {
        "authored_data": "2012 Jul 26 19:30",
        "commit.message": "Small javadoc fix.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1366166 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "14eff09f2144f2f1b5d77f875e325bef950d346f",
        "changes": {
            "src/main/java/org/apache/commons/collections/comparators/sequence/SequencesComparator.java": {
                "old": {
                    "('org.apache.commons.collections.comparators.sequence#SequencesComparator', None)": [
                        253
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.comparators.sequence#SequencesComparator', None)": [
                        253
                    ]
                }
            }
        }
    }
}