{
    "90f705e73270ef0c2c21bd14daf998bbe0d5ecc3": {
        "authored_data": "2020 Mar 14 08:12",
        "commit.message": "Change log to ln in Shape javadoc",
        "commit.author.name": "Alex Herbert",
        "pcid": "e3484deb5125a284f0250b7c8208fdedeb3cafe7",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/Shape.java": {
                "old": {
                    "(None, None)": [
                        31,
                        34,
                        35
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', None)": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        90,
                        115,
                        140,
                        143,
                        181
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', 'calculateNumberOfHashFunctions(int,int)')": [
                        320,
                        322,
                        329
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        34,
                        35
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', None)": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        90,
                        115,
                        140,
                        143,
                        181
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', 'calculateNumberOfHashFunctions(int,int)')": [
                        320,
                        322,
                        329
                    ]
                }
            }
        }
    },
    "e3484deb5125a284f0250b7c8208fdedeb3cafe7": {
        "authored_data": "2020 Mar 14 07:59",
        "commit.message": "Fix ShapeTest typos\n",
        "commit.author.name": "Alex Herbert",
        "pcid": "a1dd122342036e28ad5bd29e71b8d5a0ceb535f4",
        "changes": {
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/ShapeTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', None)": [
                        317,
                        318,
                        319
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', 'constructor_probability_bits_hash__BadNumberOfBitsTest')": [
                        320
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', None)": [
                        317,
                        318,
                        319
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', 'constructor_probability_bits_hash_BadNumberOfBitsTest')": [
                        320
                    ]
                }
            }
        }
    },
    "a1dd122342036e28ad5bd29e71b8d5a0ceb535f4": {
        "authored_data": "2020 Mar 14 07:35",
        "commit.message": "Consolidate @throws clauses for Shape",
        "commit.author.name": "Alex Herbert",
        "pcid": "34a5a6f0c50e9075391780f4a9478607f4181d34",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/Shape.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', None)": [
                        102,
                        103,
                        104,
                        105,
                        155,
                        156,
                        157,
                        193,
                        194,
                        195,
                        196,
                        222,
                        223,
                        224,
                        225
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', None)": [
                        102,
                        103,
                        104,
                        154,
                        155,
                        191,
                        192,
                        193,
                        219,
                        220
                    ]
                }
            }
        }
    },
    "34a5a6f0c50e9075391780f4a9478607f4181d34": {
        "authored_data": "2020 Mar 14 07:24",
        "commit.message": "Change minimum number of bits from 8 to 1",
        "commit.author.name": "Alex Herbert",
        "pcid": "32a730d964689a023e654133099dc633b7fb3d0d",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/Shape.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', None)": [
                        103,
                        194,
                        223,
                        258
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', 'checkNumberOfBits(int)')": [
                        261
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', None)": [
                        103,
                        194,
                        223,
                        258
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', 'checkNumberOfBits(int)')": [
                        261
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/ShapeTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', None)": [
                        78,
                        117
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', 'constructor_items_bits_BadNumberOfBitsTest')": [
                        83
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', 'constructor_items_bits_hash_BadNumberOfBitsTest')": [
                        122
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', 'constructor_probability_bits_hash__BadNumberOfBitsTest')": [
                        322
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', None)": [
                        78,
                        117
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', 'constructor_items_bits_BadNumberOfBitsTest')": [
                        83
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', 'constructor_items_bits_hash_BadNumberOfBitsTest')": [
                        122
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', 'constructor_probability_bits_hash__BadNumberOfBitsTest')": [
                        322
                    ]
                }
            }
        }
    },
    "32a730d964689a023e654133099dc633b7fb3d0d": {
        "authored_data": "2020 Mar 13 15:13",
        "commit.message": "Remove Shape getNumberOfBytes\n\nThis method only applies to a Bloom filter using an uncompressed byte\nrepresentation. It is trivially derived from the number of bits.\n",
        "commit.author.name": "aherbert",
        "pcid": "7b22b4ddc69e5b957067853322e03bc829672014",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/Shape.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', None)": [
                        379,
                        380,
                        381,
                        382,
                        385,
                        386,
                        387
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', 'getNumberOfBytes')": [
                        383,
                        384
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/ShapeTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', 'constructor_items_bits_hashTest')": [
                        180
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', 'constructor_items_bitsTest')": [
                        197
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', 'constructor_items_probability_Test')": [
                        261
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', 'constructor_probability_bits_hashTest')": [
                        403
                    ]
                }
            }
        }
    },
    "7b22b4ddc69e5b957067853322e03bc829672014": {
        "authored_data": "2020 Mar 13 14:34",
        "commit.message": "Update javadoc for Shape.\n\nUpdate documented exception conditions.\n\nUpdate javadoc for the shape properties to drop AKA abbreviation.\n\nChange Probability of collision to Probability of False positives.\n\nUpdate the getProbability method to document it applies to a filter full\nto the intended capacity.\n",
        "commit.author.name": "aherbert",
        "pcid": "3a981a01b7637635025d2dde7d9f1142e25da07b",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/Shape.java": {
                "old": {
                    "(None, None)": [
                        30,
                        32,
                        33,
                        35
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', None)": [
                        61,
                        66,
                        71,
                        103,
                        104,
                        105,
                        155,
                        157,
                        193,
                        194,
                        195,
                        196,
                        222,
                        223,
                        224,
                        225,
                        244,
                        258,
                        272,
                        295,
                        302,
                        322,
                        369,
                        370,
                        371,
                        387,
                        388,
                        389,
                        396,
                        397,
                        398,
                        412
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', 'checkCalculatedProbability(double)')": [
                        305
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        32,
                        33,
                        35
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', None)": [
                        61,
                        66,
                        71,
                        103,
                        104,
                        105,
                        155,
                        157,
                        193,
                        194,
                        195,
                        196,
                        222,
                        223,
                        224,
                        225,
                        244,
                        258,
                        272,
                        295,
                        302,
                        322,
                        369,
                        370,
                        371,
                        372,
                        388,
                        389,
                        390,
                        391,
                        398,
                        399,
                        400,
                        401,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', 'checkCalculatedProbability(double)')": [
                        305
                    ]
                }
            }
        }
    },
    "3a981a01b7637635025d2dde7d9f1142e25da07b": {
        "authored_data": "2020 Mar 12 22:44",
        "commit.message": "Update BloomFilterIndex comments and added tests for negative index.",
        "commit.author.name": "Alex Herbert",
        "pcid": "391d91e3535cdb370d6cc69e04aef506813cc47b",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/BloomFilterIndexer.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#BloomFilterIndexer', 'getLongBit(int)')": [
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#BloomFilterIndexer', 'getLongBit(int)')": [
                        80,
                        81
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/BloomFilterIndexerTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#BloomFilterIndexerTest', 'testGetLongIndex')": [
                        37,
                        38,
                        39,
                        40
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BloomFilterIndexerTest', 'testGetLongBit')": [
                        47,
                        48,
                        49,
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        91
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BloomFilterIndexerTest', 'testGetLongIndex')": [
                        38,
                        39,
                        40,
                        41,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BloomFilterIndexerTest', 'testGetLongBit')": [
                        57,
                        58,
                        59,
                        60,
                        62,
                        63,
                        64
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BloomFilterIndexerTest', None)": [
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BloomFilterIndexerTest', 'getIndexes')": [
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90
                    ]
                }
            }
        }
    },
    "391d91e3535cdb370d6cc69e04aef506813cc47b": {
        "authored_data": "2020 Mar 12 16:59",
        "commit.message": "Improved documentation of Murmur3 hash functions.\n\nAdded references to Commons Codec and SMHasher.\n",
        "commit.author.name": "aherbert",
        "pcid": "8fb518e6a136d6e8c38f5e3f81589c67599d7b66",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/function/Murmur128x86Cyclic.java": {
                "old": {
                    "(None, None)": [
                        24,
                        26
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher.function#Murmur128x86Cyclic', None)": [
                        34,
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        26,
                        27,
                        28,
                        29,
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/function/Murmur32x86Iterative.java": {
                "old": {
                    "(None, None)": [
                        24,
                        26
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher.function#Murmur32x86Iterative', None)": [
                        34,
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        26,
                        27,
                        28,
                        29,
                        31,
                        32
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher.function#Murmur32x86Iterative', None)": [
                        65
                    ]
                }
            }
        }
    }
}