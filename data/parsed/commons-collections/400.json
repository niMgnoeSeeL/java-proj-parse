{
    "39aef5978586b0c344daf4e84a508895722e7f49": {
        "authored_data": "2020 Mar 18 11:18",
        "commit.message": "Optimise DynamicHasher iterator.",
        "commit.author.name": "Alex Herbert",
        "pcid": "bbee9fbd9b7d4a392ea2a43e8413065195d1823a",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasher.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasher', None)": [
                        89,
                        90,
                        91,
                        99,
                        104,
                        105,
                        111,
                        112,
                        113,
                        114,
                        115,
                        117,
                        124,
                        148,
                        149,
                        153,
                        154
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasher', None)": [
                        87,
                        88,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        137,
                        139,
                        146,
                        170,
                        171,
                        172,
                        176,
                        177,
                        178
                    ]
                }
            }
        }
    },
    "bbee9fbd9b7d4a392ea2a43e8413065195d1823a": {
        "authored_data": "2020 Mar 18 10:49",
        "commit.message": "Update Hasher.Builder.\n\nAdd default methods to add a CharSequenece.\n\nMake it clear each object added to the Builder should represent an\nentire item.\n\nDocument that build() should reset the builder for future use.\n",
        "commit.author.name": "Alex Herbert",
        "pcid": "a34da7bcf532488860e9fc4e56c228df95d62b61",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasher.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasher', None)": [
                        38,
                        57,
                        58,
                        59,
                        60,
                        61,
                        64,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        78,
                        79,
                        80,
                        81,
                        82,
                        84,
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasher', None)": [
                        38,
                        59,
                        60,
                        61,
                        62,
                        63,
                        67,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/Hasher.java": {
                "old": {
                    "(None, None)": [
                        54,
                        60,
                        62,
                        65,
                        68,
                        70,
                        73,
                        76,
                        78,
                        81
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        61,
                        62,
                        63,
                        64,
                        70,
                        72,
                        75,
                        78,
                        79,
                        81,
                        82,
                        85,
                        86,
                        87,
                        90,
                        91,
                        93,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/HasherBloomFilterTest.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.collections4.bloomfilter#HasherBloomFilterTest', 'constructorTest_NonStatic')": [
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.collections4.bloomfilter#HasherBloomFilterTest', 'constructorTest_NonStatic')": [
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasherBuilderTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', None)": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        51
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'buildTest_byte')": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'buildTest_byteArray')": [
                        58,
                        59
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'buildTest_String')": [
                        85,
                        86
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'setup')": [
                        100
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', None)": [
                        36,
                        37,
                        38,
                        85,
                        86,
                        87,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        115,
                        116,
                        117
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'buildTest_byteArray')": [
                        45,
                        46,
                        47
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'buildTest_String')": [
                        73,
                        74,
                        75
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'buildTest_UnencodedString')": [
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'buildResetTest')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'setup')": [
                        122
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasherTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits')": [
                        83
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits_MultipleHashes')": [
                        102
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits_WrongShape')": [
                        125
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits')": [
                        84
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits_MultipleHashes')": [
                        103
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits_WrongShape')": [
                        126
                    ]
                }
            }
        }
    },
    "a34da7bcf532488860e9fc4e56c228df95d62b61": {
        "authored_data": "2020 Mar 18 09:24",
        "commit.message": "DefaultBloomFilterMethodsTest: Correct javadoc for internal test class",
        "commit.author.name": "Alex Herbert",
        "pcid": "f157196e0005dd6b79cd8efb530b272de5e10354",
        "changes": {
            "src/test/java/org/apache/commons/collections4/bloomfilter/DefaultBloomFilterMethodsTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#DefaultBloomFilterMethodsTest', None)": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#DefaultBloomFilterMethodsTest', None)": [
                        38
                    ]
                }
            }
        }
    },
    "00408690a26587b45f6efc819553c02126b21c25": {
        "authored_data": "2020 Mar 18 06:49",
        "commit.message": "Fixtypo for BloomfilterTest\n",
        "commit.author.name": "dota17",
        "pcid": "2cbac58f7e3b51a4f2f3a6672bb4380e18469c50",
        "changes": {
            "src/test/java/org/apache/commons/collections4/bloomfilter/ArrayCountingBloomFilterTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', None)": [
                        325
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', None)": [
                        325
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/DefaultBloomFilterMethodsTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#DefaultBloomFilterMethodsTest', None)": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#DefaultBloomFilterMethodsTest', None)": [
                        38
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasherTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits_MultipleHashes')": [
                        113
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits_WrongShape')": [
                        129
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits_MultipleHashes')": [
                        113
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits_WrongShape')": [
                        129
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/StaticHasherTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', None)": [
                        112,
                        143,
                        199,
                        301
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Hasher_WrongShape')": [
                        164
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Iterator_ValueTooBig')": [
                        208
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Iterator_ValueTooSmall')": [
                        225
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_StaticHasher_WrongShape')": [
                        257
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testGetBits_WrongShape')": [
                        310
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', None)": [
                        112,
                        143,
                        199,
                        301
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Hasher_WrongShape')": [
                        164
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Iterator_ValueTooBig')": [
                        208
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Iterator_ValueTooSmall')": [
                        225
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_StaticHasher_WrongShape')": [
                        257
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testGetBits_WrongShape')": [
                        310
                    ]
                }
            }
        }
    },
    "2cbac58f7e3b51a4f2f3a6672bb4380e18469c50": {
        "authored_data": "2020 Mar 17 12:57",
        "commit.message": "Remove empty line.",
        "commit.author.name": "Alex Herbert",
        "pcid": "70947b1767946a665337969326fdcbdd0049537d",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasher.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasher', None)": [
                        55
                    ]
                }
            }
        }
    },
    "70947b1767946a665337969326fdcbdd0049537d": {
        "authored_data": "2020 Mar 17 12:43",
        "commit.message": "Add link to Hasher in the HashFunction javadoc header",
        "commit.author.name": "Alex Herbert",
        "pcid": "ac2c7f22065673ce737674691fa448e43a9f676a",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/HashFunction.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            }
        }
    },
    "ac2c7f22065673ce737674691fa448e43a9f676a": {
        "authored_data": "2020 Mar 17 12:41",
        "commit.message": "Improve documentation of Hasher.",
        "commit.author.name": "Alex Herbert",
        "pcid": "0feeab0820ff7d01681dab897a0d428eca3de3df",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/Hasher.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        52,
                        53,
                        62,
                        63,
                        72,
                        73,
                        80,
                        81
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93
                    ]
                }
            }
        }
    },
    "0feeab0820ff7d01681dab897a0d428eca3de3df": {
        "authored_data": "2020 Mar 17 12:27",
        "commit.message": "Change Hasher.getBits() to iterator()",
        "commit.author.name": "Alex Herbert",
        "pcid": "976d64583525e604c4e04ac57ff4c600d2c61bfe",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/AbstractBloomFilter.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilter', 'contains(Hasher)')": [
                        88
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilter', 'contains(Hasher)')": [
                        88
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/ArrayCountingBloomFilter.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', None)": [
                        162
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'contains(Hasher)')": [
                        197
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', None)": [
                        162
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'contains(Hasher)')": [
                        197
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/BitSetBloomFilter.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#BitSetBloomFilter', None)": [
                        48
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BitSetBloomFilter', 'contains(Hasher)')": [
                        80
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BitSetBloomFilter', 'merge(Hasher)')": [
                        113
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#BitSetBloomFilter', None)": [
                        48
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BitSetBloomFilter', 'contains(Hasher)')": [
                        80
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BitSetBloomFilter', 'merge(Hasher)')": [
                        113
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/HasherBloomFilter.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#HasherBloomFilter', 'contains(Hasher)')": [
                        83,
                        86
                    ],
                    "('org.apache.commons.collections4.bloomfilter#HasherBloomFilter', 'getBits')": [
                        112
                    ],
                    "('org.apache.commons.collections4.bloomfilter#HasherBloomFilter', 'merge(Hasher)')": [
                        150,
                        151
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#HasherBloomFilter', 'contains(Hasher)')": [
                        83,
                        86
                    ],
                    "('org.apache.commons.collections4.bloomfilter#HasherBloomFilter', 'getBits')": [
                        112
                    ],
                    "('org.apache.commons.collections4.bloomfilter#HasherBloomFilter', 'merge(Hasher)')": [
                        150,
                        151
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/IndexFilters.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#IndexFilters', None)": [
                        46,
                        57
                    ],
                    "('org.apache.commons.collections4.bloomfilter#IndexFilters', 'distinctIndexes(Hasher,Shape,IntConsumer)')": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#IndexFilters', None)": [
                        46,
                        57
                    ],
                    "('org.apache.commons.collections4.bloomfilter#IndexFilters', 'distinctIndexes(Hasher,Shape,IntConsumer)')": [
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasher.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasher', 'getBits(Shape)')": [
                        173
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasher', 'iterator(Shape)')": [
                        173
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/Hasher.java": {
                "old": {
                    "(None, None)": [
                        27,
                        53,
                        63,
                        73,
                        88
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        53,
                        63,
                        73,
                        88
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/StaticHasher.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasher', None)": [
                        49
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasher', 'getBits(Shape)')": [
                        104
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasher', None)": [
                        49
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasher', 'iterator(Shape)')": [
                        104
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/AbstractBloomFilterTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilterTest', 'assertSameBits(StaticHasher,StaticHasher)')": [
                        206,
                        207
                    ],
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilterTest', 'createGenericFilter(Hasher,Shape)')": [
                        377
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilterTest', 'assertSameBits(StaticHasher,StaticHasher)')": [
                        206,
                        207
                    ],
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilterTest', 'createGenericFilter(Hasher,Shape)')": [
                        377
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/DefaultBloomFilterMethodsTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#DefaultBloomFilterMethodsTest', None)": [
                        51,
                        84
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#DefaultBloomFilterMethodsTest', None)": [
                        51,
                        84
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/FixedIndexesTestHasher.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#FixedIndexesTestHasher', 'getBits(Shape)')": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#FixedIndexesTestHasher', 'iterator(Shape)')": [
                        50
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/HasherBloomFilterTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#HasherBloomFilterTest', 'getBitsTest_LowestBitOnly')": [
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#HasherBloomFilterTest', 'getBitsTest_LowestBitOnly')": [
                        81
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/IndexFilterTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#IndexFilterTest', 'assertFilter(int)')": [
                        98
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#IndexFilterTest', 'assertFilter(int)')": [
                        98
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasherBuilderTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'buildTest_byte')": [
                        46
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'buildTest_byteArray')": [
                        61
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'buildTest_Empty')": [
                        75
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'buildTest_String')": [
                        88
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'buildTest_byte')": [
                        46
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'buildTest_byteArray')": [
                        61
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'buildTest_Empty')": [
                        75
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', 'buildTest_String')": [
                        88
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasherTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits')": [
                        85
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits_MultipleHashes')": [
                        104
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits_WongShape')": [
                        123,
                        128
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits')": [
                        85
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits_MultipleHashes')": [
                        104
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits_WrongShape')": [
                        123,
                        128
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/StaticHasherTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'assertSameBits(StaticHasher,StaticHasher)')": [
                        101,
                        102
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Hasher')": [
                        122,
                        134
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Hasher_WrongShape')": [
                        151
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Iterator')": [
                        188
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', None)": [
                        264,
                        281
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testGetBits')": [
                        272
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testGetBits_DuplicateValues')": [
                        292
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testGetBits_WrongShape')": [
                        309
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'assertSameBits(StaticHasher,StaticHasher)')": [
                        101,
                        102
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Hasher')": [
                        122,
                        134
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Hasher_WrongShape')": [
                        151
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Iterator')": [
                        188
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', None)": [
                        264,
                        281
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testGetBits')": [
                        272
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testGetBits_DuplicateValues')": [
                        292
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testGetBits_WrongShape')": [
                        309
                    ]
                }
            }
        }
    }
}