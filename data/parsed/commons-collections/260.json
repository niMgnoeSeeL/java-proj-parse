{
    "7772907e3a1c379261d7614fc53d3a6d24343bcd": {
        "authored_data": "2020 Nov 21 17:49",
        "commit.message": "Use for-each.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "057ab56f3e3b9bf999104f29e9b1534a611298cc",
        "changes": {
            "src/test/java/org/apache/commons/collections4/MapUtilsTest.java": {
                "old": {
                    "('org.apache.commons.collections4#MapUtilsTest', 'testPopulateMap')": [
                        816,
                        817,
                        818,
                        819,
                        820,
                        828,
                        829,
                        830,
                        831,
                        832
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testPopulateMultiMap')": [
                        869,
                        870,
                        871
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#MapUtilsTest', 'testPopulateMap')": [
                        816,
                        817,
                        818,
                        819,
                        820,
                        828,
                        829,
                        830,
                        831,
                        832
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testPopulateMultiMap')": [
                        869,
                        870,
                        871
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java": {
                "old": {
                    "('org.apache.commons.collections4.collection#AbstractCollectionTest', 'testCollectionIterator')": [
                        755
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.collection#AbstractCollectionTest', 'testCollectionIterator')": [
                        755
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/iterators/CollatingIteratorTest.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#CollatingIteratorTest', 'testIterateEven')": [
                        100,
                        101,
                        102
                    ],
                    "('org.apache.commons.collections4.iterators#CollatingIteratorTest', 'testIterateEvenEven')": [
                        132,
                        133,
                        134,
                        137
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.iterators#CollatingIteratorTest', 'testIterateEven')": [
                        100,
                        101,
                        102
                    ],
                    "('org.apache.commons.collections4.iterators#CollatingIteratorTest', 'testIterateEvenEven')": [
                        132,
                        133,
                        134,
                        137
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/iterators/ZippingIteratorTest.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#ZippingIteratorTest', 'testIterateEven')": [
                        83,
                        85
                    ],
                    "('org.apache.commons.collections4.iterators#ZippingIteratorTest', 'testIterateEvenEven')": [
                        116,
                        118,
                        120
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.iterators#ZippingIteratorTest', 'testIterateEven')": [
                        83,
                        85
                    ],
                    "('org.apache.commons.collections4.iterators#ZippingIteratorTest', 'testIterateEvenEven')": [
                        116,
                        118,
                        120
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/sequence/SequencesComparatorTest.java": {
                "old": {
                    "('org.apache.commons.collections4.sequence#SequencesComparatorTest', 'testShadok')": [
                        132,
                        134,
                        135
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.sequence#SequencesComparatorTest', 'testShadok')": [
                        132,
                        134,
                        135
                    ]
                }
            }
        }
    },
    "057ab56f3e3b9bf999104f29e9b1534a611298cc": {
        "authored_data": "2020 Nov 21 15:12",
        "commit.message": "Use try-with-resource.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "080a393b4fb33dbdfd4292c219fdce30bd5c19d5",
        "changes": {
            "src/test/java/org/apache/commons/collections4/AbstractObjectTest.java": {
                "old": {
                    "('org.apache.commons.collections4#AbstractObjectTest', 'writeExternalFormToDisk(Serializable,String)')": [
                        264,
                        265,
                        267,
                        268
                    ],
                    "('org.apache.commons.collections4#AbstractObjectTest', 'readExternalFormFromDisk(String)')": [
                        297,
                        298,
                        300,
                        301
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#AbstractObjectTest', 'writeExternalFormToDisk(Serializable,String)')": [
                        264
                    ],
                    "('org.apache.commons.collections4#AbstractObjectTest', 'readExternalFormFromDisk(String)')": [
                        294
                    ]
                }
            }
        }
    },
    "080a393b4fb33dbdfd4292c219fdce30bd5c19d5": {
        "authored_data": "2020 Nov 21 03:08",
        "commit.message": "Use final.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "8ce3f9a199205105556c1cca5c0e8f8e84d3ec3f",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/AbstractBloomFilter.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilter', 'opCardinality(BloomFilter,LongBinaryOperator)')": [
                        178
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilter', 'opCardinality(BloomFilter,LongBinaryOperator)')": [
                        178
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/ArrayCountingBloomFilter.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'contains(BloomFilter)')": [
                        155
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'remove(BloomFilter)')": [
                        233
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'remove(Hasher)')": [
                        239
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'add(CountingBloomFilter)')": [
                        245
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'subtract(CountingBloomFilter)')": [
                        251
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'forEachCount(BitCountConsumer)')": [
                        276
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'increment(int)')": [
                        324
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'decrement(int)')": [
                        335
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'add(int,int)')": [
                        347
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'subtract(int,int)')": [
                        359
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'contains(BloomFilter)')": [
                        155
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'remove(BloomFilter)')": [
                        233
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'remove(Hasher)')": [
                        239
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'add(CountingBloomFilter)')": [
                        245
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'subtract(CountingBloomFilter)')": [
                        251
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'forEachCount(BitCountConsumer)')": [
                        276
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'increment(int)')": [
                        324
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'decrement(int)')": [
                        335
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'add(int,int)')": [
                        347
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilter', 'subtract(int,int)')": [
                        359
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/BloomFilterIndexer.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#BloomFilterIndexer', 'checkPositive(int)')": [
                        35
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BloomFilterIndexer', 'getLongIndex(int)')": [
                        55
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BloomFilterIndexer', 'getLongBit(int)')": [
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#BloomFilterIndexer', 'checkPositive(int)')": [
                        35
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BloomFilterIndexer', 'getLongIndex(int)')": [
                        55
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BloomFilterIndexer', 'getLongBit(int)')": [
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/IndexFilters.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#IndexFilters', 'distinctIndexes(Hasher,Shape,IntConsumer)')": [
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#IndexFilters', 'distinctIndexes(Hasher,Shape,IntConsumer)')": [
                        59
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasher.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasher', None)": [
                        73,
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasher', None)": [
                        73,
                        79
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/HashFunctionValidator.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#HashFunctionValidator', 'hash(HashFunctionIdentity)')": [
                        50
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#HashFunctionValidator', 'areEqual(HashFunctionIdentity,HashFunctionIdentity)')": [
                        69
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#HashFunctionValidator', 'checkAreEqual(HashFunctionIdentity,HashFunctionIdentity)')": [
                        84
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#HashFunctionValidator', 'hash(HashFunctionIdentity)')": [
                        50
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#HashFunctionValidator', 'areEqual(HashFunctionIdentity,HashFunctionIdentity)')": [
                        69
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#HashFunctionValidator', 'checkAreEqual(HashFunctionIdentity,HashFunctionIdentity)')": [
                        84
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/Hasher.java": {
                "old": {
                    "(None, None)": [
                        85,
                        96,
                        97
                    ]
                },
                "new": {
                    "(None, None)": [
                        85,
                        96,
                        97
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/function/Signatures.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher.function#Signatures', 'getSignature(HashFunction)')": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher.function#Signatures', 'getSignature(HashFunction)')": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/properties/AbstractPropertiesFactory.java": {
                "old": {
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactory', None)": [
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactory', None)": [
                        56
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/MapUtilsTest.java": {
                "old": {
                    "('org.apache.commons.collections4#MapUtilsTest', 'testInvertEmptyMap')": [
                        162,
                        163
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testInvertMapNull')": [
                        169,
                        170,
                        173
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testUnmodifiableMap')": [
                        1019
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testUnmodifiableSortedMap')": [
                        1026
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testFixedSizeMap')": [
                        1033
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testFixedSizeSortedMap')": [
                        1040
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#MapUtilsTest', 'testInvertEmptyMap')": [
                        162,
                        163
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testInvertMapNull')": [
                        169,
                        170,
                        173
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testUnmodifiableMap')": [
                        1019
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testUnmodifiableSortedMap')": [
                        1026
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testFixedSizeMap')": [
                        1033
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testFixedSizeSortedMap')": [
                        1040
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/AbstractBloomFilterTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilterTest', None)": [
                        52,
                        68,
                        73
                    ],
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilterTest', 'andCardinalityTest(BiFunction)')": [
                        166
                    ],
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilterTest', 'createGenericFilter(Hasher,Shape)')": [
                        375,
                        376
                    ],
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilterTest', 'mergeTest_BloomFilter(BiFunction)')": [
                        458
                    ],
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilterTest', 'orCardinalityTest(BiFunction)')": [
                        556
                    ],
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilterTest', 'xorCardinalityTest(BiFunction)')": [
                        610
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilterTest', None)": [
                        52,
                        68,
                        73
                    ],
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilterTest', 'andCardinalityTest(BiFunction)')": [
                        166
                    ],
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilterTest', 'createGenericFilter(Hasher,Shape)')": [
                        375,
                        376
                    ],
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilterTest', 'mergeTest_BloomFilter(BiFunction)')": [
                        458
                    ],
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilterTest', 'orCardinalityTest(BiFunction)')": [
                        556
                    ],
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilterTest', 'xorCardinalityTest(BiFunction)')": [
                        610
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/ArrayCountingBloomFilterTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', None)": [
                        43,
                        44
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'createFilter(Hasher,Shape)')": [
                        56
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'createFromCounts(int)')": [
                        61,
                        65
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'assertCounts(CountingBloomFilter,int)')": [
                        83
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'createDuplicates(int)')": [
                        211,
                        214
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'assertMerge(Function,BiPredicate)')": [
                        230,
                        231
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'assertRemove(Function,BiPredicate)')": [
                        246,
                        247
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'assertOperation(int,int,Function,BiPredicate,boolean,int)')": [
                        270,
                        271,
                        272,
                        273
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'mergeTest_Overflow')": [
                        291
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'removeTest_Negative')": [
                        316,
                        319
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'assertCountingOperation(int,int,BiPredicate,boolean,int)')": [
                        444,
                        445,
                        446
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'assertCardinalityOperation(int,int,ToIntBiFunction,int)')": [
                        527,
                        528,
                        529
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', None)": [
                        43,
                        44
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'createFilter(Hasher,Shape)')": [
                        56
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'createFromCounts(int)')": [
                        61,
                        65
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'assertCounts(CountingBloomFilter,int)')": [
                        83
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'createDuplicates(int)')": [
                        211,
                        214
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'assertMerge(Function,BiPredicate)')": [
                        230,
                        231
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'assertRemove(Function,BiPredicate)')": [
                        246,
                        247
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'assertOperation(int,int,Function,BiPredicate,boolean,int)')": [
                        270,
                        271,
                        272,
                        273
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'mergeTest_Overflow')": [
                        291
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'removeTest_Negative')": [
                        316,
                        319
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'assertCountingOperation(int,int,BiPredicate,boolean,int)')": [
                        444,
                        445,
                        446
                    ],
                    "('org.apache.commons.collections4.bloomfilter#ArrayCountingBloomFilterTest', 'assertCardinalityOperation(int,int,ToIntBiFunction,int)')": [
                        527,
                        528,
                        529
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/BitSetBloomFilterTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#BitSetBloomFilterTest', 'createFilter(Hasher,Shape)')": [
                        33
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#BitSetBloomFilterTest', 'createFilter(Hasher,Shape)')": [
                        33
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/BloomFilterIndexerTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#BloomFilterIndexerTest', 'getIndexes')": [
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#BloomFilterIndexerTest', 'getIndexes')": [
                        75
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/FixedIndexesTestHasher.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#FixedIndexesTestHasher', None)": [
                        34,
                        36,
                        44
                    ],
                    "('org.apache.commons.collections4.bloomfilter#FixedIndexesTestHasher', 'iterator(Shape)')": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#FixedIndexesTestHasher', None)": [
                        34,
                        36,
                        44
                    ],
                    "('org.apache.commons.collections4.bloomfilter#FixedIndexesTestHasher', 'iterator(Shape)')": [
                        50
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/HasherBloomFilterTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#HasherBloomFilterTest', 'getBitsTest_Empty')": [
                        67
                    ],
                    "('org.apache.commons.collections4.bloomfilter#HasherBloomFilterTest', 'getBitsTest_LowestBitOnly')": [
                        77,
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#HasherBloomFilterTest', 'getBitsTest_Empty')": [
                        67
                    ],
                    "('org.apache.commons.collections4.bloomfilter#HasherBloomFilterTest', 'getBitsTest_LowestBitOnly')": [
                        77,
                        81
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/IndexFilterTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#IndexFilterTest', None)": [
                        42
                    ],
                    "('org.apache.commons.collections4.bloomfilter#IndexFilterTest', 'assertFilter(int)')": [
                        88,
                        99
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#IndexFilterTest', None)": [
                        42
                    ],
                    "('org.apache.commons.collections4.bloomfilter#IndexFilterTest', 'assertFilter(int)')": [
                        88,
                        99
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/SetOperationsTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#SetOperationsTest', 'testDifferentShapesThrows')": [
                        66,
                        67,
                        68,
                        71,
                        72,
                        73
                    ],
                    "('org.apache.commons.collections4.bloomfilter#SetOperationsTest', None)": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#SetOperationsTest', 'testDifferentShapesThrows')": [
                        66,
                        67,
                        68,
                        71,
                        72,
                        73
                    ],
                    "('org.apache.commons.collections4.bloomfilter#SetOperationsTest', None)": [
                        78
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasherBuilderTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', None)": [
                        38,
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherBuilderTest', None)": [
                        38,
                        40
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/HasherBuilderTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#HasherBuilderTest', None)": [
                        48
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#HasherBuilderTest', 'withCharSequenceTest')": [
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#HasherBuilderTest', None)": [
                        48
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#HasherBuilderTest', 'withCharSequenceTest')": [
                        65
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/keyvalue/MultiKeyTest.java": {
                "old": {
                    "('org.apache.commons.collections4.keyvalue#MultiKeyTest', 'testTwoArgCtor')": [
                        294,
                        295,
                        296
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.keyvalue#MultiKeyTest', 'testTwoArgCtor')": [
                        294,
                        295,
                        296
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/multimap/UnmodifiableMultiValuedMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.multimap#UnmodifiableMultiValuedMapTest', 'assertMapContainsAllValues(MultiValuedMap)')": [
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.multimap#UnmodifiableMultiValuedMapTest', 'assertMapContainsAllValues(MultiValuedMap)')": [
                        55
                    ]
                }
            }
        }
    },
    "8ce3f9a199205105556c1cca5c0e8f8e84d3ec3f": {
        "authored_data": "2020 Nov 21 02:23",
        "commit.message": "Remove unused import.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "ac932bb6a7f8fc137616a07970aa1e5e42cf424d",
        "changes": {
            "src/test/java/org/apache/commons/collections4/collection/IndexedCollectionTest.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                }
            }
        }
    },
    "ac932bb6a7f8fc137616a07970aa1e5e42cf424d": {
        "authored_data": "2020 Nov 20 23:23",
        "commit.message": "No need to initialize to default.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "ce0cadd5e23c73b9f775a302460bc45e77d30f98",
        "changes": {
            "src/test/java/org/apache/commons/collections4/ClosureUtilsTest.java": {
                "old": {
                    "('org.apache.commons.collections4#ClosureUtilsTest', 'testIfClosure')": [
                        233
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#ClosureUtilsTest', 'testIfClosure')": [
                        233
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/map/LRUMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.map#LRUMapTest', 'testAccessOrder')": [
                        205,
                        206
                    ],
                    "('org.apache.commons.collections4.map#LRUMapTest', 'testAccessOrder2')": [
                        279,
                        280
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#LRUMapTest', 'testAccessOrder')": [
                        205,
                        206
                    ],
                    "('org.apache.commons.collections4.map#LRUMapTest', 'testAccessOrder2')": [
                        279,
                        280
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/multimap/ArrayListValuedHashMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.multimap#ArrayListValuedHashMapTest', 'testArrayListValuedHashMap')": [
                        153,
                        154
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.multimap#ArrayListValuedHashMapTest', 'testArrayListValuedHashMap')": [
                        153,
                        154
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/multimap/HashSetValuedHashMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.multimap#HashSetValuedHashMapTest', 'testHashSetValueHashMap_1')": [
                        148,
                        150
                    ],
                    "('org.apache.commons.collections4.multimap#HashSetValuedHashMapTest', 'testHashSetValuedHashMap_2')": [
                        170,
                        171
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.multimap#HashSetValuedHashMapTest', 'testHashSetValueHashMap_1')": [
                        148,
                        150
                    ],
                    "('org.apache.commons.collections4.multimap#HashSetValuedHashMapTest', 'testHashSetValuedHashMap_2')": [
                        170,
                        171
                    ]
                }
            }
        }
    },
    "ce0cadd5e23c73b9f775a302460bc45e77d30f98": {
        "authored_data": "2020 Nov 20 22:56",
        "commit.message": "Remove redundant calls to super().\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "bd9d3873fe80dd16f7f2db6fe1a2f5e21aab8a27",
        "changes": {
            "src/main/java/org/apache/commons/collections4/ArrayStack.java": {
                "old": {
                    "('org.apache.commons.collections4#ArrayStack', None)": [
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/FunctorException.java": {
                "old": {
                    "('org.apache.commons.collections4#FunctorException', None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/IterableUtils.java": {
                "old": {
                    "('org.apache.commons.collections4#IterableUtils', None)": [
                        482
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bag/AbstractBagDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.bag#AbstractBagDecorator', None)": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bag/AbstractMapBag.java": {
                "old": {
                    "('org.apache.commons.collections4.bag#AbstractMapBag', None)": [
                        60,
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bag/AbstractSortedBagDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.bag#AbstractSortedBagDecorator', None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bidimap/AbstractDualBidiMap.java": {
                "old": {
                    "('org.apache.commons.collections4.bidimap#AbstractDualBidiMap', None)": [
                        87,
                        105,
                        120,
                        750
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bidimap/DualTreeBidiMap.java": {
                "old": {
                    "('org.apache.commons.collections4.bidimap#DualTreeBidiMap', None)": [
                        318
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java": {
                "old": {
                    "('org.apache.commons.collections4.bidimap#TreeBidiMap', None)": [
                        125,
                        1504,
                        1677,
                        1908
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/collection/AbstractCollectionDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.collection#AbstractCollectionDecorator', None)": [
                        73
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/collection/CompositeCollection.java": {
                "old": {
                    "('org.apache.commons.collections4.collection#CompositeCollection', None)": [
                        58,
                        67,
                        79,
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/comparators/ComparableComparator.java": {
                "old": {
                    "('org.apache.commons.collections4.comparators#ComparableComparator', None)": [
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/comparators/FixedOrderComparator.java": {
                "old": {
                    "('org.apache.commons.collections4.comparators#FixedOrderComparator', None)": [
                        84,
                        97,
                        113
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/AndPredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#AndPredicate', None)": [
                        62
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/ChainedClosure.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#ChainedClosure', None)": [
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/ChainedTransformer.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#ChainedTransformer', None)": [
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/CloneTransformer.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#CloneTransformer', None)": [
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/ClosureTransformer.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#ClosureTransformer', None)": [
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/ComparatorPredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#ComparatorPredicate', None)": [
                        136
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/ConstantFactory.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#ConstantFactory', None)": [
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/ConstantTransformer.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#ConstantTransformer', None)": [
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/DefaultEquator.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#DefaultEquator', None)": [
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/EqualPredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#EqualPredicate', None)": [
                        92
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/ExceptionClosure.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#ExceptionClosure', None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/ExceptionFactory.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#ExceptionFactory', None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/ExceptionPredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#ExceptionPredicate', None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/ExceptionTransformer.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#ExceptionTransformer', None)": [
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/FactoryTransformer.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#FactoryTransformer', None)": [
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/FalsePredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#FalsePredicate', None)": [
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/ForClosure.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#ForClosure', None)": [
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/FunctorUtils.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#FunctorUtils', None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/IdentityPredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#IdentityPredicate', None)": [
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/IfClosure.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#IfClosure', None)": [
                        103
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/IfTransformer.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#IfTransformer', None)": [
                        96
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/InstanceofPredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#InstanceofPredicate', None)": [
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/InstantiateFactory.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#InstantiateFactory', None)": [
                        82,
                        98
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/InstantiateTransformer.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#InstantiateTransformer', None)": [
                        84,
                        99
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/InvokerTransformer.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#InvokerTransformer', None)": [
                        92,
                        109
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/MapTransformer.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#MapTransformer', None)": [
                        62
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/NOPClosure.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#NOPClosure', None)": [
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/NOPTransformer.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#NOPTransformer', None)": [
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/NotNullPredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#NotNullPredicate', None)": [
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/NotPredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#NotPredicate', None)": [
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/NullIsExceptionPredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#NullIsExceptionPredicate', None)": [
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/NullIsFalsePredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#NullIsFalsePredicate', None)": [
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/NullIsTruePredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#NullIsTruePredicate', None)": [
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/NullPredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#NullPredicate', None)": [
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/OrPredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#OrPredicate', None)": [
                        62
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/PredicateTransformer.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#PredicateTransformer', None)": [
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/PrototypeFactory.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#PrototypeFactory', None)": [
                        94,
                        113,
                        166
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/StringValueTransformer.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#StringValueTransformer', None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/SwitchClosure.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#SwitchClosure', None)": [
                        120
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/SwitchTransformer.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#SwitchTransformer', None)": [
                        131
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/TransformerClosure.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#TransformerClosure', None)": [
                        61
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/TransformerPredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#TransformerPredicate', None)": [
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/TruePredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#TruePredicate', None)": [
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/UniquePredicate.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#UniquePredicate', None)": [
                        55
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/WhileClosure.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#WhileClosure', None)": [
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/AbstractEmptyIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#AbstractEmptyIterator', None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/AbstractEmptyMapIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#AbstractEmptyMapIterator', None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/AbstractListIteratorDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#AbstractListIteratorDecorator', None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/AbstractMapIteratorDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#AbstractMapIteratorDecorator', None)": [
                        45
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/AbstractOrderedMapIteratorDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#AbstractOrderedMapIteratorDecorator', None)": [
                        45
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/AbstractUntypedIteratorDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#AbstractUntypedIteratorDecorator', None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/ArrayIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#ArrayIterator', None)": [
                        89,
                        90
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/EmptyIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#EmptyIterator', None)": [
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/EmptyListIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#EmptyListIterator', None)": [
                        72
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/EmptyMapIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#EmptyMapIterator', None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/EmptyOrderedIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#EmptyOrderedIterator', None)": [
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/EmptyOrderedMapIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#EmptyOrderedMapIterator', None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/EntrySetMapIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#EntrySetMapIterator', None)": [
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/EnumerationIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#EnumerationIterator', None)": [
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/FilterIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#FilterIterator', None)": [
                        50,
                        60,
                        72
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/FilterListIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#FilterListIterator', None)": [
                        77,
                        87,
                        98,
                        110
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/IteratorChain.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#IteratorChain', None)": [
                        79,
                        96,
                        111,
                        126,
                        145
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/IteratorIterable.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#IteratorIterable', None)": [
                        118
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/ListIteratorWrapper.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#ListIteratorWrapper', None)": [
                        79
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/ObjectArrayIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#ObjectArrayIterator', None)": [
                        83
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/ObjectGraphIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#ObjectGraphIterator', None)": [
                        107,
                        127
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/PushbackIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#PushbackIterator', None)": [
                        73
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/ReverseListIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#ReverseListIterator', None)": [
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/SingletonIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#SingletonIterator', None)": [
                        61
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/SingletonListIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#SingletonListIterator', None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/TransformIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#TransformIterator', None)": [
                        42,
                        52,
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/UnmodifiableIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#UnmodifiableIterator', None)": [
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/UnmodifiableListIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#UnmodifiableListIterator', None)": [
                        64
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/UnmodifiableMapIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#UnmodifiableMapIterator', None)": [
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/UnmodifiableOrderedMapIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#UnmodifiableOrderedMapIterator', None)": [
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/keyvalue/AbstractKeyValue.java": {
                "old": {
                    "('org.apache.commons.collections4.keyvalue#AbstractKeyValue', None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/keyvalue/MultiKey.java": {
                "old": {
                    "('org.apache.commons.collections4.keyvalue#MultiKey', None)": [
                        220
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/keyvalue/TiedMapEntry.java": {
                "old": {
                    "('org.apache.commons.collections4.keyvalue#TiedMapEntry', None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/list/AbstractLinkedList.java": {
                "old": {
                    "('org.apache.commons.collections4.list#AbstractLinkedList', None)": [
                        78,
                        87,
                        673,
                        684,
                        696,
                        810
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/list/AbstractListDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.list#AbstractListDecorator', None)": [
                        45
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/list/CursorableLinkedList.java": {
                "old": {
                    "('org.apache.commons.collections4.list#CursorableLinkedList', None)": [
                        74
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/list/NodeCachingLinkedList.java": {
                "old": {
                    "('org.apache.commons.collections4.list#NodeCachingLinkedList', None)": [
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/list/TreeList.java": {
                "old": {
                    "('org.apache.commons.collections4.list#TreeList', None)": [
                        80,
                        90,
                        1021
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#AbstractHashedMap', None)": [
                        101,
                        113,
                        142,
                        849,
                        949,
                        1038,
                        1104,
                        1180
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/AbstractInputCheckedMapDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.map#AbstractInputCheckedMapDecorator', None)": [
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/AbstractLinkedMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#AbstractLinkedMap', None)": [
                        78,
                        558
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/AbstractMapDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.map#AbstractMapDecorator', None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/AbstractOrderedMapDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.map#AbstractOrderedMapDecorator', None)": [
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/AbstractReferenceMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#AbstractReferenceMap', None)": [
                        154,
                        798
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/AbstractSortedMapDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.map#AbstractSortedMapDecorator', None)": [
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/Flat3Map.java": {
                "old": {
                    "('org.apache.commons.collections4.map#Flat3Map', None)": [
                        113,
                        123,
                        646,
                        769,
                        993,
                        1069
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#ListOrderedMap', None)": [
                        516,
                        567,
                        604,
                        729
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/PassiveExpiringMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#PassiveExpiringMap', None)": [
                        105
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/SingletonMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#SingletonMap', None)": [
                        78,
                        89,
                        100,
                        111,
                        124,
                        434,
                        519
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/multimap/AbstractListValuedMap.java": {
                "old": {
                    "('org.apache.commons.collections4.multimap#AbstractListValuedMap', None)": [
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java": {
                "old": {
                    "('org.apache.commons.collections4.multimap#AbstractMultiValuedMap', None)": [
                        81
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/multimap/AbstractSetValuedMap.java": {
                "old": {
                    "('org.apache.commons.collections4.multimap#AbstractSetValuedMap', None)": [
                        45
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/multiset/AbstractMapMultiSet.java": {
                "old": {
                    "('org.apache.commons.collections4.multiset#AbstractMapMultiSet', None)": [
                        55,
                        65
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/multiset/AbstractMultiSet.java": {
                "old": {
                    "('org.apache.commons.collections4.multiset#AbstractMultiSet', None)": [
                        50
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/multiset/AbstractMultiSetDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.multiset#AbstractMultiSetDecorator', None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/queue/AbstractQueueDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.queue#AbstractQueueDecorator', None)": [
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/set/AbstractNavigableSetDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.set#AbstractNavigableSetDecorator', None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/set/AbstractSetDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.set#AbstractSetDecorator', None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/set/AbstractSortedSetDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.set#AbstractSortedSetDecorator', None)": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/set/CompositeSet.java": {
                "old": {
                    "('org.apache.commons.collections4.set#CompositeSet', None)": [
                        68,
                        77,
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/set/MapBackedSet.java": {
                "old": {
                    "('org.apache.commons.collections4.set#MapBackedSet', None)": [
                        92
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/splitmap/AbstractIterableGetMapDecorator.java": {
                "old": {
                    "('org.apache.commons.collections4.splitmap#AbstractIterableGetMapDecorator', None)": [
                        54
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bidimap/AbstractBidiMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bidimap#AbstractBidiMapTest', None)": [
                        344,
                        412
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bidimap/AbstractOrderedBidiMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bidimap#AbstractOrderedBidiMapTest', None)": [
                        42
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/junit/AbstractAvailableLocalesTest.java": {
                "old": {
                    "('org.apache.commons.collections4.junit#AbstractAvailableLocalesTest', None)": [
                        87
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/junit/SetDefaultLocaleTestRule.java": {
                "old": {
                    "('org.apache.commons.collections4.junit#SetDefaultLocaleTestRule', None)": [
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/properties/AbstractPropertiesFactoryTest.java": {
                "old": {
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactoryTest', None)": [
                        48
                    ]
                }
            }
        }
    },
    "bd9d3873fe80dd16f7f2db6fe1a2f5e21aab8a27": {
        "authored_data": "2020 Nov 20 22:24",
        "commit.message": "Remove useless null-check.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "4bd1b5aec683be03834801ef2e39c0d1eab7c8cd",
        "changes": {
            "src/main/java/org/apache/commons/collections4/MapUtils.java": {
                "old": {
                    "('org.apache.commons.collections4#MapUtils', 'getMap(Map,K)')": [
                        878
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#MapUtils', 'getMap(Map,K)')": [
                        878
                    ]
                }
            }
        }
    },
    "4bd1b5aec683be03834801ef2e39c0d1eab7c8cd": {
        "authored_data": "2020 Nov 20 22:02",
        "commit.message": "Normalize spelling of 'Initialize'.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "84aa4fe4f067d72aedb54cf8c331bb37f4e52b3a",
        "changes": {
            "src/main/java/org/apache/commons/collections4/map/AbstractLinkedMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#AbstractLinkedMap', None)": [
                        126
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#AbstractLinkedMap', None)": [
                        126
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/AbstractReferenceMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#AbstractReferenceMap', None)": [
                        184
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#AbstractReferenceMap', None)": [
                        184
                    ]
                }
            }
        }
    },
    "84aa4fe4f067d72aedb54cf8c331bb37f4e52b3a": {
        "authored_data": "2020 Nov 20 21:59",
        "commit.message": "Use Arrays.fill().\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "e7f0d1372fdd72f38736116d7ba52eb15c4dca14",
        "changes": {
            "src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#AbstractHashedMap', 'clear')": [
                        365,
                        366,
                        367
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.collections4.map#AbstractHashedMap', 'clear')": [
                        366
                    ]
                }
            }
        }
    },
    "e7f0d1372fdd72f38736116d7ba52eb15c4dca14": {
        "authored_data": "2020 Nov 20 20:52",
        "commit.message": "Initialize a collection when you create it.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "210b461d24a92be239bf81df12c9421c39911148",
        "changes": {
            "src/test/java/org/apache/commons/collections4/AbstractLinkedListTest.java": {
                "old": {
                    "('org.apache.commons.collections4#AbstractLinkedListTest', 'makeConfirmedFullCollection')": [
                        217,
                        218,
                        219
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#AbstractLinkedListTest', 'makeConfirmedFullCollection')": [
                        217
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java": {
                "old": {
                    "('org.apache.commons.collections4#CollectionUtilsTest', 'testCollate')": [
                        2130,
                        2131
                    ],
                    "('org.apache.commons.collections4#CollectionUtilsTest', 'testCollateIgnoreDuplicates')": [
                        2159,
                        2160
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#CollectionUtilsTest', 'testCollate')": [
                        2130
                    ],
                    "('org.apache.commons.collections4#CollectionUtilsTest', 'testCollateIgnoreDuplicates')": [
                        2158
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/FluentIterableTest.java": {
                "old": {
                    "('org.apache.commons.collections4#FluentIterableTest', 'eval')": [
                        425,
                        426
                    ],
                    "('org.apache.commons.collections4#FluentIterableTest', 'copyInto')": [
                        461,
                        462
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#FluentIterableTest', 'eval')": [
                        425
                    ],
                    "('org.apache.commons.collections4#FluentIterableTest', 'copyInto')": [
                        460
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/IteratorUtilsTest.java": {
                "old": {
                    "('org.apache.commons.collections4#IteratorUtilsTest', 'testCollatedIterator')": [
                        579,
                        580
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#IteratorUtilsTest', 'testCollatedIterator')": [
                        579
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java": {
                "old": {
                    "('org.apache.commons.collections4.collection#AbstractCollectionTest', 'getFullElements')": [
                        395,
                        396
                    ],
                    "('org.apache.commons.collections4.collection#AbstractCollectionTest', 'testCollectionContainsAll')": [
                        713,
                        714
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.collection#AbstractCollectionTest', 'getFullElements')": [
                        395
                    ],
                    "('org.apache.commons.collections4.collection#AbstractCollectionTest', 'testCollectionContainsAll')": [
                        712
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/collection/IndexedCollectionTest.java": {
                "old": {
                    "('org.apache.commons.collections4.collection#IndexedCollectionTest', 'makeFullCollection')": [
                        83,
                        84,
                        85
                    ],
                    "('org.apache.commons.collections4.collection#IndexedCollectionTest', 'makeConfirmedFullCollection')": [
                        90,
                        91,
                        92
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.collection#IndexedCollectionTest', 'makeFullCollection')": [
                        83
                    ],
                    "('org.apache.commons.collections4.collection#IndexedCollectionTest', 'makeConfirmedFullCollection')": [
                        88
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/collection/SynchronizedCollectionTest.java": {
                "old": {
                    "('org.apache.commons.collections4.collection#SynchronizedCollectionTest', 'makeConfirmedFullCollection')": [
                        48,
                        49,
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.collection#SynchronizedCollectionTest', 'makeConfirmedFullCollection')": [
                        48
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/collection/UnmodifiableBoundedCollectionTest.java": {
                "old": {
                    "('org.apache.commons.collections4.collection#UnmodifiableBoundedCollectionTest', 'makeConfirmedFullCollection')": [
                        59,
                        60,
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.collection#UnmodifiableBoundedCollectionTest', 'makeConfirmedFullCollection')": [
                        59
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/collection/UnmodifiableCollectionTest.java": {
                "old": {
                    "('org.apache.commons.collections4.collection#UnmodifiableCollectionTest', 'makeFullCollection')": [
                        46,
                        47
                    ],
                    "('org.apache.commons.collections4.collection#UnmodifiableCollectionTest', 'makeConfirmedFullCollection')": [
                        58,
                        59,
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.collection#UnmodifiableCollectionTest', 'makeFullCollection')": [
                        46
                    ],
                    "('org.apache.commons.collections4.collection#UnmodifiableCollectionTest', 'makeConfirmedFullCollection')": [
                        57
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/list/AbstractListTest.java": {
                "old": {
                    "('org.apache.commons.collections4.list#AbstractListTest', 'makeConfirmedFullCollection')": [
                        131,
                        132,
                        133
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.list#AbstractListTest', 'makeConfirmedFullCollection')": [
                        131
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/list/FixedSizeListTest.java": {
                "old": {
                    "('org.apache.commons.collections4.list#FixedSizeListTest', 'makeFullCollection')": [
                        44,
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.list#FixedSizeListTest', 'makeFullCollection')": [
                        44
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/list/GrowthListTest.java": {
                "old": {
                    "('org.apache.commons.collections4.list#GrowthListTest', 'makeFullCollection')": [
                        42,
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.list#GrowthListTest', 'makeFullCollection')": [
                        42
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/list/TransformedListTest.java": {
                "old": {
                    "('org.apache.commons.collections4.list#TransformedListTest', 'makeConfirmedFullCollection')": [
                        46,
                        47,
                        48
                    ],
                    "('org.apache.commons.collections4.list#TransformedListTest', 'makeFullCollection')": [
                        60,
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.list#TransformedListTest', 'makeConfirmedFullCollection')": [
                        46
                    ],
                    "('org.apache.commons.collections4.list#TransformedListTest', 'makeFullCollection')": [
                        58
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/list/UnmodifiableListTest.java": {
                "old": {
                    "('org.apache.commons.collections4.list#UnmodifiableListTest', 'makeFullCollection')": [
                        44,
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.list#UnmodifiableListTest', 'makeFullCollection')": [
                        44
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/queue/AbstractQueueTest.java": {
                "old": {
                    "('org.apache.commons.collections4.queue#AbstractQueueTest', 'makeConfirmedCollection')": [
                        89,
                        90
                    ],
                    "('org.apache.commons.collections4.queue#AbstractQueueTest', 'makeConfirmedFullCollection')": [
                        98,
                        99,
                        100
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.queue#AbstractQueueTest', 'makeConfirmedCollection')": [
                        89
                    ],
                    "('org.apache.commons.collections4.queue#AbstractQueueTest', 'makeConfirmedFullCollection')": [
                        97
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/queue/PredicatedQueueTest.java": {
                "old": {
                    "('org.apache.commons.collections4.queue#PredicatedQueueTest', 'makeFullCollection')": [
                        56,
                        57
                    ],
                    "('org.apache.commons.collections4.queue#PredicatedQueueTest', 'makeConfirmedFullCollection')": [
                        68,
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.queue#PredicatedQueueTest', 'makeFullCollection')": [
                        56
                    ],
                    "('org.apache.commons.collections4.queue#PredicatedQueueTest', 'makeConfirmedFullCollection')": [
                        67
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/queue/TransformedQueueTest.java": {
                "old": {
                    "('org.apache.commons.collections4.queue#TransformedQueueTest', 'makeConfirmedFullCollection')": [
                        48,
                        49,
                        50
                    ],
                    "('org.apache.commons.collections4.queue#TransformedQueueTest', 'makeFullCollection')": [
                        63,
                        64
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.queue#TransformedQueueTest', 'makeConfirmedFullCollection')": [
                        48
                    ],
                    "('org.apache.commons.collections4.queue#TransformedQueueTest', 'makeFullCollection')": [
                        61
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/queue/UnmodifiableQueueTest.java": {
                "old": {
                    "('org.apache.commons.collections4.queue#UnmodifiableQueueTest', 'makeFullCollection')": [
                        47,
                        48
                    ],
                    "('org.apache.commons.collections4.queue#UnmodifiableQueueTest', 'makeConfirmedFullCollection')": [
                        59,
                        60,
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.queue#UnmodifiableQueueTest', 'makeFullCollection')": [
                        47
                    ],
                    "('org.apache.commons.collections4.queue#UnmodifiableQueueTest', 'makeConfirmedFullCollection')": [
                        58
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/set/PredicatedNavigableSetTest.java": {
                "old": {
                    "('org.apache.commons.collections4.set#PredicatedNavigableSetTest', 'makeFullCollection')": [
                        58,
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.set#PredicatedNavigableSetTest', 'makeFullCollection')": [
                        58
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/set/PredicatedSortedSetTest.java": {
                "old": {
                    "('org.apache.commons.collections4.set#PredicatedSortedSetTest', 'makeFullCollection')": [
                        56,
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.set#PredicatedSortedSetTest', 'makeFullCollection')": [
                        56
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/set/TransformedNavigableSetTest.java": {
                "old": {
                    "('org.apache.commons.collections4.set#TransformedNavigableSetTest', 'makeFullCollection')": [
                        58,
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.set#TransformedNavigableSetTest', 'makeFullCollection')": [
                        58
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/set/TransformedSetTest.java": {
                "old": {
                    "('org.apache.commons.collections4.set#TransformedSetTest', 'makeConfirmedFullCollection')": [
                        46,
                        47,
                        48
                    ],
                    "('org.apache.commons.collections4.set#TransformedSetTest', 'makeFullCollection')": [
                        61,
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.set#TransformedSetTest', 'makeConfirmedFullCollection')": [
                        46
                    ],
                    "('org.apache.commons.collections4.set#TransformedSetTest', 'makeFullCollection')": [
                        59
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/set/TransformedSortedSetTest.java": {
                "old": {
                    "('org.apache.commons.collections4.set#TransformedSortedSetTest', 'makeFullCollection')": [
                        57,
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.set#TransformedSortedSetTest', 'makeFullCollection')": [
                        57
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/set/UnmodifiableNavigableSetTest.java": {
                "old": {
                    "('org.apache.commons.collections4.set#UnmodifiableNavigableSetTest', 'makeFullCollection')": [
                        56,
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.set#UnmodifiableNavigableSetTest', 'makeFullCollection')": [
                        56
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/set/UnmodifiableSetTest.java": {
                "old": {
                    "('org.apache.commons.collections4.set#UnmodifiableSetTest', 'makeFullCollection')": [
                        52,
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.set#UnmodifiableSetTest', 'makeFullCollection')": [
                        52
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/set/UnmodifiableSortedSetTest.java": {
                "old": {
                    "('org.apache.commons.collections4.set#UnmodifiableSortedSetTest', 'makeFullCollection')": [
                        56,
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.set#UnmodifiableSortedSetTest', 'makeFullCollection')": [
                        56
                    ]
                }
            }
        }
    }
}