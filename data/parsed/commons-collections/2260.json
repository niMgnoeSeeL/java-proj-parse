{
    "2d85e5f319a9a66c83819ad9712c3ed8cc6cf435": {
        "authored_data": "2006 Apr 10 22:22",
        "commit.message": "Fix comment about defaultTransformer\nbug 39207, from Matt Benson\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@393104 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "892e210a8f58852d2a8634ccc75b4817c5c2f10a",
        "changes": {
            "src/java/org/apache/commons/collections/functors/SwitchTransformer.java": {
                "old": {
                    "('org.apache.commons.collections.functors#SwitchTransformer', None)": [
                        51,
                        120
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#SwitchTransformer', None)": [
                        51,
                        120
                    ]
                }
            }
        }
    },
    "f9588d4debbe6651633483f61ea1af607bd097b4": {
        "authored_data": "2006 Mar 02 19:02",
        "commit.message": "Avoid object creation in predicate factory methods\nbug 38703, from Matt Benson\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@382470 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "17e59448eab3c2ba34512a110cb39efe03195953",
        "changes": {
            "src/java/org/apache/commons/collections/functors/AllPredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#AllPredicate', 'getInstance(Predicate)')": [
                        52,
                        53,
                        54,
                        55,
                        56,
                        57
                    ],
                    "('org.apache.commons.collections.functors#AllPredicate', 'getInstance(Collection)')": [
                        72,
                        73,
                        74,
                        75,
                        76,
                        77
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/AnyPredicate.java": {
                "old": {
                    "('org.apache.commons.collections.functors#AnyPredicate', 'getInstance(Predicate)')": [
                        52,
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.collections.functors#AnyPredicate', 'getInstance(Predicate)')": [
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58
                    ],
                    "('org.apache.commons.collections.functors#AnyPredicate', 'getInstance(Collection)')": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/NonePredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#NonePredicate', 'getInstance(Predicate)')": [
                        52,
                        53,
                        54
                    ],
                    "('org.apache.commons.collections.functors#NonePredicate', 'getInstance(Collection)')": [
                        69,
                        70,
                        71
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/OnePredicate.java": {
                "new": {
                    "('org.apache.commons.collections.functors#OnePredicate', 'getInstance(Predicate)')": [
                        52,
                        53,
                        54,
                        55,
                        56,
                        57
                    ]
                }
            },
            "src/test/org/apache/commons/collections/TestPredicateUtils.java": {
                "new": {
                    "('org.apache.commons.collections#TestPredicateUtils', 'testAllPredicate')": [
                        213,
                        214
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', 'testAnyPredicate')": [
                        328,
                        329
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', 'testOnePredicate')": [
                        443,
                        444
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', 'testNonePredicate')": [
                        562,
                        563
                    ]
                }
            }
        }
    },
    "232af59948165eb5919421fc5a91e6b2e7d19e3d": {
        "authored_data": "2006 Feb 13 22:38",
        "commit.message": "Implement BoundedCollection, Add javadoc\nrfe 37473\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@377517 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "7440726c44a3da14b7dba3b5d59d2f8ee1c83a66",
        "changes": {
            "src/java/org/apache/commons/collections/buffer/BoundedBuffer.java": {
                "old": {
                    "(None, None)": [
                        2,
                        23,
                        24,
                        25,
                        26,
                        27,
                        29,
                        32
                    ],
                    "('org.apache.commons.collections.buffer#BoundedBuffer', None)": [
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        40,
                        41
                    ],
                    "('org.apache.commons.collections.buffer#BoundedBuffer', None)": [
                        44,
                        148,
                        149,
                        152,
                        153
                    ],
                    "('org.apache.commons.collections.buffer#BoundedBuffer', 'isFull')": [
                        146,
                        147
                    ],
                    "('org.apache.commons.collections.buffer#BoundedBuffer', 'maxSize')": [
                        150,
                        151
                    ]
                }
            },
            "src/test/org/apache/commons/collections/buffer/TestAll.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ],
                    "('org.apache.commons.collections.buffer#TestAll', 'suite')": [
                        51
                    ]
                }
            },
            "src/test/org/apache/commons/collections/buffer/TestBoundedBuffer.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        19,
                        27,
                        28,
                        29
                    ],
                    "('org.apache.commons.collections.buffer#TestBoundedBuffer', 'suite')": [
                        36,
                        37
                    ],
                    "('org.apache.commons.collections.buffer#TestBoundedBuffer', None)": [
                        38,
                        39,
                        43,
                        44,
                        55,
                        56,
                        57
                    ],
                    "('org.apache.commons.collections.buffer#TestBoundedBuffer', 'main(String)')": [
                        40,
                        41,
                        42
                    ],
                    "('org.apache.commons.collections.buffer#TestBoundedBuffer', 'testMaxSize')": [
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68
                    ]
                }
            }
        }
    },
    "7440726c44a3da14b7dba3b5d59d2f8ee1c83a66": {
        "authored_data": "2006 Feb 13 22:12",
        "commit.message": "All/Any/One/None Predicate - allow construction with zero or one predicates\nrfe 37979, implemented by Matt Benson\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@377508 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "c56039ade9e9bb21a5e02755e1f215ad097e9895",
        "changes": {
            "src/java/org/apache/commons/collections/PredicateUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ],
                    "('org.apache.commons.collections#PredicateUtils', None)": [
                        273,
                        289,
                        320,
                        336,
                        367,
                        383,
                        414,
                        430
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ],
                    "('org.apache.commons.collections#PredicateUtils', None)": [
                        267,
                        283,
                        314,
                        330,
                        361,
                        377,
                        408,
                        424
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/AllPredicate.java": {
                "old": {
                    "(None, None)": [
                        2,
                        24
                    ],
                    "('org.apache.commons.collections.functors#AllPredicate', None)": [
                        45,
                        61
                    ],
                    "('org.apache.commons.collections.functors#AllPredicate', 'getInstance(Predicate)')": [
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        24,
                        25,
                        26,
                        32
                    ],
                    "('org.apache.commons.collections.functors#AllPredicate', 'getInstance(Predicate)')": [
                        51
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/AnyPredicate.java": {
                "old": {
                    "(None, None)": [
                        2,
                        24
                    ],
                    "('org.apache.commons.collections.functors#AnyPredicate', None)": [
                        45,
                        61
                    ],
                    "('org.apache.commons.collections.functors#AnyPredicate', 'getInstance(Predicate)')": [
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        24,
                        25,
                        26,
                        32
                    ],
                    "('org.apache.commons.collections.functors#AnyPredicate', 'getInstance(Predicate)')": [
                        51
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/FunctorUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ],
                    "('org.apache.commons.collections.functors#FunctorUtils', None)": [
                        75,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94
                    ],
                    "('org.apache.commons.collections.functors#FunctorUtils', 'validateMin2(Predicate)')": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ],
                    "('org.apache.commons.collections.functors#FunctorUtils', 'validate(Collection)')": [
                        100,
                        101,
                        102,
                        103
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        32
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/NonePredicate.java": {
                "old": {
                    "(None, None)": [
                        2,
                        24
                    ],
                    "('org.apache.commons.collections.functors#NonePredicate', None)": [
                        45,
                        61
                    ],
                    "('org.apache.commons.collections.functors#NonePredicate', 'getInstance(Predicate)')": [
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        24,
                        25,
                        26,
                        32
                    ],
                    "('org.apache.commons.collections.functors#NonePredicate', 'getInstance(Predicate)')": [
                        51
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/OnePredicate.java": {
                "old": {
                    "(None, None)": [
                        2,
                        24
                    ],
                    "('org.apache.commons.collections.functors#OnePredicate', None)": [
                        45,
                        61
                    ],
                    "('org.apache.commons.collections.functors#OnePredicate', 'getInstance(Predicate)')": [
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        24,
                        25,
                        26,
                        32
                    ],
                    "('org.apache.commons.collections.functors#OnePredicate', 'getInstance(Predicate)')": [
                        51
                    ]
                }
            },
            "src/test/org/apache/commons/collections/TestPredicateUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', 'testAllPredicateEx5')": [
                        279,
                        280,
                        281,
                        282,
                        283,
                        284
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', 'testAnyPredicateEx5')": [
                        389,
                        390,
                        391,
                        392,
                        393,
                        394
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', 'testOnePredicateEx5')": [
                        503,
                        504,
                        505,
                        506,
                        507,
                        508
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', 'testNonePredicateEx5')": [
                        613,
                        614,
                        615,
                        616,
                        617,
                        618
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        37
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', 'testAllPredicate')": [
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', 'testAllPredicateEx5')": [
                        288
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', 'testAnyPredicate')": [
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', 'testAnyPredicateEx5')": [
                        401
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', 'testOnePredicate')": [
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', 'testOnePredicateEx5')": [
                        518
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', 'testNonePredicate')": [
                        584,
                        585,
                        586,
                        587,
                        588,
                        589,
                        590,
                        591
                    ],
                    "('org.apache.commons.collections#TestPredicateUtils', 'testNonePredicateEx5')": [
                        631
                    ]
                }
            }
        }
    },
    "c56039ade9e9bb21a5e02755e1f215ad097e9895": {
        "authored_data": "2006 Feb 07 23:10",
        "commit.message": "Add single argument constructor for IfClosure\nbug 38495, from Matt Benson\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@375766 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "1c8ccc351e3bae92378818efe4cdb19ea8343c21",
        "changes": {
            "src/java/org/apache/commons/collections/ClosureUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        54
                    ],
                    "('org.apache.commons.collections#ClosureUtils', None)": [
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242
                    ],
                    "('org.apache.commons.collections#ClosureUtils', 'ifClosure(Predicate,Closure)')": [
                        243,
                        244
                    ]
                }
            },
            "src/java/org/apache/commons/collections/functors/IfClosure.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        31
                    ],
                    "('org.apache.commons.collections.functors#IfClosure', None)": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        59,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92
                    ],
                    "('org.apache.commons.collections.functors#IfClosure', 'getInstance(Predicate,Closure)')": [
                        57,
                        58
                    ]
                }
            },
            "src/test/org/apache/commons/collections/TestClosureUtils.java": {
                "old": {
                    "(None, None)": [
                        2
                    ],
                    "('org.apache.commons.collections#TestClosureUtils', None)": [
                        40,
                        42
                    ],
                    "('org.apache.commons.collections#TestClosureUtils', 'testSwitchClosure')": [
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ],
                    "('org.apache.commons.collections#TestClosureUtils', None)": [
                        245,
                        246,
                        247,
                        269,
                        270
                    ],
                    "('org.apache.commons.collections#TestClosureUtils', 'testIfClosure')": [
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268
                    ]
                }
            }
        }
    },
    "63bb55deee694668158e6e72fc217cc1c36d0df8": {
        "authored_data": "2006 Jan 26 00:10",
        "commit.message": "Enable MultiHashMap compilation on J#\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/collections/trunk@372373 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "ecd01ef9aaa7f2924588d8e54b929dc3f2b0d7a7",
        "changes": {
            "src/java/org/apache/commons/collections/MultiHashMap.java": {
                "old": {
                    "(None, None)": [
                        2
                    ],
                    "('org.apache.commons.collections#MultiHashMap', None)": [
                        412
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        66
                    ],
                    "('org.apache.commons.collections#MultiHashMap', None)": [
                        379,
                        380,
                        381,
                        382,
                        383,
                        386,
                        387,
                        422
                    ],
                    "('org.apache.commons.collections#MultiHashMap', 'superValuesIterator')": [
                        384,
                        385
                    ]
                }
            }
        }
    }
}