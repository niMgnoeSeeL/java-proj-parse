{
    "4797acefbaf24044f401868743c99362e67d4274": {
        "authored_data": "2020 Feb 18 23:07",
        "commit.message": "Fixed checkstyle.\n\nAdd missing newlines at end of files.\n\nRemove redundant modifiers.\n\nFix incorrect Apache license header.\n\nFix whitespace around elements.\n\nRemove tab characters.\n\nFix right-curly location.\n\nCorrect modifier order.\n",
        "commit.author.name": "Alex Herbert",
        "pcid": "72f45156d33680ccc08168b7da7fbcb960d8c4ac",
        "changes": {
            "src/main/java/org/apache/commons/collections4/CollectionUtils.java": {
                "old": {
                    "('org.apache.commons.collections4#CollectionUtils', None)": [
                        76,
                        143,
                        625
                    ],
                    "('org.apache.commons.collections4#CollectionUtils', 'isEqualCollection(Collection,Collection)')": [
                        558,
                        562,
                        565,
                        566
                    ],
                    "('org.apache.commons.collections4#CollectionUtils', 'isEqualCollection(Collection,Collection,Equator)')": [
                        601
                    ],
                    "('org.apache.commons.collections4#CollectionUtils', 'get(Object,int)')": [
                        1321
                    ],
                    "('org.apache.commons.collections4#CollectionUtils', 'get(Map,int)')": [
                        1358
                    ],
                    "('org.apache.commons.collections4#CollectionUtils', 'size(Object)')": [
                        1386
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#CollectionUtils', None)": [
                        76,
                        143,
                        625
                    ],
                    "('org.apache.commons.collections4#CollectionUtils', 'isEqualCollection(Collection,Collection)')": [
                        558,
                        562,
                        565,
                        566
                    ],
                    "('org.apache.commons.collections4#CollectionUtils', 'isEqualCollection(Collection,Collection,Equator)')": [
                        601
                    ],
                    "('org.apache.commons.collections4#CollectionUtils', 'get(Object,int)')": [
                        1321
                    ],
                    "('org.apache.commons.collections4#CollectionUtils', 'get(Map,int)')": [
                        1358
                    ],
                    "('org.apache.commons.collections4#CollectionUtils', 'size(Object)')": [
                        1386
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/Equator.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/IterableUtils.java": {
                "old": {
                    "('org.apache.commons.collections4#IterableUtils', None)": [
                        481
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#IterableUtils', None)": [
                        481
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/IteratorUtils.java": {
                "old": {
                    "('org.apache.commons.collections4#IteratorUtils', None)": [
                        811
                    ],
                    "('org.apache.commons.collections4#IteratorUtils', 'indexOf(Iterator,Predicate)')": [
                        1250
                    ],
                    "('org.apache.commons.collections4#IteratorUtils', 'toString(Iterator,Transformer,String,String,String)')": [
                        1472
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#IteratorUtils', None)": [
                        811
                    ],
                    "('org.apache.commons.collections4#IteratorUtils', 'indexOf(Iterator,Predicate)')": [
                        1250
                    ],
                    "('org.apache.commons.collections4#IteratorUtils', 'toString(Iterator,Transformer,String,String,String)')": [
                        1472
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/ListUtils.java": {
                "old": {
                    "('org.apache.commons.collections4#ListUtils', None)": [
                        614,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        656,
                        657,
                        658
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#ListUtils', None)": [
                        614,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        656
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/SetUtils.java": {
                "old": {
                    "('org.apache.commons.collections4#SetUtils', None)": [
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#SetUtils', None)": [
                        61
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bag/AbstractMapBag.java": {
                "old": {
                    "('org.apache.commons.collections4.bag#AbstractMapBag', None)": [
                        194
                    ],
                    "('org.apache.commons.collections4.bag#AbstractMapBag', 'uniqueSet')": [
                        510
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bag#AbstractMapBag', None)": [
                        194
                    ],
                    "('org.apache.commons.collections4.bag#AbstractMapBag', 'uniqueSet')": [
                        510
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bag/CollectionBag.java": {
                "old": {
                    "('org.apache.commons.collections4.bag#CollectionBag', 'containsAll(Collection)')": [
                        114
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bag#CollectionBag', 'containsAll(Collection)')": [
                        114
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bag/CollectionSortedBag.java": {
                "old": {
                    "('org.apache.commons.collections4.bag#CollectionSortedBag', 'containsAll(Collection)')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bag#CollectionSortedBag', 'containsAll(Collection)')": [
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bag/TreeBag.java": {
                "old": {
                    "('org.apache.commons.collections4.bag#TreeBag', 'add(E)')": [
                        91
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bag#TreeBag', 'add(E)')": [
                        91
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bag/UnmodifiableBag.java": {
                "old": {
                    "('org.apache.commons.collections4.bag#UnmodifiableBag', 'iterator')": [
                        111
                    ],
                    "('org.apache.commons.collections4.bag#UnmodifiableBag', 'uniqueSet')": [
                        166
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bag#UnmodifiableBag', 'iterator')": [
                        111
                    ],
                    "('org.apache.commons.collections4.bag#UnmodifiableBag', 'uniqueSet')": [
                        166
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bidimap/AbstractDualBidiMap.java": {
                "old": {
                    "('org.apache.commons.collections4.bidimap#AbstractDualBidiMap', None)": [
                        347
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bidimap#AbstractDualBidiMap', None)": [
                        347
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bidimap/TreeBidiMap.java": {
                "old": {
                    "('org.apache.commons.collections4.bidimap#TreeBidiMap', 'readObject(ObjectInputStream)')": [
                        1468
                    ],
                    "('org.apache.commons.collections4.bidimap#TreeBidiMap', None)": [
                        1524,
                        1551,
                        1795
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bidimap#TreeBidiMap', 'readObject(ObjectInputStream)')": [
                        1468
                    ],
                    "('org.apache.commons.collections4.bidimap#TreeBidiMap', None)": [
                        1524,
                        1551,
                        1795
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/AbstractBloomFilter.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ],
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilter', 'merge(BloomFilter)')": [
                        171
                    ],
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilter', 'merge(Hasher)')": [
                        182
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ],
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilter', 'merge(BloomFilter)')": [
                        170
                    ],
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilter', 'merge(Hasher)')": [
                        181
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/BitSetBloomFilter.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BitSetBloomFilter', 'andCardinality(BloomFilter)')": [
                        67
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BitSetBloomFilter', 'merge(BloomFilter)')": [
                        104
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BitSetBloomFilter', 'orCardinality(BloomFilter)')": [
                        121
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BitSetBloomFilter', 'xorCardinality(BloomFilter)')": [
                        137
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BitSetBloomFilter', 'andCardinality(BloomFilter)')": [
                        66
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BitSetBloomFilter', 'merge(BloomFilter)')": [
                        103
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BitSetBloomFilter', 'orCardinality(BloomFilter)')": [
                        120
                    ],
                    "('org.apache.commons.collections4.bloomfilter#BitSetBloomFilter', 'xorCardinality(BloomFilter)')": [
                        136
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/BloomFilter.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/CountingBloomFilter.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilter', 'andCardinality(BloomFilter)')": [
                        108
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilter', 'remove(Hasher)')": [
                        232
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilter', 'andCardinality(BloomFilter)')": [
                        107
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilter', 'remove(Hasher)')": [
                        231
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/HasherBloomFilter.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/SetOperations.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ],
                    "('org.apache.commons.collections4.bloomfilter#SetOperations', 'cosineDistance(BloomFilter,BloomFilter)')": [
                        38
                    ],
                    "('org.apache.commons.collections4.bloomfilter#SetOperations', 'estimateIntersectionSize(BloomFilter,BloomFilter)')": [
                        67,
                        69
                    ],
                    "('org.apache.commons.collections4.bloomfilter#SetOperations', 'estimateUnionSize(BloomFilter,BloomFilter)')": [
                        96
                    ],
                    "('org.apache.commons.collections4.bloomfilter#SetOperations', 'hammingDistance(BloomFilter,BloomFilter)')": [
                        112
                    ],
                    "('org.apache.commons.collections4.bloomfilter#SetOperations', 'jaccardDistance(BloomFilter,BloomFilter)')": [
                        126
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ],
                    "('org.apache.commons.collections4.bloomfilter#SetOperations', 'cosineDistance(BloomFilter,BloomFilter)')": [
                        37
                    ],
                    "('org.apache.commons.collections4.bloomfilter#SetOperations', 'estimateIntersectionSize(BloomFilter,BloomFilter)')": [
                        66,
                        68
                    ],
                    "('org.apache.commons.collections4.bloomfilter#SetOperations', 'estimateUnionSize(BloomFilter,BloomFilter)')": [
                        95
                    ],
                    "('org.apache.commons.collections4.bloomfilter#SetOperations', 'hammingDistance(BloomFilter,BloomFilter)')": [
                        111
                    ],
                    "('org.apache.commons.collections4.bloomfilter#SetOperations', 'jaccardDistance(BloomFilter,BloomFilter)')": [
                        125
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasher.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/HashFunction.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/HashFunctionIdentity.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/HashFunctionIdentityImpl.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/HashFunctionValidator.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/Hasher.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/Shape.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', 'getNumberOfBytes')": [
                        294
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', 'getNumberOfBytes')": [
                        293
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/StaticHasher.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/function/MD5Cyclic.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/function/Murmur128x86Cyclic.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/function/Murmur32x86Iterative.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/function/ObjectsHashIterative.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/function/package-info.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9,
                        17,
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/package-info.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9,
                        17,
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/package-info.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9,
                        17
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/comparators/BooleanComparator.java": {
                "old": {
                    "('org.apache.commons.collections4.comparators#BooleanComparator', 'equals(Object)')": [
                        176
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.comparators#BooleanComparator', 'equals(Object)')": [
                        176
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/comparators/ComparatorChain.java": {
                "old": {
                    "('org.apache.commons.collections4.comparators#ComparatorChain', 'setComparator(int,Comparator,boolean)')": [
                        185
                    ],
                    "('org.apache.commons.collections4.comparators#ComparatorChain', 'compare(E,E)')": [
                        281
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.comparators#ComparatorChain', 'setComparator(int,Comparator,boolean)')": [
                        185
                    ],
                    "('org.apache.commons.collections4.comparators#ComparatorChain', 'compare(E,E)')": [
                        281
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/comparators/NullComparator.java": {
                "old": {
                    "('org.apache.commons.collections4.comparators#NullComparator', 'compare(E,E)')": [
                        135,
                        136,
                        137
                    ],
                    "('org.apache.commons.collections4.comparators#NullComparator', 'equals(Object)')": [
                        166,
                        167,
                        168
                    ],
                    "(None, None)": [
                        175
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.comparators#NullComparator', 'compare(E,E)')": [
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143
                    ],
                    "('org.apache.commons.collections4.comparators#NullComparator', 'equals(Object)')": [
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/functors/IfTransformer.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#IfTransformer', 'transform(I)')": [
                        110
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.functors#IfTransformer', 'transform(I)')": [
                        110
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/BoundedIterator.java": {
                "old": {
                    "(None, None)": [
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12
                    ]
                },
                "new": {
                    "(None, None)": [
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/IteratorChain.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#IteratorChain', 'updateCurrentIterator')": [
                        211
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.iterators#IteratorChain', 'updateCurrentIterator')": [
                        211
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/IteratorIterable.java": {
                "old": {
                    "(None, None)": [
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12
                    ],
                    "('org.apache.commons.collections4.iterators#IteratorIterable', 'iterator')": [
                        132
                    ]
                },
                "new": {
                    "(None, None)": [
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ],
                    "('org.apache.commons.collections4.iterators#IteratorIterable', 'iterator')": [
                        135
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/NodeListIterator.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/PeekingIterator.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/PushbackIterator.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/SingletonListIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#SingletonListIterator', 'remove')": [
                        140
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.iterators#SingletonListIterator', 'remove')": [
                        140
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/SkippingIterator.java": {
                "old": {
                    "(None, None)": [
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12
                    ]
                },
                "new": {
                    "(None, None)": [
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/iterators/ZippingIterator.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#ZippingIterator', 'hasNext')": [
                        115
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.iterators#ZippingIterator', 'hasNext')": [
                        115
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/keyvalue/MultiKey.java": {
                "old": {
                    "('org.apache.commons.collections4.keyvalue#MultiKey', 'calculateHashCode(Object)')": [
                        230,
                        231
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.keyvalue#MultiKey', 'calculateHashCode(Object)')": [
                        230
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/keyvalue/TiedMapEntry.java": {
                "old": {
                    "('org.apache.commons.collections4.keyvalue#TiedMapEntry', 'equals(Object)')": [
                        111
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.keyvalue#TiedMapEntry', 'equals(Object)')": [
                        111
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/AbstractHashedMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#AbstractHashedMap', None)": [
                        1167
                    ],
                    "('org.apache.commons.collections4.map#AbstractHashedMap', 'equals(Object)')": [
                        1352,
                        1356
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#AbstractHashedMap', None)": [
                        1167
                    ],
                    "('org.apache.commons.collections4.map#AbstractHashedMap', 'equals(Object)')": [
                        1352,
                        1356
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/AbstractLinkedMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#AbstractLinkedMap', None)": [
                        546
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#AbstractLinkedMap', None)": [
                        546
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/AbstractReferenceMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#AbstractReferenceMap', None)": [
                        682,
                        797,
                        879,
                        976,
                        994
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#AbstractReferenceMap', None)": [
                        682,
                        797,
                        879,
                        976,
                        994
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/Flat3Map.java": {
                "old": {
                    "('org.apache.commons.collections4.map#Flat3Map', None)": [
                        812,
                        921,
                        929,
                        1034
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#Flat3Map', None)": [
                        812,
                        921,
                        929,
                        1034
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/LRUMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#LRUMap', 'moveToMRU(LinkEntry)')": [
                        272
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#LRUMap', 'moveToMRU(LinkEntry)')": [
                        272
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/LazyMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#LazyMap', 'lazyMap(Map,Factory)')": [
                        89
                    ],
                    "('org.apache.commons.collections4.map#LazyMap', None)": [
                        116,
                        128
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#LazyMap', 'lazyMap(Map,Factory)')": [
                        89
                    ],
                    "('org.apache.commons.collections4.map#LazyMap', None)": [
                        116,
                        128
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/LazySortedMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#LazySortedMap', None)": [
                        66,
                        111,
                        122
                    ],
                    "('org.apache.commons.collections4.map#LazySortedMap', 'getSortedMap')": [
                        132,
                        133
                    ],
                    "('org.apache.commons.collections4.map#LazySortedMap', 'subMap(K,K)')": [
                        153,
                        154
                    ],
                    "('org.apache.commons.collections4.map#LazySortedMap', 'headMap(K)')": [
                        159,
                        160
                    ],
                    "('org.apache.commons.collections4.map#LazySortedMap', 'tailMap(K)')": [
                        165,
                        166
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#LazySortedMap', None)": [
                        66,
                        111,
                        122
                    ],
                    "('org.apache.commons.collections4.map#LazySortedMap', 'getSortedMap')": [
                        132,
                        133
                    ],
                    "('org.apache.commons.collections4.map#LazySortedMap', 'subMap(K,K)')": [
                        153,
                        154
                    ],
                    "('org.apache.commons.collections4.map#LazySortedMap', 'headMap(K)')": [
                        159,
                        160
                    ],
                    "('org.apache.commons.collections4.map#LazySortedMap', 'tailMap(K)')": [
                        165,
                        166
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/ListOrderedMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#ListOrderedMap', None)": [
                        603
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#ListOrderedMap', None)": [
                        603
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/MultiValueMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#MultiValueMap', 'multiValueMap(Map)')": [
                        94
                    ],
                    "('org.apache.commons.collections4.map#MultiValueMap', None)": [
                        520,
                        555
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#MultiValueMap', 'multiValueMap(Map)')": [
                        94
                    ],
                    "('org.apache.commons.collections4.map#MultiValueMap', None)": [
                        520,
                        555
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/SingletonMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#SingletonMap', 'equals(Object)')": [
                        575,
                        579
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#SingletonMap', 'equals(Object)')": [
                        575,
                        579
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/map/StaticBucketMap.java": {
                "old": {
                    "('org.apache.commons.collections4.map#StaticBucketMap', None)": [
                        503
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#StaticBucketMap', None)": [
                        503
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/multimap/AbstractListValuedMap.java": {
                "old": {
                    "('org.apache.commons.collections4.multimap#AbstractListValuedMap', None)": [
                        112,
                        223,
                        229
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.multimap#AbstractListValuedMap', None)": [
                        112,
                        223,
                        229
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMap.java": {
                "old": {
                    "('org.apache.commons.collections4.multimap#AbstractMultiValuedMap', None)": [
                        401,
                        639,
                        659,
                        737
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.multimap#AbstractMultiValuedMap', None)": [
                        401,
                        639,
                        659,
                        737
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/multimap/AbstractSetValuedMap.java": {
                "old": {
                    "('org.apache.commons.collections4.multimap#AbstractSetValuedMap', None)": [
                        112
                    ],
                    "(None, None)": [
                        136
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.multimap#AbstractSetValuedMap', None)": [
                        112
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/multiset/AbstractMapMultiSet.java": {
                "old": {
                    "('org.apache.commons.collections4.multiset#AbstractMapMultiSet', None)": [
                        168
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.multiset#AbstractMapMultiSet', None)": [
                        168
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/multiset/AbstractMultiSet.java": {
                "old": {
                    "('org.apache.commons.collections4.multiset#AbstractMultiSet', None)": [
                        141,
                        407
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.multiset#AbstractMultiSet', None)": [
                        141,
                        407
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/multiset/UnmodifiableMultiSet.java": {
                "old": {
                    "('org.apache.commons.collections4.multiset#UnmodifiableMultiSet', 'iterator')": [
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.multiset#UnmodifiableMultiSet', 'iterator')": [
                        107
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/properties/AbstractPropertiesFactory.java": {
                "old": {
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactory', None)": [
                        43
                    ],
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactory', 'load(ClassLoader,String)')": [
                        85
                    ],
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactory', 'load(File)')": [
                        103
                    ],
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactory', 'load(Path)')": [
                        157
                    ],
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactory', 'load(String)')": [
                        185
                    ],
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactory', 'load(URL)')": [
                        211
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactory', None)": [
                        43
                    ],
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactory', 'load(ClassLoader,String)')": [
                        85
                    ],
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactory', 'load(File)')": [
                        103
                    ],
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactory', 'load(Path)')": [
                        157
                    ],
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactory', 'load(String)')": [
                        185
                    ],
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactory', 'load(URL)')": [
                        211
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/sequence/SequencesComparator.java": {
                "old": {
                    "('org.apache.commons.collections4.sequence#SequencesComparator', 'getMiddleSnake(int,int,int,int)')": [
                        186
                    ],
                    "('org.apache.commons.collections4.sequence#SequencesComparator', None)": [
                        317
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.sequence#SequencesComparator', 'getMiddleSnake(int,int,int,int)')": [
                        186
                    ],
                    "('org.apache.commons.collections4.sequence#SequencesComparator', None)": [
                        317
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/trie/AbstractBitwiseTrie.java": {
                "old": {
                    "('org.apache.commons.collections4.trie#AbstractBitwiseTrie', None)": [
                        153,
                        157,
                        201
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.trie#AbstractBitwiseTrie', None)": [
                        153,
                        157,
                        201
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/trie/AbstractPatriciaTrie.java": {
                "old": {
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', None)": [
                        58,
                        1267,
                        1275,
                        1278,
                        1281,
                        1284,
                        1368,
                        1385,
                        1386,
                        1387,
                        1388,
                        1398,
                        1428,
                        1430,
                        1555,
                        1560,
                        1653,
                        1658,
                        1884,
                        1904,
                        1968,
                        2052,
                        2059,
                        2070,
                        2127,
                        2141,
                        2155,
                        2174,
                        2278,
                        2289,
                        2296,
                        2314,
                        2371
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'addEntry(TrieEntry,int)')": [
                        195
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'getEntry(Object)')": [
                        250,
                        257
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'entrySet')": [
                        388
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'getNearestEntryForKey(K,int)')": [
                        456
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'followLeft(TrieEntry)')": [
                        755
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'higherEntry(K)')": [
                        881
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'ceilingEntry(K)')": [
                        934
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'lowerEntry(K)')": [
                        993
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'floorEntry(K)')": [
                        1045
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'subtree(K,int,int)')": [
                        1094
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'readObject(ObjectInputStream)')": [
                        2422
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', None)": [
                        58,
                        1267,
                        1275,
                        1278,
                        1281,
                        1284,
                        1368,
                        1385,
                        1386,
                        1387,
                        1388,
                        1398,
                        1428,
                        1430,
                        1555,
                        1560,
                        1653,
                        1658,
                        1884,
                        1904,
                        1968,
                        2052,
                        2059,
                        2070,
                        2127,
                        2141,
                        2155,
                        2174,
                        2278,
                        2289,
                        2296,
                        2314,
                        2371
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'addEntry(TrieEntry,int)')": [
                        195
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'getEntry(Object)')": [
                        250,
                        257
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'entrySet')": [
                        388
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'getNearestEntryForKey(K,int)')": [
                        456
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'followLeft(TrieEntry)')": [
                        755
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'higherEntry(K)')": [
                        881
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'ceilingEntry(K)')": [
                        934
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'lowerEntry(K)')": [
                        993
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'floorEntry(K)')": [
                        1045
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'subtree(K,int,int)')": [
                        1094
                    ],
                    "('org.apache.commons.collections4.trie#AbstractPatriciaTrie', 'readObject(ObjectInputStream)')": [
                        2422
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/trie/analyzer/StringKeyAnalyzer.java": {
                "old": {
                    "('org.apache.commons.collections4.trie.analyzer#StringKeyAnalyzer', 'bitIndex(String,int,int,String,int,int)')": [
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.trie.analyzer#StringKeyAnalyzer', 'bitIndex(String,int,int,String,int,int)')": [
                        77
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/BagUtilsTest.java": {
                "old": {
                    "('org.apache.commons.collections4#BagUtilsTest', 'testPredicatedBag')": [
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#BagUtilsTest', 'testPredicatedBag')": [
                        79
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/BulkTest.java": {
                "old": {
                    "('org.apache.commons.collections4#BulkTestSuiteMaker', None)": [
                        290
                    ],
                    "('org.apache.commons.collections4#BulkTestSuiteMaker', 'addTest(BulkTest,Method)')": [
                        343
                    ],
                    "('org.apache.commons.collections4#BulkTestSuiteMaker', 'addBulk(BulkTest,Method)')": [
                        369
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#BulkTestSuiteMaker', None)": [
                        290
                    ],
                    "('org.apache.commons.collections4#BulkTestSuiteMaker', 'addTest(BulkTest,Method)')": [
                        343
                    ],
                    "('org.apache.commons.collections4#BulkTestSuiteMaker', 'addBulk(BulkTest,Method)')": [
                        369
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/CollectionUtilsTest.java": {
                "old": {
                    "('org.apache.commons.collections4#CollectionUtilsTest', 'find')": [
                        655
                    ],
                    "('org.apache.commons.collections4#CollectionUtilsTest', None)": [
                        1279,
                        1744,
                        1747,
                        1748,
                        1749,
                        1752,
                        1753,
                        1754
                    ],
                    "('org.apache.commons.collections4#CollectionUtilsTest', 'getNegative')": [
                        1746
                    ],
                    "('org.apache.commons.collections4#CollectionUtilsTest', 'getPositiveOutOfBounds')": [
                        1751
                    ],
                    "('org.apache.commons.collections4#CollectionUtilsTest', 'get1')": [
                        1756
                    ],
                    "('org.apache.commons.collections4#CollectionUtilsTest', 'get')": [
                        1761,
                        1762,
                        1764
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#CollectionUtilsTest', 'find')": [
                        655
                    ],
                    "('org.apache.commons.collections4#CollectionUtilsTest', None)": [
                        1279,
                        1744,
                        1747,
                        1748,
                        1749,
                        1752,
                        1753,
                        1754
                    ],
                    "('org.apache.commons.collections4#CollectionUtilsTest', 'getNegative')": [
                        1746
                    ],
                    "('org.apache.commons.collections4#CollectionUtilsTest', 'getPositiveOutOfBounds')": [
                        1751
                    ],
                    "('org.apache.commons.collections4#CollectionUtilsTest', 'get1')": [
                        1756
                    ],
                    "('org.apache.commons.collections4#CollectionUtilsTest', 'get')": [
                        1761,
                        1762,
                        1764
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/IterableUtilsTest.java": {
                "old": {
                    "('org.apache.commons.collections4#IterableUtilsTest', 'find')": [
                        275
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#IterableUtilsTest', 'find')": [
                        275
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/ListUtilsTest.java": {
                "old": {
                    "('org.apache.commons.collections4#ListUtilsTest', 'testIntersectionOrderInsensitivity')": [
                        120
                    ],
                    "('org.apache.commons.collections4#ListUtilsTest', 'testIndexOf')": [
                        331
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#ListUtilsTest', 'testIntersectionOrderInsensitivity')": [
                        120
                    ],
                    "('org.apache.commons.collections4#ListUtilsTest', 'testIndexOf')": [
                        331
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/MapUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        56,
                        1229,
                        1230
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testConvertResourceBundle')": [
                        279
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testVerbosePrintNullLabel')": [
                        355
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testDebugPrintNullLabel')": [
                        379
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testVerbosePrint')": [
                        593
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testDebugPrint')": [
                        629
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testVerbosePrintSelfReference')": [
                        650
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testDebugPrintSelfReference')": [
                        697
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', None)": [
                        824,
                        828,
                        837
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testPopulateMultiMap')": [
                        852
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetDoubleValue')": [
                        941,
                        942,
                        943,
                        944,
                        949,
                        950,
                        951,
                        952,
                        961
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetFloatValue')": [
                        969,
                        970,
                        971,
                        972,
                        975,
                        976,
                        977,
                        978,
                        986
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetLongValue')": [
                        994,
                        995,
                        996,
                        997,
                        1000,
                        1001,
                        1002,
                        1003,
                        1010
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetIntValue')": [
                        1020,
                        1021,
                        1022,
                        1023,
                        1026,
                        1027,
                        1028,
                        1029,
                        1036
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetShortValue')": [
                        1045,
                        1046,
                        1047,
                        1048,
                        1051,
                        1052,
                        1053,
                        1054,
                        1061
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetByteValue')": [
                        1070,
                        1071,
                        1072,
                        1073,
                        1074,
                        1076,
                        1077,
                        1078,
                        1079,
                        1087
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetNumber')": [
                        1096,
                        1097,
                        1098
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetString')": [
                        1113,
                        1114,
                        1115,
                        1116,
                        1117,
                        1124
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetObject')": [
                        1133,
                        1134,
                        1135,
                        1136,
                        1137
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetBooleanValue')": [
                        1151,
                        1152,
                        1153,
                        1154,
                        1157,
                        1158,
                        1159,
                        1160,
                        1172,
                        1184,
                        1185
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetMap')": [
                        1190,
                        1194
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testSafeAddToMap')": [
                        1207,
                        1208
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#MapUtilsTest', 'testConvertResourceBundle')": [
                        278
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testVerbosePrintNullLabel')": [
                        354
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testDebugPrintNullLabel')": [
                        378
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testVerbosePrint')": [
                        592
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testDebugPrint')": [
                        628
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testVerbosePrintSelfReference')": [
                        649
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testDebugPrintSelfReference')": [
                        696
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', None)": [
                        823,
                        827
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testPopulateMultiMap')": [
                        850
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetDoubleValue')": [
                        939,
                        940,
                        941,
                        942,
                        947,
                        948,
                        949,
                        950,
                        959
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetFloatValue')": [
                        967,
                        968,
                        969,
                        970,
                        973,
                        974,
                        975,
                        976,
                        984
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetLongValue')": [
                        992,
                        993,
                        994,
                        995,
                        998,
                        999,
                        1000,
                        1001,
                        1008
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetIntValue')": [
                        1018,
                        1019,
                        1020,
                        1021,
                        1024,
                        1025,
                        1026,
                        1027,
                        1034
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetShortValue')": [
                        1043,
                        1044,
                        1045,
                        1046,
                        1049,
                        1050,
                        1051,
                        1052,
                        1059
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetByteValue')": [
                        1068,
                        1069,
                        1070,
                        1071,
                        1072,
                        1074,
                        1075,
                        1076,
                        1077,
                        1085
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetNumber')": [
                        1094,
                        1095,
                        1096
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetString')": [
                        1111,
                        1112,
                        1113,
                        1114,
                        1115,
                        1122
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetObject')": [
                        1131,
                        1132,
                        1133,
                        1134,
                        1135
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetBooleanValue')": [
                        1149,
                        1150,
                        1151,
                        1152,
                        1155,
                        1156,
                        1157,
                        1158,
                        1170,
                        1182,
                        1183
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testgetMap')": [
                        1188,
                        1192
                    ],
                    "('org.apache.commons.collections4#MapUtilsTest', 'testSafeAddToMap')": [
                        1205,
                        1206
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/SetUtilsTest.java": {
                "old": {
                    "('org.apache.commons.collections4#SetUtilsTest', 'testHashSet')": [
                        190,
                        191
                    ],
                    "('org.apache.commons.collections4#SetUtilsTest', 'testUnmodifiableSet')": [
                        252,
                        253
                    ],
                    "('org.apache.commons.collections4#SetUtilsTest', 'testUnmodifiableSetWrap')": [
                        278,
                        279
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#SetUtilsTest', 'testHashSet')": [
                        190
                    ],
                    "('org.apache.commons.collections4#SetUtilsTest', 'testUnmodifiableSet')": [
                        251
                    ],
                    "('org.apache.commons.collections4#SetUtilsTest', 'testUnmodifiableSetWrap')": [
                        276
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/SplitMapUtilsTest.java": {
                "old": {
                    "('org.apache.commons.collections4#SplitMapUtilsTest', 'setUp')": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4#SplitMapUtilsTest', 'setUp')": [
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bag/CollectionBagTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bag#CollectionBagTest', 'testEmptyBagCompatibility')": [
                        99
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bag#CollectionBagTest', 'testEmptyBagCompatibility')": [
                        99
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bag/CollectionSortedBagTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bag#CollectionSortedBagTest', 'testEmptyBagCompatibility')": [
                        139
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bag#CollectionSortedBagTest', 'testEmptyBagCompatibility')": [
                        139
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bag/PredicatedBagTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bag#PredicatedBagTest', 'testlegalAddRemove')": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bag#PredicatedBagTest', 'testlegalAddRemove')": [
                        78
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bidimap/AbstractOrderedBidiMapDecoratorTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bidimap#AbstractOrderedBidiMapDecoratorTest', None)": [
                        72,
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bidimap#AbstractOrderedBidiMapDecoratorTest', None)": [
                        72,
                        76
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bidimap/AbstractSortedBidiMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bidimap#AbstractSortedBidiMapTest', None)": [
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bidimap#AbstractSortedBidiMapTest', None)": [
                        56
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bidimap/DualTreeBidiMap2Test.java": {
                "old": {
                    "('org.apache.commons.collections4.bidimap#DualTreeBidiMap2Test', 'makeObject')": [
                        55,
                        56
                    ],
                    "('org.apache.commons.collections4.bidimap#DualTreeBidiMap2Test', 'testSerializeDeserializeCheckComparator')": [
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bidimap#DualTreeBidiMap2Test', 'makeObject')": [
                        55,
                        56
                    ],
                    "('org.apache.commons.collections4.bidimap#DualTreeBidiMap2Test', 'testSerializeDeserializeCheckComparator')": [
                        93
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/AbstractBloomFilterTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/BitSetBloomFilterTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/CountingBloomFilterTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10,
                        28
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'mergeTest_Counts')": [
                        150,
                        154
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'mergeTest_Counts_BitSetFilter')": [
                        185
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'removeTest_Counting')": [
                        291,
                        295
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'removeTest_Hasher')": [
                        327
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'removeTest_Standard')": [
                        358
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'testToString')": [
                        417
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'mergeTest_Counts')": [
                        148,
                        152
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'mergeTest_Counts_BitSetFilter')": [
                        183
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'removeTest_Counting')": [
                        289,
                        293
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'removeTest_Hasher')": [
                        325
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'removeTest_Standard')": [
                        356
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'testToString')": [
                        415
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/DefaultBloomFilterMethodsTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ],
                    "('org.apache.commons.collections4.bloomfilter#DefaultBloomFilterMethodsTest', None)": [
                        49,
                        60
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ],
                    "('org.apache.commons.collections4.bloomfilter#DefaultBloomFilterMethodsTest', None)": [
                        48,
                        59
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/HasherBloomFilterTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/SetOperationsTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasherBuilderTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasherTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/HashFuctionValidatorTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/HashFunctionIdentityImplTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#HashFunctionIdentityImplTest', 'copyConstructorTest')": [
                        55,
                        69
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#HashFunctionIdentityImplTest', 'valuesConstructorTest')": [
                        78,
                        83
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#HashFunctionIdentityImplTest', 'copyConstructorTest')": [
                        54,
                        68
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#HashFunctionIdentityImplTest', 'valuesConstructorTest')": [
                        77,
                        82
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/ShapeTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10,
                        26,
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/StaticHasherTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Hasher')": [
                        135
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Hasher_WrongShape')": [
                        167
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Hasher')": [
                        134,
                        135,
                        136
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Hasher_WrongShape')": [
                        168,
                        169,
                        170
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/MD5CyclicTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10,
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/Murmur128x86CyclicTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10,
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/Murmur32x86IterativeTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10,
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/ObjectsHashIterativeTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10,
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/collection/AbstractCollectionTest.java": {
                "old": {
                    "('org.apache.commons.collections4.collection#AbstractCollectionTest', 'getFullNonNullElements')": [
                        439,
                        444
                    ],
                    "('org.apache.commons.collections4.collection#AbstractCollectionTest', 'getOtherNonNullElements')": [
                        460,
                        461
                    ],
                    "('org.apache.commons.collections4.collection#AbstractCollectionTest', 'getOtherNonNullStringElements')": [
                        489
                    ],
                    "('org.apache.commons.collections4.collection#AbstractCollectionTest', 'testCollectionIteratorFailFast')": [
                        1320,
                        1331
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.collection#AbstractCollectionTest', 'getFullNonNullElements')": [
                        439,
                        444
                    ],
                    "('org.apache.commons.collections4.collection#AbstractCollectionTest', 'getOtherNonNullElements')": [
                        460,
                        461
                    ],
                    "('org.apache.commons.collections4.collection#AbstractCollectionTest', 'getOtherNonNullStringElements')": [
                        489
                    ],
                    "('org.apache.commons.collections4.collection#AbstractCollectionTest', 'testCollectionIteratorFailFast')": [
                        1320,
                        1331
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/comparators/BooleanComparatorTest.java": {
                "old": {
                    "('org.apache.commons.collections4.comparators#BooleanComparatorTest', 'allTests(boolean,BooleanComparator)')": [
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.comparators#BooleanComparatorTest', 'allTests(boolean,BooleanComparator)')": [
                        107
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/comparators/FixedOrderComparatorTest.java": {
                "old": {
                    "('org.apache.commons.collections4.comparators#FixedOrderComparatorTest', 'assertComparatorYieldsOrder(String,Comparator)')": [
                        229
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.comparators#FixedOrderComparatorTest', 'assertComparatorYieldsOrder(String,Comparator)')": [
                        229
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/functors/AbstractAnyAllOnePredicateTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/functors/AbstractCompositePredicateTest.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#AbstractCompositePredicateTest', 'getPredicateInstance(Predicate)')": [
                        51
                    ],
                    "('org.apache.commons.collections4.functors#AbstractCompositePredicateTest', 'getPredicateInstance(Collection)')": [
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.functors#AbstractCompositePredicateTest', 'getPredicateInstance(Predicate)')": [
                        51
                    ],
                    "('org.apache.commons.collections4.functors#AbstractCompositePredicateTest', 'getPredicateInstance(Collection)')": [
                        60
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/functors/AbstractMockPredicateTest.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#AbstractMockPredicateTest', 'createVerifyList')": [
                        59,
                        60
                    ],
                    "('org.apache.commons.collections4.functors#AbstractMockPredicateTest', 'verifyPredicates')": [
                        68,
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.functors#AbstractMockPredicateTest', 'createVerifyList')": [
                        59
                    ],
                    "('org.apache.commons.collections4.functors#AbstractMockPredicateTest', 'verifyPredicates')": [
                        67
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/functors/AllPredicateTest.java": {
                "old": {
                    "('org.apache.commons.collections4.functors#AllPredicateTest', 'getPredicateInstance(Predicate)')": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.functors#AllPredicateTest', 'getPredicateInstance(Predicate)')": [
                        48
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/iterators/BoundedIteratorTest.java": {
                "old": {
                    "(None, None)": [
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12
                    ]
                },
                "new": {
                    "(None, None)": [
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/iterators/CollatingIteratorTest.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#CollatingIteratorTest', 'testNullComparator')": [
                        256
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.iterators#CollatingIteratorTest', 'testNullComparator')": [
                        256
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/iterators/FilterIteratorTest.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#FilterIteratorTest', 'verifyElementsInPredicate(String)')": [
                        171
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.iterators#FilterIteratorTest', 'verifyElementsInPredicate(String)')": [
                        171
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/iterators/FilterListIteratorTest.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#FilterListIteratorTest', 'setUp')": [
                        66,
                        67,
                        68,
                        69,
                        70
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.iterators#FilterListIteratorTest', 'setUp')": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/iterators/IteratorEnumerationTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/iterators/IteratorIterableTest.java": {
                "old": {
                    "(None, None)": [
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12
                    ]
                },
                "new": {
                    "(None, None)": [
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/iterators/NodeListIteratorTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/iterators/PeekingIteratorTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10,
                        18
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/iterators/PushbackIteratorTest.java": {
                "old": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        10
                    ],
                    "('org.apache.commons.collections4.iterators#PushbackIteratorTest', 'makeEmptyIterator')": [
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                    ],
                    "('org.apache.commons.collections4.iterators#PushbackIteratorTest', 'makeEmptyIterator')": [
                        53
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/iterators/SkippingIteratorTest.java": {
                "old": {
                    "(None, None)": [
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12
                    ]
                },
                "new": {
                    "(None, None)": [
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/iterators/UnmodifiableMapIteratorTest.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#UnmodifiableMapIteratorTest', 'getMap')": [
                        52
                    ],
                    "('org.apache.commons.collections4.iterators#UnmodifiableMapIteratorTest', 'getConfirmedMap')": [
                        62
                    ],
                    "('org.apache.commons.collections4.iterators#UnmodifiableMapIteratorTest', 'testDecorateFactory')": [
                        86
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.iterators#UnmodifiableMapIteratorTest', 'getMap')": [
                        52
                    ],
                    "('org.apache.commons.collections4.iterators#UnmodifiableMapIteratorTest', 'getConfirmedMap')": [
                        62
                    ],
                    "('org.apache.commons.collections4.iterators#UnmodifiableMapIteratorTest', 'testDecorateFactory')": [
                        86
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/iterators/UnmodifiableOrderedMapIteratorTest.java": {
                "old": {
                    "('org.apache.commons.collections4.iterators#UnmodifiableOrderedMapIteratorTest', 'testDecorateFactory')": [
                        88
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.iterators#UnmodifiableOrderedMapIteratorTest', 'testDecorateFactory')": [
                        88
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/keyvalue/MultiKeyTest.java": {
                "old": {
                    "('org.apache.commons.collections4.keyvalue#MultiKeyTest', None)": [
                        43,
                        56,
                        63,
                        64,
                        69,
                        70,
                        72,
                        76,
                        77
                    ],
                    "('org.apache.commons.collections4.keyvalue#MultiKeyTest', 'testEqualsAfterSerialization')": [
                        171,
                        172,
                        188
                    ],
                    "('org.apache.commons.collections4.keyvalue#MultiKeyTest', 'testEqualsAfterSerializationOfDerivedClass')": [
                        199,
                        200,
                        212
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.keyvalue#MultiKeyTest', None)": [
                        43,
                        56,
                        63,
                        68,
                        70,
                        74
                    ],
                    "('org.apache.commons.collections4.keyvalue#MultiKeyTest', 'testEqualsAfterSerialization')": [
                        168,
                        184
                    ],
                    "('org.apache.commons.collections4.keyvalue#MultiKeyTest', 'testEqualsAfterSerializationOfDerivedClass')": [
                        195,
                        207
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/list/AbstractListTest.java": {
                "old": {
                    "('org.apache.commons.collections4.list#AbstractListTest', 'testFullListCompatibility')": [
                        1109
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.list#AbstractListTest', 'testFullListCompatibility')": [
                        1109
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/list/NodeCachingLinkedListTest.java": {
                "old": {
                    "('org.apache.commons.collections4.list#NodeCachingLinkedListTest', 'compareSpeed')": [
                        88,
                        115
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.list#NodeCachingLinkedListTest', 'compareSpeed')": [
                        88,
                        115
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/list/SetUniqueListTest.java": {
                "old": {
                    "('org.apache.commons.collections4.list#SetUniqueListTest', None)": [
                        41
                    ],
                    "('org.apache.commons.collections4.list#SetUniqueListTest', 'getFullNonNullElements')": [
                        74,
                        79
                    ],
                    "('org.apache.commons.collections4.list#SetUniqueListTest', 'testRetainAll')": [
                        362,
                        367
                    ],
                    "('org.apache.commons.collections4.list#SetUniqueListTest', 'testRetainAllWithInitialList')": [
                        384,
                        388,
                        393
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.list#SetUniqueListTest', None)": [
                        41
                    ],
                    "('org.apache.commons.collections4.list#SetUniqueListTest', 'getFullNonNullElements')": [
                        74,
                        79
                    ],
                    "('org.apache.commons.collections4.list#SetUniqueListTest', 'testRetainAll')": [
                        362,
                        367
                    ],
                    "('org.apache.commons.collections4.list#SetUniqueListTest', 'testRetainAllWithInitialList')": [
                        384,
                        388,
                        393
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/map/AbstractMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.map#AbstractMapTest', 'makeObject')": [
                        430
                    ],
                    "('org.apache.commons.collections4.map#AbstractMapTest', 'testMapPutAll')": [
                        956,
                        969
                    ],
                    "('org.apache.commons.collections4.map#AbstractMapTest', 'testValuesRemoveAll')": [
                        1237
                    ],
                    "('org.apache.commons.collections4.map#AbstractMapTest', 'testValuesRetainAll')": [
                        1270
                    ],
                    "('org.apache.commons.collections4.map#AbstractMapTest', 'testKeySetRemoveAll')": [
                        1342
                    ],
                    "('org.apache.commons.collections4.map#AbstractMapTest', 'testKeySetRetainAll')": [
                        1372
                    ],
                    "('org.apache.commons.collections4.map#AbstractMapTest', None)": [
                        2049,
                        2057
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#AbstractMapTest', 'makeObject')": [
                        430
                    ],
                    "('org.apache.commons.collections4.map#AbstractMapTest', 'testMapPutAll')": [
                        956,
                        969
                    ],
                    "('org.apache.commons.collections4.map#AbstractMapTest', 'testValuesRemoveAll')": [
                        1237
                    ],
                    "('org.apache.commons.collections4.map#AbstractMapTest', 'testValuesRetainAll')": [
                        1270
                    ],
                    "('org.apache.commons.collections4.map#AbstractMapTest', 'testKeySetRemoveAll')": [
                        1342
                    ],
                    "('org.apache.commons.collections4.map#AbstractMapTest', 'testKeySetRetainAll')": [
                        1372
                    ],
                    "('org.apache.commons.collections4.map#AbstractMapTest', None)": [
                        2049,
                        2057
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/map/AbstractSortedMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.map#AbstractSortedMapTest', None)": [
                        112,
                        264
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#AbstractSortedMapTest', None)": [
                        112,
                        264
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/map/EmptyMapMutator.java": {
                "old": {
                    "('org.apache.commons.collections4.map#EmptyMapMutator', None)": [
                        27
                    ],
                    "('org.apache.commons.collections4.map#EmptyMapMutator', 'resolveCollision(CompositeMap,Map,Map,Collection)')": [
                        32,
                        33,
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#EmptyMapMutator', None)": [
                        27
                    ],
                    "('org.apache.commons.collections4.map#EmptyMapMutator', 'resolveCollision(CompositeMap,Map,Map,Collection)')": [
                        32,
                        33,
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/map/LazyMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.map#LazyMapTest', 'makeObject')": [
                        45,
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#LazyMapTest', 'makeObject')": [
                        45,
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/map/LazySortedMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.map#LazySortedMapTest', None)": [
                        42,
                        43,
                        44,
                        45,
                        46,
                        47
                    ],
                    "('org.apache.commons.collections4.map#LazySortedMapTest', 'makeObject')": [
                        58,
                        59
                    ],
                    "('org.apache.commons.collections4.map#LazySortedMapTest', 'mapGet')": [
                        76,
                        82
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#LazySortedMapTest', None)": [
                        42,
                        43,
                        44,
                        45,
                        46,
                        47
                    ],
                    "('org.apache.commons.collections4.map#LazySortedMapTest', 'makeObject')": [
                        58,
                        59
                    ],
                    "('org.apache.commons.collections4.map#LazySortedMapTest', 'mapGet')": [
                        76,
                        82
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/map/MultiValueMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.map#MultiValueMapTest', 'testEmptyMapCompatibility')": [
                        457,
                        458
                    ],
                    "('org.apache.commons.collections4.map#MultiValueMapTest', 'testFullMapCompatibility')": [
                        462,
                        463
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#MultiValueMapTest', 'testEmptyMapCompatibility')": [
                        457,
                        458
                    ],
                    "('org.apache.commons.collections4.map#MultiValueMapTest', 'testFullMapCompatibility')": [
                        462,
                        463
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/map/PredicatedSortedMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.map#PredicatedSortedMapTest', None)": [
                        38,
                        39,
                        40,
                        41,
                        42,
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#PredicatedSortedMapTest', None)": [
                        38,
                        39,
                        40,
                        41,
                        42,
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/map/ReferenceMapTest.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/test/java/org/apache/commons/collections4/map/ReferenceMapTest.java",
                    [
                        304,
                        316,
                        338
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/test/java/org/apache/commons/collections4/map/ReferenceMapTest.java",
                    [
                        304,
                        316,
                        338
                    ]
                ]
            },
            "src/test/java/org/apache/commons/collections4/map/TransformedMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.map#TransformedMapTest', 'makeObject')": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#TransformedMapTest', 'makeObject')": [
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/map/UnmodifiableSortedMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.map#UnmodifiableSortedMapTest', 'testSubMap')": [
                        123
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.map#UnmodifiableSortedMapTest', 'testSubMap')": [
                        123
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/multimap/AbstractMultiValuedMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.multimap#AbstractMultiValuedMapTest', None)": [
                        1202
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.multimap#AbstractMultiValuedMapTest', None)": [
                        1202
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/multimap/ArrayListValuedHashMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.multimap#ArrayListValuedHashMapTest', 'testValuesListIteratorMethods')": [
                        230
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.multimap#ArrayListValuedHashMapTest', 'testValuesListIteratorMethods')": [
                        230
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/multimap/TransformedMultiValuedMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.multimap#TransformedMultiValuedMapTest', 'makeObject')": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.multimap#TransformedMultiValuedMapTest', 'makeObject')": [
                        48
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/multimap/UnmodifiableMultiValuedMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.multimap#UnmodifiableMultiValuedMapTest', 'makeObject')": [
                        63
                    ],
                    "('org.apache.commons.collections4.multimap#UnmodifiableMultiValuedMapTest', 'makeFullMap')": [
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.multimap#UnmodifiableMultiValuedMapTest', 'makeObject')": [
                        63
                    ],
                    "('org.apache.commons.collections4.multimap#UnmodifiableMultiValuedMapTest', 'makeFullMap')": [
                        71
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/multiset/UnmodifiableMultiSetTest.java": {
                "old": {
                    "('org.apache.commons.collections4.multiset#UnmodifiableMultiSetTest', 'testAdd')": [
                        99
                    ],
                    "('org.apache.commons.collections4.multiset#UnmodifiableMultiSetTest', 'testRemove')": [
                        108
                    ],
                    "('org.apache.commons.collections4.multiset#UnmodifiableMultiSetTest', 'testSetCount')": [
                        117
                    ],
                    "('org.apache.commons.collections4.multiset#UnmodifiableMultiSetTest', 'testEntrySet')": [
                        125
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.multiset#UnmodifiableMultiSetTest', 'testAdd')": [
                        99
                    ],
                    "('org.apache.commons.collections4.multiset#UnmodifiableMultiSetTest', 'testRemove')": [
                        108
                    ],
                    "('org.apache.commons.collections4.multiset#UnmodifiableMultiSetTest', 'testSetCount')": [
                        117
                    ],
                    "('org.apache.commons.collections4.multiset#UnmodifiableMultiSetTest', 'testEntrySet')": [
                        125
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/properties/AbstractPropertiesFactoryTest.java": {
                "old": {
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactoryTest', 'testLoadInputStream')": [
                        101
                    ],
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactoryTest', 'testLoadReader')": [
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactoryTest', 'testLoadInputStream')": [
                        101
                    ],
                    "('org.apache.commons.collections4.properties#AbstractPropertiesFactoryTest', 'testLoadReader')": [
                        116
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/properties/EmptyPropertiesTest.java": {
                "old": {
                    "('org.apache.commons.collections4.properties#EmptyPropertiesTest', 'testLoadReader')": [
                        188
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.properties#EmptyPropertiesTest', 'testLoadReader')": [
                        188
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/queue/AbstractQueueTest.java": {
                "old": {
                    "('org.apache.commons.collections4.queue#AbstractQueueTest', 'testFullQueueCompatibility')": [
                        377
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.queue#AbstractQueueTest', 'testFullQueueCompatibility')": [
                        377
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/queue/CircularFifoQueueTest.java": {
                "old": {
                    "('org.apache.commons.collections4.queue#CircularFifoQueueTest', None)": [
                        470
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.queue#CircularFifoQueueTest', None)": [
                        470
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/queue/UnmodifiableQueueTest.java": {
                "old": {
                    "('org.apache.commons.collections4.queue#UnmodifiableQueueTest', 'testOffer')": [
                        109
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.queue#UnmodifiableQueueTest', 'testOffer')": [
                        109
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/set/EmptySetMutator.java": {
                "old": {
                    "('org.apache.commons.collections4.set#EmptySetMutator', None)": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.set#EmptySetMutator', None)": [
                        35
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/splitmap/TransformedSplitMapTest.java": {
                "old": {
                    "('org.apache.commons.collections4.splitmap#TransformedSplitMapTest', 'testTransformedMap')": [
                        75
                    ],
                    "('org.apache.commons.collections4.splitmap#TransformedSplitMapTest', 'testMapIterator')": [
                        96
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.splitmap#TransformedSplitMapTest', 'testTransformedMap')": [
                        75
                    ],
                    "('org.apache.commons.collections4.splitmap#TransformedSplitMapTest', 'testMapIterator')": [
                        96
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/trie/PatriciaTrieTest.java": {
                "old": {
                    "('org.apache.commons.collections4.trie#PatriciaTrieTest', 'testPrefixMapRemoval')": [
                        326
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.trie#PatriciaTrieTest', 'testPrefixMapRemoval')": [
                        326
                    ]
                }
            }
        }
    },
    "6ad69bedd3436a75883e66bd130c77df884be98b": {
        "authored_data": "2020 Feb 18 16:34",
        "commit.message": "Increase coverage in CountingBloomFilter test.\n\nThe counting functionality appears to be broken. Annotations have been\nadded to the code at locations that are incorrect.\n\nTests have been updated that currently fail and disabled to allow the\nbuild to pass.\n",
        "commit.author.name": "aherbert",
        "pcid": "0f78a9c9e806221f101557dd1b03bb4f0c8fb326",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/CountingBloomFilter.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilter', None)": [
                        64,
                        65,
                        66
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilter', 'toString')": [
                        259,
                        261,
                        262,
                        263
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilter', None)": [
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        264
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilter', 'merge(BloomFilter)')": [
                        169
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilter', 'remove(BloomFilter)')": [
                        212
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilter', 'remove(Stream)')": [
                        243,
                        244,
                        245
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilter', 'toString')": [
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/CountingBloomFilterTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'ConstructorTest_Map_CountsTest')": [
                        92,
                        96
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', None)": [
                        136,
                        137,
                        138,
                        172,
                        173,
                        174,
                        208,
                        209,
                        210,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        373
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'mergeTest_Counts')": [
                        152
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'mergeTest_Counts_BitSetFilter')": [
                        175,
                        181,
                        188,
                        189,
                        190
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'mergeTest_Overflow')": [
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'mergeTest_Shape_Hasher_Count')": [
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'removeTest_Counting')": [
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'removeTest_Hasher')": [
                        318,
                        319
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'removeTest_Standard')": [
                        350,
                        351
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'removeTest_Underflow')": [
                        388,
                        390,
                        391
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        33,
                        34,
                        433
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'ConstructorTest_Map_CountsTest')": [
                        95,
                        99,
                        100,
                        101,
                        102
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', None)": [
                        142,
                        143,
                        144,
                        145,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        212,
                        213,
                        214,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        279,
                        280,
                        281,
                        282,
                        381,
                        411,
                        412,
                        413,
                        414,
                        415
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'mergeTest_Counts')": [
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'mergeTest_Counts_BitSetFilter')": [
                        179,
                        192
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'mergeTest_Overflow')": [
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'mergeTest_Shape_Hasher_Count')": [
                        246,
                        252,
                        253,
                        260,
                        261
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'removeTest_Counting')": [
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'removeTest_Hasher')": [
                        328
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'removeTest_Standard')": [
                        359
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'removeTest_Underflow')": [
                        396,
                        398,
                        399,
                        400
                    ],
                    "('org.apache.commons.collections4.bloomfilter#CountingBloomFilterTest', 'testToString')": [
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432
                    ]
                }
            }
        }
    },
    "0f78a9c9e806221f101557dd1b03bb4f0c8fb326": {
        "authored_data": "2020 Feb 18 13:56",
        "commit.message": "Test edge case in SetOperations when shapes are different.",
        "commit.author.name": "aherbert",
        "pcid": "4ecffb5feeb308adcf070a14c47d38e66b8a7602",
        "changes": {
            "src/test/java/org/apache/commons/collections4/bloomfilter/SetOperationsTest.java": {
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.collections4.bloomfilter#SetOperationsTest', None)": [
                        64,
                        65,
                        79,
                        80,
                        81,
                        82
                    ],
                    "('org.apache.commons.collections4.bloomfilter#SetOperationsTest', 'testDifferentShapesThrows')": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78
                    ]
                }
            }
        }
    },
    "4ecffb5feeb308adcf070a14c47d38e66b8a7602": {
        "authored_data": "2020 Feb 18 13:47",
        "commit.message": "Test getProvider() is Apache Commons Collections.",
        "commit.author.name": "aherbert",
        "pcid": "6215948227b39308d59c624ffa2221e841fb0909",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/function/MD5Cyclic.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher.function#MD5Cyclic', None)": [
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher.function#MD5Cyclic', None)": [
                        62,
                        63
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/MD5CyclicTest.java": {
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher.function#MD5CyclicTest', 'signatureTest')": [
                        61
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/Murmur128x86CyclicTest.java": {
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher.function#Murmur128x86CyclicTest', 'signatureTest')": [
                        63
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/Murmur32x86IterativeTest.java": {
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher.function#Murmur32x86IterativeTest', 'signatureTest')": [
                        61
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/function/ObjectsHashIterativeTest.java": {
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher.function#ObjectsHashIterativeTest', 'signatureTest')": [
                        66
                    ]
                }
            }
        }
    },
    "6215948227b39308d59c624ffa2221e841fb0909": {
        "authored_data": "2020 Feb 18 13:40",
        "commit.message": "Hit all edge cases in the Shape.equals method.\n",
        "commit.author.name": "aherbert",
        "pcid": "55cb720ccf2138dc230f27f5db123122a0388ba0",
        "changes": {
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/ShapeTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', 'equalsTest')": [
                        409,
                        410,
                        411,
                        441
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#ShapeTest', 'equalsTest')": [
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        454
                    ]
                }
            }
        }
    },
    "55cb720ccf2138dc230f27f5db123122a0388ba0": {
        "authored_data": "2020 Feb 18 13:35",
        "commit.message": "Remove HashFunctionIdentity comparators.\n\nThe comparators are never used to perform ordering of functions. The\nonly current use is to determine that two hash functions are\nfunctionally equivalent. A replacement utility class has been added to\ntest for equality.",
        "commit.author.name": "aherbert",
        "pcid": "66b418f3e9df348d784398d33d406ccedc08cd83",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/AbstractBloomFilter.java": {
                "new": {
                    "('org.apache.commons.collections4.bloomfilter#AbstractBloomFilter', 'verifyHasher(Hasher)')": [
                        215,
                        216,
                        217
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasher.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasher', 'getBits(Shape)')": [
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasher', 'getBits(Shape)')": [
                        180,
                        181
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/HashFunctionIdentity.java": {
                "old": {
                    "(None, None)": [
                        21,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        122,
                        125
                    ]
                },
                "new": {
                    "(None, None)": [
                        90
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/Shape.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', 'calculateNumberOfHashFunctions(int,int)')": [
                        235
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', 'equals(Object)')": [
                        261,
                        262
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', 'calculateNumberOfHashFunctions(int,int)')": [
                        235
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#Shape', 'equals(Object)')": [
                        261,
                        262
                    ]
                }
            },
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/StaticHasher.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasher', None)": [
                        51,
                        52,
                        53,
                        54,
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasher', None)": [
                        51,
                        52
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/StaticHasherTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Iterator')": [
                        190
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#StaticHasherTest', 'testConstructor_Iterator')": [
                        190,
                        191,
                        192,
                        193,
                        194
                    ]
                }
            }
        }
    },
    "66b418f3e9df348d784398d33d406ccedc08cd83": {
        "authored_data": "2020 Feb 18 12:39",
        "commit.message": "Update DynamicHasher to have a specialised iterator when empty.\n\nAdd tests to exercise the empty and non-empty iterators and their\nexpected exceptions when no more elements.",
        "commit.author.name": "aherbert",
        "pcid": "39f09559200e0fad71c6f42756f3900a1d270cd4",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasher.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasher', None)": [
                        105,
                        106,
                        107
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasher', 'getBits(Shape)')": [
                        166
                    ]
                },
                "new": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasher', None)": [
                        105,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasher', 'getBits(Shape)')": [
                        187,
                        188
                    ]
                }
            },
            "src/test/java/org/apache/commons/collections4/bloomfilter/hasher/DynamicHasherTest.java": {
                "old": {
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', None)": [
                        130
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testIsEmpty')": [
                        134
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testGetBits_MultipleHashes')": [
                        112,
                        113,
                        114
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', None)": [
                        115,
                        116,
                        117,
                        137
                    ],
                    "('org.apache.commons.collections4.bloomfilter.hasher#DynamicHasherTest', 'testIsEmpty')": [
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151
                    ]
                }
            }
        }
    },
    "39f09559200e0fad71c6f42756f3900a1d270cd4": {
        "authored_data": "2020 Feb 17 15:22",
        "commit.message": "Removed spurious javadoc tag.",
        "commit.author.name": "aherbert",
        "pcid": "d31ebdd0e4a7da2d8eb6c7ba54d317af5ab872d2",
        "changes": {
            "src/main/java/org/apache/commons/collections4/bloomfilter/hasher/HashFunctionIdentity.java": {
                "old": {
                    "(None, None)": [
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        49
                    ]
                }
            }
        }
    }
}