{
    "0189ff1757a3b3f0c9c268ed68cee6387d3e5187": {
        "authored_data": "2014 Apr 18 22:44",
        "commit.message": "Fix more code review finds.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "c825e89c84fa78222baae7a35c4843b2ef199869",
        "changes": {
            "parquet-column/src/main/java/parquet/schema/PrimitiveType.java": {
                "old": {
                    "('parquet.schema#PrimitiveType', 'getOriginalTypeMeta')": [
                        357
                    ],
                    "('parquet.schema#PrimitiveType', 'writeToStringBuilder(StringBuilder,String)')": [
                        391
                    ]
                },
                "new": {
                    "('parquet.schema#PrimitiveType', 'getDecimalMetadata')": [
                        357
                    ],
                    "('parquet.schema#PrimitiveType', None)": [
                        360
                    ],
                    "('parquet.schema#PrimitiveType', 'writeToStringBuilder(StringBuilder,String)')": [
                        392
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/Types.java": {
                "new": {
                    "('parquet.schema#Types', None)": [
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/format/converter/ParquetMetadataConverter.java": {
                "old": {
                    "('parquet.format.converter#ParquetMetadataConverter', 'addToList(List,parquet)')": [
                        106,
                        107,
                        108
                    ]
                },
                "new": {
                    "('parquet.format.converter#ParquetMetadataConverter', 'addToList(List,parquet)')": [
                        106,
                        107,
                        108
                    ]
                }
            }
        }
    },
    "c825e89c84fa78222baae7a35c4843b2ef199869": {
        "authored_data": "2014 Apr 18 16:22",
        "commit.message": "Remove unchecked casts from Types.Builder.\n\nThis simplifies the logic so that either a return object is supplied\nwhen a Builder is constructed, or the expected type is supplied so that\nthe code can check the return type is valid.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "acaac8bb700debdec66d0a633a60be503b7a20b4",
        "changes": {
            "parquet-column/src/main/java/parquet/schema/Types.java": {
                "old": {
                    "('parquet.schema#Types', None)": [
                        121,
                        157,
                        158,
                        159,
                        167,
                        173,
                        174,
                        178,
                        460,
                        476,
                        477,
                        478
                    ],
                    "('parquet.schema#Types', 'buildGroup(Type)')": [
                        494
                    ],
                    "('parquet.schema#Types', 'requiredGroup')": [
                        503
                    ],
                    "('parquet.schema#Types', 'optionalGroup')": [
                        513
                    ],
                    "('parquet.schema#Types', 'repeatedGroup')": [
                        523
                    ],
                    "('parquet.schema#Types', 'primitive(PrimitiveTypeName,Type)')": [
                        529
                    ],
                    "('parquet.schema#Types', 'required(PrimitiveTypeName)')": [
                        541
                    ],
                    "('parquet.schema#Types', 'optional(PrimitiveTypeName)')": [
                        553
                    ],
                    "('parquet.schema#Types', 'repeated(PrimitiveTypeName)')": [
                        565
                    ]
                },
                "new": {
                    "('parquet.schema#Types', None)": [
                        116,
                        123,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        166,
                        167,
                        168,
                        181,
                        182,
                        183,
                        184,
                        185,
                        189,
                        190,
                        211,
                        212,
                        213,
                        214,
                        215,
                        354,
                        355,
                        356,
                        357,
                        358,
                        482
                    ],
                    "('parquet.schema#Types', 'buildGroup(Type)')": [
                        513
                    ],
                    "('parquet.schema#Types', 'requiredGroup')": [
                        522
                    ],
                    "('parquet.schema#Types', 'optionalGroup')": [
                        532
                    ],
                    "('parquet.schema#Types', 'repeatedGroup')": [
                        542
                    ],
                    "('parquet.schema#Types', 'primitive(PrimitiveTypeName,Type)')": [
                        548
                    ],
                    "('parquet.schema#Types', 'required(PrimitiveTypeName)')": [
                        560
                    ],
                    "('parquet.schema#Types', 'optional(PrimitiveTypeName)')": [
                        572
                    ],
                    "('parquet.schema#Types', 'repeated(PrimitiveTypeName)')": [
                        584
                    ]
                }
            }
        }
    },
    "acaac8bb700debdec66d0a633a60be503b7a20b4": {
        "authored_data": "2014 Apr 15 21:21",
        "commit.message": "Implement code review changes.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "86501c2352413feb8a4128362d862c89e6cbb1f7",
        "changes": {
            "parquet-column/src/main/java/parquet/schema/GroupType.java": {
                "old": {
                    "('parquet.schema#GroupType', None)": [
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('parquet.schema#GroupType', 'writeToStringBuilder(StringBuilder,String)')": [
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187
                    ]
                },
                "new": {
                    "('parquet.schema#GroupType', None)": [
                        72
                    ],
                    "('parquet.schema#GroupType', 'writeToStringBuilder(StringBuilder,String)')": [
                        170,
                        171,
                        172
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/MessageTypeParser.java": {
                "old": {
                    "('parquet.schema#MessageTypeParser', 'addType(String,Tokenizer,Types)')": [
                        103,
                        105,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        118,
                        119,
                        120,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        157
                    ]
                },
                "new": {
                    "('parquet.schema#MessageTypeParser', 'addType(String,Tokenizer,Types)')": [
                        104,
                        106
                    ],
                    "('parquet.schema#MessageTypeParser', None)": [
                        107,
                        108,
                        109,
                        131,
                        132
                    ],
                    "('parquet.schema#MessageTypeParser', 'addGroupType(String,Tokenizer,Repetition,Types)')": [
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130
                    ],
                    "('parquet.schema#MessageTypeParser', 'addPrimitiveType(String,Tokenizer,PrimitiveTypeName,Repetition,Types)')": [
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        142,
                        143,
                        144,
                        145,
                        173,
                        174,
                        175,
                        178
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/PrimitiveType.java": {
                "old": {
                    "('parquet.schema#PrimitiveType', None)": [
                        322,
                        326,
                        327
                    ],
                    "('parquet.schema#PrimitiveType', 'writeToStringBuilder(StringBuilder,String)')": [
                        377
                    ]
                },
                "new": {
                    "('parquet.schema#PrimitiveType', None)": [
                        278,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        329,
                        333,
                        334,
                        337,
                        354,
                        355,
                        356,
                        359
                    ],
                    "('parquet.schema#PrimitiveType', 'getOriginalTypeMeta')": [
                        357,
                        358
                    ],
                    "('parquet.schema#PrimitiveType', 'writeToStringBuilder(StringBuilder,String)')": [
                        391
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/Type.java": {
                "old": {
                    "('parquet.schema#Type', None)": [
                        76,
                        83,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        106,
                        136,
                        137,
                        138,
                        139,
                        140
                    ],
                    "('parquet.schema#Type', 'getOriginalTypeMeta')": [
                        141,
                        142
                    ]
                },
                "new": {
                    "('parquet.schema#Type', None)": [
                        82,
                        91
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/Types.java": {
                "old": {
                    "('parquet.schema#Types', None)": [
                        116,
                        121,
                        122,
                        127,
                        128,
                        136,
                        153,
                        166,
                        168,
                        184,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        267,
                        312,
                        313,
                        443,
                        444
                    ]
                },
                "new": {
                    "('parquet.schema#Types', None)": [
                        124,
                        125,
                        126,
                        134,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        228,
                        230,
                        246,
                        258,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        335,
                        336,
                        337,
                        338,
                        339,
                        454
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/schema/TestTypeBuilders.java": {
                "old": {
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotation')": [
                        197,
                        207,
                        217,
                        226
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationMissingScale')": [
                        239,
                        249,
                        259,
                        268
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationMissingPrecision')": [
                        315,
                        316,
                        317
                    ],
                    "('parquet.schema#TestTypeBuilders', None)": [
                        318,
                        319,
                        363,
                        364,
                        406
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationPrecisionScaleBound')": [
                        360,
                        361,
                        362
                    ]
                },
                "new": {
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotation')": [
                        197,
                        207,
                        217,
                        226
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationMissingScale')": [
                        239,
                        249,
                        259,
                        268
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationMissingPrecision')": [
                        315,
                        316,
                        317
                    ],
                    "('parquet.schema#TestTypeBuilders', None)": [
                        318,
                        319,
                        320,
                        364,
                        365,
                        366,
                        408,
                        409
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationPrecisionScaleBound')": [
                        361,
                        362,
                        363
                    ]
                }
            },
            "parquet-common/src/main/java/parquet/Preconditions.java": {
                "new": {
                    "('parquet#Preconditions', None)": [
                        51,
                        52,
                        53,
                        54,
                        55
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/format/converter/ParquetMetadataConverter.java": {
                "old": {
                    "('parquet.format.converter#ParquetMetadataConverter', 'addToList(List,parquet)')": [
                        129,
                        130,
                        131,
                        132
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'buildChildren(Types,Iterator,int)')": [
                        399,
                        403,
                        404,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417
                    ]
                },
                "new": {
                    "('parquet.format.converter#ParquetMetadataConverter', 'buildChildren(Types,Iterator,int)')": [
                        395,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408
                    ]
                }
            }
        }
    },
    "86501c2352413feb8a4128362d862c89e6cbb1f7": {
        "authored_data": "2014 Apr 15 16:45",
        "commit.message": "Add INT32 and INT64 as supported types for DECIMAL.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "9ef22e630907eeb85600ab3ef53257fb575a0f8e",
        "changes": {
            "parquet-column/src/main/java/parquet/schema/Types.java": {
                "old": {
                    "('parquet.schema#Types', None)": [
                        280,
                        282,
                        285,
                        286,
                        287
                    ]
                },
                "new": {
                    "('parquet.schema#Types', None)": [
                        239,
                        240,
                        280,
                        281,
                        284,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        299,
                        300
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/schema/TestTypeBuilders.java": {
                "old": {
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationBinary')": [
                        181,
                        185
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationMissingScale')": [
                        197
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationPrecisionScaleBound')": [
                        247,
                        257,
                        258,
                        259
                    ],
                    "('parquet.schema#TestTypeBuilders', None)": [
                        260,
                        261,
                        262,
                        263,
                        264,
                        299,
                        300,
                        301,
                        306,
                        307,
                        308,
                        311,
                        312,
                        313,
                        318,
                        319,
                        320
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationFixed')": [
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testFixedWithLength')": [
                        302,
                        303,
                        304,
                        305
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testFixedWithoutLength')": [
                        309,
                        310
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testUTF8Annotation')": [
                        314,
                        315,
                        316,
                        317
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDECIMALAnnotationRejectsNonByteArrays')": [
                        321,
                        322,
                        323,
                        325
                    ]
                },
                "new": {
                    "('parquet.schema#TestTypeBuilders', None)": [
                        172,
                        175,
                        176,
                        177,
                        182,
                        183,
                        363,
                        364,
                        405,
                        406,
                        407,
                        408,
                        409,
                        425,
                        426,
                        427
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testFixedWithoutLength')": [
                        173,
                        174
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testFixedWithLength')": [
                        178,
                        179,
                        180,
                        181
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotation')": [
                        193,
                        194,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        218,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationMissingScale')": [
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        260
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationMissingPrecision')": [
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationPrecisionScaleBound')": [
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        350,
                        360,
                        361,
                        362
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationLengthCheck')": [
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDECIMALAnnotationRejectsUnsupportedTypes')": [
                        410,
                        411,
                        412,
                        414
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testUTF8Annotation')": [
                        428,
                        429,
                        430,
                        431
                    ]
                }
            }
        }
    },
    "9ef22e630907eeb85600ab3ef53257fb575a0f8e": {
        "authored_data": "2014 Apr 14 17:57",
        "commit.message": "Fix maximum precision calculation, account for sign bit.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "5c807055aa1959737c2b2a1d2256e5769c9a7f25",
        "changes": {
            "parquet-column/src/main/java/parquet/schema/Types.java": {
                "old": {
                    "('parquet.schema#Types', None)": [
                        297,
                        298,
                        299
                    ]
                },
                "new": {
                    "('parquet.schema#Types', None)": [
                        297,
                        298,
                        299
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/schema/TestTypeBuilders.java": {
                "old": {
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationLengthCheck')": [
                        290,
                        295
                    ]
                },
                "new": {
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationLengthCheck')": [
                        290,
                        295
                    ]
                }
            }
        }
    },
    "5c807055aa1959737c2b2a1d2256e5769c9a7f25": {
        "authored_data": "2014 Apr 12 19:39",
        "commit.message": "Update documentation and formatting.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "73d7558bdaf966a9fbfae7fc1c8f0ba727a98de9",
        "changes": {
            "parquet-column/src/main/java/parquet/schema/Types.java": {
                "old": {
                    "(None, None)": [
                        10,
                        16,
                        25,
                        28,
                        44,
                        49,
                        71,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        94
                    ],
                    "('parquet.schema#Types', None)": [
                        143,
                        160,
                        175,
                        178
                    ]
                },
                "new": {
                    "(None, None)": [
                        10,
                        16,
                        25,
                        28,
                        44,
                        49,
                        71,
                        76,
                        77,
                        78,
                        79,
                        80,
                        92
                    ],
                    "('parquet.schema#Types', None)": [
                        141,
                        158,
                        173,
                        176,
                        195,
                        196,
                        197,
                        443,
                        444,
                        445
                    ]
                }
            }
        }
    },
    "73d7558bdaf966a9fbfae7fc1c8f0ba727a98de9": {
        "authored_data": "2014 Apr 12 19:35",
        "commit.message": "Simplify Types API by moving repetition.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "299e0ca760ccc0608ba7b0ebd3461f4ec5e606f8",
        "changes": {
            "parquet-column/src/main/java/parquet/schema/MessageTypeParser.java": {
                "old": {
                    "('parquet.schema#MessageTypeParser', 'addType(String,Tokenizer,Types)')": [
                        105,
                        108,
                        119,
                        120,
                        121
                    ]
                },
                "new": {
                    "('parquet.schema#MessageTypeParser', 'addType(String,Tokenizer,Types)')": [
                        105,
                        108
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/PrimitiveType.java": {
                "old": {
                    "('parquet.schema#PrimitiveType', 'union(Type)')": [
                        477,
                        478
                    ]
                },
                "new": {
                    "('parquet.schema#PrimitiveType', 'union(Type)')": [
                        477,
                        478
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/Types.java": {
                "old": {
                    "('parquet.schema#Types', None)": [
                        132,
                        318,
                        319,
                        364,
                        365
                    ],
                    "('parquet.schema#Types', 'buildGroup')": [
                        463,
                        464
                    ],
                    "('parquet.schema#Types', 'primitive(PrimitiveTypeName)')": [
                        498,
                        499
                    ]
                },
                "new": {
                    "('parquet.schema#Types', None)": [
                        132,
                        318,
                        319,
                        320,
                        365,
                        366,
                        367
                    ],
                    "('parquet.schema#Types', 'buildGroup(Type)')": [
                        465,
                        466,
                        467
                    ],
                    "('parquet.schema#Types', 'primitive(PrimitiveTypeName,Type)')": [
                        501,
                        502,
                        503
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/schema/TestTypeBuilders.java": {
                "old": {
                    "('parquet.schema#TestTypeBuilders', 'testGroupTypeConstruction')": [
                        53,
                        54,
                        56
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testPrimitiveTypeConstruction')": [
                        93,
                        94
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testFixedTypeConstruction')": [
                        119,
                        120
                    ],
                    "('parquet.schema#TestTypeBuilders', None)": [
                        170,
                        171,
                        172,
                        173,
                        174
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testMissingRepetition')": [
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189
                    ]
                },
                "new": {
                    "('parquet.schema#TestTypeBuilders', 'testGroupTypeConstruction')": [
                        53,
                        55
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testPrimitiveTypeConstruction')": [
                        92
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testFixedTypeConstruction')": [
                        117,
                        118
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/format/converter/ParquetMetadataConverter.java": {
                "old": {
                    "('parquet.format.converter#ParquetMetadataConverter', 'buildChildren(Types,Iterator,int)')": [
                        399,
                        404,
                        407,
                        408
                    ]
                },
                "new": {
                    "('parquet.format.converter#ParquetMetadataConverter', 'buildChildren(Types,Iterator,int)')": [
                        399,
                        400,
                        401,
                        406
                    ]
                }
            }
        }
    },
    "299e0ca760ccc0608ba7b0ebd3461f4ec5e606f8": {
        "authored_data": "2014 Apr 12 19:05",
        "commit.message": "Add Types builder API documentation.\n\nAlso add check that scale <= precision and test.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "63ffdce40355d8c75dae6a6888ca315889737f1c",
        "changes": {
            "parquet-column/src/main/java/parquet/schema/Types.java": {
                "old": {
                    "('parquet.schema#Types', None)": [
                        42,
                        43,
                        51,
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106
                    ],
                    "('parquet.schema#Types', None)": [
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        223,
                        224,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        401,
                        402,
                        403,
                        404,
                        405,
                        411,
                        412,
                        413,
                        414,
                        415,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        454,
                        455,
                        456,
                        457,
                        458,
                        467,
                        468,
                        469,
                        470,
                        471,
                        477,
                        478,
                        479,
                        480,
                        481,
                        487,
                        488,
                        489,
                        490,
                        491,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/schema/TestTypeBuilders.java": {
                "new": {
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationPrecisionScaleBound')": [
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281
                    ],
                    "('parquet.schema#TestTypeBuilders', None)": [
                        282,
                        283,
                        284,
                        285,
                        286
                    ]
                }
            }
        }
    },
    "63ffdce40355d8c75dae6a6888ca315889737f1c": {
        "authored_data": "2014 Apr 11 22:17",
        "commit.message": "Add test for decimal with unsupported primitive types.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "3af02db83a4b18f814a400bfe8569c31de4932b7",
        "changes": {
            "parquet-column/src/test/java/parquet/schema/TestTypeBuilders.java": {
                "new": {
                    "('parquet.schema#TestTypeBuilders', 'testDECIMALAnnotationRejectsNonByteArrays')": [
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329
                    ],
                    "('parquet.schema#TestTypeBuilders', None)": [
                        330,
                        331,
                        332,
                        333,
                        334,
                        335
                    ]
                }
            }
        }
    },
    "3af02db83a4b18f814a400bfe8569c31de4932b7": {
        "authored_data": "2014 Apr 11 22:04",
        "commit.message": "Add more tests for type builders.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "a1d7260a4ace24a8d6f514149271ad998019eb5e",
        "changes": {
            "parquet-column/src/test/java/parquet/schema/TestTypeBuilders.java": {
                "new": {
                    "(None, None)": [
                        5
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testGroupTypeConstruction')": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80
                    ],
                    "('parquet.schema#TestTypeBuilders', None)": [
                        81,
                        82,
                        83,
                        84,
                        108,
                        109,
                        110,
                        111,
                        112,
                        134,
                        135,
                        136,
                        137,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        170,
                        171,
                        172,
                        173,
                        174,
                        190,
                        191,
                        192,
                        193,
                        194,
                        212,
                        213,
                        214,
                        234,
                        235,
                        236,
                        257,
                        258
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testPrimitiveTypeConstruction')": [
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testFixedTypeConstruction')": [
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testEmptyGroup')": [
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testEmptyMessage')": [
                        164,
                        165,
                        166,
                        167,
                        168,
                        169
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testMissingRepetition')": [
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationMissingScale')": [
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testDecimalAnnotationMissingPrecision')": [
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256
                    ]
                }
            }
        }
    }
}