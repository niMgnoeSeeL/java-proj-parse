{
    "57f6b46dde5926cc602c583940dd6424f10b9a17": {
        "authored_data": "2020 Feb 12 11:55",
        "commit.message": "PARQUET-1790: Add Api for writing DataPageV2 to ParquetFileWriter class (#756)\n\n\r\n",
        "commit.author.name": "Brian Mwambazi",
        "pcid": "3bbf66c2551bb9cc36b6a41d4b3820cd9fc72c77",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java": {
                "old": {
                    "(None, None)": [
                        1
                    ]
                },
                "new": {
                    "(None, None)": [
                        1
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', None)": [
                        578,
                        579,
                        580,
                        581,
                        582,
                        583,
                        584,
                        585,
                        586,
                        587,
                        588,
                        589,
                        640,
                        641,
                        642,
                        959,
                        960
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'writeDataPageV2(int,int,int,BytesInput,BytesInput,Encoding,BytesInput,int,Statistics)')": [
                        590,
                        591,
                        592,
                        593,
                        594,
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610,
                        611,
                        612,
                        613,
                        614,
                        615,
                        616,
                        617,
                        618,
                        619,
                        620,
                        621,
                        622,
                        623,
                        624,
                        625,
                        626,
                        627,
                        628,
                        629,
                        630,
                        631,
                        632,
                        633,
                        634,
                        635,
                        636,
                        637,
                        638,
                        639
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'toIntWithCheck(long)')": [
                        954,
                        955,
                        956,
                        957,
                        958
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/hadoop/TestParquetFileWriter.java": {
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.parquet.hadoop#TestParquetFileWriter', 'testWriteReadDataPageV2')": [
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283
                    ],
                    "('org.apache.parquet.hadoop#TestParquetFileWriter', None)": [
                        284,
                        285,
                        286,
                        745,
                        746,
                        758,
                        759
                    ],
                    "('org.apache.parquet.hadoop#TestParquetFileWriter', 'validateV2Page(MessageType,PageReadStore,String,int,int,int,byte,byte,byte,int)')": [
                        747,
                        748,
                        749,
                        750,
                        751,
                        752,
                        753,
                        754,
                        755,
                        756,
                        757
                    ],
                    "('org.apache.parquet.hadoop#TestParquetFileWriter', 'createStatistics(String,String,ColumnDescriptor)')": [
                        760,
                        761,
                        762,
                        763
                    ]
                }
            }
        }
    },
    "3bbf66c2551bb9cc36b6a41d4b3820cd9fc72c77": {
        "authored_data": "2020 Feb 12 11:38",
        "commit.message": "PARQUET-1622: Add implementation for BYTE_STREAM_SPLIT (#705)\n\nThe patch adds an implementation and tests for the\r\nBYTE_STREAM_SPLIT encoding.",
        "commit.author.name": "martinradev",
        "pcid": "17bef40022cb9830101cff4893c9054d2d7ddce6",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/column/Encoding.java": {
                "new": {
                    "(None, None)": [
                        34,
                        35,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java": {
                "old": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.parquet.column#ParquetProperties', None)": [
                        102,
                        369
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        40,
                        41
                    ],
                    "('org.apache.parquet.column#ParquetProperties', None)": [
                        51,
                        101,
                        106,
                        123,
                        178,
                        179,
                        254,
                        271,
                        298,
                        299,
                        300,
                        301,
                        302,
                        385
                    ],
                    "('org.apache.parquet.column#ParquetProperties', 'isByteStreamSplitEnabled')": [
                        180,
                        181
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/factory/DefaultV1ValuesWriterFactory.java": {
                "old": {
                    "('org.apache.parquet.column.values.factory#DefaultV1ValuesWriterFactory', 'getDoubleValuesWriter(ColumnDescriptor)')": [
                        103
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultV1ValuesWriterFactory', 'getFloatValuesWriter(ColumnDescriptor)')": [
                        108
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultV1ValuesWriterFactory', 'getDoubleValuesWriter(ColumnDescriptor)')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultV1ValuesWriterFactory', 'getFloatValuesWriter(ColumnDescriptor)')": [
                        114,
                        115,
                        116,
                        117,
                        118,
                        119
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/factory/DefaultV2ValuesWriterFactory.java": {
                "old": {
                    "('org.apache.parquet.column.values.factory#DefaultV2ValuesWriterFactory', 'getDoubleValuesWriter(ColumnDescriptor)')": [
                        107
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultV2ValuesWriterFactory', 'getFloatValuesWriter(ColumnDescriptor)')": [
                        112
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultV2ValuesWriterFactory', 'getDoubleValuesWriter(ColumnDescriptor)')": [
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultV2ValuesWriterFactory', 'getFloatValuesWriter(ColumnDescriptor)')": [
                        118,
                        119,
                        120,
                        121,
                        122,
                        123
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/values/factory/DefaultValuesWriterFactoryTest.java": {
                "old": {
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testFloat_V2_NoDict')": [
                        303
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', None)": [
                        304,
                        305
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'doTestValueWriter(PrimitiveTypeName,WriterVersion,boolean,Class)')": [
                        306,
                        308
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'doTestValueWriter(PrimitiveTypeName,WriterVersion,boolean,Class,Class)')": [
                        314,
                        316
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'getDefaultFactory(WriterVersion,boolean)')": [
                        328
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testBoolean')": [
                        52
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testBoolean_V2')": [
                        62
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testFixedLenByteArray')": [
                        72
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testFixedLenByteArray_V2')": [
                        82
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testFixedLenByteArray_V2_NoDict')": [
                        92
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testBinary')": [
                        102
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testBinary_NoDict')": [
                        112
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testBinary_V2')": [
                        122
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testBinary_V2_NoDict')": [
                        132
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testInt32')": [
                        142
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testInt32_NoDict')": [
                        152
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testInt32_V2')": [
                        162
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testInt32_V2_NoDict')": [
                        172
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testInt64')": [
                        182
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testInt64_NoDict')": [
                        192
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testInt64_V2')": [
                        202
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testInt64_V2_NoDict')": [
                        212
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testInt96')": [
                        222
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testInt96_NoDict')": [
                        232
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testInt96_V2')": [
                        242
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testInt96_V2_NoDict')": [
                        252
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testDouble')": [
                        262
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testDouble_NoDict')": [
                        272
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testDouble_V2')": [
                        282
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testDouble_V2_NoDict')": [
                        292
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testFloat')": [
                        302
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testFloat_NoDict')": [
                        312
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testFloat_V2')": [
                        322
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testFloat_V2_NoDict')": [
                        332,
                        333
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', None)": [
                        334,
                        335,
                        336,
                        344,
                        345,
                        346,
                        354,
                        355,
                        356,
                        364,
                        365,
                        366,
                        374,
                        375,
                        383,
                        384,
                        385,
                        393,
                        394,
                        395,
                        403,
                        404,
                        405,
                        413,
                        414
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testFloat_V1_WithByteStreamSplit')": [
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testDouble_V1_WithByteStreamSplit')": [
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testFloat_V2_WithByteStreamSplit')": [
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testDouble_V2_WithByteStreamSplit')": [
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testFloat_V1_WithByteStreamSplitAndDictionary')": [
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testDouble_V1_WithByteStreamSplitAndDictionary')": [
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testFloat_V2_WithByteStreamSplitAndDictionary')": [
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'testDouble_V2_WithByteStreamSplitAndDictionary')": [
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'doTestValueWriter(PrimitiveTypeName,WriterVersion,boolean,boolean,Class)')": [
                        415,
                        417
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'doTestValueWriter(PrimitiveTypeName,WriterVersion,boolean,boolean,Class,Class)')": [
                        423,
                        425
                    ],
                    "('org.apache.parquet.column.values.factory#DefaultValuesWriterFactoryTest', 'getDefaultFactory(WriterVersion,boolean,boolean)')": [
                        437,
                        441
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetWriter.java": {
                "new": {
                    "('org.apache.parquet.hadoop#ParquetWriter', None)": [
                        487,
                        488,
                        489,
                        490,
                        491
                    ]
                }
            }
        }
    },
    "17bef40022cb9830101cff4893c9054d2d7ddce6": {
        "authored_data": "2020 Feb 10 12:34",
        "commit.message": "PARQUET-1782: Use Switch Statement in AvroRecordConverter (#752)\n\n* PARQUET-1782: Use Switch Statement in AvroRecordConverter\r\n\r\n* Changed Datum Class Initialization\r\n",
        "commit.author.name": "belugabehr",
        "pcid": "1577037f172ce73050f466d714e3b1f24ed84082",
        "changes": {
            "parquet-avro/src/main/java/org/apache/parquet/avro/AvroRecordConverter.java": {
                "old": {
                    "('org.apache.parquet.avro#AvroRecordConverter', 'newConverter(Schema,Type,GenericData,Class,ParentValueContainer)')": [
                        248,
                        250,
                        251,
                        252,
                        254,
                        256,
                        258,
                        259,
                        262,
                        264,
                        266,
                        268,
                        269,
                        270,
                        272,
                        276,
                        278,
                        280,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        293,
                        295,
                        297,
                        298,
                        299
                    ]
                },
                "new": {
                    "('org.apache.parquet.avro#AvroRecordConverter', 'newConverter(Schema,Type,GenericData,Class,ParentValueContainer)')": [
                        239,
                        249,
                        250,
                        252,
                        253,
                        254,
                        256,
                        257,
                        259,
                        260,
                        261,
                        262,
                        263,
                        267,
                        269,
                        271,
                        273,
                        274,
                        275,
                        277,
                        278,
                        282,
                        284,
                        286,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        298,
                        300,
                        302,
                        303,
                        304
                    ],
                    "('org.apache.parquet.avro#AvroRecordConverter', None)": [
                        305
                    ]
                }
            }
        }
    },
    "184965087fb320d4a5f5849d27b365420a3ef1a0": {
        "authored_data": "2020 Feb 03 13:56",
        "commit.message": "PARQUET-1737: Replace Test Class RandomStr with Apache Commons Lang (#725)\n\n",
        "commit.author.name": "belugabehr",
        "pcid": "438cb3c761daf8d916a85c8742fb321905a07df8",
        "changes": {
            "parquet-column/src/test/java/org/apache/parquet/column/values/Utils.java": {
                "old": {
                    "('org.apache.parquet.column.values#Utils', None)": [
                        32,
                        33
                    ],
                    "('org.apache.parquet.column.values#Utils', 'getRandomStringSamples(int,int)')": [
                        36,
                        37,
                        38,
                        39,
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet.column.values#Utils', None)": [
                        33
                    ],
                    "('org.apache.parquet.column.values#Utils', 'getRandomStringSamples(int,int)')": [
                        36,
                        37,
                        38
                    ]
                }
            }
        }
    },
    "438cb3c761daf8d916a85c8742fb321905a07df8": {
        "authored_data": "2020 Jan 26 20:11",
        "commit.message": "PARQUET-1749: Use Java 8 Streams for Empty PrimitiveIterator (#734)\n\n",
        "commit.author.name": "belugabehr",
        "pcid": "d3e3118150d3fa5d2831443ddc944d7416b9a9f6",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/internal/column/columnindex/IndexIterator.java": {
                "old": {
                    "('org.apache.parquet.internal.column.columnindex#IndexIterator', None)": [
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.parquet.internal.column.columnindex#IndexIterator', None)": [
                        33
                    ]
                }
            }
        }
    },
    "d3e3118150d3fa5d2831443ddc944d7416b9a9f6": {
        "authored_data": "2020 Jan 26 20:06",
        "commit.message": "PARQUET-1710: Use Objects.requireNonNull (#703)\n\n",
        "commit.author.name": "belugabehr",
        "pcid": "8c1bc9bcdeeac8178fecf61d18dc56913907fd46",
        "changes": {
            "parquet-cascading/src/main/java/org/apache/parquet/cascading/ParquetTupleScheme.java": {
                "old": {
                    "(None, None)": [
                        47,
                        48
                    ],
                    "('org.apache.parquet.cascading#ParquetTupleScheme', None)": [
                        78,
                        83
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.cascading#ParquetTupleScheme', None)": [
                        77,
                        82
                    ]
                }
            },
            "parquet-cascading3/src/main/java/org/apache/parquet/cascading/ParquetTupleScheme.java": {
                "old": {
                    "(None, None)": [
                        47,
                        48
                    ],
                    "('org.apache.parquet.cascading#ParquetTupleScheme', None)": [
                        77,
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.cascading#ParquetTupleScheme', None)": [
                        76,
                        77,
                        82,
                        83
                    ]
                }
            },
            "parquet-cascading3/src/main/java/org/apache/parquet/cascading/ParquetValueScheme.java": {
                "old": {
                    "(None, None)": [
                        40,
                        41
                    ],
                    "('org.apache.parquet.cascading#ParquetValueScheme', None)": [
                        90,
                        95,
                        99,
                        103
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.cascading#ParquetValueScheme', None)": [
                        89,
                        90,
                        91,
                        96,
                        97,
                        98,
                        102,
                        103,
                        104,
                        108,
                        109,
                        110,
                        111
                    ]
                }
            },
            "parquet-cli/src/main/java/org/apache/parquet/cli/csv/AvroCSV.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.parquet.cli.csv#AvroCSV', 'inferSchemaInternal(String,InputStream,CSVProperties,Set,boolean)')": [
                        107,
                        112,
                        117
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.parquet.cli.csv#AvroCSV', 'inferSchemaInternal(String,InputStream,CSVProperties,Set,boolean)')": [
                        107,
                        112,
                        117
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/ParquetProperties.java": {
                "old": {
                    "('org.apache.parquet.column#ParquetProperties', None)": [
                        329,
                        330,
                        335,
                        336
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29
                    ],
                    "('org.apache.parquet.column#ParquetProperties', None)": [
                        332,
                        337
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/impl/ColumnReaderBase.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.parquet.column.impl#ColumnReaderBase', None)": [
                        405,
                        406,
                        407
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.parquet.column.impl#ColumnReaderBase', None)": [
                        405,
                        406,
                        407
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/page/DictionaryPage.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.parquet.column.page#DictionaryPage', None)": [
                        56,
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.parquet.column.page#DictionaryPage', None)": [
                        55,
                        57
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter/AndRecordFilter.java": {
                "old": {
                    "('org.apache.parquet.filter#AndRecordFilter', 'and(UnboundRecordFilter,UnboundRecordFilter)')": [
                        41,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.parquet.filter#AndRecordFilter', 'and(UnboundRecordFilter,UnboundRecordFilter)')": [
                        43,
                        44
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter/ColumnPredicates.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.parquet.filter#ColumnPredicates', 'equalTo(String)')": [
                        63
                    ],
                    "('org.apache.parquet.filter#ColumnPredicates', 'equalTo(E)')": [
                        172
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.parquet.filter#ColumnPredicates', 'equalTo(String)')": [
                        64
                    ],
                    "('org.apache.parquet.filter#ColumnPredicates', 'equalTo(E)')": [
                        173
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter/ColumnRecordFilter.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.filter#ColumnRecordFilter', 'column(String,ColumnPredicates)')": [
                        44,
                        45
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.filter#ColumnRecordFilter', 'column(String,ColumnPredicates)')": [
                        44,
                        45
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter/NotRecordFilter.java": {
                "old": {
                    "('org.apache.parquet.filter#NotRecordFilter', 'not(UnboundRecordFilter)')": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.parquet.filter#NotRecordFilter', 'not(UnboundRecordFilter)')": [
                        39,
                        40
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter/OrRecordFilter.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.parquet.filter#OrRecordFilter', 'or(UnboundRecordFilter,UnboundRecordFilter)')": [
                        39,
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.parquet.filter#OrRecordFilter', 'or(UnboundRecordFilter,UnboundRecordFilter)')": [
                        40,
                        41
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/compat/FilterCompat.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.parquet.filter2.compat#FilterCompat', 'get(FilterPredicate)')": [
                        72
                    ],
                    "('org.apache.parquet.filter2.compat#FilterCompat', None)": [
                        128,
                        146
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29
                    ],
                    "('org.apache.parquet.filter2.compat#FilterCompat', 'get(FilterPredicate)')": [
                        73
                    ],
                    "('org.apache.parquet.filter2.compat#FilterCompat', None)": [
                        129,
                        147
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/predicate/LogicalInverseRewriter.java": {
                "old": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.parquet.filter2.predicate#LogicalInverseRewriter', 'rewrite(FilterPredicate)')": [
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        37
                    ],
                    "('org.apache.parquet.filter2.predicate#LogicalInverseRewriter', 'rewrite(FilterPredicate)')": [
                        54
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/predicate/LogicalInverter.java": {
                "old": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.parquet.filter2.predicate#LogicalInverter', 'invert(FilterPredicate)')": [
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.parquet.filter2.predicate#LogicalInverter', 'invert(FilterPredicate)')": [
                        48
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/predicate/Operators.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27
                    ],
                    "('org.apache.parquet.filter2.predicate#Operators', None)": [
                        41,
                        42,
                        43,
                        44,
                        127,
                        204,
                        217,
                        231,
                        244,
                        260,
                        261,
                        330,
                        366,
                        389,
                        443,
                        487
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.filter2.predicate#Operators', None)": [
                        40,
                        41,
                        124,
                        201,
                        214,
                        228,
                        241,
                        257,
                        258,
                        327,
                        363,
                        386,
                        440,
                        484
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator.java": {
                "old": {
                    "(None, None)": [
                        41,
                        42
                    ],
                    "('org.apache.parquet.filter2.predicate#SchemaCompatibilityValidator', 'validate(FilterPredicate,MessageType)')": [
                        60,
                        61
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.filter2.predicate#SchemaCompatibilityValidator', 'validate(FilterPredicate,MessageType)')": [
                        59,
                        60
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/predicate/Statistics.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.parquet.filter2.predicate#Statistics', None)": [
                        43,
                        44,
                        56,
                        57,
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.parquet.filter2.predicate#Statistics', None)": [
                        42,
                        43,
                        55,
                        56,
                        57
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/recordlevel/FilteringGroupConverter.java": {
                "old": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.parquet.filter2.recordlevel#FilteringGroupConverter', None)": [
                        59,
                        60,
                        61,
                        62
                    ],
                    "('org.apache.parquet.filter2.recordlevel#FilteringGroupConverter', 'getConverter(int)')": [
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet.filter2.recordlevel#FilteringGroupConverter', None)": [
                        59,
                        60,
                        61,
                        62
                    ],
                    "('org.apache.parquet.filter2.recordlevel#FilteringGroupConverter', 'getConverter(int)')": [
                        72
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/recordlevel/FilteringPrimitiveConverter.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.parquet.filter2.recordlevel#FilteringPrimitiveConverter', None)": [
                        39,
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.parquet.filter2.recordlevel#FilteringPrimitiveConverter', None)": [
                        39,
                        40
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/recordlevel/FilteringRecordMaterializer.java": {
                "old": {
                    "(None, None)": [
                        34,
                        35
                    ],
                    "('org.apache.parquet.filter2.recordlevel#FilteringRecordMaterializer', None)": [
                        60,
                        61,
                        62,
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.parquet.filter2.recordlevel#FilteringRecordMaterializer', None)": [
                        59,
                        60,
                        61,
                        62
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicate.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.filter2.recordlevel#BinaryLogical', None)": [
                        132,
                        133
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.filter2.recordlevel#BinaryLogical', None)": [
                        132,
                        133
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateEvaluator.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.parquet.filter2.recordlevel#IncrementallyUpdatedFilterPredicateEvaluator', 'evaluate(IncrementallyUpdatedFilterPredicate)')": [
                        40,
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.parquet.filter2.recordlevel#IncrementallyUpdatedFilterPredicateEvaluator', 'evaluate(IncrementallyUpdatedFilterPredicate)')": [
                        40
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateResetter.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.parquet.filter2.recordlevel#IncrementallyUpdatedFilterPredicateResetter', 'reset(IncrementallyUpdatedFilterPredicate)')": [
                        35,
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.parquet.filter2.recordlevel#IncrementallyUpdatedFilterPredicateResetter', 'reset(IncrementallyUpdatedFilterPredicate)')": [
                        35
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/io/MessageColumnIO.java": {
                "old": {
                    "(None, None)": [
                        53,
                        54
                    ],
                    "('org.apache.parquet.io#MessageColumnIO', 'getRecordReader(PageReadStore,RecordMaterializer,Filter)')": [
                        102,
                        103,
                        104
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.parquet.io#MessageColumnIO', 'getRecordReader(PageReadStore,RecordMaterializer,Filter)')": [
                        101,
                        102,
                        103
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/schema/ColumnOrder.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.parquet.schema#ColumnOrder', None)": [
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.parquet.schema#ColumnOrder', None)": [
                        64
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/schema/Type.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.parquet.schema#Type', None)": [
                        174,
                        175,
                        186,
                        187
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.parquet.schema#Type', None)": [
                        173,
                        174,
                        185,
                        186
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/schema/Types.java": {
                "old": {
                    "('org.apache.parquet.schema#Types', None)": [
                        238,
                        239,
                        311,
                        312,
                        1325,
                        1424
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet.schema#Types', None)": [
                        239,
                        311,
                        312,
                        1325,
                        1424
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/page/mem/MemPageReader.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.parquet.column.page.mem#MemPageReader', None)": [
                        42,
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.parquet.column.page.mem#MemPageReader', None)": [
                        41
                    ]
                }
            },
            "parquet-common/src/main/java/org/apache/parquet/Preconditions.java": {
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.parquet#Preconditions', None)": [
                        35,
                        37
                    ]
                }
            },
            "parquet-common/src/main/java/org/apache/parquet/glob/WildcardPath.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.parquet.glob#WildcardPath', None)": [
                        50,
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.parquet.glob#WildcardPath', None)": [
                        49,
                        50
                    ]
                }
            },
            "parquet-common/src/main/java/org/apache/parquet/hadoop/metadata/ColumnPath.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnPath', 'fromDotString(String)')": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnPath', 'fromDotString(String)')": [
                        40
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/filter2/compat/RowGroupFilter.java": {
                "old": {
                    "(None, None)": [
                        35,
                        36
                    ],
                    "('org.apache.parquet.filter2.compat#RowGroupFilter', 'filterRowGroups(Filter,List,MessageType)')": [
                        63
                    ],
                    "('org.apache.parquet.filter2.compat#RowGroupFilter', 'filterRowGroups(List,Filter,List,ParquetFileReader)')": [
                        68
                    ],
                    "('org.apache.parquet.filter2.compat#RowGroupFilter', None)": [
                        74,
                        75,
                        81,
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet.filter2.compat#RowGroupFilter', 'filterRowGroups(Filter,List,MessageType)')": [
                        62
                    ],
                    "('org.apache.parquet.filter2.compat#RowGroupFilter', 'filterRowGroups(List,Filter,List,ParquetFileReader)')": [
                        67
                    ],
                    "('org.apache.parquet.filter2.compat#RowGroupFilter', None)": [
                        73,
                        74,
                        80,
                        81
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/filter2/dictionarylevel/DictionaryFilter.java": {
                "old": {
                    "(None, None)": [
                        44,
                        45,
                        46
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'canDrop(FilterPredicate,List,DictionaryPageReadStore)')": [
                        58,
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        42
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'canDrop(FilterPredicate,List,DictionaryPageReadStore)')": [
                        56,
                        57
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/filter2/statisticslevel/StatisticsFilter.java": {
                "old": {
                    "(None, None)": [
                        42,
                        43
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'canDrop(FilterPredicate,List)')": [
                        70,
                        71
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'canDrop(FilterPredicate,List)')": [
                        69,
                        70
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/DirectCodecFactory.java": {
                "old": {
                    "('org.apache.parquet.hadoop#DirectCodecFactory', None)": [
                        83,
                        87
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.parquet.hadoop#DirectCodecFactory', None)": [
                        81,
                        82,
                        86,
                        87
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/InternalParquetRecordReader.java": {
                "old": {
                    "(None, None)": [
                        50
                    ],
                    "('org.apache.parquet.hadoop#InternalParquetRecordReader', None)": [
                        90
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.parquet.hadoop#InternalParquetRecordReader', None)": [
                        90
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/InternalParquetRecordWriter.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.hadoop#InternalParquetRecordWriter', None)": [
                        87
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.parquet.hadoop#InternalParquetRecordWriter', None)": [
                        87
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/MemoryManager.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.parquet.hadoop#MemoryManager', 'registerScaleCallBack(String,Runnable)')": [
                        171,
                        172
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.parquet.hadoop#MemoryManager', 'registerScaleCallBack(String,Runnable)')": [
                        171,
                        172
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetOutputFormat.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.parquet.hadoop#ParquetOutputFormat', 'getWriteSupport(Configuration)')": [
                        505
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.parquet.hadoop#ParquetOutputFormat', 'getWriteSupport(Configuration)')": [
                        505,
                        506,
                        507
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetReader.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.parquet.hadoop#ParquetReader', None)": [
                        113,
                        185,
                        187,
                        196,
                        203,
                        215
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.parquet.hadoop#ParquetReader', None)": [
                        112,
                        184,
                        186,
                        195,
                        202,
                        214
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetRecordWriter.java": {
                "old": {
                    "(None, None)": [
                        34,
                        35
                    ],
                    "('org.apache.parquet.hadoop#ParquetRecordWriter', None)": [
                        124,
                        155
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.hadoop#ParquetRecordWriter', None)": [
                        123,
                        154
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/api/WriteSupport.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.parquet.hadoop.api#WriteSupport', None)": [
                        53,
                        54,
                        84
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet.hadoop.api#WriteSupport', None)": [
                        49,
                        50,
                        54,
                        55,
                        56,
                        83,
                        84,
                        88,
                        89
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/example/GroupWriteSupport.java": {
                "old": {
                    "(None, None)": [
                        21,
                        29,
                        35
                    ],
                    "('org.apache.parquet.hadoop.example#GroupWriteSupport', 'getSchema(Configuration)')": [
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.parquet.hadoop.example#GroupWriteSupport', 'getSchema(Configuration)')": [
                        44
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/FileMetaData.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.parquet.hadoop.metadata#FileMetaData', None)": [
                        49,
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.parquet.hadoop.metadata#FileMetaData', None)": [
                        46,
                        47,
                        51,
                        52,
                        53
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/GlobalMetaData.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.parquet.hadoop.metadata#GlobalMetaData', None)": [
                        52,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.parquet.hadoop.metadata#GlobalMetaData', None)": [
                        49,
                        50,
                        54,
                        55,
                        56
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/util/HadoopStreams.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet.hadoop.util#HadoopStreams', 'wrap(FSDataInputStream)')": [
                        52
                    ],
                    "('org.apache.parquet.hadoop.util#HadoopStreams', 'wrap(FSDataOutputStream)')": [
                        107
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.parquet.hadoop.util#HadoopStreams', 'wrap(FSDataInputStream)')": [
                        52
                    ],
                    "('org.apache.parquet.hadoop.util#HadoopStreams', 'wrap(FSDataOutputStream)')": [
                        107
                    ]
                }
            },
            "parquet-thrift/src/main/java/org/apache/parquet/thrift/ConvertedField.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.parquet.thrift#ConvertedFieldBase', None)": [
                        57
                    ],
                    "('org.apache.parquet.thrift#Keep', None)": [
                        104
                    ],
                    "('org.apache.parquet.thrift#SentinelUnion', None)": [
                        132
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.parquet.thrift#ConvertedFieldBase', None)": [
                        57
                    ],
                    "('org.apache.parquet.thrift#Keep', None)": [
                        104
                    ],
                    "('org.apache.parquet.thrift#SentinelUnion', None)": [
                        132
                    ]
                }
            },
            "parquet-thrift/src/main/java/org/apache/parquet/thrift/ThriftParquetReader.java": {
                "old": {
                    "(None, None)": [
                        32,
                        33
                    ],
                    "('org.apache.parquet.thrift#ThriftParquetReader', None)": [
                        98,
                        105,
                        110,
                        123
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.parquet.thrift#ThriftParquetReader', None)": [
                        97,
                        104,
                        109,
                        122
                    ]
                }
            },
            "parquet-thrift/src/main/java/org/apache/parquet/thrift/ThriftSchemaConvertVisitor.java": {
                "old": {
                    "(None, None)": [
                        55
                    ],
                    "('org.apache.parquet.thrift#ThriftSchemaConvertVisitor', None)": [
                        80
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.thrift#ThriftSchemaConvertVisitor', None)": [
                        80,
                        81
                    ]
                }
            },
            "parquet-thrift/src/main/java/org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet.thrift.projection.deprecated#DeprecatedFieldProjectionFilter', None)": [
                        62
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.thrift.projection.deprecated#DeprecatedFieldProjectionFilter', None)": [
                        62
                    ]
                }
            }
        }
    },
    "8c1bc9bcdeeac8178fecf61d18dc56913907fd46": {
        "authored_data": "2020 Jan 16 13:31",
        "commit.message": "PARQUET-1765: Invalid filteredRowCount in InternalParquetRecordReader (#747)\n\n",
        "commit.author.name": "Gabor Szadovszky",
        "pcid": "ad07d836e6da9a8ca8e5e1f19af42ad75ece2bb7",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/InternalParquetRecordReader.java": {
                "old": {
                    "('org.apache.parquet.hadoop#InternalParquetRecordReader', 'initialize(ParquetFileReader,ParquetReadOptions)')": [
                        188
                    ],
                    "('org.apache.parquet.hadoop#InternalParquetRecordReader', 'initialize(ParquetFileReader,Configuration)')": [
                        210
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#InternalParquetRecordReader', 'initialize(ParquetFileReader,ParquetReadOptions)')": [
                        183,
                        184,
                        185
                    ],
                    "('org.apache.parquet.hadoop#InternalParquetRecordReader', 'initialize(ParquetFileReader,Configuration)')": [
                        206,
                        207,
                        208
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/filter2/recordlevel/PhoneBookWriter.java": {
                "new": {
                    "('org.apache.parquet.filter2.recordlevel#PhoneBookWriter', None)": [
                        202,
                        203,
                        204,
                        205
                    ],
                    "('org.apache.parquet.filter2.recordlevel#PhoneBookWriter', 'isNull(Group,String)')": [
                        264,
                        265,
                        266,
                        267
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/hadoop/TestColumnIndexFiltering.java": {
                "new": {
                    "(None, None)": [
                        22,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        74,
                        78,
                        79,
                        493
                    ],
                    "('org.apache.parquet.hadoop#TestColumnIndexFiltering', None)": [
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        223,
                        224,
                        477,
                        478
                    ],
                    "('org.apache.parquet.hadoop#TestColumnIndexFiltering', 'readUsersWithProjection(Filter,MessageType,boolean,boolean)')": [
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232
                    ],
                    "('org.apache.parquet.hadoop#TestColumnIndexFiltering', 'testFilteringWithProjection')": [
                        479,
                        480,
                        481,
                        482,
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491,
                        492
                    ]
                }
            }
        }
    },
    "ad07d836e6da9a8ca8e5e1f19af42ad75ece2bb7": {
        "authored_data": "2020 Jan 15 12:00",
        "commit.message": "PARQUET-1738: Remove unused imports (#726)\n\n* PARQUET-1738: Remove unused imports from tests\r\n\r\n* PARQUET-1738: Remove unused imports from column\r\n\r\nCo-authored-by: Fokko Driesprong <fokko@driesprong.frl>\r\n",
        "commit.author.name": "Walid Gara",
        "pcid": "e083fbb53cfd7514183fb2cd59521307a5420a94",
        "changes": {
            "parquet-column/src/test/java/org/apache/parquet/column/values/deltastrings/TestDeltaByteArray.java": {
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/internal/column/columnindex/TestOffsetIndexBuilder.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25
                    ]
                }
            }
        }
    }
}