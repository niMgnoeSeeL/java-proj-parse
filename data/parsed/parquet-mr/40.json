{
    "89102ca80ca6ab20919a55bfd10d9c389112dcb3": {
        "authored_data": "2021 Nov 11 08:12",
        "commit.message": "PARQUET-2102: Fix typo in ColumnIndexBase toString (#937)\n\n",
        "commit.author.name": "Ryan Rupp",
        "pcid": "59e9f78b8b3a30073db202eb6432071ff71df0ec",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/internal/column/columnindex/ColumnIndexBuilder.java": {
                "old": {
                    "('org.apache.parquet.internal.column.columnindex#ColumnIndexBuilder', None)": [
                        170
                    ]
                },
                "new": {
                    "('org.apache.parquet.internal.column.columnindex#ColumnIndexBuilder', None)": [
                        170
                    ]
                }
            }
        }
    },
    "59e9f78b8b3a30073db202eb6432071ff71df0ec": {
        "authored_data": "2021 Nov 02 09:43",
        "commit.message": "PARQUET-2101: Fix wrong descriptions about the default block size (#936)\n\n",
        "commit.author.name": "Kengo Seki",
        "pcid": "1adc22804a700d78f8480667d083e91d6147339f",
        "changes": {
            "parquet-avro/src/main/java/org/apache/parquet/avro/AvroParquetWriter.java": {
                "old": {
                    "('org.apache.parquet.avro#AvroParquetWriter', None)": [
                        90,
                        91
                    ]
                },
                "new": {
                    "('org.apache.parquet.avro#AvroParquetWriter', None)": [
                        90,
                        91
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetWriter.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ParquetWriter', None)": [
                        240,
                        241
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ParquetWriter', None)": [
                        240,
                        241
                    ]
                }
            },
            "parquet-protobuf/src/main/java/org/apache/parquet/proto/ProtoParquetWriter.java": {
                "old": {
                    "('org.apache.parquet.proto#ProtoParquetWriter', None)": [
                        80,
                        81
                    ]
                },
                "new": {
                    "('org.apache.parquet.proto#ProtoParquetWriter', None)": [
                        80,
                        81
                    ]
                }
            }
        }
    },
    "1adc22804a700d78f8480667d083e91d6147339f": {
        "authored_data": "2021 Oct 04 21:04",
        "commit.message": "PARQUET-2081: Encryption translation tool - Parquet-hadoop (#928)\n\n* PARQUET-2081: Encryption translation tool - Parquet-hadoop\r\n\r\nSummary:\r\nDesign doc - High Throughput CLAC Writer: https://docs.google.com/document/d/1-XdE8-QyDHnBsYrClwNsR8X3ks0JmKJ1-rXq7_th0hc\r\n\r\nAdded unit tests\r\n\r\nIntegration tests with real data\r\n\r\n* Address feedbacks\r\n\r\n* Address more comments\r\n\r\n* Revert the refactoring code to avoid execlusion in public api check\r\n\r\n* Address more feedbbacks\r\n\r\n* Refactor the code to have rewrite offset index always\r\n\r\n* Rename methods to reflect the change better\r\n\r\n* Use 'encrypt' flag to create different encrytion runtime\r\nAdd checking of encrypted column\r\n\r\n* Address comments\r\n\r\n* Address more comments",
        "commit.author.name": "Xinli Shang",
        "pcid": "1695d92cc07288713a9f2230f3aac61e2dc6a8e4",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/internal/column/columnindex/OffsetIndexBuilder.java": {
                "old": {
                    "('org.apache.parquet.internal.column.columnindex#OffsetIndexBuilder', None)": [
                        68,
                        158,
                        159
                    ],
                    "('org.apache.parquet.internal.column.columnindex#OffsetIndexBuilder', 'build(long)')": [
                        162,
                        167,
                        169
                    ]
                },
                "new": {
                    "('org.apache.parquet.internal.column.columnindex#OffsetIndexBuilder', None)": [
                        68,
                        166,
                        167,
                        172,
                        173
                    ],
                    "('org.apache.parquet.internal.column.columnindex#OffsetIndexBuilder', 'fromOffsetIndex(OffsetIndex)')": [
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165
                    ],
                    "('org.apache.parquet.internal.column.columnindex#OffsetIndexBuilder', 'build(long)')": [
                        176,
                        181,
                        183
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/crypto/ColumnEncryptionProperties.java": {
                "old": {
                    "('org.apache.parquet.crypto#ColumnEncryptionProperties', 'builder(ColumnPath,boolean)')": [
                        89
                    ]
                },
                "new": {
                    "('org.apache.parquet.crypto#ColumnEncryptionProperties', None)": [
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97
                    ],
                    "('org.apache.parquet.crypto#ColumnEncryptionProperties', 'builder(ColumnPath,boolean)')": [
                        98
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/format/converter/ParquetMetadataConverter.java": {
                "old": {
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'writeDataPageV1Header(int,int,int,org,org,org,OutputStream,BlockCipher,byte)')": [
                        1794,
                        1801
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'writeDataPageV1Header(int,int,int,org,org,org,int,OutputStream,BlockCipher,byte)')": [
                        1827,
                        1835
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'writeDataPageV2Header(int,int,int,int,int,org,int,int,OutputStream,BlockCipher,byte)')": [
                        1855,
                        1861
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'writeDictionaryPageHeader(int,int,int,org,OutputStream,BlockCipher,byte)')": [
                        1889,
                        1892
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'writeDictionaryPageHeader(int,int,int,org,int,OutputStream,BlockCipher,byte)')": [
                        1905,
                        1909
                    ]
                },
                "new": {
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'writeDataPageV1Header(int,int,int,org,org,org,OutputStream,BlockCipher,byte)')": [
                        1794,
                        1801
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'writeDataPageV1Header(int,int,int,org,org,org,int,OutputStream,BlockCipher,byte)')": [
                        1827,
                        1835
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'writeDataPageV2Header(int,int,int,int,int,org,int,int,OutputStream,BlockCipher,byte)')": [
                        1855,
                        1861
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'writeDictionaryPageHeader(int,int,int,org,OutputStream,BlockCipher,byte)')": [
                        1889,
                        1892
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'writeDictionaryPageHeader(int,int,int,org,int,OutputStream,BlockCipher,byte)')": [
                        1905,
                        1909
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileReader.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ParquetFileReader', 'readFooter(InputFile,ParquetReadOptions,SeekableInputStream)')": [
                        526
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ParquetFileReader', 'readFooter(InputFile,ParquetReadOptions,SeekableInputStream)')": [
                        526
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'getEncryptor')": [
                        397
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'writeDataPage(int,int,BytesInput,Statistics,Encoding,Encoding,Encoding)')": [
                        566
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'writeDataPage(int,int,BytesInput,Statistics,long,Encoding,Encoding,Encoding)')": [
                        588,
                        590,
                        591
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'innerWriteDataPage(int,int,BytesInput,Statistics,Encoding,Encoding,Encoding)')": [
                        601,
                        619,
                        627
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'getEncryptor')": [
                        397
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'writeDataPage(int,int,BytesInput,Statistics,Encoding,Encoding,Encoding)')": [
                        566
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'writeDataPage(int,int,BytesInput,Statistics,long,Encoding,Encoding,Encoding)')": [
                        582,
                        583,
                        584,
                        585,
                        586,
                        587,
                        588,
                        589
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', None)": [
                        590,
                        591,
                        592,
                        593,
                        594,
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        631,
                        632,
                        633,
                        634,
                        635,
                        636,
                        637,
                        638,
                        639,
                        640,
                        641,
                        642,
                        643,
                        644,
                        645
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'writeDataPage(int,int,BytesInput,Statistics,long,Encoding,Encoding,Encoding,BlockCipher,byte)')": [
                        606,
                        613,
                        614,
                        615,
                        617
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'innerWriteDataPage(int,int,BytesInput,Statistics,Encoding,Encoding,Encoding,BlockCipher,byte)')": [
                        627,
                        628,
                        629,
                        630
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'writeDataPage(int,int,BytesInput,Statistics,Encoding,Encoding,Encoding,BlockCipher,byte)')": [
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        672,
                        673,
                        674,
                        682,
                        683,
                        684
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'appendColumnChunk(ColumnDescriptor,SeekableInputStream,ColumnChunkMetaData,BloomFilter,ColumnIndex,OffsetIndex)')": [
                        1094,
                        1095,
                        1096,
                        1097,
                        1098,
                        1099
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/ColumnChunkMetaData.java": {
                "old": {
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkMetaData', 'get(ColumnPath,PrimitiveTypeName,CompressionCodecName,EncodingStats,Set,Statistics,long,long,long,long,long)')": [
                        115
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkMetaData', None)": [
                        160,
                        362
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkMetaData', 'getWithEncryptedMetadata(ParquetMetadataConverter,ColumnPath,PrimitiveType,byte,byte,InternalFileDecryptor,int,int,String)')": [
                        165,
                        167
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkMetaData', 'hasDictionaryPage')": [
                        363
                    ],
                    "('org.apache.parquet.hadoop.metadata#EncryptedColumnChunkMetaData', None)": [
                        570,
                        580
                    ],
                    "('org.apache.parquet.hadoop.metadata#EncryptedColumnChunkMetaData', 'decryptIfNeeded')": [
                        606,
                        608,
                        611
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkMetaData', 'get(ColumnPath,PrimitiveTypeName,CompressionCodecName,EncodingStats,Set,Statistics,long,long,long,long,long)')": [
                        115
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkMetaData', None)": [
                        160,
                        362,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkMetaData', 'getWithEncryptedMetadata(ParquetMetadataConverter,ColumnPath,PrimitiveType,byte,byte,InternalFileDecryptor,int,int,String)')": [
                        165,
                        167
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkMetaData', 'hasDictionaryPage')": [
                        363
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkMetaData', 'isEncrypted')": [
                        378,
                        379
                    ],
                    "('org.apache.parquet.hadoop.metadata#EncryptedColumnChunkMetaData', None)": [
                        578,
                        588,
                        675,
                        676,
                        677,
                        678,
                        679
                    ],
                    "('org.apache.parquet.hadoop.metadata#EncryptedColumnChunkMetaData', 'decryptIfNeeded')": [
                        614,
                        616,
                        619
                    ],
                    "('org.apache.parquet.hadoop.metadata#EncryptedColumnChunkMetaData', 'isEncrypted')": [
                        680,
                        681
                    ],
                    "(None, None)": [
                        682
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/util/ColumnMasker.java": {
                "old": {
                    "('org.apache.parquet.hadoop.util#ColumnMasker', 'nullifyColumn(ColumnDescriptor,ColumnChunkMetaData,ColumnReadStoreImpl,ParquetFileWriter,MessageType)')": [
                        126
                    ],
                    "('org.apache.parquet.hadoop.util#ColumnMasker', None)": [
                        157
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop.util#ColumnMasker', 'nullifyColumn(ColumnDescriptor,ColumnChunkMetaData,ColumnReadStoreImpl,ParquetFileWriter,MessageType)')": [
                        126
                    ],
                    "('org.apache.parquet.hadoop.util#ColumnMasker', None)": [
                        157
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/util/H2SeekableInputStream.java": {
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/hadoop/util/CompressionConveterTest.java": {
                "old": {
                    "(None, None)": [
                        25,
                        27,
                        30,
                        33,
                        49,
                        50,
                        51
                    ]
                }
            }
        }
    },
    "1695d92cc07288713a9f2230f3aac61e2dc6a8e4": {
        "authored_data": "2021 Sep 30 08:07",
        "commit.message": "PARQUET-2094: Handle negative values in page headers (#933)\n\n",
        "commit.author.name": "Gabor Szadovszky",
        "pcid": "98e3e1a770993903fbe37c8ac61321c8832d833f",
        "changes": {
            "parquet-format-structures/src/main/java/org/apache/parquet/format/Util.java": {
                "old": {
                    "('org.apache.parquet.format#Util', 'readPageHeader(InputStream,BlockCipher,byte)')": [
                        133
                    ]
                },
                "new": {
                    "('org.apache.parquet.format#Util', 'readPageHeader(InputStream,BlockCipher,byte)')": [
                        133
                    ]
                }
            },
            "parquet-format-structures/src/test/java/org/apache/parquet/format/TestUtil.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        31,
                        34
                    ],
                    "('org.apache.parquet.format#TestUtil', None)": [
                        83,
                        95,
                        96,
                        97
                    ],
                    "('org.apache.parquet.format#TestUtil', 'testInvalidPageHeader')": [
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94
                    ]
                }
            }
        }
    },
    "98e3e1a770993903fbe37c8ac61321c8832d833f": {
        "authored_data": "2021 Sep 30 07:32",
        "commit.message": "PARQUET-1968: FilterApi support In predicate (#923)\n\n",
        "commit.author.name": "Huaxin Gao",
        "pcid": "455ebe40090af65294c12aa3ef3b3be9f6d143ef",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/filter2/predicate/FilterApi.java": {
                "new": {
                    "(None, None)": [
                        22,
                        34,
                        41
                    ],
                    "('org.apache.parquet.filter2.predicate#FilterApi', None)": [
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        258,
                        259,
                        260
                    ],
                    "('org.apache.parquet.filter2.predicate#FilterApi', 'in(C,Set)')": [
                        231,
                        232
                    ],
                    "('org.apache.parquet.filter2.predicate#FilterApi', 'notIn(C,Set)')": [
                        256,
                        257
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/predicate/FilterPredicate.java": {
                "new": {
                    "(None, None)": [
                        25,
                        31,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/predicate/LogicalInverseRewriter.java": {
                "new": {
                    "(None, None)": [
                        26,
                        32
                    ],
                    "('org.apache.parquet.filter2.predicate#LogicalInverseRewriter', 'visit(In)')": [
                        93,
                        94
                    ],
                    "('org.apache.parquet.filter2.predicate#LogicalInverseRewriter', None)": [
                        95,
                        96,
                        97,
                        100,
                        101,
                        102
                    ],
                    "('org.apache.parquet.filter2.predicate#LogicalInverseRewriter', 'visit(NotIn)')": [
                        98,
                        99
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/predicate/LogicalInverter.java": {
                "new": {
                    "(None, None)": [
                        26,
                        32
                    ],
                    "('org.apache.parquet.filter2.predicate#LogicalInverter', 'visit(In)')": [
                        87,
                        88
                    ],
                    "('org.apache.parquet.filter2.predicate#LogicalInverter', None)": [
                        89,
                        90,
                        91,
                        94,
                        95,
                        96
                    ],
                    "('org.apache.parquet.filter2.predicate#LogicalInverter', 'visit(NotIn)')": [
                        92,
                        93
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/predicate/Operators.java": {
                "old": {
                    "('org.apache.parquet.filter2.predicate#Operators', None)": [
                        172
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        28,
                        29
                    ],
                    "('org.apache.parquet.filter2.predicate#Operators', None)": [
                        175,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/predicate/SchemaCompatibilityValidator.java": {
                "new": {
                    "(None, None)": [
                        32,
                        38,
                        40
                    ],
                    "('org.apache.parquet.filter2.predicate#SchemaCompatibilityValidator', 'visit(In)')": [
                        121,
                        122,
                        123
                    ],
                    "('org.apache.parquet.filter2.predicate#SchemaCompatibilityValidator', None)": [
                        124,
                        125,
                        126,
                        130,
                        131,
                        132,
                        165,
                        166
                    ],
                    "('org.apache.parquet.filter2.predicate#SchemaCompatibilityValidator', 'visit(NotIn)')": [
                        127,
                        128,
                        129
                    ],
                    "('org.apache.parquet.filter2.predicate#SchemaCompatibilityValidator', 'validateColumnFilterPredicate(ColumnFilterPredicate)')": [
                        164
                    ],
                    "('org.apache.parquet.filter2.predicate#SchemaCompatibilityValidator', 'validateColumnFilterPredicate(SetColumnFilterPredicate)')": [
                        167
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/internal/column/columnindex/ColumnIndexBuilder.java": {
                "new": {
                    "(None, None)": [
                        26,
                        29,
                        30,
                        33,
                        39,
                        45,
                        47
                    ],
                    "('org.apache.parquet.internal.column.columnindex#ColumnIndexBuilder', None)": [
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/internal/filter2/columnindex/ColumnIndexFilter.java": {
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.parquet.internal.filter2.columnindex#ColumnIndexFilter', 'visit(Operators)')": [
                        151,
                        152,
                        153,
                        157,
                        158,
                        159
                    ],
                    "('org.apache.parquet.internal.filter2.columnindex#ColumnIndexFilter', None)": [
                        154,
                        155,
                        156,
                        160,
                        161,
                        162
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/internal/column/columnindex/TestColumnIndexBuilder.java": {
                "new": {
                    "(None, None)": [
                        29,
                        35,
                        60,
                        62
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildBinaryDecimal')": [
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildBinaryUtf8')": [
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testFilterWithoutNullCounts')": [
                        664,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildBoolean')": [
                        702,
                        703,
                        704,
                        705,
                        706,
                        707,
                        708,
                        733,
                        734,
                        735,
                        736,
                        737,
                        738,
                        739,
                        764,
                        765,
                        766,
                        767,
                        768,
                        769,
                        770
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildDouble')": [
                        818,
                        819,
                        820,
                        821,
                        822,
                        823,
                        824,
                        825,
                        856,
                        857,
                        858,
                        859,
                        860,
                        861,
                        862,
                        863,
                        864,
                        895,
                        896,
                        897,
                        898,
                        899,
                        900,
                        901
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildFloat')": [
                        972,
                        973,
                        974,
                        975,
                        976,
                        977,
                        978,
                        1009,
                        1010,
                        1011,
                        1012,
                        1013,
                        1014,
                        1015,
                        1046,
                        1047,
                        1048,
                        1049,
                        1050,
                        1051,
                        1052
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildInt32')": [
                        1123,
                        1124,
                        1125,
                        1126,
                        1127,
                        1128,
                        1129,
                        1160,
                        1161,
                        1162,
                        1163,
                        1164,
                        1165,
                        1166,
                        1198,
                        1199,
                        1200,
                        1201,
                        1202,
                        1203,
                        1204
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildUInt8')": [
                        1257,
                        1258,
                        1259,
                        1260,
                        1261,
                        1262,
                        1263,
                        1294,
                        1295,
                        1296,
                        1297,
                        1298,
                        1299,
                        1300,
                        1332,
                        1333,
                        1334,
                        1335,
                        1336,
                        1337,
                        1338
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildInt64')": [
                        1375,
                        1376,
                        1377,
                        1378,
                        1379,
                        1380,
                        1381,
                        1412,
                        1413,
                        1414,
                        1415,
                        1416,
                        1417,
                        1418,
                        1450,
                        1451,
                        1452,
                        1453,
                        1454,
                        1455,
                        1456
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/internal/filter2/columnindex/TestColumnIndexFilter.java": {
                "new": {
                    "(None, None)": [
                        29,
                        35,
                        73
                    ],
                    "('org.apache.parquet.internal.filter2.columnindex#TestColumnIndexFilter', 'testFiltering')": [
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417
                    ]
                }
            },
            "parquet-generator/src/main/java/org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator.java": {
                "new": {
                    "('org.apache.parquet.filter2#IncrementallyUpdatedFilterPredicateGenerator', 'run')": [
                        70,
                        76,
                        81,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123
                    ],
                    "('org.apache.parquet.filter2#IncrementallyUpdatedFilterPredicateGenerator', 'addInNotInCase(TypeInfo,boolean)')": [
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297
                    ],
                    "('org.apache.parquet.filter2#IncrementallyUpdatedFilterPredicateGenerator', None)": [
                        298,
                        299,
                        300
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/filter2/bloomfilterlevel/BloomFilterImpl.java": {
                "new": {
                    "(None, None)": [
                        25,
                        26
                    ],
                    "('org.apache.parquet.filter2.bloomfilterlevel#BloomFilterImpl', 'visit(Operators)')": [
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        154,
                        155
                    ],
                    "('org.apache.parquet.filter2.bloomfilterlevel#BloomFilterImpl', None)": [
                        151,
                        152,
                        153,
                        156,
                        157,
                        158
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/filter2/dictionarylevel/DictionaryFilter.java": {
                "new": {
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'visit(In)')": [
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', None)": [
                        401,
                        402,
                        423,
                        424,
                        425,
                        467,
                        468,
                        469
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'drop(Set,Set)')": [
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'visit(NotIn)')": [
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/filter2/statisticslevel/StatisticsFilter.java": {
                "new": {
                    "(None, None)": [
                        25,
                        35,
                        41,
                        46
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'visit(In)')": [
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', None)": [
                        208,
                        209,
                        210,
                        211,
                        214,
                        215,
                        216,
                        217
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'visit(NotIn)')": [
                        212,
                        213
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/filter2/TestFiltersWithMissingColumns.java": {
                "new": {
                    "(None, None)": [
                        40,
                        41,
                        49,
                        54
                    ],
                    "('org.apache.parquet.filter2#TestFiltersWithMissingColumns', 'testSimpleMissingColumnFilter')": [
                        105,
                        106,
                        107,
                        108,
                        109,
                        110
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/filter2/compat/TestRowGroupFilter.java": {
                "old": {
                    "('org.apache.parquet.filter2.compat#TestRowGroupFilter', 'testApplyRowGroupFilters')": [
                        86
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        37,
                        40
                    ],
                    "('org.apache.parquet.filter2.compat#TestRowGroupFilter', 'testApplyRowGroupFilters')": [
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest.java": {
                "new": {
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilterTest', 'testInBinary')": [
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilterTest', None)": [
                        507,
                        508,
                        509,
                        544,
                        545,
                        546,
                        581,
                        582,
                        583
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilterTest', 'testInFixed')": [
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilterTest', 'testInInt96')": [
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558,
                        559,
                        560,
                        561,
                        562,
                        563,
                        564,
                        565,
                        566,
                        567,
                        568,
                        569,
                        570,
                        571,
                        572,
                        573,
                        574,
                        575,
                        576,
                        577,
                        578,
                        579,
                        580
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/filter2/recordlevel/TestRecordLevelFilters.java": {
                "old": {
                    "('org.apache.parquet.filter2.recordlevel#TestRecordLevelFilters', 'testUserDefinedByInstance')": [
                        235
                    ]
                },
                "new": {
                    "(None, None)": [
                        53
                    ],
                    "('org.apache.parquet.filter2.recordlevel#TestRecordLevelFilters', 'testInFilter')": [
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180
                    ],
                    "('org.apache.parquet.filter2.recordlevel#TestRecordLevelFilters', None)": [
                        181,
                        182,
                        183
                    ],
                    "('org.apache.parquet.filter2.recordlevel#TestRecordLevelFilters', 'testUserDefinedByInstance')": [
                        269
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/filter2/statisticslevel/TestStatisticsFilter.java": {
                "new": {
                    "(None, None)": [
                        24,
                        41,
                        56,
                        62
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#TestStatisticsFilter', 'testInNotIn')": [
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#TestStatisticsFilter', None)": [
                        370,
                        371,
                        372
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/hadoop/TestBloomFiltering.java": {
                "new": {
                    "(None, None)": [
                        51,
                        56
                    ],
                    "('org.apache.parquet.hadoop#TestBloomFiltering', 'testSimpleFiltering')": [
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/hadoop/TestColumnIndexFiltering.java": {
                "new": {
                    "(None, None)": [
                        28,
                        57,
                        62
                    ],
                    "('org.apache.parquet.hadoop#TestColumnIndexFiltering', 'testSimpleFiltering')": [
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424
                    ]
                }
            }
        }
    },
    "cac8d5a7732c768b814f448413d5ac58e13a4ac3": {
        "authored_data": "2021 Sep 14 09:46",
        "commit.message": "PARQUET-2083: Expose getFieldPath from ColumnIO (#926)\n\n",
        "commit.author.name": "Chao Sun",
        "pcid": "5f403501e9de05b6aa48f028191b4e78bb97fb12",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/io/ColumnIO.java": {
                "old": {
                    "('org.apache.parquet.io#ColumnIO', 'getFieldPath')": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.parquet.io#ColumnIO', 'getFieldPath')": [
                        50
                    ]
                }
            }
        }
    },
    "5f403501e9de05b6aa48f028191b4e78bb97fb12": {
        "authored_data": "2021 Sep 09 18:17",
        "commit.message": "PARQUET-2078: Failed to read parquet file after writing with the same \u2026 (#925)\n\n* PARQUET-2078 Failed to read parquet file after writing with the same parquet version\r\n\r\n* PARQUET-2078 Failed to read parquet file after writing with the same parquet version\r\n\r\nRead path fix that make usage of this information:\r\nRowGroup[n].file_offset = RowGroup[n-1].file_offset + RowGroup[n-1].total_compressed_size\r\n\r\n* PARQUET-2078 Failed to read parquet file after writing with the same parquet version\r\n\r\naddressing review comments: more check on writer side.\r\n\r\n* PARQUET-2078 Failed to read parquet file after writing with the same parquet version\r\n\r\ntaking alignment padding and sumarry file into account\r\n\r\n* PARQUET-2078 Failed to read parquet file after writing with the same parquet version\r\n\r\nonly throw exception when: 1.footer(first column of block meta) encrypted and 2.file_offset corrupted\r\n\r\n* PARQUET-2078 Failed to read parquet file after writing with the same parquet version\r\n\r\nonly check firstColumnChunk.isSetMeta_data() for the first block\r\n\r\n* PARQUET-2078 Failed to read parquet file after writing with the same parquet version\r\n\r\naddress review comments: empty lines\r\n\r\n* PARQUET-2078 Failed to read parquet file after writing with the same parquet version\r\n\r\ncheck first rowgroup's file_offset too(SPARK-36696)\r\n\r\n* PARQUET-2078 Failed to read parquet file after writing with the same parquet version\r\n\r\nUsing Preconditions.checkState instead of assert in write path\r\nremove summary file footers case check in read path(which will never happen)\r\n\r\n* PARQUET-2078 Failed to read parquet file after writing with the same parquet version\r\n\r\nmore special case for first row group",
        "commit.author.name": "loudongfeng",
        "pcid": "5154d04f1ccc21811c0668bf68cfd19f91100907",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/format/converter/ParquetMetadataConverter.java": {
                "old": {
                    "(None, None)": [
                        125
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'filterFileMetaDataByMidpoint(FileMetaData,RangeMetadataFilter)')": [
                        1232,
                        1233,
                        1235,
                        1236
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'filterFileMetaDataByStart(FileMetaData,OffsetMetadataFilter)')": [
                        1263,
                        1265,
                        1266
                    ]
                },
                "new": {
                    "(None, None)": [
                        48,
                        123
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'toParquetMetadata(int,ParquetMetadata,InternalFileEncryptor)')": [
                        205,
                        206,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'filterFileMetaDataByMidpoint(FileMetaData,RangeMetadataFilter)')": [
                        1244,
                        1245,
                        1246,
                        1247,
                        1248,
                        1249,
                        1253,
                        1254,
                        1255,
                        1256,
                        1257,
                        1258,
                        1259,
                        1260,
                        1261,
                        1263,
                        1264,
                        1265,
                        1266,
                        1267,
                        1268,
                        1269,
                        1270,
                        1271,
                        1272,
                        1273
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'invalidFileOffset(long,long,long)')": [
                        1294,
                        1295,
                        1296,
                        1297,
                        1298,
                        1299,
                        1300,
                        1301,
                        1302,
                        1303,
                        1304,
                        1305,
                        1306,
                        1307,
                        1308,
                        1309,
                        1310,
                        1311
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', None)": [
                        1312,
                        1313
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'filterFileMetaDataByStart(FileMetaData,OffsetMetadataFilter)')": [
                        1318,
                        1319,
                        1320,
                        1321,
                        1322,
                        1323,
                        1326,
                        1327,
                        1328,
                        1329,
                        1330,
                        1331,
                        1332,
                        1333,
                        1334,
                        1336,
                        1337,
                        1338,
                        1339,
                        1340,
                        1341,
                        1342,
                        1343,
                        1344,
                        1345,
                        1346
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java": {
                "new": {
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'endColumn')": [
                        855
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/hadoop/TestParquetFileWriter.java": {
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        28,
                        29,
                        37,
                        38,
                        76,
                        85
                    ],
                    "('org.apache.parquet.hadoop#TestParquetFileWriter', None)": [
                        248,
                        249,
                        250
                    ],
                    "('org.apache.parquet.hadoop#TestParquetFileWriter', 'testWriteReadWithRecordReader')": [
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322
                    ]
                }
            }
        }
    },
    "5154d04f1ccc21811c0668bf68cfd19f91100907": {
        "authored_data": "2021 Aug 16 09:23",
        "commit.message": "PARQUET-2073: Fix estimate remaining row count in ColumnWriteStoreBase. (#922)\n\n",
        "commit.author.name": "Jiang Yang",
        "pcid": "cc1ae9f857920cf6982a59b3fd389277877fbb9e",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/column/impl/ColumnWriteStoreBase.java": {
                "old": {
                    "('org.apache.parquet.column.impl#ColumnWriteStoreBase', 'sizeCheck')": [
                        243
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.impl#ColumnWriteStoreBase', 'sizeCheck')": [
                        240,
                        244
                    ]
                }
            }
        }
    }
}