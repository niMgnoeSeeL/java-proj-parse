{
    "a2da156b251d13bce1fa81eb95b555da04880bc1": {
        "authored_data": "2022 May 18 15:50",
        "commit.message": "PARQUET-2148: Enable uniform decryption with plaintext footer (#969)\n\n* fix uniform decryption with plaintext footer\r\n\r\n* fix CI failure\r\n\r\nCo-authored-by: Gidon Gershinsky <ggershinsky@apple.com>",
        "commit.author.name": "ggershinsky",
        "pcid": "dd43e6f8e1a8c1ef95ac1bb47ddc411435abeb58",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/crypto/InternalFileDecryptor.java": {
                "old": {
                    "('org.apache.parquet.crypto#InternalFileDecryptor', 'fetchFooterDecryptor')": [
                        105,
                        106,
                        107
                    ],
                    "('org.apache.parquet.crypto#InternalFileDecryptor', 'setFileCryptoMetaData(EncryptionAlgorithm,boolean,byte)')": [
                        112,
                        201
                    ],
                    "('org.apache.parquet.crypto#InternalFileDecryptor', 'setColumnCryptoMetadata(ColumnPath,boolean,boolean,byte,int)')": [
                        219,
                        249,
                        268
                    ]
                },
                "new": {
                    "('org.apache.parquet.crypto#InternalFileDecryptor', 'setFileCryptoMetaData(EncryptionAlgorithm,boolean,byte)')": [
                        109,
                        198
                    ],
                    "('org.apache.parquet.crypto#InternalFileDecryptor', 'setColumnCryptoMetadata(ColumnPath,boolean,boolean,byte,int)')": [
                        216,
                        246,
                        265
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/format/converter/ParquetMetadataConverter.java": {
                "old": {
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'addRowGroup(ParquetMetadata,List,BlockMetaData,InternalFileEncryptor)')": [
                        566
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'fromParquetMetadata(FileMetaData,InternalFileDecryptor,boolean,Map)')": [
                        1548,
                        1559,
                        1560,
                        1565,
                        1566,
                        1568,
                        1572,
                        1577
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        29
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'addRowGroup(ParquetMetadata,List,BlockMetaData,InternalFileEncryptor)')": [
                        568
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'fromParquetMetadata(FileMetaData,InternalFileDecryptor,boolean,Map)')": [
                        1550,
                        1561,
                        1562,
                        1567,
                        1568,
                        1569,
                        1570,
                        1571,
                        1572,
                        1573,
                        1574,
                        1575,
                        1576,
                        1581,
                        1586
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/hadoop/TestEncryptionOptions.java": {
                "new": {
                    "(None, None)": [
                        96,
                        97
                    ],
                    "('org.apache.parquet.hadoop#TestEncryptionOptions', None)": [
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255
                    ],
                    "('org.apache.parquet.hadoop#TestEncryptionOptions', 'downloadInteropFiles(Path,boolean,OkHttpClient)')": [
                        471,
                        472,
                        473
                    ],
                    "('org.apache.parquet.hadoop#TestEncryptionOptions', 'testInteropReadEncryptedParquetFiles(Path,boolean,List)')": [
                        498,
                        499,
                        500
                    ]
                }
            }
        }
    },
    "f2f7c3ec8b22cbd119689ab321cafb659ccc59ec": {
        "authored_data": "2022 May 09 12:04",
        "commit.message": "Fix ColumnIndexBuilder for notIn predicate (#961)\n\n",
        "commit.author.name": "Huaxin Gao",
        "pcid": "fb3a9051a62acc65b20ec58f383a67566d76cc3d",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/internal/column/columnindex/ColumnIndexBuilder.java": {
                "old": {
                    "('org.apache.parquet.internal.column.columnindex#ColumnIndexBuilder', None)": [
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357
                    ]
                },
                "new": {
                    "('org.apache.parquet.internal.column.columnindex#ColumnIndexBuilder', None)": [
                        347
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/internal/column/columnindex/TestColumnIndexBuilder.java": {
                "old": {
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildBinaryDecimal')": [
                        284,
                        287,
                        336,
                        339,
                        388,
                        391
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildBinaryUtf8')": [
                        448,
                        451,
                        500,
                        503,
                        552,
                        555
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testFilterWithoutNullCounts')": [
                        667,
                        670
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildBoolean')": [
                        705,
                        708,
                        736,
                        739,
                        767,
                        770
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildDouble')": [
                        822,
                        825,
                        861,
                        864,
                        898,
                        901
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildFloat')": [
                        975,
                        978,
                        1012,
                        1015,
                        1049,
                        1052
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildInt32')": [
                        1126,
                        1129,
                        1163,
                        1166,
                        1201,
                        1204
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildUInt8')": [
                        1260,
                        1263,
                        1297,
                        1300,
                        1335,
                        1338
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildInt64')": [
                        1378,
                        1381,
                        1415,
                        1418,
                        1453,
                        1456
                    ]
                },
                "new": {
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildBinaryDecimal')": [
                        284,
                        287,
                        336,
                        339,
                        388,
                        391
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildBinaryUtf8')": [
                        448,
                        451,
                        500,
                        503,
                        552,
                        555
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testFilterWithoutNullCounts')": [
                        667,
                        670
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildBoolean')": [
                        705,
                        708,
                        736,
                        739,
                        767,
                        770
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildDouble')": [
                        822,
                        825,
                        861,
                        864,
                        898,
                        901
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildFloat')": [
                        975,
                        978,
                        1012,
                        1015,
                        1049,
                        1052
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildInt32')": [
                        1126,
                        1129,
                        1163,
                        1166,
                        1201,
                        1204
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildUInt8')": [
                        1260,
                        1263,
                        1297,
                        1300,
                        1335,
                        1338
                    ],
                    "('org.apache.parquet.internal.column.columnindex#TestColumnIndexBuilder', 'testBuildInt64')": [
                        1378,
                        1381,
                        1415,
                        1418,
                        1453,
                        1456
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/internal/filter2/columnindex/TestColumnIndexFilter.java": {
                "old": {
                    "('org.apache.parquet.internal.filter2.columnindex#TestColumnIndexFilter', 'testFiltering')": [
                        375,
                        383,
                        390,
                        395,
                        400
                    ]
                },
                "new": {
                    "('org.apache.parquet.internal.filter2.columnindex#TestColumnIndexFilter', 'testFiltering')": [
                        375,
                        383,
                        390,
                        395,
                        400
                    ]
                }
            }
        }
    },
    "fb3a9051a62acc65b20ec58f383a67566d76cc3d": {
        "authored_data": "2022 Apr 14 16:08",
        "commit.message": "writer constructor with encryptor (#954)\n\nCo-authored-by: Gidon Gershinsky <ggershinsky@apple.com>",
        "commit.author.name": "ggershinsky",
        "pcid": "4d7df6421179ede777d724f005ff66841b03e658",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/crypto/InternalFileEncryptor.java": {
                "old": {
                    "('org.apache.parquet.crypto#InternalFileEncryptor', 'getColumnSetup(ColumnPath,boolean,int)')": [
                        87,
                        93,
                        116
                    ],
                    "('org.apache.parquet.crypto#InternalFileEncryptor', 'fileEncryptorLog')": [
                        193
                    ]
                },
                "new": {
                    "('org.apache.parquet.crypto#InternalFileEncryptor', 'getColumnSetup(ColumnPath,boolean,int)')": [
                        87,
                        93,
                        116
                    ],
                    "('org.apache.parquet.crypto#InternalFileEncryptor', None)": [
                        180,
                        181
                    ],
                    "('org.apache.parquet.crypto#InternalFileEncryptor', 'getEncryptionProperties')": [
                        182,
                        183
                    ],
                    "('org.apache.parquet.crypto#InternalFileEncryptor', 'fileEncryptorLog')": [
                        197
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ParquetFileWriter', None)": [
                        306,
                        340,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ParquetFileWriter', None)": [
                        306,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        357,
                        358,
                        359,
                        360,
                        361,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        380
                    ]
                }
            }
        }
    },
    "c7bff519094920a8609df6cbd98821a43ed779e3": {
        "authored_data": "2022 Mar 20 00:00",
        "commit.message": "PARQUET-2117: Expose Row Index via ParquetReader and ParquetRecordReader (#945)\n\n* PARQUET-2117: Changes to generate row index in InternalParquetRecordReader, also expose the row index via ParquetReader or ParquetRecordReader\r\n\r\n - Add and populate rowIndexOffset field in BlockMetaData\r\n - Changes to generate row index in InternalParquetRecordReader, also expose the row index via ParquetReader or ParquetRecordReader\r\n - Add new unit tests and extend all the ColumnIndexFiltering and BloomFiltering unit tests to validate row indexes also.\r\n\r\n* address review comments\r\n\r\n* add test based on old parquet file without column indexes\r\n\r\n* address review comments - Return -1 when row index info not available, document the same, Return -1 when rowIndexOffset info not available in BlockMetadata\r\n\r\n* address review comments - Fix java doc style\r\n\r\n* address review comments from ggershinsky - early return and reduce indentation\r\n\r\n* fix build",
        "commit.author.name": "Prakhar Jain",
        "pcid": "4d062dc37577e719dcecc666f8e837843e44a9be",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/column/page/PageReadStore.java": {
                "new": {
                    "(None, None)": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/format/converter/ParquetMetadataConverter.java": {
                "old": {
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'readParquetMetadata(InputStream,MetadataFilter,InternalFileDecryptor,boolean,int)')": [
                        1410,
                        1412,
                        1413,
                        1417,
                        1418,
                        1422,
                        1423,
                        1427,
                        1428,
                        1450
                    ]
                },
                "new": {
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'generateRowGroupOffsets(FileMetaData)')": [
                        1403,
                        1404,
                        1405,
                        1406,
                        1407,
                        1408,
                        1409,
                        1410,
                        1411,
                        1412,
                        1413
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', None)": [
                        1414,
                        1415,
                        1416,
                        1417,
                        1418,
                        1419,
                        1420,
                        1421,
                        1422,
                        1423,
                        1424,
                        1425,
                        1426,
                        1427,
                        1513,
                        1514
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'readParquetMetadata(InputStream,MetadataFilter,InternalFileDecryptor,boolean,int)')": [
                        1435,
                        1437,
                        1438,
                        1439,
                        1443,
                        1444,
                        1445,
                        1449,
                        1450,
                        1451,
                        1452,
                        1456,
                        1457,
                        1458,
                        1459,
                        1462,
                        1463,
                        1483
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'fromParquetMetadata(FileMetaData,InternalFileDecryptor,boolean)')": [
                        1512
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'fromParquetMetadata(FileMetaData,InternalFileDecryptor,boolean,Map)')": [
                        1515,
                        1516,
                        1517,
                        1518,
                        1528,
                        1529,
                        1530
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ColumnChunkPageReadStore.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ColumnChunkPageReadStore', None)": [
                        258
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ColumnChunkPageReadStore', None)": [
                        251,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        264,
                        268,
                        270,
                        277,
                        278,
                        279
                    ],
                    "('org.apache.parquet.hadoop#ColumnChunkPageReadStore', 'getRowIndexOffset')": [
                        280,
                        281
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/InternalParquetRecordReader.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        28,
                        318,
                        319,
                        320
                    ],
                    "('org.apache.parquet.hadoop#InternalParquetRecordReader', None)": [
                        74,
                        75,
                        278,
                        279,
                        280,
                        281,
                        287,
                        288,
                        289,
                        290,
                        291
                    ],
                    "('org.apache.parquet.hadoop#InternalParquetRecordReader', 'checkRead')": [
                        134
                    ],
                    "('org.apache.parquet.hadoop#InternalParquetRecordReader', 'nextKeyValue')": [
                        235,
                        236,
                        237,
                        238,
                        239
                    ],
                    "('org.apache.parquet.hadoop#InternalParquetRecordReader', 'getCurrentRowIndex')": [
                        282,
                        283,
                        284,
                        285,
                        286
                    ],
                    "('org.apache.parquet.hadoop#InternalParquetRecordReader', 'resetRowIndexIterator(PageReadStore)')": [
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileReader.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ParquetFileReader', 'internalReadRowGroup(int)')": [
                        932
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileReader', 'internalReadFilteredRowGroup(BlockMetaData,RowRanges,ColumnIndexStore)')": [
                        1047
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ParquetFileReader', 'internalReadRowGroup(int)')": [
                        932
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileReader', 'internalReadFilteredRowGroup(BlockMetaData,RowRanges,ColumnIndexStore)')": [
                        1047
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetReader.java": {
                "new": {
                    "('org.apache.parquet.hadoop#ParquetReader', None)": [
                        143,
                        144,
                        145,
                        151,
                        152
                    ],
                    "('org.apache.parquet.hadoop#ParquetReader', 'getCurrentRowIndex')": [
                        146,
                        147,
                        148,
                        149,
                        150
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetRecordReader.java": {
                "new": {
                    "('org.apache.parquet.hadoop#ParquetRecordReader', None)": [
                        210,
                        211,
                        212,
                        215,
                        216
                    ],
                    "('org.apache.parquet.hadoop#ParquetRecordReader', 'getCurrentRowIndex')": [
                        213,
                        214
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/BlockMetaData.java": {
                "old": {
                    "('org.apache.parquet.hadoop.metadata#BlockMetaData', 'toString')": [
                        108
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop.metadata#BlockMetaData', None)": [
                        36,
                        67,
                        68,
                        69,
                        70,
                        71,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('org.apache.parquet.hadoop.metadata#BlockMetaData', 'getRowIndexOffset')": [
                        72
                    ],
                    "('org.apache.parquet.hadoop.metadata#BlockMetaData', 'setRowIndexOffset(long)')": [
                        77,
                        78
                    ],
                    "('org.apache.parquet.hadoop.metadata#BlockMetaData', 'toString')": [
                        121,
                        122,
                        123,
                        124,
                        125
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/filter2/recordlevel/PhoneBookWriter.java": {
                "old": {
                    "('org.apache.parquet.filter2.recordlevel#PhoneBookWriter', 'createReader(Path,Filter)')": [
                        318
                    ],
                    "('org.apache.parquet.filter2.recordlevel#PhoneBookWriter', 'readUsers(ParquetReader)')": [
                        348
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.parquet.filter2.recordlevel#PhoneBookWriter', 'createReader(Path,Filter)')": [
                        320
                    ],
                    "('org.apache.parquet.filter2.recordlevel#PhoneBookWriter', 'readUsers(ParquetReader)')": [
                        346
                    ],
                    "('org.apache.parquet.filter2.recordlevel#PhoneBookWriter', None)": [
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353
                    ],
                    "('org.apache.parquet.filter2.recordlevel#PhoneBookWriter', 'readUsers(ParquetReader,boolean)')": [
                        354,
                        359,
                        360,
                        361,
                        362,
                        363
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/hadoop/TestBloomFiltering.java": {
                "old": {
                    "('org.apache.parquet.hadoop#TestBloomFiltering', 'readUsers(FilterPredicate,boolean,boolean)')": [
                        203
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#TestBloomFiltering', 'readUsers(FilterPredicate,boolean,boolean)')": [
                        203
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/hadoop/TestColumnIndexFiltering.java": {
                "old": {
                    "('org.apache.parquet.hadoop#TestColumnIndexFiltering', 'readUsers(Filter,boolean,boolean)')": [
                        251
                    ],
                    "('org.apache.parquet.hadoop#TestColumnIndexFiltering', 'readUsersWithProjection(Filter,MessageType,boolean,boolean)')": [
                        264
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#TestColumnIndexFiltering', 'readUsers(Filter,boolean,boolean)')": [
                        251
                    ],
                    "('org.apache.parquet.hadoop#TestColumnIndexFiltering', 'readUsersWithProjection(Filter,MessageType,boolean,boolean)')": [
                        264
                    ]
                }
            }
        }
    }
}