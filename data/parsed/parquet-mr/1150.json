{
    "290385c888b05797e5663acbd8f1ce10bc6fb8a6": {
        "authored_data": "2013 Dec 19 22:55",
        "commit.message": "format\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "d617084a4552621c887b078447de3ab725e47f63",
        "changes": {
            "parquet-column/src/test/java/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/delta/benchmark/RandomWritingBenchmarkTest.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/delta/benchmark/SmallRangeWritingBenchmarkTest.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                }
            }
        }
    },
    "d617084a4552621c887b078447de3ab725e47f63": {
        "authored_data": "2013 Dec 19 22:50",
        "commit.message": "formatting and license header\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "c81778533dd1c963f0cf7b8e704afd7c6259907e",
        "changes": {
            "parquet-column/src/main/java/parquet/column/values/delta/DeltaBinaryPackingValuesReader.java": {
                "old": {
                    "('parquet.column.values.delta#DeltaBinaryPackingValuesReader', 'unpack8Values(BytePacker)')": [
                        147,
                        151,
                        152
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/delta/DeltaBinaryPackingValuesWriter.java": {
                "old": {
                    "('parquet.column.values.delta#DeltaBinaryPackingValuesWriter', 'flushBlockBuffer')": [
                        153
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/delta/DeltaBinaryPackingValuesWriterTest.java": {
                "old": {
                    "('parquet.column.values.delta#DeltaBinaryPackingValuesWriterTest', None)": [
                        178,
                        179,
                        180,
                        183,
                        184,
                        185,
                        186,
                        219,
                        220,
                        221,
                        222
                    ],
                    "('parquet.column.values.delta#DeltaBinaryPackingValuesWriterTest', 'withRLE')": [
                        181,
                        182
                    ],
                    "('parquet.column.values.delta#DeltaBinaryPackingValuesWriterTest', 'readingPerfTest')": [
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218
                    ],
                    "('parquet.column.values.delta#DeltaBinaryPackingValuesWriterTest', 'writingPerfTest')": [
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250
                    ],
                    "('parquet.column.values.delta#DeltaBinaryPackingValuesWriterTest', 'shouldReadAndWrite(int,int)')": [
                        306,
                        319,
                        320
                    ],
                    "(None, None)": [
                        337
                    ]
                },
                "new": {
                    "('parquet.column.values.delta#DeltaBinaryPackingValuesWriterTest', 'shouldReturnCorrectOffsetAfterInitialization')": [
                        157
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/delta/benchmark/BenchMarkTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/delta/benchmark/BenchmarkIntegerOutputSize.java": {
                "old": {
                    "('parquet.column.values.delta.benchmark#BenchmarkIntegerOutputSize', None)": [
                        25,
                        33,
                        79
                    ],
                    "('parquet.column.values.delta.benchmark#BenchmarkIntegerOutputSize', 'testRandomIntegers(IntFunc,int)')": [
                        88,
                        89
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers.java": {
                "old": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/delta/benchmark/RandomWritingBenchmarkTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ],
                    "('parquet.column.values.delta.benchmark#RandomWritingBenchmarkTest', None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/delta/benchmark/SmallRangeWritingBenchmarkTest.java": {
                "old": {
                    "(None, None)": [
                        2
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            }
        }
    },
    "c81778533dd1c963f0cf7b8e704afd7c6259907e": {
        "authored_data": "2013 Dec 19 22:31",
        "commit.message": "delta int bin pack\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "a68c8fc97685eab6e1c916f47badedd70a1c0670",
        "changes": {
            "parquet-column/src/main/java/parquet/column/Encoding.java": {
                "old": {
                    "(None, None)": [
                        147
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        28,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157
                    ]
                }
            },
            "parquet-common/src/main/java/parquet/bytes/BytesUtils.java": {
                "new": {
                    "('parquet.bytes#BytesUtils', None)": [
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        195,
                        196,
                        207,
                        208
                    ],
                    "('parquet.bytes#BytesUtils', 'readZigZagVarInt(InputStream)')": [
                        191,
                        192,
                        193,
                        194
                    ],
                    "('parquet.bytes#BytesUtils', 'writeZigZagVarInt(int,OutputStream)')": [
                        205,
                        206
                    ]
                }
            },
            "parquet-encoding/src/main/java/parquet/bytes/BytesInput.java": {
                "new": {
                    "('parquet.bytes#BytesInput', None)": [
                        96,
                        97,
                        98,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        110,
                        111,
                        112,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284
                    ],
                    "('parquet.bytes#BytesInput', 'fromUnsignedVarInt(int)')": [
                        99,
                        100
                    ],
                    "('parquet.bytes#BytesInput', 'fromZigZagVarInt(int)')": [
                        107,
                        108,
                        109
                    ]
                }
            }
        }
    },
    "4a18684068266d8f8130e7f1ecf098fc039a672e": {
        "authored_data": "2013 Dec 19 20:15",
        "commit.message": "changes for code review comments - enum as params, shortname for writerversion\n",
        "commit.author.name": "Aniket Mokashi",
        "pcid": "67a7a9d242a4831e8e79a1606c0f7304a802ed6e",
        "changes": {
            "parquet-column/src/main/java/parquet/column/ParquetProperties.java": {
                "old": {
                    "(None, None)": [
                        17
                    ],
                    "('parquet.column#ParquetProperties', None)": [
                        25,
                        26,
                        28,
                        29,
                        30,
                        31,
                        32,
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('parquet.column#ParquetProperties', None)": [
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        44,
                        45,
                        46,
                        47,
                        48,
                        50
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/impl/ColumnWriteStoreImpl.java": {
                "old": {
                    "('parquet.column.impl#ColumnWriteStoreImpl', None)": [
                        39,
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('parquet.column.impl#ColumnWriteStoreImpl', None)": [
                        40,
                        42
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/impl/ColumnWriterImpl.java": {
                "old": {
                    "('parquet.column.impl#ColumnWriterImpl', None)": [
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('parquet.column.impl#ColumnWriterImpl', None)": [
                        71
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/mem/TestMemColumn.java": {
                "old": {
                    "('parquet.column.mem#TestMemColumn', 'newColumnWriteStoreImpl(MemPageStore)')": [
                        160
                    ]
                },
                "new": {
                    "('parquet.column.mem#TestMemColumn', 'newColumnWriteStoreImpl(MemPageStore)')": [
                        160
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/PerfTest.java": {
                "old": {
                    "('parquet.io#PerfTest', 'write(MemPageStore)')": [
                        77
                    ]
                },
                "new": {
                    "('parquet.io#PerfTest', 'write(MemPageStore)')": [
                        77
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/TestColumnIO.java": {
                "old": {
                    "('parquet.io#TestColumnIO', 'newColumnWriteStore(MemPageStore)')": [
                        494
                    ]
                },
                "new": {
                    "('parquet.io#TestColumnIO', 'newColumnWriteStore(MemPageStore)')": [
                        494
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/TestFiltered.java": {
                "old": {
                    "('parquet.io#TestFiltered', 'writeTestRecords(MessageColumnIO,int)')": [
                        257
                    ]
                },
                "new": {
                    "('parquet.io#TestFiltered', 'writeTestRecords(MessageColumnIO,int)')": [
                        257
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/InternalParquetRecordWriter.java": {
                "old": {
                    "('parquet.hadoop#InternalParquetRecordWriter', None)": [
                        52,
                        79
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('parquet.hadoop#InternalParquetRecordWriter', None)": [
                        53,
                        80
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetOutputFormat.java": {
                "old": {
                    "('parquet.hadoop#ParquetOutputFormat', 'getWriterVersion(Configuration)')": [
                        188,
                        190,
                        191,
                        192
                    ],
                    "('parquet.hadoop#ParquetOutputFormat', 'getRecordWriter(Configuration,Path,CompressionCodecName)')": [
                        272
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetOutputFormat', 'getWriterVersion(Configuration)')": [
                        188,
                        190
                    ],
                    "('parquet.hadoop#ParquetOutputFormat', 'getRecordWriter(Configuration,Path,CompressionCodecName)')": [
                        270
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetRecordWriter.java": {
                "old": {
                    "('parquet.hadoop#ParquetRecordWriter', None)": [
                        61
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('parquet.hadoop#ParquetRecordWriter', None)": [
                        63
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetWriter.java": {
                "old": {
                    "('parquet.hadoop#ParquetWriter', None)": [
                        101,
                        127
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetWriter', None)": [
                        101,
                        127
                    ]
                }
            },
            "parquet-hive/parquet-hive-storage-handler/src/test/java/parquet/hive/TestMapredParquetInputFormat.java": {
                "old": {
                    "('parquet.hive#TestMapredParquetInputFormat', 'writeFile')": [
                        266
                    ]
                },
                "new": {
                    "('parquet.hive#TestMapredParquetInputFormat', 'writeFile')": [
                        266
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/GenerateIntTestFile.java": {
                "old": {
                    "('parquet.pig#GenerateIntTestFile', 'main(String)')": [
                        63
                    ]
                },
                "new": {
                    "('parquet.pig#GenerateIntTestFile', 'main(String)')": [
                        63
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/GenerateTPCH.java": {
                "old": {
                    "('parquet.pig#GenerateTPCH', 'main(String)')": [
                        65
                    ]
                },
                "new": {
                    "('parquet.pig#GenerateTPCH', 'main(String)')": [
                        65
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/TupleConsumerPerfTest.java": {
                "old": {
                    "('parquet.pig#TupleConsumerPerfTest', 'main(String)')": [
                        59
                    ]
                },
                "new": {
                    "('parquet.pig#TupleConsumerPerfTest', 'main(String)')": [
                        59
                    ]
                }
            },
            "parquet-thrift/src/test/java/parquet/thrift/TestParquetReadProtocol.java": {
                "old": {
                    "('parquet.thrift#TestParquetReadProtocol', 'validate(T)')": [
                        146
                    ]
                },
                "new": {
                    "('parquet.thrift#TestParquetReadProtocol', 'validate(T)')": [
                        146
                    ]
                }
            }
        }
    },
    "f2e7baae6817aae3440edef23f6379d7270f998f": {
        "authored_data": "2013 Dec 19 17:02",
        "commit.message": "Resolves issue #251 by doing additional checks if Hive returns \"Unknown\" as a version.\n",
        "commit.author.name": "Brock Noland",
        "pcid": "5f13c8c20f82eda9229e1b245b9d43f415c14be5",
        "changes": {
            "parquet-hive/parquet-hive-binding/parquet-hive-binding-factory/src/main/java/parquet/hive/HiveBindingFactory.java": {
                "new": {
                    "('parquet.hive#HiveBindingFactory', None)": [
                        31,
                        32,
                        34,
                        35,
                        108,
                        109,
                        126
                    ],
                    "('parquet.hive#HiveBindingFactory', 'createInternal(Class)')": [
                        90,
                        91,
                        92,
                        93
                    ],
                    "('parquet.hive#HiveBindingFactory', 'createBindingForUnknownVersion')": [
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ]
                }
            },
            "parquet-hive/parquet-hive-binding/parquet-hive-binding-factory/src/test/java/parquet/hive/TestHiveBindingFactory.java": {
                "old": {
                    "('parquet.hive#TestHiveBindingFactory', 'testUnknownHiveVersion')": [
                        30,
                        32
                    ],
                    "('parquet.hive#TestHiveBindingFactory', None)": [
                        76
                    ]
                },
                "new": {
                    "('parquet.hive#TestHiveBindingFactory', 'testBlankHiveVersion')": [
                        29,
                        30,
                        31,
                        32
                    ],
                    "('parquet.hive#TestHiveBindingFactory', None)": [
                        33,
                        34,
                        81,
                        82,
                        83,
                        84,
                        85,
                        88
                    ],
                    "('parquet.hive#TestHiveBindingFactory', 'testUnknownHiveVersion')": [
                        36,
                        37,
                        39
                    ]
                }
            }
        }
    }
}