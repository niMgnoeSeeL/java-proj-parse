{
    "d64c883beb9197500ce0922b60462a686435916d": {
        "authored_data": "2013 Apr 23 15:52",
        "commit.message": "mae dictionary more generic; allow converters to understand dictionaries\n",
        "commit.author.name": "julien",
        "pcid": "9d2df1361fb131c21ed5ec7c2a33eb098ae2d5ce",
        "changes": {
            "parquet-column/src/main/java/parquet/column/Dictionary.java": {
                "old": {
                    "('parquet.column#Dictionary', 'decode(int)')": [
                        23
                    ]
                },
                "new": {
                    "('parquet.column#Dictionary', 'getMaxId')": [
                        23
                    ],
                    "('parquet.column#Dictionary', 'decodeToBinary(int)')": [
                        25,
                        26
                    ],
                    "('parquet.column#Dictionary', None)": [
                        27,
                        28,
                        31,
                        32,
                        35,
                        36,
                        39,
                        40,
                        43,
                        44
                    ],
                    "('parquet.column#Dictionary', 'decodeToInt(int)')": [
                        29,
                        30
                    ],
                    "('parquet.column#Dictionary', 'decodeToLong(int)')": [
                        33,
                        34
                    ],
                    "('parquet.column#Dictionary', 'decodeToFloat(int)')": [
                        37,
                        38
                    ],
                    "('parquet.column#Dictionary', 'decodeToDouble(int)')": [
                        41,
                        42
                    ],
                    "('parquet.column#Dictionary', 'decodeToBoolean(int)')": [
                        45,
                        46
                    ],
                    "(None, None)": [
                        47
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/Encoding.java": {
                "old": {
                    "(None, None)": [
                        26,
                        91,
                        92,
                        117
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        31,
                        92,
                        93,
                        94,
                        95,
                        96,
                        121
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/impl/ColumnReadStoreImpl.java": {
                "old": {
                    "('parquet.column.impl#ColumnReadStoreImpl', None)": [
                        32,
                        33,
                        63,
                        64,
                        88,
                        89,
                        113,
                        114,
                        138,
                        139,
                        163,
                        164,
                        188,
                        189
                    ],
                    "('parquet.column.impl#ColumnReadStoreImpl', 'newMemColumnReader(ColumnDescriptor,PageReader)')": [
                        45,
                        47,
                        49,
                        51,
                        53,
                        55
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        261
                    ],
                    "('parquet.column.impl#ColumnReadStoreImpl', None)": [
                        38,
                        39,
                        40,
                        41,
                        44,
                        45,
                        69,
                        70,
                        87,
                        88,
                        106,
                        107,
                        108,
                        109,
                        110,
                        117,
                        118,
                        136,
                        137,
                        138,
                        139,
                        140,
                        147,
                        148,
                        166,
                        167,
                        168,
                        169,
                        170,
                        177,
                        178,
                        196,
                        197,
                        198,
                        199,
                        200,
                        207,
                        208,
                        226,
                        227,
                        228,
                        229,
                        230,
                        237,
                        238,
                        257,
                        258,
                        259,
                        260
                    ],
                    "('parquet.column.impl#ColumnReadStoreImpl', 'newMemColumnReader(ColumnDescriptor,PageReader)')": [
                        53,
                        56,
                        58,
                        60,
                        62,
                        64,
                        66
                    ],
                    "('parquet.column.impl#ColumnReadStoreImpl', 'getPrimitiveConverter(ColumnDescriptor)')": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/impl/ColumnReaderImpl.java": {
                "old": {
                    "('parquet.column.impl#ColumnReaderImpl', None)": [
                        70,
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', None)": [
                        65,
                        66,
                        73,
                        74,
                        86,
                        106
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'writeNextValueToConverter')": [
                        107
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/ValuesReader.java": {
                "old": {
                    "('parquet.column.values#ValuesReader', None)": [
                        76,
                        83,
                        90,
                        91,
                        94,
                        95,
                        96,
                        97,
                        104,
                        111
                    ],
                    "('parquet.column.values#ValuesReader', 'readByte')": [
                        78
                    ],
                    "('parquet.column.values#ValuesReader', 'readBytes')": [
                        92,
                        93
                    ]
                },
                "new": {
                    "('parquet.column.values#ValuesReader', None)": [
                        76,
                        83,
                        90,
                        97,
                        104
                    ],
                    "('parquet.column.values#ValuesReader', 'readBytes')": [
                        78
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/dictionary/DictionaryValuesReader.java": {
                "old": {
                    "('parquet.column.values.dictionary#DictionaryValuesReader', 'readBytes')": [
                        44
                    ]
                },
                "new": {
                    "('parquet.column.values.dictionary#DictionaryValuesReader', 'readBytes')": [
                        44
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/plain/PlainValuesReader.java": {
                "old": {
                    "('parquet.column.values.plain#PlainValuesReader', None)": [
                        75,
                        81,
                        82,
                        83
                    ],
                    "('parquet.column.values.plain#PlainValuesReader', 'readByte')": [
                        76,
                        77,
                        78,
                        79,
                        80
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/MessageColumnIO.java": {
                "old": {
                    "('parquet.io#MessageColumnIO', 'getRecordReader(PageReadStore,RecordMaterializer)')": [
                        57
                    ]
                },
                "new": {
                    "('parquet.io#MessageColumnIO', 'getRecordReader(PageReadStore,RecordMaterializer)')": [
                        57,
                        58,
                        59,
                        60,
                        61
                    ],
                    "('parquet.io#MessageColumnIO', None)": [
                        62
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/api/GroupConverter.java": {
                "old": {
                    "('parquet.io.api#GroupConverter', None)": [
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        17,
                        18
                    ],
                    "('parquet.io.api#GroupConverter', None)": [
                        41,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        63
                    ],
                    "('parquet.io.api#GroupConverter', 'hasDictionarySupport(int)')": [
                        51,
                        52
                    ],
                    "('parquet.io.api#GroupConverter', 'getDictionaryBasedConverter(int,Dictionary)')": [
                        61,
                        62
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/api/PrimitiveConverter.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/mem/TestMemColumn.java": {
                "old": {
                    "('parquet.column.mem#TestMemColumn', 'testMemColumn')": [
                        39,
                        40,
                        42,
                        43,
                        44,
                        48
                    ],
                    "('parquet.column.mem#TestMemColumn', 'getCol(String,String)')": [
                        57,
                        58,
                        59,
                        60
                    ],
                    "('parquet.column.mem#TestMemColumn', 'testMemColumnBinary')": [
                        65,
                        69,
                        75
                    ],
                    "('parquet.column.mem#TestMemColumn', 'testMemColumnSeveralPages')": [
                        86,
                        90,
                        98
                    ],
                    "('parquet.column.mem#TestMemColumn', 'testMemColumnSeveralPagesRepeated')": [
                        109,
                        113,
                        130
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('parquet.column.mem#TestMemColumn', 'testMemColumn')": [
                        40,
                        41,
                        43,
                        47
                    ],
                    "('parquet.column.mem#TestMemColumn', 'getColumnWriter(ColumnDescriptor,MemPageStore)')": [
                        56,
                        57,
                        58,
                        59,
                        60
                    ],
                    "('parquet.column.mem#TestMemColumn', None)": [
                        61,
                        62
                    ],
                    "('parquet.column.mem#TestMemColumn', 'getColumnReader(MemPageStore,ColumnDescriptor,MessageType)')": [
                        63,
                        64,
                        65,
                        66,
                        67,
                        68
                    ],
                    "('parquet.column.mem#TestMemColumn', 'testMemColumnBinary')": [
                        73,
                        77,
                        78,
                        84
                    ],
                    "('parquet.column.mem#TestMemColumn', 'testMemColumnSeveralPages')": [
                        95,
                        99,
                        100,
                        108
                    ],
                    "('parquet.column.mem#TestMemColumn', 'testMemColumnSeveralPagesRepeated')": [
                        119,
                        123,
                        124,
                        141
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/dictionary/TestDictionary.java": {
                "old": {
                    "('parquet.column.values.dictionary#TestDictionary', 'testDict')": [
                        36
                    ],
                    "('parquet.column.values.dictionary#TestDictionary', 'testDictInefficiency')": [
                        78
                    ]
                },
                "new": {
                    "(None, None)": [
                        9,
                        17
                    ],
                    "('parquet.column.values.dictionary#TestDictionary', 'testDict')": [
                        38,
                        39
                    ],
                    "('parquet.column.values.dictionary#TestDictionary', 'testDictInefficiency')": [
                        81,
                        82
                    ]
                }
            }
        }
    },
    "f866bb844c8534c3c14975c185c3df627f640b24": {
        "authored_data": "2013 Apr 22 21:48",
        "commit.message": "more tests for optional vs required\n",
        "commit.author.name": "julien",
        "pcid": "61d5170844aaf611555a0dd63c5e24af08acf1c8",
        "changes": {
            "parquet-column/src/test/java/parquet/io/TestColumnIO.java": {
                "old": {
                    "('parquet.io#TestColumnIO', 'testColumnIO')": [
                        158,
                        159,
                        179,
                        180
                    ],
                    "('parquet.io#TestColumnIO', 'testOneOfEach')": [
                        194,
                        195,
                        196,
                        197,
                        199,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216
                    ],
                    "('parquet.io#TestColumnIO', None)": [
                        217,
                        251,
                        295,
                        296
                    ],
                    "('parquet.io#TestColumnIO', 'testRequiredOfRequired')": [
                        223,
                        224,
                        236,
                        239,
                        241,
                        242,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250
                    ],
                    "('parquet.io#TestColumnIO', 'read(RecordReader,MessageType,List)')": [
                        297,
                        298
                    ]
                },
                "new": {
                    "(None, None)": [
                        49,
                        52,
                        53,
                        54,
                        55
                    ],
                    "('parquet.io#TestColumnIO', 'testColumnIO')": [
                        163,
                        164,
                        184,
                        185
                    ],
                    "('parquet.io#TestColumnIO', 'testOneOfEach')": [
                        203
                    ],
                    "('parquet.io#TestColumnIO', 'testRequiredOfRequired')": [
                        220,
                        221
                    ],
                    "('parquet.io#TestColumnIO', None)": [
                        222,
                        223,
                        224,
                        286,
                        287,
                        288,
                        308
                    ],
                    "('parquet.io#TestColumnIO', 'testOptionalRequiredInteraction')": [
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285
                    ],
                    "('parquet.io#TestColumnIO', 'testSchema(MessageType,List)')": [
                        289,
                        290,
                        291,
                        292,
                        295,
                        297,
                        298,
                        299,
                        300,
                        303,
                        304,
                        305,
                        306,
                        307
                    ]
                }
            }
        }
    },
    "8b69ad5d107946d0a52a30f879ef3f932ba72a32": {
        "authored_data": "2013 Apr 20 06:08",
        "commit.message": "address comments from @J_\n",
        "commit.author.name": "Dmitriy Ryaboy",
        "pcid": "c2bdea0d004103fe74585d42abe3643a62d3da0a",
        "changes": {
            "parquet-scrooge/src/main/java/parquet/scrooge/ScroogeRecordConverter.java": {
                "new": {
                    "('parquet.scrooge#ScroogeRecordConverter', 'getCodec(Class)')": [
                        50
                    ]
                }
            },
            "parquet-thrift/src/main/java/parquet/hadoop/thrift/DeprecatedContainerInputFormat.java": {
                "new": {
                    "('parquet.hadoop.thrift#DeprecatedContainerInputFormat', 'getSplits(JobConf,int)')": [
                        132
                    ],
                    "('parquet.hadoop.thrift#DeprecatedContainerInputFormat', None)": [
                        255,
                        285,
                        335,
                        345
                    ]
                }
            },
            "parquet-thrift/src/main/java/parquet/hadoop/thrift/ThriftReadSupport.java": {
                "old": {
                    "('parquet.hadoop.thrift#ThriftReadSupport', 'prepareForRead(Configuration,Map,MessageType,parquet)')": [
                        93
                    ]
                },
                "new": {
                    "('parquet.hadoop.thrift#ThriftReadSupport', 'prepareForRead(Configuration,Map,MessageType,parquet)')": [
                        93
                    ]
                }
            }
        }
    },
    "61d5170844aaf611555a0dd63c5e24af08acf1c8": {
        "authored_data": "2013 Apr 19 23:47",
        "commit.message": "fix bug where a required field would not be created at the right level\n",
        "commit.author.name": "julien",
        "pcid": "ee8c25ea3a73b068c7523bdfd1c4cdddf156e26c",
        "changes": {
            "parquet-column/src/main/java/parquet/io/RecordReaderImplementation.java": {
                "old": {
                    "('parquet.io#RecordReaderImplementation', None)": [
                        302,
                        305,
                        311
                    ]
                },
                "new": {
                    "('parquet.io#RecordReaderImplementation', None)": [
                        301,
                        302,
                        306,
                        307
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/TestColumnIO.java": {
                "new": {
                    "('parquet.io#TestColumnIO', None)": [
                        220,
                        251,
                        252,
                        253
                    ],
                    "('parquet.io#TestColumnIO', 'testRequiredOfRequired')": [
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250
                    ]
                }
            }
        }
    },
    "aa851eb7ca9edd0c364bfe39ec2c2f99c4914d01": {
        "authored_data": "2013 Apr 19 21:35",
        "commit.message": "remove broken reader/writer\n",
        "commit.author.name": "julien",
        "pcid": "9942ce175d35708cc7f0586b075bc3467a6a5224",
        "changes": {
            "parquet-column/src/test/java/parquet/column/values/bitpacking/TestBitPackingColumn.java": {
                "old": {
                    "('parquet.column.values.bitpacking#TestBitPackingColumn', None)": [
                        180,
                        188,
                        189,
                        191,
                        194
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#TestBitPackingColumn', None)": [
                        180,
                        188,
                        189,
                        190,
                        192,
                        195
                    ]
                }
            }
        }
    },
    "9942ce175d35708cc7f0586b075bc3467a6a5224": {
        "authored_data": "2013 Apr 19 21:29",
        "commit.message": "move simple RLE to generated bit packing\n",
        "commit.author.name": "julien",
        "pcid": "bcdddf76bb16436a62167e82664b1e8bc4f2e0ed",
        "changes": {
            "parquet-column/src/main/java/parquet/column/values/bitpacking/ByteBasedBitPackingGenerator.java": {
                "old": {
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingGenerator', 'main(String)')": [
                        47
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingGenerator', 'main(String)')": [
                        47
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/bitpacking/ByteBitPacking.java": {
                "old": {
                    "('parquet.column.values.bitpacking#ByteBitPacking', None)": [
                        25
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#ByteBitPacking', None)": [
                        25
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/rle/RLEDecoder.java": {
                "old": {
                    "(None, None)": [
                        18,
                        22,
                        24,
                        25
                    ],
                    "('parquet.column.values.rle#RLEDecoder', None)": [
                        42,
                        47
                    ],
                    "('parquet.column.values.rle#RLEDecoder', 'readInt')": [
                        58,
                        62,
                        63,
                        64
                    ],
                    "('parquet.column.values.rle#RLEDecoder', 'readNext')": [
                        72,
                        74,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        23,
                        24
                    ],
                    "('parquet.column.values.rle#RLEDecoder', None)": [
                        32,
                        42,
                        44
                    ],
                    "('parquet.column.values.rle#RLEDecoder', 'readInt')": [
                        51,
                        52,
                        53,
                        61
                    ],
                    "('parquet.column.values.rle#RLEDecoder', 'readNext')": [
                        73,
                        74,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/rle/RLESimpleEncoder.java": {
                "old": {
                    "(None, None)": [
                        23,
                        55
                    ],
                    "('parquet.column.values.rle#RLESimpleEncoder', None)": [
                        33,
                        34,
                        35,
                        38,
                        39,
                        40
                    ],
                    "('parquet.column.values.rle#RLESimpleEncoder', 'writeInt(int)')": [
                        44
                    ],
                    "('parquet.column.values.rle#RLESimpleEncoder', 'toBytes')": [
                        48,
                        49,
                        51,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        52
                    ],
                    "('parquet.column.values.rle#RLESimpleEncoder', None)": [
                        33,
                        34,
                        37
                    ],
                    "('parquet.column.values.rle#RLESimpleEncoder', 'writeInt(int)')": [
                        41,
                        42
                    ],
                    "('parquet.column.values.rle#RLESimpleEncoder', 'toBytes')": [
                        47,
                        49,
                        50,
                        51
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/bitpacking/TestBitPackingColumn.java": {
                "old": {
                    "('parquet.column.values.bitpacking#TestBitPackingColumn', 'validateEncodeDecode(int,int,String)')": [
                        175
                    ],
                    "('parquet.column.values.bitpacking#TestBitPackingColumn', None)": [
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#TestBitPackingColumn', 'validateEncodeDecode(int,int,String)')": [
                        175
                    ],
                    "('parquet.column.values.bitpacking#TestBitPackingColumn', None)": [
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/rle/TestRLE.java": {
                "old": {
                    "('parquet.column.values.rle#TestRLE', 'verify(int,int)')": [
                        49,
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('parquet.column.values.rle#TestRLE', 'verify(int,int)')": [
                        47,
                        52,
                        53,
                        54,
                        55,
                        57,
                        59,
                        60
                    ]
                }
            }
        }
    },
    "c2bdea0d004103fe74585d42abe3643a62d3da0a": {
        "authored_data": "2013 Apr 19 21:22",
        "commit.message": "address comments from alex l.\n",
        "commit.author.name": "Dmitriy Ryaboy",
        "pcid": "bca0411428def0c2abe792d882e8d23461c6a097",
        "changes": {
            "parquet-cascading/src/main/java/parquet/cascading/ParquetTBaseScheme.java": {
                "old": {
                    "('parquet.cascading#ParquetTBaseScheme', 'sinkConfInit(FlowProcess,Tap,JobConf)')": [
                        39
                    ],
                    "('parquet.cascading#ParquetTBaseScheme', 'sourceConfInit(FlowProcess,Tap,JobConf)')": [
                        55
                    ],
                    "(None, None)": [
                        64,
                        65
                    ]
                },
                "new": {
                    "('parquet.cascading#ParquetTBaseScheme', 'sinkConfInit(FlowProcess,Tap,JobConf)')": [
                        39
                    ],
                    "('parquet.cascading#ParquetTBaseScheme', None)": [
                        51
                    ],
                    "('parquet.cascading#ParquetTBaseScheme', 'sourceConfInit(FlowProcess,Tap,JobConf)')": [
                        56
                    ],
                    "('parquet.cascading#ParquetTBaseScheme', 'sink(FlowProcess,SinkCall)')": [
                        65
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetInputFormat.java": {
                "old": {
                    "('parquet.hadoop#ParquetInputFormat', 'setReadSupportClass(Job,Class)')": [
                        66
                    ],
                    "('parquet.hadoop#ParquetInputFormat', 'setReadSupportClass(JobConf,Class)')": [
                        70
                    ],
                    "('parquet.hadoop#ParquetInputFormat', 'getReadSupportClass(Configuration)')": [
                        74,
                        80
                    ],
                    "('parquet.hadoop#ParquetInputFormat', None)": [
                        95
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetInputFormat', 'setReadSupportClass(Job,Class)')": [
                        66
                    ],
                    "('parquet.hadoop#ParquetInputFormat', 'setReadSupportClass(JobConf,Class)')": [
                        70
                    ],
                    "('parquet.hadoop#ParquetInputFormat', 'getReadSupportClass(Configuration)')": [
                        74,
                        80,
                        81
                    ],
                    "('parquet.hadoop#ParquetInputFormat', None)": [
                        96
                    ]
                }
            },
            "parquet-scrooge/src/main/java/parquet/scrooge/ParquetScroogeScheme.java": {
                "old": {
                    "('parquet.scrooge#ParquetScroogeScheme', None)": [
                        38,
                        49,
                        51
                    ],
                    "('parquet.scrooge#ParquetScroogeScheme', 'sinkConfInit(FlowProcess,Tap,JobConf)')": [
                        48
                    ],
                    "('parquet.scrooge#ParquetScroogeScheme', 'sourceConfInit(FlowProcess,Tap,JobConf)')": [
                        65
                    ],
                    "(None, None)": [
                        74,
                        75
                    ]
                },
                "new": {
                    "('parquet.scrooge#ParquetScroogeScheme', None)": [
                        38
                    ],
                    "('parquet.scrooge#ParquetScroogeScheme', 'sinkConfInit(FlowProcess,Tap,JobConf)')": [
                        48
                    ],
                    "('parquet.scrooge#ParquetScroogeScheme', 'sourceConfInit(FlowProcess,Tap,JobConf)')": [
                        63
                    ],
                    "('parquet.scrooge#ParquetScroogeScheme', 'sink(FlowProcess,SinkCall)')": [
                        72
                    ]
                }
            },
            "parquet-scrooge/src/main/java/parquet/scrooge/ScroogeRecordConverter.java": {
                "old": {
                    "('parquet.scrooge#ScroogeRecordConverter', 'getCodec(Class)')": [
                        49
                    ]
                },
                "new": {
                    "('parquet.scrooge#ScroogeRecordConverter', 'getCodec(Class)')": [
                        49
                    ]
                }
            },
            "parquet-thrift/src/main/java/parquet/hadoop/thrift/ThriftReadSupport.java": {
                "old": {
                    "('parquet.hadoop.thrift#ThriftReadSupport', 'prepareForRead(Configuration,Map,MessageType,parquet)')": [
                        92
                    ]
                },
                "new": {
                    "('parquet.hadoop.thrift#ThriftReadSupport', 'prepareForRead(Configuration,Map,MessageType,parquet)')": [
                        92
                    ]
                }
            },
            "parquet-thrift/src/main/java/parquet/thrift/TBaseRecordConverter.java": {
                "old": {
                    "('parquet.thrift#TBaseRecordConverter', None)": [
                        35
                    ]
                },
                "new": {
                    "('parquet.thrift#TBaseRecordConverter', None)": [
                        35
                    ]
                }
            }
        }
    }
}