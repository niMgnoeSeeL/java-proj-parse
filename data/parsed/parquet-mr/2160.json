{
    "78ff38c7e17cd5349bc92ccda18e7310c8e0274c": {
        "authored_data": "2013 Feb 21 22:37",
        "commit.message": "improve logs\n",
        "commit.author.name": "julien",
        "pcid": "f6adf0b5e678b5aff29cc3eeef9b3e9b240c0385",
        "changes": {
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetFileReader.java": {
                "new": {
                    "('parquet.hadoop#ParquetFileReader', 'readAllFootersInParallelUsingSummaryFiles(Configuration,List)')": [
                        101,
                        121
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/ParquetLoader.java": {
                "old": {
                    "('parquet.pig#ParquetLoader', 'getPartitionKeys(String,Job)')": [
                        113
                    ],
                    "('parquet.pig#ParquetLoader', 'getSchema(String,Job)')": [
                        120
                    ],
                    "('parquet.pig#ParquetLoader', 'getStatistics(String,Job)')": [
                        144
                    ]
                },
                "new": {
                    "('parquet.pig#ParquetLoader', 'setLocation(String,Job)')": [
                        61
                    ],
                    "('parquet.pig#ParquetLoader', None)": [
                        62,
                        63
                    ],
                    "('parquet.pig#ParquetLoader', 'setInput(String,Job)')": [
                        64
                    ],
                    "('parquet.pig#ParquetLoader', 'getPartitionKeys(String,Job)')": [
                        117
                    ],
                    "('parquet.pig#ParquetLoader', 'getSchema(String,Job)')": [
                        124
                    ],
                    "('parquet.pig#ParquetLoader', 'getStatistics(String,Job)')": [
                        148
                    ]
                }
            }
        }
    },
    "f6adf0b5e678b5aff29cc3eeef9b3e9b240c0385": {
        "authored_data": "2013 Feb 21 20:18",
        "commit.message": "integrate new converter; cleanup\n",
        "commit.author.name": "julien",
        "pcid": "c5a894a12d326350c7b169b85704d3b183283057",
        "changes": {
            "parquet-column/src/main/java/parquet/column/mem/MemColumnReadStore.java": {
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/mem/MemColumnReader.java": {
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/mem/MemColumnWriter.java": {
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/mem/MemPageReader.java": {
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/mem/MemPageWriter.java": {
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BitPackingColumnReader.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BitPackingColumnWriter.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BitReader.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BooleanPlainColumnReader.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BooleanPlainColumnWriter.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BoundedIntColumnReader.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BoundedIntColumnWriter.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/PlainColumnReader.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/PlainColumnWriter.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/BaseRecordReader.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('parquet.io#BaseRecordReader', None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('parquet.io#BaseRecordReader', None)": [
                        28
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/GroupColumnIO.java": {
                "old": {
                    "('parquet.io#GroupColumnIO', None)": [
                        32
                    ]
                },
                "new": {
                    "('parquet.io#GroupColumnIO', None)": [
                        32
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/MessageColumnIO.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('parquet.io#MessageColumnIO', 'getRecordReader(PageReadStore,RecordMaterializer)')": [
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('parquet.io#MessageColumnIO', 'getRecordReader(PageReadStore,RecordConverter)')": [
                        47
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/RecordConsumerLoggingWrapper.java": {
                "old": {
                    "('parquet.io#RecordConsumerLoggingWrapper', 'addBinary(byte)')": [
                        109
                    ]
                },
                "new": {
                    "('parquet.io#RecordConsumerLoggingWrapper', 'addBinary(byte)')": [
                        109
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/RecordReaderImplementation.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('parquet.io#RecordReaderImplementation', None)": [
                        190,
                        221,
                        222,
                        223,
                        224,
                        225,
                        235,
                        237,
                        284,
                        395,
                        396,
                        401,
                        402,
                        406,
                        407,
                        413,
                        414,
                        419,
                        420,
                        428,
                        429,
                        434,
                        435,
                        442,
                        443,
                        455,
                        456,
                        457,
                        466,
                        467
                    ],
                    "('parquet.io#RecordReaderImplementation', 'read')": [
                        367,
                        374,
                        380,
                        388,
                        393
                    ],
                    "('parquet.io#RecordReaderImplementation', 'endGroup(State,int)')": [
                        397,
                        398,
                        399,
                        400
                    ],
                    "('parquet.io#RecordReaderImplementation', 'addPrimitive(State,ColumnReader)')": [
                        403,
                        404,
                        405
                    ],
                    "('parquet.io#RecordReaderImplementation', 'startGroup(State,int)')": [
                        408,
                        409,
                        410,
                        411,
                        412
                    ],
                    "('parquet.io#RecordReaderImplementation', 'startMessage')": [
                        415,
                        416,
                        417,
                        418
                    ],
                    "('parquet.io#RecordReaderImplementation', 'endMessage')": [
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427
                    ],
                    "('parquet.io#RecordReaderImplementation', 'addPrimitive(ColumnReader,PrimitiveTypeName,String,int)')": [
                        430,
                        431,
                        432,
                        433
                    ],
                    "('parquet.io#RecordReaderImplementation', 'endField(String,int)')": [
                        436,
                        437,
                        438,
                        439,
                        440,
                        441
                    ],
                    "('parquet.io#RecordReaderImplementation', 'startField(String,int)')": [
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454
                    ],
                    "('parquet.io#RecordReaderImplementation', 'endGroup(String,int)')": [
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465
                    ],
                    "('parquet.io#RecordReaderImplementation', 'startGroup(String,int)')": [
                        468,
                        469,
                        470
                    ],
                    "('parquet.io#RecordReaderImplementation', 'getMaterializer')": [
                        502
                    ],
                    "('parquet.io#RecordReaderImplementation', 'getRecordConsumer')": [
                        506
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        30,
                        31
                    ],
                    "('parquet.io#RecordReaderImplementation', None)": [
                        182,
                        183,
                        194,
                        201,
                        202,
                        227,
                        228,
                        229,
                        239,
                        241,
                        246,
                        247,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        298
                    ],
                    "('parquet.io#RecordReaderImplementation', 'read')": [
                        381,
                        388,
                        394,
                        402,
                        407
                    ],
                    "('parquet.io#RecordReaderImplementation', 'getMaterializer')": [
                        440
                    ],
                    "('parquet.io#RecordReaderImplementation', 'getRecordConsumer')": [
                        444
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/PrimitiveType.java": {
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('parquet.schema#PrimitiveType', None)": [
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        175,
                        176,
                        177
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/PerfTest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        19,
                        20,
                        21,
                        22,
                        29
                    ],
                    "('parquet.io#PerfTest', 'read(MemPageStore,MessageType,String)')": [
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "('parquet.io#PerfTest', 'read(RecordReader,int,MessageType)')": [
                        124,
                        125
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19,
                        20,
                        21,
                        22,
                        29,
                        30,
                        31
                    ],
                    "('parquet.io#PerfTest', 'read(MemPageStore,MessageType,String)')": [
                        59
                    ],
                    "('parquet.io#PerfTest', 'read(RecordReader,int,MessageType)')": [
                        111,
                        112
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/TestColumnIO.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        41,
                        42,
                        43,
                        44
                    ],
                    "('parquet.io#TestColumnIO', None)": [
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135
                    ],
                    "('parquet.io#TestColumnIO', 'getRecordReader(MessageColumnIO,MessageType,PageReadStore)')": [
                        204,
                        205
                    ],
                    "('parquet.io#TestColumnIO', 'testPushParser')": [
                        240
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46
                    ],
                    "('parquet.io#TestColumnIO', None)": [
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ],
                    "('parquet.io#TestColumnIO', 'getRecordReader(MessageColumnIO,MessageType,PageReadStore)')": [
                        180,
                        181,
                        182
                    ],
                    "('parquet.io#TestColumnIO', 'testPushParser')": [
                        217
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/schema/TestMessageType.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ReadSupport.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('parquet.hadoop#ReadSupport', 'newRecordConsumer')": [
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('parquet.hadoop#ReadSupport', 'newRecordConsumer')": [
                        47
                    ]
                }
            },
            "parquet-hadoop/src/test/java/parquet/format/converter/TestParquetMetadataConverter.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "parquet-hadoop/src/test/java/parquet/hadoop/TestInputFormat.java": {
                "old": {
                    "('parquet.hadoop#TestInputFormat', 'testBlocksToSplits')": [
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        41
                    ],
                    "('parquet.hadoop#TestInputFormat', 'testBlocksToSplits')": [
                        55
                    ]
                }
            },
            "parquet-hadoop/src/test/java/parquet/hadoop/TestReadIntTestFile.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29
                    ],
                    "('parquet.hadoop#TestReadIntTestFile', 'readTest')": [
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30
                    ],
                    "('parquet.hadoop#TestReadIntTestFile', 'readTest')": [
                        51
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/TupleReadSupport.java": {
                "old": {
                    "('parquet.pig#TupleReadSupport', 'newRecordConsumer')": [
                        70,
                        72,
                        73,
                        74
                    ],
                    "('parquet.pig#TupleReadSupport', None)": [
                        75,
                        77
                    ],
                    "('parquet.pig#TupleReadSupport', 'newParsingTree(MessageType,Schema)')": [
                        78,
                        79,
                        80,
                        81,
                        82
                    ],
                    "(None, None)": [
                        83,
                        84,
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        32
                    ],
                    "('parquet.pig#TupleReadSupport', 'newRecordConsumer')": [
                        72,
                        74
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/convert/MapConverter.java": {
                "old": {
                    "('parquet.pig.convert#MapConverter', None)": [
                        50,
                        122,
                        123
                    ]
                },
                "new": {
                    "('parquet.pig.convert#MapConverter', None)": [
                        50,
                        122,
                        123
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/convert/TupleConverter.java": {
                "old": {
                    "('parquet.pig.convert#TupleConverter', None)": [
                        40,
                        47,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        202,
                        203
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        37,
                        251
                    ],
                    "('parquet.pig.convert#TupleConverter', None)": [
                        42,
                        49,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        137,
                        140,
                        141,
                        214,
                        215
                    ],
                    "('parquet.pig.convert#TupleConverter', 'getCurrentRecord')": [
                        138,
                        139
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/TestTupleRecordConsumer.java": {
                "old": {
                    "(None, None)": [
                        36,
                        37,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'testFromTuple(String,List)')": [
                        117
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'testFromGroups(String,List)')": [
                        137,
                        138,
                        142,
                        146
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'newTupleWriter(MessageType,String,RecordMaterializer)')": [
                        162,
                        165
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'newPigRecordConsumer(MessageType,String)')": [
                        178
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        37,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'testFromTuple(String,List)')": [
                        117
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'testFromGroups(String,List)')": [
                        137,
                        138,
                        142,
                        143,
                        144,
                        148,
                        159
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'newTupleWriter(MessageType,String,RecordConverter)')": [
                        165,
                        168
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'newPigRecordConsumer(MessageType,String)')": [
                        181
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/TupleConsumerPerfTest.java": {
                "old": {
                    "('parquet.pig#TupleConsumerPerfTest', 'read(PageReadStore,String,String)')": [
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        154,
                        155,
                        156
                    ],
                    "('parquet.pig#TupleConsumerPerfTest', 'read(RecordReader,int,String)')": [
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        203
                    ]
                },
                "new": {
                    "(None, None)": [
                        37,
                        44
                    ],
                    "('parquet.pig#TupleConsumerPerfTest', 'read(PageReadStore,String,String)')": [
                        138,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148
                    ],
                    "('parquet.pig#TupleConsumerPerfTest', 'read(RecordReader,int,String)')": [
                        185,
                        186,
                        188,
                        190,
                        191,
                        192,
                        193
                    ]
                }
            }
        }
    },
    "cfdcdffee41711ba91109378605265200b2d9a25": {
        "authored_data": "2013 Feb 21 01:32",
        "commit.message": "turn off customer test\n",
        "commit.author.name": "julien",
        "pcid": "5141722756ae6a9f10924242f5d89cd9afebedad",
        "changes": {
            "parquet-pig/src/test/java/parquet/hadoop/TestReadIntTestFile.java": {
                "old": {
                    "('parquet.hadoop#TestReadIntTestFile', None)": [
                        39
                    ],
                    "('parquet.hadoop#TestReadIntTestFile', 'readTest')": [
                        41
                    ]
                },
                "new": {
                    "('parquet.hadoop#TestReadIntTestFile', None)": [
                        39
                    ],
                    "('parquet.hadoop#TestReadIntTestFile', 'readTest')": [
                        41
                    ]
                }
            }
        }
    },
    "5141722756ae6a9f10924242f5d89cd9afebedad": {
        "authored_data": "2013 Feb 21 01:30",
        "commit.message": "integrate thrift changes\n",
        "commit.author.name": "julien",
        "pcid": "85d8f09fa96ec16d413bd5bc01269fff6ed595f4",
        "changes": {
            "parquet-pig/src/main/java/parquet/hadoop/ColumnChunkPageWriteStore.java": {
                "old": {
                    "('parquet.hadoop#ColumnChunkPageWriteStore', None)": [
                        65
                    ]
                },
                "new": {
                    "('parquet.hadoop#ColumnChunkPageWriteStore', None)": [
                        65
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/hadoop/ParquetFileReader.java": {
                "old": {
                    "('parquet.hadoop#ParquetFileReader', 'readColumns')": [
                        309,
                        312
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetFileReader', 'readColumns')": [
                        309,
                        312
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/hadoop/ParquetFileWriter.java": {
                "old": {
                    "('parquet.hadoop#ParquetFileWriter', 'writeDataPage(int,int,BytesInput)')": [
                        191
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetFileWriter', 'writeDataPage(int,int,BytesInput)')": [
                        191
                    ]
                }
            }
        }
    },
    "85d8f09fa96ec16d413bd5bc01269fff6ed595f4": {
        "authored_data": "2013 Feb 21 00:51",
        "commit.message": "removed brennus dependency (for now)\n",
        "commit.author.name": "julien",
        "pcid": "4a0bb74123d353df85e4a29a26e5d439bd1a5993",
        "changes": {
            "parquet-column/src/test/java/parquet/io/PerfTest.java": {
                "old": {
                    "('parquet.io#PerfTest', 'read(MemPageStore)')": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55
                    ],
                    "('parquet.io#PerfTest', 'read(MemPageStore,MessageType,String,boolean)')": [
                        59,
                        61,
                        79,
                        80,
                        81
                    ]
                },
                "new": {
                    "('parquet.io#PerfTest', 'read(MemPageStore)')": [
                        48,
                        49,
                        50
                    ],
                    "('parquet.io#PerfTest', 'read(MemPageStore,MessageType,String)')": [
                        54,
                        56
                    ]
                }
            }
        }
    },
    "4a0bb74123d353df85e4a29a26e5d439bd1a5993": {
        "authored_data": "2013 Feb 21 00:39",
        "commit.message": "cleanup exceptions\n",
        "commit.author.name": "julien",
        "pcid": "51649183bf4c40f40b46bbcf04adb379094d7fda",
        "changes": {
            "parquet-column/src/main/java/parquet/column/mem/MemColumnReadStore.java": {
                "old": {
                    "('parquet.column.mem#MemColumnReadStore', 'newMemColumnReader(ColumnDescriptor,PageReader)')": [
                        53
                    ]
                },
                "new": {
                    "('parquet.column.mem#MemColumnReadStore', 'newMemColumnReader(ColumnDescriptor,PageReader)')": [
                        53
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/mem/MemColumnReader.java": {
                "old": {
                    "('parquet.column.mem#MemColumnReader', None)": [
                        63
                    ]
                },
                "new": {
                    "('parquet.column.mem#MemColumnReader', None)": [
                        63
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/mem/MemPageReader.java": {
                "old": {
                    "('parquet.column.mem#MemPageReader', 'readPage')": [
                        52
                    ]
                },
                "new": {
                    "('parquet.column.mem#MemPageReader', 'readPage')": [
                        52
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/mem/MemPageWriter.java": {
                "old": {
                    "('parquet.column.mem#MemPageWriter', 'writePage(BytesInput,int)')": [
                        39
                    ]
                },
                "new": {
                    "('parquet.column.mem#MemPageWriter', 'writePage(BytesInput,int)')": [
                        39
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BitPackingColumnReader.java": {
                "old": {
                    "('parquet.column.primitive#BitPackingColumnReader', 'readInteger')": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('parquet.column.primitive#BitPackingColumnReader', 'readInteger')": [
                        42
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BitPackingColumnWriter.java": {
                "old": {
                    "('parquet.column.primitive#BitPackingColumnWriter', 'writeInteger(int)')": [
                        48
                    ],
                    "('parquet.column.primitive#BitPackingColumnWriter', 'getBytes')": [
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('parquet.column.primitive#BitPackingColumnWriter', 'writeInteger(int)')": [
                        49
                    ],
                    "('parquet.column.primitive#BitPackingColumnWriter', 'getBytes')": [
                        64
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BitReader.java": {
                "old": {
                    "('parquet.column.primitive#BitReader', 'readUnsignedVarint')": [
                        100
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('parquet.column.primitive#BitReader', 'readUnsignedVarint')": [
                        102
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BooleanPlainColumnReader.java": {
                "old": {
                    "('parquet.column.primitive#BooleanPlainColumnReader', 'readBoolean')": [
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('parquet.column.primitive#BooleanPlainColumnReader', 'readBoolean')": [
                        39
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BooleanPlainColumnWriter.java": {
                "old": {
                    "('parquet.column.primitive#BooleanPlainColumnWriter', 'writeBoolean(boolean)')": [
                        50
                    ],
                    "('parquet.column.primitive#BooleanPlainColumnWriter', 'getBytes')": [
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('parquet.column.primitive#BooleanPlainColumnWriter', 'writeBoolean(boolean)')": [
                        51
                    ],
                    "('parquet.column.primitive#BooleanPlainColumnWriter', 'getBytes')": [
                        65
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BoundedIntColumnReader.java": {
                "old": {
                    "('parquet.column.primitive#BoundedIntColumnReader', None)": [
                        36
                    ],
                    "('parquet.column.primitive#BoundedIntColumnReader', 'readInteger')": [
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('parquet.column.primitive#BoundedIntColumnReader', None)": [
                        37
                    ],
                    "('parquet.column.primitive#BoundedIntColumnReader', 'readInteger')": [
                        57
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BoundedIntColumnWriter.java": {
                "old": {
                    "('parquet.column.primitive#BoundedIntColumnWriter', None)": [
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('parquet.column.primitive#BoundedIntColumnWriter', None)": [
                        52
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/PlainColumnReader.java": {
                "old": {
                    "('parquet.column.primitive#PlainColumnReader', 'readFloat')": [
                        43
                    ],
                    "('parquet.column.primitive#PlainColumnReader', 'readBytes')": [
                        54
                    ],
                    "('parquet.column.primitive#PlainColumnReader', 'readDouble')": [
                        63
                    ],
                    "('parquet.column.primitive#PlainColumnReader', 'readInteger')": [
                        72
                    ],
                    "('parquet.column.primitive#PlainColumnReader', 'readLong')": [
                        81
                    ],
                    "('parquet.column.primitive#PlainColumnReader', 'readByte')": [
                        90
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('parquet.column.primitive#PlainColumnReader', 'readFloat')": [
                        44
                    ],
                    "('parquet.column.primitive#PlainColumnReader', 'readBytes')": [
                        55
                    ],
                    "('parquet.column.primitive#PlainColumnReader', 'readDouble')": [
                        64
                    ],
                    "('parquet.column.primitive#PlainColumnReader', 'readInteger')": [
                        73
                    ],
                    "('parquet.column.primitive#PlainColumnReader', 'readLong')": [
                        82
                    ],
                    "('parquet.column.primitive#PlainColumnReader', 'readByte')": [
                        91
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/PlainColumnWriter.java": {
                "old": {
                    "('parquet.column.primitive#PlainColumnWriter', 'writeBytes(byte)')": [
                        49,
                        53
                    ],
                    "('parquet.column.primitive#PlainColumnWriter', 'writeInteger(int)')": [
                        62
                    ],
                    "('parquet.column.primitive#PlainColumnWriter', 'writeLong(long)')": [
                        71
                    ],
                    "('parquet.column.primitive#PlainColumnWriter', 'writeFloat(float)')": [
                        80
                    ],
                    "('parquet.column.primitive#PlainColumnWriter', 'writeDouble(double)')": [
                        89
                    ],
                    "('parquet.column.primitive#PlainColumnWriter', 'writeByte(int)')": [
                        98
                    ],
                    "('parquet.column.primitive#PlainColumnWriter', 'getBytes')": [
                        112
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('parquet.column.primitive#PlainColumnWriter', 'writeBytes(byte)')": [
                        53
                    ],
                    "('parquet.column.primitive#PlainColumnWriter', 'writeInteger(int)')": [
                        62
                    ],
                    "('parquet.column.primitive#PlainColumnWriter', 'writeLong(long)')": [
                        71
                    ],
                    "('parquet.column.primitive#PlainColumnWriter', 'writeFloat(float)')": [
                        80
                    ],
                    "('parquet.column.primitive#PlainColumnWriter', 'writeDouble(double)')": [
                        89
                    ],
                    "('parquet.column.primitive#PlainColumnWriter', 'writeByte(int)')": [
                        98
                    ],
                    "('parquet.column.primitive#PlainColumnWriter', 'getBytes')": [
                        112
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/BaseRecordReader.java": {
                "old": {
                    "('parquet.io#BaseRecordReader', 'error(String)')": [
                        135
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('parquet.io#BaseRecordReader', 'error(String)')": [
                        136
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/ColumnIO.java": {
                "old": {
                    "('parquet.io#ColumnIO', 'getParent(int)')": [
                        105
                    ]
                },
                "new": {
                    "('parquet.io#ColumnIO', 'getParent(int)')": [
                        105
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/GroupColumnIO.java": {
                "old": {
                    "('parquet.io#GroupColumnIO', 'getChild(int)')": [
                        104
                    ]
                },
                "new": {
                    "('parquet.io#GroupColumnIO', 'getChild(int)')": [
                        104
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/MessageColumnIO.java": {
                "old": {
                    "('parquet.io#MessageColumnIO', None)": [
                        72,
                        109,
                        122
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('parquet.io#MessageColumnIO', None)": [
                        73,
                        110,
                        123
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/RecordReaderCompiler.java": {
                "old": {
                    "('parquet.io#RecordReaderCompiler', 'compile(RecordReaderImplementation)')": [
                        240,
                        248,
                        250,
                        252,
                        254,
                        256,
                        258,
                        260
                    ]
                },
                "new": {
                    "('parquet.io#RecordReaderCompiler', 'compile(RecordReaderImplementation)')": [
                        240,
                        248,
                        250,
                        252,
                        254,
                        256,
                        258,
                        260
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/RecordReaderImplementation.java": {
                "old": {
                    "('parquet.io#RecordReaderImplementation', None)": [
                        276
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('parquet.io#RecordReaderImplementation', None)": [
                        277
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/GroupType.java": {
                "old": {
                    "('parquet.schema#GroupType', 'getFieldIndex(String)')": [
                        83
                    ],
                    "('parquet.schema#GroupType', 'checkContains(Type)')": [
                        230
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('parquet.schema#GroupType', 'getFieldIndex(String)')": [
                        85
                    ],
                    "('parquet.schema#GroupType', 'checkContains(Type)')": [
                        232
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/MessageType.java": {
                "old": {
                    "('parquet.schema#MessageType', 'checkContains(Type)')": [
                        108
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('parquet.schema#MessageType', 'checkContains(Type)')": [
                        109
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/PrimitiveType.java": {
                "old": {
                    "('parquet.schema#PrimitiveType', 'getRepetitionLevel(String,int)')": [
                        219
                    ],
                    "('parquet.schema#PrimitiveType', 'getDefinitionLevel(String,int)')": [
                        227
                    ],
                    "('parquet.schema#PrimitiveType', 'getType(String,int)')": [
                        235
                    ],
                    "('parquet.schema#PrimitiveType', 'checkContains(Type)')": [
                        249,
                        253
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('parquet.schema#PrimitiveType', 'getRepetitionLevel(String,int)')": [
                        220
                    ],
                    "('parquet.schema#PrimitiveType', 'getDefinitionLevel(String,int)')": [
                        228
                    ],
                    "('parquet.schema#PrimitiveType', 'getType(String,int)')": [
                        236
                    ],
                    "('parquet.schema#PrimitiveType', 'checkContains(Type)')": [
                        250,
                        254
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/Type.java": {
                "old": {
                    "('parquet.schema#Type', 'checkContains(Type)')": [
                        112
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('parquet.schema#Type', 'checkContains(Type)')": [
                        114
                    ]
                }
            }
        }
    },
    "bd1fde90f05a3aec05f7cad24d90633ea680d9f9": {
        "authored_data": "2013 Feb 20 22:42",
        "commit.message": "cleanup\n",
        "commit.author.name": "julien",
        "pcid": "ac3a80616248e6facf9c756ac8d831bcf5e978a1",
        "changes": {
            "parquet-column/src/main/java/parquet/column/ColumnDescriptor.java": {
                "old": {
                    "('parquet.column#ColumnDescriptor', None)": [
                        30
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/mem/MemColumnReader.java": {
                "old": {
                    "(None, None)": [
                        27,
                        29,
                        31
                    ],
                    "('parquet.column.mem#MemColumnReader', 'checkRead')": [
                        173,
                        174
                    ]
                },
                "new": {
                    "('parquet.column.mem#MemColumnReader', 'checkRead')": [
                        170
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/mem/MemColumnWriter.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('parquet.column.mem#MemColumnWriter', 'writePage')": [
                        77,
                        78
                    ]
                },
                "new": {
                    "('parquet.column.mem#MemColumnWriter', 'writePage')": [
                        76
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BooleanPlainColumnWriter.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/PlainColumnReader.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('parquet.column.primitive#PlainColumnReader', 'readBytes')": [
                        51
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/MessageColumnIO.java": {
                "old": {
                    "(None, None)": [
                        18,
                        23,
                        29,
                        30
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/primitive/TestBitPackingColumn.java": {
                "old": {
                    "(None, None)": [
                        23,
                        25,
                        26,
                        27
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/ExpectationValidatingRecordConsumer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22,
                        23
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/PerfTest.java": {
                "old": {
                    "(None, None)": [
                        27,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/TestColumnIO.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        42,
                        43,
                        46,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/hadoop/metadata/FileMetaData.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/hadoop/metadata/ParquetMetadata.java": {
                "old": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/ParquetStorer.java": {
                "old": {
                    "(None, None)": [
                        19,
                        23
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/PigSchemaConverter.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24,
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/hadoop/TestParquetFileWriter.java": {
                "old": {
                    "(None, None)": [
                        18,
                        22,
                        25,
                        26,
                        38,
                        39,
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19,
                        20
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/hadoop/TestReadIntTestFile.java": {
                "old": {
                    "(None, None)": [
                        21,
                        29,
                        32
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/TestTupleRecordConsumer.java": {
                "old": {
                    "(None, None)": [
                        28,
                        43,
                        44,
                        45,
                        46
                    ]
                }
            }
        }
    },
    "ac3a80616248e6facf9c756ac8d831bcf5e978a1": {
        "authored_data": "2013 Feb 20 22:22",
        "commit.message": "renamed to parquet\n",
        "commit.author.name": "julien",
        "pcid": "24c85c7746f26aceb17ffdf7394e620a079523e3",
        "changes": {
            "parquet-column/src/main/java/parquet/column/UnknownColumnException.java": {
                "old": {
                    "(None, None)": [
                        18
                    ],
                    "('parquet.column#UnknownColumnException', None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        18
                    ],
                    "('parquet.column#UnknownColumnException', None)": [
                        26
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/InvalidRecordException.java": {
                "old": {
                    "(None, None)": [
                        18
                    ],
                    "('parquet.io#InvalidRecordException', None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        18
                    ],
                    "('parquet.io#InvalidRecordException', None)": [
                        20
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/RecordReaderCompiler.java": {
                "old": {
                    "('parquet.io#RecordReaderCompiler', 'compile(RecordReaderImplementation)')": [
                        167
                    ]
                },
                "new": {
                    "('parquet.io#RecordReaderCompiler', 'compile(RecordReaderImplementation)')": [
                        167
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/format/converter/ParquetMetadataConverter.java": {
                "old": {
                    "(None, None)": [
                        49
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'toParquetMetadata(int,RedelmMetaData)')": [
                        59,
                        60,
                        65,
                        69,
                        74
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'addRowGroup(RedelmMetaData,List,BlockMetaData)')": [
                        131
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'fromParquetMetadata(FileMetaData)')": [
                        215,
                        249
                    ]
                },
                "new": {
                    "(None, None)": [
                        49
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'toParquetMetadata(int,ParquetMetadata)')": [
                        59,
                        60,
                        65,
                        69,
                        74
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'addRowGroup(ParquetMetadata,List,BlockMetaData)')": [
                        131
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'fromParquetMetadata(FileMetaData)')": [
                        215,
                        249
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/hadoop/ColumnChunkPageWriteStore.java": {
                "old": {
                    "('parquet.hadoop#ColumnChunkPageWriteStore', None)": [
                        78
                    ],
                    "('parquet.hadoop#ColumnChunkPageWriteStore', 'flushToFileWriter(RedelmFileWriter)')": [
                        107
                    ]
                },
                "new": {
                    "('parquet.hadoop#ColumnChunkPageWriteStore', None)": [
                        78
                    ],
                    "('parquet.hadoop#ColumnChunkPageWriteStore', 'flushToFileWriter(ParquetFileWriter)')": [
                        107
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/hadoop/Footer.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('parquet.hadoop#Footer', None)": [
                        34,
                        36,
                        39
                    ],
                    "('parquet.hadoop#Footer', 'getRedelmMetaData')": [
                        46,
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('parquet.hadoop#Footer', None)": [
                        34,
                        36,
                        39
                    ],
                    "('parquet.hadoop#Footer', 'getParquetMetadata')": [
                        46,
                        47
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/hadoop/PrintFooter.java": {
                "old": {
                    "(None, None)": [
                        18,
                        24,
                        36,
                        46
                    ],
                    "('parquet.hadoop#PrintFooter', 'main(String)')": [
                        66,
                        70,
                        72,
                        93,
                        95,
                        97,
                        99,
                        119,
                        124
                    ],
                    "('parquet.hadoop#PrintFooter', 'add(RedelmMetaData)')": [
                        160
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        44
                    ],
                    "('parquet.hadoop#PrintFooter', 'main(String)')": [
                        64,
                        68,
                        70,
                        91,
                        93,
                        95,
                        97,
                        117,
                        122
                    ],
                    "('parquet.hadoop#PrintFooter', 'add(ParquetMetadata)')": [
                        158
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/hadoop/ReadSupport.java": {
                "old": {
                    "(None, None)": [
                        19,
                        21,
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/hadoop/WriteSupport.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/PigSchemaConverter.java": {
                "old": {
                    "(None, None)": [
                        41
                    ],
                    "('parquet.pig#PigSchemaConverter', None)": [
                        56,
                        73
                    ]
                },
                "new": {
                    "(None, None)": [
                        41
                    ],
                    "('parquet.pig#PigSchemaConverter', None)": [
                        56,
                        73
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/TupleConversionException.java": {
                "old": {
                    "(None, None)": [
                        18
                    ],
                    "('parquet.pig#TupleConversionException', None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        18
                    ],
                    "('parquet.pig#TupleConversionException', None)": [
                        20
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/TupleReadSupport.java": {
                "old": {
                    "('parquet.pig#TupleReadSupport', 'newRecordConsumer')": [
                        71,
                        72
                    ],
                    "('parquet.pig#TupleReadSupport', None)": [
                        75
                    ],
                    "('parquet.pig#TupleReadSupport', 'newParsingTree(MessageType,Schema)')": [
                        78,
                        80
                    ]
                },
                "new": {
                    "('parquet.pig#TupleReadSupport', 'newRecordConsumer')": [
                        71,
                        72
                    ],
                    "('parquet.pig#TupleReadSupport', None)": [
                        75
                    ],
                    "('parquet.pig#TupleReadSupport', 'newParsingTree(MessageType,Schema)')": [
                        78,
                        80
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/convert/MapConverter.java": {
                "old": {
                    "('parquet.pig.convert#MapConverter', None)": [
                        49,
                        50,
                        51,
                        55,
                        120,
                        121,
                        122,
                        123,
                        124,
                        126
                    ]
                },
                "new": {
                    "('parquet.pig.convert#MapConverter', None)": [
                        49,
                        50,
                        51,
                        55,
                        120,
                        121,
                        122,
                        123,
                        124,
                        126
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/convert/TupleConverter.java": {
                "old": {
                    "('parquet.pig.convert#TupleConverter', None)": [
                        44,
                        51,
                        52,
                        53,
                        55,
                        61,
                        200,
                        201,
                        202,
                        203,
                        205
                    ],
                    "('parquet.pig.convert#TupleConverter', 'getGroupConverter(int)')": [
                        94
                    ],
                    "('parquet.pig.convert#TupleConverter', 'getPrimitiveConverter(int)')": [
                        102
                    ]
                },
                "new": {
                    "('parquet.pig.convert#TupleConverter', None)": [
                        44,
                        51,
                        52,
                        53,
                        55,
                        61,
                        200,
                        201,
                        202,
                        203,
                        205
                    ],
                    "('parquet.pig.convert#TupleConverter', 'getGroupConverter(int)')": [
                        94
                    ],
                    "('parquet.pig.convert#TupleConverter', 'getPrimitiveConverter(int)')": [
                        102
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/converter/BagConverter.java": {
                "old": {
                    "(None, None)": [
                        18,
                        19,
                        20
                    ],
                    "('parquet.pig.converter#BagConverter', None)": [
                        34,
                        36
                    ]
                },
                "new": {
                    "('parquet.pig.converter#BagConverter', None)": [
                        31,
                        33
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/converter/MapConverter.java": {
                "old": {
                    "('parquet.pig.converter#MapConverter', None)": [
                        34,
                        36
                    ]
                },
                "new": {
                    "('parquet.pig.converter#MapConverter', None)": [
                        34,
                        36
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/converter/MapKeyValueConverter.java": {
                "old": {
                    "('parquet.pig.converter#MapKeyValueConverter', None)": [
                        32,
                        34,
                        35,
                        36,
                        37
                    ]
                },
                "new": {
                    "('parquet.pig.converter#MapKeyValueConverter', None)": [
                        32,
                        34,
                        35,
                        36,
                        37
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/converter/MessageConverter.java": {
                "old": {
                    "('parquet.pig.converter#MessageConverter', None)": [
                        104,
                        105
                    ]
                },
                "new": {
                    "('parquet.pig.converter#MessageConverter', None)": [
                        104,
                        105
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/converter/TupleConverter.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22
                    ],
                    "('parquet.pig.converter#TupleConverter', None)": [
                        46,
                        48,
                        54
                    ]
                },
                "new": {
                    "('parquet.pig.converter#TupleConverter', None)": [
                        42,
                        44,
                        50
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/hadoop/TestInputFormat.java": {
                "old": {
                    "(None, None)": [
                        34,
                        35
                    ],
                    "('parquet.hadoop#TestInputFormat', 'testBlocksToSplits')": [
                        68,
                        71,
                        72,
                        73,
                        74,
                        75
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        35
                    ],
                    "('parquet.hadoop#TestInputFormat', 'testBlocksToSplits')": [
                        68,
                        71,
                        72,
                        73,
                        74,
                        75
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/GenerateIntTestFile.java": {
                "old": {
                    "(None, None)": [
                        35,
                        36,
                        38
                    ],
                    "('parquet.pig#GenerateIntTestFile', 'readTestFile(Path,Configuration)')": [
                        93,
                        95,
                        96
                    ],
                    "('parquet.pig#GenerateIntTestFile', 'writeToFile(Path,Configuration,MessageType,MemPageStore,int)')": [
                        102
                    ],
                    "('parquet.pig#GenerateIntTestFile', 'endFile(RedelmFileWriter)')": [
                        107
                    ],
                    "('parquet.pig#GenerateIntTestFile', 'writeBlock(MessageType,MemPageStore,int,RedelmFileWriter)')": [
                        112
                    ],
                    "('parquet.pig#GenerateIntTestFile', 'startFile(Path,Configuration,MessageType)')": [
                        131,
                        133
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        36,
                        38
                    ],
                    "('parquet.pig#GenerateIntTestFile', 'readTestFile(Path,Configuration)')": [
                        93,
                        95,
                        96
                    ],
                    "('parquet.pig#GenerateIntTestFile', 'writeToFile(Path,Configuration,MessageType,MemPageStore,int)')": [
                        102
                    ],
                    "('parquet.pig#GenerateIntTestFile', 'endFile(ParquetFileWriter)')": [
                        107
                    ],
                    "('parquet.pig#GenerateIntTestFile', 'writeBlock(MessageType,MemPageStore,int,ParquetFileWriter)')": [
                        112
                    ],
                    "('parquet.pig#GenerateIntTestFile', 'startFile(Path,Configuration,MessageType)')": [
                        131,
                        133
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/PerfTest.java": {
                "old": {
                    "(None, None)": [
                        34,
                        35
                    ],
                    "('parquet.pig#PerfTest', 'main(String)')": [
                        71
                    ],
                    "('parquet.pig#PerfTest', 'load(String,int)')": [
                        95
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        35
                    ],
                    "('parquet.pig#PerfTest', 'main(String)')": [
                        71
                    ],
                    "('parquet.pig#PerfTest', 'load(String,int)')": [
                        95
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/PerfTest2.java": {
                "old": {
                    "(None, None)": [
                        49,
                        50
                    ],
                    "('parquet.pig#PerfTest2', 'write(String)')": [
                        100
                    ],
                    "('parquet.pig#PerfTest2', 'load(String,int,StringBuilder)')": [
                        157
                    ]
                },
                "new": {
                    "(None, None)": [
                        49,
                        50
                    ],
                    "('parquet.pig#PerfTest2', 'write(String)')": [
                        100
                    ],
                    "('parquet.pig#PerfTest2', 'load(String,int,StringBuilder)')": [
                        157
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/TestPigSchemaConverter.java": {
                "old": {
                    "('parquet.pig#TestPigSchemaConverter', 'testConversion(String,String)')": [
                        31,
                        35,
                        36,
                        39
                    ]
                },
                "new": {
                    "('parquet.pig#TestPigSchemaConverter', 'testConversion(String,String)')": [
                        31,
                        35,
                        36,
                        39
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/TestTupleRecordConsumer.java": {
                "old": {
                    "('parquet.pig#TestTupleRecordConsumer', 'testFromTuple(String,List)')": [
                        121,
                        122,
                        123
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'newTupleWriter(MessageType,String,RecordMaterializer)')": [
                        167,
                        171
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'newPigRecordConsumer(MessageType,String)')": [
                        183,
                        185
                    ]
                },
                "new": {
                    "('parquet.pig#TestTupleRecordConsumer', 'testFromTuple(String,List)')": [
                        121,
                        122,
                        123
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'newTupleWriter(MessageType,String,RecordMaterializer)')": [
                        167,
                        171
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'newPigRecordConsumer(MessageType,String)')": [
                        183,
                        185
                    ]
                }
            }
        }
    }
}