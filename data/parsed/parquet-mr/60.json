{
    "819443bc195b58735c7a2489795a219ca662c65e": {
        "authored_data": "2021 May 26 07:43",
        "commit.message": "PARQUET-2052: Integer overflow when writing huge binary using dictionary encoding (#910)\n\n",
        "commit.author.name": "Chao Sun",
        "pcid": "8ae7f31e36a298804435565e0cae584aac90f6d5",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/column/values/dictionary/DictionaryValuesWriter.java": {
                "old": {
                    "('org.apache.parquet.column.values.dictionary#DictionaryValuesWriter', None)": [
                        84,
                        252
                    ],
                    "('org.apache.parquet.column.values.dictionary#DictionaryValuesWriter', 'getBytes')": [
                        176
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.values.dictionary#DictionaryValuesWriter', None)": [
                        84,
                        252
                    ],
                    "('org.apache.parquet.column.values.dictionary#DictionaryValuesWriter', 'getBytes')": [
                        176
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/values/dictionary/TestDictionary.java": {
                "new": {
                    "(None, None)": [
                        56
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'testBinaryDictionaryIntegerOverflow')": [
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', None)": [
                        187,
                        188,
                        189
                    ]
                }
            }
        }
    },
    "8ae7f31e36a298804435565e0cae584aac90f6d5": {
        "authored_data": "2021 May 24 03:07",
        "commit.message": "PARQUET-2041: Add zstd to `parquet.compression` description of ParquetOutputFormat Javadoc (#899)\n\nThe current Javadoc doesn't mention zstd.\r\n\r\nhttps://javadoc.io/doc/org.apache.parquet/parquet-hadoop/latest/org/apache/parquet/hadoop/ParquetOutputFormat.html\r\n\r\nThis PR aims to make Javadoc up-to-date by adding zstd.",
        "commit.author.name": "William Hyun",
        "pcid": "10794e63326606fe4abf5c726b8fff8683ca6c20",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetOutputFormat.java": {
                "old": {
                    "(None, None)": [
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        76
                    ]
                }
            }
        }
    },
    "10794e63326606fe4abf5c726b8fff8683ca6c20": {
        "authored_data": "2021 May 19 10:23",
        "commit.message": "PARQUET-2050: Expose repetition & definition level from ColumnIO (#908)\n\n",
        "commit.author.name": "Chao Sun",
        "pcid": "875a4bbd82bd47f1d4d68a7e79c80941d8a76f7c",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/io/ColumnIO.java": {
                "old": {
                    "('org.apache.parquet.io#ColumnIO', 'getRepetitionLevel')": [
                        74
                    ],
                    "('org.apache.parquet.io#ColumnIO', 'getDefinitionLevel')": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.parquet.io#ColumnIO', None)": [
                        74,
                        75,
                        76,
                        81,
                        82,
                        83
                    ],
                    "('org.apache.parquet.io#ColumnIO', 'getRepetitionLevel')": [
                        77
                    ],
                    "('org.apache.parquet.io#ColumnIO', 'getDefinitionLevel')": [
                        84
                    ]
                }
            }
        }
    },
    "875a4bbd82bd47f1d4d68a7e79c80941d8a76f7c": {
        "authored_data": "2021 May 18 08:23",
        "commit.message": "PARQUET-1761: Lower Logging Level in ParquetOutputFormat (#745)\n\n",
        "commit.author.name": "belugabehr",
        "pcid": "8465ac60302702192733fb51369e0cd60c10f9db",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetOutputFormat.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ParquetOutputFormat', 'getRecordWriter(Configuration,Path,CompressionCodecName,Mode)')": [
                        469,
                        470,
                        471,
                        472,
                        473,
                        474
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ParquetOutputFormat', 'getRecordWriter(Configuration,Path,CompressionCodecName,Mode)')": [
                        469,
                        470,
                        471,
                        472
                    ]
                }
            }
        }
    },
    "1007b053cceab0db7ed0b3d44b70d5882276eec4": {
        "authored_data": "2021 May 17 09:23",
        "commit.message": "PARQUET-2048: Deprecate BaseRecordReader (#906)\n\n",
        "commit.author.name": "belugabehr",
        "pcid": "19348dc36bd2429fe7b4c34268ab9706bd9a08ca",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/io/BaseRecordReader.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        30,
                        31,
                        32,
                        33,
                        34
                    ]
                }
            }
        }
    },
    "19348dc36bd2429fe7b4c34268ab9706bd9a08ca": {
        "authored_data": "2021 May 14 08:15",
        "commit.message": "PARQUET-1922: Deprecate IOExceptionUtils (#825)\n\n",
        "commit.author.name": "belugabehr",
        "pcid": "c72862b61399ff516e968fbd02885e573d4be81c",
        "changes": {
            "parquet-common/src/main/java/org/apache/parquet/IOExceptionUtils.java": {
                "new": {
                    "(None, None)": [
                        26,
                        28
                    ]
                }
            },
            "parquet-common/src/main/java/org/apache/parquet/bytes/LittleEndianDataOutputStream.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ],
                    "('org.apache.parquet.bytes#LittleEndianDataOutputStream', 'close')": [
                        214
                    ]
                },
                "new": {
                    "('org.apache.parquet.bytes#LittleEndianDataOutputStream', 'close')": [
                        211,
                        212
                    ],
                    "(None, None)": [
                        213,
                        214,
                        215
                    ]
                }
            }
        }
    },
    "c72862b61399ff516e968fbd02885e573d4be81c": {
        "authored_data": "2021 May 12 08:08",
        "commit.message": "PARQUET-2037: Write INT96 with parquet-avro (#901)\n\n",
        "commit.author.name": "Gabor Szadovszky",
        "pcid": "a3a1ad4e58518a469970b45ccef2fb64695c1894",
        "changes": {
            "parquet-avro/src/main/java/org/apache/parquet/avro/AvroSchemaConverter.java": {
                "old": {
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convert(Schema)')": [
                        137
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', None)": [
                        138,
                        139,
                        247,
                        248,
                        249
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convertFields(List)')": [
                        140,
                        146
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convertField(String,Schema)')": [
                        151,
                        152
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convertField(String,Schema,Type)')": [
                        156,
                        180,
                        186,
                        189,
                        192,
                        196,
                        197,
                        199
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convertUnion(String,Schema,Type)')": [
                        221,
                        242,
                        243,
                        246
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convertUnionToGroupType(String,Type,List)')": [
                        250,
                        254
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convertField(Schema)')": [
                        259,
                        260
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convertField(Type,Map)')": [
                        317
                    ]
                },
                "new": {
                    "(None, None)": [
                        38,
                        40,
                        44,
                        51,
                        548
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', None)": [
                        84,
                        101,
                        111,
                        145,
                        146,
                        261,
                        262,
                        263,
                        542
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convert(Schema)')": [
                        144
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convertFields(List,String)')": [
                        147,
                        153
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convertField(String,Schema,String)')": [
                        158,
                        159
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convertField(String,Schema,Type,String)')": [
                        163,
                        187,
                        193,
                        196,
                        199,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        213
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convertUnion(String,Schema,Type,String)')": [
                        235,
                        256,
                        257,
                        260
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convertUnionToGroupType(String,Type,List,String)')": [
                        264,
                        265,
                        269
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convertField(Schema,String)')": [
                        274,
                        275
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convertField(Type,Map)')": [
                        332
                    ],
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'appendPath(String,String)')": [
                        543,
                        544,
                        545,
                        546,
                        547
                    ]
                }
            },
            "parquet-avro/src/main/java/org/apache/parquet/avro/AvroWriteSupport.java": {
                "new": {
                    "('org.apache.parquet.avro#AvroWriteSupport', None)": [
                        69,
                        70,
                        71
                    ]
                }
            },
            "parquet-avro/src/test/java/org/apache/parquet/avro/TestAvroSchemaConverter.java": {
                "new": {
                    "(None, None)": [
                        47
                    ],
                    "('org.apache.parquet.avro#TestAvroSchemaConverter', None)": [
                        828,
                        857,
                        858
                    ],
                    "('org.apache.parquet.avro#TestAvroSchemaConverter', 'testAvroFixed12AsParquetInt96Type')": [
                        829,
                        830,
                        831,
                        832,
                        833,
                        834,
                        835,
                        836,
                        837,
                        838,
                        839,
                        840,
                        841,
                        842,
                        843,
                        844,
                        845,
                        846,
                        847,
                        848,
                        849,
                        850,
                        851,
                        852,
                        853,
                        854,
                        855,
                        856
                    ]
                }
            }
        }
    },
    "a3a1ad4e58518a469970b45ccef2fb64695c1894": {
        "authored_data": "2021 May 11 08:39",
        "commit.message": "PARQUET-2044: Enable ZSTD buffer pool by default (#903)\n\nThis PR aims to enable ZSTD buffer pool by default to improve the performance.\r\nThe default value of config and documentation is updated.\r\n",
        "commit.author.name": "Dongjoon Hyun",
        "pcid": "709fce1b72ef894febb1722d746f085b3d1050f8",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/codec/ZstandardCodec.java": {
                "old": {
                    "('org.apache.parquet.hadoop.codec#ZstandardCodec', None)": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop.codec#ZstandardCodec', None)": [
                        50
                    ]
                }
            }
        }
    },
    "709fce1b72ef894febb1722d746f085b3d1050f8": {
        "authored_data": "2021 May 04 12:43",
        "commit.message": "PARQUET-2038: Upgrade Jackson version used in parquet encryption. (#898)\n\n",
        "commit.author.name": "andersonm-ibm",
        "pcid": "10fd78252ea2f7beff8e5af5c6ee2917c9dceca2",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/crypto/keytools/HadoopFSKeyMaterialStore.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29
                    ],
                    "('org.apache.parquet.crypto.keytools#HadoopFSKeyMaterialStore', 'loadKeyMaterialMap')": [
                        78
                    ],
                    "('org.apache.parquet.crypto.keytools#HadoopFSKeyMaterialStore', 'saveMaterial')": [
                        90
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        33
                    ],
                    "('org.apache.parquet.crypto.keytools#HadoopFSKeyMaterialStore', 'loadKeyMaterialMap')": [
                        79
                    ],
                    "('org.apache.parquet.crypto.keytools#HadoopFSKeyMaterialStore', 'saveMaterial')": [
                        91
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/crypto/keytools/KeyMaterial.java": {
                "old": {
                    "(None, None)": [
                        28,
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/crypto/keytools/KeyMetadata.java": {
                "old": {
                    "(None, None)": [
                        29,
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        30
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/crypto/keytools/LocalWrapKmsClient.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/crypto/keytools/samples/VaultClient.java": {
                "old": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.parquet.crypto.keytools.samples#VaultClient', 'parseReturn(String,String)')": [
                        174
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.parquet.crypto.keytools.samples#VaultClient', 'parseReturn(String,String)')": [
                        174
                    ]
                }
            }
        }
    }
}