{
    "9461845576fd762e6a9b8d17c551f38c351b017d": {
        "authored_data": "2019 Feb 12 12:04",
        "commit.message": "PARQUET-1527:  [parquet-tools] cat command throw java.lang.ClassCastException (#612)\n\n",
        "commit.author.name": "Masayuki Takahashi",
        "pcid": "7dcdcdcf0eb5e91618c443d4a84973bf7883d79b",
        "changes": {
            "parquet-tools/src/main/java/org/apache/parquet/tools/read/SimpleRecordConverter.java": {
                "new": {
                    "('org.apache.parquet.tools.read#SimpleRecordConverter', 'createConverter(Type)')": [
                        74
                    ]
                }
            }
        }
    },
    "7dcdcdcf0eb5e91618c443d4a84973bf7883d79b": {
        "authored_data": "2019 Feb 12 10:33",
        "commit.message": "PARQUET-1485: Fix Snappy direct memory leak (#581)\n\n",
        "commit.author.name": "PengchengLiu",
        "pcid": "6901a2040848c6b37fa61f4b0a76246445f396db",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/codec/SnappyCompressor.java": {
                "old": {
                    "('org.apache.parquet.hadoop.codec#SnappyCompressor', None)": [
                        36,
                        39
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop.codec#SnappyCompressor', None)": [
                        35,
                        36,
                        38,
                        41,
                        46,
                        47,
                        48,
                        49,
                        50
                    ],
                    "('org.apache.parquet.hadoop.codec#SnappyCompressor', 'compress(byte,int,int)')": [
                        76,
                        78
                    ],
                    "('org.apache.parquet.hadoop.codec#SnappyCompressor', 'setInput(byte,int,int)')": [
                        109,
                        111
                    ],
                    "('org.apache.parquet.hadoop.codec#SnappyCompressor', 'reset')": [
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/codec/SnappyDecompressor.java": {
                "old": {
                    "('org.apache.parquet.hadoop.codec#SnappyDecompressor', None)": [
                        31,
                        34,
                        37
                    ],
                    "('org.apache.parquet.hadoop.codec#SnappyDecompressor', 'setInput(byte,int,int)')": [
                        105
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop.codec#SnappyDecompressor', None)": [
                        30,
                        31,
                        33,
                        36,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44
                    ],
                    "('org.apache.parquet.hadoop.codec#SnappyDecompressor', 'decompress(byte,int,int)')": [
                        71,
                        73
                    ],
                    "('org.apache.parquet.hadoop.codec#SnappyDecompressor', 'setInput(byte,int,int)')": [
                        114,
                        115,
                        116
                    ],
                    "('org.apache.parquet.hadoop.codec#SnappyDecompressor', 'reset')": [
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156
                    ]
                }
            }
        }
    },
    "6901a2040848c6b37fa61f4b0a76246445f396db": {
        "authored_data": "2019 Feb 07 12:31",
        "commit.message": "PARQUET-1480 INT96 to avro not yet implemented error should mention deprecation (#579)\n\n",
        "commit.author.name": "Tim Sell",
        "pcid": "714bb450856dc951bd361e0cf4a732775eb3cefd",
        "changes": {
            "parquet-avro/src/main/java/org/apache/parquet/avro/AvroSchemaConverter.java": {
                "old": {
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convertField(Type)')": [
                        294
                    ]
                },
                "new": {
                    "('org.apache.parquet.avro#AvroSchemaConverter', 'convertField(Type)')": [
                        294
                    ]
                }
            }
        }
    },
    "714bb450856dc951bd361e0cf4a732775eb3cefd": {
        "authored_data": "2019 Feb 07 12:26",
        "commit.message": "PARQUET-1505: Use Java 7 NIO StandardCharsets (#599)\n\n",
        "commit.author.name": "BELUGABEHR",
        "pcid": "5bd126557cdbfccef9d0b282230cdd671c003c4f",
        "changes": {
            "parquet-avro/src/test/java/org/apache/parquet/avro/TestReadWrite.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testAll')": [
                        372,
                        401
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testAllUsingDefaultAvroSchema')": [
                        570,
                        618
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testAll')": [
                        372,
                        401
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testAllUsingDefaultAvroSchema')": [
                        570,
                        618
                    ]
                }
            },
            "parquet-avro/src/test/java/org/apache/parquet/avro/TestReadWriteOldListBehavior.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.parquet.avro#TestReadWriteOldListBehavior', 'testAll')": [
                        250,
                        279
                    ],
                    "('org.apache.parquet.avro#TestReadWriteOldListBehavior', 'testArrayWithNullValues')": [
                        330
                    ],
                    "('org.apache.parquet.avro#TestReadWriteOldListBehavior', 'testAllUsingDefaultAvroSchema')": [
                        515,
                        576
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.parquet.avro#TestReadWriteOldListBehavior', 'testAll')": [
                        250,
                        279
                    ],
                    "('org.apache.parquet.avro#TestReadWriteOldListBehavior', 'testArrayWithNullValues')": [
                        330
                    ],
                    "('org.apache.parquet.avro#TestReadWriteOldListBehavior', 'testAllUsingDefaultAvroSchema')": [
                        515,
                        576
                    ]
                }
            },
            "parquet-cli/src/main/java/org/apache/parquet/cli/BaseCommand.java": {
                "old": {
                    "(None, None)": [
                        23,
                        55
                    ],
                    "('org.apache.parquet.cli#BaseCommand', None)": [
                        62,
                        63,
                        64
                    ],
                    "('org.apache.parquet.cli#BaseCommand', 'output(String,Logger,String)')": [
                        106
                    ]
                },
                "new": {
                    "(None, None)": [
                        54
                    ],
                    "('org.apache.parquet.cli#BaseCommand', 'output(String,Logger,String)')": [
                        102
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/io/api/Binary.java": {
                "old": {
                    "(None, None)": [
                        26,
                        34,
                        37,
                        38
                    ],
                    "('org.apache.parquet.io.api#Binary', None)": [
                        136,
                        137,
                        138,
                        139,
                        140,
                        223,
                        224,
                        225,
                        226,
                        227,
                        287,
                        396,
                        397,
                        398,
                        399,
                        400,
                        409
                    ]
                },
                "new": {
                    "('org.apache.parquet.io.api#Binary', None)": [
                        132,
                        133,
                        134,
                        135,
                        218,
                        278,
                        387,
                        388,
                        397
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/values/dictionary/TestDictionary.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'writeRepeatedWithReuse(int,ValuesWriter,String)')": [
                        630,
                        631,
                        632
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'writeRepeatedWithReuse(int,ValuesWriter,String)')": [
                        630,
                        631
                    ]
                }
            },
            "parquet-common/src/main/java/org/apache/parquet/bytes/BytesUtils.java": {
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.parquet.bytes#BytesUtils', None)": [
                        38,
                        39
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', None)": [
                        104
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', None)": [
                        104
                    ]
                }
            }
        }
    },
    "5bd126557cdbfccef9d0b282230cdd671c003c4f": {
        "authored_data": "2019 Feb 06 09:20",
        "commit.message": "PARQUET-1514: ParquetFileWriter Records Compressed Bytes instead of Uncompressed Bytes (#607)\n\n",
        "commit.author.name": "BELUGABEHR",
        "pcid": "82935e6da8c9f2801d77afba998d3de622e3e7f3",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'appendRowGroup(SeekableInputStream,BlockMetaData,boolean)')": [
                        853,
                        894,
                        895,
                        896,
                        897
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'appendRowGroup(SeekableInputStream,BlockMetaData,boolean)')": [
                        853,
                        894,
                        895,
                        896,
                        897
                    ]
                }
            }
        }
    },
    "82935e6da8c9f2801d77afba998d3de622e3e7f3": {
        "authored_data": "2019 Feb 06 08:51",
        "commit.message": "PARQUET-1470: Inputstream leakage in ParquetFileWriter.appendFile (#611)\n\n",
        "commit.author.name": "Fokko Driesprong",
        "pcid": "3537c88f7f7af8bdddaadd6d49ac920d6ad4d68b",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'appendFile(InputFile)')": [
                        667
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'appendFile(InputFile)')": [
                        667,
                        668
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', None)": [
                        669
                    ]
                }
            }
        }
    },
    "51c4cc30f5df1f070a211cfed652aefdc096de69": {
        "authored_data": "2019 Feb 01 18:49",
        "commit.message": "PARQUET-138: Allow merging more restrictive field in less restrictive field (#550)\n\n* Allow merging more restrictive field in less restrictive field\r\n* Make class and function names more explicit\r\n",
        "commit.author.name": "Nicolas Trinquier",
        "pcid": "1b103da225d67bb8796e064fdf334ef363e0faa9",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/schema/GroupType.java": {
                "old": {
                    "('org.apache.parquet.schema#GroupType', 'mergeFields(GroupType,boolean)')": [
                        403,
                        404,
                        405
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/schema/PrimitiveType.java": {
                "old": {
                    "('org.apache.parquet.schema#PrimitiveType', 'union(Type,boolean)')": [
                        753
                    ]
                },
                "new": {
                    "('org.apache.parquet.schema#PrimitiveType', 'union(Type,boolean)')": [
                        753,
                        754
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/schema/Type.java": {
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.schema#Type', None)": [
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/schema/TestMessageType.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24,
                        25
                    ],
                    "('org.apache.parquet.schema#TestMessageType', 'testMergeSchema')": [
                        92,
                        93,
                        94,
                        95,
                        96,
                        97
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        32
                    ],
                    "('org.apache.parquet.schema#TestMessageType', 'testMergeSchema')": [
                        92,
                        93,
                        94,
                        95,
                        96
                    ]
                }
            }
        }
    }
}