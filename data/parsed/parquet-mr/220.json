{
    "a7447f698e5d8a1fff5b1542a70e42273b1b6373": {
        "authored_data": "2020 Jan 05 18:25",
        "commit.message": "PARQUET-1731: Use JDK 8 Facilities to Simplify FilteringRecordMaterializer (#719)\n\n",
        "commit.author.name": "belugabehr",
        "pcid": "cce6fdb3304894e23231b10e1c758631e52df2d8",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/filter2/recordlevel/FilteringRecordMaterializer.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.parquet.filter2.recordlevel#FilteringRecordMaterializer', None)": [
                        64,
                        67,
                        72,
                        74,
                        77,
                        78,
                        85,
                        86,
                        87,
                        103
                    ],
                    "('org.apache.parquet.filter2.recordlevel#FilteringRecordMaterializer', 'getIndexFieldPathList(PrimitiveColumnIO)')": [
                        75,
                        76
                    ],
                    "('org.apache.parquet.filter2.recordlevel#FilteringRecordMaterializer', 'intArrayToList(int)')": [
                        79,
                        80,
                        81,
                        82,
                        83,
                        84
                    ],
                    "('org.apache.parquet.filter2.recordlevel#FilteringRecordMaterializer', 'getCurrentRecord')": [
                        98,
                        99,
                        100,
                        101,
                        102
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        26
                    ],
                    "('org.apache.parquet.filter2.recordlevel#FilteringRecordMaterializer', None)": [
                        65,
                        68,
                        69,
                        70,
                        75,
                        76
                    ],
                    "('org.apache.parquet.filter2.recordlevel#FilteringRecordMaterializer', 'getCurrentRecord')": [
                        88,
                        89
                    ]
                }
            }
        }
    },
    "cce6fdb3304894e23231b10e1c758631e52df2d8": {
        "authored_data": "2020 Jan 05 18:25",
        "commit.message": "PARQUET-1732: Call toArray With Empty Array (#720)\n\n",
        "commit.author.name": "belugabehr",
        "pcid": "3d8ce063986ad623d6ade4b55f1bbb1eb39f7641",
        "changes": {
            "parquet-cli/src/main/java/org/apache/parquet/cli/csv/RecordBuilder.java": {
                "old": {
                    "('org.apache.parquet.cli.csv#RecordBuilder', None)": [
                        42
                    ]
                },
                "new": {
                    "('org.apache.parquet.cli.csv#RecordBuilder', None)": [
                        42
                    ]
                }
            },
            "parquet-cli/src/main/java/org/apache/parquet/cli/util/GetClassLoader.java": {
                "old": {
                    "('org.apache.parquet.cli.util#GetClassLoader', None)": [
                        31
                    ]
                },
                "new": {
                    "('org.apache.parquet.cli.util#GetClassLoader', None)": [
                        31
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/recordlevel/FilteringGroupConverter.java": {
                "old": {
                    "('org.apache.parquet.filter2.recordlevel#FilteringGroupConverter', 'getValueInspectors(ColumnPath)')": [
                        99,
                        100,
                        101,
                        102
                    ],
                    "('org.apache.parquet.filter2.recordlevel#FilteringGroupConverter', None)": [
                        103
                    ]
                },
                "new": {
                    "('org.apache.parquet.filter2.recordlevel#FilteringGroupConverter', 'getValueInspectors(ColumnPath)')": [
                        99,
                        100
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/internal/column/columnindex/BinaryColumnIndexBuilder.java": {
                "old": {
                    "('org.apache.parquet.internal.column.columnindex#BinaryColumnIndexBuilder', 'createColumnIndex(PrimitiveType)')": [
                        115,
                        116
                    ]
                },
                "new": {
                    "('org.apache.parquet.internal.column.columnindex#BinaryColumnIndexBuilder', 'createColumnIndex(PrimitiveType)')": [
                        115,
                        116
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/io/PrimitiveColumnIO.java": {
                "old": {
                    "('org.apache.parquet.io#PrimitiveColumnIO', 'setLevels(int,int,String,int,List,List)')": [
                        55
                    ]
                },
                "new": {
                    "('org.apache.parquet.io#PrimitiveColumnIO', 'setLevels(int,int,String,int,List,List)')": [
                        55
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/io/RecordReaderImplementation.java": {
                "old": {
                    "('org.apache.parquet.io#RecordReaderImplementation', None)": [
                        252
                    ]
                },
                "new": {
                    "('org.apache.parquet.io#RecordReaderImplementation', None)": [
                        252
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/format/converter/ParquetMetadataConverter.java": {
                "old": {
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'getPath(ColumnMetaData)')": [
                        1279
                    ]
                },
                "new": {
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'getPath(ColumnMetaData)')": [
                        1279
                    ]
                }
            },
            "parquet-tools/src/main/java/org/apache/parquet/tools/command/MetadataUtils.java": {
                "old": {
                    "('org.apache.parquet.tools.command#MetadataUtils', 'showDetails(PrettyPrintWriter,PrimitiveType,int,MessageType,List,boolean)')": [
                        191
                    ]
                },
                "new": {
                    "('org.apache.parquet.tools.command#MetadataUtils', 'showDetails(PrettyPrintWriter,PrimitiveType,int,MessageType,List,boolean)')": [
                        191
                    ]
                }
            },
            "parquet-tools/src/main/java/org/apache/parquet/tools/util/MetadataUtils.java": {
                "old": {
                    "('org.apache.parquet.tools.util#MetadataUtils', 'showDetails(PrettyPrintWriter,PrimitiveType,int,MessageType,List)')": [
                        213
                    ]
                },
                "new": {
                    "('org.apache.parquet.tools.util#MetadataUtils', 'showDetails(PrettyPrintWriter,PrimitiveType,int,MessageType,List)')": [
                        213
                    ]
                }
            }
        }
    },
    "3d8ce063986ad623d6ade4b55f1bbb1eb39f7641": {
        "authored_data": "2020 Jan 05 18:24",
        "commit.message": "PARQUET-1727: Do Not Swallow InterruptedException in ParquetLoader (#715)\n\n",
        "commit.author.name": "belugabehr",
        "pcid": "1e15f604302ab96904eaa1c3d435d2a5b3632d3f",
        "changes": {
            "parquet-pig/src/main/java/org/apache/parquet/pig/ParquetLoader.java": {
                "old": {
                    "('org.apache.parquet.pig#ParquetLoader', 'getNext')": [
                        259
                    ],
                    "('org.apache.parquet.pig#ParquetLoader', 'getStatistics(String,Job)')": [
                        334
                    ]
                },
                "new": {
                    "('org.apache.parquet.pig#ParquetLoader', 'getNext')": [
                        259
                    ],
                    "('org.apache.parquet.pig#ParquetLoader', 'getStatistics(String,Job)')": [
                        334,
                        335
                    ]
                }
            }
        }
    },
    "1e15f604302ab96904eaa1c3d435d2a5b3632d3f": {
        "authored_data": "2020 Jan 02 13:00",
        "commit.message": "PARQUET-1726: Use Java 8 Multi Exception Handling (#714)\n\n",
        "commit.author.name": "belugabehr",
        "pcid": "b9f16e50244a4c7df9ea81baef5843a17d55d91c",
        "changes": {
            "parquet-avro/src/main/java/org/apache/parquet/avro/AvroConverters.java": {
                "old": {
                    "('org.apache.parquet.avro#AvroConverters', None)": [
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282
                    ]
                },
                "new": {
                    "('org.apache.parquet.avro#AvroConverters', None)": [
                        276,
                        277
                    ]
                }
            },
            "parquet-avro/src/main/java/org/apache/parquet/avro/AvroRecordConverter.java": {
                "old": {
                    "('org.apache.parquet.avro#AvroRecordConverter', 'getDatumClass(Conversion,Class,Schema,GenericData)')": [
                        384,
                        385,
                        386
                    ]
                },
                "new": {
                    "('org.apache.parquet.avro#AvroRecordConverter', 'getDatumClass(Conversion,Class,Schema,GenericData)')": [
                        384
                    ]
                }
            },
            "parquet-cli/src/main/java/org/apache/parquet/cli/json/AvroJson.java": {
                "old": {
                    "('org.apache.parquet.cli.json#AvroJson', 'parse(String,Class)')": [
                        83,
                        84,
                        85
                    ],
                    "('org.apache.parquet.cli.json#AvroJson', 'parse(InputStream,Class)')": [
                        99,
                        100,
                        101
                    ]
                },
                "new": {
                    "('org.apache.parquet.cli.json#AvroJson', 'parse(String,Class)')": [
                        83
                    ],
                    "('org.apache.parquet.cli.json#AvroJson', 'parse(InputStream,Class)')": [
                        97
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/CorruptDeltaByteArrays.java": {
                "old": {
                    "('org.apache.parquet#CorruptDeltaByteArrays', 'requiresSequentialReads(String,Encoding)')": [
                        87,
                        88,
                        89,
                        90
                    ]
                },
                "new": {
                    "('org.apache.parquet#CorruptDeltaByteArrays', 'requiresSequentialReads(String,Encoding)')": [
                        87
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/CorruptStatistics.java": {
                "old": {
                    "('org.apache.parquet#CorruptStatistics', 'shouldIgnoreStatistics(String,PrimitiveTypeName)')": [
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107
                    ]
                },
                "new": {
                    "('org.apache.parquet#CorruptStatistics', 'shouldIgnoreStatistics(String,PrimitiveTypeName)')": [
                        97
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/impl/ColumnReadStoreImpl.java": {
                "old": {
                    "('org.apache.parquet.column.impl#ColumnReadStoreImpl', None)": [
                        68,
                        69,
                        70
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.impl#ColumnReadStoreImpl', None)": [
                        68
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/plain/BinaryPlainValuesReader.java": {
                "old": {
                    "('org.apache.parquet.column.values.plain#BinaryPlainValuesReader', 'readBytes')": [
                        41,
                        42,
                        43
                    ],
                    "('org.apache.parquet.column.values.plain#BinaryPlainValuesReader', 'skip')": [
                        53,
                        54,
                        55
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.values.plain#BinaryPlainValuesReader', 'readBytes')": [
                        41
                    ],
                    "('org.apache.parquet.column.values.plain#BinaryPlainValuesReader', 'skip')": [
                        51
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/predicate/Operators.java": {
                "old": {
                    "('org.apache.parquet.filter2.predicate#Operators', None)": [
                        405,
                        406,
                        407
                    ]
                },
                "new": {
                    "('org.apache.parquet.filter2.predicate#Operators', None)": [
                        405
                    ]
                }
            },
            "parquet-common/src/main/java/org/apache/parquet/VersionParser.java": {
                "old": {
                    "('org.apache.parquet#VersionParser', None)": [
                        56,
                        57,
                        58,
                        59
                    ]
                },
                "new": {
                    "('org.apache.parquet#VersionParser', None)": [
                        56
                    ]
                }
            },
            "parquet-common/src/main/java/org/apache/parquet/util/DynConstructors.java": {
                "old": {
                    "('org.apache.parquet.util#DynConstructors', None)": [
                        50,
                        51,
                        52,
                        139,
                        142,
                        143,
                        144,
                        145,
                        179,
                        181,
                        182,
                        183,
                        199,
                        200,
                        201,
                        202,
                        203
                    ]
                },
                "new": {
                    "('org.apache.parquet.util#DynConstructors', None)": [
                        50,
                        137,
                        140,
                        141,
                        175,
                        192,
                        193
                    ]
                }
            },
            "parquet-common/src/main/java/org/apache/parquet/util/DynMethods.java": {
                "old": {
                    "('org.apache.parquet.util#DynMethods', None)": [
                        389,
                        390,
                        391,
                        392
                    ]
                },
                "new": {
                    "('org.apache.parquet.util#DynMethods', None)": [
                        389,
                        390
                    ]
                }
            },
            "parquet-encoding/src/main/java/org/apache/parquet/column/values/bitpacking/Packer.java": {
                "old": {
                    "(None, None)": [
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87
                    ]
                },
                "new": {
                    "(None, None)": [
                        79,
                        80
                    ]
                }
            },
            "parquet-format-structures/src/main/java/org/apache/parquet/format/event/Consumers.java": {
                "old": {
                    "('org.apache.parquet.format.event#TBaseStructConsumer', 'newObject')": [
                        186,
                        187,
                        188
                    ]
                },
                "new": {
                    "('org.apache.parquet.format.event#TBaseStructConsumer', 'newObject')": [
                        186
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/DirectCodecFactory.java": {
                "old": {
                    "('org.apache.parquet.hadoop#DirectCodecFactory', None)": [
                        68,
                        70,
                        71,
                        215,
                        216,
                        217
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#DirectCodecFactory', None)": [
                        68,
                        213
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetInputFormat.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ParquetInputFormat', 'getUnboundRecordFilterInstance(Configuration)')": [
                        198,
                        199,
                        200,
                        201
                    ],
                    "('org.apache.parquet.hadoop#ParquetInputFormat', 'getReadSupportInstance(Class)')": [
                        315,
                        316,
                        317
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ParquetInputFormat', 'getUnboundRecordFilterInstance(Configuration)')": [
                        198,
                        199,
                        200
                    ],
                    "('org.apache.parquet.hadoop#ParquetInputFormat', 'getReadSupportInstance(Class)')": [
                        314
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetOutputFormat.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ParquetOutputFormat', 'getWriteSupport(Configuration)')": [
                        506,
                        507,
                        508
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ParquetOutputFormat', 'getWriteSupport(Configuration)')": [
                        506
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/ParquetMetadata.java": {
                "old": {
                    "('org.apache.parquet.hadoop.metadata#ParquetMetadata', 'toJSON(ParquetMetadata,boolean)')": [
                        72,
                        73,
                        74,
                        75
                    ],
                    "('org.apache.parquet.hadoop.metadata#ParquetMetadata', 'fromJSON(String)')": [
                        90,
                        91,
                        92,
                        93
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/util/ContextUtil.java": {
                "old": {
                    "('org.apache.parquet.hadoop.util#ContextUtil', 'newJobContext(Configuration,JobID)')": [
                        209,
                        210,
                        211,
                        212,
                        213
                    ],
                    "('org.apache.parquet.hadoop.util#ContextUtil', 'newTaskAttemptContext(Configuration,TaskAttemptID)')": [
                        231,
                        232,
                        233,
                        234,
                        235,
                        236
                    ],
                    "('org.apache.parquet.hadoop.util#ContextUtil', 'newGenericCounter(String,String,long)')": [
                        251,
                        252,
                        253,
                        254,
                        255
                    ],
                    "('org.apache.parquet.hadoop.util#ContextUtil', 'getConfiguration(JobContext)')": [
                        270,
                        271,
                        272
                    ],
                    "('org.apache.parquet.hadoop.util#ContextUtil', 'invoke(Method,Object,Object)')": [
                        317,
                        318,
                        319
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop.util#ContextUtil', 'newJobContext(Configuration,JobID)')": [
                        209,
                        210
                    ],
                    "('org.apache.parquet.hadoop.util#ContextUtil', 'newTaskAttemptContext(Configuration,TaskAttemptID)')": [
                        228,
                        229,
                        230,
                        231
                    ],
                    "('org.apache.parquet.hadoop.util#ContextUtil', 'newGenericCounter(String,String,long)')": [
                        246,
                        247
                    ],
                    "('org.apache.parquet.hadoop.util#ContextUtil', 'getConfiguration(JobContext)')": [
                        262
                    ],
                    "('org.apache.parquet.hadoop.util#ContextUtil', 'invoke(Method,Object,Object)')": [
                        307
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/util/HadoopStreams.java": {
                "old": {
                    "('org.apache.parquet.hadoop.util#HadoopStreams', 'wrap(FSDataInputStream)')": [
                        57,
                        58,
                        59,
                        60
                    ],
                    "('org.apache.parquet.hadoop.util#HadoopStreams', 'getReadableClass')": [
                        75,
                        76,
                        77
                    ],
                    "('org.apache.parquet.hadoop.util#HadoopStreams', 'getH2SeekableClass')": [
                        87,
                        88,
                        89
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop.util#HadoopStreams', 'wrap(FSDataInputStream)')": [
                        57
                    ],
                    "('org.apache.parquet.hadoop.util#HadoopStreams', 'getReadableClass')": [
                        72
                    ],
                    "('org.apache.parquet.hadoop.util#HadoopStreams', 'getH2SeekableClass')": [
                        82
                    ]
                }
            },
            "parquet-pig/src/main/java/org/apache/parquet/pig/TupleWriteSupport.java": {
                "old": {
                    "('org.apache.parquet.pig#TupleWriteSupport', 'write(Tuple)')": [
                        100,
                        101,
                        102
                    ]
                },
                "new": {
                    "('org.apache.parquet.pig#TupleWriteSupport', 'write(Tuple)')": [
                        100
                    ]
                }
            },
            "parquet-pig/src/main/java/org/apache/parquet/pig/convert/TupleConverter.java": {
                "old": {
                    "('org.apache.parquet.pig.convert#TupleConverter', 'newConverter(FieldSchema,Type,ParentValueContainer,boolean,boolean)')": [
                        145,
                        146,
                        147,
                        148
                    ]
                },
                "new": {
                    "('org.apache.parquet.pig.convert#TupleConverter', 'newConverter(FieldSchema,Type,ParentValueContainer,boolean,boolean)')": [
                        145,
                        146,
                        147
                    ]
                }
            },
            "parquet-pig/src/main/java/org/apache/parquet/pig/summary/SummaryData.java": {
                "old": {
                    "('org.apache.parquet.pig.summary#SummaryData', 'toJSON(SummaryData,ObjectMapper)')": [
                        61,
                        62,
                        63,
                        64
                    ],
                    "('org.apache.parquet.pig.summary#SummaryData', 'fromJSON(String,Class)')": [
                        74,
                        75,
                        76,
                        77
                    ]
                }
            },
            "parquet-thrift/src/main/java/org/apache/parquet/hadoop/thrift/ThriftBytesWriteSupport.java": {
                "old": {
                    "('org.apache.parquet.hadoop.thrift#ThriftBytesWriteSupport', 'init(Configuration)')": [
                        109,
                        110,
                        111
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop.thrift#ThriftBytesWriteSupport', 'init(Configuration)')": [
                        109
                    ]
                }
            },
            "parquet-thrift/src/main/java/org/apache/parquet/hadoop/thrift/ThriftReadSupport.java": {
                "old": {
                    "('org.apache.parquet.hadoop.thrift#ThriftReadSupport', 'getRecordConverterInstance(String,Class,MessageType,StructType,Configuration)')": [
                        267,
                        269,
                        270,
                        276,
                        277,
                        278
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop.thrift#ThriftReadSupport', 'getRecordConverterInstance(String,Class,MessageType,StructType,Configuration)')": [
                        267,
                        274
                    ]
                }
            }
        }
    },
    "b9f16e50244a4c7df9ea81baef5843a17d55d91c": {
        "authored_data": "2020 Jan 02 12:52",
        "commit.message": "PARQUET-1724: Use ConcurrentHashMap for Cache in DictionaryPageReader (#712)\n\n",
        "commit.author.name": "belugabehr",
        "pcid": "3b4ecf2c7029d12265b3e97a1f8ea98da1c1e5c2",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/DictionaryPageReader.java": {
                "old": {
                    "('org.apache.parquet.hadoop#DictionaryPageReader', None)": [
                        51,
                        55,
                        56,
                        108,
                        121
                    ],
                    "('org.apache.parquet.hadoop#DictionaryPageReader', 'readDictionaryPage(ColumnDescriptor)')": [
                        85,
                        88,
                        89,
                        90,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        103,
                        104,
                        105,
                        106,
                        107
                    ],
                    "('org.apache.parquet.hadoop#DictionaryPageReader', 'reusableCopy(DictionaryPage)')": [
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        35,
                        37
                    ],
                    "('org.apache.parquet.hadoop#DictionaryPageReader', None)": [
                        54,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        67,
                        68,
                        69,
                        70
                    ],
                    "('org.apache.parquet.hadoop#DictionaryPageReader', 'readDictionaryPage(ColumnDescriptor)')": [
                        99,
                        102,
                        103,
                        104,
                        105,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        114
                    ],
                    "('org.apache.parquet.hadoop#DictionaryPageReader', 'reusableCopy(DictionaryPage)')": [
                        117,
                        118,
                        119,
                        120
                    ]
                }
            }
        }
    },
    "3b4ecf2c7029d12265b3e97a1f8ea98da1c1e5c2": {
        "authored_data": "2020 Jan 02 12:46",
        "commit.message": "PARQUET-1723: Read From Maps without using .contains(...) (#711)\n\n",
        "commit.author.name": "belugabehr",
        "pcid": "2c9ccf9cdf67b460ffbd97ed547963b81fb11a69",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/column/EncodingStats.java": {
                "old": {
                    "('org.apache.parquet.column#EncodingStats', 'getNumDictionaryPagesEncodedAs(Encoding)')": [
                        60,
                        61,
                        62,
                        63
                    ],
                    "('org.apache.parquet.column#EncodingStats', None)": [
                        64,
                        72
                    ],
                    "('org.apache.parquet.column#EncodingStats', 'getNumDataPagesEncodedAs(Encoding)')": [
                        68,
                        69,
                        70,
                        71
                    ]
                },
                "new": {
                    "('org.apache.parquet.column#EncodingStats', 'getNumDictionaryPagesEncodedAs(Encoding)')": [
                        60,
                        61
                    ],
                    "('org.apache.parquet.column#EncodingStats', 'getNumDataPagesEncodedAs(Encoding)')": [
                        65,
                        66
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/schema/GroupType.java": {
                "old": {
                    "('org.apache.parquet.schema#GroupType', 'getFieldIndex(String)')": [
                        174,
                        177
                    ]
                },
                "new": {
                    "('org.apache.parquet.schema#GroupType', 'getFieldIndex(String)')": [
                        174,
                        175,
                        178
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/ParquetReadOptions.java": {
                "old": {
                    "('org.apache.parquet#ParquetReadOptions', 'isEnabled(String,boolean)')": [
                        137,
                        138,
                        139,
                        140
                    ],
                    "('org.apache.parquet#ParquetReadOptions', None)": [
                        141
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.parquet#ParquetReadOptions', 'isEnabled(String,boolean)')": [
                        138,
                        139,
                        140
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ColumnChunkPageReadStore.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ColumnChunkPageReadStore', 'getPageReader(ColumnDescriptor)')": [
                        230,
                        233
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ColumnChunkPageReadStore', 'getPageReader(ColumnDescriptor)')": [
                        230,
                        231,
                        234
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/MemoryManager.java": {
                "old": {
                    "('org.apache.parquet.hadoop#MemoryManager', 'removeWriter(InternalParquetRecordWriter)')": [
                        95,
                        96,
                        97
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#MemoryManager', 'removeWriter(InternalParquetRecordWriter)')": [
                        95
                    ]
                }
            }
        }
    },
    "4ca29c7114237d4bb039b7291fa2c8c182170109": {
        "authored_data": "2019 Dec 12 16:42",
        "commit.message": "[PARQUET-1717] Convert i16 thrift to INT16 logical type instead (#706)\n\n* [PARQUET-1717] Convert i16 thrift to INT16 logical type instead of INT32 primitive\r\n\r\n* [Parquet-1717] Add unit test\r\nAdd unit test for i16 thrift type\r\n",
        "commit.author.name": "Emmanuel",
        "pcid": "475b44646c00d3128e0dd6a896b48f5e2d0eef1a",
        "changes": {
            "parquet-thrift/src/main/java/org/apache/parquet/thrift/ThriftSchemaConvertVisitor.java": {
                "old": {
                    "('org.apache.parquet.thrift#ThriftSchemaConvertVisitor', 'visit(I16Type,State)')": [
                        317
                    ]
                },
                "new": {
                    "('org.apache.parquet.thrift#ThriftSchemaConvertVisitor', 'visit(I16Type,State)')": [
                        317
                    ]
                }
            },
            "parquet-thrift/src/test/java/org/apache/parquet/thrift/TestThriftSchemaConverter.java": {
                "new": {
                    "(None, None)": [
                        31,
                        351,
                        352
                    ],
                    "('org.apache.parquet.thrift#TestThriftSchemaConverter', None)": [
                        341,
                        342
                    ],
                    "('org.apache.parquet.thrift#TestThriftSchemaConverter', 'testLogicalTypeConvertion')": [
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350
                    ]
                }
            }
        }
    }
}