{
    "2dbd0d232e11dde8944b5cc41486aabcee6dc7d1": {
        "authored_data": "2013 Jun 05 21:35",
        "commit.message": "Remove logic for valueCount > Integer.MAX_VALUE\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "7cf85cb4e0ea7d25223b9a2773c7a8d629830ea5",
        "changes": {
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader.java": {
                "old": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', None)": [
                        18,
                        19,
                        20
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'initFromPage(long,byte,int)')": [
                        27,
                        39,
                        40,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'readInteger')": [
                        88,
                        89,
                        90,
                        91,
                        92,
                        93
                    ]
                },
                "new": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', None)": [
                        18,
                        19
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'initFromPage(long,byte,int)')": [
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        45,
                        47,
                        48,
                        49,
                        52
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'readInteger')": [
                        59,
                        60
                    ]
                }
            }
        }
    },
    "7cf85cb4e0ea7d25223b9a2773c7a8d629830ea5": {
        "authored_data": "2013 Jun 04 22:08",
        "commit.message": "Fix RunLengthBitPackingHybridValuesReader\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "d7fe1a5d2b2129c53a5d8425f9e3ca14f42522f9",
        "changes": {
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader.java": {
                "old": {
                    "(None, None)": [
                        5,
                        8
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', None)": [
                        15
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'initFromPage(long,byte,int)')": [
                        23,
                        24,
                        25
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'readInteger')": [
                        30,
                        31,
                        32,
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        6,
                        10,
                        11,
                        12
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', None)": [
                        17,
                        18,
                        19,
                        20,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'initFromPage(long,byte,int)')": [
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'readInteger')": [
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94
                    ]
                }
            }
        }
    },
    "aed1dca4522647aa525b97cca13df75fb5feb751": {
        "authored_data": "2013 Jun 04 20:52",
        "commit.message": "dictionary encoding header is now bitWidth instead of max dictionary entry id\n",
        "commit.author.name": "julien",
        "pcid": "c2115825b690aba1f2cf6a48fde96c9aea489e26",
        "changes": {
            "parquet-column/src/main/java/parquet/column/values/dictionary/DictionaryValuesReader.java": {
                "old": {
                    "('parquet.column.values.dictionary#DictionaryValuesReader', 'initFromPage(long,byte,int)')": [
                        57,
                        58,
                        59
                    ]
                },
                "new": {
                    "('parquet.column.values.dictionary#DictionaryValuesReader', 'initFromPage(long,byte,int)')": [
                        57,
                        58,
                        59
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/dictionary/DictionaryValuesWriter.java": {
                "old": {
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', 'getBytes')": [
                        155,
                        157,
                        158,
                        163,
                        164,
                        165
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', None)": [
                        173,
                        174
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', 'intTo2Bytes(int)')": [
                        175,
                        176,
                        177,
                        178,
                        179
                    ]
                },
                "new": {
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', 'getBytes')": [
                        155,
                        157,
                        158,
                        159,
                        164,
                        165,
                        166
                    ]
                }
            }
        }
    },
    "af0ccf9cd78d49436fedadd9b4dd32d1b8dc9bad": {
        "authored_data": "2013 Jun 03 19:25",
        "commit.message": "better error message and javadoc\n",
        "commit.author.name": "julien",
        "pcid": "47824efda9cb7d027138981672d569a042b4af06",
        "changes": {
            "parquet-column/src/main/java/parquet/column/impl/ColumnReaderImpl.java": {
                "old": {
                    "('parquet.column.impl#ColumnReaderImpl', 'checkValueRead')": [
                        377
                    ]
                },
                "new": {
                    "('parquet.column.impl#ColumnReaderImpl', 'checkValueRead')": [
                        377
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetWriter.java": {
                "old": {
                    "('parquet.hadoop#ParquetWriter', None)": [
                        88,
                        89
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetWriter', None)": [
                        88,
                        89,
                        90,
                        91
                    ]
                }
            }
        }
    },
    "d7fe1a5d2b2129c53a5d8425f9e3ca14f42522f9": {
        "authored_data": "2013 Jun 03 15:50",
        "commit.message": "Use RLE for repetition / definition levels\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "cd6a02d27bf20f601d8109ddbd756d7f665f2281",
        "changes": {
            "parquet-column/src/main/java/parquet/column/impl/ColumnWriterImpl.java": {
                "old": {
                    "(None, None)": [
                        18,
                        19,
                        20,
                        29
                    ],
                    "('parquet.column.impl#ColumnWriterImpl', None)": [
                        63,
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        30,
                        33,
                        34
                    ],
                    "('parquet.column.impl#ColumnWriterImpl', None)": [
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/ValuesReader.java": {
                "old": {
                    "('parquet.column.values#ValuesReader', None)": [
                        60
                    ]
                },
                "new": {
                    "('parquet.column.values#ValuesReader', None)": [
                        60
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/ValuesWriter.java": {
                "old": {
                    "('parquet.column.values#ValuesWriter', None)": [
                        33
                    ]
                },
                "new": {
                    "('parquet.column.values#ValuesWriter', None)": [
                        33
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridEncoder.java": {
                "old": {
                    "(None, None)": [
                        10
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', None)": [
                        107
                    ]
                },
                "new": {
                    "(None, None)": [
                        10,
                        266
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', None)": [
                        107,
                        259,
                        262,
                        263
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', 'getBufferedSize')": [
                        260,
                        261
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', 'getAllocatedSize')": [
                        264,
                        265
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder.java": {
                "old": {
                    "(None, None)": [
                        11
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'unpack(int,int,ByteArrayInputStream)')": [
                        267
                    ]
                },
                "new": {
                    "(None, None)": [
                        11
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'unpack(int,int,ByteArrayInputStream)')": [
                        267
                    ]
                }
            }
        }
    },
    "abb6e3644ad6104980831ecd12815d8fcff4acfd": {
        "authored_data": "2013 Jun 03 15:22",
        "commit.message": "Address first round of comments\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "ded5bec1da026c6f994238d3ff72cdb5383cb9e7",
        "changes": {
            "parquet-column/src/main/java/parquet/Preconditions.java": {
                "old": {
                    "('parquet#Preconditions', None)": [
                        50,
                        51,
                        52,
                        53,
                        54
                    ],
                    "('parquet#Preconditions', 'checkArgument(boolean)')": [
                        55,
                        56,
                        57
                    ],
                    "(None, None)": [
                        58,
                        59,
                        60
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/bytes/BytesUtils.java": {
                "old": {
                    "('parquet.bytes#BytesUtils', 'readIntLittleEndianPaddedOnBitWidth(InputStream,int)')": [
                        115
                    ]
                },
                "new": {
                    "('parquet.bytes#BytesUtils', 'readIntLittleEndianPaddedOnBitWidth(InputStream,int)')": [
                        105,
                        106,
                        117
                    ],
                    "('parquet.bytes#BytesUtils', 'writeIntLittleEndianPaddedOnBitWidth(OutputStream,int,int)')": [
                        154,
                        155
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/Encoding.java": {
                "old": {
                    "(None, None)": [
                        24,
                        56,
                        58,
                        62
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        30,
                        57,
                        58,
                        63,
                        64,
                        68,
                        69,
                        70,
                        71,
                        72
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/dictionary/DictionaryValuesWriter.java": {
                "old": {
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', 'getBytes')": [
                        158
                    ]
                },
                "new": {
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', 'getBytes')": [
                        157,
                        159
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridDecoder.java": {
                "old": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridDecoder', None)": [
                        54
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridDecoder', 'readNext')": [
                        83
                    ]
                },
                "new": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridDecoder', None)": [
                        54
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridDecoder', 'readNext')": [
                        83
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridEncoder.java": {
                "old": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', None)": [
                        40,
                        41,
                        42,
                        104,
                        112,
                        113,
                        114,
                        115
                    ]
                },
                "new": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', None)": [
                        101
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/rle/RunLengthBitPackingHybridIntegrationTest.java": {
                "old": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridIntegrationTest', 'integrationTest')": [
                        17
                    ]
                },
                "new": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridIntegrationTest', 'integrationTest')": [
                        17
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder.java": {
                "new": {
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'testRepeatedZeros')": [
                        64,
                        65,
                        66
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', None)": [
                        67,
                        68,
                        69
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'testBitWidthZero')": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ]
                }
            }
        }
    }
}