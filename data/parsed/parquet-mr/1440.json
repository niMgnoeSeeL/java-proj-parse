{
    "5410381c14187990675c62b6627eb0adcc45193c": {
        "authored_data": "2013 Sep 25 23:47",
        "commit.message": "convert set and unit tests\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "f45b384e7d0d2d9d501f0dfd278c247dec31a369",
        "changes": {
            "parquet-scrooge/src/main/java/parquet/scrooge/ScroogeSchemaConverter.java": {
                "new": {
                    "('parquet.scrooge#ScroogeSchemaConverter', 'toThriftField(ThriftStructField)')": [
                        83
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', None)": [
                        108,
                        109
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertSetTypeField(ThriftStructField)')": [
                        110,
                        111,
                        112,
                        113,
                        114
                    ]
                }
            },
            "parquet-scrooge/src/test/java/parquet/scrooge/ScroogeSchemaConverterTest.java": {
                "new": {
                    "(None, None)": [
                        4,
                        9,
                        12
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', 'testConvertPrimitiveList')": [
                        38
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', None)": [
                        39,
                        40,
                        41
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', 'testConvertPrimitiveSet')": [
                        42,
                        43,
                        44
                    ]
                }
            }
        }
    },
    "f45b384e7d0d2d9d501f0dfd278c247dec31a369": {
        "authored_data": "2013 Sep 25 23:40",
        "commit.message": "convert list and unit tests\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "d9ced33ef44c87b11b1bee0808de2e2362bd5323",
        "changes": {
            "parquet-scrooge/src/main/java/parquet/scrooge/ScroogeSchemaConverter.java": {
                "old": {
                    "('parquet.scrooge#ScroogeSchemaConverter', 'getTypeArguments(ThriftStructField)')": [
                        109
                    ]
                },
                "new": {
                    "('parquet.scrooge#ScroogeSchemaConverter', 'toThriftField(ThriftStructField)')": [
                        87
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', None)": [
                        116,
                        117
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertListTypeField(ThriftStructField)')": [
                        118,
                        119,
                        120,
                        121,
                        122
                    ]
                }
            },
            "parquet-scrooge/src/test/java/parquet/scrooge/ScroogeSchemaConverterTest.java": {
                "new": {
                    "(None, None)": [
                        4
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', None)": [
                        29,
                        30,
                        31
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', 'testConvertPrimitiveList')": [
                        32,
                        33,
                        34,
                        35
                    ]
                }
            },
            "parquet-thrift/src/main/java/parquet/thrift/struct/ThriftField.java": {
                "new": {
                    "('parquet.thrift.struct#ThriftField', None)": [
                        95,
                        108,
                        109,
                        110
                    ],
                    "('parquet.thrift.struct#ThriftField', 'equals(Object)')": [
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107
                    ],
                    "('parquet.thrift.struct#ThriftField', 'hashCode')": [
                        111,
                        112,
                        113,
                        114,
                        115,
                        116
                    ],
                    "(None, None)": [
                        117
                    ]
                }
            },
            "parquet-thrift/src/main/java/parquet/thrift/struct/ThriftType.java": {
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('parquet.thrift.struct#ThriftType', None)": [
                        66,
                        76,
                        77,
                        78,
                        81,
                        82,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347
                    ],
                    "('parquet.thrift.struct#ThriftType', 'equals(Object)')": [
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75
                    ],
                    "('parquet.thrift.struct#ThriftType', 'hashCode')": [
                        79,
                        80
                    ]
                }
            }
        }
    },
    "d9ced33ef44c87b11b1bee0808de2e2362bd5323": {
        "authored_data": "2013 Sep 25 22:03",
        "commit.message": "test optional map\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "0822e32631e50c751f4b1a8b33111d6f2a50a56f",
        "changes": {
            "parquet-scrooge/src/test/java/parquet/scrooge/ScroogeSchemaConverterTest.java": {
                "new": {
                    "(None, None)": [
                        6,
                        200
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', None)": [
                        29,
                        30
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', 'testConvertOptionalPrimitiveMap')": [
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199
                    ]
                }
            }
        }
    },
    "9cd67375d2d64eaf9e1ae4021885f9130881a325": {
        "authored_data": "2013 Sep 25 21:46",
        "commit.message": "Add comments to new files.\n",
        "commit.author.name": "David Z. Chen",
        "pcid": "49f3ad17a066dde80e9d7f84fc859a1afb791c02",
        "changes": {
            "parquet-column/src/main/java/parquet/column/values/plain/FixedLenByteArrayPlainValuesReader.java": {
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31,
                        32
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/plain/FixedLenByteArrayPlainValuesWriter.java": {
                "new": {
                    "(None, None)": [
                        29,
                        30,
                        31,
                        32,
                        33
                    ]
                }
            }
        }
    },
    "0822e32631e50c751f4b1a8b33111d6f2a50a56f": {
        "authored_data": "2013 Sep 25 21:42",
        "commit.message": "add unit test for primitive value for maps\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "6a6613fc746bf409eff1372fa7d92cb556db9f44",
        "changes": {
            "parquet-scrooge/src/test/java/parquet/scrooge/ScroogeSchemaConverterTest.java": {
                "old": {
                    "(None, None)": [
                        4
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', 'testConvertPrimitiveMapKey')": [
                        16,
                        17
                    ]
                },
                "new": {
                    "(None, None)": [
                        4,
                        5
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', 'testConvertPrimitiveMapKey')": [
                        17,
                        18,
                        19
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', None)": [
                        20,
                        21,
                        22
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', 'testConvertPrimitiveMapValue')": [
                        23,
                        24,
                        25
                    ]
                }
            }
        }
    },
    "49f3ad17a066dde80e9d7f84fc859a1afb791c02": {
        "authored_data": "2013 Sep 25 21:21",
        "commit.message": "Add support for reading FIXED_LEN_BYTE_ARRAY to Pig support.\n",
        "commit.author.name": "David Z. Chen",
        "pcid": "976c68acb31b590bb8b2b509da05164b23c529ad",
        "changes": {
            "parquet-avro/src/test/java/parquet/avro/TestSpecificInputOutputFormat.java": {
                "old": {
                    "('parquet.avro#TestSpecificInputOutputFormat', 'nextRecord(int)')": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        57,
                        58,
                        68,
                        69
                    ],
                    "('parquet.avro#TestSpecificInputOutputFormat', 'testReadWrite')": [
                        120,
                        137
                    ]
                },
                "new": {
                    "('parquet.avro#TestSpecificInputOutputFormat', 'nextRecord(int)')": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        57,
                        58,
                        68,
                        69
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/PigSchemaConverter.java": {
                "old": {
                    "('parquet.pig#PigSchemaConverter', 'getFieldSchema(Type)')": [
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204
                    ],
                    "('parquet.pig#PigSchemaConverter', None)": [
                        205
                    ],
                    "('parquet.pig#PigSchemaConverter', 'convertWithName(FieldSchema,String)')": [
                        258
                    ]
                },
                "new": {
                    "('parquet.pig#PigSchemaConverter', 'getSimpleFieldSchema(String,Type)')": [
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169
                    ],
                    "('parquet.pig#PigSchemaConverter', None)": [
                        170,
                        171,
                        172,
                        173,
                        174,
                        216,
                        217,
                        218
                    ],
                    "('parquet.pig#PigSchemaConverter', 'getComplexFieldSchema(String,Type)')": [
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215
                    ],
                    "('parquet.pig#PigSchemaConverter', 'getFieldSchema(Type)')": [
                        221,
                        222,
                        224
                    ],
                    "('parquet.pig#PigSchemaConverter', 'convertWithName(FieldSchema,String)')": [
                        277
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/TestParquetLoader.java": {
                "old": {
                    "('parquet.pig#TestParquetLoader', 'testSchema')": [
                        44
                    ]
                },
                "new": {
                    "('parquet.pig#TestParquetLoader', 'testSchema')": [
                        44,
                        45,
                        46,
                        47
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/TestPigSchemaConverter.java": {
                "new": {
                    "('parquet.pig#TestPigSchemaConverter', None)": [
                        181,
                        189,
                        190,
                        191,
                        207
                    ],
                    "('parquet.pig#TestPigSchemaConverter', 'testFixedConversion(String,String)')": [
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188
                    ],
                    "('parquet.pig#TestPigSchemaConverter', 'testMapWithFixed')": [
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206
                    ]
                }
            }
        }
    },
    "6a6613fc746bf409eff1372fa7d92cb556db9f44": {
        "authored_data": "2013 Sep 25 21:11",
        "commit.message": "tests all primitive key types in map\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "ca7da658ca18ef6775557ebba9776ece5a21554f",
        "changes": {
            "parquet-scrooge/src/test/java/parquet/scrooge/ScroogeSchemaConverterTest.java": {
                "old": {
                    "(None, None)": [
                        5
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', 'testTraverse')": [
                        16
                    ]
                },
                "new": {
                    "('parquet.scrooge#ScroogeSchemaConverterTest', 'testConvertPrimitiveMapKey')": [
                        15
                    ]
                }
            }
        }
    },
    "ca7da658ca18ef6775557ebba9776ece5a21554f": {
        "authored_data": "2013 Sep 25 21:04",
        "commit.message": "basic support for map\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "5e0dba75cb58e6cecf6b5aeafb4f32cd19600aec",
        "changes": {
            "parquet-scrooge/src/main/java/parquet/scrooge/ScroogeSchemaConverter.java": {
                "old": {
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertMapTypeField(ThriftStructField)')": [
                        113,
                        114,
                        117,
                        120,
                        122
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertBasedOnClass(Class)')": [
                        136,
                        138,
                        140,
                        142
                    ]
                },
                "new": {
                    "(None, None)": [
                        8,
                        10
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'getTypeArguments(ThriftStructField)')": [
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', None)": [
                        116,
                        117
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertMapTypeField(ThriftStructField)')": [
                        125,
                        126,
                        129,
                        132,
                        134
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertBasedOnClass(Class)')": [
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        160,
                        162,
                        164,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171
                    ]
                }
            },
            "parquet-scrooge/src/test/java/parquet/scrooge/ScroogeSchemaConverterTest.java": {
                "old": {
                    "('parquet.scrooge#ScroogeSchemaConverterTest', 'testTraverse')": [
                        13
                    ],
                    "(None, None)": [
                        14
                    ]
                },
                "new": {
                    "(None, None)": [
                        6,
                        7,
                        8,
                        9
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', 'testTraverse')": [
                        17,
                        18,
                        19
                    ]
                }
            }
        }
    }
}