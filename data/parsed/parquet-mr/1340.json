{
    "5601394e85387a69f171884792ad683a39c7eec1": {
        "authored_data": "2013 Oct 18 22:18",
        "commit.message": "make static field final\n",
        "commit.author.name": "julien",
        "pcid": "0a76cc29b703fc95949736910a5a63ce9c1c0814",
        "changes": {
            "parquet-pig/src/main/java/parquet/pig/TupleWriteSupport.java": {
                "old": {
                    "('parquet.pig#TupleWriteSupport', None)": [
                        48
                    ]
                },
                "new": {
                    "('parquet.pig#TupleWriteSupport', None)": [
                        48
                    ]
                }
            }
        }
    },
    "0a76cc29b703fc95949736910a5a63ce9c1c0814": {
        "authored_data": "2013 Oct 18 17:36",
        "commit.message": "Fix #198: simplify TupleWriteSupport constructor\n",
        "commit.author.name": "julien",
        "pcid": "c9146a6eaa854499a5d099edf48d0b961d3a60a3",
        "changes": {
            "parquet-pig/src/main/java/parquet/pig/ParquetStorer.java": {
                "old": {
                    "(None, None)": [
                        38
                    ],
                    "('parquet.pig#ParquetStorer', 'getOutputFormat')": [
                        104,
                        105
                    ]
                },
                "new": {
                    "('parquet.pig#ParquetStorer', 'getOutputFormat')": [
                        103
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/TupleWriteSupport.java": {
                "old": {
                    "('parquet.pig#TupleWriteSupport', None)": [
                        51,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        36
                    ],
                    "('parquet.pig#TupleWriteSupport', None)": [
                        48,
                        49,
                        52,
                        58,
                        59,
                        60,
                        61,
                        63,
                        65,
                        66,
                        69,
                        70
                    ],
                    "('parquet.pig#TupleWriteSupport', 'fromPigSchema(String)')": [
                        50,
                        51
                    ],
                    "('parquet.pig#TupleWriteSupport', 'getPigSchema')": [
                        67,
                        68
                    ],
                    "('parquet.pig#TupleWriteSupport', 'getParquetSchema')": [
                        71,
                        72
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/TestTupleRecordConsumer.java": {
                "old": {
                    "(None, None)": [
                        21,
                        48
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'testFromTuple(String,List)')": [
                        126,
                        127,
                        128
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'testFromGroups(String,List)')": [
                        147,
                        159
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'newTupleWriter(MessageType,String,RecordMaterializer)')": [
                        175,
                        176,
                        179
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'newPigRecordConsumer(MessageType,String)')": [
                        190
                    ]
                },
                "new": {
                    "('parquet.pig#TestTupleRecordConsumer', 'testFromTuple(String,List)')": [
                        124,
                        125
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'testFromGroups(String,List)')": [
                        144,
                        156
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'newTupleWriter(String,RecordMaterializer)')": [
                        172,
                        173,
                        176
                    ],
                    "('parquet.pig#TestTupleRecordConsumer', 'newPigRecordConsumer(String)')": [
                        187,
                        190
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/TupleConsumerPerfTest.java": {
                "old": {
                    "('parquet.pig#TupleConsumerPerfTest', 'write(MemPageStore,ColumnWriteStoreImpl,MessageType,String)')": [
                        157
                    ]
                },
                "new": {
                    "('parquet.pig#TupleConsumerPerfTest', 'write(MemPageStore,ColumnWriteStoreImpl,MessageType,String)')": [
                        157
                    ]
                }
            },
            "parquet-thrift/src/test/java/parquet/thrift/TestParquetWriteProtocol.java": {
                "old": {
                    "('parquet.thrift#TestParquetWriteProtocol', 'validatePig(String,TBase)')": [
                        485
                    ]
                },
                "new": {
                    "('parquet.thrift#TestParquetWriteProtocol', 'validatePig(String,TBase)')": [
                        485
                    ]
                }
            }
        }
    },
    "22cf7fe9d8ef12e33b3fa43fae86fc7e8680271f": {
        "authored_data": "2013 Oct 17 16:00",
        "commit.message": "Inspect keys only for a few types in parquet hive maps\n",
        "commit.author.name": "Remy Pecqueur",
        "pcid": "90645004606cfbb33c79a385bc594854edce138e",
        "changes": {
            "parquet-hive/src/main/java/parquet/hive/serde/ArrayWritableObjectInspector.java": {
                "old": {
                    "('parquet.hive.serde#ArrayWritableObjectInspector', 'getObjectInspector(TypeInfo)')": [
                        89
                    ]
                },
                "new": {
                    "('parquet.hive.serde#ArrayWritableObjectInspector', 'getObjectInspector(TypeInfo)')": [
                        89,
                        90,
                        91,
                        92,
                        93,
                        94
                    ]
                }
            }
        }
    },
    "90645004606cfbb33c79a385bc594854edce138e": {
        "authored_data": "2013 Oct 11 12:28",
        "commit.message": "Add some javadoc to clarify\n",
        "commit.author.name": "Remy Pecqueur",
        "pcid": "4bdaec06595f35d4b7bb4c1baf35ca0d16b25619",
        "changes": {
            "parquet-hive/src/main/java/parquet/hive/serde/ArrayWritableObjectInspector.java": {
                "old": {
                    "(None, None)": [
                        35,
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        36
                    ]
                }
            },
            "parquet-hive/src/main/java/parquet/hive/serde/ParquetHiveArrayInspector.java": {
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26,
                        27,
                        28
                    ]
                }
            },
            "parquet-hive/src/main/java/parquet/hive/serde/ParquetHiveMapInspector.java": {
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27,
                        28,
                        29
                    ]
                }
            },
            "parquet-hive/src/main/java/parquet/hive/serde/primitive/ParquetByteInspector.java": {
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "parquet-hive/src/main/java/parquet/hive/serde/primitive/ParquetPrimitiveInspectorFactory.java": {
                "new": {
                    "(None, None)": [
                        19,
                        30
                    ]
                }
            },
            "parquet-hive/src/main/java/parquet/hive/serde/primitive/ParquetShortInspector.java": {
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "parquet-hive/src/main/java/parquet/hive/serde/primitive/ParquetStringInspector.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        28
                    ]
                }
            }
        }
    },
    "4bdaec06595f35d4b7bb4c1baf35ca0d16b25619": {
        "authored_data": "2013 Oct 10 14:57",
        "commit.message": "Fix #177: Inspect key when accessing maps\n",
        "commit.author.name": "Remy Pecqueur",
        "pcid": "c5f68c51cb72503e7f9c483e009d94ed66aac335",
        "changes": {
            "parquet-hive/src/main/java/parquet/hive/serde/ParquetHiveMapInspector.java": {
                "old": {
                    "('parquet.hive.serde#ParquetHiveMapInspector', 'getMapValueElement(Object,Object)')": [
                        55,
                        56,
                        67,
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('parquet.hive.serde#ParquetHiveMapInspector', 'getMapValueElement(Object,Object)')": [
                        56,
                        67,
                        68,
                        69,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91
                    ]
                }
            }
        }
    }
}