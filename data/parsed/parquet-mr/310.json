{
    "d9a19621370608f4431394cc36bddc063d59cc5a": {
        "authored_data": "2019 Jan 28 16:50",
        "commit.message": "PARQUET-1510: Fix notEq for optional columns with null values. (#603)\n\nDictionaries cannot contain null values, so notEq filters cannot\r\nconclude that a block cannot match using only the dictionary. Instead,\r\nit must also check whether the block may have at least one null value.\r\nIf there are no null values, then the existing check is correct.",
        "commit.author.name": "Ryan Blue",
        "pcid": "ddc77471e595f5335540c2385c9ab900510d485e",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/filter2/dictionarylevel/DictionaryFilter.java": {
                "old": {
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'visit(NotEq)')": [
                        192
                    ]
                },
                "new": {
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'visit(NotEq)')": [
                        192,
                        193,
                        194,
                        195
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/filter2/dictionarylevel/DictionaryFilterTest.java": {
                "old": {
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilterTest', 'testDictionaryEncodedColumnsV1')": [
                        259
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilterTest', 'testDictionaryEncodedColumnsV2')": [
                        284
                    ]
                },
                "new": {
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilterTest', None)": [
                        91
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilterTest', 'writeData(SimpleGroupFactory,ParquetWriter)')": [
                        169,
                        170,
                        171,
                        172,
                        173
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilterTest', 'testDictionaryEncodedColumnsV1')": [
                        265
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilterTest', 'testDictionaryEncodedColumnsV2')": [
                        290
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilterTest', 'testNotEqBinary')": [
                        364,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377
                    ]
                }
            }
        }
    },
    "00a7a470dbf73d6ae3bdd0774706abcda353b178": {
        "authored_data": "2019 Jan 27 20:25",
        "commit.message": "PARQUET-1504: Add an option to convert Int96 to Arrow Timestamp (#594)\n\nPARQUET-1504: Add an option to convert Parquet Int96 to Arrow Timestamp",
        "commit.author.name": "Yongyan Wang",
        "pcid": "d1e9f15d1e94956f38880fec2cf9491b8f9711e4",
        "changes": {
            "parquet-arrow/src/main/java/org/apache/parquet/arrow/schema/SchemaConverter.java": {
                "old": {
                    "('org.apache.parquet.arrow.schema#SchemaConverter', 'fromParquetPrimitive(PrimitiveType,String)')": [
                        495,
                        496
                    ]
                },
                "new": {
                    "('org.apache.parquet.arrow.schema#SchemaConverter', None)": [
                        89,
                        90,
                        91,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101
                    ],
                    "('org.apache.parquet.arrow.schema#SchemaConverter', 'fromParquetPrimitive(PrimitiveType,String)')": [
                        504,
                        505,
                        506,
                        507,
                        508
                    ]
                }
            },
            "parquet-arrow/src/test/java/org/apache/parquet/arrow/schema/TestSchemaConverter.java": {
                "new": {
                    "(None, None)": [
                        50
                    ],
                    "('org.apache.parquet.arrow.schema#TestSchemaConverter', None)": [
                        443,
                        451,
                        452,
                        453,
                        462,
                        463
                    ],
                    "('org.apache.parquet.arrow.schema#TestSchemaConverter', 'testParquetInt96ToArrowBinary')": [
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450
                    ],
                    "('org.apache.parquet.arrow.schema#TestSchemaConverter', 'testParquetInt96ToArrowTimestamp')": [
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461
                    ]
                }
            }
        }
    },
    "d1e9f15d1e94956f38880fec2cf9491b8f9711e4": {
        "authored_data": "2019 Jan 27 19:38",
        "commit.message": "PARQUET-1513: Update HiddenFileFilter to avoid extra startsWith (#606)\n\n",
        "commit.author.name": "BELUGABEHR",
        "pcid": "1e62e2e2ca903d4109480bc87ceec1dc954b6c92",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/util/HiddenFileFilter.java": {
                "old": {
                    "('org.apache.parquet.hadoop.util#HiddenFileFilter', 'accept(Path)')": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27,
                        28
                    ],
                    "('org.apache.parquet.hadoop.util#HiddenFileFilter', 'accept(Path)')": [
                        36,
                        37
                    ]
                }
            }
        }
    },
    "1e62e2e2ca903d4109480bc87ceec1dc954b6c92": {
        "authored_data": "2019 Jan 25 08:21",
        "commit.message": "PARQUET-1503: Remove Ints Utility Class (#598)\n\n",
        "commit.author.name": "BELUGABEHR",
        "pcid": "f36dd08505b5dc799d2e4e92328901796f7b3cb8",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/column/impl/ColumnWriterV2.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.column.impl#ColumnWriterV2', 'writePage(int,int,Statistics,ValuesWriter,ValuesWriter,ValuesWriter)')": [
                        81
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.impl#ColumnWriterV2', 'writePage(int,int,Statistics,ValuesWriter,ValuesWriter,ValuesWriter)')": [
                        80
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/page/DataPageV1.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.column.page#DataPageV1', None)": [
                        47,
                        69
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.page#DataPageV1', None)": [
                        46,
                        68
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/page/DataPageV2.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.column.page#DataPageV2', 'uncompressed(int,int,int,BytesInput,BytesInput,Encoding,BytesInput,Statistics)')": [
                        50
                    ],
                    "('org.apache.parquet.column.page#DataPageV2', 'uncompressed(int,int,int,long,BytesInput,BytesInput,Encoding,BytesInput,Statistics)')": [
                        76
                    ],
                    "('org.apache.parquet.column.page#DataPageV2', None)": [
                        124,
                        142
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.page#DataPageV2', 'uncompressed(int,int,int,BytesInput,BytesInput,Encoding,BytesInput,Statistics)')": [
                        49
                    ],
                    "('org.apache.parquet.column.page#DataPageV2', 'uncompressed(int,int,int,long,BytesInput,BytesInput,Encoding,BytesInput,Statistics)')": [
                        75
                    ],
                    "('org.apache.parquet.column.page#DataPageV2', None)": [
                        123,
                        141
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/page/DictionaryPage.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.parquet.column.page#DictionaryPage', None)": [
                        56
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.page#DictionaryPage', None)": [
                        55
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.parquet.column.values.rle#RunLengthBitPackingHybridValuesWriter', 'getBytes')": [
                        71
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.values.rle#RunLengthBitPackingHybridValuesWriter', 'getBytes')": [
                        70
                    ]
                }
            },
            "parquet-common/src/main/java/org/apache/parquet/Ints.java": {
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet#Ints', None)": [
                        35
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ColumnChunkPageReadStore.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        30
                    ],
                    "('org.apache.parquet.hadoop#ColumnChunkPageReadStore', None)": [
                        121,
                        151
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ColumnChunkPageReadStore', None)": [
                        118,
                        148
                    ]
                }
            }
        }
    },
    "f36dd08505b5dc799d2e4e92328901796f7b3cb8": {
        "authored_data": "2019 Jan 25 08:07",
        "commit.message": "[PARQUET-1500] Replace Closeables with try-with-resources (#597)\n\n",
        "commit.author.name": "Fokko Driesprong",
        "pcid": "354fcc2aeafa6c782ee893203de96c159327463c",
        "changes": {
            "parquet-common/src/main/java/org/apache/parquet/Closeables.java": {
                "old": {
                    "(None, None)": [
                        1,
                        9,
                        11
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        9,
                        11,
                        29,
                        31
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/util/SerializationUtil.java": {
                "old": {
                    "(None, None)": [
                        1,
                        9,
                        11,
                        32
                    ],
                    "('org.apache.parquet.hadoop.util#SerializationUtil', 'writeObjectToConfAsBase64(String,Object,Configuration)')": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        70,
                        71
                    ],
                    "('org.apache.parquet.hadoop.util#SerializationUtil', 'readObjectFromConfAsBase64(String,Configuration)')": [
                        91,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        106,
                        107,
                        108,
                        109
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        9,
                        11,
                        26
                    ],
                    "('org.apache.parquet.hadoop.util#SerializationUtil', 'writeObjectToConfAsBase64(String,Object,Configuration)')": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61
                    ],
                    "('org.apache.parquet.hadoop.util#SerializationUtil', 'readObjectFromConfAsBase64(String,Configuration)')": [
                        82,
                        84,
                        85,
                        86
                    ]
                }
            }
        }
    },
    "4b40d96a13f3e9bf75f8b2aaa0bef901491f2789": {
        "authored_data": "2019 Jan 23 15:45",
        "commit.message": "PARQUET-1502: Convert FIXED_LEN_BYTE_ARRAY to arrow type in logicalTypeAnnotation if it is not null (#593)\n\n",
        "commit.author.name": "Yongyan Wang",
        "pcid": "ee97f23bb683c324309857f87d93ff997c0c09c0",
        "changes": {
            "parquet-arrow/src/main/java/org/apache/parquet/arrow/schema/SchemaConverter.java": {
                "old": {
                    "('org.apache.parquet.arrow.schema#SchemaConverter', 'fromParquetPrimitive(PrimitiveType,String)')": [
                        501
                    ]
                },
                "new": {
                    "('org.apache.parquet.arrow.schema#SchemaConverter', 'fromParquetPrimitive(PrimitiveType,String)')": [
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511
                    ]
                }
            },
            "parquet-arrow/src/test/java/org/apache/parquet/arrow/schema/TestSchemaConverter.java": {
                "new": {
                    "('org.apache.parquet.arrow.schema#TestSchemaConverter', None)": [
                        422,
                        430,
                        431,
                        432,
                        440,
                        441
                    ],
                    "('org.apache.parquet.arrow.schema#TestSchemaConverter', 'testParquetFixedBinaryToArrow')": [
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429
                    ],
                    "('org.apache.parquet.arrow.schema#TestSchemaConverter', 'testParquetFixedBinaryToArrowDecimal')": [
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439
                    ]
                }
            }
        }
    }
}