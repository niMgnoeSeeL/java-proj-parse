{
    "f6608e6d64e1fdb2bff7b3957dc06c7aad58b5f0": {
        "authored_data": "2014 Sep 03 16:00",
        "commit.message": "PARQUET-85: add license headers\n\nAuthor: julien <julien@twitter.com>\n\nCloses #10 from julienledem/fix_headers and squashes the following commits:\n\ne6922a0 [julien] add license headers\n",
        "commit.author.name": "julien",
        "pcid": "78de104a807504a3597d8c00f0771b42c1a8b810",
        "changes": {
            "src/main/java/parquet/format/event/Consumers.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18
                    ]
                }
            },
            "src/main/java/parquet/format/event/EventBasedThriftReader.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18
                    ]
                }
            },
            "src/main/java/parquet/format/event/FieldConsumer.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18
                    ]
                }
            },
            "src/main/java/parquet/format/event/TypedConsumer.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18
                    ]
                }
            },
            "src/test/java/parquet/format/TestUtil.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18
                    ]
                }
            }
        }
    },
    "78de104a807504a3597d8c00f0771b42c1a8b810": {
        "authored_data": "2014 Sep 03 00:09",
        "commit.message": "PARQUET-72: Prepare for Apache release\n\nAdd license headers and other documentation required by the ASF.\n\nThis doesn't update the maven release configuration.\n\nAuthor: Ryan Blue <rblue@cloudera.com>\n\nCloses #6 from rdblue/PARQUET-72-prepare-apache-release and squashes the following commits:\n\ne48a607 [Ryan Blue] Adding NOTICE, DISCLAIMER, and KEYS.\n3d2ca06 [Ryan Blue] Add license headers and enable apache-rat-plugin.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "97964f357e9e6e6eb37fbb83acebf434cd2d7d45",
        "changes": {
            "src/main/java/parquet/format/InterningProtocol.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19
                    ]
                }
            },
            "src/main/java/parquet/format/Util.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19
                    ]
                }
            }
        }
    },
    "97964f357e9e6e6eb37fbb83acebf434cd2d7d45": {
        "authored_data": "2014 Aug 30 00:33",
        "commit.message": "PARQUET-79: add a streaming Thrift API, to enable processing the metadata as we read it and skipping unnecessary fields.\n\nThis pull request provides an API to read thrift in a streaming fashion.\nThis enables ignoring fields that are not needed without loading them into memory.\nIt also aloow treating the data as it comes instead of when it's fully loaded in memory.\n\nAuthor: julien <julien@twitter.com>\n\nCloses #8 from julienledem/streaming_metadata and squashes the following commits:\n\n621769a [julien] cleanup refactoring\na58913d [julien] rename add to consume\ne5c78fc [julien] #simplify\ncb386ce [julien] RIP TypedConsumerProvider, @tsdeng did not like you\n8dd801e [julien] Merge branch 'master' into streaming_metadata\n958726f [julien] javadoc; fix apis\n9be786a [julien] added simple readMetaData method\nbee937a [julien] refactor, cleanup\n6368bdc [julien] streaming thrift reader\n71c85de [julien] first stab\n",
        "commit.author.name": "julien",
        "pcid": "02abe096f293608906d0f06708bfece92156b49a",
        "changes": {
            "src/main/java/parquet/format/Util.java": {
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        17,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30
                    ],
                    "('parquet.format#Util', None)": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        134,
                        135,
                        177,
                        178
                    ],
                    "('parquet.format#Util', 'readFileMetaData(InputStream,boolean)')": [
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ],
                    "('parquet.format#Util', 'readFileMetaData(InputStream,FileMetaDataConsumer)')": [
                        132,
                        133
                    ],
                    "('parquet.format#Util', 'readFileMetaData(InputStream,FileMetaDataConsumer,boolean)')": [
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176
                    ]
                }
            }
        }
    },
    "d3cd97a8ad7f1c1df48bf42080d993b861158786": {
        "authored_data": "2014 Aug 28 18:30",
        "commit.message": "PARQUET-75: Fixed string decode performance issue\n\nSwitch to using 'UTF8.decode' as opposed to 'new String'\n\nhttps://issues.apache.org/jira/browse/PARQUET-75\n\nAuthor: Daniel Weeks <dweeks@netflix.com>\n\nCloses #40 from dcw-netflix/string-decode and squashes the following commits:\n\n2cf53e7 [Daniel Weeks] Fixed string decode performance issue\n",
        "commit.author.name": "Daniel Weeks",
        "pcid": "8474f6d8142c7d509fa1a459956c6284c0cb3ff2",
        "changes": {
            "parquet-column/src/main/java/parquet/io/api/Binary.java": {
                "old": {
                    "('parquet.io.api#Binary', None)": [
                        171,
                        239
                    ]
                },
                "new": {
                    "('parquet.io.api#Binary', None)": [
                        171,
                        239
                    ]
                }
            }
        }
    },
    "02abe096f293608906d0f06708bfece92156b49a": {
        "authored_data": "2014 Aug 22 22:34",
        "commit.message": "PARQUET-11: Reduce memory pressure when reading footers\n\nbased on https://github.com/apache/incubator-parquet-format/pull/2\n\nAuthor: julien <julien@twitter.com>\nAuthor: Dmitriy Ryaboy <dvryaboy@gmail.com>\n\nCloses #7 from julienledem/reduce_metadata_memory and squashes the following commits:\n\n96ff408 [julien] Merge branch 'master' into reduce_metadata_memory\n1c382cc [julien] implement delegate instead\n7664919 [Dmitriy Ryaboy] intern parquet metadata strings when reading them\n",
        "commit.author.name": "julien",
        "pcid": "402749f0aea57e7dc2ef37cdbb424079f8f761ad",
        "changes": {
            "src/main/java/parquet/format/Util.java": {
                "old": {
                    "('parquet.format#Util', 'protocol(OutputStream)')": [
                        37,
                        38
                    ],
                    "('parquet.format#Util', 'protocol(InputStream)')": [
                        41,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        10
                    ],
                    "('parquet.format#Util', 'protocol(OutputStream)')": [
                        38,
                        39
                    ],
                    "('parquet.format#Util', 'protocol(InputStream)')": [
                        42,
                        43
                    ],
                    "('parquet.format#Util', None)": [
                        44,
                        45
                    ],
                    "('parquet.format#Util', 'protocol(TIOStreamTransport)')": [
                        46,
                        47
                    ]
                }
            }
        }
    },
    "84ebe4c82405895706552ccf1becf6647886663f": {
        "authored_data": "2014 Aug 20 21:09",
        "commit.message": "PARQUET-66: Upcast blockSize to long to prevent integer overflow.\n\nAuthor: Eric Snyder <snyderep@gmail.com>\n\nCloses #33 from snyderep/master and squashes the following commits:\n\nc99802e [Eric Snyder] PARQUET-66: Upcast blockSize to long to prevent integer overflow.\n",
        "commit.author.name": "Eric Snyder",
        "pcid": "792b1490db122e953c9120279ddc86407ffae3c0",
        "changes": {
            "parquet-hadoop/src/main/java/parquet/hadoop/InternalParquetRecordWriter.java": {
                "old": {
                    "('parquet.hadoop#InternalParquetRecordWriter', 'flushStore')": [
                        147
                    ]
                },
                "new": {
                    "('parquet.hadoop#InternalParquetRecordWriter', 'flushStore')": [
                        147
                    ]
                }
            }
        }
    },
    "792b1490db122e953c9120279ddc86407ffae3c0": {
        "authored_data": "2014 Aug 20 21:09",
        "commit.message": "PARQUET-67: mechanism to add extra metadata in the footer\n\nthis expands on the idea proposed by @wesleypeck in https://github.com/Parquet/parquet-mr/pull/185\n\nAuthor: julien <julien@twitter.com>\n\nCloses #32 from julienledem/extensible_metadata and squashes the following commits:\n\n72e0a50 [julien] mechanism to add extra metadata in the footer\n",
        "commit.author.name": "julien",
        "pcid": "54bb983271adcbcc1519ab9e2288871d69093708",
        "changes": {
            "parquet-hadoop/src/main/java/parquet/hadoop/InternalParquetRecordWriter.java": {
                "old": {
                    "('parquet.hadoop#InternalParquetRecordWriter', 'close')": [
                        111
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        33
                    ],
                    "('parquet.hadoop#InternalParquetRecordWriter', 'close')": [
                        113,
                        114,
                        115,
                        116
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetOutputFormat.java": {
                "old": {
                    "('parquet.hadoop#ParquetOutputFormat', None)": [
                        186
                    ],
                    "('parquet.hadoop#ParquetOutputFormat', 'getRecordWriter(Configuration,Path,CompressionCodecName)')": [
                        275
                    ],
                    "('parquet.hadoop#ParquetOutputFormat', 'getWriteSupport(Configuration)')": [
                        297,
                        299
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        37
                    ],
                    "('parquet.hadoop#ParquetOutputFormat', None)": [
                        188
                    ],
                    "('parquet.hadoop#ParquetOutputFormat', 'getRecordWriter(Configuration,Path,CompressionCodecName)')": [
                        277
                    ],
                    "('parquet.hadoop#ParquetOutputFormat', 'getWriteSupport(Configuration)')": [
                        300
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/api/WriteSupport.java": {
                "old": {
                    "('parquet.hadoop.api#WriteSupport', None)": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19,
                        21,
                        126,
                        127
                    ],
                    "('parquet.hadoop.api#WriteSupport', None)": [
                        49,
                        50,
                        51,
                        52,
                        55,
                        56,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        120,
                        121,
                        122,
                        123
                    ],
                    "('parquet.hadoop.api#WriteSupport', 'finalizeWrite')": [
                        124,
                        125
                    ]
                }
            },
            "parquet-hadoop/src/test/java/parquet/hadoop/example/TestInputOutputFormat.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('parquet.hadoop.example#TestInputOutputFormat', None)": [
                        58,
                        59
                    ],
                    "('parquet.hadoop.example#TestInputOutputFormat', 'setUp')": [
                        78,
                        79
                    ],
                    "('parquet.hadoop.example#TestInputOutputFormat', 'runMapReduceJob(CompressionCodecName)')": [
                        120,
                        121,
                        122,
                        125,
                        126,
                        127,
                        128,
                        133,
                        137,
                        138,
                        139
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        27,
                        28,
                        29,
                        46,
                        47,
                        48,
                        49,
                        50
                    ],
                    "('parquet.hadoop.example#TestInputOutputFormat', None)": [
                        68,
                        69,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ],
                    "('parquet.hadoop.example#TestInputOutputFormat', 'setUp')": [
                        88,
                        89
                    ],
                    "('parquet.hadoop.example#TestInputOutputFormat', 'runMapReduceJob(CompressionCodecName)')": [
                        166,
                        167,
                        168,
                        171,
                        172,
                        173,
                        174,
                        182,
                        183,
                        184,
                        185
                    ]
                }
            }
        }
    },
    "54bb983271adcbcc1519ab9e2288871d69093708": {
        "authored_data": "2014 Aug 20 21:02",
        "commit.message": "PARQUET-62: Fix binary dictionary write bug.\n\nThe binary dictionary writers keep track of written values in memory to\ndeduplicate and write dictionary pages periodically. If the written\nvalues are changed by the caller, then this corrupts the dictionary\nwithout an error message. This adds a defensive copy to fix the problem.\n\nAuthor: Ryan Blue <rblue@cloudera.com>\n\nCloses #29 from rdblue/PARQUET-62-fix-dictionary-bug and squashes the following commits:\n\n42b6920 [Ryan Blue] PARQUET-62: Fix binary dictionary write bug.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "45e581028ab60949b0303d4a0cfe4eee077bcce8",
        "changes": {
            "parquet-column/src/main/java/parquet/column/values/dictionary/DictionaryValuesWriter.java": {
                "old": {
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', None)": [
                        268,
                        346
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', None)": [
                        269,
                        323,
                        324,
                        325,
                        326,
                        327,
                        352
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/dictionary/TestDictionary.java": {
                "old": {
                    "('parquet.column.values.dictionary#TestDictionary', 'testBinaryDictionaryFallBack')": [
                        97
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('parquet.column.values.dictionary#TestDictionary', 'testBinaryDictionaryFallBack')": [
                        98
                    ],
                    "('parquet.column.values.dictionary#TestDictionary', None)": [
                        99,
                        100,
                        101,
                        495,
                        496,
                        497
                    ],
                    "('parquet.column.values.dictionary#TestDictionary', 'testBinaryDictionaryChangedValues')": [
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117
                    ],
                    "('parquet.column.values.dictionary#TestDictionary', 'writeRepeatedWithReuse(int,ValuesWriter,String)')": [
                        489,
                        490,
                        491,
                        492,
                        493,
                        494
                    ]
                }
            }
        }
    }
}