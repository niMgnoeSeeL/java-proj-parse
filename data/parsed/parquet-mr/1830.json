{
    "7b742900d565271408c87df6b995d9157b9c4354": {
        "authored_data": "2013 Jun 28 21:55",
        "commit.message": "Fixed test case.\n",
        "commit.author.name": "Nong Li",
        "pcid": "e440108de57199c12d66801ca93804086e7f7632",
        "changes": {
            "parquet-hadoop/src/test/java/parquet/hadoop/TestSnappyCodec.java": {
                "old": {
                    "('parquet.hadoop#TestSnappyCodec', 'TestSnappy')": [
                        20,
                        21,
                        23
                    ],
                    "('parquet.hadoop#TestSnappyCodec', 'TestSnappy(SnappyCompressor,SnappyDecompressor,String)')": [
                        48
                    ]
                },
                "new": {
                    "('parquet.hadoop#TestSnappyCodec', 'TestSnappy')": [
                        19,
                        20,
                        21,
                        22,
                        23
                    ],
                    "('parquet.hadoop#TestSnappyCodec', 'TestSnappy(SnappyCompressor,SnappyDecompressor,String)')": [
                        50
                    ]
                }
            }
        }
    },
    "e440108de57199c12d66801ca93804086e7f7632": {
        "authored_data": "2013 Jun 27 19:58",
        "commit.message": "Add support for snappy compression.\n",
        "commit.author.name": "Nong Li",
        "pcid": "483dd9f3a906fc0d87fbb3652efcc90ae01e0321",
        "changes": {
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetOutputFormat.java": {
                "old": {
                    "('parquet.hadoop#ParquetOutputFormat', 'getRecordWriter(TaskAttemptContext,Path)')": [
                        223
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetOutputFormat', 'getRecordWriter(TaskAttemptContext,Path)')": [
                        223
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/metadata/CompressionCodecName.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "parquet-hadoop/src/test/java/parquet/hadoop/example/TestInputOutputFormat.java": {
                "old": {
                    "('parquet.hadoop.example#TestInputOutputFormat', None)": [
                        65,
                        68
                    ],
                    "('parquet.hadoop.example#TestInputOutputFormat', 'testReadWrite')": [
                        69,
                        82
                    ]
                },
                "new": {
                    "('parquet.hadoop.example#TestInputOutputFormat', 'testReadWrite(CompressionCodecName)')": [
                        67,
                        80
                    ],
                    "('parquet.hadoop.example#TestInputOutputFormat', None)": [
                        121,
                        127
                    ],
                    "('parquet.hadoop.example#TestInputOutputFormat', 'testReadWrite')": [
                        122,
                        123,
                        124,
                        125,
                        126
                    ]
                }
            }
        }
    },
    "ac5cbd1a48f12a0a431af07c9867b0b0ae04eceb": {
        "authored_data": "2013 Jun 23 15:13",
        "commit.message": "Implmented more efficient skip algorithm\n",
        "commit.author.name": "Jacob",
        "pcid": "8285b62ceafe3fe096ebe1836142445acf0a9586",
        "changes": {
            "parquet-column/src/main/java/parquet/column/impl/ColumnReaderImpl.java": {
                "old": {
                    "('parquet.column.impl#ColumnReaderImpl', 'isFullyConsumed')": [
                        271
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'writeCurrentValueToConverter')": [
                        280
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getCurrentValueDictionaryID')": [
                        286
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getInteger')": [
                        296
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getBoolean')": [
                        306
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getLong')": [
                        316
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getBinary')": [
                        326
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getFloat')": [
                        336
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getDouble')": [
                        346
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', None)": [
                        362,
                        363,
                        364,
                        367,
                        368,
                        369,
                        370
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'skip')": [
                        365,
                        366
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'checkValueRead')": [
                        385,
                        389
                    ]
                },
                "new": {
                    "('parquet.column.impl#ColumnReaderImpl', None)": [
                        50,
                        405,
                        406,
                        407,
                        408,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'bindToDictionary(Dictionary)')": [
                        103,
                        104,
                        105,
                        106
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'bind(PrimitiveTypeName)')": [
                        143,
                        144,
                        145,
                        146,
                        162,
                        163,
                        164,
                        165,
                        181,
                        182,
                        183,
                        184,
                        201,
                        202,
                        203,
                        204,
                        230,
                        231,
                        232,
                        233,
                        249,
                        250,
                        251,
                        252
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'isFullyConsumed')": [
                        300
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'writeCurrentValueToConverter')": [
                        309
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getCurrentValueDictionaryID')": [
                        315
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getInteger')": [
                        325
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getBoolean')": [
                        335
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getLong')": [
                        345
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getBinary')": [
                        355
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getFloat')": [
                        365
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getDouble')": [
                        375
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'checkValueRead(boolean)')": [
                        409,
                        413,
                        414,
                        415,
                        416,
                        417
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'skip')": [
                        434,
                        435
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/ValuesReader.java": {
                "new": {
                    "('parquet.column.values#ValuesReader', None)": [
                        75,
                        76,
                        79,
                        80,
                        81,
                        86,
                        87,
                        88,
                        89,
                        90,
                        103,
                        104,
                        107,
                        108,
                        109,
                        114,
                        115,
                        116,
                        117,
                        118,
                        131,
                        132,
                        135,
                        136,
                        137,
                        144,
                        145,
                        146
                    ],
                    "('parquet.column.values#ValuesReader', 'skipBoolean')": [
                        77,
                        78
                    ],
                    "('parquet.column.values#ValuesReader', 'readBytes')": [
                        85
                    ],
                    "('parquet.column.values#ValuesReader', 'skipBytes')": [
                        91
                    ],
                    "('parquet.column.values#ValuesReader', 'skipFloat')": [
                        105,
                        106
                    ],
                    "('parquet.column.values#ValuesReader', 'readDouble')": [
                        113
                    ],
                    "('parquet.column.values#ValuesReader', 'skipDouble')": [
                        119
                    ],
                    "('parquet.column.values#ValuesReader', 'skipInteger')": [
                        133,
                        134
                    ],
                    "('parquet.column.values#ValuesReader', 'skipLong')": [
                        147,
                        148
                    ],
                    "(None, None)": [
                        149
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/dictionary/DictionaryValuesReader.java": {
                "new": {
                    "('parquet.column.values.dictionary#DictionaryValuesReader', None)": [
                        80
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesReader', 'skipBytes')": [
                        81,
                        82,
                        83,
                        84,
                        85
                    ],
                    "(None, None)": [
                        86,
                        87
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/plain/BinaryPlainValuesReader.java": {
                "new": {
                    "('parquet.column.values.plain#BinaryPlainValuesReader', 'skipBytes')": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55
                    ],
                    "('parquet.column.values.plain#BinaryPlainValuesReader', None)": [
                        56,
                        57,
                        58,
                        59
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/plain/BooleanPlainValuesReader.java": {
                "new": {
                    "('parquet.column.values.plain#BooleanPlainValuesReader', None)": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        55
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesReader', 'skipBoolean')": [
                        53,
                        54
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/plain/PlainValuesReader.java": {
                "new": {
                    "('parquet.column.values.plain#PlainValuesReader', 'skipFloat')": [
                        49,
                        50,
                        51,
                        52,
                        53
                    ],
                    "('parquet.column.values.plain#PlainValuesReader', None)": [
                        54,
                        55,
                        56,
                        57,
                        63,
                        64,
                        65,
                        66,
                        90,
                        91,
                        92,
                        93,
                        99,
                        100,
                        101,
                        102
                    ],
                    "('parquet.column.values.plain#PlainValuesReader', 'skipDouble')": [
                        67,
                        68,
                        69,
                        70,
                        71
                    ],
                    "('parquet.column.values.plain#PlainValuesReader', 'skipInteger')": [
                        85,
                        86,
                        87,
                        88,
                        89
                    ],
                    "('parquet.column.values.plain#PlainValuesReader', 'skipLong')": [
                        103,
                        104,
                        105,
                        106,
                        107
                    ]
                }
            }
        }
    },
    "8285b62ceafe3fe096ebe1836142445acf0a9586": {
        "authored_data": "2013 Jun 23 13:13",
        "commit.message": "Fixed bug querying on Name,Url\n",
        "commit.author.name": "Jacob",
        "pcid": "48bb48e6dfb9328e6071af68dd19b76aa8ab74a9",
        "changes": {
            "parquet-column/src/main/java/parquet/column/impl/ColumnReaderImpl.java": {
                "old": {
                    "('parquet.column.impl#ColumnReaderImpl', 'isFullyConsumed')": [
                        271
                    ]
                },
                "new": {
                    "('parquet.column.impl#ColumnReaderImpl', 'isFullyConsumed')": [
                        271
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/filter/ColumnRecordFilter.java": {
                "new": {
                    "('parquet.filter#ColumnRecordFilter', None)": [
                        24,
                        25,
                        26
                    ],
                    "('parquet.filter#ColumnRecordFilter', 'isMatch')": [
                        60
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/RecordReaderImplementation.java": {
                "old": {
                    "('parquet.io#RecordReaderImplementation', None)": [
                        240
                    ],
                    "('parquet.io#RecordReaderImplementation', 'read')": [
                        387,
                        388,
                        389,
                        390,
                        392,
                        393,
                        394,
                        395,
                        396,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        409,
                        410,
                        411,
                        412,
                        413,
                        415,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434
                    ]
                },
                "new": {
                    "('parquet.io#RecordReaderImplementation', None)": [
                        240,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427
                    ],
                    "('parquet.io#RecordReaderImplementation', 'read')": [
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421
                    ],
                    "('parquet.io#RecordReaderImplementation', 'skipToMatch')": [
                        428,
                        429,
                        430,
                        431,
                        432,
                        436,
                        439,
                        444,
                        448,
                        449
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/TestFiltered.java": {
                "old": {
                    "('parquet.io#TestFiltered', None)": [
                        54,
                        55,
                        56,
                        57
                    ]
                },
                "new": {
                    "('parquet.io#TestFiltered', None)": [
                        54
                    ],
                    "('parquet.io#TestFiltered', 'testFilterOnString')": [
                        60,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ]
                }
            }
        }
    },
    "f3ed65beddc41314fc19fa2a237d3379d1bdf557": {
        "authored_data": "2013 Jun 22 22:32",
        "commit.message": "fix ValueStat max value\n",
        "commit.author.name": "Davide Savazzi",
        "pcid": "ff109bc92b5bd488e54249445be997a9a577e280",
        "changes": {
            "parquet-pig/src/main/java/parquet/pig/summary/ValueStat.java": {
                "old": {
                    "('parquet.pig.summary#ValueStat', None)": [
                        21,
                        22
                    ]
                },
                "new": {
                    "('parquet.pig.summary#ValueStat', None)": [
                        21,
                        22
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/summary/TestSummary.java": {
                "new": {
                    "('parquet.pig.summary#TestSummary', None)": [
                        143
                    ],
                    "('parquet.pig.summary#TestSummary', 'testMaxIsZero')": [
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159
                    ],
                    "(None, None)": [
                        160
                    ]
                }
            }
        }
    }
}