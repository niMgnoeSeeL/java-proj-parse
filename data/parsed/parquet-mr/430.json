{
    "8bbc6cb95fd9b4b9e86c924ca1e40fd555ecac1d": {
        "authored_data": "2018 Feb 21 17:40",
        "commit.message": "PARQUET-787: Limit read allocation size\n\nWIP: This update the `ParquetFileReader` to use multiple buffers when reading a row group, instead of a single humongous allocation. As a consequence, many classes needed to be updated to accept a stream backed by multiple buffers, instead of using a single buffer directly. Assuming a single contiguous buffer would require too many copies.\n\nAuthor: Ryan Blue <blue@apache.org>\n\nCloses #390 from rdblue/PARQUET-787-limit-read-allocation-size and squashes the following commits:\n\n4abba3e7a [Ryan Blue] PARQUET-787: Update byte buffer input streams for review comments.\ne7c6c5dd2 [Ryan Blue] PARQUET-787: Fix problems from Zoltan's review.\nbe52b59fa [Ryan Blue] PARQUET-787: Update tests for both ByteBufferInputStreams.\nb0b614748 [Ryan Blue] PARQUET-787: Update encodings to use ByteBufferInputStream.\na4fa05ac5 [Ryan Blue] Refactor ByteBufferInputStream implementations.\n56b22a6a1 [Ryan Blue] Make allocation size configurable.\n103ed3d86 [Ryan Blue] Add tests for ByteBufferInputStream and fix bugs.\n614a2bbc8 [Ryan Blue] Limit allocation size to 8MB chunks for better garbage collection.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "ad80bfe559e7380fedd7998daea5f27393ab643b",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/column/impl/ColumnReaderImpl.java": {
                "old": {
                    "(None, None)": [
                        27,
                        29
                    ],
                    "('org.apache.parquet.column.impl#ColumnReaderImpl', 'initDataReader(Encoding,ByteBuffer,int,int)')": [
                        552,
                        574
                    ],
                    "('org.apache.parquet.column.impl#ColumnReaderImpl', 'readPageV1(DataPageV1)')": [
                        592,
                        593,
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601
                    ],
                    "('org.apache.parquet.column.impl#ColumnReaderImpl', 'readPageV2(DataPageV2)')": [
                        611,
                        612
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.parquet.column.impl#ColumnReaderImpl', 'initDataReader(Encoding,ByteBufferInputStream,int)')": [
                        551,
                        567,
                        573,
                        575
                    ],
                    "('org.apache.parquet.column.impl#ColumnReaderImpl', 'readPageV1(DataPageV1)')": [
                        593,
                        594,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601
                    ],
                    "('org.apache.parquet.column.impl#ColumnReaderImpl', 'readPageV2(DataPageV2)')": [
                        610,
                        612
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/ValuesReader.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('org.apache.parquet.column.values#ValuesReader', None)": [
                        43,
                        44,
                        53,
                        54,
                        55,
                        57,
                        58,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        82
                    ],
                    "('org.apache.parquet.column.values#ValuesReader', 'initFromPage(int,ByteBuffer,int)')": [
                        62
                    ],
                    "('org.apache.parquet.column.values#ValuesReader', 'initFromPage(int,byte,int)')": [
                        72,
                        73
                    ],
                    "('org.apache.parquet.column.values#ValuesReader', 'getNextOffset')": [
                        80,
                        81
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.column.values#ValuesReader', None)": [
                        42,
                        43,
                        44,
                        54
                    ],
                    "('org.apache.parquet.column.values#ValuesReader', 'initFromPage(int,ByteBufferInputStream)')": [
                        58
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/bitpacking/BitPackingValuesReader.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.parquet.column.values.bitpacking#BitPackingValuesReader', None)": [
                        47,
                        71,
                        81,
                        82,
                        83
                    ],
                    "('org.apache.parquet.column.values.bitpacking#BitPackingValuesReader', 'initFromPage(int,ByteBuffer,int)')": [
                        74,
                        78,
                        80
                    ],
                    "('org.apache.parquet.column.values.bitpacking#BitPackingValuesReader', 'getNextOffset')": [
                        84,
                        85
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.values.bitpacking#BitPackingValuesReader', None)": [
                        69
                    ],
                    "('org.apache.parquet.column.values.bitpacking#BitPackingValuesReader', 'initFromPage(int,ByteBufferInputStream)')": [
                        72,
                        76,
                        77
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/bitpacking/ByteBitPackingValuesReader.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.parquet.column.values.bitpacking#ByteBitPackingValuesReader', None)": [
                        39,
                        40,
                        41,
                        78,
                        79,
                        80
                    ],
                    "('org.apache.parquet.column.values.bitpacking#ByteBitPackingValuesReader', 'readInteger')": [
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        62
                    ],
                    "('org.apache.parquet.column.values.bitpacking#ByteBitPackingValuesReader', 'initFromPage(int,ByteBuffer,int)')": [
                        69,
                        73,
                        74,
                        75,
                        77
                    ],
                    "('org.apache.parquet.column.values.bitpacking#ByteBitPackingValuesReader', 'getNextOffset')": [
                        81,
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        27
                    ],
                    "('org.apache.parquet.column.values.bitpacking#ByteBitPackingValuesReader', None)": [
                        40
                    ],
                    "('org.apache.parquet.column.values.bitpacking#ByteBitPackingValuesReader', 'readInteger')": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63
                    ],
                    "('org.apache.parquet.column.values.bitpacking#ByteBitPackingValuesReader', 'initFromPage(int,ByteBufferInputStream)')": [
                        71,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesReader.java": {
                "old": {
                    "(None, None)": [
                        21,
                        31
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesReader', None)": [
                        46,
                        57,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        86,
                        87,
                        90,
                        91
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesReader', 'initFromPage(int,ByteBuffer,int)')": [
                        70,
                        71,
                        73,
                        84
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesReader', 'getNextOffset')": [
                        88,
                        89
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesReader', 'loadNewBlockToBuffer')": [
                        126
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesReader', 'unpackMiniBlock(BytePackerForLong)')": [
                        155
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesReader', 'unpack8Values(BytePackerForLong)')": [
                        161,
                        162,
                        163,
                        164,
                        166,
                        167
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesReader', None)": [
                        44,
                        59,
                        76
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesReader', 'initFromPage(int,ByteBufferInputStream)')": [
                        62,
                        63
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesReader', 'loadNewBlockToBuffer')": [
                        111
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesReader', 'unpackMiniBlock(BytePackerForLong)')": [
                        140
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesReader', 'unpack8Values(BytePackerForLong)')": [
                        146,
                        147,
                        148,
                        149,
                        150
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/deltalengthbytearray/DeltaLengthByteArrayValuesReader.java": {
                "old": {
                    "('org.apache.parquet.column.values.deltalengthbytearray#DeltaLengthByteArrayValuesReader', None)": [
                        41,
                        42
                    ],
                    "('org.apache.parquet.column.values.deltalengthbytearray#DeltaLengthByteArrayValuesReader', 'initFromPage(int,ByteBuffer,int)')": [
                        49,
                        51,
                        52,
                        53,
                        54,
                        55
                    ],
                    "('org.apache.parquet.column.values.deltalengthbytearray#DeltaLengthByteArrayValuesReader', 'readBytes')": [
                        61,
                        62,
                        63
                    ],
                    "('org.apache.parquet.column.values.deltalengthbytearray#DeltaLengthByteArrayValuesReader', 'skip')": [
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        28,
                        75
                    ],
                    "('org.apache.parquet.column.values.deltalengthbytearray#DeltaLengthByteArrayValuesReader', None)": [
                        43,
                        65
                    ],
                    "('org.apache.parquet.column.values.deltalengthbytearray#DeltaLengthByteArrayValuesReader', 'initFromPage(int,ByteBufferInputStream)')": [
                        50,
                        52,
                        53,
                        54,
                        55
                    ],
                    "('org.apache.parquet.column.values.deltalengthbytearray#DeltaLengthByteArrayValuesReader', 'readBytes')": [
                        61,
                        62,
                        63,
                        64
                    ],
                    "('org.apache.parquet.column.values.deltalengthbytearray#DeltaLengthByteArrayValuesReader', 'skip')": [
                        71,
                        72,
                        73,
                        74
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader.java": {
                "old": {
                    "('org.apache.parquet.column.values.deltastrings#DeltaByteArrayReader', 'initFromPage(int,ByteBuffer,int)')": [
                        49,
                        51,
                        52,
                        53
                    ],
                    "('org.apache.parquet.column.values.deltastrings#DeltaByteArrayReader', None)": [
                        55
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.parquet.column.values.deltastrings#DeltaByteArrayReader', 'initFromPage(int,ByteBufferInputStream)')": [
                        51,
                        53,
                        54
                    ],
                    "('org.apache.parquet.column.values.deltastrings#DeltaByteArrayReader', None)": [
                        56
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/dictionary/DictionaryValuesReader.java": {
                "old": {
                    "('org.apache.parquet.column.values.dictionary#DictionaryValuesReader', 'initFromPage(int,ByteBuffer,int)')": [
                        55,
                        57,
                        58,
                        59
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.values.dictionary#DictionaryValuesReader', 'initFromPage(int,ByteBufferInputStream)')": [
                        55,
                        57,
                        58,
                        59,
                        60
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/dictionary/PlainValuesDictionary.java": {
                "old": {
                    "('org.apache.parquet.column.values.dictionary#PlainValuesDictionary', None)": [
                        153,
                        156,
                        196,
                        199,
                        239,
                        242,
                        282,
                        285
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.parquet.column.values.dictionary#PlainValuesDictionary', None)": [
                        154,
                        157,
                        197,
                        200,
                        240,
                        243,
                        283,
                        286
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/plain/BinaryPlainValuesReader.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.column.values.plain#BinaryPlainValuesReader', None)": [
                        34,
                        35
                    ],
                    "('org.apache.parquet.column.values.plain#BinaryPlainValuesReader', 'readBytes')": [
                        40,
                        41,
                        42,
                        43,
                        45,
                        47
                    ],
                    "('org.apache.parquet.column.values.plain#BinaryPlainValuesReader', 'skip')": [
                        54,
                        55,
                        57,
                        59
                    ],
                    "('org.apache.parquet.column.values.plain#BinaryPlainValuesReader', 'initFromPage(int,ByteBuffer,int)')": [
                        64,
                        66,
                        67,
                        68
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet.column.values.plain#BinaryPlainValuesReader', None)": [
                        34
                    ],
                    "('org.apache.parquet.column.values.plain#BinaryPlainValuesReader', 'readBytes')": [
                        39,
                        40,
                        42,
                        44
                    ],
                    "('org.apache.parquet.column.values.plain#BinaryPlainValuesReader', 'skip')": [
                        51,
                        52,
                        54,
                        56
                    ],
                    "('org.apache.parquet.column.values.plain#BinaryPlainValuesReader', 'initFromPage(int,ByteBufferInputStream)')": [
                        61,
                        63,
                        64,
                        65
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/plain/BooleanPlainValuesReader.java": {
                "old": {
                    "(None, None)": [
                        24,
                        74,
                        75
                    ],
                    "('org.apache.parquet.column.values.plain#BooleanPlainValuesReader', None)": [
                        63,
                        70,
                        71
                    ],
                    "('org.apache.parquet.column.values.plain#BooleanPlainValuesReader', 'initFromPage(int,ByteBuffer,int)')": [
                        66,
                        67,
                        68
                    ],
                    "('org.apache.parquet.column.values.plain#BooleanPlainValuesReader', 'getNextOffset')": [
                        72,
                        73
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.parquet.column.values.plain#BooleanPlainValuesReader', None)": [
                        63
                    ],
                    "('org.apache.parquet.column.values.plain#BooleanPlainValuesReader', 'initFromPage(int,ByteBufferInputStream)')": [
                        66,
                        67,
                        68
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/plain/FixedLenByteArrayPlainValuesReader.java": {
                "old": {
                    "('org.apache.parquet.column.values.plain#FixedLenByteArrayPlainValuesReader', None)": [
                        36,
                        37,
                        38
                    ],
                    "('org.apache.parquet.column.values.plain#FixedLenByteArrayPlainValuesReader', 'readBytes')": [
                        47,
                        48,
                        49,
                        50,
                        51
                    ],
                    "('org.apache.parquet.column.values.plain#FixedLenByteArrayPlainValuesReader', 'skip')": [
                        57
                    ],
                    "('org.apache.parquet.column.values.plain#FixedLenByteArrayPlainValuesReader', 'initFromPage(int,ByteBuffer,int)')": [
                        61,
                        63,
                        64,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.column.values.plain#FixedLenByteArrayPlainValuesReader', None)": [
                        37,
                        38,
                        39,
                        60
                    ],
                    "('org.apache.parquet.column.values.plain#FixedLenByteArrayPlainValuesReader', 'readBytes')": [
                        48,
                        49,
                        50
                    ],
                    "('org.apache.parquet.column.values.plain#FixedLenByteArrayPlainValuesReader', 'skip')": [
                        56,
                        57,
                        58,
                        59
                    ],
                    "('org.apache.parquet.column.values.plain#FixedLenByteArrayPlainValuesReader', 'initFromPage(int,ByteBufferInputStream)')": [
                        64,
                        66,
                        67,
                        68
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/plain/PlainValuesReader.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.parquet.column.values.plain#PlainValuesReader', None)": [
                        42,
                        43,
                        44,
                        45,
                        50,
                        51
                    ],
                    "('org.apache.parquet.column.values.plain#PlainValuesReader', 'initFromPage(int,ByteBuffer,int)')": [
                        47,
                        48,
                        49
                    ],
                    "('org.apache.parquet.column.values.plain#PlainValuesReader', 'toInputStream(ByteBuffer,int)')": [
                        52,
                        53
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.values.plain#PlainValuesReader', 'initFromPage(int,ByteBufferInputStream)')": [
                        42,
                        43,
                        44
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/rle/RunLengthBitPackingHybridDecoder.java": {
                "old": {
                    "(None, None)": [
                        25,
                        27
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', None)": [
                        38,
                        53,
                        54,
                        55
                    ],
                    "('org.apache.parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'initFromPage(int,ByteBuffer,int)')": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52
                    ],
                    "('org.apache.parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'getNextOffset')": [
                        56,
                        57
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'initFromPage(int,ByteBufferInputStream)')": [
                        43,
                        44,
                        45,
                        46
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/rle/ZeroIntegerValuesReader.java": {
                "old": {
                    "('org.apache.parquet.column.values.rle#ZeroIntegerValuesReader', None)": [
                        33,
                        34,
                        42,
                        43,
                        44
                    ],
                    "('org.apache.parquet.column.values.rle#ZeroIntegerValuesReader', 'initFromPage(int,ByteBuffer,int)')": [
                        40,
                        41
                    ],
                    "('org.apache.parquet.column.values.rle#ZeroIntegerValuesReader', 'getNextOffset')": [
                        45,
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet.column.values.rle#ZeroIntegerValuesReader', 'initFromPage(int,ByteBufferInputStream)')": [
                        39
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/impl/TestCorruptDeltaByteArrays.java": {
                "old": {
                    "('org.apache.parquet.column.impl#TestCorruptDeltaByteArrays', 'testReassemblyWithCorruptPage')": [
                        103,
                        104,
                        105,
                        109,
                        118
                    ],
                    "('org.apache.parquet.column.impl#TestCorruptDeltaByteArrays', 'testReassemblyWithoutCorruption')": [
                        143,
                        149
                    ],
                    "('org.apache.parquet.column.impl#TestCorruptDeltaByteArrays', 'testOldReassemblyWithoutCorruption')": [
                        174,
                        180
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet.column.impl#TestCorruptDeltaByteArrays', 'testReassemblyWithCorruptPage')": [
                        104,
                        105,
                        106,
                        110,
                        119
                    ],
                    "('org.apache.parquet.column.impl#TestCorruptDeltaByteArrays', 'testReassemblyWithoutCorruption')": [
                        144,
                        150
                    ],
                    "('org.apache.parquet.column.impl#TestCorruptDeltaByteArrays', 'testOldReassemblyWithoutCorruption')": [
                        175,
                        181
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/values/Utils.java": {
                "old": {
                    "('org.apache.parquet.column.values#Utils', 'readData(ValuesReader,byte,int,int)')": [
                        62,
                        65
                    ],
                    "('org.apache.parquet.column.values#Utils', None)": [
                        71,
                        75,
                        76,
                        86
                    ],
                    "('org.apache.parquet.column.values#Utils', 'readData(ValuesReader,byte,int)')": [
                        72,
                        73,
                        74
                    ],
                    "('org.apache.parquet.column.values#Utils', 'readInts(ValuesReader,byte,int,int)')": [
                        77,
                        80
                    ],
                    "('org.apache.parquet.column.values#Utils', 'readInts(ValuesReader,byte,int)')": [
                        87,
                        88,
                        89
                    ],
                    "(None, None)": [
                        90
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.parquet.column.values#Utils', 'readData(ValuesReader,ByteBufferInputStream,int)')": [
                        63,
                        66
                    ],
                    "('org.apache.parquet.column.values#Utils', None)": [
                        72
                    ],
                    "('org.apache.parquet.column.values#Utils', 'readInts(ValuesReader,ByteBufferInputStream,int)')": [
                        73,
                        76
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/values/bitpacking/BitPackingPerfTest.java": {
                "old": {
                    "('org.apache.parquet.column.values.bitpacking#BitPackingPerfTest', 'readNTimes(byte,int,ValuesReader)')": [
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.parquet.column.values.bitpacking#BitPackingPerfTest', 'readNTimes(byte,int,ValuesReader)')": [
                        92
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/values/bitpacking/TestBitPackingColumn.java": {
                "old": {
                    "('org.apache.parquet.column.values.bitpacking#TestBitPackingColumn', 'validateEncodeDecode(int,int,String)')": [
                        178
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.parquet.column.values.bitpacking#TestBitPackingColumn', 'validateEncodeDecode(int,int,String)')": [
                        179
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForIntegerTest.java": {
                "old": {
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesWriterForIntegerTest', 'shouldReturnCorrectOffsetAfterInitialization')": [
                        146,
                        160,
                        161,
                        162,
                        165
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesWriterForIntegerTest', 'shouldSkip')": [
                        194
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesWriterForIntegerTest', 'shouldReadAndWrite(int,int)')": [
                        250
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesWriterForIntegerTest', 'shouldConsumePageDataInInitialization')": [
                        147,
                        161,
                        162,
                        163,
                        164,
                        165,
                        168
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesWriterForIntegerTest', 'shouldSkip')": [
                        197
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesWriterForIntegerTest', 'shouldReadAndWrite(int,int)')": [
                        253
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/values/delta/DeltaBinaryPackingValuesWriterForLongTest.java": {
                "old": {
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesWriterForLongTest', 'shouldReturnCorrectOffsetAfterInitialization')": [
                        160,
                        161,
                        162,
                        165
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesWriterForLongTest', 'shouldSkip')": [
                        193
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesWriterForLongTest', 'shouldReadAndWrite(long,int)')": [
                        247
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesWriterForLongTest', 'shouldReturnCorrectOffsetAfterInitialization')": [
                        161,
                        162,
                        163,
                        164,
                        165,
                        168
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesWriterForLongTest', 'shouldSkip')": [
                        196
                    ],
                    "('org.apache.parquet.column.values.delta#DeltaBinaryPackingValuesWriterForLongTest', 'shouldReadAndWrite(long,int)')": [
                        250
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/values/delta/benchmark/BenchmarkReadingRandomIntegers.java": {
                "old": {
                    "('org.apache.parquet.column.values.delta.benchmark#BenchmarkReadingRandomIntegers', 'readData(ValuesReader,byte)')": [
                        94
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.parquet.column.values.delta.benchmark#BenchmarkReadingRandomIntegers', 'readData(ValuesReader,byte)')": [
                        95
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/values/deltalengthbytearray/TestDeltaLengthByteArray.java": {
                "old": {
                    "('org.apache.parquet.column.values.deltalengthbytearray#TestDeltaLengthByteArray', 'testSerialization')": [
                        46
                    ],
                    "('org.apache.parquet.column.values.deltalengthbytearray#TestDeltaLengthByteArray', 'testRandomStrings')": [
                        60
                    ],
                    "('org.apache.parquet.column.values.deltalengthbytearray#TestDeltaLengthByteArray', 'testLengths')": [
                        73
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.values.deltalengthbytearray#TestDeltaLengthByteArray', 'testSerialization')": [
                        46
                    ],
                    "('org.apache.parquet.column.values.deltalengthbytearray#TestDeltaLengthByteArray', 'testRandomStrings')": [
                        60
                    ],
                    "('org.apache.parquet.column.values.deltalengthbytearray#TestDeltaLengthByteArray', 'testLengths')": [
                        73
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/values/deltalengthbytearray/benchmark/BenchmarkDeltaLengthByteArray.java": {
                "old": {
                    "('org.apache.parquet.column.values.deltalengthbytearray.benchmark#BenchmarkDeltaLengthByteArray', 'benchmarkRandomStringsWithPlainValuesWriter')": [
                        55,
                        57
                    ],
                    "('org.apache.parquet.column.values.deltalengthbytearray.benchmark#BenchmarkDeltaLengthByteArray', 'benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter')": [
                        67,
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.column.values.deltalengthbytearray.benchmark#BenchmarkDeltaLengthByteArray', 'benchmarkRandomStringsWithPlainValuesWriter')": [
                        56,
                        58
                    ],
                    "('org.apache.parquet.column.values.deltalengthbytearray.benchmark#BenchmarkDeltaLengthByteArray', 'benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter')": [
                        68,
                        70
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/values/deltastrings/TestDeltaByteArray.java": {
                "old": {
                    "('org.apache.parquet.column.values.deltastrings#TestDeltaByteArray', 'testLengths')": [
                        66,
                        74,
                        76
                    ],
                    "('org.apache.parquet.column.values.deltastrings#TestDeltaByteArray', 'assertReadWrite(DeltaByteArrayWriter,DeltaByteArrayReader,String)')": [
                        85
                    ],
                    "('org.apache.parquet.column.values.deltastrings#TestDeltaByteArray', 'assertReadWriteWithSkip(DeltaByteArrayWriter,DeltaByteArrayReader,String)')": [
                        95
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet.column.values.deltastrings#TestDeltaByteArray', 'testLengths')": [
                        67,
                        76
                    ],
                    "('org.apache.parquet.column.values.deltastrings#TestDeltaByteArray', 'assertReadWrite(DeltaByteArrayWriter,DeltaByteArrayReader,String)')": [
                        85
                    ],
                    "('org.apache.parquet.column.values.deltastrings#TestDeltaByteArray', 'assertReadWriteWithSkip(DeltaByteArrayWriter,DeltaByteArrayReader,String)')": [
                        95
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/values/deltastrings/benchmark/BenchmarkDeltaByteArray.java": {
                "old": {
                    "('org.apache.parquet.column.values.deltastrings.benchmark#BenchmarkDeltaByteArray', 'benchmarkRandomStringsWithPlainValuesWriter')": [
                        62,
                        64
                    ],
                    "('org.apache.parquet.column.values.deltastrings.benchmark#BenchmarkDeltaByteArray', 'benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter')": [
                        74,
                        76
                    ],
                    "('org.apache.parquet.column.values.deltastrings.benchmark#BenchmarkDeltaByteArray', 'benchmarkSortedStringsWithPlainValuesWriter')": [
                        86,
                        88
                    ],
                    "('org.apache.parquet.column.values.deltastrings.benchmark#BenchmarkDeltaByteArray', 'benchmarkSortedStringsWithDeltaLengthByteArrayValuesWriter')": [
                        98,
                        100
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet.column.values.deltastrings.benchmark#BenchmarkDeltaByteArray', 'benchmarkRandomStringsWithPlainValuesWriter')": [
                        63,
                        65
                    ],
                    "('org.apache.parquet.column.values.deltastrings.benchmark#BenchmarkDeltaByteArray', 'benchmarkRandomStringsWithDeltaLengthByteArrayValuesWriter')": [
                        75,
                        77
                    ],
                    "('org.apache.parquet.column.values.deltastrings.benchmark#BenchmarkDeltaByteArray', 'benchmarkSortedStringsWithPlainValuesWriter')": [
                        87,
                        89
                    ],
                    "('org.apache.parquet.column.values.deltastrings.benchmark#BenchmarkDeltaByteArray', 'benchmarkSortedStringsWithDeltaLengthByteArrayValuesWriter')": [
                        99,
                        101
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/values/dictionary/TestDictionary.java": {
                "old": {
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'testBinaryDictionaryFallBack')": [
                        121
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'testLongDictionary')": [
                        207,
                        213
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'roundTripLong(FallbackValuesWriter,ValuesReader,int)')": [
                        231
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'testDoubleDictionary')": [
                        277,
                        283
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'roundTripDouble(FallbackValuesWriter,ValuesReader,int)')": [
                        302
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'testIntDictionary')": [
                        348,
                        354
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'roundTripInt(FallbackValuesWriter,ValuesReader,int)')": [
                        373
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'testFloatDictionary')": [
                        419,
                        425
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'roundTripFloat(FallbackValuesWriter,ValuesReader,int)')": [
                        444
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'testZeroValues')": [
                        479,
                        480
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'checkDistinct(int,BytesInput,ValuesReader,String)')": [
                        493
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'checkRepeated(int,BytesInput,ValuesReader,String)')": [
                        500
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'testBinaryDictionaryFallBack')": [
                        122
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'testLongDictionary')": [
                        208,
                        214
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'roundTripLong(FallbackValuesWriter,ValuesReader,int)')": [
                        232
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'testDoubleDictionary')": [
                        278,
                        284
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'roundTripDouble(FallbackValuesWriter,ValuesReader,int)')": [
                        303
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'testIntDictionary')": [
                        349,
                        355
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'roundTripInt(FallbackValuesWriter,ValuesReader,int)')": [
                        374
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'testFloatDictionary')": [
                        420,
                        426
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'roundTripFloat(FallbackValuesWriter,ValuesReader,int)')": [
                        445
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'testZeroValues')": [
                        480,
                        481,
                        482
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'checkDistinct(int,BytesInput,ValuesReader,String)')": [
                        495
                    ],
                    "('org.apache.parquet.column.values.dictionary#TestDictionary', 'checkRepeated(int,BytesInput,ValuesReader,String)')": [
                        502
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/values/rle/RunLengthBitPackingHybridIntegrationTest.java": {
                "old": {
                    "('org.apache.parquet.column.values.rle#RunLengthBitPackingHybridIntegrationTest', 'doIntegrationTest(int)')": [
                        75
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.values.rle#RunLengthBitPackingHybridIntegrationTest', 'doIntegrationTest(int)')": [
                        75
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder.java": {
                "old": {
                    "(None, None)": [
                        24,
                        31
                    ]
                }
            },
            "parquet-common/src/main/java/org/apache/parquet/bytes/ByteBufferInputStream.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', None)": [
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        49,
                        50,
                        51,
                        60,
                        66,
                        67,
                        68,
                        78
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', 'toByteBuffer')": [
                        47,
                        48
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', 'read')": [
                        52,
                        53,
                        54,
                        56,
                        57
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', 'read(byte,int,int)')": [
                        61,
                        62,
                        63,
                        64,
                        65
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', 'skip(long)')": [
                        69,
                        70,
                        71,
                        72,
                        73,
                        74
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', 'available')": [
                        79,
                        80
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        22,
                        26,
                        27
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', None)": [
                        29,
                        30,
                        44,
                        54,
                        55,
                        56,
                        58,
                        60,
                        62,
                        65,
                        66,
                        68
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', 'wrap(ByteBuffer)')": [
                        31,
                        32,
                        33,
                        34,
                        35
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', 'wrap(List)')": [
                        39,
                        40,
                        41,
                        42,
                        43
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', 'position')": [
                        47
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', 'skipFully(long)')": [
                        49,
                        50,
                        51,
                        52,
                        53
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', 'read(ByteBuffer)')": [
                        57
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', 'slice(int)')": [
                        59
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', 'sliceBuffers(long)')": [
                        61
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', 'sliceStream(long)')": [
                        63,
                        64
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', 'remainingBuffers')": [
                        67
                    ],
                    "('org.apache.parquet.bytes#ByteBufferInputStream', 'remainingStream')": [
                        69,
                        70
                    ]
                }
            },
            "parquet-common/src/main/java/org/apache/parquet/bytes/BytesInput.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27
                    ],
                    "('org.apache.parquet.bytes#BytesInput', None)": [
                        49,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        442,
                        451,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        483
                    ],
                    "('org.apache.parquet.bytes#BytesInput', 'from(ByteBuffer,int,int)')": [
                        84,
                        85
                    ],
                    "('org.apache.parquet.bytes#BytesInput', 'toInputStream')": [
                        211,
                        212
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        30
                    ],
                    "('org.apache.parquet.bytes#BytesInput', None)": [
                        77,
                        78,
                        79,
                        80,
                        81,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        454,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515
                    ],
                    "('org.apache.parquet.bytes#BytesInput', 'from(ByteBuffer)')": [
                        82,
                        83,
                        84,
                        85,
                        86
                    ],
                    "('org.apache.parquet.bytes#BytesInput', 'from(List)')": [
                        93,
                        94,
                        95,
                        96,
                        97
                    ],
                    "('org.apache.parquet.bytes#BytesInput', 'toInputStream')": [
                        223,
                        224
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/HadoopReadOptions.java": {
                "old": {
                    "('org.apache.parquet#HadoopReadOptions', None)": [
                        52,
                        95
                    ]
                },
                "new": {
                    "('org.apache.parquet#HadoopReadOptions', None)": [
                        40,
                        41,
                        50,
                        55,
                        88,
                        99,
                        100
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/ParquetReadOptions.java": {
                "old": {
                    "('org.apache.parquet#ParquetReadOptions', None)": [
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        132,
                        133,
                        134,
                        229
                    ]
                },
                "new": {
                    "('org.apache.parquet#ParquetReadOptions', None)": [
                        41,
                        51,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        72,
                        106,
                        107,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        140,
                        141,
                        142,
                        143,
                        212,
                        213,
                        214,
                        215,
                        216,
                        243
                    ],
                    "('org.apache.parquet#ParquetReadOptions', 'getMaxAllocationSize')": [
                        108,
                        109
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/CodecFactory.java": {
                "old": {
                    "('org.apache.parquet.hadoop#CodecFactory', None)": [
                        118
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#CodecFactory', None)": [
                        118
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/DirectCodecFactory.java": {
                "old": {
                    "('org.apache.parquet.hadoop#DirectCodecFactory', None)": [
                        305
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#DirectCodecFactory', None)": [
                        305,
                        306,
                        307
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileReader.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ParquetFileReader', None)": [
                        882,
                        883,
                        884,
                        889,
                        890,
                        892,
                        893,
                        898,
                        970,
                        980,
                        984,
                        985,
                        986,
                        987,
                        988,
                        989,
                        990,
                        999,
                        1000,
                        1001,
                        1002,
                        1019,
                        1020,
                        1023,
                        1024,
                        1030,
                        1032,
                        1039,
                        1041,
                        1047,
                        1052,
                        1053,
                        1054,
                        1055,
                        1056,
                        1129,
                        1130,
                        1131,
                        1135,
                        1139,
                        1142,
                        1144
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ParquetFileReader', None)": [
                        882,
                        883,
                        884,
                        885,
                        890,
                        892,
                        894,
                        898,
                        970,
                        980,
                        992,
                        1011,
                        1012,
                        1018,
                        1020,
                        1027,
                        1029,
                        1035,
                        1036,
                        1041,
                        1042,
                        1043,
                        1044,
                        1045,
                        1046,
                        1047,
                        1048,
                        1049,
                        1050,
                        1051,
                        1052,
                        1053,
                        1126,
                        1127,
                        1128,
                        1129,
                        1130,
                        1131,
                        1132,
                        1133,
                        1134,
                        1135,
                        1136,
                        1137,
                        1138,
                        1139,
                        1140,
                        1141,
                        1142,
                        1143,
                        1147,
                        1151,
                        1154
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/hadoop/TestDirectCodecFactory.java": {
                "old": {
                    "('org.apache.parquet.hadoop#TestDirectCodecFactory', 'test(int,CompressionCodecName,boolean,Decompression)')": [
                        76,
                        98,
                        102
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#TestDirectCodecFactory', 'test(int,CompressionCodecName,boolean,Decompression)')": [
                        76,
                        98,
                        102
                    ]
                }
            }
        }
    },
    "ad80bfe559e7380fedd7998daea5f27393ab643b": {
        "authored_data": "2018 Feb 19 17:37",
        "commit.message": "PARQUET-1208: Occasional endless loop in unit test\n\nAuthor: Zoltan Ivanfi <zi@cloudera.com>\n\nCloses #455 from zivanfi/PARQUET-1208 and squashes the following commits:\n\n665ba37 [Zoltan Ivanfi] PARQUET-1208: Addressing Ryan's comments.\n2ff96a3 [Zoltan Ivanfi] PARQUET-1208: Occasional endless loop in unit test\n",
        "commit.author.name": "Zoltan Ivanfi",
        "pcid": "445cb9dc2f07553f8e1e5f7c1150f00fbb05c63f",
        "changes": {
            "parquet-hadoop/src/test/java/org/apache/parquet/format/converter/TestParquetMetadataConverter.java": {
                "old": {
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'randomTestFilterMetaData')": [
                        292,
                        298
                    ]
                },
                "new": {
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'randomTestFilterMetaData')": [
                        292,
                        298
                    ]
                }
            }
        }
    },
    "445cb9dc2f07553f8e1e5f7c1150f00fbb05c63f": {
        "authored_data": "2018 Feb 15 17:07",
        "commit.message": "PARQUET-1215: Add getFooter to ParquetWriter.\n\nThis adds getFooter to ParquetWriter, which will return the file footer that was written after the file is closed.\n\nAuthor: Ryan Blue <blue@apache.org>\n\nCloses #457 from rdblue/PARQUET-1215-add-footer-accessor-to-writers and squashes the following commits:\n\n79c5965a1 [Ryan Blue] PARQUET-1215: Add getFooter to ParquetWriter.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "6a4bbe94ab482e56d35e6614cf5d05eceb449714",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/InternalParquetRecordWriter.java": {
                "new": {
                    "(None, None)": [
                        35
                    ],
                    "('org.apache.parquet.hadoop#InternalParquetRecordWriter', None)": [
                        98,
                        99
                    ],
                    "('org.apache.parquet.hadoop#InternalParquetRecordWriter', 'getFooter')": [
                        100,
                        101
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'end(Map)')": [
                        673
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ParquetFileWriter', None)": [
                        124,
                        125,
                        126,
                        688,
                        689
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'end(Map)')": [
                        676
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'getFooter')": [
                        690,
                        691,
                        692
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetWriter.java": {
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.parquet.hadoop#ParquetWriter', None)": [
                        315,
                        316,
                        319,
                        320,
                        321
                    ],
                    "('org.apache.parquet.hadoop#ParquetWriter', 'getFooter')": [
                        317,
                        318
                    ]
                }
            }
        }
    },
    "6e0cc729d06f70a674edb8272b855062b6bda7b3": {
        "authored_data": "2018 Jan 25 15:16",
        "commit.message": "PARQUET-1065: Deprecate type-defined sort ordering for INT96 type.\n\nAuthor: Zoltan Ivanfi <zi@cloudera.com>\n\nCloses #454 from zivanfi/PARQUET-1065 and squashes the following commits:\n\n8559f89 [Zoltan Ivanfi] PARQUET-1065: Deprecate type-defined sort ordering for INT96 type.\n",
        "commit.author.name": "Zoltan Ivanfi",
        "pcid": "89aeec028b6f56be96b9c56c2fdbb931f80853ad",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/format/converter/ParquetMetadataConverter.java": {
                "old": {
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'defaultSortOrder(PrimitiveTypeName)')": [
                        498
                    ]
                }
            }
        }
    },
    "89aeec028b6f56be96b9c56c2fdbb931f80853ad": {
        "authored_data": "2018 Jan 22 16:21",
        "commit.message": "PARQUET-1170: Logical-type-based toString for proper representeation in tools/logs\n\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\n\nCloses #448 from gszadovszky/PARQUET-1170 and squashes the following commits:\n\n8f1f8cc [Gabor Szadovszky] PARQUET-1170: Make interval test more readable\n90f73b5 [Gabor Szadovszky] PARQUET-1170: Fix endianess of interval\n612d70b [Gabor Szadovszky] PARQUET-1170: Add unit test for different locale\nd8c5204 [Gabor Szadovszky] PARQUET-1170: Implement toString based on logical type so values will be represented properly in tools/logs etc.\n",
        "commit.author.name": "Gabor Szadovszky",
        "pcid": "878ebcd0bc2592fa9d5dda01117c07bc3c40bb33",
        "changes": {
            "parquet-cli/src/main/java/org/apache/parquet/cli/Util.java": {
                "old": {
                    "(None, None)": [
                        30,
                        31,
                        38
                    ],
                    "('org.apache.parquet.cli#Util', 'minMaxAsString(Statistics,OriginalType)')": [
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101
                    ],
                    "('org.apache.parquet.cli#Util', None)": [
                        102,
                        122,
                        123,
                        124,
                        132
                    ],
                    "('org.apache.parquet.cli#Util', 'toString(Statistics,long,OriginalType)')": [
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121
                    ],
                    "('org.apache.parquet.cli#Util', 'printable(byte,boolean,int)')": [
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131
                    ]
                },
                "new": {
                    "('org.apache.parquet.cli#Util', 'minMaxAsString(Statistics,OriginalType)')": [
                        90
                    ],
                    "('org.apache.parquet.cli#Util', 'toString(Statistics,long,OriginalType)')": [
                        97,
                        98
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/statistics/BinaryStatistics.java": {
                "old": {
                    "('org.apache.parquet.column.statistics#BinaryStatistics', 'toString(Binary)')": [
                        97,
                        98,
                        99
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.statistics#BinaryStatistics', 'stringify(Binary)')": [
                        97,
                        98
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/statistics/BooleanStatistics.java": {
                "new": {
                    "('org.apache.parquet.column.statistics#BooleanStatistics', 'stringify(Boolean)')": [
                        91,
                        92
                    ],
                    "('org.apache.parquet.column.statistics#BooleanStatistics', None)": [
                        93,
                        94,
                        95
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/statistics/DoubleStatistics.java": {
                "old": {
                    "('org.apache.parquet.column.statistics#DoubleStatistics', 'toString(Double)')": [
                        91,
                        92
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.statistics#DoubleStatistics', 'stringify(Double)')": [
                        91,
                        92
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/statistics/FloatStatistics.java": {
                "old": {
                    "('org.apache.parquet.column.statistics#FloatStatistics', 'toString(Float)')": [
                        92,
                        93
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.statistics#FloatStatistics', 'stringify(Float)')": [
                        92,
                        93
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/statistics/IntStatistics.java": {
                "old": {
                    "('org.apache.parquet.column.statistics#IntStatistics', 'toString(Integer)')": [
                        91,
                        92,
                        93
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.statistics#IntStatistics', 'stringify(Integer)')": [
                        91,
                        92
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/statistics/LongStatistics.java": {
                "old": {
                    "('org.apache.parquet.column.statistics#LongStatistics', 'toString(Long)')": [
                        91,
                        92,
                        93
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.statistics#LongStatistics', 'stringify(Long)')": [
                        91,
                        92
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/statistics/Statistics.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'minAsString')": [
                        290
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'maxAsString')": [
                        297
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', None)": [
                        298,
                        299,
                        302
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'toString(T)')": [
                        300,
                        301
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', None)": [
                        42,
                        47,
                        299,
                        300
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'minAsString')": [
                        291
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'maxAsString')": [
                        298
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'stringify(T)')": [
                        301
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/schema/OriginalType.java": {
                "old": {
                    "(None, None)": [
                        24,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/schema/PrimitiveType.java": {
                "old": {
                    "('org.apache.parquet.schema#PrimitiveType', None)": [
                        380
                    ]
                },
                "new": {
                    "('org.apache.parquet.schema#PrimitiveType', None)": [
                        734,
                        735,
                        736,
                        737,
                        738
                    ],
                    "('org.apache.parquet.schema#PrimitiveType', 'stringifier')": [
                        739,
                        740,
                        741
                    ],
                    "(None, None)": [
                        742
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/statistics/TestStatistics.java": {
                "old": {
                    "('org.apache.parquet.column.statistics#TestStatistics', 'testFloatMinMax')": [
                        256
                    ],
                    "('org.apache.parquet.column.statistics#TestStatistics', 'testDoubleMinMax')": [
                        324
                    ],
                    "('org.apache.parquet.column.statistics#TestStatistics', 'testBinaryMinMax')": [
                        379,
                        384,
                        385,
                        389,
                        394,
                        395,
                        404,
                        407,
                        408
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        29,
                        30,
                        31,
                        32
                    ],
                    "('org.apache.parquet.column.statistics#TestStatistics', 'testFloatMinMax')": [
                        261
                    ],
                    "('org.apache.parquet.column.statistics#TestStatistics', 'testDoubleMinMax')": [
                        329
                    ],
                    "('org.apache.parquet.column.statistics#TestStatistics', None)": [
                        330,
                        331,
                        332,
                        347
                    ],
                    "('org.apache.parquet.column.statistics#TestStatistics', 'testFloatingPointStringIndependentFromLocale')": [
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346
                    ],
                    "('org.apache.parquet.column.statistics#TestStatistics', 'testBinaryMinMax')": [
                        402,
                        403,
                        408,
                        409,
                        413,
                        418,
                        419,
                        428,
                        431,
                        432
                    ]
                }
            },
            "parquet-tools/src/main/java/org/apache/parquet/tools/command/DumpCommand.java": {
                "old": {
                    "('org.apache.parquet.tools.command#DumpCommand', 'dump(PrettyPrintWriter,ColumnReadStoreImpl,ColumnDescriptor,long,long,long)')": [
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321
                    ]
                },
                "new": {
                    "(None, None)": [
                        60
                    ],
                    "('org.apache.parquet.tools.command#DumpCommand', 'dump(PrettyPrintWriter,ColumnReadStoreImpl,ColumnDescriptor,long,long,long)')": [
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335
                    ]
                }
            }
        }
    },
    "878ebcd0bc2592fa9d5dda01117c07bc3c40bb33": {
        "authored_data": "2018 Jan 19 15:53",
        "commit.message": "PARQUET-1191: Type.hashCode() takes originalType into account but Type.equals() does not\n\nAuthor: Nandor Kollar <nkollar@cloudera.com>\n\nCloses #450 from nandorKollar/PARQUET-1191 and squashes the following commits:\n\nc7131df [Nandor Kollar] PARQUET-1191: Type.hashCode() takes originalType into account but Type.equals() does not\n",
        "commit.author.name": "Nandor Kollar",
        "pcid": "b80b1844edf0074ecfc915b506eb60b4f0b8704d",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/schema/Type.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.parquet.schema#Type', 'equals(Type)')": [
                        265
                    ]
                },
                "new": {
                    "('org.apache.parquet.schema#Type', 'equals(Type)')": [
                        264,
                        265
                    ]
                }
            },
            "parquet-pig/src/test/java/org/apache/parquet/pig/TestPigSchemaConverter.java": {
                "old": {
                    "(None, None)": [
                        21,
                        34,
                        38,
                        39
                    ],
                    "('org.apache.parquet.pig#TestPigSchemaConverter', None)": [
                        218,
                        227
                    ],
                    "('org.apache.parquet.pig#TestPigSchemaConverter', 'testAnnonymousField')": [
                        275,
                        279
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.parquet.pig#TestPigSchemaConverter', None)": [
                        215,
                        224
                    ],
                    "('org.apache.parquet.pig#TestPigSchemaConverter', 'testAnonymousField')": [
                        272,
                        276
                    ]
                }
            },
            "parquet-scrooge/src/main/java/org/apache/parquet/scrooge/ScroogeStructConverter.java": {
                "old": {
                    "('org.apache.parquet.scrooge#ScroogeStructConverter', 'toThriftField(ThriftStructFieldInfo)')": [
                        192
                    ]
                },
                "new": {
                    "('org.apache.parquet.scrooge#ScroogeStructConverter', 'toThriftField(ThriftStructFieldInfo)')": [
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198
                    ]
                }
            },
            "parquet-thrift/src/main/java/org/apache/parquet/thrift/ThriftSchemaConverter.java": {
                "new": {
                    "('org.apache.parquet.thrift#ThriftSchemaConverter', 'toThriftField(String,Field,ThriftField)')": [
                        168,
                        169
                    ]
                }
            },
            "parquet-thrift/src/test/java/org/apache/parquet/hadoop/thrift/TestBinary.java": {
                "old": {
                    "(None, None)": [
                        45
                    ],
                    "('org.apache.parquet.hadoop.thrift#TestBinary', 'assertSchema(ParquetMetadata)')": [
                        84,
                        85,
                        87
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop.thrift#TestBinary', 'assertSchema(ParquetMetadata)')": [
                        83
                    ]
                }
            }
        }
    },
    "c6764c4a0848abf1d581e22df8b33e28ee9f2ced": {
        "authored_data": "2018 Jan 13 00:29",
        "commit.message": "PARQUET-1025: Support new min-max statistics in parquet-mr\n\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\n\nCloses #435 from gszadovszky/PARQUET-1025 and squashes the following commits:\n\n2a63fcf13 [Gabor Szadovszky] PARQUET-1025: Use constant instead of creating new TypeDefinedOrder instances\n820df6fb7 [Gabor Szadovszky] PARQUET-1025: Minor fixes at data generation for TestStatistics\ndc838f273 [Gabor Szadovszky] PARQUET-1025: Implement ColumnOrder; other updates for rdblue's findings\n524750be0 [Gabor Szadovszky] PARQUET-1025: Some updates for zi's findings\na2ae97ce5 [Gabor Szadovszky] PARQUET-1025: Unified formatting/comments/deprecation\nbc86e8a63 [Gabor Szadovszky] PARQUET-1025: Updates according to rdblue's comments\n70e56a759 [Gabor Szadovszky] PARQUET-1025: Add explicit list of types to not to read/write statistics\n95199e5e0 [Gabor Szadovszky] PARQUET-1025: Use lexicographical comparison for Binary.compareTo Also rename SIGNED_BINARY_COMPARATOR to a more descriptive name Also added comments for haxa representation of values at unsigned comparison testing\n2f28c2c0e [Gabor Szadovszky] PARQUET-1025: Finalize read/write stats updates\nc5536a0a3 [Gabor Szadovszky] PARQUET-1025: Some modifications according to zi's comments\n318e585d9 [Gabor Szadovszky] PARQUET-1025: Finalize reading/writing new stats; modify/implement unit tests accordingly\n688ef2efe [Gabor Szadovszky] PARQUET-1025: Updates according to zi's and rdblue's comments\n51bc1f827 [Gabor Szadovszky] PARQUET-1025: Add the proper comparators as required; revert Binary related changes\n20b937f46 [Gabor Szadovszky] PARQUET-1025: reading/writing new min-max statistics; use the comparators as needed\n52cd58f61 [Gabor Szadovszky] PARQUET-1025: Move comparators to Type\n3378b6d34 [Gabor Szadovszky] PARQUET-1025: Implement comparators and use them with statistics\ne1719bb3b [Gabor Szadovszky] PARQUET-1025: Refactor Binary to prepare from custom comparators\n",
        "commit.author.name": "Gabor Szadovszky",
        "pcid": "4d996d1bac1bb1886cd9c473ba00e53e3c19cf3e",
        "changes": {
            "parquet-cli/src/main/java/org/apache/parquet/cli/Util.java": {
                "old": {
                    "(None, None)": [
                        32,
                        33,
                        34,
                        35,
                        43
                    ],
                    "('org.apache.parquet.cli#Util', 'minMaxAsString(Statistics,OriginalType)')": [
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        126
                    ],
                    "('org.apache.parquet.cli#Util', 'toString(Statistics,long,OriginalType)')": [
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        163
                    ]
                },
                "new": {
                    "('org.apache.parquet.cli#Util', 'minMaxAsString(Statistics,OriginalType)')": [
                        94,
                        101
                    ],
                    "('org.apache.parquet.cli#Util', 'toString(Statistics,long,OriginalType)')": [
                        120,
                        121
                    ]
                }
            },
            "parquet-cli/src/main/java/org/apache/parquet/cli/commands/CheckParquet251Command.java": {
                "old": {
                    "('org.apache.parquet.cli.commands#CheckParquet251Command', None)": [
                        202,
                        205,
                        346,
                        347
                    ]
                },
                "new": {
                    "(None, None)": [
                        56
                    ],
                    "('org.apache.parquet.cli.commands#CheckParquet251Command', None)": [
                        188,
                        192,
                        205,
                        208,
                        349,
                        350
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/ColumnDescriptor.java": {
                "old": {
                    "('org.apache.parquet.column#ColumnDescriptor', None)": [
                        34,
                        35,
                        46,
                        58,
                        60,
                        63
                    ],
                    "('org.apache.parquet.column#ColumnDescriptor', 'getType')": [
                        93
                    ],
                    "('org.apache.parquet.column#ColumnDescriptor', 'getTypeLength')": [
                        100
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        25
                    ],
                    "('org.apache.parquet.column#ColumnDescriptor', None)": [
                        36,
                        46,
                        48,
                        49,
                        60,
                        62,
                        63,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        104,
                        106,
                        113,
                        115,
                        118,
                        119,
                        120,
                        121,
                        122
                    ],
                    "('org.apache.parquet.column#ColumnDescriptor', 'getType')": [
                        108
                    ],
                    "('org.apache.parquet.column#ColumnDescriptor', 'getTypeLength')": [
                        117
                    ],
                    "('org.apache.parquet.column#ColumnDescriptor', 'getPrimitiveType')": [
                        123,
                        124
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/impl/ColumnWriterV1.java": {
                "old": {
                    "('org.apache.parquet.column.impl#ColumnWriterV1', 'resetStatistics')": [
                        83
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.impl#ColumnWriterV1', 'resetStatistics')": [
                        83
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/impl/ColumnWriterV2.java": {
                "old": {
                    "('org.apache.parquet.column.impl#ColumnWriterV2', 'resetStatistics')": [
                        80
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.impl#ColumnWriterV2', 'resetStatistics')": [
                        80
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/statistics/BinaryStatistics.java": {
                "old": {
                    "('org.apache.parquet.column.statistics#BinaryStatistics', 'isSmallerThan(long)')": [
                        71,
                        72
                    ],
                    "('org.apache.parquet.column.statistics#BinaryStatistics', 'toString')": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82
                    ],
                    "('org.apache.parquet.column.statistics#BinaryStatistics', 'updateStats(Binary,Binary)')": [
                        90,
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        165
                    ],
                    "('org.apache.parquet.column.statistics#BinaryStatistics', None)": [
                        27,
                        28,
                        29,
                        30,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        161,
                        162
                    ],
                    "('org.apache.parquet.column.statistics#BinaryStatistics', 'toString(Binary)')": [
                        97,
                        98,
                        99
                    ],
                    "('org.apache.parquet.column.statistics#BinaryStatistics', 'isSmallerThan(long)')": [
                        103,
                        104
                    ],
                    "('org.apache.parquet.column.statistics#BinaryStatistics', 'updateStats(Binary,Binary)')": [
                        112,
                        113
                    ],
                    "('org.apache.parquet.column.statistics#BinaryStatistics', 'copy')": [
                        163,
                        164
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/statistics/BooleanStatistics.java": {
                "old": {
                    "('org.apache.parquet.column.statistics#BooleanStatistics', None)": [
                        69,
                        77,
                        78
                    ],
                    "('org.apache.parquet.column.statistics#BooleanStatistics', 'toString')": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('org.apache.parquet.column.statistics#BooleanStatistics', 'updateStats(boolean,boolean)')": [
                        80,
                        81
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        141
                    ],
                    "('org.apache.parquet.column.statistics#BooleanStatistics', None)": [
                        27,
                        28,
                        29,
                        30,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        118,
                        119,
                        122,
                        123,
                        137,
                        138
                    ],
                    "('org.apache.parquet.column.statistics#BooleanStatistics', 'updateStats(boolean,boolean)')": [
                        96,
                        97
                    ],
                    "('org.apache.parquet.column.statistics#BooleanStatistics', 'compareMinToValue(boolean)')": [
                        116,
                        117
                    ],
                    "('org.apache.parquet.column.statistics#BooleanStatistics', 'compareMaxToValue(boolean)')": [
                        120,
                        121
                    ],
                    "('org.apache.parquet.column.statistics#BooleanStatistics', 'copy')": [
                        139,
                        140
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/statistics/DoubleStatistics.java": {
                "old": {
                    "('org.apache.parquet.column.statistics#DoubleStatistics', None)": [
                        69,
                        77,
                        78
                    ],
                    "('org.apache.parquet.column.statistics#DoubleStatistics', 'toString')": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('org.apache.parquet.column.statistics#DoubleStatistics', 'updateStats(double,double)')": [
                        80,
                        81
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        146
                    ],
                    "('org.apache.parquet.column.statistics#DoubleStatistics', None)": [
                        27,
                        28,
                        29,
                        30,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        93,
                        94,
                        95,
                        123,
                        124,
                        127,
                        128,
                        142,
                        143
                    ],
                    "('org.apache.parquet.column.statistics#DoubleStatistics', 'toString(Double)')": [
                        91,
                        92
                    ],
                    "('org.apache.parquet.column.statistics#DoubleStatistics', 'updateStats(double,double)')": [
                        101,
                        102
                    ],
                    "('org.apache.parquet.column.statistics#DoubleStatistics', 'compareMinToValue(double)')": [
                        121,
                        122
                    ],
                    "('org.apache.parquet.column.statistics#DoubleStatistics', 'compareMaxToValue(double)')": [
                        125,
                        126
                    ],
                    "('org.apache.parquet.column.statistics#DoubleStatistics', 'copy')": [
                        144,
                        145
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/statistics/FloatStatistics.java": {
                "old": {
                    "('org.apache.parquet.column.statistics#FloatStatistics', None)": [
                        69,
                        77,
                        78
                    ],
                    "('org.apache.parquet.column.statistics#FloatStatistics', 'toString')": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('org.apache.parquet.column.statistics#FloatStatistics', 'updateStats(float,float)')": [
                        80,
                        81
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        147
                    ],
                    "('org.apache.parquet.column.statistics#FloatStatistics', None)": [
                        27,
                        28,
                        29,
                        30,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        94,
                        95,
                        96,
                        124,
                        125,
                        128,
                        129,
                        143,
                        144
                    ],
                    "('org.apache.parquet.column.statistics#FloatStatistics', 'toString(Float)')": [
                        92,
                        93
                    ],
                    "('org.apache.parquet.column.statistics#FloatStatistics', 'updateStats(float,float)')": [
                        102,
                        103
                    ],
                    "('org.apache.parquet.column.statistics#FloatStatistics', 'compareMinToValue(float)')": [
                        122,
                        123
                    ],
                    "('org.apache.parquet.column.statistics#FloatStatistics', 'compareMaxToValue(float)')": [
                        126,
                        127
                    ],
                    "('org.apache.parquet.column.statistics#FloatStatistics', 'copy')": [
                        145,
                        146
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/statistics/IntStatistics.java": {
                "old": {
                    "('org.apache.parquet.column.statistics#IntStatistics', None)": [
                        69,
                        77,
                        78
                    ],
                    "('org.apache.parquet.column.statistics#IntStatistics', 'toString')": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('org.apache.parquet.column.statistics#IntStatistics', 'updateStats(int,int)')": [
                        80,
                        81
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        147
                    ],
                    "('org.apache.parquet.column.statistics#IntStatistics', None)": [
                        27,
                        28,
                        29,
                        30,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        94,
                        95,
                        96,
                        124,
                        125,
                        128,
                        129,
                        143,
                        144
                    ],
                    "('org.apache.parquet.column.statistics#IntStatistics', 'toString(Integer)')": [
                        91,
                        92,
                        93
                    ],
                    "('org.apache.parquet.column.statistics#IntStatistics', 'updateStats(int,int)')": [
                        102,
                        103
                    ],
                    "('org.apache.parquet.column.statistics#IntStatistics', 'compareMinToValue(int)')": [
                        122,
                        123
                    ],
                    "('org.apache.parquet.column.statistics#IntStatistics', 'compareMaxToValue(int)')": [
                        126,
                        127
                    ],
                    "('org.apache.parquet.column.statistics#IntStatistics', 'copy')": [
                        145,
                        146
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/statistics/LongStatistics.java": {
                "old": {
                    "('org.apache.parquet.column.statistics#LongStatistics', None)": [
                        69,
                        77,
                        78
                    ],
                    "('org.apache.parquet.column.statistics#LongStatistics', 'toString')": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('org.apache.parquet.column.statistics#LongStatistics', 'updateStats(long,long)')": [
                        80,
                        81
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        147
                    ],
                    "('org.apache.parquet.column.statistics#LongStatistics', None)": [
                        27,
                        28,
                        29,
                        30,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        94,
                        95,
                        96,
                        124,
                        125,
                        128,
                        129,
                        143,
                        144
                    ],
                    "('org.apache.parquet.column.statistics#LongStatistics', 'toString(Long)')": [
                        91,
                        92,
                        93
                    ],
                    "('org.apache.parquet.column.statistics#LongStatistics', 'updateStats(long,long)')": [
                        102,
                        103
                    ],
                    "('org.apache.parquet.column.statistics#LongStatistics', 'compareMinToValue(long)')": [
                        122,
                        123
                    ],
                    "('org.apache.parquet.column.statistics#LongStatistics', 'compareMaxToValue(long)')": [
                        126,
                        127
                    ],
                    "('org.apache.parquet.column.statistics#LongStatistics', 'copy')": [
                        145,
                        146
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/statistics/Statistics.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', None)": [
                        37,
                        46,
                        201,
                        202,
                        203,
                        205,
                        253,
                        257
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'getStatsBasedOnType(PrimitiveTypeName)')": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'equals(Object)')": [
                        130,
                        131,
                        132
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'hashCode')": [
                        141
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'mergeStatistics(Statistics)')": [
                        153,
                        160
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'toString')": [
                        204
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        26,
                        27,
                        29,
                        387
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', None)": [
                        39,
                        40,
                        44,
                        45,
                        46,
                        55,
                        56,
                        57,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        237,
                        238,
                        239,
                        240,
                        241,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        272,
                        285,
                        286,
                        287,
                        288,
                        291,
                        292,
                        293,
                        294,
                        295,
                        298,
                        299,
                        302,
                        312,
                        320,
                        368,
                        372,
                        376,
                        377,
                        378,
                        379,
                        381,
                        382,
                        383,
                        384
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'getStatsBasedOnType(PrimitiveTypeName)')": [
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'createStats(Type)')": [
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'equals(Object)')": [
                        171,
                        172,
                        173,
                        174
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'hashCode')": [
                        183,
                        184
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'mergeStatistics(Statistics)')": [
                        196,
                        197,
                        204
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'comparator')": [
                        242,
                        243
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'compareMinToValue(T)')": [
                        256,
                        257
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'compareMaxToValue(T)')": [
                        270,
                        271
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'minAsString')": [
                        289,
                        290
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'maxAsString')": [
                        296,
                        297
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'toString(T)')": [
                        300,
                        301
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'toString')": [
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'copy')": [
                        380
                    ],
                    "('org.apache.parquet.column.statistics#Statistics', 'type')": [
                        385,
                        386
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/statistics/StatisticsClassException.java": {
                "old": {
                    "('org.apache.parquet.column.statistics#StatisticsClassException', None)": [
                        32
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.statistics#StatisticsClassException', None)": [
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38
                    ],
                    "('org.apache.parquet.column.statistics#StatisticsClassException', 'create(Statistics,Statistics)')": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        44
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/predicate/Statistics.java": {
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        77
                    ],
                    "('org.apache.parquet.filter2.predicate#Statistics', None)": [
                        31,
                        33,
                        34,
                        35,
                        36,
                        37,
                        41,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        70,
                        71,
                        72,
                        73,
                        74
                    ],
                    "('org.apache.parquet.filter2.predicate#Statistics', 'getComparator')": [
                        75,
                        76
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/filter2/recordlevel/IncrementallyUpdatedFilterPredicateBuilderBase.java": {
                "new": {
                    "(None, None)": [
                        26,
                        34,
                        35
                    ],
                    "('org.apache.parquet.filter2.recordlevel#IncrementallyUpdatedFilterPredicateBuilderBase', None)": [
                        61,
                        63,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        95,
                        98,
                        99
                    ],
                    "('org.apache.parquet.filter2.recordlevel#IncrementallyUpdatedFilterPredicateBuilderBase', 'getComparator(ColumnPath)')": [
                        96,
                        97
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/io/MessageColumnIO.java": {
                "old": {
                    "('org.apache.parquet.io#MessageColumnIO', 'getRecordReader(PageReadStore,RecordMaterializer,Filter)')": [
                        112
                    ]
                },
                "new": {
                    "('org.apache.parquet.io#MessageColumnIO', 'getRecordReader(PageReadStore,RecordMaterializer,Filter)')": [
                        112
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/io/PrimitiveColumnIO.java": {
                "old": {
                    "('org.apache.parquet.io#PrimitiveColumnIO', 'setLevels(int,int,String,int,List,List)')": [
                        55,
                        56,
                        57,
                        58
                    ]
                },
                "new": {
                    "('org.apache.parquet.io#PrimitiveColumnIO', 'setLevels(int,int,String,int,List,List)')": [
                        55,
                        56,
                        57
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/io/api/Binary.java": {
                "old": {
                    "('org.apache.parquet.io.api#Binary', None)": [
                        75,
                        77,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524,
                        525,
                        526,
                        527,
                        532,
                        668,
                        672,
                        673,
                        690,
                        691,
                        708,
                        709
                    ],
                    "('org.apache.parquet.io.api#Binary', 'compareTo(byte,int,int)')": [
                        76
                    ],
                    "('org.apache.parquet.io.api#Binary', 'compareTo(ByteBuffer,int,int)')": [
                        78
                    ],
                    "('org.apache.parquet.io.api#Binary', 'compareByteBufferToByteArray(ByteBuffer,int,int,byte,int,int)')": [
                        669,
                        670,
                        671
                    ],
                    "('org.apache.parquet.io.api#Binary', 'compareByteArrayToByteBuffer(byte,int,int,ByteBuffer,int,int)')": [
                        674,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680,
                        681,
                        682,
                        683,
                        684,
                        685,
                        686,
                        687,
                        688,
                        689
                    ],
                    "('org.apache.parquet.io.api#Binary', 'compareTwoByteBuffers(ByteBuffer,int,int,ByteBuffer,int,int)')": [
                        692,
                        693,
                        694,
                        695,
                        696,
                        697,
                        698,
                        699,
                        700,
                        701,
                        702,
                        703,
                        704,
                        705,
                        706,
                        707
                    ],
                    "('org.apache.parquet.io.api#Binary', 'compareTwoByteArrays(byte,int,int,byte,int,int)')": [
                        710,
                        711,
                        712,
                        713,
                        714,
                        715,
                        716,
                        717,
                        718,
                        719,
                        720,
                        721,
                        722,
                        723,
                        724,
                        725,
                        726
                    ],
                    "(None, None)": [
                        727
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ],
                    "('org.apache.parquet.io.api#Binary', None)": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        195,
                        341,
                        342,
                        343,
                        344,
                        491,
                        496
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/schema/MessageType.java": {
                "old": {
                    "('org.apache.parquet.schema#MessageType', 'getColumnDescription(String)')": [
                        98,
                        99
                    ],
                    "('org.apache.parquet.schema#MessageType', 'getColumns')": [
                        114,
                        115
                    ]
                },
                "new": {
                    "('org.apache.parquet.schema#MessageType', 'getColumnDescription(String)')": [
                        98
                    ],
                    "('org.apache.parquet.schema#MessageType', 'getColumns')": [
                        113
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/schema/PrimitiveType.java": {
                "old": {
                    "('org.apache.parquet.schema#PrimitiveType', 'withId(int)')": [
                        352
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        32,
                        734
                    ],
                    "('org.apache.parquet.schema#PrimitiveType', None)": [
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        181,
                        182,
                        183,
                        184,
                        185,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        251,
                        252,
                        253,
                        254,
                        255,
                        279,
                        280,
                        281,
                        282,
                        283,
                        305,
                        306,
                        307,
                        308,
                        309,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        379,
                        380,
                        386,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        678,
                        679,
                        718,
                        719,
                        720,
                        721,
                        722,
                        723,
                        724,
                        727,
                        728,
                        729,
                        730,
                        731
                    ],
                    "('org.apache.parquet.schema#PrimitiveType', 'requireValidColumnOrder(ColumnOrder)')": [
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        496,
                        497,
                        498
                    ],
                    "('org.apache.parquet.schema#PrimitiveType', 'withId(int)')": [
                        507,
                        508
                    ],
                    "('org.apache.parquet.schema#PrimitiveType', 'equals(Type)')": [
                        600
                    ],
                    "('org.apache.parquet.schema#PrimitiveType', 'hashCode')": [
                        612
                    ],
                    "('org.apache.parquet.schema#PrimitiveType', 'reportSchemaMergeErrorWithColumnOrder(Type)')": [
                        680,
                        681,
                        682
                    ],
                    "('org.apache.parquet.schema#PrimitiveType', 'union(Type,boolean)')": [
                        703,
                        704,
                        705,
                        706,
                        707
                    ],
                    "('org.apache.parquet.schema#PrimitiveType', 'comparator')": [
                        725,
                        726
                    ],
                    "('org.apache.parquet.schema#PrimitiveType', 'columnOrder')": [
                        732,
                        733
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/schema/Types.java": {
                "old": {
                    "('org.apache.parquet.schema#Types', None)": [
                        460
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.parquet.schema#Types', None)": [
                        320,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        478
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/statistics/TestStatistics.java": {
                "new": {
                    "('org.apache.parquet.column.statistics#TestStatistics', 'testIntMinMax')": [
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83
                    ],
                    "('org.apache.parquet.column.statistics#TestStatistics', 'testLongMinMax')": [
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151
                    ],
                    "('org.apache.parquet.column.statistics#TestStatistics', 'testFloatMinMax')": [
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219
                    ],
                    "('org.apache.parquet.column.statistics#TestStatistics', 'testDoubleMinMax')": [
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/io/api/TestBinary.java": {
                "new": {
                    "('org.apache.parquet.io.api#TestBinary', None)": [
                        251,
                        252
                    ],
                    "('org.apache.parquet.io.api#TestBinary', 'testCompare')": [
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269
                    ],
                    "(None, None)": [
                        270
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/schema/TestMessageType.java": {
                "new": {
                    "(None, None)": [
                        24,
                        26,
                        29
                    ],
                    "('org.apache.parquet.schema#TestMessageType', 'testMergeSchemaWithColumnOrder')": [
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232
                    ],
                    "('org.apache.parquet.schema#TestMessageType', None)": [
                        233,
                        234,
                        235,
                        236
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/schema/TestTypeBuilders.java": {
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.parquet.schema#TestTypeBuilders', None)": [
                        1352,
                        1364,
                        1365,
                        1366,
                        1367,
                        1379,
                        1380,
                        1381,
                        1382,
                        1395,
                        1396,
                        1397
                    ],
                    "('org.apache.parquet.schema#TestTypeBuilders', 'testTypeConstructionWithUndefinedColumnOrder')": [
                        1353,
                        1354,
                        1355,
                        1356,
                        1357,
                        1358,
                        1359,
                        1360,
                        1361,
                        1362,
                        1363
                    ],
                    "('org.apache.parquet.schema#TestTypeBuilders', 'testTypeConstructionWithTypeDefinedColumnOrder')": [
                        1368,
                        1369,
                        1370,
                        1371,
                        1372,
                        1373,
                        1374,
                        1375,
                        1376,
                        1377,
                        1378
                    ],
                    "('org.apache.parquet.schema#TestTypeBuilders', 'testTypeConstructionWithUnsupportedColumnOrder')": [
                        1383,
                        1384,
                        1385,
                        1386,
                        1387,
                        1388,
                        1389,
                        1390,
                        1391,
                        1392,
                        1393,
                        1394
                    ]
                }
            },
            "parquet-generator/src/main/java/org/apache/parquet/filter2/IncrementallyUpdatedFilterPredicateGenerator.java": {
                "old": {
                    "('org.apache.parquet.filter2#IncrementallyUpdatedFilterPredicateGenerator', None)": [
                        48,
                        51,
                        54,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65
                    ],
                    "('org.apache.parquet.filter2#IncrementallyUpdatedFilterPredicateGenerator', 'run')": [
                        82
                    ],
                    "('org.apache.parquet.filter2#IncrementallyUpdatedFilterPredicateGenerator', 'addEqNotEqCase(TypeInfo,boolean)')": [
                        193,
                        194,
                        195,
                        196,
                        197
                    ],
                    "('org.apache.parquet.filter2#IncrementallyUpdatedFilterPredicateGenerator', 'addInequalityCase(TypeInfo,String)')": [
                        225,
                        226,
                        227,
                        228,
                        229
                    ],
                    "('org.apache.parquet.filter2#IncrementallyUpdatedFilterPredicateGenerator', 'compareEquality(String,String,boolean)')": [
                        263
                    ]
                },
                "new": {
                    "('org.apache.parquet.filter2#IncrementallyUpdatedFilterPredicateGenerator', None)": [
                        50,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63
                    ],
                    "('org.apache.parquet.filter2#IncrementallyUpdatedFilterPredicateGenerator', 'run')": [
                        68,
                        69,
                        82,
                        83,
                        84,
                        92,
                        93,
                        94,
                        95
                    ],
                    "('org.apache.parquet.filter2#IncrementallyUpdatedFilterPredicateGenerator', 'addEqNotEqCase(TypeInfo,boolean)')": [
                        189,
                        200
                    ],
                    "('org.apache.parquet.filter2#IncrementallyUpdatedFilterPredicateGenerator', 'addInequalityCase(TypeInfo,String)')": [
                        218,
                        229,
                        230
                    ],
                    "('org.apache.parquet.filter2#IncrementallyUpdatedFilterPredicateGenerator', 'compareEquality(String,String,boolean)')": [
                        264
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/filter2/dictionarylevel/DictionaryFilter.java": {
                "old": {
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'expandDictionary(ColumnChunkMetaData)')": [
                        78
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'visit(Lt)')": [
                        216
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'visit(LtEq)')": [
                        257
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'visit(Gt)')": [
                        296
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'visit(GtEq)')": [
                        337
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'expandDictionary(ColumnChunkMetaData)')": [
                        79
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'visit(Lt)')": [
                        216,
                        218
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'visit(LtEq)')": [
                        258,
                        260
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'visit(Gt)')": [
                        298,
                        300
                    ],
                    "('org.apache.parquet.filter2.dictionarylevel#DictionaryFilter', 'visit(GtEq)')": [
                        340,
                        342
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/filter2/statisticslevel/StatisticsFilter.java": {
                "old": {
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'visit(Eq)')": [
                        137
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'visit(NotEq)')": [
                        176
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'visit(Lt)')": [
                        207
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'visit(LtEq)')": [
                        238
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'visit(Gt)')": [
                        269
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'visit(GtEq)')": [
                        299,
                        300
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'visit(UserDefined,boolean)')": [
                        359
                    ]
                },
                "new": {
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'visit(Eq)')": [
                        137
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'visit(NotEq)')": [
                        176
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'visit(Lt)')": [
                        207
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'visit(LtEq)')": [
                        238
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'visit(Gt)')": [
                        269
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'visit(GtEq)')": [
                        299,
                        300
                    ],
                    "('org.apache.parquet.filter2.statisticslevel#StatisticsFilter', 'visit(UserDefined,boolean)')": [
                        359,
                        360
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/format/converter/ParquetMetadataConverter.java": {
                "old": {
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'toParquetStatistics(org)')": [
                        329,
                        330,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'fromParquetStatistics(String,Statistics,PrimitiveTypeName)')": [
                        360
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'fromParquetStatisticsInternal(String,Statistics,PrimitiveTypeName,SortOrder)')": [
                        365,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'fromParquetStatistics(String,Statistics,PrimitiveType)')": [
                        392
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'fromParquetMetadata(FileMetaData)')": [
                        830,
                        849
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'fromParquetSchema(List)')": [
                        889,
                        896
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'buildChildren(Types,Iterator,int)')": [
                        902,
                        925
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'newDataPageHeader(int,int,int,org,org,org,org)')": [
                        997,
                        998
                    ]
                },
                "new": {
                    "(None, None)": [
                        47,
                        62,
                        69
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', None)": [
                        85,
                        146,
                        147,
                        375,
                        376,
                        1009,
                        1010
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'toParquetMetadata(int,ParquetMetadata)')": [
                        142,
                        143,
                        144
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'getColumnOrders(MessageType)')": [
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'toParquetStatistics(org)')": [
                        348,
                        349,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'isMinMaxStatsSupported(PrimitiveType)')": [
                        377,
                        378
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'fromParquetStatistics(String,Statistics,PrimitiveTypeName)')": [
                        396,
                        397
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'fromParquetStatisticsInternal(String,Statistics,PrimitiveType,SortOrder)')": [
                        402,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'fromParquetStatistics(String,Statistics,PrimitiveType)')": [
                        441
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'fromParquetMetadata(FileMetaData)')": [
                        879,
                        898
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'fromParquetSchema(List,List)')": [
                        938,
                        945
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'buildChildren(Types,Iterator,int,List,int)')": [
                        951,
                        952,
                        953,
                        972,
                        973,
                        974,
                        975,
                        976,
                        977,
                        978,
                        979,
                        980,
                        981,
                        986,
                        997
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'fromParquetColumnOrder(ColumnOrder)')": [
                        1011,
                        1012,
                        1013,
                        1014,
                        1015,
                        1016
                    ],
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'newDataPageHeader(int,int,int,org,org,org,org)')": [
                        1067
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ColumnChunkPageWriteStore.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.parquet.hadoop#ColumnChunkPageWriteStore', None)": [
                        82,
                        119,
                        157
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ColumnChunkPageWriteStore', None)": [
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java": {
                "old": {
                    "(None, None)": [
                        68
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', None)": [
                        119
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'startColumn(ColumnDescriptor,long,CompressionCodecName)')": [
                        320,
                        326,
                        327,
                        328
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'writeDataPage(int,int,BytesInput,Statistics,Encoding,Encoding,Encoding)')": [
                        428
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'appendRowGroup(SeekableInputStream,BlockMetaData,boolean)')": [
                        602
                    ]
                },
                "new": {
                    "(None, None)": [
                        68
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', None)": [
                        119
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'startColumn(ColumnDescriptor,long,CompressionCodecName)')": [
                        320,
                        326,
                        327
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'writeDataPage(int,int,BytesInput,Statistics,Encoding,Encoding,Encoding)')": [
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'appendRowGroup(SeekableInputStream,BlockMetaData,boolean)')": [
                        608
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/ColumnChunkMetaData.java": {
                "old": {
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkMetaData', None)": [
                        152,
                        159
                    ],
                    "('org.apache.parquet.hadoop.metadata#IntColumnChunkMetaData', None)": [
                        234
                    ],
                    "('org.apache.parquet.hadoop.metadata#LongColumnChunkMetaData', None)": [
                        339
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        29
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkMetaData', None)": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        90,
                        91,
                        176,
                        177,
                        178,
                        185,
                        186,
                        187,
                        190,
                        191,
                        192,
                        193,
                        194
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkMetaData', 'get(ColumnPath,PrimitiveTypeName,CompressionCodecName,EncodingStats,Set,Statistics,long,long,long,long,long)')": [
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkMetaData', 'get(ColumnPath,PrimitiveType,CompressionCodecName,EncodingStats,Set,Statistics,long,long,long,long,long)')": [
                        92,
                        93,
                        94
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkMetaData', 'getPrimitiveType')": [
                        195,
                        196
                    ],
                    "('org.apache.parquet.hadoop.metadata#IntColumnChunkMetaData', None)": [
                        269
                    ],
                    "('org.apache.parquet.hadoop.metadata#LongColumnChunkMetaData', None)": [
                        374
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/metadata/ColumnChunkProperties.java": {
                "old": {
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkProperties', None)": [
                        37,
                        42
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkProperties', 'equals(Object)')": [
                        71
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        27
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkProperties', None)": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        40,
                        41,
                        49,
                        54,
                        71,
                        72,
                        73,
                        74,
                        75,
                        78,
                        79,
                        80,
                        81,
                        82
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkProperties', 'get(ColumnPath,PrimitiveTypeName,CompressionCodecName,Set)')": [
                        39
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkProperties', 'get(ColumnPath,PrimitiveType,CompressionCodecName,Set)')": [
                        42,
                        43
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkProperties', 'getType')": [
                        77
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkProperties', 'getPrimitiveType')": [
                        83
                    ],
                    "('org.apache.parquet.hadoop.metadata#ColumnChunkProperties', 'equals(Object)')": [
                        95
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/format/converter/TestParquetMetadataConverter.java": {
                "old": {
                    "(None, None)": [
                        66
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testSchemaConverter')": [
                        104
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testBinaryStats')": [
                        373,
                        387,
                        388,
                        389,
                        390,
                        391,
                        398,
                        406
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testIntegerStats')": [
                        413,
                        422,
                        423
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testLongStats')": [
                        434,
                        443,
                        444
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testFloatStats')": [
                        455,
                        464,
                        465
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testDoubleStats')": [
                        478,
                        487,
                        488
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testBooleanStats')": [
                        501,
                        510,
                        511
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testIgnoreStatsWithSignedSortOrder')": [
                        533,
                        534,
                        535
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testStillUseStatsWithSignedSortOrderIfSingleValue')": [
                        541,
                        553,
                        554
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testUseStatsWithSignedSortOrder')": [
                        561,
                        576,
                        577,
                        578,
                        582,
                        583,
                        584,
                        585
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        27,
                        39,
                        40,
                        55,
                        69,
                        83
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testSchemaConverter')": [
                        110
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testBinaryStatsV1')": [
                        379,
                        380
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', None)": [
                        381,
                        382,
                        383,
                        386,
                        387,
                        435,
                        436,
                        437,
                        440,
                        441,
                        464,
                        465,
                        466,
                        469,
                        470,
                        493,
                        494,
                        495,
                        498,
                        499,
                        524,
                        525,
                        526,
                        529,
                        530,
                        555,
                        556,
                        557,
                        560,
                        561,
                        604,
                        605,
                        606,
                        609,
                        610,
                        633,
                        634,
                        635,
                        638,
                        639,
                        669,
                        670,
                        671,
                        672,
                        681,
                        682,
                        690,
                        691,
                        692,
                        714,
                        715,
                        723,
                        724,
                        725,
                        750,
                        751,
                        759,
                        760,
                        772,
                        773,
                        781,
                        782,
                        790,
                        791,
                        801,
                        802,
                        803,
                        804,
                        805,
                        806,
                        807,
                        808,
                        809,
                        810,
                        811,
                        812,
                        813,
                        814,
                        815,
                        816,
                        817,
                        818,
                        819,
                        820,
                        821,
                        822,
                        823,
                        824
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testBinaryStatsV2')": [
                        384,
                        385
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testBinaryStats(StatsHelper)')": [
                        388,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        416,
                        420,
                        421,
                        426
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testIntegerStatsV1')": [
                        433,
                        434
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testIntegerStatsV2')": [
                        438,
                        439
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testIntegerStats(StatsHelper)')": [
                        442,
                        451
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testLongStatsV1')": [
                        462,
                        463
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testLongStatsV2')": [
                        467,
                        468
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testLongStats(StatsHelper)')": [
                        471,
                        480
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testFloatStatsV1')": [
                        491,
                        492
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testFloatStatsV2')": [
                        496,
                        497
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testFloatStats(StatsHelper)')": [
                        500,
                        509
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testDoubleStatsV1')": [
                        522,
                        523
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testDoubleStatsV2')": [
                        527,
                        528
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testDoubleStats(StatsHelper)')": [
                        531,
                        540
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testBooleanStatsV1')": [
                        553,
                        554
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testBooleanStatsV2')": [
                        558,
                        559
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testBooleanStats(StatsHelper)')": [
                        562,
                        571
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testIgnoreStatsWithSignedSortOrder')": [
                        591,
                        592,
                        595,
                        596
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testStillUseStatsWithSignedSortOrderIfSingleValueV1')": [
                        602,
                        603
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testStillUseStatsWithSignedSortOrderIfSingleValueV2')": [
                        607,
                        608
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testStillUseStatsWithSignedSortOrderIfSingleValue(StatsHelper)')": [
                        611,
                        620,
                        624
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testUseStatsWithSignedSortOrderV1')": [
                        631,
                        632
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testUseStatsWithSignedSortOrderV2')": [
                        636,
                        637
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testUseStatsWithSignedSortOrder(StatsHelper)')": [
                        640,
                        653,
                        654,
                        657,
                        658,
                        662,
                        663,
                        664,
                        665,
                        666,
                        667,
                        668
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testSkippedV2Stats')": [
                        673,
                        674,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testSkippedV2Stats(PrimitiveType,Object,Object)')": [
                        683,
                        684,
                        685,
                        686,
                        687,
                        688,
                        689
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testV2OnlyStats')": [
                        693,
                        694,
                        695,
                        696,
                        697,
                        698,
                        699,
                        700,
                        701,
                        702,
                        703,
                        704,
                        705,
                        706,
                        707,
                        708,
                        709,
                        710,
                        711,
                        712,
                        713
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testV2OnlyStats(PrimitiveType,Object,Object)')": [
                        716,
                        717,
                        718,
                        719,
                        720,
                        721,
                        722
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testV2StatsEqualMinMax')": [
                        726,
                        727,
                        728,
                        729,
                        730,
                        731,
                        732,
                        733,
                        734,
                        735,
                        736,
                        737,
                        738,
                        739,
                        740,
                        741,
                        742,
                        743,
                        744,
                        745,
                        746,
                        747,
                        748,
                        749
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testV2StatsEqualMinMax(PrimitiveType,Object,Object)')": [
                        752,
                        753,
                        754,
                        755,
                        756,
                        757,
                        758
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'createStats(PrimitiveType,T,T)')": [
                        761,
                        762,
                        763,
                        764,
                        765,
                        766,
                        767,
                        768,
                        769,
                        770,
                        771
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'createStatsTyped(PrimitiveType,int,int)')": [
                        774,
                        775,
                        776,
                        777,
                        778,
                        779,
                        780
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'createStatsTyped(PrimitiveType,long,long)')": [
                        783,
                        784,
                        785,
                        786,
                        787,
                        788,
                        789
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'createStatsTyped(PrimitiveType,BigInteger,BigInteger)')": [
                        792,
                        793,
                        794,
                        795,
                        796,
                        797,
                        798,
                        799,
                        800
                    ],
                    "('org.apache.parquet.format.converter#TestParquetMetadataConverter', 'testColumnOrders')": [
                        825,
                        826,
                        827,
                        828,
                        829,
                        830,
                        831,
                        832,
                        833,
                        834,
                        835,
                        836,
                        837,
                        838,
                        839,
                        840,
                        841,
                        842,
                        843,
                        844,
                        845,
                        846,
                        847,
                        848,
                        849,
                        850,
                        851,
                        852,
                        853,
                        854,
                        855,
                        856,
                        857,
                        858,
                        859,
                        860
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/hadoop/TestParquetFileWriter.java": {
                "old": {
                    "('org.apache.parquet.hadoop#TestParquetFileWriter', 'testWriteReadStatistics')": [
                        527,
                        528,
                        531,
                        532
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#TestParquetFileWriter', 'testWriteReadStatistics')": [
                        527,
                        528,
                        531,
                        532
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/hadoop/TestUtils.java": {
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        84
                    ],
                    "('org.apache.parquet.hadoop#TestUtils', None)": [
                        66,
                        69,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.parquet.hadoop#TestUtils', 'assertStatsValuesEqual(Statistics,Statistics)')": [
                        67,
                        68
                    ],
                    "('org.apache.parquet.hadoop#TestUtils', 'assertStatsValuesEqual(String,Statistics,Statistics)')": [
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/statistics/RandomValues.java": {
                "old": {
                    "('org.apache.parquet.statistics#RandomValues', None)": [
                        29,
                        40,
                        41,
                        66,
                        70,
                        85,
                        106,
                        107,
                        108,
                        109,
                        117,
                        200,
                        219
                    ]
                },
                "new": {
                    "('org.apache.parquet.statistics#RandomValues', None)": [
                        29,
                        40,
                        41,
                        66,
                        70,
                        85,
                        106,
                        107,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        271,
                        290
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/statistics/TestStatistics.java": {
                "old": {
                    "('org.apache.parquet.statistics#TestStatistics', None)": [
                        181,
                        182,
                        283,
                        309,
                        310,
                        318,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        335,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        375,
                        376,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403
                    ]
                },
                "new": {
                    "(None, None)": [
                        45,
                        48,
                        49,
                        50,
                        51,
                        59,
                        61,
                        69
                    ],
                    "('org.apache.parquet.statistics#TestStatistics', None)": [
                        174,
                        178,
                        191,
                        192,
                        293,
                        294,
                        295,
                        296,
                        297,
                        323,
                        324,
                        335,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        386,
                        387,
                        388,
                        389,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        429,
                        430,
                        431,
                        432,
                        433,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468
                    ]
                }
            },
            "parquet-thrift/src/test/java/org/apache/parquet/hadoop/thrift/TestThriftToParquetFileWriter.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.parquet.hadoop.thrift#TestThriftToParquetFileWriter', 'testWriteStatistics')": [
                        125,
                        128,
                        131,
                        134,
                        139,
                        174,
                        177,
                        180,
                        183,
                        188
                    ]
                },
                "new": {
                    "(None, None)": [
                        54
                    ],
                    "('org.apache.parquet.hadoop.thrift#TestThriftToParquetFileWriter', 'testWriteStatistics')": [
                        124,
                        127,
                        130,
                        133,
                        138,
                        173,
                        176,
                        179,
                        182,
                        187
                    ]
                }
            }
        }
    },
    "4d996d1bac1bb1886cd9c473ba00e53e3c19cf3e": {
        "authored_data": "2018 Jan 10 13:59",
        "commit.message": "PARQUET-386: Printing out the statistics of metadata in parquet-tools\n\nAuthor: Gabor Szadovszky <gabor.szadovszky@cloudera.com>\n\nCloses #442 from gszadovszky/PARQUET-386 and squashes the following commits:\n\ndb8c4b9 [Gabor Szadovszky] PARQUET-386: Printing out the statistics of metadata in parquet-tools\n",
        "commit.author.name": "Gabor Szadovszky",
        "pcid": "3783ca4476fec8186c867e4e57084e649c318c6b",
        "changes": {
            "parquet-tools/src/main/java/org/apache/parquet/tools/util/MetadataUtils.java": {
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.parquet.tools.util#MetadataUtils', 'showDetails(PrettyPrintWriter,ColumnChunkMetaData,boolean)')": [
                        151,
                        152,
                        153,
                        154,
                        155,
                        156
                    ]
                }
            }
        }
    }
}