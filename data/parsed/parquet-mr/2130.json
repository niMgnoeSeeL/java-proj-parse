{
    "25608ae6eb4088a81a7fe4969409c30ecc81a7a1": {
        "authored_data": "2013 Mar 06 02:04",
        "commit.message": "cleanup\n",
        "commit.author.name": "julien",
        "pcid": "76fd1d8011bf4f125118e28f11f5aa5539f06fbd",
        "changes": {
            "parquet-column/src/main/java/parquet/io/MessageColumnIO.java": {
                "old": {
                    "('parquet.io#MessageColumnIO', 'getRecordWriter(ColumnWriteStore)')": [
                        250
                    ]
                },
                "new": {
                    "('parquet.io#MessageColumnIO', 'getRecordWriter(ColumnWriteStore)')": [
                        250,
                        251,
                        252
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/RecordReaderImplementation.java": {
                "old": {
                    "('parquet.io#RecordReaderImplementation', None)": [
                        338,
                        342,
                        345
                    ]
                }
            }
        }
    },
    "962dd9e8bbacab7f86159da53f165fe8c569fd3b": {
        "authored_data": "2013 Mar 06 00:15",
        "commit.message": "More cleanup/renames\n",
        "commit.author.name": "Todd Lipcon",
        "pcid": "003299e4240a1f131c4d1b9d3fe5f3b4ff9fd0e6",
        "changes": {
            "parquet-column/src/main/java/parquet/column/mem/PageReadStore.java": {
                "new": {
                    "(None, None)": [
                        23,
                        24
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/format/converter/ParquetMetadataConverter.java": {
                "old": {
                    "('parquet.format.converter#ParquetMetadataConverter', 'addRowGroup(ParquetMetadata,List,BlockMetaData)')": [
                        136,
                        146
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'fromParquetMetadata(FileMetaData)')": [
                        248
                    ]
                },
                "new": {
                    "('parquet.format.converter#ParquetMetadataConverter', 'addRowGroup(ParquetMetadata,List,BlockMetaData)')": [
                        136,
                        146
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'fromParquetMetadata(FileMetaData)')": [
                        248
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/CodecFactory.java": {
                "old": {
                    "('parquet.hadoop#CodecFactory', None)": [
                        37,
                        156
                    ],
                    "('parquet.hadoop#CodecFactory', 'getCodec(CompressionCodecName)')": [
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155
                    ],
                    "('parquet.hadoop#CodecFactory', 'getCompressor(CompressionCodecName,int)')": [
                        161,
                        163,
                        165
                    ],
                    "('parquet.hadoop#CodecFactory', 'getDecompressor(CompressionCodecName)')": [
                        169,
                        171,
                        173
                    ]
                },
                "new": {
                    "('parquet.hadoop#CodecFactory', None)": [
                        37
                    ],
                    "('parquet.hadoop#CodecFactory', 'getCodec(CompressionCodecName)')": [
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158
                    ],
                    "('parquet.hadoop#CodecFactory', 'getCompressor(CompressionCodecName,int)')": [
                        163,
                        164,
                        166,
                        167,
                        169
                    ],
                    "('parquet.hadoop#CodecFactory', 'getDecompressor(CompressionCodecName)')": [
                        173,
                        174,
                        176,
                        177,
                        179
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ColumnChunkPageReadStore.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('parquet.hadoop#ColumnChunkPageReadStore', None)": [
                        32,
                        39,
                        40,
                        42,
                        44,
                        45,
                        46,
                        47,
                        48,
                        58,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37
                    ],
                    "('parquet.hadoop#ColumnChunkPageReadStore', None)": [
                        38,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        52,
                        54,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        71,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ColumnChunkPageWriteStore.java": {
                "old": {
                    "('parquet.hadoop#ColumnChunkPageWriteStore', None)": [
                        36
                    ]
                },
                "new": {
                    "('parquet.hadoop#ColumnChunkPageWriteStore', None)": [
                        36
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ColumnData.java": {
                "old": {
                    "('parquet.hadoop#ColumnData', None)": [
                        26
                    ]
                },
                "new": {
                    "('parquet.hadoop#ColumnData', None)": [
                        26
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/Footer.java": {
                "old": {
                    "('parquet.hadoop#Footer', None)": [
                        30
                    ]
                },
                "new": {
                    "('parquet.hadoop#Footer', None)": [
                        30
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/PageConsumer.java": {
                "old": {
                    "('parquet.hadoop#PageConsumer', None)": [
                        20
                    ]
                },
                "new": {
                    "('parquet.hadoop#PageConsumer', None)": [
                        20
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetFileReader.java": {
                "old": {
                    "('parquet.hadoop#ParquetFileReader', 'readAllFootersInParallelUsingSummaryFiles(Configuration,List)')": [
                        115,
                        116
                    ],
                    "('parquet.hadoop#ParquetFileReader', None)": [
                        287,
                        288,
                        290,
                        291
                    ],
                    "('parquet.hadoop#ParquetFileReader', 'readColumns')": [
                        292,
                        303,
                        304,
                        305,
                        306,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetFileReader', 'readAllFootersInParallelUsingSummaryFiles(Configuration,List)')": [
                        115,
                        116,
                        117
                    ],
                    "('parquet.hadoop#ParquetFileReader', None)": [
                        266,
                        280,
                        290,
                        292,
                        293,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320
                    ],
                    "('parquet.hadoop#ParquetFileReader', 'readNextRowGroup')": [
                        294,
                        305,
                        306,
                        307,
                        309
                    ],
                    "('parquet.hadoop#ParquetFileReader', 'readColumnChunkPages(ColumnDescriptor,ColumnChunkMetaData)')": [
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetFileWriter.java": {
                "old": {
                    "('parquet.hadoop#ParquetFileWriter', 'startColumn(ColumnDescriptor,long,CompressionCodecName)')": [
                        173
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetFileWriter', 'startColumn(ColumnDescriptor,long,CompressionCodecName)')": [
                        173
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetInputFormat.java": {
                "old": {
                    "('parquet.hadoop#ParquetInputFormat', 'generateSplits(List,BlockLocation,FileStatus,FileMetaData,Class,String,Map)')": [
                        154
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetInputFormat', 'generateSplits(List,BlockLocation,FileStatus,FileMetaData,Class,String,Map)')": [
                        154
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetRecordReader.java": {
                "old": {
                    "('parquet.hadoop#ParquetRecordReader', 'checkRead')": [
                        100
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetRecordReader', 'checkRead')": [
                        100
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/metadata/ColumnChunkMetaData.java": {
                "old": {
                    "('parquet.hadoop.metadata#ColumnChunkMetaData', 'setFirstDataPage(long)')": [
                        79
                    ],
                    "('parquet.hadoop.metadata#ColumnChunkMetaData', 'getFirstDataPage')": [
                        87
                    ]
                },
                "new": {
                    "('parquet.hadoop.metadata#ColumnChunkMetaData', 'setFirstDataPageOffset(long)')": [
                        79
                    ],
                    "('parquet.hadoop.metadata#ColumnChunkMetaData', 'getFirstDataPageOffset')": [
                        87
                    ]
                }
            },
            "parquet-hadoop/src/test/java/parquet/hadoop/TestInputFormat.java": {
                "old": {
                    "('parquet.hadoop#TestInputFormat', 'newBlock(long)')": [
                        67
                    ]
                },
                "new": {
                    "('parquet.hadoop#TestInputFormat', 'newBlock(long)')": [
                        67
                    ]
                }
            },
            "parquet-hadoop/src/test/java/parquet/hadoop/TestParquetFileWriter.java": {
                "old": {
                    "('parquet.hadoop#TestParquetFileWriter', 'test')": [
                        93,
                        97,
                        104,
                        112,
                        118
                    ]
                },
                "new": {
                    "('parquet.hadoop#TestParquetFileWriter', 'test')": [
                        93,
                        97,
                        104,
                        112,
                        118
                    ]
                }
            },
            "parquet-hadoop/src/test/java/parquet/hadoop/TestReadIntTestFile.java": {
                "old": {
                    "('parquet.hadoop#TestReadIntTestFile', 'readTest')": [
                        53
                    ]
                },
                "new": {
                    "('parquet.hadoop#TestReadIntTestFile', 'readTest')": [
                        53
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/GenerateIntTestFile.java": {
                "old": {
                    "('parquet.pig#GenerateIntTestFile', 'readTestFile(Path,Configuration)')": [
                        96
                    ]
                },
                "new": {
                    "('parquet.pig#GenerateIntTestFile', 'readTestFile(Path,Configuration)')": [
                        96
                    ]
                }
            }
        }
    },
    "003299e4240a1f131c4d1b9d3fe5f3b4ff9fd0e6": {
        "authored_data": "2013 Mar 05 08:12",
        "commit.message": "Style cleanup and other miscellanea (javadoc, etc)\n\nAdded other review comments as TODOs\n",
        "commit.author.name": "Todd Lipcon",
        "pcid": "ecf19dc3d917d124c33d463d662a1fb885bfb243",
        "changes": {
            "parquet-column/src/main/java/parquet/bytes/BytesUtils.java": {
                "new": {
                    "('parquet.bytes#BytesUtils', 'getWidthFromMaxInt(int)')": [
                        43,
                        44
                    ],
                    "('parquet.bytes#BytesUtils', 'readIntLittleEndian(InputStream)')": [
                        64
                    ],
                    "('parquet.bytes#BytesUtils', 'writeIntLittleEndian(OutputStream,int)')": [
                        76
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/bytes/LittleEndianDataInputStream.java": {
                "new": {
                    "('parquet.bytes#LittleEndianDataInputStream', 'readInt')": [
                        342,
                        343,
                        344,
                        345,
                        346
                    ],
                    "('parquet.bytes#LittleEndianDataInputStream', 'readLong')": [
                        373
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/bytes/LittleEndianDataOutputStream.java": {
                "new": {
                    "('parquet.bytes#LittleEndianDataOutputStream', 'writeInt(int)')": [
                        144,
                        145,
                        146
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/ColumnDescriptor.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('parquet.column#ColumnDescriptor', None)": [
                        51,
                        59,
                        67,
                        75,
                        82,
                        83,
                        84,
                        85,
                        86,
                        92,
                        93,
                        94,
                        95,
                        96,
                        102,
                        103,
                        104,
                        105,
                        106,
                        117,
                        118,
                        119,
                        120,
                        121
                    ],
                    "('parquet.column#ColumnDescriptor', 'getRepetitionLevel')": [
                        62
                    ],
                    "('parquet.column#ColumnDescriptor', 'getDefinitionLevel')": [
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('parquet.column#ColumnDescriptor', 'getMaxRepetitionLevel')": [
                        60
                    ],
                    "('parquet.column#ColumnDescriptor', 'getMaxDefinitionLevel')": [
                        67
                    ],
                    "('parquet.column#ColumnDescriptor', 'compareTo(ColumnDescriptor)')": [
                        90
                    ],
                    "('parquet.column#ColumnDescriptor', None)": [
                        99
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/ColumnReadStore.java": {
                "old": {
                    "(None, None)": [
                        19,
                        22,
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        26
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/ColumnReader.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        23,
                        24,
                        28,
                        29,
                        34,
                        45,
                        51,
                        57,
                        63,
                        69,
                        75,
                        81,
                        87,
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        27,
                        31,
                        36
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/ColumnWriteStore.java": {
                "old": {
                    "(None, None)": [
                        19,
                        22,
                        25,
                        27,
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        26
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/ColumnWriter.java": {
                "old": {
                    "(None, None)": [
                        82,
                        88,
                        90
                    ]
                },
                "new": {
                    "(None, None)": [
                        82,
                        83,
                        89,
                        91
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/UnknownColumnException.java": {
                "old": {
                    "(None, None)": [
                        21,
                        24
                    ],
                    "('parquet.column#UnknownColumnException', None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('parquet.column#UnknownColumnException', None)": [
                        31
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/mem/MemColumnReader.java": {
                "old": {
                    "(None, None)": [
                        34
                    ],
                    "('parquet.column.mem#MemColumnReader', 'checkRead')": [
                        226,
                        227,
                        228
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ],
                    "('parquet.column.mem#MemColumnReader', 'checkRead')": [
                        226,
                        227
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/mem/MemColumnWriteStore.java": {
                "old": {
                    "('parquet.column.mem#MemColumnWriteStore', 'toString')": [
                        60
                    ],
                    "('parquet.column.mem#MemColumnWriteStore', 'memSize')": [
                        79
                    ],
                    "('parquet.column.mem#MemColumnWriteStore', 'maxColMemSize')": [
                        88
                    ]
                },
                "new": {
                    "('parquet.column.mem#MemColumnWriteStore', 'toString')": [
                        60
                    ],
                    "('parquet.column.mem#MemColumnWriteStore', 'memSize')": [
                        79
                    ],
                    "('parquet.column.mem#MemColumnWriteStore', 'maxColMemSize')": [
                        88
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/mem/MemColumnWriter.java": {
                "old": {
                    "('parquet.column.mem#MemColumnWriter', None)": [
                        49,
                        50
                    ],
                    "('parquet.column.mem#MemColumnWriter', 'accountForValueWritten')": [
                        65,
                        66,
                        67
                    ],
                    "('parquet.column.mem#MemColumnWriter', 'memSize')": [
                        156,
                        157,
                        158,
                        159
                    ],
                    "('parquet.column.mem#MemColumnWriter', 'allocatedSize')": [
                        164,
                        165,
                        166
                    ]
                },
                "new": {
                    "('parquet.column.mem#MemColumnWriter', None)": [
                        49,
                        50
                    ],
                    "('parquet.column.mem#MemColumnWriter', 'accountForValueWritten')": [
                        65,
                        66,
                        67
                    ],
                    "('parquet.column.mem#MemColumnWriter', 'getBufferedSizeInMemory')": [
                        156,
                        157,
                        158,
                        159
                    ],
                    "('parquet.column.mem#MemColumnWriter', 'allocatedSize')": [
                        164,
                        165,
                        166
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/mem/MemPageStore.java": {
                "old": {
                    "('parquet.column.mem#MemPageStore', 'getPageWriter(ColumnDescriptor)')": [
                        35,
                        36,
                        37,
                        38
                    ]
                },
                "new": {
                    "('parquet.column.mem#MemPageStore', 'getPageWriter(ColumnDescriptor)')": [
                        35,
                        36
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BitPacking.java": {
                "old": {
                    "('parquet.column.primitive#BitPacking', 'getBitPackingReader(int,InputStream,long)')": [
                        111
                    ]
                },
                "new": {
                    "('parquet.column.primitive#BitPacking', 'createBitPackingReader(int,InputStream,long)')": [
                        111
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BitPackingColumnReader.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('parquet.column.primitive#BitPackingColumnReader', 'initFromPage(long,byte,int)')": [
                        75
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('parquet.column.primitive#BitPackingColumnReader', 'initFromPage(long,byte,int)')": [
                        72,
                        76
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BitPackingColumnWriter.java": {
                "old": {
                    "('parquet.column.primitive#BitPackingColumnWriter', None)": [
                        71,
                        107
                    ],
                    "('parquet.column.primitive#BitPackingColumnWriter', 'getMemSize')": [
                        74
                    ],
                    "('parquet.column.primitive#BitPackingColumnWriter', 'allocatedSize')": [
                        110
                    ]
                },
                "new": {
                    "('parquet.column.primitive#BitPackingColumnWriter', None)": [
                        71,
                        107
                    ],
                    "('parquet.column.primitive#BitPackingColumnWriter', 'getBufferedSize')": [
                        74
                    ],
                    "('parquet.column.primitive#BitPackingColumnWriter', 'getAllocatedSize')": [
                        110
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BitReader.java": {
                "old": {
                    "('parquet.column.primitive#BitReader', None)": [
                        22
                    ],
                    "('parquet.column.primitive#BitReader', 'getBytePosition(int,int)')": [
                        53,
                        54
                    ],
                    "('parquet.column.primitive#BitReader', 'readBoundedInt(int)')": [
                        57
                    ],
                    "('parquet.column.primitive#BitReader', 'readBit')": [
                        84
                    ]
                },
                "new": {
                    "('parquet.column.primitive#BitReader', None)": [
                        22,
                        45,
                        46,
                        47,
                        48,
                        49,
                        58,
                        59,
                        60,
                        65,
                        66,
                        67,
                        68,
                        69
                    ],
                    "('parquet.column.primitive#BitReader', 'extractBit(int,int)')": [
                        61,
                        62
                    ],
                    "('parquet.column.primitive#BitReader', 'readNBitInteger(int)')": [
                        70
                    ],
                    "('parquet.column.primitive#BitReader', 'readBit')": [
                        97
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BitWriter.java": {
                "old": {
                    "('parquet.column.primitive#BitWriter', None)": [
                        21
                    ],
                    "('parquet.column.primitive#BitWriter', 'writeBits(int,int)')": [
                        59
                    ],
                    "('parquet.column.primitive#BitWriter', 'setBytePosition(int,int,boolean)')": [
                        104,
                        105,
                        106,
                        108
                    ]
                },
                "new": {
                    "('parquet.column.primitive#BitWriter', None)": [
                        21,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117
                    ],
                    "('parquet.column.primitive#BitWriter', 'writeNBitInteger(int,int)')": [
                        66
                    ],
                    "('parquet.column.primitive#BitWriter', 'setBytePosition(int,int,boolean)')": [
                        118,
                        119,
                        120,
                        122
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BooleanPlainColumnReader.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('parquet.column.primitive#BooleanPlainColumnReader', 'initFromPage(long,byte,int)')": [
                        61
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('parquet.column.primitive#BooleanPlainColumnReader', 'initFromPage(long,byte,int)')": [
                        61
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BooleanPlainColumnWriter.java": {
                "old": {
                    "('parquet.column.primitive#BooleanPlainColumnWriter', 'getMemSize')": [
                        58
                    ],
                    "('parquet.column.primitive#BooleanPlainColumnWriter', 'allocatedSize')": [
                        80
                    ]
                },
                "new": {
                    "('parquet.column.primitive#BooleanPlainColumnWriter', 'getBufferedSize')": [
                        58
                    ],
                    "('parquet.column.primitive#BooleanPlainColumnWriter', 'getAllocatedSize')": [
                        80
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BoundedColumnFactory.java": {
                "old": {
                    "('parquet.column.primitive#BoundedColumnFactory', None)": [
                        18
                    ]
                },
                "new": {
                    "('parquet.column.primitive#BoundedColumnFactory', None)": [
                        18
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BoundedIntColumnReader.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('parquet.column.primitive#BoundedIntColumnReader', None)": [
                        27
                    ],
                    "('parquet.column.primitive#BoundedIntColumnReader', 'readInteger')": [
                        50,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        28
                    ],
                    "('parquet.column.primitive#BoundedIntColumnReader', None)": [
                        29
                    ],
                    "('parquet.column.primitive#BoundedIntColumnReader', 'readInteger')": [
                        52,
                        55
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/BoundedIntColumnWriter.java": {
                "old": {
                    "('parquet.column.primitive#BoundedIntColumnWriter', None)": [
                        29
                    ],
                    "('parquet.column.primitive#BoundedIntColumnWriter', 'getMemSize')": [
                        60
                    ],
                    "('parquet.column.primitive#BoundedIntColumnWriter', 'serializeCurrentValue')": [
                        112,
                        117
                    ],
                    "('parquet.column.primitive#BoundedIntColumnWriter', 'allocatedSize')": [
                        132
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31
                    ],
                    "('parquet.column.primitive#BoundedIntColumnWriter', None)": [
                        33
                    ],
                    "('parquet.column.primitive#BoundedIntColumnWriter', 'getBufferedSize')": [
                        64
                    ],
                    "('parquet.column.primitive#BoundedIntColumnWriter', 'serializeCurrentValue')": [
                        116,
                        121
                    ],
                    "('parquet.column.primitive#BoundedIntColumnWriter', 'getAllocatedSize')": [
                        136
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/DevNullColumnReader.java": {
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('parquet.column.primitive#DevNullColumnReader', None)": [
                        33,
                        34,
                        35
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/DevNullColumnWriter.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('parquet.column.primitive#DevNullColumnWriter', 'getMemSize')": [
                        27
                    ],
                    "('parquet.column.primitive#DevNullColumnWriter', 'allocatedSize')": [
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('parquet.column.primitive#DevNullColumnWriter', 'getBufferedSize')": [
                        27
                    ],
                    "('parquet.column.primitive#DevNullColumnWriter', 'getAllocatedSize')": [
                        69
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/PlainColumnReader.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/PlainColumnWriter.java": {
                "old": {
                    "('parquet.column.primitive#PlainColumnWriter', 'getMemSize')": [
                        104
                    ],
                    "('parquet.column.primitive#PlainColumnWriter', 'allocatedSize')": [
                        125
                    ]
                },
                "new": {
                    "('parquet.column.primitive#PlainColumnWriter', 'getBufferedSize')": [
                        104
                    ],
                    "('parquet.column.primitive#PlainColumnWriter', 'getAllocatedSize')": [
                        125
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/PrimitiveColumnReader.java": {
                "old": {
                    "(None, None)": [
                        21,
                        23,
                        24,
                        27
                    ],
                    "('parquet.column.primitive#PrimitiveColumnReader', None)": [
                        32,
                        34,
                        35,
                        40,
                        41,
                        45
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        23,
                        24,
                        25,
                        26,
                        27
                    ],
                    "('parquet.column.primitive#PrimitiveColumnReader', None)": [
                        34,
                        36,
                        37,
                        38,
                        39,
                        40,
                        45,
                        46,
                        47,
                        48,
                        52
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/primitive/PrimitiveColumnWriter.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('parquet.column.primitive#PrimitiveColumnWriter', 'getMemSize')": [
                        33
                    ],
                    "('parquet.column.primitive#PrimitiveColumnWriter', None)": [
                        48
                    ],
                    "('parquet.column.primitive#PrimitiveColumnWriter', 'allocatedSize')": [
                        50
                    ]
                },
                "new": {
                    "('parquet.column.primitive#PrimitiveColumnWriter', 'getBufferedSize')": [
                        32
                    ],
                    "('parquet.column.primitive#PrimitiveColumnWriter', None)": [
                        47,
                        48
                    ],
                    "('parquet.column.primitive#PrimitiveColumnWriter', 'getAllocatedSize')": [
                        50
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/BaseRecordReader.java": {
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/RecordReaderImplementation.java": {
                "old": {
                    "('parquet.io#RecordReaderImplementation', None)": [
                        181,
                        182,
                        187,
                        188,
                        189,
                        190
                    ]
                },
                "new": {
                    "('parquet.io#RecordReaderImplementation', None)": [
                        181,
                        182,
                        187,
                        188,
                        189,
                        190
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/convert/RecordConverter.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        27
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/parser/MessageTypeParser.java": {
                "old": {
                    "(None, None)": [
                        32,
                        34,
                        35,
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/ConversionPatterns.java": {
                "old": {
                    "('parquet.schema#ConversionPatterns', None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26,
                        27
                    ],
                    "('parquet.schema#ConversionPatterns', None)": [
                        28
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/GroupType.java": {
                "old": {
                    "('parquet.schema#GroupType', 'getRepetitionLevel(String,int)')": [
                        199,
                        201,
                        204
                    ],
                    "('parquet.schema#GroupType', None)": [
                        205,
                        206,
                        207,
                        214,
                        215,
                        216
                    ],
                    "('parquet.schema#GroupType', 'getDefinitionLevel(String,int)')": [
                        208,
                        210,
                        213
                    ],
                    "('parquet.schema#GroupType', 'getType(String,int)')": [
                        217,
                        218,
                        221
                    ]
                },
                "new": {
                    "('parquet.schema#GroupType', 'getMaxRepetitionLevel(String,int)')": [
                        199,
                        201,
                        204
                    ],
                    "('parquet.schema#GroupType', None)": [
                        205,
                        206,
                        207,
                        214,
                        215,
                        216
                    ],
                    "('parquet.schema#GroupType', 'getMaxDefinitionLevel(String,int)')": [
                        208,
                        210,
                        213
                    ],
                    "('parquet.schema#GroupType', 'getType(String,int)')": [
                        217,
                        218,
                        221
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/MessageType.java": {
                "old": {
                    "('parquet.schema#MessageType', 'getRepetitionLevel(String)')": [
                        73,
                        74
                    ],
                    "('parquet.schema#MessageType', 'getDefinitionLevel(String)')": [
                        77,
                        78
                    ],
                    "('parquet.schema#MessageType', 'getType(String)')": [
                        81
                    ],
                    "('parquet.schema#MessageType', 'getColumnDescription(String)')": [
                        86,
                        87
                    ],
                    "('parquet.schema#MessageType', 'getColumns')": [
                        101
                    ]
                },
                "new": {
                    "('parquet.schema#MessageType', None)": [
                        73,
                        74,
                        75,
                        76,
                        81,
                        82,
                        83,
                        84
                    ],
                    "('parquet.schema#MessageType', 'getMaxRepetitionLevel(String)')": [
                        77,
                        78
                    ],
                    "('parquet.schema#MessageType', 'getMaxDefinitionLevel(String)')": [
                        85,
                        86
                    ],
                    "('parquet.schema#MessageType', 'getType(String)')": [
                        89
                    ],
                    "('parquet.schema#MessageType', 'getColumnDescription(String)')": [
                        94,
                        95
                    ],
                    "('parquet.schema#MessageType', 'getColumns')": [
                        109
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/PrimitiveType.java": {
                "old": {
                    "('parquet.schema#PrimitiveType', None)": [
                        39,
                        40,
                        41
                    ],
                    "('parquet.schema#PrimitiveType', 'getRepetitionLevel(String,int)')": [
                        265
                    ],
                    "('parquet.schema#PrimitiveType', 'getDefinitionLevel(String,int)')": [
                        273
                    ]
                },
                "new": {
                    "('parquet.schema#PrimitiveType', None)": [
                        35,
                        40
                    ],
                    "('parquet.schema#PrimitiveType', 'getMaxRepetitionLevel(String,int)')": [
                        264
                    ],
                    "('parquet.schema#PrimitiveType', 'getMaxDefinitionLevel(String,int)')": [
                        272
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/Type.java": {
                "old": {
                    "('parquet.schema#Type', None)": [
                        74,
                        81
                    ],
                    "('parquet.schema#Type', 'hashCode')": [
                        88
                    ],
                    "('parquet.schema#Type', 'getRepetitionLevel(String,int)')": [
                        103
                    ],
                    "('parquet.schema#Type', 'getDefinitionLevel(String,int)')": [
                        105
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26,
                        27
                    ],
                    "('parquet.schema#Type', None)": [
                        80,
                        87
                    ],
                    "('parquet.schema#Type', 'hashCode')": [
                        94
                    ],
                    "('parquet.schema#Type', 'getMaxRepetitionLevel(String,int)')": [
                        109
                    ],
                    "('parquet.schema#Type', 'getMaxDefinitionLevel(String,int)')": [
                        111
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/primitive/TestBitPacking.java": {
                "old": {
                    "('parquet.column.primitive#TestBitPacking', 'validateEncodeDecode(int,int,String)')": [
                        173
                    ]
                },
                "new": {
                    "('parquet.column.primitive#TestBitPacking', 'validateEncodeDecode(int,int,String)')": [
                        173
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/TestColumnIO.java": {
                "old": {
                    "('parquet.io#TestColumnIO', 'testWriteWithGroupWriter')": [
                        324
                    ]
                },
                "new": {
                    "('parquet.io#TestColumnIO', 'testWriteWithGroupWriter')": [
                        324
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/schema/TestMessageType.java": {
                "new": {
                    "(None, None)": [
                        25,
                        49
                    ],
                    "('parquet.schema#TestMessageType', None)": [
                        36,
                        37
                    ],
                    "('parquet.schema#TestMessageType', 'testNestedTypes')": [
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetInputFormat.java": {
                "old": {
                    "(None, None)": [
                        44,
                        45,
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        44,
                        45,
                        46
                    ]
                }
            }
        }
    },
    "0973e7dd05799d75a3907c0e27415b68310c90ea": {
        "authored_data": "2013 Mar 05 22:56",
        "commit.message": "removed outdated comment\n",
        "commit.author.name": "julien",
        "pcid": "54dd652ef68572c3796efbbe636699bf00d3fc6c",
        "changes": {
            "parquet-thrift/src/main/java/parquet/thrift/ThriftSchemaConverter.java": {
                "old": {
                    "('parquet.thrift#ThriftSchemaConverter', 'toSchema(String,Field,Type)')": [
                        98
                    ]
                },
                "new": {
                    "('parquet.thrift#ThriftSchemaConverter', 'toSchema(String,Field,Type)')": [
                        98
                    ]
                }
            }
        }
    }
}