{
    "aed56c954fba19095fd622cfaa39341b9a22c9c6": {
        "authored_data": "2013 Apr 25 21:30",
        "commit.message": "integrate the new bit packing for perf\n",
        "commit.author.name": "julien",
        "pcid": "31b91eec339fccb0d041b80ac6b0a260a0e054c7",
        "changes": {
            "parquet-column/src/main/java/parquet/bytes/BytesUtils.java": {
                "new": {
                    "('parquet.bytes#BytesUtils', None)": [
                        123,
                        124,
                        125,
                        126,
                        127
                    ],
                    "('parquet.bytes#BytesUtils', 'paddedByteCountFromBits(int)')": [
                        128,
                        129
                    ],
                    "(None, None)": [
                        130
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/Encoding.java": {
                "old": {
                    "(None, None)": [
                        20,
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        59
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/impl/ColumnWriterImpl.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('parquet.column.impl#ColumnWriterImpl', None)": [
                        49,
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('parquet.column.impl#ColumnWriterImpl', None)": [
                        49,
                        50
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/bitpacking/BitPackingValuesReader.java": {
                "old": {
                    "('parquet.column.values.bitpacking#BitPackingValuesReader', 'initFromPage(long,byte,int)')": [
                        70,
                        71
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#BitPackingValuesReader', 'initFromPage(long,byte,int)')": [
                        70
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder.java": {
                "old": {
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', 'toBytes')": [
                        71,
                        80
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        115,
                        116
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', None)": [
                        45,
                        46,
                        47,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        85,
                        86,
                        87,
                        88,
                        103,
                        104,
                        105,
                        108,
                        109,
                        110,
                        111,
                        112
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', 'toBytes')": [
                        90,
                        99
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', 'getBufferSize')": [
                        106,
                        107
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', 'getAllocatedSize')": [
                        113,
                        114
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/bitpacking/ByteBasedBitPackingGenerator.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/bitpacking/BytePacker.java": {
                "old": {
                    "('parquet.column.values.bitpacking#BytePacker', None)": [
                        37
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#BytePacker', None)": [
                        37
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/bitpacking/IntBasedBitPackingGenerator.java": {
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/bitpacking/TestBitPackingColumn.java": {
                "old": {
                    "('parquet.column.values.bitpacking#TestBitPackingColumn', None)": [
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#TestBitPackingColumn', None)": [
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196
                    ]
                }
            }
        }
    },
    "19e0902b3c17ef1e163b429d114f8541139863ac": {
        "authored_data": "2013 Apr 25 19:44",
        "commit.message": "make converters dictionary aware\n",
        "commit.author.name": "julien",
        "pcid": "d64c883beb9197500ce0922b60462a686435916d",
        "changes": {
            "parquet-column/src/main/java/parquet/Log.java": {
                "old": {
                    "('parquet#Log', None)": [
                        46
                    ]
                },
                "new": {
                    "('parquet#Log', None)": [
                        46
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/ColumnReader.java": {
                "old": {
                    "(None, None)": [
                        24,
                        54,
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        54,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/Dictionary.java": {
                "old": {
                    "('parquet.column#Dictionary', 'decodeToBoolean(int)')": [
                        45
                    ]
                },
                "new": {
                    "('parquet.column#Dictionary', 'decodeToBoolean(int)')": [
                        45
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/Encoding.java": {
                "old": {
                    "(None, None)": [
                        82,
                        85,
                        130
                    ]
                },
                "new": {
                    "(None, None)": [
                        82,
                        85,
                        126,
                        127,
                        131,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/impl/ColumnReadStoreImpl.java": {
                "old": {
                    "('parquet.column.impl#ColumnReadStoreImpl', 'newMemColumnReader(ColumnDescriptor,PageReader)')": [
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68
                    ],
                    "('parquet.column.impl#ColumnReadStoreImpl', None)": [
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260
                    ],
                    "(None, None)": [
                        261,
                        262
                    ]
                },
                "new": {
                    "('parquet.column.impl#ColumnReadStoreImpl', 'newMemColumnReader(ColumnDescriptor,PageReader)')": [
                        54
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/impl/ColumnReaderImpl.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        28
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', None)": [
                        44,
                        50,
                        65,
                        66,
                        74,
                        83,
                        84,
                        86,
                        87,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        182,
                        183,
                        184,
                        185,
                        187,
                        188
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'writeNextValueToConverter')": [
                        107
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getString')": [
                        114,
                        115
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getInteger')": [
                        124
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getBoolean')": [
                        133
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getLong')": [
                        141
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getBinary')": [
                        150
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getFloat')": [
                        159
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getDouble')": [
                        168
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getCurrentValueToString')": [
                        186
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'readCurrentValue')": [
                        191
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'checkRead')": [
                        235,
                        236,
                        237,
                        238
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        35
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', None)": [
                        43,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        78,
                        86,
                        94,
                        95,
                        96,
                        126,
                        127,
                        128,
                        129,
                        232,
                        233,
                        234,
                        235,
                        236,
                        250,
                        251,
                        252,
                        255,
                        256,
                        257,
                        259,
                        260,
                        261,
                        262,
                        266,
                        267,
                        284,
                        285,
                        286,
                        287,
                        288,
                        292,
                        293,
                        294,
                        324,
                        375
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'bindToDictionary(Dictionary)')": [
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'bind(PrimitiveTypeName)')": [
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'writeCurrentValueToConverter')": [
                        289,
                        290,
                        291
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getCurrentValueDictionaryID')": [
                        295,
                        296,
                        297
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getInteger')": [
                        306,
                        307
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getBoolean')": [
                        316,
                        317
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getLong')": [
                        326,
                        327
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getBinary')": [
                        336,
                        337
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getFloat')": [
                        346,
                        347
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getDouble')": [
                        356,
                        357
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'readCurrentValue')": [
                        373,
                        374
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'checkRead')": [
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/page/DictionaryPage.java": {
                "new": {
                    "('parquet.column.page#DictionaryPage', None)": [
                        71,
                        72
                    ],
                    "('parquet.column.page#DictionaryPage', 'toString')": [
                        73,
                        74
                    ],
                    "(None, None)": [
                        75,
                        76,
                        77
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/page/PageReader.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/ValuesReader.java": {
                "old": {
                    "(None, None)": [
                        20,
                        26,
                        29
                    ],
                    "('parquet.column.values#ValuesReader', None)": [
                        61,
                        62
                    ],
                    "('parquet.column.values#ValuesReader', 'setDictionary(Dictionary)')": [
                        64,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        28
                    ],
                    "('parquet.column.values#ValuesReader', None)": [
                        60,
                        61
                    ],
                    "('parquet.column.values#ValuesReader', 'readValueDictionaryId')": [
                        63,
                        64
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/ValuesWriter.java": {
                "old": {
                    "('parquet.column.values#ValuesWriter', None)": [
                        40
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/dictionary/DictionaryValuesReader.java": {
                "old": {
                    "('parquet.column.values.dictionary#DictionaryValuesReader', None)": [
                        23
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesReader', 'setDictionary(Dictionary)')": [
                        24
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesReader', 'readBytes')": [
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        16,
                        17,
                        18,
                        19,
                        20,
                        21
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesReader', None)": [
                        29,
                        44,
                        45,
                        46,
                        50,
                        51
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesReader', 'readValueDictionaryId')": [
                        42,
                        43
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesReader', 'readBytes')": [
                        48,
                        49
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesReader', 'readIntOnTwoBytes')": [
                        52,
                        59
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/dictionary/DictionaryValuesWriter.java": {
                "old": {
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', 'getBytes')": [
                        121
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', 'getEncoding')": [
                        132
                    ]
                },
                "new": {
                    "(None, None)": [
                        3,
                        11
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', None)": [
                        23
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', 'writeBytes(Binary)')": [
                        78,
                        90
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', 'writeBytesUsingDict(Binary)')": [
                        99
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', 'getBytes')": [
                        127
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', 'getEncoding')": [
                        138
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/RecordReaderImplementation.java": {
                "old": {
                    "('parquet.io#RecordReaderImplementation', 'read')": [
                        393
                    ]
                },
                "new": {
                    "('parquet.io#RecordReaderImplementation', 'read')": [
                        393
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/api/GroupConverter.java": {
                "old": {
                    "(None, None)": [
                        18
                    ],
                    "('parquet.io.api#GroupConverter', None)": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        63,
                        64
                    ],
                    "('parquet.io.api#GroupConverter', 'hasDictionarySupport(int)')": [
                        51,
                        52
                    ],
                    "('parquet.io.api#GroupConverter', 'getDictionaryBasedConverter(int,Dictionary)')": [
                        61,
                        62
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/api/PrimitiveConverter.java": {
                "old": {
                    "(None, None)": [
                        18
                    ],
                    "('parquet.io.api#PrimitiveConverter', None)": [
                        41,
                        49,
                        57,
                        65,
                        73,
                        81
                    ]
                },
                "new": {
                    "(None, None)": [
                        18
                    ],
                    "('parquet.io.api#PrimitiveConverter', None)": [
                        38,
                        39,
                        40,
                        41,
                        42,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        53,
                        54,
                        58,
                        59,
                        60,
                        61,
                        64,
                        65,
                        66
                    ],
                    "('parquet.io.api#PrimitiveConverter', 'hasDictionarySupport')": [
                        43,
                        44
                    ],
                    "('parquet.io.api#PrimitiveConverter', 'setDictionary(Dictionary)')": [
                        51,
                        52
                    ],
                    "('parquet.io.api#PrimitiveConverter', 'addValueFromDictionary(int)')": [
                        62,
                        63
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/PrimitiveType.java": {
                "old": {
                    "('parquet.schema#PrimitiveType', None)": [
                        43,
                        186
                    ],
                    "('parquet.schema#PrimitiveType', 'writeToStringBuilder(StringBuilder,String)')": [
                        262,
                        263,
                        264,
                        265,
                        266
                    ]
                },
                "new": {
                    "('parquet.schema#PrimitiveType', None)": [
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        63,
                        80,
                        81,
                        82,
                        83,
                        84,
                        103,
                        104,
                        105,
                        106,
                        107,
                        126,
                        127,
                        128,
                        129,
                        130,
                        149,
                        150,
                        151,
                        152,
                        153,
                        172,
                        173,
                        174,
                        175,
                        176,
                        195,
                        196,
                        197,
                        198,
                        199,
                        216,
                        217,
                        218,
                        219,
                        220,
                        241,
                        242,
                        243,
                        244,
                        245,
                        273,
                        274
                    ],
                    "('parquet.schema#PrimitiveType', 'writeToStringBuilder(StringBuilder,String)')": [
                        323,
                        324,
                        325,
                        326,
                        327
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/page/mem/MemPageReader.java": {
                "old": {
                    "('parquet.column.page.mem#MemPageReader', None)": [
                        34,
                        36,
                        41,
                        42,
                        43,
                        46
                    ],
                    "('parquet.column.page.mem#MemPageReader', 'readDictionaryPage')": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "(None, None)": [
                        73
                    ]
                },
                "new": {
                    "('parquet.column.page.mem#MemPageReader', None)": [
                        34,
                        36,
                        43
                    ],
                    "('parquet.column.page.mem#MemPageReader', 'readDictionaryPage')": [
                        63,
                        64
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/page/mem/MemPageStore.java": {
                "old": {
                    "('parquet.column.page.mem#MemPageStore', 'getPageReader(ColumnDescriptor)')": [
                        56
                    ]
                },
                "new": {
                    "('parquet.column.page.mem#MemPageStore', 'getPageReader(ColumnDescriptor)')": [
                        56
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/page/mem/MemPageWriter.java": {
                "old": {
                    "('parquet.column.page.mem#MemPageWriter', None)": [
                        37
                    ],
                    "('parquet.column.page.mem#MemPageWriter', 'getDictionaryPages')": [
                        63,
                        64
                    ],
                    "('parquet.column.page.mem#MemPageWriter', 'writeDictionaryPage(DictionaryPage)')": [
                        79,
                        80
                    ]
                },
                "new": {
                    "('parquet.column.page.mem#MemPageWriter', None)": [
                        37
                    ],
                    "('parquet.column.page.mem#MemPageWriter', 'getDictionaryPage')": [
                        63,
                        64
                    ],
                    "('parquet.column.page.mem#MemPageWriter', 'writeDictionaryPage(DictionaryPage)')": [
                        79,
                        80,
                        81,
                        82,
                        83
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/dictionary/TestDictionary.java": {
                "old": {
                    "(None, None)": [
                        15
                    ],
                    "('parquet.column.values.dictionary#TestDictionary', 'testDict')": [
                        37,
                        39,
                        41
                    ],
                    "('parquet.column.values.dictionary#TestDictionary', 'testDictInefficiency')": [
                        84,
                        85,
                        91,
                        92,
                        104,
                        105
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        3,
                        4
                    ],
                    "('parquet.column.values.dictionary#TestDictionary', 'testDict')": [
                        30,
                        36,
                        42,
                        44
                    ],
                    "('parquet.column.values.dictionary#TestDictionary', 'testDictInefficiency')": [
                        87,
                        93,
                        105
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ColumnChunkPageReadStore.java": {
                "old": {
                    "('parquet.hadoop#ColumnChunkPageReadStore', None)": [
                        53,
                        55,
                        58,
                        92,
                        95,
                        98,
                        99,
                        100
                    ]
                },
                "new": {
                    "('parquet.hadoop#ColumnChunkPageReadStore', None)": [
                        53,
                        55,
                        58,
                        92,
                        97,
                        98,
                        99
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ColumnChunkPageWriteStore.java": {
                "old": {
                    "('parquet.hadoop#ColumnChunkPageWriteStore', None)": [
                        52,
                        65,
                        98,
                        99,
                        100,
                        101,
                        104,
                        105,
                        106,
                        115,
                        116,
                        117,
                        134
                    ]
                },
                "new": {
                    "(None, None)": [
                        39
                    ],
                    "('parquet.hadoop#ColumnChunkPageWriteStore', None)": [
                        53,
                        98,
                        109,
                        110,
                        111,
                        125,
                        126,
                        127,
                        131
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetFileReader.java": {
                "old": {
                    "('parquet.hadoop#ParquetFileReader', 'readNextRowGroup')": [
                        313
                    ],
                    "('parquet.hadoop#ParquetFileReader', 'readColumnChunkPages(ColumnDescriptor,ColumnChunkMetaData,List,List)')": [
                        325,
                        376
                    ]
                },
                "new": {
                    "(None, None)": [
                        60
                    ],
                    "('parquet.hadoop#ParquetFileReader', 'readNextRowGroup')": [
                        313,
                        314,
                        315,
                        317
                    ],
                    "('parquet.hadoop#ParquetFileReader', 'readColumnChunkPages(ColumnDescriptor,ColumnChunkMetaData,List,List)')": [
                        329
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/convert/TupleConverter.java": {
                "old": {
                    "('parquet.pig.convert#TupleConverter', None)": [
                        188
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('parquet.pig.convert#TupleConverter', None)": [
                        189,
                        190,
                        197,
                        198,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228
                    ]
                }
            }
        }
    },
    "d3c1a34f3297146695c6cf30a67e56e8b8fbdbc7": {
        "authored_data": "2013 Apr 24 09:39",
        "commit.message": "Fix compilation with Java 6.\n",
        "commit.author.name": "Tom White",
        "pcid": "feadc9effe3e2814774f128177817f7ffa4f031b",
        "changes": {
            "parquet-cascading/src/main/java/parquet/cascading/ParquetTBaseScheme.java": {
                "old": {
                    "('parquet.cascading#ParquetTBaseScheme', 'sourceConfInit(FlowProcess,Tap,JobConf)')": [
                        56
                    ]
                },
                "new": {
                    "('parquet.cascading#ParquetTBaseScheme', 'sourceConfInit(FlowProcess,Tap,JobConf)')": [
                        56
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetInputFormat.java": {
                "old": {
                    "('parquet.hadoop#ParquetInputFormat', 'setReadSupportClass(Job,Class)')": [
                        66
                    ],
                    "('parquet.hadoop#ParquetInputFormat', 'setReadSupportClass(JobConf,Class)')": [
                        70
                    ],
                    "('parquet.hadoop#ParquetInputFormat', 'getReadSupportClass(Configuration)')": [
                        74,
                        80,
                        81
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetInputFormat', 'setReadSupportClass(Job,Class)')": [
                        66
                    ],
                    "('parquet.hadoop#ParquetInputFormat', 'setReadSupportClass(JobConf,Class)')": [
                        70
                    ],
                    "('parquet.hadoop#ParquetInputFormat', 'getReadSupportClass(Configuration)')": [
                        74,
                        80
                    ]
                }
            },
            "parquet-scrooge/src/main/java/parquet/scrooge/ParquetScroogeScheme.java": {
                "old": {
                    "('parquet.scrooge#ParquetScroogeScheme', 'sourceConfInit(FlowProcess,Tap,JobConf)')": [
                        63
                    ]
                },
                "new": {
                    "('parquet.scrooge#ParquetScroogeScheme', 'sourceConfInit(FlowProcess,Tap,JobConf)')": [
                        63
                    ]
                }
            }
        }
    },
    "64c45cbe585d6be1fdc0c4f87e4ac977b5df5eb7": {
        "authored_data": "2013 Apr 22 11:30",
        "commit.message": "Add test for nested records following fix in 61d5170844aaf611555a0dd63c5e24af08acf1c8\n",
        "commit.author.name": "Tom White",
        "pcid": "5121cd599c259d9eda51585a66ca680591398c65",
        "changes": {
            "parquet-avro/src/test/java/parquet/avro/TestReadWrite.java": {
                "old": {
                    "('parquet.avro#TestReadWrite', 'test')": [
                        34,
                        35,
                        36,
                        47,
                        48,
                        73
                    ]
                },
                "new": {
                    "('parquet.avro#TestReadWrite', 'test')": [
                        34,
                        35,
                        36,
                        47,
                        72
                    ]
                }
            }
        }
    },
    "5121cd599c259d9eda51585a66ca680591398c65": {
        "authored_data": "2013 Apr 22 11:24",
        "commit.message": "Avoid double conversion of bytes for Avro Utf8 instances.\n",
        "commit.author.name": "Tom White",
        "pcid": "1605cda914e596b90cd95d1adbc7001ad0557da8",
        "changes": {
            "parquet-avro/src/main/java/parquet/avro/AvroWriteSupport.java": {
                "old": {
                    "('parquet.avro#AvroWriteSupport', 'writeValue(Type,Schema,Object)')": [
                        141
                    ]
                },
                "new": {
                    "(None, None)": [
                        11,
                        162,
                        163
                    ],
                    "('parquet.avro#AvroWriteSupport', 'writeValue(Type,Schema,Object)')": [
                        142
                    ],
                    "('parquet.avro#AvroWriteSupport', 'fromAvroString(Object)')": [
                        156,
                        157,
                        158,
                        159,
                        160,
                        161
                    ]
                }
            }
        }
    },
    "1605cda914e596b90cd95d1adbc7001ad0557da8": {
        "authored_data": "2013 Apr 22 11:15",
        "commit.message": "Avoid copying bytes if ByteBuffer is array-based.\n",
        "commit.author.name": "Tom White",
        "pcid": "e365840ea62f29a6cca472772bf96bee8b1a4e3c",
        "changes": {
            "parquet-column/src/main/java/parquet/io/api/Binary.java": {
                "new": {
                    "('parquet.io.api#Binary', 'fromByteBuffer(ByteBuffer)')": [
                        152,
                        153,
                        154,
                        155,
                        162,
                        163,
                        164,
                        165,
                        172,
                        173,
                        174,
                        175
                    ]
                }
            }
        }
    }
}