{
    "a1d7260a4ace24a8d6f514149271ad998019eb5e": {
        "authored_data": "2014 Apr 11 21:32",
        "commit.message": "Fix primitive type equality for fixed with different lengths.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "163bf6bd3436ee8d558524b09d7cc9e4df8a0275",
        "changes": {
            "parquet-column/src/main/java/parquet/schema/PrimitiveType.java": {
                "new": {
                    "('parquet.schema#PrimitiveType', 'typeEquals(Type)')": [
                        396,
                        397,
                        398,
                        399
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/schema/TestTypeBuilders.java": {
                "new": {
                    "('parquet.schema#TestTypeBuilders', None)": [
                        40,
                        41,
                        42
                    ],
                    "('parquet.schema#TestTypeBuilders', 'testFixedLengthEquals')": [
                        43,
                        44,
                        45,
                        46,
                        47
                    ]
                }
            }
        }
    },
    "163bf6bd3436ee8d558524b09d7cc9e4df8a0275": {
        "authored_data": "2014 Apr 11 21:08",
        "commit.message": "Add support for DECIMAL type annotation.\n\nChanges:\n* Add Types builder API to consolidate type building, consistency checks\n* Update schema parser to support precision and scale on DECIMAL:\n  required binary aDecimal (DECIMAL(9,2));\n* Update writeToStringBuilder methods to add precision and scale\n* Add DECIMAL conversion in ParquetMetadataConverter\n* Add precision, scale conversion in ParquetMetadataConverter\n* Add OriginalTypeMeta to hold type annotation metadata (e.g., scale)\n* Add more testing to ensure compatibility\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "57b0131513366863198f320caa9d9f053a9a78a7",
        "changes": {
            "parquet-column/src/main/java/parquet/schema/GroupType.java": {
                "old": {
                    "('parquet.schema#GroupType', None)": [
                        72
                    ],
                    "('parquet.schema#GroupType', 'writeToStringBuilder(StringBuilder,String)')": [
                        170,
                        171,
                        172
                    ]
                },
                "new": {
                    "('parquet.schema#GroupType', None)": [
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('parquet.schema#GroupType', 'writeToStringBuilder(StringBuilder,String)')": [
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/MessageTypeParser.java": {
                "old": {
                    "(None, None)": [
                        18,
                        20
                    ],
                    "('parquet.schema#MessageTypeParser', None)": [
                        43
                    ],
                    "('parquet.schema#MessageTypeParser', 'parse(String)')": [
                        88,
                        89
                    ],
                    "('parquet.schema#MessageTypeParser', 'readGroupTypeFields(String,Tokenizer)')": [
                        92,
                        93,
                        96,
                        98
                    ],
                    "('parquet.schema#MessageTypeParser', 'readType(String,Tokenizer)')": [
                        101,
                        102,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        126,
                        130,
                        131,
                        132,
                        134,
                        136
                    ]
                },
                "new": {
                    "('parquet.schema#MessageTypeParser', None)": [
                        41
                    ],
                    "('parquet.schema#MessageTypeParser', 'parse(String)')": [
                        82,
                        87,
                        88
                    ],
                    "('parquet.schema#MessageTypeParser', 'addGroupTypeFields(String,Tokenizer,Types)')": [
                        91,
                        94
                    ],
                    "('parquet.schema#MessageTypeParser', 'addType(String,Tokenizer,Types)')": [
                        98,
                        99,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        120,
                        121,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        151,
                        153,
                        154,
                        158
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/OriginalType.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/PrimitiveType.java": {
                "old": {
                    "('parquet.schema#PrimitiveType', None)": [
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        296,
                        307,
                        308,
                        309,
                        310,
                        311,
                        319
                    ],
                    "('parquet.schema#PrimitiveType', 'writeToStringBuilder(StringBuilder,String)')": [
                        368
                    ],
                    "('parquet.schema#PrimitiveType', 'union(Type)')": [
                        456
                    ]
                },
                "new": {
                    "('parquet.schema#PrimitiveType', None)": [
                        286,
                        287,
                        288,
                        290,
                        301,
                        302,
                        303,
                        304,
                        305,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327
                    ],
                    "('parquet.schema#PrimitiveType', 'writeToStringBuilder(StringBuilder,String)')": [
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385
                    ],
                    "('parquet.schema#PrimitiveType', 'union(Type)')": [
                        473,
                        474,
                        475,
                        476,
                        477,
                        478
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/Type.java": {
                "old": {
                    "('parquet.schema#Type', None)": [
                        82,
                        91
                    ]
                },
                "new": {
                    "('parquet.schema#Type', None)": [
                        76,
                        83,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        106,
                        136,
                        137,
                        138,
                        139,
                        140
                    ],
                    "('parquet.schema#Type', 'getOriginalTypeMeta')": [
                        141,
                        142
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/parser/TestParquetParser.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24
                    ],
                    "('parquet.parser#TestParquetParser', 'test')": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        28,
                        30,
                        31,
                        202,
                        203
                    ],
                    "('parquet.parser#TestParquetParser', 'testPaperExample')": [
                        35
                    ],
                    "('parquet.parser#TestParquetParser', None)": [
                        78,
                        79,
                        103,
                        104,
                        105,
                        119,
                        120,
                        121,
                        146,
                        147,
                        148,
                        167,
                        168,
                        169,
                        185,
                        186,
                        187
                    ],
                    "('parquet.parser#TestParquetParser', 'testEachPrimitiveType')": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102
                    ],
                    "('parquet.parser#TestParquetParser', 'testUTF8Annotation')": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118
                    ],
                    "('parquet.parser#TestParquetParser', 'testMAPAnnotations')": [
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145
                    ],
                    "('parquet.parser#TestParquetParser', 'testLISTAnnotation')": [
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166
                    ],
                    "('parquet.parser#TestParquetParser', 'testDecimalFixedAnnotation')": [
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184
                    ],
                    "('parquet.parser#TestParquetParser', 'testDecimalBinaryAnnotation')": [
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201
                    ]
                }
            },
            "parquet-common/src/main/java/parquet/Preconditions.java": {
                "new": {
                    "('parquet#Preconditions', None)": [
                        50
                    ],
                    "('parquet#Preconditions', 'checkState(boolean,String)')": [
                        51,
                        52,
                        53
                    ],
                    "(None, None)": [
                        54,
                        55
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/format/converter/ParquetMetadataConverter.java": {
                "old": {
                    "('parquet.format.converter#ParquetMetadataConverter', 'fromParquetSchema(List)')": [
                        372
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', None)": [
                        373,
                        374
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'convertChildren(Iterator,int)')": [
                        375,
                        376,
                        377,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414
                    ]
                },
                "new": {
                    "(None, None)": [
                        55
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'addToList(List,parquet)')": [
                        106,
                        107,
                        108,
                        109,
                        128,
                        129,
                        130,
                        131
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'getOriginalType(ConvertedType)')": [
                        290,
                        291
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'getConvertedType(OriginalType)')": [
                        309,
                        310
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'fromParquetSchema(List)')": [
                        385,
                        386,
                        387
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', None)": [
                        388,
                        389,
                        421
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'buildChildren(Types,Iterator,int)')": [
                        390,
                        391,
                        392,
                        393,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420
                    ]
                }
            },
            "parquet-hadoop/src/test/java/parquet/format/converter/TestParquetMetadataConverter.java": {
                "new": {
                    "(None, None)": [
                        22,
                        28,
                        33,
                        40,
                        43
                    ],
                    "('parquet.format.converter#TestParquetMetadataConverter', None)": [
                        65,
                        66,
                        67
                    ],
                    "('parquet.format.converter#TestParquetMetadataConverter', 'testSchemaConverterDecimal')": [
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94
                    ]
                }
            }
        }
    }
}