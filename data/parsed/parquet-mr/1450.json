{
    "24d72673d1ae3cba9cf90312550b32f954e343ec": {
        "authored_data": "2013 Sep 25 11:08",
        "commit.message": "Remove print statements.\n",
        "commit.author.name": "David Z. Chen",
        "pcid": "a79eab750d002eb91efbe4cc02abb009b9db1ee9",
        "changes": {
            "parquet-avro/src/main/java/parquet/avro/AvroIndexedRecordConverter.java": {
                "old": {
                    "('parquet.avro#AvroIndexedRecordConverter', None)": [
                        289
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/impl/ColumnWriterImpl.java": {
                "old": {
                    "('parquet.column.impl#ColumnWriterImpl', None)": [
                        72
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/api/RecordConsumer.java": {
                "old": {
                    "('parquet.io.api#RecordConsumer', None)": [
                        112
                    ]
                },
                "new": {
                    "('parquet.io.api#RecordConsumer', None)": [
                        112
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/format/converter/ParquetMetadataConverter.java": {
                "old": {
                    "('parquet.format.converter#ParquetMetadataConverter', 'addToList(List,parquet)')": [
                        101,
                        102
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'convertChildren(Iterator,int)')": [
                        339,
                        340,
                        341,
                        342,
                        343
                    ]
                }
            }
        }
    },
    "a79eab750d002eb91efbe4cc02abb009b9db1ee9": {
        "authored_data": "2013 Sep 25 10:58",
        "commit.message": "Complete support for supporting FIXED_LEN_BYTE_ARRAY for Avro SpecificRecord. Add syntax to specify type length for FLBA type fields to MessageTypeParser.\n",
        "commit.author.name": "David Z. Chen",
        "pcid": "12d41ac61f6d3a18c9f00634cc3fde0a7a295cf9",
        "changes": {
            "parquet-avro/src/test/java/parquet/avro/TestAvroSchemaConverter.java": {
                "old": {
                    "('parquet.avro#TestAvroSchemaConverter', 'testAllTypes')": [
                        75
                    ],
                    "('parquet.avro#TestAvroSchemaConverter', 'testUnionOfTwoTypes')": [
                        103,
                        104,
                        110,
                        111,
                        112,
                        113,
                        114
                    ]
                },
                "new": {
                    "('parquet.avro#TestAvroSchemaConverter', 'testAllTypes')": [
                        75
                    ],
                    "('parquet.avro#TestAvroSchemaConverter', 'testUnionOfTwoTypes')": [
                        103,
                        109,
                        110,
                        111,
                        112,
                        113
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/MessageTypeParser.java": {
                "old": {
                    "('parquet.schema#MessageTypeParser', 'readType(String,Tokenizer)')": [
                        119
                    ]
                },
                "new": {
                    "('parquet.schema#MessageTypeParser', 'readType(String,Tokenizer)')": [
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        129
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/PrimitiveType.java": {
                "old": {
                    "('parquet.schema#PrimitiveType', None)": [
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238
                    ],
                    "('parquet.schema#PrimitiveType', 'writeToStringBuilder(StringBuilder,String)')": [
                        361,
                        362,
                        363,
                        364,
                        365
                    ]
                },
                "new": {
                    "('parquet.schema#PrimitiveType', None)": [
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237
                    ],
                    "('parquet.schema#PrimitiveType', 'writeToStringBuilder(StringBuilder,String)')": [
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367
                    ]
                }
            }
        }
    },
    "12d41ac61f6d3a18c9f00634cc3fde0a7a295cf9": {
        "authored_data": "2013 Sep 23 11:36",
        "commit.message": "De-fluffify inadvertently added whitespace changes.\n",
        "commit.author.name": "David Z. Chen",
        "pcid": "1b326b7fee6616cb63016dbce2a07daf2b0213b1",
        "changes": {
            "parquet-avro/src/main/java/parquet/avro/AvroWriteSupport.java": {
                "old": {
                    "('parquet.avro#AvroWriteSupport', 'writeUnion(GroupType,Schema,Object)')": [
                        150
                    ]
                },
                "new": {
                    "('parquet.avro#AvroWriteSupport', 'writeUnion(GroupType,Schema,Object)')": [
                        150
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/ColumnWriter.java": {
                "old": {
                    "(None, None)": [
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        59,
                        96
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/ValuesReader.java": {
                "old": {
                    "('parquet.column.values#ValuesReader', None)": [
                        80
                    ]
                },
                "new": {
                    "('parquet.column.values#ValuesReader', None)": [
                        80
                    ],
                    "(None, None)": [
                        114
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/plain/PlainValuesWriter.java": {
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/example/data/simple/SimpleGroup.java": {
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/MessageColumnIO.java": {
                "old": {
                    "('parquet.io#MessageColumnIO', None)": [
                        259
                    ]
                },
                "new": {
                    "('parquet.io#MessageColumnIO', None)": [
                        259
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/api/Binary.java": {
                "new": {
                    "('parquet.io.api#Binary', None)": [
                        80
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/api/PrimitiveConverter.java": {
                "old": {
                    "('parquet.io.api#PrimitiveConverter', None)": [
                        72
                    ]
                },
                "new": {
                    "('parquet.io.api#PrimitiveConverter', None)": [
                        72
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/ExpectationValidatingRecordConsumer.java": {
                "new": {
                    "(None, None)": [
                        101
                    ]
                }
            }
        }
    },
    "1b326b7fee6616cb63016dbce2a07daf2b0213b1": {
        "authored_data": "2013 Sep 23 11:29",
        "commit.message": "Fix reflection for converting fixed Binary to Avro SpecificFixed. Ensure that FIXED values are written using the FLBA PlainValuesReader when dictionary is enabled.\n",
        "commit.author.name": "David Z. Chen",
        "pcid": "3b7359b347edb1d3ed780e7872f6bdf3efc2e2c7",
        "changes": {
            "parquet-avro/src/main/java/parquet/avro/AvroIndexedRecordConverter.java": {
                "old": {
                    "('parquet.avro#AvroIndexedRecordConverter', None)": [
                        287,
                        290
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        27
                    ],
                    "('parquet.avro#AvroIndexedRecordConverter', None)": [
                        289,
                        290,
                        291,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301
                    ]
                }
            },
            "parquet-avro/src/main/java/parquet/avro/AvroReadSupport.java": {
                "old": {
                    "('parquet.avro#AvroReadSupport', 'init(Configuration,Map,MessageType)')": [
                        42
                    ]
                }
            },
            "parquet-avro/src/main/java/parquet/avro/AvroWriteSupport.java": {
                "new": {
                    "('parquet.avro#AvroWriteSupport', 'writeUnion(GroupType,Schema,Object)')": [
                        150
                    ]
                }
            },
            "parquet-avro/src/test/java/parquet/avro/TestSpecificInputOutputFormat.java": {
                "new": {
                    "('parquet.avro#TestSpecificInputOutputFormat', 'testReadWrite')": [
                        120,
                        137
                    ]
                }
            },
            "parquet-avro/src/test/java/parquet/avro/TestSpecificReadWrite.java": {
                "old": {
                    "('parquet.avro#TestSpecificReadWrite', 'testFilterMatchesMultiple')": [
                        68,
                        70
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'testFilterWithDictionary')": [
                        81,
                        83
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'testFilterOnSubAttribute')": [
                        93
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'getVwPolo')": [
                        129
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'getVwPassat')": [
                        148
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'getBmwMini')": [
                        166
                    ]
                },
                "new": {
                    "('parquet.avro#TestSpecificReadWrite', 'testFilterOnSubAttribute')": [
                        89
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'getVwPolo')": [
                        125
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'getVwPassat')": [
                        144
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'getBmwMini')": [
                        162
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/impl/ColumnWriterImpl.java": {
                "new": {
                    "('parquet.column.impl#ColumnWriterImpl', None)": [
                        93,
                        94,
                        95
                    ]
                }
            }
        }
    },
    "3b7359b347edb1d3ed780e7872f6bdf3efc2e2c7": {
        "authored_data": "2013 Sep 23 05:29",
        "commit.message": "Re-enable tests for writing FIXED for Avro Specific records. Preliminary end-to-end for writing FIXED but write is still not completely correct yet.\n",
        "commit.author.name": "David Z. Chen",
        "pcid": "e6fab0681a31aa60af07136aba65b3e69c8f45e3",
        "changes": {
            "parquet-avro/src/main/java/parquet/avro/AvroIndexedRecordConverter.java": {
                "old": {
                    "('parquet.avro#AvroIndexedRecordConverter', None)": [
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293
                    ]
                },
                "new": {
                    "('parquet.avro#AvroIndexedRecordConverter', None)": [
                        287,
                        288,
                        289,
                        290,
                        291
                    ]
                }
            },
            "parquet-avro/src/test/java/parquet/avro/TestSpecificInputOutputFormat.java": {
                "old": {
                    "('parquet.avro#TestSpecificInputOutputFormat', 'nextRecord(int)')": [
                        47,
                        52
                    ]
                },
                "new": {
                    "('parquet.avro#TestSpecificInputOutputFormat', 'nextRecord(int)')": [
                        47,
                        52
                    ]
                }
            },
            "parquet-avro/src/test/java/parquet/avro/TestSpecificReadWrite.java": {
                "old": {
                    "('parquet.avro#TestSpecificReadWrite', 'getVwPolo')": [
                        129,
                        135
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'getVwPassat')": [
                        148,
                        154
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'getBmwMini')": [
                        166,
                        172
                    ]
                },
                "new": {
                    "('parquet.avro#TestSpecificReadWrite', 'getVwPolo')": [
                        129,
                        135
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'getVwPassat')": [
                        148,
                        154
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'getBmwMini')": [
                        166,
                        172
                    ]
                }
            }
        }
    },
    "458dd70f1820f5bac10bda10f9b47cb14d31246f": {
        "authored_data": "2013 Sep 21 03:55",
        "commit.message": "remove redundant test\n",
        "commit.author.name": "Colin Marc",
        "pcid": "3105009fe85cb78922e9f70ac52297cccc9101c9",
        "changes": {
            "parquet-cascading/src/test/java/parquet/cascading/TestParquetTBaseScheme.java": {
                "old": {
                    "(None, None)": [
                        27,
                        39,
                        40,
                        41,
                        44,
                        51,
                        52,
                        53,
                        54,
                        56,
                        57,
                        58,
                        62,
                        63,
                        64,
                        65
                    ],
                    "('parquet.cascading#TestParquetTBaseScheme', None)": [
                        72,
                        73,
                        94
                    ],
                    "('parquet.cascading#TestParquetTBaseScheme', 'testGetRecordMaterializer')": [
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93
                    ]
                }
            }
        }
    },
    "3105009fe85cb78922e9f70ac52297cccc9101c9": {
        "authored_data": "2013 Sep 21 02:55",
        "commit.message": "add read and write tests for ParquetTBaseScheme\n",
        "commit.author.name": "Colin Marc",
        "pcid": "e242085ac3f79d377ed62fd2620fbeaf9a61c969",
        "changes": {
            "parquet-cascading/src/test/java/parquet/cascading/TestParquetTBaseScheme.java": {
                "old": {
                    "(None, None)": [
                        21,
                        29,
                        35
                    ],
                    "('parquet.cascading#TestParquetTBaseScheme', 'testGetRecordMaterializer')": [
                        44,
                        45,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        28,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        55,
                        59,
                        60,
                        61,
                        62,
                        205,
                        206
                    ],
                    "('parquet.cascading#TestParquetTBaseScheme', None)": [
                        68,
                        69,
                        70,
                        71,
                        95,
                        96,
                        113,
                        114,
                        115,
                        118,
                        119,
                        120,
                        123,
                        124,
                        142,
                        143,
                        144,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204
                    ],
                    "('parquet.cascading#TestParquetTBaseScheme', 'testGetRecordMaterializer')": [
                        75,
                        76,
                        84
                    ],
                    "('parquet.cascading#TestParquetTBaseScheme', 'testWrite')": [
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112
                    ],
                    "('parquet.cascading#TestParquetTBaseScheme', 'testRead')": [
                        116,
                        117
                    ],
                    "('parquet.cascading#TestParquetTBaseScheme', 'testReadWithoutClass')": [
                        121,
                        122
                    ],
                    "('parquet.cascading#TestParquetTBaseScheme', 'doRead(Scheme)')": [
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141
                    ],
                    "('parquet.cascading#TestParquetTBaseScheme', 'createFileForRead')": [
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177
                    ]
                }
            }
        }
    }
}