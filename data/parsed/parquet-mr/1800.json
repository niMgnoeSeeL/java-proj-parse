{
    "adb46b694e94dc906922591f439997e7246d36eb": {
        "authored_data": "2013 Jul 11 16:27",
        "commit.message": "make splits report actual length\n",
        "commit.author.name": "julien",
        "pcid": "33c8dc5d1cb56710f3e7ec2f58255ef86c39ebe9",
        "changes": {
            "parquet-column/src/main/java/parquet/schema/GroupType.java": {
                "new": {
                    "('parquet.schema#GroupType', 'containsPath(String,int)')": [
                        225,
                        226,
                        227,
                        228,
                        229
                    ],
                    "('parquet.schema#GroupType', None)": [
                        230,
                        231,
                        232
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/MessageType.java": {
                "new": {
                    "('parquet.schema#MessageType', None)": [
                        127
                    ],
                    "('parquet.schema#MessageType', 'containsPath(String)')": [
                        128,
                        129
                    ],
                    "(None, None)": [
                        130
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/PrimitiveType.java": {
                "new": {
                    "('parquet.schema#PrimitiveType', None)": [
                        406,
                        407
                    ],
                    "('parquet.schema#PrimitiveType', 'containsPath(String,int)')": [
                        408,
                        409
                    ],
                    "(None, None)": [
                        410
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/Type.java": {
                "new": {
                    "('parquet.schema#Type', 'containsPath(String,int)')": [
                        136
                    ],
                    "('parquet.schema#Type', None)": [
                        137
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetInputFormat.java": {
                "old": {
                    "('parquet.hadoop#ParquetInputFormat', 'generateSplits(List,BlockLocation,FileStatus,FileMetaData,Class,String,Map)')": [
                        205
                    ]
                },
                "new": {
                    "(None, None)": [
                        44
                    ],
                    "('parquet.hadoop#ParquetInputFormat', 'generateSplits(List,BlockLocation,FileStatus,FileMetaData,Class,String,Map)')": [
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        216
                    ]
                }
            },
            "parquet-hadoop/src/test/java/parquet/hadoop/TestInputFormat.java": {
                "old": {
                    "('parquet.hadoop#TestInputFormat', 'testBlocksToSplits')": [
                        53,
                        56,
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ],
                    "('parquet.hadoop#TestInputFormat', 'testBlocksToSplits')": [
                        54,
                        55,
                        58,
                        65
                    ],
                    "('parquet.hadoop#TestInputFormat', 'newBlock(long)')": [
                        74
                    ]
                }
            }
        }
    },
    "43dc88d41e345cfd5eb2c4e62dfa0cca183bdf4e": {
        "authored_data": "2013 Jul 11 13:56",
        "commit.message": "adding projection support for thrift types\n",
        "commit.author.name": "keano",
        "pcid": "33c8dc5d1cb56710f3e7ec2f58255ef86c39ebe9",
        "changes": {
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetInputFormat.java": {
                "old": {
                    "(None, None)": [
                        47,
                        48
                    ],
                    "('parquet.hadoop#ParquetInputFormat', None)": [
                        133,
                        134
                    ],
                    "('parquet.hadoop#ParquetInputFormat', 'getRequestedSchema(String,String)')": [
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/api/ReadSupport.java": {
                "old": {
                    "('parquet.hadoop.api#ReadSupport', None)": [
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        127
                    ],
                    "('parquet.hadoop.api#ReadSupport', None)": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118
                    ],
                    "('parquet.hadoop.api#ReadSupport', 'getSchemaForRead(MessageType,String)')": [
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126
                    ]
                }
            },
            "parquet-thrift/src/main/java/parquet/hadoop/thrift/ThriftReadSupport.java": {
                "old": {
                    "('parquet.hadoop.thrift#ThriftReadSupport', 'init(Configuration,Map,MessageType)')": [
                        61,
                        62,
                        63
                    ],
                    "('parquet.hadoop.thrift#ThriftReadSupport', 'prepareForRead(Configuration,Map,MessageType,parquet)')": [
                        89,
                        90
                    ]
                },
                "new": {
                    "('parquet.hadoop.thrift#ThriftReadSupport', 'init(Configuration,Map,MessageType)')": [
                        61,
                        62,
                        63,
                        64
                    ],
                    "('parquet.hadoop.thrift#ThriftReadSupport', 'prepareForRead(Configuration,Map,MessageType,parquet)')": [
                        90
                    ]
                }
            },
            "parquet-thrift/src/main/java/parquet/thrift/ThriftRecordConverter.java": {
                "old": {
                    "('parquet.thrift#ThriftRecordConverter', None)": [
                        711,
                        712,
                        713,
                        716,
                        717,
                        718,
                        719,
                        721
                    ]
                },
                "new": {
                    "('parquet.thrift#ThriftRecordConverter', None)": [
                        712,
                        714,
                        715,
                        716,
                        717,
                        718,
                        719,
                        720,
                        721,
                        722,
                        723,
                        724,
                        725,
                        726,
                        727,
                        728,
                        730
                    ]
                }
            }
        }
    },
    "806b548153532021d80de45741e51e0d2622f3e3": {
        "authored_data": "2013 Jul 10 01:58",
        "commit.message": "fix for schema compatibility\n",
        "commit.author.name": "julien",
        "pcid": "f1da1c71ef4cb270368530a1c899c6802790a99d",
        "changes": {
            "parquet-column/src/main/java/parquet/io/ColumnIOFactory.java": {
                "old": {
                    "('parquet.io#ColumnIOFactory', None)": [
                        47,
                        49
                    ]
                },
                "new": {
                    "('parquet.io#ColumnIOFactory', None)": [
                        47,
                        49
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/GroupColumnIO.java": {
                "old": {
                    "('parquet.io#GroupColumnIO', 'setLevels(int,int,String,int,List,List)')": [
                        60,
                        61
                    ]
                },
                "new": {
                    "('parquet.io#GroupColumnIO', 'setLevels(int,int,String,int,List,List)')": [
                        60,
                        61
                    ]
                }
            }
        }
    },
    "89d6b171f1d45bac178fb638da63a85004d68086": {
        "authored_data": "2013 Jul 09 15:54",
        "commit.message": "refactored bit packing\n",
        "commit.author.name": "julien",
        "pcid": "5fc67280aa0d58a4ad1ff4c31d320d215f092695",
        "changes": {
            "parquet-column/src/main/java/parquet/column/Encoding.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/impl/ColumnReaderImpl.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/impl/ColumnWriterImpl.java": {
                "old": {
                    "(None, None)": [
                        28,
                        35,
                        36
                    ],
                    "('parquet.column.impl#ColumnWriterImpl', None)": [
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        17,
                        18
                    ],
                    "('parquet.column.impl#ColumnWriterImpl', None)": [
                        84
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/page/Page.java": {
                "old": {
                    "(None, None)": [
                        17,
                        18,
                        19
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/dictionary/PlainBinaryDictionary.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridDecoder.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridDecoder', None)": [
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridDecoder', None)": [
                        56
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridEncoder.java": {
                "old": {
                    "(None, None)": [
                        10
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', None)": [
                        113
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        26
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', None)": [
                        128
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader.java": {
                "old": {
                    "(None, None)": [
                        7
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/example/data/simple/BinaryValue.java": {
                "old": {
                    "(None, None)": [
                        18
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/Type.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/rle/RunLengthBitPackingHybridIntegrationTest.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder.java": {
                "old": {
                    "(None, None)": [
                        11,
                        13,
                        14
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'unpack(int,int,ByteArrayInputStream)')": [
                        267
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        17,
                        18,
                        29
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'unpack(int,int,ByteArrayInputStream)')": [
                        282
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/codec/SnappyCodec.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/codec/SnappyCompressor.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/codec/SnappyDecompressor.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/codec/SnappyUtil.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-hadoop/src/test/java/parquet/hadoop/TestSnappyCodec.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            }
        }
    },
    "653a4cf53bd9ed4fd4002c8f5d87a11577747a6d": {
        "authored_data": "2013 Jul 08 22:08",
        "commit.message": "collapse small classes into one class\n",
        "commit.author.name": "julien",
        "pcid": "caa8e5113f56af3e186925668da2a78dc8640380",
        "changes": {
            "parquet-column/src/main/java/parquet/column/Encoding.java": {
                "old": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        33
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/plain/PlainValuesReader.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        29,
                        90,
                        91,
                        92
                    ],
                    "('parquet.column.values.plain#PlainValuesReader', None)": [
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ]
                }
            }
        }
    },
    "caa8e5113f56af3e186925668da2a78dc8640380": {
        "authored_data": "2013 Jul 08 19:44",
        "commit.message": "split Plain reader so that the reader knows what type it's reading\n",
        "commit.author.name": "julien",
        "pcid": "5fc67280aa0d58a4ad1ff4c31d320d215f092695",
        "changes": {
            "parquet-column/src/main/java/parquet/column/Encoding.java": {
                "old": {
                    "(None, None)": [
                        30,
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        33,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        65
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/plain/PlainValuesReader.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('parquet.column.values.plain#PlainValuesReader', None)": [
                        37,
                        38,
                        39,
                        45,
                        46,
                        47,
                        48,
                        54,
                        55,
                        56,
                        57,
                        63,
                        64,
                        65,
                        66,
                        72,
                        73
                    ],
                    "('parquet.column.values.plain#PlainValuesReader', 'readFloat')": [
                        40,
                        41,
                        42,
                        43,
                        44
                    ],
                    "('parquet.column.values.plain#PlainValuesReader', 'readDouble')": [
                        49,
                        50,
                        51,
                        52,
                        53
                    ],
                    "('parquet.column.values.plain#PlainValuesReader', 'readInteger')": [
                        58,
                        59,
                        60,
                        61,
                        62
                    ],
                    "('parquet.column.values.plain#PlainValuesReader', 'readLong')": [
                        67,
                        68,
                        69,
                        70,
                        71
                    ]
                },
                "new": {
                    "('parquet.column.values.plain#PlainValuesReader', None)": [
                        36
                    ]
                }
            }
        }
    }
}