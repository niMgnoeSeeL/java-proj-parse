{
    "ea9fd2049243400cd8b75943b3fda56a95295367": {
        "authored_data": "2013 Dec 17 10:54",
        "commit.message": "Fix syntax error in test that Pig 0.12 complains about.\n",
        "commit.author.name": "Tom White",
        "pcid": "0df24f071e70b19aad5e9c45f16a14b379313f5d",
        "changes": {
            "parquet-pig/src/test/java/parquet/pig/TestPigSchemaConverter.java": {
                "old": {
                    "('parquet.pig#TestPigSchemaConverter', 'testMultiBag')": [
                        58
                    ]
                },
                "new": {
                    "('parquet.pig#TestPigSchemaConverter', 'testMultiBag')": [
                        58
                    ]
                }
            }
        }
    },
    "0df24f071e70b19aad5e9c45f16a14b379313f5d": {
        "authored_data": "2013 Dec 17 10:10",
        "commit.message": "Rename ParquetInputFormat#addInputPathRecursively to avoid\nclash with non-static Hadoop 2 method of same name on FileInputFormat.\n",
        "commit.author.name": "Tom White",
        "pcid": "0a01dae77c560e3309766ddf1a0cae4600d4cc39",
        "changes": {
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetInputFormat.java": {
                "old": {
                    "('parquet.hadoop#ParquetInputFormat', 'getAllFileRecursively(List,Configuration)')": [
                        304
                    ],
                    "('parquet.hadoop#ParquetInputFormat', 'addInputPathRecursively(List,FileSystem,Path,PathFilter)')": [
                        313,
                        318
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetInputFormat', 'getAllFileRecursively(List,Configuration)')": [
                        304
                    ],
                    "('parquet.hadoop#ParquetInputFormat', 'staticAddInputPathRecursively(List,FileSystem,Path,PathFilter)')": [
                        313,
                        318
                    ]
                }
            }
        }
    },
    "0a01dae77c560e3309766ddf1a0cae4600d4cc39": {
        "authored_data": "2013 Dec 17 10:38",
        "commit.message": "Use ContextUtil in tests to avoid dependency on parts of new MR API\nthat are incompatible between MR1 and MR2.\n",
        "commit.author.name": "Tom White",
        "pcid": "0743b60507fe0933dc2d6cfdfb4f769ec3875e60",
        "changes": {
            "parquet-cascading/src/test/java/parquet/cascading/TestParquetTBaseScheme.java": {
                "old": {
                    "('parquet.cascading#TestParquetTBaseScheme', 'createFileForRead')": [
                        120
                    ]
                },
                "new": {
                    "(None, None)": [
                        49
                    ],
                    "('parquet.cascading#TestParquetTBaseScheme', 'createFileForRead')": [
                        121
                    ]
                }
            },
            "parquet-cascading/src/test/java/parquet/cascading/TestParquetTupleScheme.java": {
                "old": {
                    "('parquet.cascading#TestParquetTupleScheme', 'createFileForRead')": [
                        123
                    ]
                },
                "new": {
                    "(None, None)": [
                        46
                    ],
                    "('parquet.cascading#TestParquetTupleScheme', 'createFileForRead')": [
                        124
                    ]
                }
            },
            "parquet-hadoop/src/test/java/parquet/hadoop/codec/CodecConfigTest.java": {
                "old": {
                    "('parquet.hadoop.codec#CodecConfigTest', 'shouldUseParquetFlagToSetCodec(String,CompressionCodecName)')": [
                        48
                    ],
                    "('parquet.hadoop.codec#CodecConfigTest', 'shouldUseHadoopFlagToSetCodec(String,CompressionCodecName)')": [
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('parquet.hadoop.codec#CodecConfigTest', 'shouldUseParquetFlagToSetCodec(String,CompressionCodecName)')": [
                        49
                    ],
                    "('parquet.hadoop.codec#CodecConfigTest', 'shouldUseHadoopFlagToSetCodec(String,CompressionCodecName)')": [
                        64
                    ]
                }
            },
            "parquet-hive/parquet-hive-storage-handler/src/main/java/parquet/hive/MapredParquetOutputFormat.java": {
                "old": {
                    "('parquet.hive#MapredParquetOutputFormat', 'checkOutputSpecs(FileSystem,JobConf)')": [
                        72
                    ]
                },
                "new": {
                    "('parquet.hive#MapredParquetOutputFormat', 'checkOutputSpecs(FileSystem,JobConf)')": [
                        72
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/PerfTest2.java": {
                "old": {
                    "('parquet.pig#PerfTest2', 'write(String)')": [
                        110,
                        119
                    ],
                    "('parquet.pig#PerfTest2', 'load(String,int,StringBuilder)')": [
                        164,
                        169
                    ]
                },
                "new": {
                    "('parquet.pig#PerfTest2', 'write(String)')": [
                        110,
                        119
                    ],
                    "('parquet.pig#PerfTest2', 'load(String,int,StringBuilder)')": [
                        164,
                        169
                    ]
                }
            },
            "parquet-scrooge/src/test/java/parquet/scrooge/ParquetScroogeSchemeTest.java": {
                "old": {
                    "('parquet.scrooge#ParquetScroogeSchemeTest', 'verifyScroogeRead(TBase,Class,String)')": [
                        68,
                        81,
                        84
                    ]
                },
                "new": {
                    "('parquet.scrooge#ParquetScroogeSchemeTest', 'verifyScroogeRead(TBase,Class,String)')": [
                        68,
                        81,
                        84
                    ]
                }
            },
            "parquet-thrift/src/test/java/parquet/hadoop/thrift/TestParquetToThriftReadProjection.java": {
                "old": {
                    "('parquet.hadoop.thrift#TestParquetToThriftReadProjection', 'shouldDoProjection(Configuration,T,T,Class)')": [
                        201,
                        215,
                        218
                    ]
                },
                "new": {
                    "('parquet.hadoop.thrift#TestParquetToThriftReadProjection', 'shouldDoProjection(Configuration,T,T,Class)')": [
                        201,
                        215,
                        218
                    ]
                }
            },
            "parquet-thrift/src/test/java/parquet/hadoop/thrift/TestThriftToParquetFileWriter.java": {
                "old": {
                    "(None, None)": [
                        33
                    ],
                    "('parquet.hadoop.thrift#TestThriftToParquetFileWriter', 'createFile(T)')": [
                        176
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('parquet.hadoop.thrift#TestThriftToParquetFileWriter', 'createFile(T)')": [
                        176
                    ]
                }
            }
        }
    },
    "e94b392ede6bb50a158a8df161da88b54f92ff61": {
        "authored_data": "2013 Dec 16 18:53",
        "commit.message": "format\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "e29c2dfa1b92c4daacf242f7003ca5e0bd583aad",
        "changes": {
            "parquet-thrift/src/main/java/parquet/thrift/BufferedProtocolReadToWrite.java": {
                "old": {
                    "('parquet.thrift#BufferedProtocolReadToWrite', 'readOneStruct(TProtocol,List,StructType)')": [
                        395
                    ]
                }
            }
        }
    },
    "e29c2dfa1b92c4daacf242f7003ca5e0bd583aad": {
        "authored_data": "2013 Dec 16 18:50",
        "commit.message": "fix when field index is greater than zero\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "da4b7fd73b9c6179b2b521dfce40c96490cf4ec4",
        "changes": {
            "parquet-thrift/src/main/java/parquet/thrift/BufferedProtocolReadToWrite.java": {
                "old": {
                    "('parquet.thrift#BufferedProtocolReadToWrite', 'readOneStruct(TProtocol,List,StructType)')": [
                        376,
                        394
                    ]
                },
                "new": {
                    "('parquet.thrift#BufferedProtocolReadToWrite', 'readOneStruct(TProtocol,List,StructType)')": [
                        376,
                        377,
                        395
                    ]
                }
            },
            "parquet-thrift/src/main/java/parquet/thrift/struct/CompatibilityChecker.java": {
                "old": {
                    "('parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(ThriftType)')": [
                        147,
                        148,
                        149,
                        150
                    ]
                },
                "new": {
                    "('parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(ThriftType)')": [
                        147,
                        148
                    ]
                }
            },
            "parquet-thrift/src/main/java/parquet/thrift/struct/ThriftType.java": {
                "old": {
                    "('parquet.thrift.struct#ThriftType', None)": [
                        179
                    ]
                },
                "new": {
                    "('parquet.thrift.struct#ThriftType', None)": [
                        179,
                        180,
                        181,
                        182,
                        183
                    ]
                }
            },
            "parquet-thrift/src/test/java/parquet/thrift/TestProtocolReadToWrite.java": {
                "new": {
                    "(None, None)": [
                        35,
                        36,
                        37
                    ],
                    "('parquet.thrift#TestProtocolReadToWrite', None)": [
                        226,
                        253,
                        254
                    ],
                    "('parquet.thrift#TestProtocolReadToWrite', 'TestExtraFieldWhenFieldIndexIsNotStartFromZero')": [
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252
                    ]
                }
            }
        }
    }
}