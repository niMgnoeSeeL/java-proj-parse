{
    "ded5bec1da026c6f994238d3ff72cdb5383cb9e7": {
        "authored_data": "2013 May 31 21:01",
        "commit.message": "cleanup comments\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "99853be93af6457b2989f57b063e7b6c053aeb0a",
        "changes": {
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridEncoder.java": {
                "old": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', 'writeOrAppendBitPackedRun')": [
                        186
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', 'toBytes')": [
                        246
                    ]
                },
                "new": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', 'writeOrAppendBitPackedRun')": [
                        186
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', 'writeRleRun')": [
                        222,
                        223,
                        224
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', 'toBytes')": [
                        243
                    ]
                }
            }
        }
    },
    "63ed7191384053817b91910a428a028fe1ad0336": {
        "authored_data": "2013 May 31 20:50",
        "commit.message": "Fixup / rename RLEDecoder, fix tests\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "65fb8d3e069b321d6b6bd551e4d1c652546d37f8",
        "changes": {
            "parquet-column/src/main/java/parquet/bytes/BytesUtils.java": {
                "new": {
                    "('parquet.bytes#BytesUtils', 'readIntLittleEndianPaddedOnBitWidth(InputStream,int)')": [
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115
                    ],
                    "('parquet.bytes#BytesUtils', None)": [
                        116,
                        117,
                        118
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/dictionary/DictionaryValuesReader.java": {
                "old": {
                    "(None, None)": [
                        21,
                        29
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesReader', None)": [
                        46
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesReader', 'initFromPage(long,byte,int)')": [
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesReader', None)": [
                        45
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesReader', 'initFromPage(long,byte,int)')": [
                        58
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/dictionary/DictionaryValuesWriter.java": {
                "old": {
                    "(None, None)": [
                        17,
                        18,
                        19,
                        20,
                        37
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', 'getBytes')": [
                        157,
                        161,
                        165
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        36,
                        37,
                        38,
                        39
                    ],
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', 'getBytes')": [
                        157,
                        158,
                        162,
                        166
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridEncoder.java": {
                "new": {
                    "(None, None)": [
                        32,
                        33,
                        34
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', None)": [
                        39,
                        40,
                        41,
                        112,
                        113,
                        114,
                        115
                    ]
                }
            }
        }
    },
    "65fb8d3e069b321d6b6bd551e4d1c652546d37f8": {
        "authored_data": "2013 May 31 08:23",
        "commit.message": "move unpack\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "24f652409db7ee67faea791e896cca4c97e184b6",
        "changes": {
            "parquet-column/src/test/java/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder.java": {
                "old": {
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', None)": [
                        90,
                        91
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'unpack(int,int,ByteArrayInputStream)')": [
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ]
                },
                "new": {
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', None)": [
                        247
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'unpack(int,int,ByteArrayInputStream)')": [
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269
                    ],
                    "(None, None)": [
                        270,
                        271
                    ]
                }
            }
        }
    },
    "24f652409db7ee67faea791e896cca4c97e184b6": {
        "authored_data": "2013 May 31 03:51",
        "commit.message": "End to end test\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "c9c1080bebb2173585ac55e1d118a58be80d968f",
        "changes": {
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridEncoder.java": {
                "old": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', None)": [
                        94,
                        95,
                        96,
                        97
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', 'writeInt(int)')": [
                        140,
                        141,
                        142,
                        143,
                        144,
                        145
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', 'toBytes')": [
                        239
                    ]
                },
                "new": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', None)": [
                        94,
                        95
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder.java": {
                "old": {
                    "(None, None)": [
                        117,
                        118
                    ]
                },
                "new": {
                    "(None, None)": [
                        5,
                        270
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'testRepeatedZeros')": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', None)": [
                        67,
                        68,
                        69,
                        146,
                        147,
                        148,
                        184,
                        185,
                        186,
                        203,
                        204,
                        205
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'testBitPackingOnly')": [
                        87,
                        88,
                        89
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'testBitPackingOverflow')": [
                        143,
                        144,
                        145
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'testTransitionFromBitPackingToRle')": [
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'testPaddingZerosOnUnfinishedBitPackedRuns')": [
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'testSwitchingModes')": [
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269
                    ]
                }
            }
        }
    },
    "c9c1080bebb2173585ac55e1d118a58be80d968f": {
        "authored_data": "2013 May 31 00:32",
        "commit.message": "Add bit packing overflow test\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "cd3a1238950c7821e1505396270335fab989d9b3",
        "changes": {
            "parquet-column/src/test/java/parquet/column/values/rle/TestRunLengthBitPackingHybridEncoder.java": {
                "old": {
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'testBitPackingOnly')": [
                        51,
                        59,
                        61,
                        63,
                        65,
                        66,
                        67,
                        68,
                        79,
                        80
                    ]
                },
                "new": {
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'testBitPackingOnly')": [
                        51,
                        59,
                        60,
                        61,
                        62
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', None)": [
                        63,
                        64,
                        65,
                        88,
                        89,
                        90
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'unpack(int,int,ByteArrayInputStream)')": [
                        66,
                        67,
                        68,
                        69,
                        71,
                        73,
                        75,
                        76,
                        87
                    ],
                    "('parquet.column.values.rle#TestRunLengthBitPackingHybridEncoder', 'testBitPackingOverflow')": [
                        91,
                        92,
                        93,
                        94,
                        95,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115
                    ],
                    "(None, None)": [
                        116
                    ]
                }
            }
        }
    },
    "cd3a1238950c7821e1505396270335fab989d9b3": {
        "authored_data": "2013 May 30 00:45",
        "commit.message": "Start tests for rle hybrid\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "27d1c2c4fb4b0af707cae81d003bbb83e47a9382",
        "changes": {
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridEncoder.java": {
                "old": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', None)": [
                        36
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', 'writeOrAppendBitPackedRun')": [
                        179
                    ]
                },
                "new": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', None)": [
                        36,
                        37,
                        106
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridEncoder', 'writeOrAppendBitPackedRun')": [
                        181
                    ]
                }
            }
        }
    },
    "71bd4e2ee5e64d726e6978e4f595f9d281413301": {
        "authored_data": "2013 May 29 23:56",
        "commit.message": "bit packing support for LE\n",
        "commit.author.name": "julien",
        "pcid": "9a30c8fdbe0c7850cb5cac9d5778217e7a026e36",
        "changes": {
            "parquet-column/src/main/java/parquet/column/Encoding.java": {
                "old": {
                    "(None, None)": [
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19,
                        26,
                        72
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/impl/ColumnWriterImpl.java": {
                "old": {
                    "('parquet.column.impl#ColumnWriterImpl', None)": [
                        62,
                        63,
                        66
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('parquet.column.impl#ColumnWriterImpl', None)": [
                        63,
                        64,
                        67
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder.java": {
                "old": {
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', None)": [
                        54,
                        58
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', None)": [
                        54,
                        58
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/bitpacking/ByteBasedBitPackingGenerator.java": {
                "old": {
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingGenerator', None)": [
                        36,
                        163,
                        164
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingGenerator', 'main(String)')": [
                        44,
                        54,
                        63,
                        64
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingGenerator', 'generateClass(FileWriter,int)')": [
                        71,
                        79,
                        80,
                        83,
                        84
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingGenerator', 'generatePack(FileWriter,int,int)')": [
                        89,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingGenerator', 'visualizeAlignment(FileWriter,int,int,int,int,int,int)')": [
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingGenerator', 'generateUnpack(FileWriter,int,int)')": [
                        165,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingGenerator', None)": [
                        36,
                        37,
                        42,
                        43,
                        135,
                        136,
                        168,
                        169
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingGenerator', 'main(String)')": [
                        40,
                        41
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingGenerator', 'generateScheme(String,boolean)')": [
                        44,
                        50,
                        51,
                        52,
                        53,
                        54,
                        64,
                        73,
                        74
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingGenerator', 'generateClass(FileWriter,int,boolean)')": [
                        81,
                        89,
                        90,
                        93,
                        94
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingGenerator', 'getShift(FileWriter,int,boolean,int,int)')": [
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingGenerator', 'visualizeAlignment(FileWriter,int,int,int,int,int,int,int)')": [
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingGenerator', 'generatePack(FileWriter,int,int,boolean)')": [
                        170,
                        178,
                        184,
                        185
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingGenerator', 'generateUnpack(FileWriter,int,int,boolean)')": [
                        199,
                        216,
                        217
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/bitpacking/ByteBitPackingValuesReader.java": {
                "old": {
                    "('parquet.column.values.bitpacking#ByteBitPackingValuesReader', None)": [
                        37,
                        39
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#ByteBitPackingValuesReader', None)": [
                        37,
                        39
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/bitpacking/ByteBitPackingValuesWriter.java": {
                "old": {
                    "('parquet.column.values.bitpacking#ByteBitPackingValuesWriter', None)": [
                        31,
                        33,
                        35
                    ],
                    "('parquet.column.values.bitpacking#ByteBitPackingValuesWriter', 'reset')": [
                        63
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#ByteBitPackingValuesWriter', None)": [
                        30,
                        31,
                        34,
                        35,
                        37
                    ],
                    "('parquet.column.values.bitpacking#ByteBitPackingValuesWriter', 'reset')": [
                        65
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/plain/BooleanPlainValuesReader.java": {
                "old": {
                    "(None, None)": [
                        19,
                        21,
                        26,
                        27
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesReader', None)": [
                        38,
                        51
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesReader', 'readBoolean')": [
                        47,
                        48,
                        49,
                        50
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesReader', 'initFromPage(long,byte,int)')": [
                        62,
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        25
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesReader', None)": [
                        36
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesReader', 'readBoolean')": [
                        45
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesReader', 'initFromPage(long,byte,int)')": [
                        56
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/plain/BooleanPlainValuesWriter.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        25,
                        28,
                        29
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesWriter', None)": [
                        39,
                        41,
                        42,
                        44,
                        45,
                        46,
                        55
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesWriter', 'writeBoolean(boolean)')": [
                        51,
                        52,
                        53,
                        54
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesWriter', 'getBufferedSize')": [
                        60
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesWriter', 'getBytes')": [
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesWriter', 'reset')": [
                        76,
                        77
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesWriter', 'getAllocatedSize')": [
                        82
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesWriter', 'memUsageString(String)')": [
                        92
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        23
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesWriter', None)": [
                        34,
                        36,
                        37
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesWriter', 'writeBoolean(boolean)')": [
                        42
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesWriter', 'getBufferedSize')": [
                        47
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesWriter', 'getBytes')": [
                        52
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesWriter', 'reset')": [
                        57
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesWriter', 'getAllocatedSize')": [
                        62
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesWriter', 'memUsageString(String)')": [
                        72
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/rle/RLEDecoder.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('parquet.column.values.rle#RLEDecoder', None)": [
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('parquet.column.values.rle#RLEDecoder', None)": [
                        49
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/rle/RLESimpleEncoder.java": {
                "old": {
                    "(None, None)": [
                        18
                    ],
                    "('parquet.column.values.rle#RLESimpleEncoder', None)": [
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('parquet.column.values.rle#RLESimpleEncoder', None)": [
                        44
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/bitpacking/BitPackingPerfTest.java": {
                "old": {
                    "('parquet.column.values.bitpacking#BitPackingPerfTest', 'generated(byte,int)')": [
                        74
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#BitPackingPerfTest', 'generated(byte,int)')": [
                        74
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/bitpacking/TestBitPackingColumn.java": {
                "old": {
                    "('parquet.column.values.bitpacking#TestBitPackingColumn', None)": [
                        191,
                        194
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('parquet.column.values.bitpacking#TestBitPackingColumn', None)": [
                        192,
                        195
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/bitpacking/TestByteBitPacking.java": {
                "old": {
                    "('parquet.column.values.bitpacking#TestByteBitPacking', 'testPackUnPack')": [
                        38
                    ],
                    "('parquet.column.values.bitpacking#TestByteBitPacking', 'testPackUnPackAgainstHandWritten')": [
                        71
                    ],
                    "('parquet.column.values.bitpacking#TestByteBitPacking', 'testPackUnPackAgainstLemire')": [
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130
                    ],
                    "(None, None)": [
                        133
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('parquet.column.values.bitpacking#TestByteBitPacking', 'testPackUnPack')": [
                        39
                    ],
                    "('parquet.column.values.bitpacking#TestByteBitPacking', 'testPackUnPackAgainstHandWritten')": [
                        72
                    ],
                    "('parquet.column.values.bitpacking#TestByteBitPacking', 'testPackUnPackAgainstLemire')": [
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/bitpacking/TestLemireBitPacking.java": {
                "old": {
                    "('parquet.column.values.bitpacking#TestLemireBitPacking', 'testPackUnPack')": [
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#TestLemireBitPacking', 'testPackUnPack')": [
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47
                    ],
                    "('parquet.column.values.bitpacking#TestLemireBitPacking', None)": [
                        48,
                        57,
                        58
                    ],
                    "('parquet.column.values.bitpacking#TestLemireBitPacking', 'packUnpack(IntPacker,int,int)')": [
                        55,
                        56
                    ],
                    "('parquet.column.values.bitpacking#TestLemireBitPacking', 'packUnpack(BytePacker,int,int)')": [
                        59,
                        60
                    ]
                }
            }
        }
    }
}