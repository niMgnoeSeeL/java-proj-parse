{
    "9aad6416a4c7448727bcb71db739d7a1bc8a392f": {
        "authored_data": "2013 Oct 01 21:42",
        "commit.message": "Move reflection checks for specific Avro Fixed type into FieldFixedConverter constructor.\n",
        "commit.author.name": "David Z. Chen",
        "pcid": "753473cdc63a4105e0f74cd8b747a1a705710dff",
        "changes": {
            "parquet-avro/src/main/java/parquet/avro/AvroIndexedRecordConverter.java": {
                "old": {
                    "('parquet.avro#AvroIndexedRecordConverter', None)": [
                        289,
                        294,
                        295
                    ]
                },
                "new": {
                    "('parquet.avro#AvroIndexedRecordConverter', None)": [
                        281,
                        282,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        305,
                        306,
                        307,
                        308,
                        310
                    ]
                }
            }
        }
    },
    "753473cdc63a4105e0f74cd8b747a1a705710dff": {
        "authored_data": "2013 Oct 01 21:07",
        "commit.message": "Change syntax for fixed_len_byte_array to placing length parameter after type name rather after field name.\n",
        "commit.author.name": "David Z. Chen",
        "pcid": "a2895bfe6ea0f3289739d63d3715b775108a607c",
        "changes": {
            "parquet-avro/src/test/java/parquet/avro/TestAvroSchemaConverter.java": {
                "old": {
                    "('parquet.avro#TestAvroSchemaConverter', 'testAllTypes')": [
                        84
                    ]
                },
                "new": {
                    "('parquet.avro#TestAvroSchemaConverter', 'testAllTypes')": [
                        84
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/MessageTypeParser.java": {
                "old": {
                    "('parquet.schema#MessageTypeParser', 'readType(String,Tokenizer)')": [
                        104
                    ]
                },
                "new": {
                    "('parquet.schema#MessageTypeParser', 'readType(String,Tokenizer)')": [
                        103,
                        104,
                        106,
                        107,
                        118,
                        119,
                        120,
                        121
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/schema/PrimitiveType.java": {
                "old": {
                    "('parquet.schema#PrimitiveType', 'writeToStringBuilder(StringBuilder,String)')": [
                        362,
                        363,
                        364
                    ]
                },
                "new": {
                    "('parquet.schema#PrimitiveType', 'writeToStringBuilder(StringBuilder,String)')": [
                        362,
                        366
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/TestPigSchemaConverter.java": {
                "old": {
                    "('parquet.pig#TestPigSchemaConverter', 'testMapWithFixed')": [
                        200,
                        201
                    ]
                },
                "new": {
                    "('parquet.pig#TestPigSchemaConverter', 'testMapWithFixed')": [
                        200,
                        201
                    ]
                }
            }
        }
    },
    "7802a9ab00a81853cbc95e04a46cc2eb721046e2": {
        "authored_data": "2013 Oct 01 17:57",
        "commit.message": "Update ParquetReader to take Configuration as a constructor argument.\n\nThis enables schema projection for both AvroParquetReader and\nThriftParquetReader by allowing configuration of\nAVRO_REQUESTED_PROJECTION, THRIFT_COLUMN_FILTER_KEY, and\nPARQUET_READ_SCHEMA.\n",
        "commit.author.name": "Wesley Peck",
        "pcid": "5ab6cccf9fcd280680f8ffdb74a17a5a71a327a7",
        "changes": {
            "parquet-avro/src/main/java/parquet/avro/AvroParquetReader.java": {
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        23,
                        25,
                        49
                    ],
                    "('parquet.avro#AvroParquetReader', None)": [
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48
                    ]
                }
            },
            "parquet-avro/src/test/java/parquet/avro/TestSpecificReadWrite.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        25,
                        33,
                        34,
                        35,
                        38
                    ],
                    "('parquet.avro#TestSpecificReadWrite', None)": [
                        115,
                        116,
                        117,
                        153
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'testProjection')": [
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetReader.java": {
                "old": {
                    "('parquet.hadoop#ParquetReader', None)": [
                        71
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetReader', None)": [
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        92
                    ]
                }
            },
            "parquet-thrift/src/main/java/parquet/thrift/ThriftParquetReader.java": {
                "new": {
                    "(None, None)": [
                        20,
                        71,
                        72
                    ],
                    "('parquet.thrift#ThriftParquetReader', None)": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ]
                }
            }
        }
    },
    "6ec199d4333a5aea8db5777c3d35da36a922f93c": {
        "authored_data": "2013 Oct 01 18:04",
        "commit.message": "Disable the time read counter check in DeprecatedInputFormatTest.\n\nThis mirrors the commit 6dfd97551fc1b8606704dcf656b185b34ceffcd4\nwhich disabled the check in TestInputOutputFormat.\n",
        "commit.author.name": "Wesley Peck",
        "pcid": "5ab6cccf9fcd280680f8ffdb74a17a5a71a327a7",
        "changes": {
            "parquet-hadoop/src/test/java/parquet/hadoop/DeprecatedInputFormatTest.java": {
                "old": {
                    "('parquet.hadoop#DeprecatedInputFormatTest', 'testReadWriteWithCounteDeprecated')": [
                        119
                    ]
                },
                "new": {
                    "('parquet.hadoop#DeprecatedInputFormatTest', None)": [
                        119
                    ]
                }
            }
        }
    },
    "a2895bfe6ea0f3289739d63d3715b775108a607c": {
        "authored_data": "2013 Sep 30 20:48",
        "commit.message": "Remove print statement.\n",
        "commit.author.name": "David Z. Chen",
        "pcid": "1ee42327bbde2513edb48a22a207da36623d000d",
        "changes": {
            "parquet-avro/src/main/java/parquet/avro/AvroIndexedRecordConverter.java": {
                "old": {
                    "('parquet.avro#AvroIndexedRecordConverter', None)": [
                        296
                    ]
                }
            }
        }
    }
}