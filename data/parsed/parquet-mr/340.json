{
    "44c167ead46fe430c9e21871c4c7f993153a88cb": {
        "authored_data": "2018 Nov 23 11:59",
        "commit.message": "PARQUET-1461: Third party code does not compile after parquet-mr minor version update (#556)\n\n",
        "commit.author.name": "Gabor Szadovszky",
        "pcid": "ca9a125ed70ba6d28b3218eb7c90e6b51738fbf3",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/column/values/ValuesReader.java": {
                "old": {
                    "('org.apache.parquet.column.values#ValuesReader', 'initFromPage(int,ByteBufferInputStream)')": [
                        106
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.values#ValuesReader', 'initFromPage(int,ByteBuffer,int)')": [
                        68,
                        69,
                        70
                    ],
                    "('org.apache.parquet.column.values#ValuesReader', 'initFromPage(int,ByteBufferInputStream)')": [
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115
                    ],
                    "('org.apache.parquet.column.values#ValuesReader', None)": [
                        116
                    ]
                }
            }
        }
    },
    "4d9a2fd01f33858bd5eb392a5f7bd0967fbec3f8": {
        "authored_data": "2018 Nov 21 17:27",
        "commit.message": "Revert \"Experiment.\"\n\nThis reverts commit 97a880cfc4fc3c2c74ff1302bc6e4aab1582b6df.\n",
        "commit.author.name": "Zoltan Ivanfi",
        "pcid": "97a880cfc4fc3c2c74ff1302bc6e4aab1582b6df",
        "changes": {
            "parquet-benchmarks/src/main/java/org/apache/parquet/benchmarks/WriteBenchmarks.java": {
                "old": {
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsDefaultBlockAndPageSizeUncompressed')": [
                        58
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsBS256MPS4MUncompressed')": [
                        72
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsBS256MPS8MUncompressed')": [
                        86
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsBS512MPS4MUncompressed')": [
                        100
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsBS512MPS8MUncompressed')": [
                        114
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', None)": [
                        129
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsDefaultBlockAndPageSizeSNAPPY')": [
                        143
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsDefaultBlockAndPageSizeGZIP')": [
                        157
                    ]
                },
                "new": {
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsDefaultBlockAndPageSizeUncompressed')": [
                        58
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsBS256MPS4MUncompressed')": [
                        72
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsBS256MPS8MUncompressed')": [
                        86
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsBS512MPS4MUncompressed')": [
                        100
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsBS512MPS8MUncompressed')": [
                        114
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', None)": [
                        129
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsDefaultBlockAndPageSizeSNAPPY')": [
                        143
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsDefaultBlockAndPageSizeGZIP')": [
                        157
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/InternalParquetRecordWriter.java": {
                "old": {
                    "('org.apache.parquet.hadoop#InternalParquetRecordWriter', None)": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#InternalParquetRecordWriter', None)": [
                        46
                    ]
                }
            }
        }
    },
    "97a880cfc4fc3c2c74ff1302bc6e4aab1582b6df": {
        "authored_data": "2018 Oct 26 13:08",
        "commit.message": "Experiment.\n",
        "commit.author.name": "Zoltan Ivanfi",
        "pcid": "a7b5a4b24a3e17edce9273a0654e799075c86dbe",
        "changes": {
            "parquet-benchmarks/src/main/java/org/apache/parquet/benchmarks/WriteBenchmarks.java": {
                "old": {
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsDefaultBlockAndPageSizeUncompressed')": [
                        58
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsBS256MPS4MUncompressed')": [
                        72
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsBS256MPS8MUncompressed')": [
                        86
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsBS512MPS4MUncompressed')": [
                        100
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsBS512MPS8MUncompressed')": [
                        114
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', None)": [
                        129
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsDefaultBlockAndPageSizeSNAPPY')": [
                        143
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsDefaultBlockAndPageSizeGZIP')": [
                        157
                    ]
                },
                "new": {
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsDefaultBlockAndPageSizeUncompressed')": [
                        58
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsBS256MPS4MUncompressed')": [
                        72
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsBS256MPS8MUncompressed')": [
                        86
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsBS512MPS4MUncompressed')": [
                        100
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsBS512MPS8MUncompressed')": [
                        114
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', None)": [
                        129
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsDefaultBlockAndPageSizeSNAPPY')": [
                        143
                    ],
                    "('org.apache.parquet.benchmarks#WriteBenchmarks', 'write1MRowsDefaultBlockAndPageSizeGZIP')": [
                        157
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/InternalParquetRecordWriter.java": {
                "old": {
                    "('org.apache.parquet.hadoop#InternalParquetRecordWriter', None)": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#InternalParquetRecordWriter', None)": [
                        46
                    ]
                }
            }
        }
    },
    "a7b5a4b24a3e17edce9273a0654e799075c86dbe": {
        "authored_data": "2018 Nov 21 16:12",
        "commit.message": "PARQUET-1460: Fix javadoc errors and include javadoc checking in Travis checks (#554)\n\n",
        "commit.author.name": "Gabor Szadovszky",
        "pcid": "542ab3e2b321d5f755f3e9c6b997a458f8cf0f5e",
        "changes": {
            "parquet-benchmarks/src/main/java/org/apache/parquet/benchmarks/FilteringBenchmarks.java": {
                "old": {
                    "(None, None)": [
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        82
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileReader.java": {
                "old": [
                    "JavaSyntaxError",
                    "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileReader.java",
                    [
                        867,
                        872
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileReader.java",
                    [
                        867,
                        868
                    ]
                ]
            }
        }
    },
    "542ab3e2b321d5f755f3e9c6b997a458f8cf0f5e": {
        "authored_data": "2018 Nov 19 22:07",
        "commit.message": "PARQUET-1407: Avro: Fix binary values returned from dictionary encoding (#552)\n\n* PARQUET-1407: Add test case for PARQUET-1407 to demonstrate the issue\r\n* PARQUET-1407: Fix binary values from dictionary encoding.\r\n\r\nCloses #551.",
        "commit.author.name": "nandorKollar",
        "pcid": "5250dac71600d42edfa324786593a7d56135aa26",
        "changes": {
            "parquet-avro/src/main/java/org/apache/parquet/avro/AvroConverters.java": {
                "old": {
                    "('org.apache.parquet.avro#AvroConverters', None)": [
                        81
                    ]
                },
                "new": {
                    "('org.apache.parquet.avro#AvroConverters', None)": [
                        79,
                        80,
                        81,
                        82,
                        85,
                        226,
                        227,
                        228,
                        229,
                        230
                    ]
                }
            },
            "parquet-avro/src/test/java/org/apache/parquet/avro/TestReadWrite.java": {
                "old": {
                    "('org.apache.parquet.avro#TestReadWrite', 'testEmptyArray')": [
                        90,
                        91,
                        92,
                        93
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testEmptyMap')": [
                        120,
                        121,
                        122,
                        123
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testMapWithNulls')": [
                        150,
                        151,
                        152,
                        153
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testMapRequiredValueWithNull')": [
                        185,
                        186,
                        187,
                        188
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testMapWithUtf8Key')": [
                        212,
                        213,
                        214,
                        215
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testAll')": [
                        349,
                        350,
                        351,
                        352,
                        353
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testAllUsingDefaultAvroSchema')": [
                        432,
                        433,
                        434,
                        435
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testUnionWithSingleNonNullType')": [
                        657,
                        658,
                        659,
                        660
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        41
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testEmptyArray')": [
                        92
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testEmptyMap')": [
                        119
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testMapWithNulls')": [
                        146
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testMapRequiredValueWithNull')": [
                        178
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testMapWithUtf8Key')": [
                        202
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testAll')": [
                        336,
                        337
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testAllUsingDefaultAvroSchema')": [
                        416
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testUnionWithSingleNonNullType')": [
                        638
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', None)": [
                        657,
                        658,
                        659,
                        688,
                        689,
                        690,
                        691
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'testDuplicatedValuesWithDictionary')": [
                        660,
                        661,
                        662,
                        663,
                        664,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671,
                        672,
                        673,
                        674,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680,
                        681,
                        682,
                        683,
                        684,
                        685,
                        686,
                        687
                    ],
                    "('org.apache.parquet.avro#TestReadWrite', 'createTempFile')": [
                        692,
                        693,
                        694,
                        695,
                        696
                    ]
                }
            }
        }
    }
}