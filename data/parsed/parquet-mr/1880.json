{
    "27d1c2c4fb4b0af707cae81d003bbb83e47a9382": {
        "authored_data": "2013 May 29 23:31",
        "commit.message": "Add javadoc to ByteUtils\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "d29eeb570d0b5e3c07cbd85152349c72a0f976dd",
        "changes": {
            "parquet-column/src/main/java/parquet/bytes/BytesUtils.java": {
                "new": {
                    "('parquet.bytes#BytesUtils', None)": [
                        124,
                        125,
                        126,
                        127
                    ]
                }
            }
        }
    },
    "d29eeb570d0b5e3c07cbd85152349c72a0f976dd": {
        "authored_data": "2013 May 29 23:28",
        "commit.message": "cleanup preconditions\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "2ffdab725e039a33d2c34196bbbcd52fb4fb005c",
        "changes": {
            "parquet-column/src/main/java/parquet/Preconditions.java": {
                "old": {
                    "('parquet#Preconditions', 'checkNotNull(T,String)')": [
                        33
                    ],
                    "('parquet#Preconditions', 'checkArgument(boolean,String)')": [
                        40
                    ],
                    "('parquet#Preconditions', 'checkArgument(boolean)')": [
                        46
                    ]
                },
                "new": {
                    "('parquet#Preconditions', 'checkNotNull(T,String)')": [
                        33
                    ],
                    "('parquet#Preconditions', None)": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        51,
                        52,
                        53,
                        54
                    ],
                    "('parquet#Preconditions', 'checkArgument(boolean,String)')": [
                        45
                    ],
                    "('parquet#Preconditions', 'checkArgument(boolean)')": [
                        55
                    ]
                }
            }
        }
    },
    "2ffdab725e039a33d2c34196bbbcd52fb4fb005c": {
        "authored_data": "2013 May 29 23:25",
        "commit.message": "Add test for setByte()\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "0f9eee5ff50ea7475e34bea444ea0de2d877862f",
        "changes": {
            "parquet-column/src/main/java/parquet/bytes/CapacityByteArrayOutputStream.java": {
                "old": {
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'setByte(long,byte)')": [
                        220
                    ]
                },
                "new": {
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'setByte(long,byte)')": [
                        220
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/bytes/TestCapacityByteArrayOutputStream.java": {
                "new": {
                    "(None, None)": [
                        18,
                        22
                    ],
                    "('parquet.bytes#TestCapacityByteArrayOutputStream', None)": [
                        133,
                        213,
                        214,
                        215,
                        216
                    ],
                    "('parquet.bytes#TestCapacityByteArrayOutputStream', 'testReplaceByte')": [
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212
                    ]
                }
            }
        }
    },
    "0f9eee5ff50ea7475e34bea444ea0de2d877862f": {
        "authored_data": "2013 May 29 23:00",
        "commit.message": "Cleanup\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "b3e94326c9488270af209f0cc978b956fb2a5380",
        "changes": {
            "parquet-column/src/main/java/parquet/bytes/CapacityByteArrayOutputStream.java": {
                "old": {
                    "('parquet.bytes#CapacityByteArrayOutputStream', None)": [
                        201,
                        202
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'setByte(long,byte)')": [
                        209,
                        210,
                        211
                    ]
                },
                "new": {
                    "('parquet.bytes#CapacityByteArrayOutputStream', None)": [
                        201,
                        202,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'getCurrentIndex')": [
                        205
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'setByte(long,byte)')": [
                        216,
                        217,
                        218
                    ]
                }
            }
        }
    },
    "b3e94326c9488270af209f0cc978b956fb2a5380": {
        "authored_data": "2013 May 29 22:53",
        "commit.message": "First pass at RLE hybrid\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "9a30c8fdbe0c7850cb5cac9d5778217e7a026e36",
        "changes": {
            "parquet-column/src/main/java/parquet/Preconditions.java": {
                "old": {
                    "('parquet#Preconditions', None)": [
                        24
                    ]
                },
                "new": {
                    "('parquet#Preconditions', None)": [
                        24,
                        25,
                        43,
                        44,
                        45
                    ],
                    "('parquet#Preconditions', 'checkArgument(boolean,String)')": [
                        40,
                        41,
                        42
                    ],
                    "('parquet#Preconditions', 'checkArgument(boolean)')": [
                        46,
                        47,
                        48
                    ],
                    "(None, None)": [
                        49,
                        50,
                        51
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/bytes/BytesUtils.java": {
                "new": {
                    "('parquet.bytes#BytesUtils', 'writeIntLittleEndianOnOneByte(OutputStream,int)')": [
                        100,
                        101
                    ],
                    "('parquet.bytes#BytesUtils', None)": [
                        102,
                        103,
                        107,
                        108,
                        113,
                        114,
                        122,
                        123,
                        144
                    ],
                    "('parquet.bytes#BytesUtils', 'writeIntLittleEndianOnTwoBytes(OutputStream,int)')": [
                        104,
                        105,
                        106
                    ],
                    "('parquet.bytes#BytesUtils', 'writeIntLittleEndianOnThreeBytes(OutputStream,int)')": [
                        109,
                        110,
                        111,
                        112
                    ],
                    "('parquet.bytes#BytesUtils', 'writeIntLittleEndianPaddedOnBitWidth(OutputStream,int,int)')": [
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/bytes/CapacityByteArrayOutputStream.java": {
                "old": {
                    "('parquet.bytes#CapacityByteArrayOutputStream', None)": [
                        55,
                        56,
                        57
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', None)": [
                        56,
                        201,
                        202,
                        203,
                        206,
                        207,
                        221,
                        222,
                        223,
                        224
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'getCurrentIndex')": [
                        204,
                        205
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'setByte(long,byte)')": [
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220
                    ]
                }
            }
        }
    },
    "0a7c59aac0bc55999d768ffbef4d503e1282e6ca": {
        "authored_data": "2013 May 29 01:29",
        "commit.message": "Speed up Avro string parsing\n",
        "commit.author.name": "Uri Laserson",
        "pcid": "9a30c8fdbe0c7850cb5cac9d5778217e7a026e36",
        "changes": {
            "parquet-column/src/main/java/parquet/io/api/Binary.java": {
                "old": {
                    "('parquet.io.api#Binary', 'fromString(String)')": [
                        190
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        27
                    ],
                    "('parquet.io.api#Binary', 'fromString(String)')": [
                        192,
                        193,
                        194,
                        195
                    ],
                    "('parquet.io.api#Binary', None)": [
                        196
                    ]
                }
            }
        }
    },
    "5cedb4afb0065fe9dbf3f4bd7cf8e4c953689780": {
        "authored_data": "2013 May 23 17:00",
        "commit.message": "license headers\n",
        "commit.author.name": "julien",
        "pcid": "38d8a68beadb7335dd52dc10f872d96b635dfc2d",
        "changes": {
            "parquet-column/src/main/java/parquet/Version.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/bytes/TestCapacityByteArrayOutputStream.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/util/ContextUtil.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            }
        }
    },
    "5c2034a0601384cc93258c27f8a68d60a71babb9": {
        "authored_data": "2013 May 23 01:40",
        "commit.message": "license headers\n",
        "commit.author.name": "julien",
        "pcid": "25d8ff20756281d170ea9d26334cef0862bbac2e",
        "changes": {
            "parquet-column/src/main/java/parquet/Preconditions.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/Dictionary.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/page/DictionaryPage.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/dictionary/DictionaryValuesReader.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/dictionary/DictionaryValuesWriter.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/dictionary/IntList.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/dictionary/PlainBinaryDictionary.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/dictionary/TestDictionary.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            }
        }
    }
}