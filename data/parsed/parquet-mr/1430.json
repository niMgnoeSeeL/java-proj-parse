{
    "3778e45fcc084f0559ea1d43deb36cf4c6a1527b": {
        "authored_data": "2013 Sep 29 17:41",
        "commit.message": "Pulling in clean modifications for adding ColumnPredicate functions.\n",
        "commit.author.name": "Frank Austin Nothaft",
        "pcid": "5ab6cccf9fcd280680f8ffdb74a17a5a71a327a7",
        "changes": {
            "parquet-column/src/main/java/parquet/filter/ColumnPredicates.java": {
                "old": {
                    "('parquet.filter#ColumnPredicates', 'equalTo(E)')": [
                        88
                    ]
                },
                "new": {
                    "('parquet.filter#ColumnPredicates', None)": [
                        32,
                        33,
                        34,
                        35,
                        42,
                        43,
                        44,
                        45,
                        69,
                        70,
                        71,
                        72,
                        78,
                        79,
                        80,
                        81,
                        105,
                        106,
                        107,
                        108,
                        114,
                        115,
                        116,
                        117,
                        141,
                        142,
                        143,
                        144
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToString(PredicateFunction)')": [
                        46,
                        47,
                        48,
                        49,
                        50
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToInteger(PredicateFunction)')": [
                        64,
                        65,
                        66,
                        67,
                        68
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToLong(PredicateFunction)')": [
                        82,
                        83,
                        84,
                        85,
                        86
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToFloat(PredicateFunction)')": [
                        100,
                        101,
                        102,
                        103,
                        104
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToDouble(PredicateFunction)')": [
                        118,
                        119,
                        120,
                        121,
                        122
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToBoolean(PredicateFunction)')": [
                        136,
                        137,
                        138,
                        139,
                        140
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/TestFiltered.java": {
                "old": {
                    "('parquet.io#TestFiltered', None)": [
                        145
                    ]
                },
                "new": {
                    "(None, None)": [
                        38,
                        40,
                        41
                    ],
                    "('parquet.io#TestFiltered', None)": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        118,
                        119,
                        120,
                        148,
                        149,
                        150,
                        151,
                        216
                    ],
                    "('parquet.io#TestFiltered', 'testApplyFunctionFilterOnInteger')": [
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117
                    ],
                    "('parquet.io#TestFiltered', 'testFilterOnString')": [
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147
                    ],
                    "('parquet.io#TestFiltered', 'testApplyFunctionFilterOnString')": [
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160
                    ]
                }
            }
        }
    },
    "2c5e07f02fd8edbfcabfab5813e486f9a192ba6b": {
        "authored_data": "2013 Sep 28 00:22",
        "commit.message": "Add support to AvroWriteSupport for writing out records with maps containing Utf8-type keys.\n",
        "commit.author.name": "David Z. Chen",
        "pcid": "5ab6cccf9fcd280680f8ffdb74a17a5a71a327a7",
        "changes": {
            "parquet-avro/src/main/java/parquet/avro/AvroWriteSupport.java": {
                "old": {
                    "('parquet.avro#AvroWriteSupport', 'writeMap(GroupType,Schema,Map)')": [
                        128,
                        139
                    ],
                    "('parquet.avro#AvroWriteSupport', 'writeValue(Type,Schema,Object)')": [
                        207
                    ]
                },
                "new": {
                    "('parquet.avro#AvroWriteSupport', 'writeMap(GroupType,Schema,Map)')": [
                        128,
                        139
                    ],
                    "('parquet.avro#AvroWriteSupport', 'writeValue(Type,Schema,Object)')": [
                        207
                    ]
                }
            },
            "parquet-avro/src/test/java/parquet/avro/TestReadWrite.java": {
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('parquet.avro#TestReadWrite', None)": [
                        92,
                        93,
                        94
                    ],
                    "('parquet.avro#TestReadWrite', 'testMapWithUtf8Key')": [
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118
                    ]
                }
            }
        }
    },
    "52c32a3a296892a4fa94a040f242313620518258": {
        "authored_data": "2013 Sep 27 15:31",
        "commit.message": "Removing predicate functions to prepare for pushing or/not filters. Limits number of features pushed.\n",
        "commit.author.name": "Frank Austin Nothaft",
        "pcid": "4b2cb26341eefb679cd599c75952509aa76af55a",
        "changes": {
            "parquet-column/src/main/java/parquet/filter/ColumnPredicates.java": {
                "old": {
                    "('parquet.filter#ColumnPredicates', None)": [
                        32,
                        33,
                        34,
                        35,
                        42,
                        43,
                        44,
                        45,
                        69,
                        70,
                        71,
                        72,
                        78,
                        79,
                        80,
                        81,
                        105,
                        106,
                        107,
                        108,
                        114,
                        115,
                        116,
                        117,
                        141,
                        142,
                        143,
                        144
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToString(PredicateFunction)')": [
                        46,
                        47,
                        48,
                        49,
                        50
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToInteger(PredicateFunction)')": [
                        64,
                        65,
                        66,
                        67,
                        68
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToLong(PredicateFunction)')": [
                        82,
                        83,
                        84,
                        85,
                        86
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToFloat(PredicateFunction)')": [
                        100,
                        101,
                        102,
                        103,
                        104
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToDouble(PredicateFunction)')": [
                        118,
                        119,
                        120,
                        121,
                        122
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToBoolean(PredicateFunction)')": [
                        136,
                        137,
                        138,
                        139,
                        140
                    ]
                },
                "new": {
                    "('parquet.filter#ColumnPredicates', 'equalTo(E)')": [
                        88
                    ]
                }
            }
        }
    },
    "4b2cb26341eefb679cd599c75952509aa76af55a": {
        "authored_data": "2013 Sep 27 01:07",
        "commit.message": "Added unit tests for predicates. Got predicates compiling, and passing on tests.\n",
        "commit.author.name": "Frank Austin Nothaft",
        "pcid": "58051d0629121332a8f96e00d2e9603583cbd564",
        "changes": {
            "parquet-column/src/main/java/parquet/filter/ColumnPredicates.java": {
                "old": [
                    "JavaSyntaxError",
                    "parquet-column/src/main/java/parquet/filter/ColumnPredicates.java",
                    [
                        21,
                        22,
                        23,
                        24,
                        46,
                        50,
                        64,
                        68,
                        82,
                        86,
                        100,
                        104,
                        118,
                        122,
                        136,
                        140
                    ]
                ],
                "new": {
                    "('parquet.filter#ColumnPredicates', None)": [
                        30,
                        31,
                        32,
                        33
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToString(PredicateFunction)')": [
                        46,
                        50
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToInteger(PredicateFunction)')": [
                        64,
                        68
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToLong(PredicateFunction)')": [
                        82,
                        86
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToFloat(PredicateFunction)')": [
                        100,
                        104
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToDouble(PredicateFunction)')": [
                        118,
                        122
                    ],
                    "('parquet.filter#ColumnPredicates', 'applyFunctionToBoolean(PredicateFunction)')": [
                        136,
                        140
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/filter/NotRecordFilter.java": {
                "old": {
                    "('parquet.filter#NotRecordFilter', None)": [
                        45
                    ],
                    "('parquet.filter#NotRecordFilter', 'isMatch')": [
                        53
                    ]
                },
                "new": {
                    "('parquet.filter#NotRecordFilter', None)": [
                        45
                    ],
                    "('parquet.filter#NotRecordFilter', 'isMatch')": [
                        53
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/filter/OrRecordFilter.java": {
                "old": {
                    "('parquet.filter#OrRecordFilter', None)": [
                        48
                    ]
                },
                "new": {
                    "('parquet.filter#OrRecordFilter', None)": [
                        48
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/TestFiltered.java": {
                "new": {
                    "(None, None)": [
                        37,
                        38
                    ],
                    "('parquet.io#TestFiltered', None)": [
                        148,
                        164,
                        165,
                        166,
                        167,
                        181,
                        182,
                        183
                    ],
                    "('parquet.io#TestFiltered', 'testFilteredOrPaged')": [
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163
                    ],
                    "('parquet.io#TestFiltered', 'testFilteredNotPaged')": [
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180
                    ]
                }
            }
        }
    },
    "835f12eae78c762322dd6b77481a5aca47637ec7": {
        "authored_data": "2013 Sep 27 00:07",
        "commit.message": "refactor code\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "bfcb120889ce52409093536f24000d75da0594d3",
        "changes": {
            "parquet-scrooge/src/main/java/parquet/scrooge/ScroogeSchemaConverter.java": {
                "old": {
                    "(None, None)": [
                        8,
                        12,
                        13,
                        14,
                        18
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'toThriftField(ThriftStructField)')": [
                        36,
                        39,
                        41,
                        78,
                        81,
                        85,
                        88,
                        91,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', None)": [
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        139,
                        140,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertEnumTypeField(ThriftStructField)')": [
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertSetTypeField(ThriftStructField)')": [
                        144,
                        145,
                        146
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'getTypeArguments(ThriftStructField)')": [
                        150,
                        152,
                        153
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertListTypeField(ThriftStructField)')": [
                        160,
                        161,
                        162
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertMapTypeField(ThriftStructField)')": [
                        167,
                        168,
                        169,
                        170,
                        171,
                        173,
                        176,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertBasedOnClass(Class)')": [
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        208,
                        210,
                        212,
                        214,
                        216,
                        218,
                        220
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertStructTypeField(ThriftStructField)')": [
                        226,
                        227,
                        228
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'extractClassFromOption(Type)')": [
                        234
                    ]
                },
                "new": {
                    "(None, None)": [
                        8
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'toThriftField(ThriftStructField)')": [
                        34,
                        36,
                        73,
                        76,
                        80,
                        83,
                        86
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertEnumTypeField(ThriftStructField)')": [
                        94
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertSetTypeField(ThriftStructField)')": [
                        98,
                        99,
                        100
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'getTypeArguments(ThriftStructField)')": [
                        104,
                        106,
                        107
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertListTypeField(ThriftStructField)')": [
                        114,
                        115,
                        116
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertMapTypeField(ThriftStructField)')": [
                        121,
                        122,
                        123,
                        124,
                        125,
                        127,
                        130,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertBasedOnClass(Class)')": [
                        141,
                        142,
                        144,
                        146,
                        148,
                        150,
                        152,
                        154,
                        156
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertStructTypeField(ThriftStructField)')": [
                        162,
                        163,
                        164
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'extractClassFromOption(Type)')": [
                        170
                    ]
                }
            }
        }
    },
    "bfcb120889ce52409093536f24000d75da0594d3": {
        "authored_data": "2013 Sep 26 17:17",
        "commit.message": "implemented map with nested structure, TODO: tests failing since the default requirement can not be determined\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "6ffc1b9fe17309b409b54c7b053bf511768a29e4",
        "changes": {
            "parquet-scrooge/src/main/java/parquet/scrooge/ScroogeSchemaConverter.java": {
                "old": {
                    "('parquet.scrooge#ScroogeSchemaConverter', 'toThriftField(ThriftStructField)')": [
                        85,
                        86,
                        90,
                        91,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertEnumTypeField(ThriftStructField)')": [
                        137,
                        139,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', None)": [
                        170,
                        171
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertSetTypeField(ThriftStructField)')": [
                        172
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertListTypeField(ThriftStructField)')": [
                        188
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertMapTypeField(ThriftStructField)')": [
                        195
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertBasedOnClass(Class)')": [
                        224,
                        249,
                        250
                    ]
                },
                "new": {
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertEnumTypeField(ThriftStructField)')": [
                        136,
                        137,
                        138
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', None)": [
                        139,
                        140,
                        141,
                        142,
                        222
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertSetTypeField(ThriftStructField)')": [
                        143
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertListTypeField(ThriftStructField)')": [
                        159
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertMapTypeField(ThriftStructField)')": [
                        166
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertBasedOnClass(Class)')": [
                        195,
                        220,
                        221
                    ]
                }
            },
            "parquet-scrooge/src/test/java/parquet/scrooge/ScroogeSchemaConverterTest.java": {
                "new": {
                    "(None, None)": [
                        5,
                        8,
                        12
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', None)": [
                        58,
                        59,
                        60,
                        66,
                        67,
                        68
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', 'testMapComplex')": [
                        61,
                        62,
                        63,
                        64,
                        65
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', 'testDefaultFields')": [
                        69,
                        70,
                        71,
                        72,
                        73
                    ]
                }
            }
        }
    },
    "6ffc1b9fe17309b409b54c7b053bf511768a29e4": {
        "authored_data": "2013 Sep 26 16:20",
        "commit.message": "implemented conversion for enum\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "5410381c14187990675c62b6627eb0adcc45193c",
        "changes": {
            "parquet-scrooge/src/main/java/parquet/scrooge/ScroogeSchemaConverter.java": {
                "old": {
                    "(None, None)": [
                        8
                    ]
                },
                "new": {
                    "(None, None)": [
                        8,
                        12,
                        13,
                        14,
                        18
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'toThriftField(ThriftStructField)')": [
                        101
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', None)": [
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverter', 'convertEnumTypeField(ThriftStructField)')": [
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169
                    ]
                }
            },
            "parquet-scrooge/src/test/java/parquet/scrooge/ScroogeSchemaConverterTest.java": {
                "old": {
                    "('parquet.scrooge#ScroogeSchemaConverterTest', 'testConvertPrimitiveSet')": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        5
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', 'testConvertPrimitiveSet')": [
                        43
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', None)": [
                        47,
                        48,
                        49
                    ],
                    "('parquet.scrooge#ScroogeSchemaConverterTest', 'testConvertEnum')": [
                        50,
                        51,
                        52,
                        53,
                        54
                    ]
                }
            },
            "parquet-thrift/src/main/java/parquet/thrift/struct/ThriftType.java": {
                "new": {
                    "('parquet.thrift.struct#ThriftType', None)": [
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424
                    ]
                }
            }
        }
    },
    "d0fc6a0d16d89f903859f69be3d08666f2fa50ed": {
        "authored_data": "2013 Sep 26 01:37",
        "commit.message": "Correct schema syntaxes for TestHiveSchemaConverter.\n",
        "commit.author.name": "David Z. Chen",
        "pcid": "9cd67375d2d64eaf9e1ae4021885f9130881a325",
        "changes": {
            "parquet-hive/src/test/java/parquet/hive/TestHiveSchemaConverter.java": {
                "old": {
                    "('parquet.hive#TestHiveSchemaConverter', 'testSimpleType')": [
                        82
                    ],
                    "('parquet.hive#TestHiveSchemaConverter', 'testMap')": [
                        117,
                        118
                    ]
                },
                "new": {
                    "('parquet.hive#TestHiveSchemaConverter', 'testMap')": [
                        116,
                        117
                    ]
                }
            }
        }
    }
}