{
    "fcd568282b2a150f9f42953f12268dc88d09da89": {
        "authored_data": "2015 Jul 13 17:36",
        "commit.message": "PARQUET-279 : Check empty struct in compatibility checker\n\nAdd the empty struct check in the CompatibilityChecker util.\nParquet currently does not support empty struct/group without leaves\n\nAuthor: Tianshuo Deng <tdeng@twitter.com>\n\nCloses #194 from tsdeng/check_empty_struct and squashes the following commits:\n\n35d77a1 [Tianshuo Deng] fix rebase\nd781cf3 [Tianshuo Deng] simplify constructor\ncd2fa8e [Tianshuo Deng] add State\ne75a6ac [Tianshuo Deng] use immutable FieldsPath\n2bff920 [Tianshuo Deng] fix test\n69b4b9c [Tianshuo Deng] minor fixes\n2db8c4b [Tianshuo Deng] remove unused println\n5107ce2 [Tianshuo Deng] fix comments\n265e228 [Tianshuo Deng] wip\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "abfe3559f2469537be0c955dbb2518da5795bbbb",
        "changes": {
            "parquet-common/src/main/java/org/apache/parquet/Strings.java": {
                "old": {
                    "('org.apache.parquet#Strings', 'join(Iterable,String)')": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.parquet#Strings', 'join(Iterable,String)')": [
                        43
                    ],
                    "('org.apache.parquet#Strings', None)": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54
                    ],
                    "('org.apache.parquet#Strings', 'join(Iterator,String)')": [
                        55
                    ]
                }
            },
            "parquet-thrift/src/main/java/org/apache/parquet/thrift/ThriftSchemaConverter.java": {
                "old": {
                    "('org.apache.parquet.thrift#ThriftSchemaConverter', 'toThriftField(String,Field,ThriftField)')": [
                        127,
                        131
                    ]
                },
                "new": {
                    "('org.apache.parquet.thrift#ThriftSchemaConverter', 'toThriftField(String,Field,ThriftField)')": [
                        127,
                        131
                    ]
                }
            },
            "parquet-thrift/src/main/java/org/apache/parquet/thrift/struct/CompatibilityChecker.java": {
                "old": {
                    "(None, None)": [
                        1,
                        35,
                        69,
                        70,
                        219,
                        220,
                        221,
                        222
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibilityChecker', 'checkCompatibility(ThriftType,ThriftType)')": [
                        46,
                        47
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', None)": [
                        71,
                        74,
                        75,
                        76,
                        77,
                        96,
                        97,
                        98,
                        105,
                        106,
                        107,
                        114,
                        115,
                        118,
                        119,
                        187,
                        188,
                        189,
                        191,
                        192,
                        193,
                        195,
                        196,
                        197,
                        199,
                        200,
                        201,
                        203,
                        204,
                        205,
                        207,
                        208,
                        209,
                        211,
                        212,
                        213,
                        215,
                        216,
                        217
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(ThriftType)')": [
                        84,
                        85,
                        86,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        99,
                        100,
                        101,
                        103,
                        104,
                        108,
                        109,
                        112,
                        113,
                        151,
                        152,
                        154,
                        161,
                        162,
                        163,
                        164,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'fail(String)')": [
                        116,
                        117
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'checkField(ThriftField,ThriftField)')": [
                        120,
                        123,
                        128,
                        133,
                        137,
                        138
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(EnumType)')": [
                        190
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(BoolType)')": [
                        194
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(ByteType)')": [
                        198
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(DoubleType)')": [
                        202
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(I16Type)')": [
                        206
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(I32Type)')": [
                        210
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(I64Type)')": [
                        214
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(StringType)')": [
                        218
                    ]
                },
                "new": {
                    "(None, None)": [
                        1,
                        22,
                        24,
                        25,
                        28,
                        37,
                        40,
                        97,
                        98,
                        99,
                        107,
                        108,
                        109,
                        266,
                        267,
                        268,
                        269
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibilityChecker', 'checkCompatibility(ThriftType,ThriftType)')": [
                        51,
                        52
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibilityReport', None)": [
                        60,
                        65,
                        66,
                        79,
                        80,
                        84,
                        88,
                        89,
                        90
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibilityReport', 'hasEmptyStruct')": [
                        67,
                        68
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibilityReport', 'emptyStruct(String)')": [
                        76,
                        77,
                        78
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibilityReport', 'prettyMessages')": [
                        85,
                        86,
                        87
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibilityReport', 'toString')": [
                        91,
                        92,
                        93,
                        94,
                        95,
                        96
                    ],
                    "('org.apache.parquet.thrift.struct#State', None)": [
                        100,
                        101,
                        103,
                        104,
                        105,
                        106
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', None)": [
                        110,
                        111,
                        132,
                        133,
                        134,
                        141,
                        142,
                        143,
                        150,
                        151,
                        154,
                        155,
                        226,
                        227,
                        228,
                        231,
                        232,
                        233,
                        236,
                        237,
                        238,
                        241,
                        242,
                        243,
                        246,
                        247,
                        248,
                        251,
                        252,
                        253,
                        256,
                        257,
                        258,
                        261,
                        262,
                        263
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(ThriftType,State)')": [
                        119,
                        120,
                        121,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        135,
                        136,
                        137,
                        139,
                        140,
                        144,
                        145,
                        148,
                        149,
                        186,
                        187,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        201,
                        202,
                        203,
                        204,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'incompatible(String,FieldsPath)')": [
                        152,
                        153
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'checkField(ThriftField,ThriftField,FieldsPath)')": [
                        156,
                        159,
                        164,
                        169,
                        173
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(EnumType,State)')": [
                        229,
                        230
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(BoolType,State)')": [
                        234,
                        235
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(ByteType,State)')": [
                        239,
                        240
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(DoubleType,State)')": [
                        244,
                        245
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(I16Type,State)')": [
                        249,
                        250
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(I32Type,State)')": [
                        254,
                        255
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(I64Type,State)')": [
                        259,
                        260
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibleCheckerVisitor', 'visit(StringType,State)')": [
                        264,
                        265
                    ]
                }
            },
            "parquet-thrift/src/main/java/org/apache/parquet/thrift/struct/CompatibilityRunner.java": {
                "new": {
                    "('org.apache.parquet.thrift.struct#CompatibilityRunner', 'compareJson(LinkedList)')": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82
                    ]
                }
            },
            "parquet-thrift/src/test/java/org/apache/parquet/thrift/struct/CompatibilityCheckerTest.java": {
                "old": {
                    "('org.apache.parquet.thrift.struct#CompatibilityCheckerTest', 'verifyCompatible(Class,Class,boolean)')": [
                        114,
                        117
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibilityCheckerTest', None)": [
                        111,
                        116,
                        117,
                        126,
                        127
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibilityCheckerTest', 'testEmptyStruct')": [
                        112,
                        113,
                        114,
                        115
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibilityCheckerTest', 'getCompatibilityReport(Class,Class)')": [
                        122,
                        125
                    ],
                    "('org.apache.parquet.thrift.struct#CompatibilityCheckerTest', 'verifyCompatible(Class,Class,boolean)')": [
                        128,
                        129
                    ]
                }
            }
        }
    },
    "4c7d7523088373be3c7ff203ea895d5a6d84083e": {
        "authored_data": "2015 Jul 11 23:26",
        "commit.message": "PARQUET-329: Restore ThriftReadSupport#THRIFT_COLUMN_FILTER_KEY\n\nThriftReadSupport#THRIFT_COLUMN_FILTER_KEY was removed (incompatible change)\n\nAuthor: asingh <asingh@cloudera.com>\n\nCloses #239 from SinghAsDev/PARQUET-329 and squashes the following commits:\n\n1e44a70 [asingh] Remove o.a.p.hadoop.thrift from semver excludes\n4a1e572 [asingh] PARQUET-329: Restore ThriftReadSupport#THRIFT_COLUMN_FILTER_KEY\n",
        "commit.author.name": "asingh",
        "pcid": "043fcde300267e183972056a007bcf406e5c484a",
        "changes": {
            "parquet-thrift/src/main/java/org/apache/parquet/hadoop/thrift/ThriftReadSupport.java": {
                "old": {
                    "('org.apache.parquet.hadoop.thrift#ThriftReadSupport', None)": [
                        55
                    ],
                    "('org.apache.parquet.hadoop.thrift#ThriftReadSupport', 'setProjectionPushdown(JobConf,String)')": [
                        102
                    ],
                    "('org.apache.parquet.hadoop.thrift#ThriftReadSupport', 'getFieldProjectionFilter(Configuration)')": [
                        110,
                        120,
                        124,
                        131
                    ],
                    "('org.apache.parquet.hadoop.thrift#ThriftReadSupport', 'init(InitContext)')": [
                        165
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop.thrift#ThriftReadSupport', None)": [
                        55
                    ],
                    "('org.apache.parquet.hadoop.thrift#ThriftReadSupport', 'setProjectionPushdown(JobConf,String)')": [
                        102
                    ],
                    "('org.apache.parquet.hadoop.thrift#ThriftReadSupport', 'getFieldProjectionFilter(Configuration)')": [
                        110,
                        120,
                        124,
                        131
                    ],
                    "('org.apache.parquet.hadoop.thrift#ThriftReadSupport', 'init(InitContext)')": [
                        165
                    ]
                }
            },
            "parquet-thrift/src/main/java/org/apache/parquet/thrift/projection/deprecated/DeprecatedFieldProjectionFilter.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "parquet-thrift/src/main/java/org/apache/parquet/thrift/projection/deprecated/PathGlobPattern.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "parquet-thrift/src/test/java/org/apache/parquet/hadoop/thrift/TestParquetToThriftReadWriteAndProjection.java": {
                "old": {
                    "('org.apache.parquet.hadoop.thrift#TestParquetToThriftReadWriteAndProjection', 'shouldDoProjectionWithThriftColumnFilter(String,TBase,TBase,Class)')": [
                        340
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop.thrift#TestParquetToThriftReadWriteAndProjection', 'shouldDoProjectionWithThriftColumnFilter(String,TBase,TBase,Class)')": [
                        340
                    ]
                }
            }
        }
    },
    "043fcde300267e183972056a007bcf406e5c484a": {
        "authored_data": "2015 Jul 09 17:19",
        "commit.message": "PARQUET-246: File recovery and work-arounds\n\nThis is another way to recover data written with the delta byte array problem in PARQUET-246. This builds on @isnotinvain's strategy for solving the problem by adding a method to the encoding to detect it. This version is more similar to the fix for PARQUET-251 and includes a CorruptDeltaByteArrays helper class that uses the writer version. Most of the file changes are to get the file writer version to Encoding and the ColumnReaderImpl.\n\nThis also repairs the problem by using a new interface, RequiresPreviousReader, to pass the previous ValuesReader, which is slightly cleaner because the reader doesn't need to expose getter and setter methods.\n\nThe problem affects pages written to different row groups, so it was necessary to detect the problem in parquet-hadoop and fail jobs that cannot reconstruct data. The work-around to recover is to set \"parquet.split.files\" to false so that files are read sequentially. This could be set automatically in isSplittable, but this would require reading all file footers before submitting jobs, which was recently fixed. I think it is a fair compromise to detect the error case and recommend a solution.\n\nThis also includes tests for the problem to verify the fix.\n\nReplaces old pull requests: closes #217 closes #235\n\nAuthor: Ryan Blue <blue@apache.org>\n\nCloses #235 from rdblue/PARQUET-246-recover-files and squashes the following commits:\n\n067d5ca [Ryan Blue] PARQUET-246: Refactor after review comments.\n3236a3b [Ryan Blue] PARQUET-246: Fix ParquetInputFormat for delta byte[] corruption.\n3107362 [Ryan Blue] PARQUET-246: Add tests for delta byte array fix.\na10b157 [Ryan Blue] PARQUET-246: Fix reading for corrupt delta byte arrays.\n5c9497c [Ryan Blue] PARQUET-246: Parse semantic version with full version.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "f4e754e66e3661274df624bc328991cd88dd03d6",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/CorruptStatistics.java": {
                "old": {
                    "('org.apache.parquet#CorruptStatistics', 'shouldIgnoreStatistics(String,PrimitiveTypeName)')": [
                        67,
                        72
                    ]
                },
                "new": {
                    "('org.apache.parquet#CorruptStatistics', 'shouldIgnoreStatistics(String,PrimitiveTypeName)')": [
                        67,
                        72
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/impl/ColumnReadStoreImpl.java": {
                "old": {
                    "('org.apache.parquet.column.impl#ColumnReadStoreImpl', None)": [
                        48,
                        52
                    ],
                    "('org.apache.parquet.column.impl#ColumnReadStoreImpl', 'newMemColumnReader(ColumnDescriptor,PageReader)')": [
                        66
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ],
                    "('org.apache.parquet.column.impl#ColumnReadStoreImpl', None)": [
                        49,
                        52,
                        56,
                        57,
                        58,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.parquet.column.impl#ColumnReadStoreImpl', 'newMemColumnReader(ColumnDescriptor,PageReader)')": [
                        82
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/impl/ColumnReaderImpl.java": {
                "old": {
                    "('org.apache.parquet.column.impl#ColumnReaderImpl', None)": [
                        330
                    ],
                    "('org.apache.parquet.column.impl#ColumnReaderImpl', 'readValue')": [
                        463,
                        464,
                        465
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        33,
                        45
                    ],
                    "('org.apache.parquet.column.impl#ColumnReaderImpl', None)": [
                        136,
                        145,
                        335,
                        339
                    ],
                    "('org.apache.parquet.column.impl#ColumnReaderImpl', 'readValue')": [
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489
                    ],
                    "('org.apache.parquet.column.impl#ColumnReaderImpl', 'initDataReader(Encoding,byte,int,int)')": [
                        552,
                        553,
                        554,
                        557,
                        576,
                        577,
                        578,
                        579,
                        580,
                        581
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/values/deltastrings/DeltaByteArrayReader.java": {
                "old": {
                    "('org.apache.parquet.column.values.deltastrings#DeltaByteArrayReader', None)": [
                        34
                    ],
                    "('org.apache.parquet.column.values.deltastrings#DeltaByteArrayReader', 'readBytes')": [
                        66
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        97,
                        98
                    ],
                    "('org.apache.parquet.column.values.deltastrings#DeltaByteArrayReader', None)": [
                        35,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93
                    ],
                    "('org.apache.parquet.column.values.deltastrings#DeltaByteArrayReader', 'readBytes')": [
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73
                    ],
                    "('org.apache.parquet.column.values.deltastrings#DeltaByteArrayReader', 'setPreviousReader(ValuesReader)')": [
                        94,
                        95,
                        96
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/io/ColumnIOFactory.java": {
                "old": {
                    "('org.apache.parquet.io#ColumnIOFactory', None)": [
                        38,
                        48,
                        49,
                        50,
                        51,
                        53,
                        61,
                        121,
                        133,
                        142
                    ],
                    "('org.apache.parquet.io#ColumnIOFactory', 'getColumnIO(MessageType,MessageType,boolean)')": [
                        148
                    ]
                },
                "new": {
                    "('org.apache.parquet.io#ColumnIOFactory', None)": [
                        38,
                        45,
                        50,
                        53,
                        59,
                        113,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        144,
                        149,
                        158
                    ],
                    "('org.apache.parquet.io#ColumnIOFactory', 'getColumnIO(MessageType,MessageType,boolean)')": [
                        164
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/io/MessageColumnIO.java": {
                "old": {
                    "('org.apache.parquet.io#MessageColumnIO', None)": [
                        63,
                        64
                    ],
                    "('org.apache.parquet.io#MessageColumnIO', 'getRecordReader(PageReadStore,RecordMaterializer,Filter)')": [
                        116,
                        125,
                        129,
                        138
                    ]
                },
                "new": {
                    "('org.apache.parquet.io#MessageColumnIO', None)": [
                        63,
                        64,
                        65,
                        68
                    ],
                    "('org.apache.parquet.io#MessageColumnIO', 'getRecordReader(PageReadStore,RecordMaterializer,Filter)')": [
                        118,
                        127,
                        139
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/impl/TestColumnReaderImpl.java": {
                "old": {
                    "('org.apache.parquet.column.impl#TestColumnReaderImpl', 'test')": [
                        55,
                        79
                    ],
                    "('org.apache.parquet.column.impl#TestColumnReaderImpl', 'testOptional')": [
                        90,
                        114
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27
                    ],
                    "('org.apache.parquet.column.impl#TestColumnReaderImpl', 'test')": [
                        57,
                        81
                    ],
                    "('org.apache.parquet.column.impl#TestColumnReaderImpl', 'testOptional')": [
                        92,
                        116
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/column/mem/TestMemColumn.java": {
                "old": {
                    "('org.apache.parquet.column.mem#TestMemColumn', 'getColumnReader(MemPageStore,ColumnDescriptor,MessageType)')": [
                        70
                    ]
                },
                "new": {
                    "('org.apache.parquet.column.mem#TestMemColumn', 'getColumnReader(MemPageStore,ColumnDescriptor,MessageType)')": [
                        70,
                        71
                    ]
                }
            },
            "parquet-common/src/main/java/org/apache/parquet/SemanticVersion.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.parquet#SemanticVersion', 'parse(String)')": [
                        74
                    ],
                    "('org.apache.parquet#SemanticVersion', 'compareTo(SemanticVersion)')": [
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        30
                    ],
                    "('org.apache.parquet#SemanticVersion', None)": [
                        40,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61
                    ],
                    "('org.apache.parquet#SemanticVersion', 'parse(String)')": [
                        74,
                        80,
                        81,
                        82,
                        92
                    ],
                    "('org.apache.parquet#SemanticVersion', 'compareTo(SemanticVersion)')": [
                        109,
                        110,
                        111,
                        112,
                        113,
                        114
                    ]
                }
            },
            "parquet-common/src/main/java/org/apache/parquet/VersionParser.java": {
                "old": {
                    "('org.apache.parquet#VersionParser', None)": [
                        38,
                        41,
                        44,
                        58,
                        66,
                        75
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.parquet#VersionParser', None)": [
                        39,
                        42,
                        43,
                        44,
                        45,
                        48,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        85,
                        93,
                        102
                    ]
                }
            },
            "parquet-common/src/test/java/org/apache/parquet/SemanticVersionTest.java": {
                "old": {
                    "('org.apache.parquet#SemanticVersionTest', 'testParse')": [
                        49,
                        50,
                        51
                    ]
                },
                "new": {
                    "('org.apache.parquet#SemanticVersionTest', 'testCompare')": [
                        44,
                        45,
                        46,
                        47
                    ],
                    "('org.apache.parquet#SemanticVersionTest', 'testParse')": [
                        53,
                        54,
                        55
                    ]
                }
            },
            "parquet-common/src/test/java/org/apache/parquet/VersionTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        29,
                        30
                    ],
                    "('org.apache.parquet#VersionTest', 'testFullVersion')": [
                        58,
                        59
                    ]
                },
                "new": {
                    "('org.apache.parquet#VersionTest', 'testFullVersion')": [
                        53,
                        54
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/InternalParquetRecordReader.java": {
                "old": {
                    "('org.apache.parquet.hadoop#InternalParquetRecordReader', None)": [
                        60
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#InternalParquetRecordReader', None)": [
                        60
                    ],
                    "('org.apache.parquet.hadoop#InternalParquetRecordReader', 'initialize(MessageType,FileMetaData,Path,List,Configuration)')": [
                        174
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetInputFormat.java": {
                "new": {
                    "('org.apache.parquet.hadoop#ParquetInputFormat', None)": [
                        123,
                        124,
                        125,
                        126,
                        127,
                        286,
                        287,
                        288
                    ],
                    "('org.apache.parquet.hadoop#ParquetInputFormat', 'isSplitable(JobContext,Path)')": [
                        289,
                        290
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetRecordReader.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        44,
                        46,
                        52,
                        53,
                        57
                    ],
                    "('org.apache.parquet.hadoop#ParquetRecordReader', 'initializeInternalReader(ParquetInputSplit,Configuration)')": [
                        195,
                        196,
                        197
                    ],
                    "('org.apache.parquet.hadoop#ParquetRecordReader', None)": [
                        201,
                        202,
                        215,
                        216,
                        217
                    ],
                    "('org.apache.parquet.hadoop#ParquetRecordReader', 'checkDeltaByteArrayProblem(FileMetaData,Configuration,BlockMetaData)')": [
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/hadoop/TestParquetFileWriter.java": {
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        31,
                        57
                    ],
                    "('org.apache.parquet.hadoop#TestParquetFileWriter', 'testWriteReadStatistics')": [
                        446,
                        447,
                        448
                    ],
                    "('org.apache.parquet.hadoop#TestParquetFileWriter', 'testWriteReadStatisticsAllNulls')": [
                        579,
                        580,
                        581
                    ]
                }
            },
            "parquet-tools/src/main/java/org/apache/parquet/tools/command/DumpCommand.java": {
                "old": {
                    "('org.apache.parquet.tools.command#DumpCommand', 'dump(PrettyPrintWriter,ParquetMetadata,MessageType,Path,boolean,boolean,Set)')": [
                        219
                    ]
                },
                "new": {
                    "('org.apache.parquet.tools.command#DumpCommand', 'dump(PrettyPrintWriter,ParquetMetadata,MessageType,Path,boolean,boolean,Set)')": [
                        219,
                        220,
                        221
                    ]
                }
            }
        }
    },
    "f4e754e66e3661274df624bc328991cd88dd03d6": {
        "authored_data": "2015 Jul 03 17:53",
        "commit.message": "PARQUET-324: row count incorrect if data file has more than 2^31 rows\n\nNeed to change numRows counter from int to long to account for input files with more than 2^31 rows.\n\nAuthor: Thomas Friedrich <tfriedr@us.ibm.com>\n\nCloses #233 from tfriedr/parquet-324 and squashes the following commits:\n\n0120205 [Thomas Friedrich] change numRows from int to long\n",
        "commit.author.name": "Thomas Friedrich",
        "pcid": "013b445ede8d9e7aad4915859d0c869b9b712f8d",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/format/converter/ParquetMetadataConverter.java": {
                "old": {
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'toParquetMetadata(int,ParquetMetadata)')": [
                        92
                    ]
                },
                "new": {
                    "('org.apache.parquet.format.converter#ParquetMetadataConverter', 'toParquetMetadata(int,ParquetMetadata)')": [
                        92
                    ]
                }
            }
        }
    },
    "013b445ede8d9e7aad4915859d0c869b9b712f8d": {
        "authored_data": "2015 Jul 03 17:51",
        "commit.message": "PARQUET-152: Add validation on Encoding.DELTA_BYTE_ARRAY to allow FIX\u2026\n\nPARQUET-152: Add validation on Encoding.DELTA_BYTE_ARRAY to allow FIXED_LEN_BYTE_ARRAY types.\n\n  * FIXED_LEN_BYTE_ARRAY types are binary values that may use DELTA_BYTE_ARRAY encoding,\n    so they should be allowed to be decoded using the same DELTA_BYTE_ARRAY encoding.\n\n@rdblue @nezihyigitbasi  Could you review this fix?\n\nI executed a test by writing a file that fall backs to DELTA_BYTE_ARRAY encoding, then read the file, and compare the read values with the written values, and it worked fine.\n\nAuthor: Sergio Pena <sergio.pena@cloudera.com>\n\nCloses #225 from spena/parquet-152 and squashes the following commits:\n\n93fa03e [Sergio Pena] PARQUET-152: Add validation on Encoding.DELTA_BYTE_ARRAY to allow FIXED_LEN_BYTE_ARRAY types.\n",
        "commit.author.name": "Sergio Pena",
        "pcid": "c334a1bca8338c92e76f0f1cf2ef4884e3eb5dbd",
        "changes": {
            "parquet-column/src/main/java/org/apache/parquet/column/Encoding.java": {
                "old": {
                    "(None, None)": [
                        195,
                        196
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        196,
                        197
                    ]
                }
            }
        }
    },
    "c334a1bca8338c92e76f0f1cf2ef4884e3eb5dbd": {
        "authored_data": "2015 Jul 02 00:30",
        "commit.message": "PARQUET-290: Add data model to Avro reader builder\n\nThis PR currently includes #203, which will be removed when it is merged.\n\nAuthor: Ryan Blue <blue@apache.org>\n\nCloses #204 from rdblue/PARQUET-290-data-model-builder and squashes the following commits:\n\nd257a2c [Ryan Blue] PARQUET-290: Add Avro data model to reader builder.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "2f2c8b1cc6e6e731f7bc52b0988ea8316f475004",
        "changes": {
            "parquet-avro/src/main/java/org/apache/parquet/avro/AvroParquetReader.java": {
                "old": {
                    "('org.apache.parquet.avro#AvroParquetReader', 'builder(Path)')": [
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        30,
                        113,
                        114
                    ],
                    "('org.apache.parquet.avro#AvroParquetReader', 'builder(Path)')": [
                        38
                    ],
                    "('org.apache.parquet.avro#AvroParquetReader', None)": [
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112
                    ]
                }
            },
            "parquet-avro/src/main/java/org/apache/parquet/avro/AvroReadSupport.java": {
                "old": {
                    "('org.apache.parquet.avro#AvroReadSupport', 'getDataModel(Configuration)')": [
                        133
                    ]
                },
                "new": {
                    "('org.apache.parquet.avro#AvroReadSupport', None)": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ],
                    "('org.apache.parquet.avro#AvroReadSupport', 'getDataModel(Configuration)')": [
                        142,
                        143,
                        144,
                        145
                    ]
                }
            },
            "parquet-avro/src/main/java/org/apache/parquet/avro/SpecificDataSupplier.java": {
                "old": {
                    "('org.apache.parquet.avro#SpecificDataSupplier', None)": [
                        24
                    ]
                },
                "new": {
                    "('org.apache.parquet.avro#SpecificDataSupplier', None)": [
                        24
                    ]
                }
            }
        }
    },
    "2f2c8b1cc6e6e731f7bc52b0988ea8316f475004": {
        "authored_data": "2015 Jul 02 00:18",
        "commit.message": "PARQUET-289: Allow ParquetReader.Builder subclasses.\n\nThis adds a protected constructor for subclasses, a getReadSupport\nmethod for subclasses to override, and exposes the configuration for\nsubclasses to modify inside of getReadSupport.\n\nAuthor: Ryan Blue <blue@apache.org>\n\nCloses #203 from rdblue/PARQUET-289-extend-reader-builder and squashes the following commits:\n\n692f159 [Ryan Blue] PARQUET-289: Allow ParquetReader.Builder subclasses.\n",
        "commit.author.name": "Ryan Blue",
        "pcid": "a747456bfe077da467ff036172968a37f3b1e893",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetReader.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ParquetReader', None)": [
                        171,
                        192
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.parquet.hadoop#ParquetReader', None)": [
                        173,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        207
                    ]
                }
            }
        }
    }
}