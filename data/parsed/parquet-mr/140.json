{
    "89c5c25d44f8959d1a66493c06630ab0060cf346": {
        "authored_data": "2020 Nov 12 16:05",
        "commit.message": "PARQUET-1915: Add nullify column (#819)\n\n",
        "commit.author.name": "Xinli Shang",
        "pcid": "d291d05f1c9e3ee5ab87403d94cf13a5ab9cb04d",
        "changes": {
            "parquet-cli/src/main/java/org/apache/parquet/cli/Main.java": {
                "new": {
                    "(None, None)": [
                        31,
                        50
                    ],
                    "('org.apache.parquet.cli#Main', None)": [
                        98
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/ColumnWriter.java": {
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "parquet-column/src/main/java/org/apache/parquet/column/impl/ColumnWriterBase.java": {
                "new": {
                    "(None, None)": [
                        38
                    ]
                }
            },
            "parquet-column/src/test/java/org/apache/parquet/io/TestColumnIO.java": {
                "new": {
                    "(None, None)": [
                        41
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ColumnChunkPageWriteStore.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ColumnChunkPageWriteStore', None)": [
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        56,
                        60
                    ],
                    "('org.apache.parquet.hadoop#ColumnChunkPageWriteStore', None)": [
                        61
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java": {
                "old": {
                    "('org.apache.parquet.hadoop#ParquetFileWriter', None)": [
                        117
                    ]
                },
                "new": {
                    "('org.apache.parquet.hadoop#ParquetFileWriter', None)": [
                        116,
                        117,
                        1012,
                        1013,
                        1014,
                        1015,
                        1016,
                        1017,
                        1018,
                        1019,
                        1020,
                        1047,
                        1048
                    ],
                    "('org.apache.parquet.hadoop#ParquetFileWriter', 'appendColumnChunk(ColumnDescriptor,SeekableInputStream,ColumnChunkMetaData,BloomFilter,ColumnIndex,OffsetIndex)')": [
                        1021,
                        1022,
                        1023,
                        1024,
                        1025,
                        1026,
                        1027,
                        1028,
                        1029,
                        1030,
                        1031,
                        1032,
                        1033,
                        1034,
                        1035,
                        1036,
                        1037,
                        1038,
                        1039,
                        1040,
                        1041,
                        1042,
                        1043,
                        1044,
                        1045,
                        1046
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/hadoop/util/CompressionConverter.java": {
                "old": {
                    "('org.apache.parquet.hadoop.util#CompressionConverter', 'processBlocks(TransParquetFileReader,ParquetFileWriter,ParquetMetadata,MessageType,String,CompressionCodecName)')": [
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        47,
                        274
                    ],
                    "('org.apache.parquet.hadoop.util#CompressionConverter', 'processBlocks(TransParquetFileReader,ParquetFileWriter,ParquetMetadata,MessageType,String,CompressionCodecName)')": [
                        73
                    ],
                    "('org.apache.parquet.hadoop.util#CompressionConverter', None)": [
                        271,
                        272,
                        273
                    ]
                }
            },
            "parquet-tools/src/main/java/org/apache/parquet/tools/command/PruneColumnsCommand.java": {
                "old": {
                    "('org.apache.parquet.tools.command#PruneColumnsCommand', None)": [
                        51
                    ]
                },
                "new": {
                    "('org.apache.parquet.tools.command#PruneColumnsCommand', None)": [
                        51
                    ]
                }
            },
            "parquet-tools/src/main/java/org/apache/parquet/tools/command/Registry.java": {
                "new": {
                    "('org.apache.parquet.tools.command#Registry', None)": [
                        41
                    ]
                }
            }
        }
    },
    "d291d05f1c9e3ee5ab87403d94cf13a5ab9cb04d": {
        "authored_data": "2020 Nov 12 16:03",
        "commit.message": "PARQUET-1938: Key rotation - option to get KMS details from key material (#842)\n\n",
        "commit.author.name": "andersonm-ibm",
        "pcid": "2908cffca9a91d5a5d12c25755ff4b8bcf51ac89",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/crypto/keytools/FileKeyUnwrapper.java": {
                "old": {
                    "('org.apache.parquet.crypto.keytools#FileKeyUnwrapper', None)": [
                        45
                    ],
                    "('org.apache.parquet.crypto.keytools#FileKeyUnwrapper', 'getDEKandMasterID(KeyMaterial)')": [
                        115,
                        116
                    ],
                    "('org.apache.parquet.crypto.keytools#FileKeyUnwrapper', 'getKmsClientFromConfigOrKeyMaterial(KeyMaterial)')": [
                        146,
                        171
                    ]
                },
                "new": {
                    "('org.apache.parquet.crypto.keytools#FileKeyUnwrapper', None)": [
                        45,
                        173,
                        174
                    ],
                    "('org.apache.parquet.crypto.keytools#FileKeyUnwrapper', 'getDEKandMasterID(KeyMaterial)')": [
                        115,
                        116,
                        124
                    ],
                    "('org.apache.parquet.crypto.keytools#FileKeyUnwrapper', 'getKmsClientFromConfigOrKeyMaterial(KeyMaterial)')": [
                        147,
                        172
                    ],
                    "('org.apache.parquet.crypto.keytools#FileKeyUnwrapper', 'getKmsClientAndDetails')": [
                        175,
                        176
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/crypto/keytools/FileKeyWrapper.java": {
                "old": {
                    "('org.apache.parquet.crypto.keytools#FileKeyWrapper', None)": [
                        58,
                        61,
                        65,
                        66,
                        67,
                        68,
                        69,
                        74,
                        75,
                        76,
                        79
                    ]
                },
                "new": {
                    "('org.apache.parquet.crypto.keytools#FileKeyWrapper', None)": [
                        58,
                        59,
                        62,
                        66,
                        67,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        106,
                        107,
                        108,
                        109
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/crypto/keytools/HadoopFSKeyMaterialStore.java": {
                "old": {
                    "('org.apache.parquet.crypto.keytools#HadoopFSKeyMaterialStore', None)": [
                        37
                    ],
                    "('org.apache.parquet.crypto.keytools#HadoopFSKeyMaterialStore', 'removeMaterial')": [
                        108
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.parquet.crypto.keytools#HadoopFSKeyMaterialStore', 'loadKeyMaterialMap')": [
                        80,
                        81
                    ],
                    "('org.apache.parquet.crypto.keytools#HadoopFSKeyMaterialStore', 'removeMaterial')": [
                        110
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/crypto/keytools/KeyToolkit.java": {
                "old": {
                    "('org.apache.parquet.crypto.keytools#KeyToolkit', 'rotateMasterKeys(String,Configuration)')": [
                        209,
                        240,
                        244
                    ]
                },
                "new": {
                    "('org.apache.parquet.crypto.keytools#KeyToolkit', 'rotateMasterKeys(String,Configuration)')": [
                        209,
                        247,
                        250,
                        251,
                        252
                    ],
                    "('org.apache.parquet.crypto.keytools#KeyToolkit', None)": [
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391
                    ],
                    "(None, None)": [
                        392,
                        393
                    ]
                }
            }
        }
    },
    "2908cffca9a91d5a5d12c25755ff4b8bcf51ac89": {
        "authored_data": "2020 Nov 12 16:03",
        "commit.message": "PARQUET-1939: Fix remote KMS client ambiguity (#841)\n\n",
        "commit.author.name": "ggershinsky",
        "pcid": "f737105ca8cbc750f9bc7585461cf74750aafeb3",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/crypto/keytools/KeyToolkit.java": {
                "old": {
                    "('org.apache.parquet.crypto.keytools#KeyToolkit', None)": [
                        72,
                        73,
                        74,
                        75,
                        76,
                        95
                    ],
                    "('org.apache.parquet.crypto.keytools#KeyToolkit', 'rotateMasterKeys(String,Configuration)')": [
                        219,
                        220,
                        221,
                        222
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/crypto/TestPropertiesDrivenEncryption.java": {
                "old": {
                    "('org.apache.parquet.crypto#TestPropertiesDrivenEncryption', 'getCryptoProperties(TestPropertiesDrivenEncryption)')": [
                        280,
                        286
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.parquet.crypto#TestPropertiesDrivenEncryption', 'getCryptoProperties(TestPropertiesDrivenEncryption)')": [
                        281,
                        282,
                        283,
                        284,
                        285
                    ],
                    "('org.apache.parquet.crypto#TestPropertiesDrivenEncryption', 'testReadEncryptedParquetFiles(Path,List,ExecutorService)')": [
                        408,
                        409,
                        410,
                        411
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/crypto/keytools/mocks/InMemoryKMS.java": {
                "old": {
                    "(None, None)": [
                        29,
                        122
                    ],
                    "('org.apache.parquet.crypto.keytools.mocks#InMemoryKMS', None)": [
                        38,
                        116,
                        117
                    ],
                    "('org.apache.parquet.crypto.keytools.mocks#InMemoryKMS', 'initializeInternal')": [
                        60,
                        62
                    ],
                    "('org.apache.parquet.crypto.keytools.mocks#InMemoryKMS', 'wrapKeyInServer(byte,String)')": [
                        94
                    ],
                    "('org.apache.parquet.crypto.keytools.mocks#InMemoryKMS', 'unwrapKeyInServer(String,String)')": [
                        107
                    ],
                    "('org.apache.parquet.crypto.keytools.mocks#InMemoryKMS', 'getMasterKeyFromServer(String)')": [
                        118,
                        119,
                        120,
                        121
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.parquet.crypto.keytools.mocks#InMemoryKMS', None)": [
                        38
                    ],
                    "('org.apache.parquet.crypto.keytools.mocks#InMemoryKMS', 'initialize(Configuration,String,String,String)')": [
                        60,
                        62
                    ],
                    "('org.apache.parquet.crypto.keytools.mocks#InMemoryKMS', 'wrapKey(byte,String)')": [
                        94
                    ],
                    "('org.apache.parquet.crypto.keytools.mocks#InMemoryKMS', 'unwrapKey(String,String)')": [
                        107
                    ]
                }
            },
            "parquet-hadoop/src/test/java/org/apache/parquet/crypto/keytools/samples/VaultClient.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.parquet.crypto.keytools.samples#VaultClient', None)": [
                        45,
                        102,
                        103,
                        104,
                        154
                    ],
                    "('org.apache.parquet.crypto.keytools.samples#VaultClient', 'initializeInternal')": [
                        60,
                        61,
                        62,
                        63
                    ],
                    "('org.apache.parquet.crypto.keytools.samples#VaultClient', 'wrapKeyInServer(byte,String)')": [
                        85,
                        87,
                        89
                    ],
                    "('org.apache.parquet.crypto.keytools.samples#VaultClient', 'unwrapKeyInServer(String,String)')": [
                        95,
                        98
                    ],
                    "('org.apache.parquet.crypto.keytools.samples#VaultClient', 'getMasterKeyFromServer(String)')": [
                        105,
                        106,
                        107
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        31
                    ],
                    "('org.apache.parquet.crypto.keytools.samples#VaultClient', None)": [
                        46,
                        48,
                        56,
                        57,
                        58,
                        124,
                        125,
                        129,
                        130,
                        131
                    ],
                    "('org.apache.parquet.crypto.keytools.samples#VaultClient', 'initialize(Configuration,String,String,String)')": [
                        65,
                        66,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.parquet.crypto.keytools.samples#VaultClient', 'wrapKey(byte,String)')": [
                        91,
                        92,
                        93,
                        95,
                        97,
                        98
                    ],
                    "('org.apache.parquet.crypto.keytools.samples#VaultClient', 'unwrapKey(String,String)')": [
                        104,
                        105,
                        106,
                        109,
                        110
                    ],
                    "('org.apache.parquet.crypto.keytools.samples#VaultClient', 'checkToken(String)')": [
                        126,
                        127,
                        128
                    ],
                    "('org.apache.parquet.crypto.keytools.samples#VaultClient', 'refreshToken')": [
                        132,
                        133,
                        134
                    ]
                }
            }
        }
    },
    "c6187e8d50a241ff83bb364526658d5ddce34b34": {
        "authored_data": "2020 Nov 12 16:01",
        "commit.message": "PARQUET-1940: KEK length configuration (#838)\n\n",
        "commit.author.name": "ggershinsky",
        "pcid": "1e5242004da1441f8c540ba67e03ca9838881e6e",
        "changes": {
            "parquet-hadoop/src/main/java/org/apache/parquet/crypto/keytools/FileKeyWrapper.java": {
                "old": {
                    "('org.apache.parquet.crypto.keytools#FileKeyWrapper', None)": [
                        38
                    ],
                    "('org.apache.parquet.crypto.keytools#FileKeyWrapper', 'createKeyEncryptionKey(String)')": [
                        146
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.parquet.crypto.keytools#FileKeyWrapper', None)": [
                        39,
                        53,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        92
                    ],
                    "('org.apache.parquet.crypto.keytools#FileKeyWrapper', 'createKeyEncryptionKey(String)')": [
                        155
                    ]
                }
            },
            "parquet-hadoop/src/main/java/org/apache/parquet/crypto/keytools/KeyToolkit.java": {
                "new": {
                    "('org.apache.parquet.crypto.keytools#KeyToolkit', None)": [
                        87,
                        88,
                        89,
                        90,
                        91,
                        98
                    ]
                }
            }
        }
    }
}