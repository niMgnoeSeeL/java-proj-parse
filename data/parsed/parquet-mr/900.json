{
    "f5c3151d057708a7377430b6c51621071656d10e": {
        "authored_data": "2014 Apr 15 11:17",
        "commit.message": "Expose values in SimpleRecord\n\nThis allows for quick'n dirty integration with clojure/pigpen in local mode, without the hassle of reimplementing file reading.",
        "commit.author.name": "Miguel Ping",
        "pcid": "41df19051825d724626e91425c8e690c04a39998",
        "changes": {
            "parquet-tools/src/main/java/parquet/tools/read/SimpleRecord.java": {
                "new": {
                    "('parquet.tools.read#SimpleRecord', None)": [
                        35,
                        36
                    ],
                    "('parquet.tools.read#SimpleRecord', 'getValues')": [
                        37,
                        38
                    ]
                }
            }
        }
    },
    "9ef1be6697ed432e5de5d5d7aa2f5810e134350a": {
        "authored_data": "2014 Apr 15 01:29",
        "commit.message": "cleanup log messages in tests\n",
        "commit.author.name": "julien",
        "pcid": "de0bfe3a7b9cddf4e949e6ebfd97d9c16bd143fc",
        "changes": {
            "parquet-column/src/test/java/parquet/column/values/bitpacking/TestBitPackingColumn.java": {
                "old": {
                    "('parquet.column.values.bitpacking#TestBitPackingColumn', 'validateEncodeDecode(int,int,String)')": [
                        159,
                        166,
                        167,
                        175
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('parquet.column.values.bitpacking#TestBitPackingColumn', None)": [
                        31
                    ],
                    "('parquet.column.values.bitpacking#TestBitPackingColumn', 'validateEncodeDecode(int,int,String)')": [
                        161,
                        168,
                        169,
                        177
                    ]
                }
            }
        }
    },
    "de0bfe3a7b9cddf4e949e6ebfd97d9c16bd143fc": {
        "authored_data": "2014 Apr 14 23:34",
        "commit.message": "cleanup log messages in tests\n",
        "commit.author.name": "julien",
        "pcid": "ddca03c2754bd67b3aa9f37a5d404814ed79b4bd",
        "changes": {
            "parquet-encoding/src/test/java/parquet/column/values/bitpacking/TestLemireBitPacking.java": {
                "old": {
                    "('parquet.column.values.bitpacking#TestLemireBitPacking', 'generateValues(int)')": [
                        72
                    ],
                    "('parquet.column.values.bitpacking#TestLemireBitPacking', 'testPackUnPackAgainstHandWritten')": [
                        78,
                        79,
                        81,
                        98,
                        107,
                        115
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#TestLemireBitPacking', 'generateValues(int)')": [
                        72
                    ],
                    "('parquet.column.values.bitpacking#TestLemireBitPacking', 'testPackUnPackAgainstHandWritten')": [
                        78,
                        79,
                        81,
                        98,
                        107,
                        115
                    ]
                }
            }
        }
    },
    "ddca03c2754bd67b3aa9f37a5d404814ed79b4bd": {
        "authored_data": "2014 Apr 14 23:01",
        "commit.message": "cleanup log messages in tests\n",
        "commit.author.name": "julien",
        "pcid": "67c1e11364455dfa8b48dcc013398657d080376e",
        "changes": {
            "parquet-encoding/src/test/java/parquet/column/values/bitpacking/TestBitPacking.java": {
                "old": {
                    "('parquet.column.values.bitpacking#TestBitPacking', 'validateEncodeDecode(int,int,String)')": [
                        167,
                        168,
                        176
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('parquet.column.values.bitpacking#TestBitPacking', None)": [
                        32
                    ],
                    "('parquet.column.values.bitpacking#TestBitPacking', 'validateEncodeDecode(int,int,String)')": [
                        169,
                        170,
                        178
                    ]
                }
            },
            "parquet-encoding/src/test/java/parquet/column/values/bitpacking/TestByteBitPacking.java": {
                "old": {
                    "('parquet.column.values.bitpacking#TestByteBitPacking', 'testPackUnPack')": [
                        33,
                        34,
                        36,
                        40
                    ],
                    "('parquet.column.values.bitpacking#TestByteBitPacking', 'packUnpack(BytePacker,int,int)')": [
                        48
                    ],
                    "('parquet.column.values.bitpacking#TestByteBitPacking', 'generateValues(int)')": [
                        57
                    ],
                    "('parquet.column.values.bitpacking#TestByteBitPacking', 'testPackUnPackAgainstHandWritten')": [
                        63,
                        64,
                        66,
                        75,
                        84,
                        92
                    ],
                    "('parquet.column.values.bitpacking#TestByteBitPacking', 'testPackUnPackAgainstLemire')": [
                        100,
                        101,
                        103,
                        130,
                        136,
                        140
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('parquet.column.values.bitpacking#TestByteBitPacking', None)": [
                        31
                    ],
                    "('parquet.column.values.bitpacking#TestByteBitPacking', 'testPackUnPack')": [
                        35,
                        36,
                        38,
                        42
                    ],
                    "('parquet.column.values.bitpacking#TestByteBitPacking', 'packUnpack(BytePacker,int,int)')": [
                        50
                    ],
                    "('parquet.column.values.bitpacking#TestByteBitPacking', 'generateValues(int)')": [
                        59
                    ],
                    "('parquet.column.values.bitpacking#TestByteBitPacking', 'testPackUnPackAgainstHandWritten')": [
                        65,
                        66,
                        68,
                        77,
                        86,
                        94
                    ],
                    "('parquet.column.values.bitpacking#TestByteBitPacking', 'testPackUnPackAgainstLemire')": [
                        102,
                        103,
                        105,
                        132,
                        138,
                        142
                    ]
                }
            },
            "parquet-encoding/src/test/java/parquet/column/values/bitpacking/TestLemireBitPacking.java": {
                "old": {
                    "('parquet.column.values.bitpacking#TestLemireBitPacking', 'testPackUnPack')": [
                        33,
                        34,
                        36,
                        41,
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('parquet.column.values.bitpacking#TestLemireBitPacking', None)": [
                        30
                    ],
                    "('parquet.column.values.bitpacking#TestLemireBitPacking', 'testPackUnPack')": [
                        35,
                        36,
                        38,
                        43,
                        48
                    ]
                }
            }
        }
    },
    "6417baede9f9e9b4cb711d7120ee31499a19b5ea": {
        "authored_data": "2014 Apr 11 00:35",
        "commit.message": "1. upgrade scrooge dep to 3.12.1  2. fix bug when an enum field is optional, scroogeSchemaConverter would fail\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "41df19051825d724626e91425c8e690c04a39998",
        "changes": {
            "parquet-scrooge/src/main/java/parquet/scrooge/ScroogeStructConverter.java": {
                "old": {
                    "('parquet.scrooge#ScroogeStructConverter', 'convertEnumTypeField(ThriftStructField)')": [
                        266,
                        272
                    ]
                },
                "new": {
                    "('parquet.scrooge#ScroogeStructConverter', 'convertEnumTypeField(ThriftStructField)')": [
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        278
                    ]
                }
            },
            "parquet-scrooge/src/test/java/parquet/scrooge/ScroogeStructConverterTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                }
            }
        }
    },
    "67c1e11364455dfa8b48dcc013398657d080376e": {
        "authored_data": "2014 Apr 10 01:35",
        "commit.message": "use own test fixtures\n",
        "commit.author.name": "julien",
        "pcid": "0943978a7e37f960db6ee280096cac8a2e7ee38b",
        "changes": {
            "parquet-thrift/src/test/java/parquet/thrift/pig/TestParquetThriftStorer.java": {
                "old": {
                    "(None, None)": [
                        37,
                        38
                    ],
                    "('parquet.thrift.pig#TestParquetThriftStorer', 'testStorer')": [
                        52,
                        54,
                        58,
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ],
                    "('parquet.thrift.pig#TestParquetThriftStorer', 'testStorer')": [
                        51,
                        53,
                        57,
                        69
                    ]
                }
            }
        }
    },
    "0943978a7e37f960db6ee280096cac8a2e7ee38b": {
        "authored_data": "2014 Apr 09 20:54",
        "commit.message": "headers\n",
        "commit.author.name": "julien",
        "pcid": "a13ae411677847137c93aec573abe6b0601079ff",
        "changes": {
            "parquet-thrift/src/main/java/parquet/thrift/pig/ParquetThriftStorer.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            },
            "parquet-thrift/src/test/java/parquet/thrift/pig/TestParquetThriftStorer.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                }
            }
        }
    },
    "a13ae411677847137c93aec573abe6b0601079ff": {
        "authored_data": "2014 Apr 09 01:57",
        "commit.message": "cleanup\n",
        "commit.author.name": "julien",
        "pcid": "b8149e92dd283d98132319d506248c3204718302",
        "changes": {
            "parquet-thrift/src/main/java/parquet/thrift/pig/ParquetThriftStorer.java": {
                "old": {
                    "(None, None)": [
                        18
                    ],
                    "('parquet.thrift.pig#ParquetThriftStorer', 'putNext(Tuple)')": [
                        64
                    ]
                }
            },
            "parquet-thrift/src/main/java/parquet/thrift/pig/TupleToThriftWriteSupport.java": {
                "old": {
                    "(None, None)": [
                        2,
                        18,
                        19,
                        30,
                        31
                    ],
                    "('parquet.thrift.pig#TupleToThriftWriteSupport', 'init(Configuration)')": [
                        54,
                        55,
                        56,
                        57
                    ]
                },
                "new": {
                    "(None, None)": [
                        2,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34
                    ],
                    "('parquet.thrift.pig#TupleToThriftWriteSupport', None)": [
                        69
                    ]
                }
            }
        }
    }
}