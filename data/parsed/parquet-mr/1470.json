{
    "ebe07c6fb3f3ea3a50511fac4bd71ba683043b73": {
        "authored_data": "2013 Sep 20 15:55",
        "commit.message": "changes as per code review comments\n",
        "commit.author.name": "Aniket Mokashi",
        "pcid": "6da759455251c47813202cfac29056a8e3f6e834",
        "changes": {
            "parquet-pig/src/main/java/parquet/pig/ParquetLoader.java": {
                "old": {
                    "(None, None)": [
                        36,
                        55
                    ],
                    "('parquet.pig#ParquetLoader', 'initSchema(Job)')": [
                        199
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('parquet.pig#ParquetLoader', 'initSchema(Job)')": [
                        198
                    ]
                }
            }
        }
    },
    "e37cd2b70fcc8471451f134e37d2b25a5b36464f": {
        "authored_data": "2013 Sep 20 04:42",
        "commit.message": "Add fixed field to parquet-avro TestSpecificReadWrite.\n",
        "commit.author.name": "David Z. Chen",
        "pcid": "3e02a841bb37f17d6218c23255e254db990846bd",
        "changes": {
            "parquet-avro/src/test/java/parquet/avro/TestSpecificReadWrite.java": {
                "old": {
                    "('parquet.avro#TestSpecificReadWrite', 'getVwPolo')": [
                        143,
                        144
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'getVwPassat')": [
                        160,
                        161
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'getBmwMini')": [
                        176,
                        177
                    ]
                },
                "new": {
                    "('parquet.avro#TestSpecificReadWrite', 'getVwPolo')": [
                        131,
                        137,
                        145
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'getVwPassat')": [
                        150,
                        156,
                        163
                    ],
                    "('parquet.avro#TestSpecificReadWrite', 'getBmwMini')": [
                        168,
                        174,
                        180
                    ]
                }
            }
        }
    },
    "cc59cb82675499870e9b0433c350f01a3522c2c9": {
        "authored_data": "2013 Sep 20 00:54",
        "commit.message": "Use ValuesWriter and ValuesReader specific to FIXED_LEN_BYTE_ARRAY rather than overloading on a FixedBinary class.\n",
        "commit.author.name": "David Z. Chen",
        "pcid": "a48f56f85ab758796ba072b8140fed6f712dd8fb",
        "changes": {
            "parquet-avro/src/main/java/parquet/avro/AvroIndexedRecordConverter.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('parquet.avro#AvroIndexedRecordConverter', None)": [
                        287
                    ]
                },
                "new": {
                    "('parquet.avro#AvroIndexedRecordConverter', None)": [
                        286
                    ]
                }
            },
            "parquet-avro/src/main/java/parquet/avro/AvroWriteSupport.java": {
                "old": {
                    "(None, None)": [
                        33
                    ],
                    "('parquet.avro#AvroWriteSupport', 'writeValue(Type,Schema,Object)')": [
                        203,
                        204
                    ]
                },
                "new": {
                    "('parquet.avro#AvroWriteSupport', 'writeValue(Type,Schema,Object)')": [
                        202
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/ColumnReader.java": {
                "old": {
                    "(None, None)": [
                        18,
                        101,
                        102,
                        103,
                        104,
                        105
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/ColumnWriter.java": {
                "old": {
                    "(None, None)": [
                        19,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/Encoding.java": {
                "old": {
                    "(None, None)": [
                        68,
                        69,
                        70
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/impl/ColumnReaderImpl.java": {
                "old": {
                    "(None, None)": [
                        35
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', None)": [
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        428,
                        429,
                        430,
                        434,
                        435,
                        436,
                        437
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'bind(PrimitiveTypeName)')": [
                        277,
                        278,
                        279,
                        286,
                        287,
                        288,
                        289,
                        290
                    ],
                    "('parquet.column.impl#ColumnReaderImpl', 'getFixedBinary')": [
                        431,
                        432,
                        433
                    ]
                },
                "new": {
                    "('parquet.column.impl#ColumnReaderImpl', 'bind(PrimitiveTypeName)')": [
                        269,
                        270,
                        271,
                        278,
                        279,
                        280,
                        281,
                        282
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/impl/ColumnWriterImpl.java": {
                "old": {
                    "(None, None)": [
                        40
                    ],
                    "('parquet.column.impl#ColumnWriterImpl', 'write(FixedBinary,int,int)')": [
                        211,
                        212,
                        213,
                        214,
                        215,
                        216
                    ],
                    "('parquet.column.impl#ColumnWriterImpl', None)": [
                        217,
                        218,
                        219
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ],
                    "('parquet.column.impl#ColumnWriterImpl', None)": [
                        101,
                        102,
                        103
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/ValuesReader.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('parquet.column.values#ValuesReader', None)": [
                        83,
                        84,
                        87,
                        88,
                        89
                    ],
                    "('parquet.column.values#ValuesReader', 'readFixedBytes')": [
                        85,
                        86
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/ValuesWriter.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('parquet.column.values#ValuesWriter', 'writeFixedBytes(FixedBinary)')": [
                        93,
                        94
                    ],
                    "('parquet.column.values#ValuesWriter', None)": [
                        95,
                        96,
                        97,
                        98,
                        99
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/plain/FixedLenByteArrayPlainValuesReader.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('parquet.column.values.plain#FixedLenByteArrayPlainValuesReader', 'readFixedBytes')": [
                        39,
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('parquet.column.values.plain#FixedLenByteArrayPlainValuesReader', 'readBytes')": [
                        39,
                        43
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/plain/PlainValuesWriter.java": {
                "old": {
                    "(None, None)": [
                        29,
                        30
                    ],
                    "('parquet.column.values.plain#PlainValuesWriter', None)": [
                        51,
                        57,
                        58,
                        59,
                        60
                    ],
                    "('parquet.column.values.plain#PlainValuesWriter', 'writeFixedBytes(FixedBinary)')": [
                        52,
                        53,
                        54,
                        55,
                        56
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/example/data/Group.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('parquet.example.data#Group', 'add(String,FixedBinary)')": [
                        55,
                        56
                    ],
                    "('parquet.example.data#Group', None)": [
                        57,
                        58,
                        77,
                        130,
                        131
                    ],
                    "('parquet.example.data#Group', 'add(int,FixedBinary)')": [
                        78
                    ],
                    "('parquet.example.data#Group', 'append(String,FixedBinary)')": [
                        127,
                        128,
                        129
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/example/data/GroupValueSource.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('parquet.example.data#GroupValueSource', 'getFixedBinary(String,int)')": [
                        48,
                        49
                    ],
                    "('parquet.example.data#GroupValueSource', None)": [
                        50,
                        51,
                        65
                    ],
                    "('parquet.example.data#GroupValueSource', 'getFixedBinary(int,int)')": [
                        64
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/example/data/simple/Primitive.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('parquet.example.data.simple#Primitive', 'getFixedBinary')": [
                        44,
                        45
                    ],
                    "('parquet.example.data.simple#Primitive', None)": [
                        46,
                        47
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/example/data/simple/SimpleGroup.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('parquet.example.data.simple#SimpleGroup', 'getFixedBinary(int,int)')": [
                        140,
                        141
                    ],
                    "('parquet.example.data.simple#SimpleGroup', None)": [
                        142,
                        143,
                        144,
                        172,
                        173,
                        174
                    ],
                    "('parquet.example.data.simple#SimpleGroup', 'add(int,FixedBinary)')": [
                        170,
                        171
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/example/data/simple/convert/SimplePrimitiveConverter.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('parquet.example.data.simple.convert#SimplePrimitiveConverter', None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        48,
                        49
                    ],
                    "('parquet.example.data.simple.convert#SimplePrimitiveConverter', 'addFixedBinary(FixedBinary)')": [
                        46,
                        47
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/MessageColumnIO.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('parquet.io#MessageColumnIO', None)": [
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/RecordConsumerLoggingWrapper.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('parquet.io#RecordConsumerLoggingWrapper', 'addFixedBinary(FixedBinary)')": [
                        120,
                        121,
                        122
                    ],
                    "('parquet.io#RecordConsumerLoggingWrapper', None)": [
                        123,
                        124,
                        125,
                        126,
                        127,
                        128
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/ValidatingRecordConsumer.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('parquet.io#ValidatingRecordConsumer', None)": [
                        179,
                        180,
                        181,
                        182,
                        186
                    ],
                    "('parquet.io#ValidatingRecordConsumer', 'addFixedBinary(FixedBinary)')": [
                        183,
                        184,
                        185
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/api/PrimitiveConverter.java": {
                "old": {
                    "('parquet.io.api#PrimitiveConverter', 'addFixedBinary(FixedBinary)')": [
                        76,
                        77
                    ],
                    "('parquet.io.api#PrimitiveConverter', None)": [
                        78,
                        79,
                        80,
                        81,
                        82
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/io/api/RecordConsumer.java": {
                "old": {
                    "('parquet.io.api#RecordConsumer', None)": [
                        114,
                        115,
                        116,
                        118,
                        119
                    ],
                    "('parquet.io.api#RecordConsumer', 'addFixedBinary(FixedBinary)')": [
                        117
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/ConverterConsumer.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('parquet.io#ConverterConsumer', 'addFixedBinary(FixedBinary)')": [
                        106,
                        107
                    ],
                    "('parquet.io#ConverterConsumer', None)": [
                        108,
                        109,
                        110
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/ExpectationValidatingRecordConsumer.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('parquet.io#ExpectationValidatingRecordConsumer', 'addFixedBinary(FixedBinary)')": [
                        92,
                        93
                    ],
                    "('parquet.io#ExpectationValidatingRecordConsumer', None)": [
                        94,
                        95,
                        96
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/TestColumnIO.java": {
                "old": {
                    "(None, None)": [
                        52
                    ],
                    "('parquet.io#TestColumnIO', None)": [
                        74
                    ],
                    "('parquet.io#TestColumnIO', 'testOneOfEach')": [
                        343,
                        344
                    ],
                    "('parquet.io#TestColumnIO', 'testWriteWithGroupWriter')": [
                        581,
                        582,
                        583,
                        584,
                        585
                    ]
                },
                "new": {
                    "('parquet.io#TestColumnIO', 'testOneOfEach')": [
                        341
                    ]
                }
            }
        }
    },
    "6da759455251c47813202cfac29056a8e3f6e834": {
        "authored_data": "2013 Sep 20 00:07",
        "commit.message": "fix problem with projection pushdown in parquetloader\n",
        "commit.author.name": "Aniket Mokashi",
        "pcid": "108509fc30a01c1e52a9a02f44a00f5be1398622",
        "changes": {
            "parquet-pig/src/main/java/parquet/pig/ParquetLoader.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('parquet.pig#ParquetLoader', 'setLocation(String,Job)')": [
                        98,
                        99,
                        100
                    ],
                    "('parquet.pig#ParquetLoader', 'getSchema(String,Job)')": [
                        189,
                        190,
                        191
                    ],
                    "('parquet.pig#ParquetLoader', None)": [
                        192,
                        193
                    ],
                    "('parquet.pig#ParquetLoader', 'initSchema(Job)')": [
                        194,
                        195,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204
                    ]
                },
                "new": {
                    "(None, None)": [
                        49
                    ],
                    "('parquet.pig#ParquetLoader', None)": [
                        78,
                        188,
                        189,
                        256,
                        260,
                        261,
                        265,
                        266,
                        272,
                        282,
                        283,
                        284
                    ],
                    "('parquet.pig#ParquetLoader', 'setInput(String,Job)')": [
                        106
                    ],
                    "('parquet.pig#ParquetLoader', 'getSchema(String,Job)')": [
                        187
                    ],
                    "('parquet.pig#ParquetLoader', 'initSchema(Job)')": [
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        204,
                        205,
                        206
                    ],
                    "('parquet.pig#ParquetLoader', 'convertToElephantBirdCompatibleSchema(Schema)')": [
                        211,
                        212,
                        213,
                        218
                    ],
                    "('parquet.pig#ParquetLoader', 'getPropertyFromUDFContext(String)')": [
                        257,
                        258,
                        259
                    ],
                    "('parquet.pig#ParquetLoader', 'getFromUDFContext(String)')": [
                        262,
                        263,
                        264
                    ],
                    "('parquet.pig#ParquetLoader', 'storeInUDFContext(String,Object)')": [
                        267,
                        268,
                        269,
                        270,
                        271
                    ],
                    "('parquet.pig#ParquetLoader', 'pushProjection(RequiredFieldList)')": [
                        280
                    ],
                    "('parquet.pig#ParquetLoader', 'setUDFContextSignature(String)')": [
                        285,
                        286
                    ]
                }
            },
            "parquet-pig/src/main/java/parquet/pig/PigSchemaConverter.java": {
                "old": {
                    "('parquet.pig#PigSchemaConverter', 'parsePigSchema(String)')": [
                        61
                    ]
                },
                "new": {
                    "('parquet.pig#PigSchemaConverter', 'parsePigSchema(String)')": [
                        61
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/TestParquetLoader.java": {
                "old": {
                    "('parquet.pig#TestParquetLoader', 'testSchema')": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        23,
                        26,
                        29,
                        30,
                        31,
                        32,
                        34,
                        35,
                        36,
                        37,
                        114,
                        115
                    ],
                    "('parquet.pig#TestParquetLoader', 'testSchema')": [
                        43
                    ],
                    "('parquet.pig#TestParquetLoader', None)": [
                        62,
                        63
                    ],
                    "('parquet.pig#TestParquetLoader', 'testProjectionPushdown')": [
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ]
                }
            }
        }
    },
    "20f3f46cbd9c6fe3e162690802a6696a64ca7232": {
        "authored_data": "2013 Sep 19 18:21",
        "commit.message": "continue renaming\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "1c99a117f1d4860891d4ad04242cf71581ef7137",
        "changes": {
            "parquet-column/src/main/java/parquet/io/RecordReaderImplementation.java": {
                "old": {
                    "('parquet.io#RecordReaderImplementation', None)": [
                        269,
                        271,
                        273,
                        274,
                        275,
                        276,
                        278,
                        279,
                        280,
                        281,
                        283,
                        286,
                        287,
                        288,
                        289,
                        290,
                        292,
                        294,
                        297,
                        298,
                        299,
                        300
                    ]
                },
                "new": {
                    "('parquet.io#RecordReaderImplementation', None)": [
                        270,
                        272,
                        273,
                        274,
                        275,
                        276,
                        278,
                        279,
                        280,
                        281,
                        283,
                        286,
                        287,
                        288,
                        289,
                        290,
                        292,
                        294,
                        297,
                        298,
                        299,
                        300
                    ]
                }
            }
        }
    },
    "310e55170d1cea2846fcdc5ecd56c394b70c799c": {
        "authored_data": "2013 Sep 19 18:10",
        "commit.message": "throw the writeSupportClass as part of the exception message if instantiation fails\n",
        "commit.author.name": "Colin Marc",
        "pcid": "bbf34480888124fd875150e15ac4064067675600",
        "changes": {
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetOutputFormat.java": {
                "old": {
                    "('parquet.hadoop#ParquetOutputFormat', 'getWriteSupport(Configuration)')": [
                        285,
                        288,
                        290
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetOutputFormat', 'getWriteSupport(Configuration)')": [
                        284,
                        285,
                        289,
                        291
                    ]
                }
            }
        }
    },
    "bbf34480888124fd875150e15ac4064067675600": {
        "authored_data": "2013 Sep 19 17:36",
        "commit.message": "add overloaded getFooConfiguration(JobContext) methods to ParquetOutputFormat\n",
        "commit.author.name": "Colin Marc",
        "pcid": "5aa7a682910bd138511aac0191b13fed9716f1e0",
        "changes": {
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetOutputFormat.java": {
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('parquet.hadoop#ParquetOutputFormat', None)": [
                        129,
                        130,
                        133,
                        134,
                        137,
                        138,
                        141,
                        142,
                        145,
                        146,
                        149,
                        150,
                        153,
                        154
                    ],
                    "('parquet.hadoop#ParquetOutputFormat', 'getEnableDictionary(JobContext)')": [
                        131,
                        132
                    ],
                    "('parquet.hadoop#ParquetOutputFormat', 'getBlockSize(JobContext)')": [
                        135,
                        136
                    ],
                    "('parquet.hadoop#ParquetOutputFormat', 'getPageSize(JobContext)')": [
                        139,
                        140
                    ],
                    "('parquet.hadoop#ParquetOutputFormat', 'getCompression(JobContext)')": [
                        143,
                        144
                    ],
                    "('parquet.hadoop#ParquetOutputFormat', 'isCompressionSet(JobContext)')": [
                        147,
                        148
                    ],
                    "('parquet.hadoop#ParquetOutputFormat', 'setValidation(JobContext,boolean)')": [
                        151,
                        152
                    ],
                    "('parquet.hadoop#ParquetOutputFormat', 'getValidation(JobContext)')": [
                        155,
                        156
                    ]
                }
            }
        }
    },
    "1c99a117f1d4860891d4ad04242cf71581ef7137": {
        "authored_data": "2013 Sep 19 18:02",
        "commit.message": "rename variables for readability\n",
        "commit.author.name": "Tianshuo Deng",
        "pcid": "0f9e39b7fc3743ed641c9c28dbc0f0f26493f476",
        "changes": {
            "parquet-column/src/main/java/parquet/io/RecordReaderImplementation.java": {
                "old": {
                    "('parquet.io#RecordReaderImplementation', None)": [
                        231,
                        235,
                        245,
                        247,
                        248,
                        249,
                        251,
                        252,
                        255,
                        256,
                        258,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        270,
                        271,
                        277,
                        278,
                        284,
                        285,
                        286,
                        287,
                        289,
                        290,
                        294,
                        295,
                        296,
                        297,
                        302,
                        320
                    ],
                    "('parquet.io#RecordReaderImplementation', 'read')": [
                        383,
                        410
                    ],
                    "('parquet.io#RecordReaderImplementation', 'getRecordConsumer')": [
                        448
                    ],
                    "('parquet.io#RecordReaderImplementation', 'getColumnReaders')": [
                        453
                    ]
                },
                "new": {
                    "('parquet.io#RecordReaderImplementation', None)": [
                        231,
                        235,
                        245,
                        247,
                        248,
                        249,
                        251,
                        252,
                        255,
                        256,
                        257,
                        259,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        273,
                        274,
                        280,
                        281,
                        287,
                        288,
                        289,
                        290,
                        292,
                        293,
                        297,
                        298,
                        299,
                        300,
                        305,
                        323
                    ],
                    "('parquet.io#RecordReaderImplementation', 'read')": [
                        386,
                        413
                    ],
                    "('parquet.io#RecordReaderImplementation', 'getRecordConsumer')": [
                        451
                    ],
                    "('parquet.io#RecordReaderImplementation', 'getColumnReaders')": [
                        456
                    ]
                }
            }
        }
    }
}