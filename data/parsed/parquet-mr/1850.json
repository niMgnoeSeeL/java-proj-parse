{
    "c4c77ba08da97d4d4da656898a6f82506b240bea": {
        "authored_data": "2013 Jun 18 16:45",
        "commit.message": "add support for ReadSupport specific info in split\n",
        "commit.author.name": "julien",
        "pcid": "7e3ef9febfb49d8ace1715665ba3d7ac640434a0",
        "changes": {
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetInputFormat.java": {
                "old": {
                    "('parquet.hadoop#ParquetInputFormat', None)": [
                        150,
                        151
                    ],
                    "('parquet.hadoop#ParquetInputFormat', 'generateSplits(List,BlockLocation,FileStatus,FileMetaData,Class,String)')": [
                        155,
                        156,
                        157,
                        203
                    ],
                    "('parquet.hadoop#ParquetInputFormat', 'getSplits(Configuration,List)')": [
                        242
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('parquet.hadoop#ParquetInputFormat', None)": [
                        151,
                        152,
                        153
                    ],
                    "('parquet.hadoop#ParquetInputFormat', 'generateSplits(List,BlockLocation,FileStatus,FileMetaData,Class,String,Map)')": [
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        210,
                        211
                    ],
                    "('parquet.hadoop#ParquetInputFormat', 'getSplits(Configuration,List)')": [
                        250,
                        251
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetInputSplit.java": {
                "old": {
                    "('parquet.hadoop#ParquetInputSplit', None)": [
                        83,
                        150
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetInputSplit', None)": [
                        55,
                        75,
                        85,
                        86,
                        95,
                        154,
                        160,
                        161,
                        162,
                        165
                    ],
                    "('parquet.hadoop#ParquetInputSplit', 'getReadSupportMetadata')": [
                        163,
                        164
                    ],
                    "('parquet.hadoop#ParquetInputSplit', 'readFields(DataInput)')": [
                        185
                    ],
                    "('parquet.hadoop#ParquetInputSplit', 'toString')": [
                        214
                    ],
                    "(None, None)": [
                        217
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetReader.java": {
                "old": {
                    "('parquet.hadoop#ParquetReader', None)": [
                        42,
                        51,
                        53,
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        33
                    ],
                    "('parquet.hadoop#ParquetReader', None)": [
                        52,
                        53,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetRecordReader.java": {
                "old": {
                    "('parquet.hadoop#ParquetRecordReader', 'initialize(InputSplit,Configuration)')": [
                        167
                    ]
                },
                "new": {
                    "('parquet.hadoop#ParquetRecordReader', 'initialize(InputSplit,Configuration)')": [
                        167
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/api/ReadSupport.java": {
                "new": {
                    "('parquet.hadoop.api#ReadSupport', None)": [
                        42,
                        44,
                        45,
                        46,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        61,
                        63,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75
                    ]
                }
            },
            "parquet-hadoop/src/test/java/parquet/hadoop/TestInputFormat.java": {
                "old": {
                    "('parquet.hadoop#TestInputFormat', 'testBlocksToSplits')": [
                        54
                    ]
                },
                "new": {
                    "('parquet.hadoop#TestInputFormat', 'testBlocksToSplits')": [
                        54,
                        55,
                        56,
                        64
                    ]
                }
            }
        }
    },
    "c3596a9ddd0093890cc39e49fb15b11996f451ff": {
        "authored_data": "2013 Jun 18 00:44",
        "commit.message": "Add support for 4 byte length written at the beginning of rle columns\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "7e3ef9febfb49d8ace1715665ba3d7ac640434a0",
        "changes": {
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridEncoder.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        33,
                        34
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader.java": {
                "old": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', None)": [
                        18,
                        19,
                        20,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'initFromPage(long,byte,int)')": [
                        32,
                        33,
                        34,
                        35,
                        36,
                        43,
                        45,
                        46,
                        47,
                        48,
                        50,
                        51,
                        52
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'readInteger')": [
                        57,
                        58,
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        8,
                        10
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', None)": [
                        20
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'initFromPage(long,byte,int)')": [
                        38,
                        39,
                        41,
                        43,
                        44
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'readInteger')": [
                        49,
                        50,
                        51,
                        52
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridValuesWriter.java": {
                "old": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesWriter', 'getBytes')": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        3,
                        6,
                        8
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesWriter', None)": [
                        18,
                        22
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesWriter', 'getBytes')": [
                        47,
                        48,
                        49,
                        50
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesWriter', 'reset')": [
                        64
                    ]
                }
            }
        }
    },
    "a2b7a657c51d68bcea32396ed58b3fda77ba0e17": {
        "authored_data": "2013 Jun 17 20:50",
        "commit.message": "when there is more than one row group the converter will get multiple dictionaries set\n",
        "commit.author.name": "julien",
        "pcid": "7e3ef9febfb49d8ace1715665ba3d7ac640434a0",
        "changes": {
            "parquet-pig/src/main/java/parquet/pig/convert/TupleConverter.java": {
                "old": {
                    "('parquet.pig.convert#TupleConverter', None)": [
                        216,
                        217,
                        218
                    ]
                }
            }
        }
    },
    "c773446264808dc0fc50a495cfb24f8e4c6140d0": {
        "authored_data": "2013 Jun 17 18:13",
        "commit.message": "ability to read version number from parquet jar Version utility\n",
        "commit.author.name": "Aniket Mokashi",
        "pcid": "7e3ef9febfb49d8ace1715665ba3d7ac640434a0",
        "changes": {
            "parquet-column/src/main/java/parquet/Version.java": {
                "old": {
                    "('parquet#Version', None)": [
                        34,
                        35,
                        60
                    ],
                    "('parquet#Version', 'readVersion')": [
                        61,
                        63,
                        82
                    ]
                },
                "new": {
                    "('parquet#Version', None)": [
                        34,
                        35,
                        36,
                        61,
                        78,
                        79
                    ],
                    "('parquet#Version', 'readVersionNumber')": [
                        62,
                        73,
                        74,
                        75,
                        76,
                        77
                    ],
                    "('parquet#Version', 'readFullVersion')": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        94
                    ]
                }
            }
        }
    },
    "1d13a61a1eec58e105defaa0731281f6aa8a7107": {
        "authored_data": "2013 Jun 06 20:32",
        "commit.message": "create and use checkedCast()\n",
        "commit.author.name": "Alex Levenson",
        "pcid": "3ff63fd2f9de8dd0f4cfa68b7a7e40195f230a5d",
        "changes": {
            "parquet-column/src/main/java/parquet/column/values/rle/RunLengthBitPackingHybridValuesReader.java": {
                "old": {
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'initFromPage(long,byte,int)')": [
                        29,
                        30,
                        31,
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        6
                    ],
                    "('parquet.column.values.rle#RunLengthBitPackingHybridValuesReader', 'initFromPage(long,byte,int)')": [
                        30
                    ]
                }
            }
        }
    },
    "6e6516622b26450d2030442c9a794e3d021e262f": {
        "authored_data": "2013 Jun 06 09:42",
        "commit.message": "fix bit packing encoding bug\n",
        "commit.author.name": "julien",
        "pcid": "e70652e22cedab7440b477970fffb058fd888d5a",
        "changes": {
            "parquet-column/src/main/java/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder.java": {
                "old": {
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', None)": [
                        39,
                        40
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', 'writeInt(int)')": [
                        72
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', 'initPackedSlab')": [
                        87
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', 'toBytes')": [
                        98
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', 'getAllocatedSize')": [
                        119
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', None)": [
                        43,
                        56,
                        57
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', 'writeInt(int)')": [
                        73
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', 'initPackedSlab')": [
                        88
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', 'toBytes')": [
                        99
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', 'getAllocatedSize')": [
                        120
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/dictionary/DictionaryValuesReader.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/dictionary/DictionaryValuesWriter.java": {
                "old": {
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', 'getBytes')": [
                        165
                    ]
                },
                "new": {
                    "('parquet.column.values.dictionary#DictionaryValuesWriter', 'getBytes')": [
                        165
                    ]
                }
            }
        }
    }
}