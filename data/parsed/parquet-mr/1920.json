{
    "e1aa79849714d189727155ad9937436b66595256": {
        "authored_data": "2013 May 10 22:07",
        "commit.message": "improve memory consumption in write\n",
        "commit.author.name": "julien",
        "pcid": "f0c42cac547243950fb1a47f8bdf9c5aefd69fbb",
        "changes": {
            "parquet-column/src/main/java/parquet/bytes/BytesInput.java": {
                "old": {
                    "('parquet.bytes#BytesInput', 'from(ByteArrayOutputStream)')": [
                        95,
                        96
                    ]
                },
                "new": {
                    "('parquet.bytes#BytesInput', 'from(CapacityByteArrayOutputStream)')": [
                        95,
                        96
                    ],
                    "('parquet.bytes#BytesInput', None)": [
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275
                    ],
                    "('parquet.bytes#BytesInput', 'from(ByteArrayOutputStream)')": [
                        103,
                        104
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/bytes/CapacityByteArrayOutputStream.java": {
                "old": {
                    "(None, None)": [
                        18,
                        21
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', None)": [
                        26,
                        29
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'getCapacity')": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        26,
                        176
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', None)": [
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        43,
                        44,
                        45,
                        56,
                        57,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        168,
                        169,
                        172,
                        173
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'initSlabs(int)')": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'addSlab')": [
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'write(int)')": [
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'write(byte,int,int)')": [
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'writeTo(OutputStream)')": [
                        128,
                        129,
                        130,
                        131,
                        132,
                        133
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'getCapacity')": [
                        141
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'reset')": [
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'size')": [
                        170,
                        171
                    ],
                    "('parquet.bytes#CapacityByteArrayOutputStream', 'memUsageString(String)')": [
                        174,
                        175
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/impl/ColumnWriteStoreImpl.java": {
                "old": {
                    "('parquet.column.impl#ColumnWriteStoreImpl', None)": [
                        37
                    ],
                    "('parquet.column.impl#ColumnWriteStoreImpl', 'newMemColumn(ColumnDescriptor)')": [
                        54
                    ]
                },
                "new": {
                    "('parquet.column.impl#ColumnWriteStoreImpl', None)": [
                        36,
                        38,
                        42
                    ],
                    "('parquet.column.impl#ColumnWriteStoreImpl', 'newMemColumn(ColumnDescriptor)')": [
                        56
                    ],
                    "('parquet.column.impl#ColumnWriteStoreImpl', 'memUsageString')": [
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112
                    ],
                    "(None, None)": [
                        113,
                        114
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/impl/ColumnWriterImpl.java": {
                "old": {
                    "('parquet.column.impl#ColumnWriterImpl', None)": [
                        46,
                        54,
                        57
                    ],
                    "('parquet.column.impl#ColumnWriterImpl', 'accountForValueWritten')": [
                        67,
                        68,
                        69,
                        70,
                        71
                    ]
                },
                "new": {
                    "('parquet.column.impl#ColumnWriterImpl', None)": [
                        45,
                        47,
                        51,
                        56,
                        59,
                        80,
                        185
                    ],
                    "('parquet.column.impl#ColumnWriterImpl', 'accountForValueWritten')": [
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ],
                    "('parquet.column.impl#ColumnWriterImpl', 'memUsageString(String)')": [
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194
                    ],
                    "(None, None)": [
                        195
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/page/PageWriter.java": {
                "new": {
                    "(None, None)": [
                        54,
                        55
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/ValuesWriter.java": {
                "new": {
                    "('parquet.column.values#ValuesWriter', 'memUsageString(String)')": [
                        109
                    ],
                    "(None, None)": [
                        110
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/bitpacking/BitPackingValuesWriter.java": {
                "old": {
                    "('parquet.column.values.bitpacking#BitPackingValuesWriter', None)": [
                        39,
                        40,
                        48,
                        50
                    ],
                    "(None, None)": [
                        118
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#BitPackingValuesWriter', None)": [
                        46,
                        48,
                        114,
                        115,
                        116
                    ],
                    "('parquet.column.values.bitpacking#BitPackingValuesWriter', 'memUsageString(String)')": [
                        112,
                        113
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/bitpacking/ByteBasedBitPackingEncoder.java": {
                "old": {
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', None)": [
                        37
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', None)": [
                        37
                    ],
                    "('parquet.column.values.bitpacking#ByteBasedBitPackingEncoder', 'memUsageString(String)')": [
                        117,
                        118
                    ],
                    "(None, None)": [
                        119,
                        120
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/bitpacking/ByteBitPackingValuesWriter.java": {
                "new": {
                    "('parquet.column.values.bitpacking#ByteBitPackingValuesWriter', None)": [
                        76
                    ],
                    "('parquet.column.values.bitpacking#ByteBitPackingValuesWriter', 'memUsageString(String)')": [
                        77,
                        78
                    ],
                    "(None, None)": [
                        79,
                        80
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/boundedint/BitWriter.java": {
                "old": {
                    "('parquet.column.values.boundedint#BitWriter', None)": [
                        25
                    ],
                    "('parquet.column.values.boundedint#BitWriter', 'finish')": [
                        92,
                        99,
                        101
                    ],
                    "('parquet.column.values.boundedint#BitWriter', 'getMemSize')": [
                        142
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        155
                    ],
                    "('parquet.column.values.boundedint#BitWriter', None)": [
                        26,
                        39,
                        40,
                        41,
                        42,
                        152
                    ],
                    "('parquet.column.values.boundedint#BitWriter', 'finish')": [
                        97,
                        105
                    ],
                    "('parquet.column.values.boundedint#BitWriter', 'getMemSize')": [
                        146
                    ],
                    "('parquet.column.values.boundedint#BitWriter', 'memUsageString(String)')": [
                        153,
                        154
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/boundedint/BoundedIntValuesFactory.java": {
                "old": {
                    "('parquet.column.values.boundedint#BoundedIntValuesFactory', 'getBoundedWriter(int)')": [
                        26,
                        27
                    ]
                },
                "new": {
                    "('parquet.column.values.boundedint#BoundedIntValuesFactory', 'getBoundedWriter(int,int)')": [
                        26,
                        27
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/boundedint/BoundedIntValuesWriter.java": {
                "old": {
                    "('parquet.column.values.boundedint#BoundedIntValuesWriter', None)": [
                        47,
                        59
                    ],
                    "('parquet.column.values.boundedint#BoundedIntValuesWriter', 'getBytes')": [
                        81,
                        82,
                        86
                    ]
                },
                "new": {
                    "('parquet.column.values.boundedint#BoundedIntValuesWriter', None)": [
                        47,
                        59,
                        63,
                        151
                    ],
                    "('parquet.column.values.boundedint#BoundedIntValuesWriter', 'getBytes')": [
                        82,
                        83,
                        87
                    ],
                    "('parquet.column.values.boundedint#BoundedIntValuesWriter', 'memUsageString(String)')": [
                        152,
                        153
                    ],
                    "(None, None)": [
                        154,
                        155
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/boundedint/DevNullValuesWriter.java": {
                "new": {
                    "('parquet.column.values.boundedint#DevNullValuesWriter', None)": [
                        81,
                        82
                    ],
                    "('parquet.column.values.boundedint#DevNullValuesWriter', 'memUsageString(String)')": [
                        83,
                        84
                    ],
                    "(None, None)": [
                        85
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/plain/BooleanPlainValuesWriter.java": {
                "new": {
                    "('parquet.column.values.plain#BooleanPlainValuesWriter', None)": [
                        90
                    ],
                    "('parquet.column.values.plain#BooleanPlainValuesWriter', 'memUsageString(String)')": [
                        91,
                        92
                    ],
                    "(None, None)": [
                        93,
                        94
                    ]
                }
            },
            "parquet-column/src/main/java/parquet/column/values/plain/PlainValuesWriter.java": {
                "new": {
                    "('parquet.column.values.plain#PlainValuesWriter', None)": [
                        136
                    ],
                    "('parquet.column.values.plain#PlainValuesWriter', 'memUsageString(String)')": [
                        137,
                        138
                    ],
                    "(None, None)": [
                        139,
                        140
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/mem/TestMemColumn.java": {
                "old": {
                    "('parquet.column.mem#TestMemColumn', 'testMemColumn')": [
                        42
                    ],
                    "('parquet.column.mem#TestMemColumn', 'testMemColumnBinary')": [
                        68
                    ],
                    "('parquet.column.mem#TestMemColumn', 'testMemColumnSeveralPages')": [
                        89
                    ],
                    "('parquet.column.mem#TestMemColumn', 'testMemColumnSeveralPagesRepeated')": [
                        112
                    ]
                },
                "new": {
                    "('parquet.column.mem#TestMemColumn', 'testMemColumn')": [
                        42
                    ],
                    "('parquet.column.mem#TestMemColumn', 'testMemColumnBinary')": [
                        68
                    ],
                    "('parquet.column.mem#TestMemColumn', 'testMemColumnSeveralPages')": [
                        89
                    ],
                    "('parquet.column.mem#TestMemColumn', 'testMemColumnSeveralPagesRepeated')": [
                        112
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/page/mem/MemPageWriter.java": {
                "new": {
                    "('parquet.column.page.mem#MemPageWriter', None)": [
                        71
                    ],
                    "('parquet.column.page.mem#MemPageWriter', 'memUsageString(String)')": [
                        72,
                        73
                    ],
                    "(None, None)": [
                        74,
                        75
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/bitpacking/TestBitPackingColumn.java": {
                "old": {
                    "('parquet.column.values.bitpacking#TestBitPackingColumn', None)": [
                        185
                    ]
                },
                "new": {
                    "('parquet.column.values.bitpacking#TestBitPackingColumn', None)": [
                        185
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/column/values/boundedint/TestBoundedColumns.java": {
                "old": {
                    "('parquet.column.values.boundedint#TestBoundedColumns', 'compareOutput(int,int,String)')": [
                        57
                    ],
                    "('parquet.column.values.boundedint#TestBoundedColumns', 'testSerDe')": [
                        126
                    ]
                },
                "new": {
                    "('parquet.column.values.boundedint#TestBoundedColumns', 'compareOutput(int,int,String)')": [
                        57
                    ],
                    "('parquet.column.values.boundedint#TestBoundedColumns', 'testSerDe')": [
                        126
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/PerfTest.java": {
                "old": {
                    "('parquet.io#PerfTest', 'write(MemPageStore)')": [
                        75
                    ]
                },
                "new": {
                    "('parquet.io#PerfTest', 'write(MemPageStore)')": [
                        75
                    ]
                }
            },
            "parquet-column/src/test/java/parquet/io/TestColumnIO.java": {
                "old": {
                    "('parquet.io#TestColumnIO', 'testColumnIO')": [
                        151
                    ],
                    "('parquet.io#TestColumnIO', 'testSchema(MessageType,List)')": [
                        297
                    ],
                    "('parquet.io#TestColumnIO', 'testPushParser')": [
                        345
                    ],
                    "('parquet.io#TestColumnIO', 'testEmptyField')": [
                        358
                    ]
                },
                "new": {
                    "('parquet.io#TestColumnIO', 'testColumnIO')": [
                        151
                    ],
                    "('parquet.io#TestColumnIO', 'testSchema(MessageType,List)')": [
                        297
                    ],
                    "('parquet.io#TestColumnIO', 'testPushParser')": [
                        345
                    ],
                    "('parquet.io#TestColumnIO', 'testEmptyField')": [
                        358
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetRecordWriter.java": {
                "old": {
                    "('parquet.hadoop#ParquetRecordWriter', 'initStore')": [
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        17,
                        18,
                        19
                    ],
                    "('parquet.hadoop#ParquetRecordWriter', 'initStore')": [
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/GenerateIntTestFile.java": {
                "old": {
                    "('parquet.pig#GenerateIntTestFile', 'main(String)')": [
                        67
                    ]
                },
                "new": {
                    "('parquet.pig#GenerateIntTestFile', 'main(String)')": [
                        67
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/GenerateTPCH.java": {
                "old": {
                    "('parquet.pig#GenerateTPCH', 'main(String)')": [
                        64,
                        85
                    ]
                },
                "new": {
                    "('parquet.pig#GenerateTPCH', 'main(String)')": [
                        64,
                        85,
                        86
                    ]
                }
            },
            "parquet-pig/src/test/java/parquet/pig/TupleConsumerPerfTest.java": {
                "old": {
                    "('parquet.pig#TupleConsumerPerfTest', 'main(String)')": [
                        59
                    ]
                },
                "new": {
                    "('parquet.pig#TupleConsumerPerfTest', 'main(String)')": [
                        59
                    ]
                }
            },
            "parquet-thrift/src/test/java/parquet/thrift/TestParquetReadProtocol.java": {
                "old": {
                    "('parquet.thrift#TestParquetReadProtocol', 'validate(T)')": [
                        145
                    ]
                },
                "new": {
                    "('parquet.thrift#TestParquetReadProtocol', 'validate(T)')": [
                        145
                    ]
                }
            }
        }
    },
    "cd2535980e715b00d43ee47b2aa138167016aed3": {
        "authored_data": "2013 May 09 04:48",
        "commit.message": "add library version to metadata\n",
        "commit.author.name": "julien",
        "pcid": "306868de79ff9d092aeedcbcf0a358f95826675f",
        "changes": {
            "parquet-column/src/main/java/parquet/Version.java": {
                "old": {
                    "(None, None)": [
                        9
                    ],
                    "('parquet#Version', 'readVersion')": [
                        60
                    ]
                },
                "new": {
                    "(None, None)": [
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16
                    ],
                    "('parquet#Version', 'readVersion')": [
                        67
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/format/converter/ParquetMetadataConverter.java": {
                "old": {
                    "('parquet.format.converter#ParquetMetadataConverter', 'fromParquetMetadata(FileMetaData)')": [
                        275
                    ]
                },
                "new": {
                    "('parquet.format.converter#ParquetMetadataConverter', 'toParquetMetadata(int,ParquetMetadata)')": [
                        79,
                        80
                    ],
                    "('parquet.format.converter#ParquetMetadataConverter', 'fromParquetMetadata(FileMetaData)')": [
                        277
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/ParquetFileWriter.java": {
                "old": {
                    "('parquet.hadoop#ParquetFileWriter', 'end(Map)')": [
                        268
                    ],
                    "('parquet.hadoop#ParquetFileWriter', 'mergeInto(FileMetaData,FileMetaData)')": [
                        329
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ],
                    "('parquet.hadoop#ParquetFileWriter', 'end(Map)')": [
                        269
                    ],
                    "('parquet.hadoop#ParquetFileWriter', 'mergeInto(FileMetaData,FileMetaData)')": [
                        330,
                        331
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/metadata/FileMetaData.java": {
                "old": {
                    "('parquet.hadoop.metadata#FileMetaData', None)": [
                        41
                    ]
                },
                "new": {
                    "('parquet.hadoop.metadata#FileMetaData', None)": [
                        37,
                        38,
                        42,
                        44,
                        54,
                        76,
                        77,
                        78
                    ],
                    "('parquet.hadoop.metadata#FileMetaData', 'getCreatedBy')": [
                        79,
                        80
                    ],
                    "(None, None)": [
                        81,
                        82
                    ]
                }
            },
            "parquet-hadoop/src/test/java/parquet/hadoop/TestInputFormat.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('parquet.hadoop#TestInputFormat', 'testBlocksToSplits')": [
                        54
                    ]
                },
                "new": {
                    "('parquet.hadoop#TestInputFormat', 'testBlocksToSplits')": [
                        53
                    ]
                }
            }
        }
    },
    "09a54d6c786d7258cb1baf03f821882058ea62c6": {
        "authored_data": "2013 May 09 01:12",
        "commit.message": "Rolled back one of the public classes\n",
        "commit.author.name": "Uri Laserson",
        "pcid": "647825b5a7b317dfb6d1a6ef61eca87c75e6bfd2",
        "changes": {
            "parquet-hadoop/src/main/java/parquet/hadoop/CodecFactory.java": {
                "old": {
                    "('parquet.hadoop#CodecFactory', None)": [
                        37
                    ]
                },
                "new": {
                    "('parquet.hadoop#CodecFactory', None)": [
                        37
                    ]
                }
            }
        }
    },
    "647825b5a7b317dfb6d1a6ef61eca87c75e6bfd2": {
        "authored_data": "2013 May 08 01:55",
        "commit.message": "Changed two utility classes to public\n\nAvroSchemaConverter\nCodecFactory\n",
        "commit.author.name": "Uri Laserson",
        "pcid": "fae4c56c0526db232d5d4e98f9587c549ed50e27",
        "changes": {
            "parquet-avro/src/main/java/parquet/avro/AvroSchemaConverter.java": {
                "old": {
                    "('parquet.avro#AvroSchemaConverter', None)": [
                        36
                    ]
                },
                "new": {
                    "('parquet.avro#AvroSchemaConverter', None)": [
                        36
                    ]
                }
            },
            "parquet-hadoop/src/main/java/parquet/hadoop/CodecFactory.java": {
                "old": {
                    "('parquet.hadoop#CodecFactory', None)": [
                        37
                    ]
                },
                "new": {
                    "('parquet.hadoop#CodecFactory', None)": [
                        37
                    ]
                }
            }
        }
    }
}