{
    "7c10174f7dea7a439e287c335222a8bc493e774e": {
        "authored_data": "2020 Jun 10 11:26",
        "commit.message": "OPENNLP-1285: Changing Math to StrictMath for Java 8 vs 11 test inconsistencies. (#377)\n\n",
        "commit.author.name": "Jeff Zemerick",
        "pcid": "e4b331d04dcbddea30a76ddcf38f1079f9903861",
        "changes": {
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/cmdline/CLI.java": {
                "old": {
                    "('opennlp.morfologik.cmdline#CLI', 'usage')": [
                        83
                    ]
                },
                "new": {
                    "('opennlp.morfologik.cmdline#CLI', 'usage')": [
                        83
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/CLI.java": {
                "old": {
                    "('opennlp.tools.cmdline#CLI', 'usage')": [
                        206
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#CLI', 'usage')": [
                        206
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/FineGrainedReportListener.java": {
                "old": {
                    "('opennlp.tools.cmdline#FineGrainedReportListener', None)": [
                        726
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#FineGrainedReportListener', None)": [
                        726
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/Dictionary.java": {
                "old": {
                    "('opennlp.tools.dictionary#Dictionary', 'put(StringList)')": [
                        127,
                        128
                    ]
                },
                "new": {
                    "('opennlp.tools.dictionary#Dictionary', 'put(StringList)')": [
                        127,
                        128
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/languagemodel/NGramLanguageModel.java": {
                "old": {
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'calculateProbability(StringList)')": [
                        65,
                        71
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'calculateProbability(String)')": [
                        82,
                        88
                    ]
                },
                "new": {
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'calculateProbability(StringList)')": [
                        65,
                        71
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'calculateProbability(String)')": [
                        82,
                        88
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/DefaultLemmatizerContextGenerator.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerContextGenerator', 'getPrefixes(String)')": [
                        45
                    ],
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerContextGenerator', 'getSuffixes(String)')": [
                        53
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerContextGenerator', 'getPrefixes(String)')": [
                        45
                    ],
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerContextGenerator', 'getSuffixes(String)')": [
                        53
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/ArrayMath.java": {
                "old": {
                    "('opennlp.tools.ml#ArrayMath', 'l1norm(double)')": [
                        46
                    ],
                    "('opennlp.tools.ml#ArrayMath', 'l2norm(double)')": [
                        54
                    ],
                    "('opennlp.tools.ml#ArrayMath', 'logSumOfExps(double)')": [
                        76,
                        78
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#ArrayMath', 'l1norm(double)')": [
                        46
                    ],
                    "('opennlp.tools.ml#ArrayMath', 'l2norm(double)')": [
                        54
                    ],
                    "('opennlp.tools.ml#ArrayMath', 'logSumOfExps(double)')": [
                        76,
                        78
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/BeamSearch.java": {
                "old": {
                    "('opennlp.tools.ml#BeamSearch', 'bestSequences(int,T,Object,double,BeamSearchContextGenerator,SequenceValidator)')": [
                        99,
                        118,
                        152
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#BeamSearch', 'bestSequences(int,T,Object,double,BeamSearchContextGenerator,SequenceValidator)')": [
                        99,
                        118,
                        152
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GISModel.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GISModel', 'eval(Context,float,double,EvalParameters)')": [
                        191
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#GISModel', 'eval(Context,float,double,EvalParameters)')": [
                        191
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GISTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GISTrainer', 'gaussianUpdate(int,int,double)')": [
                        533,
                        540
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'nextIteration(double,CompletionService)')": [
                        626,
                        627
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', None)": [
                        698
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#GISTrainer', 'gaussianUpdate(int,int,double)')": [
                        533,
                        540
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'nextIteration(double,CompletionService)')": [
                        626,
                        627
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', None)": [
                        698
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/NegLogLikelihood.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihood', 'gradientAt(double)')": [
                        140
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihood', 'gradientAt(double)')": [
                        140
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/ParallelNegLogLikelihood.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#ParallelNegLogLikelihood', None)": [
                        240
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.quasinewton#ParallelNegLogLikelihood', None)": [
                        240
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/QNMinimizer.java": {
                "old": {
                    "(None, None)": [
                        39
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizer', 'minimize(Function)')": [
                        282
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizer', 'isConverged(LineSearchResult)')": [
                        378
                    ]
                },
                "new": {
                    "(None, None)": [
                        39
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizer', 'minimize(Function)')": [
                        282
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizer', 'isConverged(LineSearchResult)')": [
                        378
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/QNModel.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNModel', 'eval(String,float,double)')": [
                        83
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNModel', 'eval(int,float,double,int,int,double)')": [
                        120
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNModel', 'eval(String,float,double)')": [
                        83
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNModel', 'eval(int,float,double,int,int,double)')": [
                        120
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/ComparableEvent.java": {
                "old": {
                    "('opennlp.tools.ml.model#ComparableEvent', 'compareTo(ComparableEvent)')": [
                        51
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#ComparableEvent', 'compareTo(ComparableEvent)')": [
                        51
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/ComparablePredicate.java": {
                "old": {
                    "('opennlp.tools.ml.model#ComparablePredicate', 'compareTo(ComparablePredicate)')": [
                        40
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#ComparablePredicate', 'compareTo(ComparablePredicate)')": [
                        40
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/UniformPrior.java": {
                "old": {
                    "('opennlp.tools.ml.model#UniformPrior', 'setLabels(String,String)')": [
                        47
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#UniformPrior', 'setLabels(String,String)')": [
                        47
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/LogProbabilities.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#LogProbabilities', 'normalize')": [
                        116
                    ],
                    "('opennlp.tools.ml.naivebayes#LogProbabilities', 'log(double)')": [
                        136
                    ],
                    "('opennlp.tools.ml.naivebayes#LogProbabilities', 'discardCountsBelow(double)')": [
                        166
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#LogProbabilities', 'normalize')": [
                        116
                    ],
                    "('opennlp.tools.ml.naivebayes#LogProbabilities', 'log(double)')": [
                        136
                    ],
                    "('opennlp.tools.ml.naivebayes#LogProbabilities', 'discardCountsBelow(double)')": [
                        166
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/LogProbability.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#LogProbability', 'set(double)')": [
                        39
                    ],
                    "('opennlp.tools.ml.naivebayes#LogProbability', 'setIfLarger(double)')": [
                        58
                    ],
                    "('opennlp.tools.ml.naivebayes#LogProbability', 'addIn(double)')": [
                        101
                    ],
                    "('opennlp.tools.ml.naivebayes#LogProbability', 'get')": [
                        110
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#LogProbability', 'set(double)')": [
                        39
                    ],
                    "('opennlp.tools.ml.naivebayes#LogProbability', 'setIfLarger(double)')": [
                        58
                    ],
                    "('opennlp.tools.ml.naivebayes#LogProbability', 'addIn(double)')": [
                        101
                    ],
                    "('opennlp.tools.ml.naivebayes#LogProbability', 'get')": [
                        110
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/Probabilities.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#Probabilities', 'setLog(T,double)')": [
                        85
                    ],
                    "('opennlp.tools.ml.naivebayes#Probabilities', 'addIn(T,double,int)')": [
                        100
                    ],
                    "('opennlp.tools.ml.naivebayes#Probabilities', 'getLog(T)')": [
                        124
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#Probabilities', 'setLog(T,double)')": [
                        85
                    ],
                    "('opennlp.tools.ml.naivebayes#Probabilities', 'addIn(T,double,int)')": [
                        100
                    ],
                    "('opennlp.tools.ml.naivebayes#Probabilities', 'getLog(T)')": [
                        124
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/Probability.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#Probability', 'setLog(double)')": [
                        91
                    ],
                    "('opennlp.tools.ml.naivebayes#Probability', 'getLog')": [
                        118
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#Probability', 'setLog(double)')": [
                        91
                    ],
                    "('opennlp.tools.ml.naivebayes#Probability', 'getLog')": [
                        118
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/PerceptronModel.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#PerceptronModel', 'eval(Context,float,double,EvalParameters,boolean)')": [
                        78,
                        79,
                        84
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#PerceptronModel', 'eval(Context,float,double,EvalParameters,boolean)')": [
                        78,
                        79,
                        84
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/PerceptronTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'findParameters(int,boolean)')": [
                        347,
                        348,
                        349
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'isPerfectSquare(int)')": [
                        417
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'findParameters(int,boolean)')": [
                        347,
                        348,
                        349
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'isPerfectSquare(int)')": [
                        417
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/AbstractBottomUpParser.java": {
                "old": {
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'advanceChunks(Parse,double)')": [
                        417
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'advanceTags(Parse)')": [
                        487
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'advanceChunks(Parse,double)')": [
                        417
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'advanceTags(Parse)')": [
                        487
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/Parse.java": {
                "old": {
                    "('opennlp.tools.parser#Parse', 'getTagSequenceProb')": [
                        411
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#Parse', 'getTagSequenceProb')": [
                        411
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/Parser.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#Parser', 'advanceTop(Parse)')": [
                        128,
                        130
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'advanceParses(Parse,double)')": [
                        205,
                        218,
                        252
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#Parser', 'advanceTop(Parse)')": [
                        128,
                        130
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'advanceParses(Parse,double)')": [
                        205,
                        218,
                        252
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/Parser.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#Parser', 'advanceParses(Parse,double)')": [
                        277,
                        285,
                        290,
                        296,
                        301,
                        303,
                        331,
                        390,
                        397,
                        402,
                        408,
                        411
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#Parser', 'advanceParses(Parse,double)')": [
                        277,
                        285,
                        290,
                        296,
                        301,
                        303,
                        331,
                        390,
                        397,
                        402,
                        408,
                        411
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/DefaultPOSContextGenerator.java": {
                "old": {
                    "('opennlp.tools.postag#DefaultPOSContextGenerator', 'getPrefixes(String)')": [
                        73
                    ],
                    "('opennlp.tools.postag#DefaultPOSContextGenerator', 'getSuffixes(String)')": [
                        81
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#DefaultPOSContextGenerator', 'getPrefixes(String)')": [
                        73
                    ],
                    "('opennlp.tools.postag#DefaultPOSContextGenerator', 'getSuffixes(String)')": [
                        81
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/lang/th/SentenceContextGenerator.java": {
                "old": {
                    "('opennlp.tools.sentdetect.lang.th#SentenceContextGenerator', 'collectFeatures(String,String,String,String)')": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect.lang.th#SentenceContextGenerator', 'collectFeatures(String,String,String,String)')": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/Sequence.java": {
                "old": {
                    "('opennlp.tools.util#Sequence', None)": [
                        54
                    ],
                    "('opennlp.tools.util#Sequence', 'equals(Object)')": [
                        81
                    ],
                    "('opennlp.tools.util#Sequence', 'add(String,double)')": [
                        94
                    ]
                },
                "new": {
                    "('opennlp.tools.util#Sequence', None)": [
                        54
                    ],
                    "('opennlp.tools.util#Sequence', 'equals(Object)')": [
                        81
                    ],
                    "('opennlp.tools.util#Sequence', 'add(String,double)')": [
                        94
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/BrownTokenClasses.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#BrownTokenClasses', 'getWordClasses(String,BrownCluster)')": [
                        46,
                        50
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#BrownTokenClasses', 'getWordClasses(String,BrownCluster)')": [
                        46,
                        50
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/PrefixFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#PrefixFeatureGenerator', 'getPrefixes(String)')": [
                        47,
                        51
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#PrefixFeatureGenerator', 'getPrefixes(String)')": [
                        47,
                        51
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/SuffixFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#SuffixFeatureGenerator', 'getSuffixes(String)')": [
                        47,
                        51
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#SuffixFeatureGenerator', 'getSuffixes(String)')": [
                        47,
                        51
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/ArvoresDeitadasEval.java": {
                "old": {
                    "('opennlp.tools.eval#ArvoresDeitadasEval', 'evalPortugueseSentenceDetectorMaxentQn')": [
                        156
                    ]
                },
                "new": {
                    "('opennlp.tools.eval#ArvoresDeitadasEval', 'evalPortugueseSentenceDetectorMaxentQn')": [
                        156
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/Conll02NameFinderEval.java": {
                "old": {
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalSpanishOrganizationMaxentQn')": [
                        422,
                        423,
                        424,
                        425
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalSpanishMiscMaxentQn')": [
                        506
                    ]
                },
                "new": {
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalSpanishOrganizationMaxentQn')": [
                        422,
                        423,
                        424,
                        425
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalSpanishMiscMaxentQn')": [
                        506
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/ConllXPosTaggerEval.java": {
                "old": {
                    "('opennlp.tools.eval#ConllXPosTaggerEval', 'evalSwedishMaxentQn')": [
                        209
                    ]
                },
                "new": {
                    "('opennlp.tools.eval#ConllXPosTaggerEval', 'evalSwedishMaxentQn')": [
                        209
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/SourceForgeModelEval.java": {
                "old": {
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalParserModel')": [
                        413
                    ]
                },
                "new": {
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalParserModel')": [
                        413
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/languagemodel/LanguageModelTestUtils.java": {
                "old": {
                    "('opennlp.tools.languagemodel#LanguageModelTestUtils', 'getPerplexity(LanguageModel,Collection,int)')": [
                        73,
                        78
                    ]
                },
                "new": {
                    "('opennlp.tools.languagemodel#LanguageModelTestUtils', 'getPerplexity(LanguageModel,Collection,int)')": [
                        73,
                        78
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/LineSearchTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', None)": [
                        177,
                        197
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', None)": [
                        177,
                        197
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/NegLogLikelihoodTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'compareDoubleArray(double,double,DataIndexer,double)')": [
                        255
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'compareDoubleArray(double,double,DataIndexer,double)')": [
                        255
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/QNMinimizerTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizerTest', None)": [
                        61,
                        87,
                        93,
                        94
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizerTest', None)": [
                        61,
                        87,
                        93,
                        94
                    ]
                }
            }
        }
    },
    "e4b331d04dcbddea30a76ddcf38f1079f9903861": {
        "authored_data": "2020 Jun 02 11:42",
        "commit.message": "OPENNLP-1305: Disable DTD loading. (#376)\n\n",
        "commit.author.name": "Jeff Zemerick",
        "pcid": "bc13b3dff04137d364cdf38ee73f2b0555960c1a",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/formats/letsmt/LetsmtDocument.java": {
                "new": {
                    "('opennlp.tools.formats.letsmt#LetsmtDocument', 'parse(InputStream)')": [
                        127
                    ]
                }
            }
        }
    },
    "bc13b3dff04137d364cdf38ee73f2b0555960c1a": {
        "authored_data": "2020 May 14 13:22",
        "commit.message": "OPENNLP-1302: add missing param tags (#374)\n\n* add missing param tags\r\n\r\n* OPENNLP-1302: add missing param tags",
        "commit.author.name": "Jongwoo Jeon",
        "pcid": "918f42f63a949df9d4fcf2e7f853c058c14697ac",
        "changes": {
            "opennlp-uima/src/main/java/opennlp/uima/normalizer/Normalizer.java": {
                "new": {
                    "('opennlp.uima.normalizer#Normalizer', None)": [
                        116,
                        150
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/normalizer/StringDictionary.java": {
                "new": {
                    "('opennlp.uima.normalizer#StringDictionary', None)": [
                        53,
                        54,
                        55,
                        56,
                        61,
                        62,
                        63,
                        64,
                        65
                    ]
                }
            }
        }
    }
}