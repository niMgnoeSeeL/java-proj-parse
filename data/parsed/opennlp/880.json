{
    "4eab9ef557d53aa162810caa7a9c45aae83fc009": {
        "authored_data": "2014 Feb 17 10:15",
        "commit.message": "OPENNLP-646 Applied patch to add a getCoveredText method to the SpanAnnotation. And updated AnnotationConfiguration to always use UTF-8 to read in the config file. Thanks to Peter Thygesen for providing a patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1568932 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "8702f36959b66c69a2950b659b83b5bee3a5cfad",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/AnnotationConfiguration.java": {
                "old": {
                    "('opennlp.tools.formats.brat#AnnotationConfiguration', 'parse(InputStream)')": [
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('opennlp.tools.formats.brat#AnnotationConfiguration', 'parse(InputStream)')": [
                        52
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratAnnotationStream.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratAnnotationStream', None)": [
                        78
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratAnnotationStream', None)": [
                        78
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/SpanAnnotation.java": {
                "old": {
                    "('opennlp.tools.formats.brat#SpanAnnotation', None)": [
                        25,
                        26,
                        27,
                        30,
                        36
                    ],
                    "('opennlp.tools.formats.brat#SpanAnnotation', 'getCoveredText')": [
                        37,
                        38
                    ],
                    "('opennlp.tools.formats.brat#SpanAnnotation', 'toString')": [
                        43
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#SpanAnnotation', None)": [
                        25,
                        26,
                        34,
                        35
                    ],
                    "('opennlp.tools.formats.brat#SpanAnnotation', 'getCoveredText(String)')": [
                        36,
                        37
                    ],
                    "('opennlp.tools.formats.brat#SpanAnnotation', 'toString')": [
                        42
                    ]
                }
            }
        }
    },
    "8702f36959b66c69a2950b659b83b5bee3a5cfad": {
        "authored_data": "2014 Feb 13 20:21",
        "commit.message": "OPENNLP-643\nAdded constructor for String, Pattern[] again, for backwards compatibility\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1568030 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Mark Giaconia",
        "pcid": "4a84839e3010a22a23f6614d542c86d2353e32c3",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/namefind/RegexNameFinder.java": {
                "old": {
                    "('opennlp.tools.namefind#RegexNameFinder', 'find(String)')": [
                        66,
                        85
                    ],
                    "('opennlp.tools.namefind#RegexNameFinder', None)": [
                        93,
                        94,
                        95
                    ],
                    "('opennlp.tools.namefind#RegexNameFinder', 'getAnnotations(String)')": [
                        106
                    ],
                    "(None, None)": [
                        130
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#RegexNameFinder', None)": [
                        33,
                        34,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        134,
                        135,
                        185,
                        186,
                        189,
                        190,
                        193,
                        194
                    ],
                    "('opennlp.tools.namefind#RegexNameFinder', 'find(String)')": [
                        92,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ],
                    "('opennlp.tools.namefind#RegexNameFinder', 'getAnnotations(String)')": [
                        146,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        173
                    ],
                    "('opennlp.tools.namefind#RegexNameFinder', 'getmPatterns')": [
                        183,
                        184
                    ],
                    "('opennlp.tools.namefind#RegexNameFinder', 'setmPatterns(Pattern)')": [
                        187,
                        188
                    ],
                    "('opennlp.tools.namefind#RegexNameFinder', 'getsType')": [
                        191,
                        192
                    ],
                    "('opennlp.tools.namefind#RegexNameFinder', 'setsType(String)')": [
                        195,
                        196
                    ],
                    "(None, None)": [
                        197
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/RegexNameFinderFactory.java": {
                "old": {
                    "('opennlp.tools.namefind#RegexNameFinderFactory', None)": [
                        53
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#RegexNameFinderFactory', None)": [
                        53
                    ]
                }
            }
        }
    },
    "8f1c1454d7ea792cb7174bdd079de06e3dc1ed8f": {
        "authored_data": "2014 Feb 13 18:10",
        "commit.message": "OPENNLp-118 Replaced the EventStream with ObjectStream<Event>\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1567990 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "407c3367d621c7215064f82d5aea331e7d753606",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkerEventStream.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkerEventStream', None)": [
                        28,
                        31,
                        32,
                        33,
                        34,
                        43,
                        44,
                        45,
                        57,
                        63,
                        64,
                        71,
                        72
                    ],
                    "('opennlp.tools.chunker#ChunkerEventStream', 'next')": [
                        58,
                        59,
                        60,
                        61,
                        62
                    ],
                    "('opennlp.tools.chunker#ChunkerEventStream', 'hasNext')": [
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ],
                    "('opennlp.tools.chunker#ChunkerEventStream', 'addNewEvents')": [
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        83,
                        87,
                        88,
                        92
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        27
                    ],
                    "('opennlp.tools.chunker#ChunkerEventStream', None)": [
                        33,
                        43,
                        56,
                        57
                    ],
                    "('opennlp.tools.chunker#ChunkerEventStream', 'createEvents(ChunkSample)')": [
                        58,
                        61,
                        65,
                        66,
                        68,
                        69,
                        72
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkerME.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('opennlp.tools.chunker#ChunkerME', 'train(String,ObjectStream,TrainingParameters,ChunkerFactory)')": [
                        174
                    ],
                    "('opennlp.tools.chunker#ChunkerME', 'train(String,ObjectStream,ChunkerContextGenerator,TrainingParameters)')": [
                        193
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('opennlp.tools.chunker#ChunkerME', 'train(String,ObjectStream,TrainingParameters,ChunkerFactory)')": [
                        174
                    ],
                    "('opennlp.tools.chunker#ChunkerME', 'train(String,ObjectStream,ChunkerContextGenerator,TrainingParameters)')": [
                        193
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/parser/BuildModelUpdaterTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.parser#BuildModelUpdaterTool', 'trainAndUpdate(ParserModel,ObjectStream,ModelUpdaterParams)')": [
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.cmdline.parser#BuildModelUpdaterTool', 'trainAndUpdate(ParserModel,ObjectStream,ModelUpdaterParams)')": [
                        50
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/parser/CheckModelUpdaterTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.parser#CheckModelUpdaterTool', 'trainAndUpdate(ParserModel,ObjectStream,ModelUpdaterParams)')": [
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.cmdline.parser#CheckModelUpdaterTool', 'trainAndUpdate(ParserModel,ObjectStream,ModelUpdaterParams)')": [
                        51
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/AbstractEventTrainer.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'getDataIndexer(EventStream)')": [
                        64
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'train(EventStream)')": [
                        86
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        29
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'getDataIndexer(ObjectStream)')": [
                        65
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'train(ObjectStream)')": [
                        87
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/EventTrainer.java": {
                "old": {
                    "(None, None)": [
                        22,
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        24,
                        30
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GIS.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(EventStream)')": [
                        108
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(EventStream,boolean)')": [
                        125
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(EventStream,int,int)')": [
                        144
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(EventStream,int,int,boolean,boolean)')": [
                        168
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(EventStream,int,int,double)')": [
                        193
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        32
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(ObjectStream)')": [
                        109
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(ObjectStream,boolean)')": [
                        126
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(ObjectStream,int,int)')": [
                        145
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(ObjectStream,int,int,boolean,boolean)')": [
                        169
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(ObjectStream,int,int,double)')": [
                        194
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GISTrainer.java": {
                "old": {
                    "(None, None)": [
                        33
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(EventStream,int,int)')": [
                        223
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        38
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(ObjectStream,int,int)')": [
                        224
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/RealBasicEventStream.java": {
                "old": {
                    "(None, None)": [
                        22,
                        24,
                        74
                    ],
                    "('opennlp.tools.ml.maxent#RealBasicEventStream', None)": [
                        27,
                        29,
                        30,
                        32,
                        34,
                        35,
                        36,
                        51,
                        52,
                        69
                    ],
                    "('opennlp.tools.ml.maxent#RealBasicEventStream', 'next')": [
                        39,
                        40,
                        41,
                        43,
                        44,
                        45,
                        47,
                        48,
                        49,
                        50
                    ],
                    "('opennlp.tools.ml.maxent#RealBasicEventStream', 'hasNext')": [
                        53,
                        54,
                        55,
                        56
                    ],
                    "('opennlp.tools.ml.maxent#RealBasicEventStream', 'main(String)')": [
                        70,
                        71,
                        72,
                        73
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        26,
                        66,
                        67
                    ],
                    "('opennlp.tools.ml.maxent#RealBasicEventStream', None)": [
                        28,
                        30,
                        32,
                        57,
                        58,
                        62,
                        63
                    ],
                    "('opennlp.tools.ml.maxent#RealBasicEventStream', 'read')": [
                        36,
                        38,
                        39,
                        40,
                        41,
                        43,
                        44
                    ],
                    "('opennlp.tools.ml.maxent#RealBasicEventStream', 'reset')": [
                        59,
                        60
                    ],
                    "('opennlp.tools.ml.maxent#RealBasicEventStream', 'close')": [
                        64,
                        65
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/FileEventStream.java": {
                "old": {
                    "(None, None)": [
                        23,
                        31,
                        32
                    ],
                    "('opennlp.tools.ml.model#FileEventStream', None)": [
                        38,
                        40,
                        41,
                        78,
                        79,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116
                    ],
                    "('opennlp.tools.ml.model#FileEventStream', 'hasNext')": [
                        70,
                        71,
                        72,
                        74,
                        75,
                        76
                    ],
                    "('opennlp.tools.ml.model#FileEventStream', 'next')": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88
                    ],
                    "('opennlp.tools.ml.model#FileEventStream', 'main(String)')": [
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('opennlp.tools.ml.model#FileEventStream', None)": [
                        36,
                        38,
                        67,
                        105,
                        106
                    ],
                    "('opennlp.tools.ml.model#FileEventStream', 'read')": [
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        81,
                        82
                    ],
                    "('opennlp.tools.ml.model#FileEventStream', 'reset')": [
                        107,
                        108
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/HashSumEventStream.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('opennlp.tools.ml.model#HashSumEventStream', None)": [
                        29,
                        31,
                        32,
                        35,
                        36,
                        48,
                        49
                    ],
                    "('opennlp.tools.ml.model#HashSumEventStream', 'hasNext')": [
                        46,
                        47
                    ],
                    "('opennlp.tools.ml.model#HashSumEventStream', 'next')": [
                        50,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58
                    ],
                    "('opennlp.tools.ml.model#HashSumEventStream', 'calculateHashSum')": [
                        73,
                        74,
                        75,
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28
                    ],
                    "('opennlp.tools.ml.model#HashSumEventStream', None)": [
                        30,
                        34,
                        35,
                        45
                    ],
                    "('opennlp.tools.ml.model#HashSumEventStream', 'read')": [
                        46,
                        47,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/OnePassDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#OnePassDataIndexer', None)": [
                        48,
                        52,
                        67
                    ],
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'computeEventCounts(EventStream,Map,int)')": [
                        107,
                        112,
                        113
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        34
                    ],
                    "('opennlp.tools.ml.model#OnePassDataIndexer', None)": [
                        50,
                        54,
                        69
                    ],
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'computeEventCounts(ObjectStream,Map,int)')": [
                        109,
                        114,
                        115
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/OnePassRealValueDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#OnePassRealValueDataIndexer', None)": [
                        39,
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31
                    ],
                    "('opennlp.tools.ml.model#OnePassRealValueDataIndexer', None)": [
                        41,
                        52
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/RealValueFileEventStream.java": {
                "old": {
                    "('opennlp.tools.ml.model#RealValueFileEventStream', 'next')": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85
                    ],
                    "('opennlp.tools.ml.model#RealValueFileEventStream', None)": [
                        87
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('opennlp.tools.ml.model#RealValueFileEventStream', None)": [
                        81,
                        94
                    ],
                    "('opennlp.tools.ml.model#RealValueFileEventStream', 'read')": [
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/SequenceStream.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        27,
                        28
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/SequenceStreamEventStream.java": {
                "old": {
                    "('opennlp.tools.ml.model#SequenceStreamEventStream', None)": [
                        28,
                        30,
                        31,
                        32,
                        35
                    ],
                    "('opennlp.tools.ml.model#SequenceStreamEventStream', 'hasNext')": [
                        38,
                        39,
                        40,
                        43,
                        44,
                        45,
                        46,
                        47,
                        49,
                        50
                    ],
                    "('opennlp.tools.ml.model#SequenceStreamEventStream', 'next')": [
                        55,
                        56
                    ],
                    "('opennlp.tools.ml.model#SequenceStreamEventStream', 'remove')": [
                        59,
                        60
                    ],
                    "(None, None)": [
                        62
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        26,
                        27
                    ],
                    "('opennlp.tools.ml.model#SequenceStreamEventStream', None)": [
                        33,
                        35,
                        36,
                        37,
                        40,
                        43,
                        64,
                        69
                    ],
                    "('opennlp.tools.ml.model#SequenceStreamEventStream', 'read')": [
                        44,
                        45,
                        46,
                        47,
                        50,
                        51,
                        52,
                        53,
                        55,
                        56,
                        57,
                        60,
                        61
                    ],
                    "('opennlp.tools.ml.model#SequenceStreamEventStream', 'reset')": [
                        65,
                        66
                    ],
                    "('opennlp.tools.ml.model#SequenceStreamEventStream', 'close')": [
                        70,
                        71
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/TrainUtil.java": {
                "old": {
                    "('opennlp.tools.ml.model#TrainUtil', 'train(EventStream,Map,Map)')": [
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.ml.model#TrainUtil', 'train(ObjectStream,Map,Map)')": [
                        45
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/TwoPassDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', None)": [
                        55,
                        59,
                        70
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'computeEventCounts(EventStream,Writer,Map,int)')": [
                        122,
                        126,
                        127
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'index(int,EventStream,Map)')": [
                        144,
                        149,
                        150
                    ]
                },
                "new": {
                    "(None, None)": [
                        37,
                        38
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', None)": [
                        57,
                        61,
                        72
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'computeEventCounts(ObjectStream,Writer,Map,int)')": [
                        124,
                        128,
                        129,
                        130
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'index(int,ObjectStream,Map)')": [
                        147,
                        152,
                        153,
                        154
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/SimplePerceptronSequenceTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainModel(int,SequenceStream,int,boolean)')": [
                        131
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'findParameters(int)')": [
                        201
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'nextIteration(int)')": [
                        225,
                        235
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainingStats(MutableContext)')": [
                        342,
                        345
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainModel(int,SequenceStream,int,boolean)')": [
                        131,
                        132,
                        133,
                        134,
                        137
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'findParameters(int)')": [
                        205
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'nextIteration(int)')": [
                        229,
                        239,
                        240,
                        241,
                        242,
                        243
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainingStats(MutableContext)')": [
                        350,
                        353,
                        354,
                        355,
                        356,
                        357
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderME.java": {
                "old": {
                    "(None, None)": [
                        37
                    ],
                    "('opennlp.tools.namefind#NameFinderME', 'train(String,String,ObjectStream,TrainingParameters,AdaptiveFeatureGenerator,Map)')": [
                        348
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ],
                    "('opennlp.tools.namefind#NameFinderME', 'train(String,String,ObjectStream,TrainingParameters,AdaptiveFeatureGenerator,Map)')": [
                        348
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameSampleSequenceStream.java": {
                "old": {
                    "(None, None)": [
                        23,
                        91,
                        137,
                        138,
                        139,
                        140
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceStream', None)": [
                        36,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        72,
                        87
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceStream', 'iterator')": [
                        88,
                        89
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceIterator', None)": [
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        108,
                        109,
                        133,
                        134
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceIterator', 'hasNext')": [
                        106,
                        107
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceIterator', 'next')": [
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceIterator', 'remove')": [
                        135,
                        136
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSampleSequenceStream', None)": [
                        36,
                        59,
                        77,
                        104,
                        106,
                        107,
                        110,
                        111,
                        112
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceStream', 'read')": [
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceStream', 'reset')": [
                        108,
                        109
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceStream', 'close')": [
                        113,
                        114
                    ],
                    "(None, None)": [
                        115
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/Parser.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#Parser', 'train(opennlp,int,int)')": [
                        256
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        281,
                        303
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'train(ObjectStream,int,int)')": [
                        257
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        282,
                        304
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/ParserEventStream.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'main(String)')": [
                        207,
                        208,
                        209
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'main(String)')": [
                        207,
                        208,
                        209,
                        210
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/Parser.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        459,
                        469,
                        479
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'train(opennlp,int,int)')": [
                        511
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        460,
                        470,
                        480
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'train(ObjectStream,int,int)')": [
                        512
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/ParserEventStream.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'main(String)')": [
                        382,
                        383,
                        384
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'main(String)')": [
                        382,
                        383,
                        384
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSSampleSequenceStream.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        70,
                        108,
                        109,
                        110,
                        111
                    ],
                    "('opennlp.tools.postag#POSSampleSequenceStream', None)": [
                        34,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        51,
                        66
                    ],
                    "('opennlp.tools.postag#POSSampleSequenceStream', 'iterator')": [
                        67,
                        68
                    ],
                    "('opennlp.tools.postag#POSSampleSequenceIterator', None)": [
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        85,
                        86,
                        104,
                        105
                    ],
                    "('opennlp.tools.postag#POSSampleSequenceIterator', 'hasNext')": [
                        83,
                        84
                    ],
                    "('opennlp.tools.postag#POSSampleSequenceIterator', 'next')": [
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103
                    ],
                    "('opennlp.tools.postag#POSSampleSequenceIterator', 'remove')": [
                        106,
                        107
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSSampleSequenceStream', None)": [
                        31,
                        39,
                        56,
                        80,
                        81,
                        84,
                        85,
                        86
                    ],
                    "('opennlp.tools.postag#POSSampleSequenceStream', 'read')": [
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78
                    ],
                    "('opennlp.tools.postag#POSSampleSequenceStream', 'reset')": [
                        82,
                        83
                    ],
                    "('opennlp.tools.postag#POSSampleSequenceStream', 'close')": [
                        87,
                        88
                    ],
                    "(None, None)": [
                        89
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSTaggerME.java": {
                "old": {
                    "(None, None)": [
                        32,
                        33
                    ],
                    "('opennlp.tools.postag#POSTaggerME', 'train(String,ObjectStream,TrainingParameters,POSTaggerFactory)')": [
                        263
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('opennlp.tools.postag#POSTaggerME', 'train(String,ObjectStream,TrainingParameters,POSTaggerFactory)')": [
                        262
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceDetectorME.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'train(String,ObjectStream,SentenceDetectorFactory,TrainingParameters)')": [
                        314
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'train(String,ObjectStream,SentenceDetectorFactory,TrainingParameters)')": [
                        314
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerME.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('opennlp.tools.tokenize#TokenizerME', 'train(ObjectStream,TokenizerFactory,TrainingParameters)')": [
                        245
                    ],
                    "('opennlp.tools.tokenize#TokenizerME', 'train(String,ObjectStream,Dictionary,boolean,TrainingParameters)')": [
                        307
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('opennlp.tools.tokenize#TokenizerME', 'train(ObjectStream,TokenizerFactory,TrainingParameters)')": [
                        245
                    ],
                    "('opennlp.tools.tokenize#TokenizerME', 'train(String,ObjectStream,Dictionary,boolean,TrainingParameters)')": [
                        307
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/AbstractEventStream.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('opennlp.tools.util#AbstractEventStream', None)": [
                        33,
                        59,
                        60,
                        61,
                        62,
                        75,
                        77
                    ],
                    "('opennlp.tools.util#AbstractEventStream', 'hasNext')": [
                        63,
                        64,
                        66,
                        67,
                        68,
                        74
                    ],
                    "('opennlp.tools.util#AbstractEventStream', 'next')": [
                        78,
                        79
                    ]
                },
                "new": {
                    "('opennlp.tools.util#AbstractEventStream', None)": [
                        32,
                        58,
                        76,
                        78,
                        83,
                        84
                    ],
                    "('opennlp.tools.util#AbstractEventStream', 'read')": [
                        59,
                        60,
                        62,
                        63,
                        64,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75
                    ],
                    "('opennlp.tools.util#AbstractEventStream', 'reset')": [
                        79,
                        80,
                        81
                    ],
                    "('opennlp.tools.util#AbstractEventStream', 'close')": [
                        85,
                        86
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/EventTraceStream.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('opennlp.tools.util#EventTraceStream', None)": [
                        26,
                        28,
                        31,
                        32,
                        38,
                        39
                    ],
                    "('opennlp.tools.util#EventTraceStream', 'hasNext')": [
                        36,
                        37
                    ],
                    "('opennlp.tools.util#EventTraceStream', 'next')": [
                        40,
                        41,
                        43,
                        46,
                        47,
                        48
                    ]
                },
                "new": {
                    "('opennlp.tools.util#EventTraceStream', None)": [
                        25,
                        29,
                        30,
                        31,
                        35
                    ],
                    "('opennlp.tools.util#EventTraceStream', 'read')": [
                        36,
                        37,
                        39
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/PlainTextByLineStream.java": {
                "old": {
                    "('opennlp.tools.util#PlainTextByLineStream', None)": [
                        42,
                        43,
                        44,
                        45,
                        49,
                        50
                    ],
                    "('opennlp.tools.util#PlainTextByLineStream', 'reset')": [
                        105
                    ],
                    "('opennlp.tools.util#PlainTextByLineStream', 'close')": [
                        115,
                        118
                    ]
                },
                "new": {
                    "('opennlp.tools.util#PlainTextByLineStream', None)": [
                        39,
                        40,
                        44,
                        48,
                        51,
                        52
                    ],
                    "('opennlp.tools.util#PlainTextByLineStream', 'reset')": [
                        105,
                        106,
                        107,
                        108
                    ],
                    "('opennlp.tools.util#PlainTextByLineStream', 'close')": [
                        118,
                        119,
                        122
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/MockEventTrainer.java": {
                "old": {
                    "(None, None)": [
                        22,
                        31
                    ],
                    "('opennlp.tools.ml#MockEventTrainer', 'train(EventStream)')": [
                        27,
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        24
                    ],
                    "('opennlp.tools.ml#MockEventTrainer', 'train(ObjectStream)')": [
                        28
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/PrepAttachDataUtil.java": {
                "old": {
                    "(None, None)": [
                        30,
                        31
                    ],
                    "('opennlp.tools.ml#PrepAttachDataUtil', 'createTrainingStream')": [
                        62,
                        64,
                        65,
                        66,
                        67
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        33
                    ],
                    "('opennlp.tools.ml#PrepAttachDataUtil', 'createTrainingStream')": [
                        62,
                        64
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/ScaleDoesntMatterTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('opennlp.tools.ml.maxent#ScaleDoesntMatterTest', 'testScaleResults')": [
                        48,
                        49,
                        61,
                        62
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        23,
                        27,
                        28
                    ],
                    "('opennlp.tools.ml.maxent#ScaleDoesntMatterTest', 'testScaleResults')": [
                        50,
                        51,
                        63,
                        64
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameFinderEventStreamTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        27
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStreamTest', 'testOutcomesForSingleTypeSentence')": [
                        59,
                        62,
                        63,
                        64,
                        65,
                        68,
                        69,
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        26,
                        27
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStreamTest', 'testOutcomesForSingleTypeSentence')": [
                        59,
                        62,
                        63,
                        66,
                        69
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/POSSampleEventStreamTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('opennlp.tools.postag#POSSampleEventStreamTest', 'testOutcomesForSingleSentence')": [
                        44,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('opennlp.tools.postag#POSSampleEventStreamTest', 'testOutcomesForSingleSentence')": [
                        45,
                        48,
                        49,
                        50,
                        51,
                        52
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/SDEventStreamTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        26
                    ],
                    "('opennlp.tools.sentdetect#SDEventStreamTest', 'testEventOutcomes')": [
                        50,
                        54,
                        55,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        25
                    ],
                    "('opennlp.tools.sentdetect#SDEventStreamTest', 'testEventOutcomes')": [
                        49,
                        53,
                        54,
                        55,
                        56,
                        58
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokSpanEventStreamTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        27
                    ],
                    "('opennlp.tools.tokenize#TokSpanEventStreamTest', 'testEventOutcomes')": [
                        49,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        26
                    ],
                    "('opennlp.tools.tokenize#TokSpanEventStreamTest', 'testEventOutcomes')": [
                        48,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/AbstractEventStreamTest.java": {
                "old": {
                    "('opennlp.tools.util#AbstractEventStreamTest', 'testStandardCase')": [
                        105,
                        106
                    ],
                    "('opennlp.tools.util#AbstractEventStreamTest', 'testEmtpyEventStream')": [
                        124,
                        131
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.util#AbstractEventStreamTest', 'testStandardCase')": [
                        106,
                        107
                    ],
                    "('opennlp.tools.util#AbstractEventStreamTest', 'testEmtpyEventStream')": [
                        125,
                        132
                    ]
                }
            }
        }
    },
    "407c3367d621c7215064f82d5aea331e7d753606": {
        "authored_data": "2014 Feb 07 10:31",
        "commit.message": "OPENNLP-600 Reverted changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1565611 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "5456306c04ef98270bbec2a39d78f8f21971be45",
        "changes": {
            "opennlp-tools/src/test/java/opennlp/tools/chunker/ChunkSampleTest.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testRegions')": [
                        191,
                        192
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testRegions')": [
                        190,
                        191
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/ChunkerDetailedFMeasureListenerTest.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('opennlp.tools.chunker#ChunkerDetailedFMeasureListenerTest', 'testEvaluator')": [
                        51,
                        54
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkerDetailedFMeasureListenerTest', 'testEvaluator')": [
                        50,
                        53
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/ChunkerEvaluatorTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('opennlp.tools.chunker#ChunkerEvaluatorTest', 'testEvaluator')": [
                        62,
                        65
                    ],
                    "('opennlp.tools.chunker#ChunkerEvaluatorTest', 'testEvaluatorNoError')": [
                        94,
                        98
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkerEvaluatorTest', 'testEvaluator')": [
                        61,
                        64
                    ],
                    "('opennlp.tools.chunker#ChunkerEvaluatorTest', 'testEvaluatorNoError')": [
                        93,
                        97
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/ChunkerMETest.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('opennlp.tools.chunker#ChunkerMETest', 'startup')": [
                        79
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkerMETest', 'startup')": [
                        78
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADChunkSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamTest', 'setup')": [
                        75
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamTest', 'setup')": [
                        74
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADNameSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamTest', 'setup')": [
                        121
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADNameSampleStreamTest', 'setup')": [
                        120
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADPOSSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamTest', 'testSimple')": [
                        37,
                        38
                    ],
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamTest', 'testExpandME')": [
                        62,
                        64
                    ],
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamTest', 'testIncludeFeats')": [
                        91,
                        93
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamTest', 'testSimple')": [
                        36,
                        37
                    ],
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamTest', 'testExpandME')": [
                        61,
                        63
                    ],
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamTest', 'testIncludeFeats')": [
                        90,
                        92
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADParagraphStreamTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('opennlp.tools.formats.ad#ADParagraphStreamTest', 'openData')": [
                        71
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADParagraphStreamTest', 'openData')": [
                        70
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADSentenceSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('opennlp.tools.formats.ad#ADSentenceSampleStreamTest', 'setup')": [
                        60
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADSentenceSampleStreamTest', 'setup')": [
                        59
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/DictionaryNameFinderEvaluatorTest.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderEvaluatorTest', 'createSample')": [
                        76
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#DictionaryNameFinderEvaluatorTest', 'createSample')": [
                        75
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameSampleDataStreamTest.java": {
                "old": {
                    "(None, None)": [
                        35
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithoutNameTypes')": [
                        84
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithNameTypes')": [
                        181
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testHtmlNameSampleParsing')": [
                        345
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithoutNameTypes')": [
                        83
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithNameTypes')": [
                        180
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testHtmlNameSampleParsing')": [
                        344
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/TokenNameFinderCrossValidatorTest.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27,
                        30
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidatorTest', None)": [
                        42,
                        71,
                        72
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidatorTest', 'testWithNullResources')": [
                        49,
                        50,
                        52,
                        53,
                        54,
                        56,
                        60,
                        62,
                        65
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidatorTest', 'testWithNameEvaluationErrorListener')": [
                        79,
                        80,
                        81,
                        83,
                        88,
                        90,
                        91,
                        93,
                        97,
                        100
                    ]
                },
                "new": {
                    "(None, None)": [
                        17,
                        33
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidatorTest', None)": [
                        41,
                        68,
                        69
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidatorTest', 'testWithNullResources')": [
                        48,
                        49,
                        52,
                        53,
                        57,
                        59,
                        62
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidatorTest', 'testWithNameEvaluationErrorListener')": [
                        76,
                        77,
                        78,
                        80,
                        85,
                        87,
                        88,
                        90,
                        94,
                        97
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/ParseSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('opennlp.tools.parser#ParseSampleStreamTest', 'createParseSampleStream')": [
                        40
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ParseSampleStreamTest', 'createParseSampleStream')": [
                        39
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/SentenceDetectorFactoryTest.java": {
                "old": {
                    "(None, None)": [
                        36
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorFactoryTest', 'createSampleStream')": [
                        54
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceDetectorFactoryTest', 'createSampleStream')": [
                        53
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/SentenceDetectorMETest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorMETest', 'testSentenceDetector')": [
                        51
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceDetectorMETest', 'testSentenceDetector')": [
                        50
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokenizerFactoryTest.java": {
                "old": {
                    "(None, None)": [
                        36
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'createSampleStream')": [
                        54
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'createSampleStream')": [
                        53
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokenizerTestUtil.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.tokenize#TokenizerTestUtil', 'createMaxentTokenModel')": [
                        71
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerTestUtil', 'createMaxentTokenModel')": [
                        70
                    ]
                }
            }
        }
    },
    "5456306c04ef98270bbec2a39d78f8f21971be45": {
        "authored_data": "2014 Feb 06 15:37",
        "commit.message": "OPENNLP-600 Reverted a couple of changes. The stream classes need to get a new constructor. Ohter classes should for now just continue using the deprecated API. BeamSearch was not changed, only commented code was added.\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1565309 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "0c6b4552bd67036cab60fae4cea252e8ee25dcaf",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/formats/BioNLP2004NameSampleStream.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.formats#BioNLP2004NameSampleStream', None)": [
                        58,
                        60
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#BioNLP2004NameSampleStream', None)": [
                        57,
                        59
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll02NameSampleStream.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('opennlp.tools.formats#Conll02NameSampleStream', None)": [
                        84,
                        86
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#Conll02NameSampleStream', None)": [
                        83,
                        85
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll03NameSampleStream.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStream', None)": [
                        71,
                        73
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#Conll03NameSampleStream', None)": [
                        70,
                        72
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/EvalitaNameSampleStream.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('opennlp.tools.formats#EvalitaNameSampleStream', None)": [
                        91,
                        93
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#EvalitaNameSampleStream', None)": [
                        90,
                        92
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/LeipzigDoccatSampleStream.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('opennlp.tools.formats#LeipzigDoccatSampleStream', None)": [
                        56
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#LeipzigDoccatSampleStream', None)": [
                        55
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/NameFinderCensus90NameStream.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        32,
                        33,
                        35
                    ],
                    "('opennlp.tools.formats#NameFinderCensus90NameStream', None)": [
                        50,
                        56,
                        57,
                        67,
                        68,
                        69,
                        70,
                        72,
                        73,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84
                    ],
                    "('opennlp.tools.formats#NameFinderCensus90NameStream', 'read')": [
                        91,
                        92,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        107,
                        108
                    ]
                },
                "new": {
                    "(None, None)": [
                        15,
                        30,
                        31,
                        33,
                        114
                    ],
                    "('opennlp.tools.formats#NameFinderCensus90NameStream', None)": [
                        48,
                        54,
                        55,
                        65,
                        66,
                        68,
                        69,
                        74
                    ],
                    "('opennlp.tools.formats#NameFinderCensus90NameStream', 'read')": [
                        81,
                        82,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        97,
                        98
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADChunkSampleStream.java": {
                "old": {
                    "(None, None)": [
                        32
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', None)": [
                        95,
                        96
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', None)": [
                        94,
                        95
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADNameSampleStream.java": {
                "old": {
                    "(None, None)": [
                        38
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', None)": [
                        195,
                        197
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADNameSampleStream', None)": [
                        194,
                        196
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADPOSSampleStream.java": {
                "old": {
                    "(None, None)": [
                        32
                    ],
                    "('opennlp.tools.formats.ad#ADPOSSampleStream', None)": [
                        85,
                        88
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADPOSSampleStream', None)": [
                        84,
                        87
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADSentenceSampleStream.java": {
                "old": {
                    "(None, None)": [
                        32
                    ],
                    "('opennlp.tools.formats.ad#ADSentenceSampleStream', None)": [
                        85,
                        86
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADSentenceSampleStream', None)": [
                        84,
                        85
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderEventStream.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27,
                        29
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/ParserEventStream.java": {
                "old": {
                    "(None, None)": [
                        32
                    ],
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'main(String)')": [
                        208
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'main(String)')": [
                        207
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/ParserEventStream.java": {
                "old": {
                    "(None, None)": [
                        39
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'main(String)')": [
                        383
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'main(String)')": [
                        382
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/BeamSearch.java": {
                "old": {
                    "(None, None)": [
                        23,
                        26,
                        215
                    ],
                    "('opennlp.tools.util#BeamSearch', None)": [
                        47,
                        48,
                        49,
                        50,
                        57,
                        58,
                        62,
                        77,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206
                    ],
                    "('opennlp.tools.util#BeamSearch', 'validSequence(int,T,String,String)')": [
                        86
                    ],
                    "('opennlp.tools.util#BeamSearch', 'bestSequences(int,T,Object,double)')": [
                        126,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        152,
                        155,
                        157
                    ],
                    "('opennlp.tools.util#BeamSearch', 'bestSequence(T,Object)')": [
                        209,
                        210,
                        211,
                        213
                    ]
                },
                "new": {
                    "(None, None)": [
                        17,
                        26
                    ],
                    "('opennlp.tools.util#BeamSearch', None)": [
                        36,
                        41,
                        49,
                        50,
                        51,
                        58,
                        59,
                        63,
                        78,
                        79,
                        101,
                        102,
                        103,
                        104,
                        192,
                        193,
                        194,
                        195
                    ],
                    "('opennlp.tools.util#BeamSearch', 'validSequence(int,T,String,String)')": [
                        88,
                        89
                    ],
                    "('opennlp.tools.util#BeamSearch', 'bestSequences(int,T,Object,double)')": [
                        130,
                        131,
                        133,
                        134,
                        135,
                        145,
                        148
                    ],
                    "('opennlp.tools.util#BeamSearch', 'bestSequence(T,Object)')": [
                        198,
                        199,
                        200,
                        202
                    ]
                }
            }
        }
    },
    "0c6b4552bd67036cab60fae4cea252e8ee25dcaf": {
        "authored_data": "2014 Feb 06 13:32",
        "commit.message": "OPENNLP-600 Removed deprecated main method\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1565236 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "e57a51f65a72671a3e16a6fb0948d8fd10dcd7c2",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderEventStream.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderEventStream', None)": [
                        146,
                        147,
                        148
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStream', 'main(String)')": [
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157
                    ],
                    "(None, None)": [
                        158,
                        159
                    ]
                }
            }
        }
    },
    "e57a51f65a72671a3e16a6fb0948d8fd10dcd7c2": {
        "authored_data": "2014 Feb 06 13:27",
        "commit.message": "OPENNLP-600 Use the default encoding to read from stdin\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1565230 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "1ea1b1ea7b22a523750ead14aa0eacfe2978496d",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/SystemInputStreamFactory.java": {
                "old": {
                    "('opennlp.tools.cmdline#SystemInputStreamFactory', 'encoding')": [
                        31
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#SystemInputStreamFactory', 'encoding')": [
                        31
                    ]
                }
            }
        }
    },
    "1ea1b1ea7b22a523750ead14aa0eacfe2978496d": {
        "authored_data": "2014 Feb 06 13:11",
        "commit.message": "OPENNLP-600 Updated stream factories to use CmdLineUtil.createInputStreamFactory\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1565223 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "bd681811329fbd1d2be7737c9e1a89d3e3eca80b",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/CmdLineUtil.java": {
                "new": {
                    "('opennlp.tools.cmdline#CmdLineUtil', 'handleCreateObjectStreamError(IOException)')": [
                        310,
                        311
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', None)": [
                        312,
                        313
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ChunkerSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30,
                        31,
                        32
                    ],
                    "('opennlp.tools.formats#ChunkerSampleStreamFactory', 'create(String)')": [
                        55,
                        58,
                        61
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        27
                    ],
                    "('opennlp.tools.formats#ChunkerSampleStreamFactory', 'create(String)')": [
                        52,
                        55,
                        58
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/DocumentSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30,
                        31,
                        32
                    ],
                    "('opennlp.tools.formats#DocumentSampleStreamFactory', 'create(String)')": [
                        55,
                        58,
                        59,
                        60,
                        61,
                        62,
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        27
                    ],
                    "('opennlp.tools.formats#DocumentSampleStreamFactory', 'create(String)')": [
                        52,
                        55,
                        57
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/NameSampleDataStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        19,
                        21,
                        22,
                        30
                    ],
                    "('opennlp.tools.formats#NameSampleDataStreamFactory', 'create(String)')": [
                        56,
                        60,
                        61,
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('opennlp.tools.formats#NameSampleDataStreamFactory', 'create(String)')": [
                        53,
                        57,
                        59
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ParseSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30,
                        31,
                        32
                    ],
                    "('opennlp.tools.formats#ParseSampleStreamFactory', 'create(String)')": [
                        55,
                        59,
                        61
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        27
                    ],
                    "('opennlp.tools.formats#ParseSampleStreamFactory', 'create(String)')": [
                        52,
                        56,
                        58
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/SentenceSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        29,
                        30,
                        31,
                        32,
                        33
                    ],
                    "('opennlp.tools.formats#SentenceSampleStreamFactory', 'create(String)')": [
                        56,
                        60,
                        61,
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        28
                    ],
                    "('opennlp.tools.formats#SentenceSampleStreamFactory', 'create(String)')": [
                        54,
                        58,
                        60
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/TokenSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30,
                        31,
                        32
                    ],
                    "('opennlp.tools.formats#TokenSampleStreamFactory', 'create(String)')": [
                        55,
                        59,
                        60,
                        62
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        27
                    ],
                    "('opennlp.tools.formats#TokenSampleStreamFactory', 'create(String)')": [
                        52,
                        56,
                        58
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/WordTagSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        19,
                        21,
                        22,
                        30
                    ],
                    "('opennlp.tools.formats#WordTagSampleStreamFactory', 'create(String)')": [
                        55,
                        59,
                        60,
                        62
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('opennlp.tools.formats#WordTagSampleStreamFactory', 'create(String)')": [
                        52,
                        56,
                        58
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADChunkSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        21,
                        24,
                        25,
                        34
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamFactory', 'create(String)')": [
                        83,
                        87,
                        88,
                        90
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamFactory', 'create(String)')": [
                        80,
                        84,
                        86
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADNameSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        21,
                        24,
                        25,
                        34
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamFactory', 'create(String)')": [
                        79,
                        83,
                        84,
                        86
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamFactory', 'create(String)')": [
                        76,
                        80,
                        82,
                        83
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADPOSSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        21,
                        24,
                        25,
                        34
                    ],
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamFactory', 'create(String)')": [
                        78,
                        82,
                        83,
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamFactory', 'create(String)')": [
                        75,
                        79,
                        81
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADSentenceSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        21,
                        24,
                        25,
                        34,
                        91
                    ],
                    "('opennlp.tools.formats.ad#ADSentenceSampleStreamFactory', 'create(String)')": [
                        76,
                        80,
                        81,
                        83
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('opennlp.tools.formats.ad#ADSentenceSampleStreamFactory', 'create(String)')": [
                        73,
                        77,
                        79
                    ]
                }
            }
        }
    }
}