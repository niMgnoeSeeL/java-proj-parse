{
    "d8d92e277394e161f2961f7d9ee1586eac770857": {
        "authored_data": "2011 Nov 08 21:56",
        "commit.message": "OPENNLP-364 Replace StringBuffer with StringBuilder. Thanks to Aliaksandr Autayeu for providing a patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1199480 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "0930692a9e5fd3e275a6becb97f7535ef137aff7",
        "changes": {
            "opennlp-maxent/src/main/java/opennlp/model/AbstractModel.java": {
                "old": {
                    "('opennlp.model#AbstractModel', 'getAllOutcomes(double)')": [
                        99
                    ]
                },
                "new": {
                    "('opennlp.model#AbstractModel', 'getAllOutcomes(double)')": [
                        99
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/model/ComparableEvent.java": {
                "old": {
                    "('opennlp.model#ComparableEvent', 'toString')": [
                        93
                    ]
                },
                "new": {
                    "('opennlp.model#ComparableEvent', 'toString')": [
                        93
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/model/Event.java": {
                "old": {
                    "('opennlp.model#Event', 'toString')": [
                        55
                    ]
                },
                "new": {
                    "('opennlp.model#Event', 'toString')": [
                        55
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/model/FileEventStream.java": {
                "old": {
                    "('opennlp.model#FileEventStream', 'toLine(Event)')": [
                        96
                    ]
                },
                "new": {
                    "('opennlp.model#FileEventStream', 'toLine(Event)')": [
                        96
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/parser/ParserTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.parser#ParserTool', 'parseLine(String,opennlp,int)')": [
                        66
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.parser#ParserTool', 'parseLine(String,opennlp,int)')": [
                        66
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/DiscourseElement.java": {
                "old": {
                    "('opennlp.tools.coref#DiscourseElement', 'toString')": [
                        116
                    ]
                },
                "new": {
                    "('opennlp.tools.coref#DiscourseElement', 'toString')": [
                        116
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/mention/MentionContext.java": {
                "old": {
                    "('opennlp.tools.coref.mention#MentionContext', 'getHeadText')": [
                        222
                    ]
                },
                "new": {
                    "('opennlp.tools.coref.mention#MentionContext', 'getHeadText')": [
                        222
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/resolver/AbstractResolver.java": {
                "old": {
                    "('opennlp.tools.coref.resolver#AbstractResolver', 'featureString(MentionContext)')": [
                        188
                    ]
                },
                "new": {
                    "('opennlp.tools.coref.resolver#AbstractResolver', 'featureString(MentionContext)')": [
                        188
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/resolver/ResolverUtils.java": {
                "old": {
                    "('opennlp.tools.coref.resolver#ResolverUtils', 'excludedDeterminerMentionString(MentionContext)')": [
                        150
                    ],
                    "('opennlp.tools.coref.resolver#ResolverUtils', 'excludedHonorificMentionString(MentionContext)')": [
                        168
                    ],
                    "('opennlp.tools.coref.resolver#ResolverUtils', 'excludedTheMentionString(MentionContext)')": [
                        185
                    ],
                    "('opennlp.tools.coref.resolver#ResolverUtils', 'mentionString(MentionContext)')": [
                        323
                    ]
                },
                "new": {
                    "('opennlp.tools.coref.resolver#ResolverUtils', 'excludedDeterminerMentionString(MentionContext)')": [
                        150
                    ],
                    "('opennlp.tools.coref.resolver#ResolverUtils', 'excludedHonorificMentionString(MentionContext)')": [
                        168
                    ],
                    "('opennlp.tools.coref.resolver#ResolverUtils', 'excludedTheMentionString(MentionContext)')": [
                        185
                    ],
                    "('opennlp.tools.coref.resolver#ResolverUtils', 'mentionString(MentionContext)')": [
                        323
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/sim/Context.java": {
                "old": {
                    "('opennlp.tools.coref.sim#Context', 'toString')": [
                        92
                    ]
                },
                "new": {
                    "('opennlp.tools.coref.sim#Context', 'toString')": [
                        92
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADSentenceStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADSentenceStream', None)": [
                        368,
                        404
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADSentenceStream', None)": [
                        368,
                        404
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/AbstractContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser#AbstractContextGenerator', 'punctbo(Parse,int)')": [
                        58
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'cons(Parse,int)')": [
                        65
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'consbo(Parse,int)')": [
                        80
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'production(Parse,boolean)')": [
                        103
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'surround(Parse,int,String,Collection,List)')": [
                        300
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'checkcons(Parse,String,String,List)')": [
                        359
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'checkcons(Parse,Parse,String,List)')": [
                        368
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#AbstractContextGenerator', 'punctbo(Parse,int)')": [
                        58
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'cons(Parse,int)')": [
                        65
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'consbo(Parse,int)')": [
                        80
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'production(Parse,boolean)')": [
                        103
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'surround(Parse,int,String,Collection,List)')": [
                        300
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'checkcons(Parse,String,String,List)')": [
                        359
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'checkcons(Parse,Parse,String,List)')": [
                        368
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ChunkContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser#ChunkContextGenerator', 'chunkandpostag(int,String,String,String)')": [
                        172
                    ],
                    "('opennlp.tools.parser#ChunkContextGenerator', 'chunkandpostagbo(int,String,String)')": [
                        181
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ChunkContextGenerator', 'chunkandpostag(int,String,String,String)')": [
                        172
                    ],
                    "('opennlp.tools.parser#ChunkContextGenerator', 'chunkandpostagbo(int,String,String)')": [
                        181
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/Parse.java": {
                "old": {
                    "('opennlp.tools.parser#Parse', 'parseParse(String,GapLabeler)')": [
                        808
                    ],
                    "('opennlp.tools.parser#Parse', 'codeTree(Parse,int)')": [
                        1033
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#Parse', 'parseParse(String,GapLabeler)')": [
                        808
                    ],
                    "('opennlp.tools.parser#Parse', 'codeTree(Parse,int)')": [
                        1033
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/CheckContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#CheckContextGenerator', 'getContext(Parse,String,int,int)')": [
                        66,
                        67
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#CheckContextGenerator', 'getContext(Parse,String,int,int)')": [
                        66,
                        67
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/AttachContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'getContext(Parse,int,List,int)')": [
                        127
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'getContext(Parse,int,List,int)')": [
                        127
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSTaggerME.java": {
                "old": {
                    "('opennlp.tools.postag#POSTaggerME', 'tag(String)')": [
                        289
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSTaggerME', 'tag(String)')": [
                        289
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/lang/en/TokenSampleStream.java": {
                "old": {
                    "(None, None)": [
                        34
                    ],
                    "('opennlp.tools.tokenize.lang.en#TokenSampleStream', 'next')": [
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ],
                    "('opennlp.tools.tokenize.lang.en#TokenSampleStream', 'next')": [
                        58
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/Span.java": {
                "old": {
                    "('opennlp.tools.util#Span', 'spansToStrings(Span,String)')": [
                        299
                    ]
                },
                "new": {
                    "('opennlp.tools.util#Span', 'spansToStrings(Span,String)')": [
                        299
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/StringList.java": {
                "old": {
                    "('opennlp.tools.util#StringList', 'toString')": [
                        198
                    ]
                },
                "new": {
                    "('opennlp.tools.util#StringList', 'toString')": [
                        198
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/TokenPatternFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#TokenPatternFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        64
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#TokenPatternFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        64
                    ]
                }
            }
        }
    },
    "0930692a9e5fd3e275a6becb97f7535ef137aff7": {
        "authored_data": "2011 Nov 08 19:26",
        "commit.message": "OPENNLP-362 Fixed javadoc warnings. Thanks to Aliaksandr Autayeu for providing a patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1199397 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "1a5adba469874b382c9fd1ca10e70edcade5cf05",
        "changes": {
            "opennlp-maxent/src/main/java/opennlp/maxent/io/ObjectGISModelReader.java": {
                "old": {
                    "('opennlp.maxent.io#ObjectGISModelReader', None)": [
                        34,
                        35
                    ]
                },
                "new": {
                    "('opennlp.maxent.io#ObjectGISModelReader', None)": [
                        34
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/model/SequenceStream.java": {
                "old": {
                    "(None, None)": [
                        30,
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/perceptron/PerceptronTrainer.java": {
                "old": {
                    "('opennlp.perceptron#PerceptronTrainer', None)": [
                        121,
                        122,
                        123
                    ]
                },
                "new": {
                    "('opennlp.perceptron#PerceptronTrainer', None)": [
                        121
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/serializer/DictionarySerializer.java": {
                "old": {
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', None)": [
                        198,
                        203,
                        204,
                        236,
                        237,
                        240,
                        254,
                        255
                    ]
                },
                "new": {
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', None)": [
                        198,
                        203,
                        204,
                        236,
                        237,
                        240,
                        254,
                        255
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerME.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenizerME', None)": [
                        92
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerME', None)": [
                        92
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/eval/Evaluator.java": {
                "old": {
                    "('opennlp.tools.util.eval#Evaluator', None)": [
                        69,
                        73,
                        103
                    ]
                },
                "new": {
                    "('opennlp.tools.util.eval#Evaluator', None)": [
                        69,
                        73,
                        103,
                        104
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/ModelUtil.java": {
                "old": {
                    "('opennlp.tools.util.model#ModelUtil', None)": [
                        136,
                        137,
                        139
                    ]
                },
                "new": {
                    "('opennlp.tools.util.model#ModelUtil', None)": [
                        136,
                        137,
                        139
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/normalizer/NumberUtil.java": {
                "old": {
                    "('opennlp.uima.normalizer#NumberUtil', None)": [
                        33,
                        34,
                        76,
                        77,
                        78,
                        79
                    ]
                },
                "new": {
                    "('opennlp.uima.normalizer#NumberUtil', None)": [
                        33,
                        34,
                        76,
                        77,
                        78,
                        79
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/tokenize/Tokenizer.java": {
                "old": {
                    "(None, None)": [
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        52,
                        53
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/tokenize/TokenizerModelResource.java": {
                "old": {
                    "(None, None)": [
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/util/AnnotationComparator.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27
                    ],
                    "('opennlp.uima.util#AnnotationComparator', None)": [
                        35
                    ]
                },
                "new": {
                    "('opennlp.uima.util#AnnotationComparator', None)": [
                        33
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/util/OpennlpUtil.java": {
                "old": {
                    "('opennlp.uima.util#OpennlpUtil', None)": [
                        41,
                        42,
                        43
                    ]
                },
                "new": {
                    "('opennlp.uima.util#OpennlpUtil', None)": [
                        41,
                        42
                    ]
                }
            }
        }
    }
}