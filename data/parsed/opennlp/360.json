{
    "a21b4f5c08e34a2887eccff57047b3e0acbc0ec5": {
        "authored_data": "2017 Feb 06 18:39",
        "commit.message": "OpenNLP-977: Remove deprecated map methods\n",
        "commit.author.name": "Daniel Russ",
        "pcid": "740b6e34168a3cf38ba8ea88a9450babbe76393a",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkerME.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkerME', 'train(String,ObjectStream,TrainingParameters,ChunkerFactory)')": [
                        174,
                        182,
                        188
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkerME', 'train(String,ObjectStream,TrainingParameters,ChunkerFactory)')": [
                        174,
                        182,
                        188
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/CmdLineUtil.java": {
                "old": {
                    "('opennlp.tools.cmdline#CmdLineUtil', 'loadTrainingParameters(String,boolean)')": [
                        327,
                        331
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#CmdLineUtil', 'loadTrainingParameters(String,boolean)')": [
                        327,
                        331
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/parser/ParserTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.parser#ParserTrainerTool', 'run(String,String)')": [
                        123,
                        127,
                        131,
                        135,
                        139
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.parser#ParserTrainerTool', 'run(String,String)')": [
                        123,
                        127,
                        131,
                        135,
                        139
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/postag/POSTaggerTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.postag#POSTaggerTrainerTool', 'run(String,String)')": [
                        59
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.postag#POSTaggerTrainerTool', 'run(String,String)')": [
                        59
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/sentdetect/SentenceDetectorTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.sentdetect#SentenceDetectorTrainerTool', 'run(String,String)')": [
                        68
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.sentdetect#SentenceDetectorTrainerTool', 'run(String,String)')": [
                        68
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/tokenizer/TokenizerTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.tokenizer#TokenizerTrainerTool', 'run(String,String)')": [
                        66,
                        71
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.tokenizer#TokenizerTrainerTool', 'run(String,String)')": [
                        66,
                        71
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentCategorizerME.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'train(String,ObjectStream,TrainingParameters,DoccatFactory)')": [
                        239
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'train(String,ObjectStream,TrainingParameters,DoccatFactory)')": [
                        239
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmatizerME.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmatizerME', 'train(String,ObjectStream,TrainingParameters,LemmatizerFactory)')": [
                        160,
                        167,
                        174,
                        179
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#LemmatizerME', 'train(String,ObjectStream,TrainingParameters,LemmatizerFactory)')": [
                        160,
                        167,
                        174,
                        179
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/EventModelSequenceTrainer.java": {
                "new": {
                    "(None, None)": [
                        25,
                        31,
                        33
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/EventTrainer.java": {
                "new": {
                    "(None, None)": [
                        27,
                        33,
                        35
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/SequenceTrainer.java": {
                "new": {
                    "(None, None)": [
                        25,
                        31,
                        33
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/TrainerFactory.java": {
                "old": {
                    "('opennlp.tools.ml#TrainerFactory', 'getTrainerType(Map)')": [
                        62,
                        63,
                        64,
                        67,
                        71,
                        89,
                        97,
                        105
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'getSequenceModelTrainer(Map,Map)')": [
                        115,
                        117
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'getEventModelSequenceTrainer(Map,Map)')": [
                        137,
                        139
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'getEventTrainer(Map,Map)')": [
                        158,
                        160,
                        161,
                        162,
                        163,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176
                    ],
                    "('opennlp.tools.ml#TrainerFactory', None)": [
                        177,
                        178,
                        179,
                        180
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'isValid(Map)')": [
                        181,
                        184,
                        185,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'getTrainerType(TrainingParameters)')": [
                        63,
                        64,
                        65,
                        68,
                        72,
                        90,
                        98,
                        106
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'getSequenceModelTrainer(TrainingParameters,Map)')": [
                        116,
                        118
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'getEventModelSequenceTrainer(TrainingParameters,Map)')": [
                        138,
                        140,
                        141
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'getEventTrainer(TrainingParameters,Map)')": [
                        160,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        172,
                        173,
                        174,
                        175
                    ],
                    "('opennlp.tools.ml#TrainerFactory', None)": [
                        176,
                        177,
                        178,
                        179
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'isValid(TrainingParameters)')": [
                        180,
                        183,
                        192,
                        193,
                        194,
                        195,
                        201,
                        202
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderME.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderME', 'train(String,String,ObjectStream,TrainingParameters,TokenNameFinderFactory)')": [
                        235,
                        241,
                        249,
                        253
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderME', 'train(String,String,ObjectStream,TrainingParameters,TokenNameFinderFactory)')": [
                        235,
                        241,
                        249,
                        253
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/Parser.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        287,
                        317
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        287,
                        317
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/Parser.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        474,
                        488,
                        501
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        474,
                        488,
                        501
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSTaggerME.java": {
                "old": {
                    "('opennlp.tools.postag#POSTaggerME', 'train(String,ObjectStream,TrainingParameters,POSTaggerFactory)')": [
                        239,
                        246,
                        253,
                        258
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSTaggerME', 'train(String,ObjectStream,TrainingParameters,POSTaggerFactory)')": [
                        239,
                        246,
                        253,
                        258
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceDetectorME.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'train(String,ObjectStream,SentenceDetectorFactory,TrainingParameters)')": [
                        323
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'train(String,ObjectStream,SentenceDetectorFactory,TrainingParameters)')": [
                        323
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerME.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenizerME', 'train(ObjectStream,TokenizerFactory,TrainingParameters)')": [
                        245
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerME', 'train(ObjectStream,TokenizerFactory,TrainingParameters)')": [
                        245
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/MockEventTrainer.java": {
                "new": {
                    "(None, None)": [
                        27,
                        48
                    ],
                    "('opennlp.tools.ml#MockEventTrainer', None)": [
                        44,
                        45
                    ],
                    "('opennlp.tools.ml#MockEventTrainer', 'init(TrainingParameters,Map)')": [
                        46,
                        47
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/MockSequenceTrainer.java": {
                "new": {
                    "(None, None)": [
                        25,
                        41,
                        42
                    ],
                    "('opennlp.tools.ml#MockSequenceTrainer', None)": [
                        38
                    ],
                    "('opennlp.tools.ml#MockSequenceTrainer', 'init(TrainingParameters,Map)')": [
                        39,
                        40
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/TrainerFactoryTest.java": {
                "old": {
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testBuiltInValid')": [
                        43
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testSequenceTrainerValid')": [
                        49
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testEventTrainerValid')": [
                        55
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testInvalidTrainer')": [
                        61
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testIsSequenceTrainerTrue')": [
                        69
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testIsSequenceTrainerFalse')": [
                        77
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testBuiltInValid')": [
                        43
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testSequenceTrainerValid')": [
                        49
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testEventTrainerValid')": [
                        55
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testInvalidTrainer')": [
                        61
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testIsSequenceTrainerTrue')": [
                        69
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testIsSequenceTrainerFalse')": [
                        77
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/GISIndexingTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GISIndexingTest', 'testIndexingWithTrainingParameters')": [
                        122,
                        140
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#GISIndexingTest', 'testIndexingWithTrainingParameters')": [
                        122,
                        140
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/MaxentPrepAttachTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachDataWithParams')": [
                        78
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachDataWithParamsDefault')": [
                        93
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachDataWithParams')": [
                        77
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachDataWithParamsDefault')": [
                        92
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/QNPrepAttachTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataWithParamsDefault')": [
                        56
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataWithElasticNetParams')": [
                        68
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataWithL1Params')": [
                        85
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataWithL2Params')": [
                        102
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataInParallel')": [
                        119
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataWithParamsDefault')": [
                        55
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataWithElasticNetParams')": [
                        67
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataWithL1Params')": [
                        84
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataWithL2Params')": [
                        101
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataInParallel')": [
                        118
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/naivebayes/NaiveBayesPrepAttachTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesPrepAttachTest', 'testNaiveBayesOnPrepAttachDataUsingTrainUtil')": [
                        64
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesPrepAttachTest', 'testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5')": [
                        76
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesPrepAttachTest', 'testNaiveBayesOnPrepAttachDataUsingTrainUtil')": [
                        63
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesPrepAttachTest', 'testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5')": [
                        75
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/perceptron/PerceptronPrepAttachTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithSkippedAveraging')": [
                        61
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithTolerance')": [
                        74
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithStepSizeDecrease')": [
                        88
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testModelSerialization')": [
                        102
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testModelEquals')": [
                        126
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithSkippedAveraging')": [
                        60
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithTolerance')": [
                        73
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithStepSizeDecrease')": [
                        87
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testModelSerialization')": [
                        101
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testModelEquals')": [
                        125
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/util/OpennlpUtil.java": {
                "old": {
                    "('opennlp.uima.util#OpennlpUtil', 'loadTrainingParams(String,boolean)')": [
                        85,
                        89
                    ]
                },
                "new": {
                    "('opennlp.uima.util#OpennlpUtil', 'loadTrainingParams(String,boolean)')": [
                        85,
                        89
                    ]
                }
            }
        }
    },
    "740b6e34168a3cf38ba8ea88a9450babbe76393a": {
        "authored_data": "2017 Feb 06 18:43",
        "commit.message": "OPENNLP-975: Add format support for CoNLL-U format\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "46fbcbf043d3c14be2e1800d0fbe691e3c846898",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/StreamFactoryRegistry.java": {
                "new": {
                    "(None, None)": [
                        45,
                        46
                    ],
                    "('opennlp.tools.cmdline#StreamFactoryRegistry', None)": [
                        115,
                        116,
                        117
                    ]
                }
            }
        }
    },
    "284fe0ab9d98c14a66aa32ada0c46b294f94329d": {
        "authored_data": "2017 Feb 01 14:38",
        "commit.message": "OPENNLP-973: Respect setting of PrintMessages in DataIndexer impls\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "9d5b740c7c9cc98b46ea65623a1f28b85bb461c8",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#AbstractDataIndexer', 'sortAndMerge(List,boolean)')": [
                        136
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#AbstractDataIndexer', 'sortAndMerge(List,boolean)')": [
                        136
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/OnePassDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'index(ObjectStream)')": [
                        51,
                        53,
                        55,
                        57,
                        64,
                        66,
                        68
                    ],
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'index(List,Map)')": [
                        143,
                        144
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'index(ObjectStream)')": [
                        51,
                        53,
                        55,
                        57,
                        64,
                        66,
                        68
                    ],
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'index(List,Map)')": [
                        143,
                        144
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/TwoPassDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'index(ObjectStream)')": [
                        58,
                        60,
                        66,
                        68,
                        76,
                        79,
                        82,
                        85
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'index(int,ObjectStream,Map)')": [
                        162
                    ],
                    "(None, None)": [
                        171
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'index(ObjectStream)')": [
                        58,
                        60,
                        66,
                        68,
                        76,
                        79,
                        82,
                        85
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', None)": [
                        123
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'index(int,ObjectStream,Map)')": [
                        127,
                        164
                    ]
                }
            }
        }
    },
    "9d5b740c7c9cc98b46ea65623a1f28b85bb461c8": {
        "authored_data": "2017 Feb 01 15:13",
        "commit.message": "OPENNLP-946: Don't shadow printMessages variable from super class\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "2b07ee388fa75e5ba59803528def44d244109f76",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GISTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GISTrainer', None)": [
                        64
                    ]
                }
            }
        }
    }
}