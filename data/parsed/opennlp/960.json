{
    "00167bebdafe3c940d20b3f4ebfd03b293290774": {
        "authored_data": "2013 Oct 14 14:54",
        "commit.message": "OPENNLP-604 Added xml element to descriptor for document begin feature\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1531924 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "51e4be7dbf38cadf30f5d6b4e14143eac0bae104",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/GeneratorFactory.java": {
                "new": {
                    "('opennlp.tools.util.featuregen#GeneratorFactory', None)": [
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        508
                    ]
                }
            }
        }
    },
    "51e4be7dbf38cadf30f5d6b4e14143eac0bae104": {
        "authored_data": "2013 Oct 13 17:33",
        "commit.message": "OPENNLP-603 Added a token cluster feature generator, the cluster is looked up in a token to cluster id dictionary.\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1531720 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "9d523a3a8aab881ca353966d49a12d2a6dcb613b",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/GeneratorFactory.java": {
                "new": {
                    "('opennlp.tools.util.featuregen#GeneratorFactory', None)": [
                        98,
                        99,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        476,
                        477
                    ],
                    "(None, None)": [
                        576,
                        577
                    ]
                }
            }
        }
    },
    "54d639879de059f856b59a8aa05bd63aea57863a": {
        "authored_data": "2013 Oct 09 18:31",
        "commit.message": "OPENNLP-581 Added support to retrieve serializer name from artifact object itself\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1530754 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "d46c62141af8a3cde57aee746be62901944f40d9",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/util/model/BaseModel.java": {
                "new": {
                    "('opennlp.tools.util.model#BaseModel', None)": [
                        64,
                        65
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'finishLoadingArtifacts')": [
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'serialize(OutputStream)')": [
                        559,
                        560,
                        563,
                        564,
                        565,
                        566,
                        567,
                        568,
                        569,
                        570,
                        571,
                        572
                    ]
                }
            }
        }
    },
    "d46c62141af8a3cde57aee746be62901944f40d9": {
        "authored_data": "2013 Oct 05 21:20",
        "commit.message": "Was not using the EntityLinkerProperties passed in. Now fixed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1529520 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Mark Giaconia",
        "pcid": "1a391fd9b6f70d389c6a51b5e26536e8ed48f6ee",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/entitylinker/MySQLGeoNamesGazLinkable.java": {
                "old": {
                    "(None, None)": [
                        7
                    ],
                    "('opennlp.tools.entitylinker#MySQLGeoNamesGazLinkable', 'getMySqlConnection(EntityLinkerProperties)')": [
                        59,
                        60
                    ]
                },
                "new": {
                    "('opennlp.tools.entitylinker#MySQLGeoNamesGazLinkable', 'getMySqlConnection(EntityLinkerProperties)')": [
                        58,
                        59
                    ]
                }
            }
        }
    },
    "1a391fd9b6f70d389c6a51b5e26536e8ed48f6ee": {
        "authored_data": "2013 Oct 01 19:53",
        "commit.message": "OPENNLP-581 Changed model validation, model should be an instance of MaxentModel and not AbstractModel\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1528190 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "c6392185d398af5aaa63b83aad9be7daf9090464",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderModel.java": {
                "old": {
                    "('opennlp.tools.namefind#TokenNameFinderModel', 'validateArtifactMap')": [
                        256,
                        257
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#TokenNameFinderModel', 'validateArtifactMap')": [
                        256,
                        257
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceModel.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceModel', 'validateArtifactMap')": [
                        111
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceModel', 'validateArtifactMap')": [
                        111
                    ]
                }
            }
        }
    },
    "0482b618cd9f063c95922010251e07ff956845aa": {
        "authored_data": "2013 Sep 23 12:23",
        "commit.message": "OPENNLP-601 Now copies the NameSample id over to the new NameSample object\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1525567 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "15db4ca8fd9f010a7dcc8f8243db24c1e501d4e4",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameSampleTypeFilter.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSampleTypeFilter', 'read')": [
                        63,
                        64
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSampleTypeFilter', 'read')": [
                        63,
                        64
                    ]
                }
            }
        }
    },
    "15db4ca8fd9f010a7dcc8f8243db24c1e501d4e4": {
        "authored_data": "2013 Sep 20 12:09",
        "commit.message": "OPENNLP-581 Event and Sequence trainers now return the interface MaxentModel instead of the abstract implementation AbstractModel\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1524981 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "William Colen",
        "pcid": "7d1557d9ae990fbb9b976990ed4e082c10a109cb",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkerME.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('opennlp.tools.chunker#ChunkerME', 'train(String,ObjectStream,TrainingParameters,ChunkerFactory)')": [
                        214
                    ],
                    "('opennlp.tools.chunker#ChunkerME', 'train(String,ObjectStream,ChunkerContextGenerator,TrainingParameters)')": [
                        233
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkerME', 'train(String,ObjectStream,TrainingParameters,ChunkerFactory)')": [
                        213
                    ],
                    "('opennlp.tools.chunker#ChunkerME', 'train(String,ObjectStream,ChunkerContextGenerator,TrainingParameters)')": [
                        232
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentCategorizerME.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'train(String,ObjectStream,TrainingParameters,FeatureGenerator)')": [
                        162
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'train(String,ObjectStream,TrainingParameters,FeatureGenerator)')": [
                        162
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/AbstractEventTrainer.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'doTrain(DataIndexer)')": [
                        84
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'train(EventStream)')": [
                        86,
                        95
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'doTrain(DataIndexer)')": [
                        84
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'train(EventStream)')": [
                        86,
                        95
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/EventTrainer.java": {
                "old": {
                    "(None, None)": [
                        22,
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        29
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/SequenceTrainer.java": {
                "old": {
                    "(None, None)": [
                        22,
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        29
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/TrainUtil.java": {
                "old": {
                    "('opennlp.tools.ml.model#TrainUtil', 'train(EventStream,Map,Map)')": [
                        44
                    ],
                    "('opennlp.tools.ml.model#TrainUtil', 'train(SequenceStream,Map,Map)')": [
                        69
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#TrainUtil', 'train(EventStream,Map,Map)')": [
                        44
                    ],
                    "('opennlp.tools.ml.model#TrainUtil', 'train(SequenceStream,Map,Map)')": [
                        69
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderME.java": {
                "old": {
                    "(None, None)": [
                        36
                    ],
                    "('opennlp.tools.namefind#NameFinderME', 'train(String,String,ObjectStream,TrainingParameters,AdaptiveFeatureGenerator,Map)')": [
                        361
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderME', 'train(String,String,ObjectStream,TrainingParameters,AdaptiveFeatureGenerator,Map)')": [
                        360
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ParserModel.java": {
                "old": {
                    "(None, None)": [
                        33
                    ],
                    "('opennlp.tools.parser#ParserModel', None)": [
                        144
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('opennlp.tools.parser#ParserModel', None)": [
                        144
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/Parser.java": {
                "old": {
                    "(None, None)": [
                        31,
                        32,
                        33,
                        34
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        297,
                        319
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        297,
                        319
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/Parser.java": {
                "old": {
                    "(None, None)": [
                        32,
                        33,
                        34,
                        35
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        468,
                        478,
                        488
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        468,
                        478,
                        488
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSTaggerME.java": {
                "old": {
                    "(None, None)": [
                        35
                    ],
                    "('opennlp.tools.postag#POSTaggerME', 'train(String,ObjectStream,TrainingParameters,POSTaggerFactory)')": [
                        332
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('opennlp.tools.postag#POSTaggerME', 'train(String,ObjectStream,TrainingParameters,POSTaggerFactory)')": [
                        332
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceDetectorME.java": {
                "old": {
                    "(None, None)": [
                        29,
                        33
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'train(String,ObjectStream,SentenceDetectorFactory,TrainingParameters)')": [
                        312
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'train(String,ObjectStream,SentenceDetectorFactory,TrainingParameters)')": [
                        311
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerME.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenizerME', 'train(ObjectStream,TokenizerFactory,TrainingParameters)')": [
                        250
                    ],
                    "('opennlp.tools.tokenize#TokenizerME', 'train(String,ObjectStream,Dictionary,boolean,TrainingParameters)')": [
                        313
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerME', 'train(ObjectStream,TokenizerFactory,TrainingParameters)')": [
                        250
                    ],
                    "('opennlp.tools.tokenize#TokenizerME', 'train(String,ObjectStream,Dictionary,boolean,TrainingParameters)')": [
                        313
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerModel.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenizerModel', None)": [
                        59,
                        76
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerModel', None)": [
                        59,
                        76
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/MockEventTrainer.java": {
                "old": {
                    "(None, None)": [
                        5
                    ],
                    "('opennlp.tools.ml#MockEventTrainer', 'train(EventStream)')": [
                        10
                    ]
                },
                "new": {
                    "(None, None)": [
                        6
                    ],
                    "('opennlp.tools.ml#MockEventTrainer', 'train(EventStream)')": [
                        10
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/PrepAttachDataUtil.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('opennlp.tools.ml#PrepAttachDataUtil', 'testModel(AbstractModel,double)')": [
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('opennlp.tools.ml#PrepAttachDataUtil', 'testModel(MaxentModel,double)')": [
                        70
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/MaxentPrepAttachTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachDataWithParams')": [
                        66
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachDataWithParamsDefault')": [
                        77
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachDataWithParams')": [
                        67
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachDataWithParamsDefault')": [
                        78
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/perceptron/PerceptronPrepAttachTest.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachData')": [
                        41
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithSkippedAveraging')": [
                        56
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithTolerance')": [
                        70
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithStepSizeDecrease')": [
                        84
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachData')": [
                        41
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithSkippedAveraging')": [
                        56
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithTolerance')": [
                        70
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithStepSizeDecrease')": [
                        84
                    ]
                }
            }
        }
    },
    "7d1557d9ae990fbb9b976990ed4e082c10a109cb": {
        "authored_data": "2013 Sep 19 18:58",
        "commit.message": "OPENNLP-599 Added name types filter to cross validator\n\ngit-svn-id: https://svn.apache.org/repos/asf/opennlp/trunk@1524807 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "a508aea2c9ada099cc5f5caee9aca9f7d51d41b1",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TokenNameFinderCrossValidatorTool.java": {
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderCrossValidatorTool', 'run(String,String)')": [
                        66,
                        67,
                        68,
                        69,
                        70
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TokenNameFinderTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', None)": [
                        44,
                        45,
                        46
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', None)": [
                        44
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TrainingParams.java": {
                "new": {
                    "(None, None)": [
                        44,
                        45,
                        46,
                        47
                    ]
                }
            }
        }
    }
}