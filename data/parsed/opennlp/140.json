{
    "cdcb989749cdc56926c1c99c2c75372f105c92bc": {
        "authored_data": "2017 Sep 11 00:56",
        "commit.message": "OPENNLP-1130 Sentence detector format support for NKJP\n",
        "commit.author.name": "Jim O'Regan",
        "pcid": "a5cb9a4b4a196bd2048cd21ed2fef175bc1181cf",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/StreamFactoryRegistry.java": {
                "new": {
                    "(None, None)": [
                        64
                    ],
                    "('opennlp.tools.cmdline#StreamFactoryRegistry', None)": [
                        132
                    ]
                }
            }
        }
    },
    "a5cb9a4b4a196bd2048cd21ed2fef175bc1181cf": {
        "authored_data": "2017 Dec 12 10:52",
        "commit.message": "OPENNLP-1166: TwoPassDataIndexer fails if features contain \\n\n",
        "commit.author.name": "thygesen",
        "pcid": "7511b06e23d2f330a496f4e133f3b4d5bab35913",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/TwoPassDataIndexer.java": {
                "old": [
                    "JavaSyntaxError",
                    "opennlp-tools/src/main/java/opennlp/tools/ml/model/TwoPassDataIndexer.java",
                    [
                        20,
                        24,
                        25,
                        26,
                        62,
                        63,
                        64,
                        71,
                        72,
                        75,
                        99,
                        107
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "opennlp-tools/src/main/java/opennlp/tools/ml/model/TwoPassDataIndexer.java",
                    [
                        20,
                        21,
                        22,
                        23,
                        24,
                        26,
                        29,
                        65,
                        66,
                        67,
                        68,
                        70,
                        71,
                        77,
                        78,
                        79,
                        80,
                        82,
                        84,
                        85,
                        86,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        117,
                        125,
                        126,
                        127,
                        128,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197
                    ]
                ]
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/model/TwoPassDataIndexerTest.java": {
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        28,
                        29,
                        31,
                        32,
                        34,
                        90,
                        91
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexerTest', None)": [
                        71,
                        72
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexerTest', 'testIndexWithNewline')": [
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ]
                }
            }
        }
    },
    "7511b06e23d2f330a496f4e133f3b4d5bab35913": {
        "authored_data": "2017 Dec 20 01:41",
        "commit.message": "OPENNLP-1171: some tests create temp files and directories but never \u2026 (#298)\n\n* OPENNLP-1171: some tests create temp files and directories but never delete them",
        "commit.author.name": "Koji Sekiguchi",
        "pcid": "489283b8b7322fec0d2d1c0d0add3dfce3075fcf",
        "changes": {
            "opennlp-morfologik-addon/src/test/java/opennlp/morfologik/builder/POSDictionayBuilderTest.java": {
                "new": {
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', 'createMorfologikDictionary')": [
                        39,
                        41
                    ],
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', 'testBuildDictionary')": [
                        79
                    ]
                }
            },
            "opennlp-morfologik-addon/src/test/java/opennlp/morfologik/lemmatizer/MorfologikLemmatizerTest.java": {
                "new": {
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizerTest', 'createDictionary(boolean)')": [
                        65
                    ]
                }
            },
            "opennlp-morfologik-addon/src/test/java/opennlp/morfologik/tagdict/MorfologikTagDictionaryTest.java": {
                "old": {
                    "('opennlp.morfologik.tagdict#MorfologikTagDictionaryTest', 'createDictionary(boolean,List)')": [
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikTagDictionaryTest', 'createDictionary(boolean,List)')": [
                        86,
                        87,
                        88
                    ]
                }
            },
            "opennlp-morfologik-addon/src/test/java/opennlp/morfologik/tagdict/POSTaggerFactoryTest.java": {
                "new": {
                    "('opennlp.morfologik.tagdict#POSTaggerFactoryTest', 'testPOSTaggerWithCustomFactory')": [
                        73
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/cmdline/TokenNameFinderToolTest.java": {
                "old": {
                    "('opennlp.tools.cmdline#TokenNameFinderToolTest', None)": [
                        67
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#TokenNameFinderToolTest', 'run')": [
                        67,
                        68
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/naivebayes/NaiveBayesModelReadWriteTest.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', 'testBinaryModelPersistence')": [
                        58,
                        59,
                        60,
                        61,
                        62,
                        63
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', 'testTextModelPersistence')": [
                        72,
                        73,
                        74,
                        75,
                        76,
                        77
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', 'testBinaryModelPersistence')": [
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', None)": [
                        68
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', 'testTextModelPersistence')": [
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ],
                    "(None, None)": [
                        87
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/naivebayes/NaiveBayesSerializedCorrectnessTest.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesSerializedCorrectnessTest', 'persistedModel(NaiveBayesModel)')": [
                        157,
                        158,
                        159,
                        160,
                        161
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesSerializedCorrectnessTest', 'persistedModel(NaiveBayesModel)')": [
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesSerializedCorrectnessTest', None)": [
                        166
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/TokenNameFinderModelTest.java": {
                "old": {
                    "('opennlp.tools.namefind#TokenNameFinderModelTest', 'testNERWithPOSModel')": [
                        55,
                        97,
                        98,
                        100,
                        102
                    ]
                },
                "new": {
                    "(None, None)": [
                        38,
                        111
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderModelTest', 'testNERWithPOSModel')": [
                        80,
                        81,
                        82,
                        100,
                        101,
                        102,
                        104,
                        106,
                        107,
                        108,
                        109,
                        110
                    ]
                }
            }
        }
    },
    "489283b8b7322fec0d2d1c0d0add3dfce3075fcf": {
        "authored_data": "2017 Dec 19 16:52",
        "commit.message": "OpenNLP-1172: Add AnnotatorNotes to BratDocument\n",
        "commit.author.name": "Daniel Russ",
        "pcid": "50b126dc0eb075a2193b670eb7ae2089896ba283",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratAnnotation.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratAnnotation', None)": [
                        26
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotation', 'toString')": [
                        42
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratAnnotation', None)": [
                        26,
                        27,
                        31,
                        44,
                        45,
                        48,
                        49
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotation', 'setNote(String)')": [
                        42,
                        43
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotation', 'getNote')": [
                        46,
                        47
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotation', 'toString')": [
                        52
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratAnnotationStream.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratAnnotationStream', 'read')": [
                        222,
                        224
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratAnnotationStream', None)": [
                        42,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotationStream', 'read')": [
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        249
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratDocument.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratDocument', None)": [
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('opennlp.tools.formats.brat#BratDocument', None)": [
                        48,
                        50,
                        51,
                        52,
                        53,
                        54,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/brat/BratDocumentTest.java": {
                "new": {
                    "('opennlp.tools.formats.brat#BratDocumentTest', 'testDocumentWithEntitiesParsing')": [
                        50,
                        51,
                        52,
                        53,
                        54
                    ],
                    "('opennlp.tools.formats.brat#BratDocumentTest', None)": [
                        55,
                        56
                    ],
                    "('opennlp.tools.formats.brat#BratDocumentTest', 'checkNote(BratAnnotation,String,String)')": [
                        57,
                        58,
                        59,
                        60,
                        61
                    ],
                    "(None, None)": [
                        62
                    ]
                }
            }
        }
    },
    "50b126dc0eb075a2193b670eb7ae2089896ba283": {
        "authored_data": "2017 Dec 18 13:43",
        "commit.message": "OPENNLP-1169 - WVTable fetches WVs by String (#297)\n\n",
        "commit.author.name": "Tommaso Teofili",
        "pcid": "30b6759387b4402987f6f4a6100fdc78e8bf755f",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/util/wordvector/DoubleArrayVector.java": {
                "old": {
                    "('opennlp.tools.util.wordvector#DoubleArrayVector', None)": [
                        25
                    ]
                },
                "new": {
                    "('opennlp.tools.util.wordvector#DoubleArrayVector', None)": [
                        25
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/wordvector/FloatArrayVector.java": {
                "old": {
                    "('opennlp.tools.util.wordvector#FloatArrayVector', None)": [
                        25
                    ]
                },
                "new": {
                    "('opennlp.tools.util.wordvector#FloatArrayVector', None)": [
                        25
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/wordvector/Glove.java": {
                "old": {
                    "('opennlp.tools.util.wordvector#Glove', None)": [
                        46,
                        47,
                        48
                    ]
                },
                "new": {
                    "('opennlp.tools.util.wordvector#Glove', None)": [
                        46,
                        47,
                        48
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/wordvector/MapWordVectorTable.java": {
                "old": {
                    "('opennlp.tools.util.wordvector#MapWordVectorTable', 'get(CharSequence)')": [
                        31,
                        32
                    ]
                },
                "new": {
                    "('opennlp.tools.util.wordvector#MapWordVectorTable', 'get(String)')": [
                        31,
                        32
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/wordvector/WordVectorTable.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            }
        }
    },
    "30b6759387b4402987f6f4a6100fdc78e8bf755f": {
        "authored_data": "2017 Dec 15 09:49",
        "commit.message": "OPENNLP-1167 - Remove WV#toDouble/FloatArray (#295)\n\n",
        "commit.author.name": "Tommaso Teofili",
        "pcid": "a27bc326901fb19558a2cc4cdd5fd64b000102c2",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/util/wordvector/DoubleArrayVector.java": {
                "old": {
                    "('opennlp.tools.util.wordvector#DoubleArrayVector', 'toFloatArray')": [
                        47,
                        52
                    ],
                    "('opennlp.tools.util.wordvector#DoubleArrayVector', None)": [
                        53,
                        54,
                        55,
                        58,
                        59,
                        60
                    ],
                    "('opennlp.tools.util.wordvector#DoubleArrayVector', 'toDoubleArray')": [
                        56,
                        57
                    ],
                    "('opennlp.tools.util.wordvector#DoubleArrayVector', 'toFloatBuffer')": [
                        61,
                        62
                    ],
                    "('opennlp.tools.util.wordvector#DoubleArrayVector', 'toDoubleBuffer')": [
                        67
                    ]
                },
                "new": {
                    "('opennlp.tools.util.wordvector#DoubleArrayVector', 'toFloatBuffer')": [
                        47,
                        52
                    ],
                    "('opennlp.tools.util.wordvector#DoubleArrayVector', 'toDoubleBuffer')": [
                        57
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/wordvector/FloatArrayVector.java": {
                "old": {
                    "('opennlp.tools.util.wordvector#FloatArrayVector', 'toFloatArray')": [
                        47,
                        48
                    ],
                    "('opennlp.tools.util.wordvector#FloatArrayVector', None)": [
                        49,
                        50,
                        51,
                        58,
                        59,
                        60
                    ],
                    "('opennlp.tools.util.wordvector#FloatArrayVector', 'toDoubleArray')": [
                        52,
                        53,
                        54,
                        55,
                        56,
                        57
                    ],
                    "('opennlp.tools.util.wordvector#FloatArrayVector', 'toDoubleBuffer')": [
                        67
                    ]
                },
                "new": {
                    "('opennlp.tools.util.wordvector#FloatArrayVector', 'toDoubleBuffer')": [
                        53,
                        54,
                        55,
                        56,
                        57
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/wordvector/WordVector.java": {
                "old": {
                    "(None, None)": [
                        38,
                        39,
                        40
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/wordvector/WordVectorTable.java": {
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            }
        }
    },
    "a27bc326901fb19558a2cc4cdd5fd64b000102c2": {
        "authored_data": "2017 Nov 21 11:38",
        "commit.message": "OPENNLP-1155: Remove deprecated leipzig doccat format support\n",
        "commit.author.name": "thygesen",
        "pcid": "1929834c27a931ab505f7a389d38fafd10331d8b",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/StreamFactoryRegistry.java": {
                "old": {
                    "(None, None)": [
                        33
                    ],
                    "('opennlp.tools.cmdline#StreamFactoryRegistry', None)": [
                        108
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/SourceForgeModelEval.java": {
                "old": {
                    "(None, None)": [
                        34,
                        35
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'verifyTrainingData')": [
                        85,
                        87
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalSentenceModel')": [
                        95,
                        103,
                        104,
                        105,
                        106,
                        107,
                        120
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalTokenModel')": [
                        131,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        152
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', None)": [
                        153,
                        154
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'createLineWiseStream')": [
                        155,
                        156
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalNameFinder(TokenNameFinderModel,BigInteger)')": [
                        169,
                        170,
                        171
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalChunkerModel')": [
                        251,
                        252,
                        253
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalPosModel(POSModel,BigInteger)')": [
                        277,
                        278,
                        279
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalParserModel')": [
                        317,
                        318,
                        319
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28,
                        29,
                        53,
                        58,
                        59,
                        62
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', None)": [
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        233,
                        234
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'verifyTrainingData')": [
                        164,
                        166
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalSentenceModel')": [
                        174,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        200
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalTokenModel')": [
                        211,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        232
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'createLineWiseStream')": [
                        235,
                        236,
                        237
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalNameFinder(TokenNameFinderModel,BigInteger)')": [
                        250,
                        251,
                        252
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalChunkerModel')": [
                        332,
                        333,
                        334
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalPosModel(POSModel,BigInteger)')": [
                        358,
                        359,
                        360
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalParserModel')": [
                        398,
                        399,
                        400
                    ]
                }
            }
        }
    },
    "1929834c27a931ab505f7a389d38fafd10331d8b": {
        "authored_data": "2017 Dec 04 09:34",
        "commit.message": "OPENNLP-1165: Add id to overlapping annotation exception in NameSample\n",
        "commit.author.name": "thygesen",
        "pcid": "db642a3c3ad93606d27d6e277b529da3a50057e6",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameSample.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSample', None)": [
                        79,
                        80
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSample', None)": [
                        79,
                        80
                    ]
                }
            }
        }
    },
    "db642a3c3ad93606d27d6e277b529da3a50057e6": {
        "authored_data": "2017 Nov 21 20:50",
        "commit.message": "OpenNLP-1158: Made NameAnn field public for JSON serialization\n\n",
        "commit.author.name": "danielruss",
        "pcid": "b50e3db7b1e701a4474d862d46375f4187f16b79",
        "changes": {
            "opennlp-brat-annotator/src/main/java/opennlp/bratann/NameFinderResource.java": {
                "old": {
                    "('opennlp.bratann#NameFinderResource', None)": [
                        134,
                        135,
                        136
                    ]
                },
                "new": {
                    "('opennlp.bratann#NameFinderResource', None)": [
                        134,
                        135,
                        136
                    ]
                }
            }
        }
    },
    "b50e3db7b1e701a4474d862d46375f4187f16b79": {
        "authored_data": "2017 Nov 21 08:38",
        "commit.message": "OPENNLP-652 Add 20 Newsgroup format support\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "9240d7b41edebd7cef460e65abfe819e3e728fea",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/StreamFactoryRegistry.java": {
                "new": {
                    "(None, None)": [
                        39
                    ],
                    "('opennlp.tools.cmdline#StreamFactoryRegistry', None)": [
                        114
                    ]
                }
            }
        }
    }
}