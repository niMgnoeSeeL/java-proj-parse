{
    "e8748c59ff068f605be9e1c205ca2fa1232a4325": {
        "authored_data": "2011 Aug 24 10:17",
        "commit.message": "OPENNLP-269 Added warning, fixed null dereference.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1161039 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "9f6d97c2c58a9d6dd07bb29c2d70d6e55c398a8a",
        "changes": {
            "opennlp-uima/src/main/java/opennlp/uima/doccat/DocumentCategorizerTrainer.java": {
                "old": {
                    "(None, None)": [
                        50,
                        51
                    ],
                    "('opennlp.uima.doccat#DocumentCategorizerTrainer', None)": [
                        61
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        51
                    ],
                    "('opennlp.uima.doccat#DocumentCategorizerTrainer', None)": [
                        61
                    ]
                }
            }
        }
    },
    "9f6d97c2c58a9d6dd07bb29c2d70d6e55c398a8a": {
        "authored_data": "2011 Aug 24 10:10",
        "commit.message": "No jira, removed useless operation on an immutable string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1161036 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "67d87386ade902140ba12f2ea354cc3a8570a04d",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/util/TrainingParameters.java": {
                "old": {
                    "('opennlp.tools.util#TrainingParameters', 'getSettings(String)')": [
                        86
                    ]
                }
            }
        }
    },
    "67d87386ade902140ba12f2ea354cc3a8570a04d": {
        "authored_data": "2011 Aug 24 09:59",
        "commit.message": "OPENNLP-268 Make constants in StringPattern final\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1161033 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "9ab7b811540d5447d27542775e0fc7f73bbdfaec",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/StringPattern.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#StringPattern', None)": [
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#StringPattern', None)": [
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36
                    ]
                }
            }
        }
    },
    "9ab7b811540d5447d27542775e0fc7f73bbdfaec": {
        "authored_data": "2011 Aug 24 08:54",
        "commit.message": "OPENNLP-266 Code Cleanup: Organize imports\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1161018 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "000431f1f5274ab677e01a25ac6f5efd125ed6fa",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/formats/BioNLP2004NameSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll03NameSampleStream.java": {
                "old": {
                    "(None, None)": [
                        28,
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19,
                        25
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll03NameSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        25
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderEventStream.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/Parse.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        29
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/BuildContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/Parser.java": {
                "old": {
                    "(None, None)": [
                        48,
                        52,
                        53
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/Parser.java": {
                "old": {
                    "(None, None)": [
                        41,
                        51,
                        53
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/ParserEventStream.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/DictionaryFeatureGenerator.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                }
            }
        }
    },
    "000431f1f5274ab677e01a25ac6f5efd125ed6fa": {
        "authored_data": "2011 Aug 24 08:47",
        "commit.message": "OPENNLP-265 Code Cleanup: Add missing '@Override' annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1161012 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "ba445c3e2036535158faa04dc139f1ce059824ce",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/TerminateToolException.java": {
                "new": {
                    "('opennlp.tools.cmdline#TerminateToolException', None)": [
                        48
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/chunker/ChunkEvaluationErrorListener.java": {
                "new": {
                    "('opennlp.tools.cmdline.chunker#ChunkEvaluationErrorListener', None)": [
                        49
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/NameEvaluationErrorListener.java": {
                "new": {
                    "('opennlp.tools.cmdline.namefind#NameEvaluationErrorListener', None)": [
                        49
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/postag/POSEvaluationErrorListener.java": {
                "new": {
                    "('opennlp.tools.cmdline.postag#POSEvaluationErrorListener', None)": [
                        49
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/sentdetect/SentenceEvaluationErrorListener.java": {
                "new": {
                    "('opennlp.tools.cmdline.sentdetect#SentenceEvaluationErrorListener', None)": [
                        50
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/tokenizer/TokenEvaluationErrorListener.java": {
                "new": {
                    "('opennlp.tools.cmdline.tokenizer#TokenEvaluationErrorListener', None)": [
                        49
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/DefaultLinker.java": {
                "new": {
                    "('opennlp.tools.coref#DefaultLinker', None)": [
                        173,
                        178
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/DiscourseElement.java": {
                "new": {
                    "('opennlp.tools.coref#DiscourseElement', None)": [
                        112
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/mention/Mention.java": {
                "new": {
                    "('opennlp.tools.coref.mention#Mention', None)": [
                        155
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/resolver/CommonNounResolver.java": {
                "new": {
                    "('opennlp.tools.coref.resolver#CommonNounResolver', None)": [
                        44,
                        62
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/resolver/DefiniteNounResolver.java": {
                "new": {
                    "('opennlp.tools.coref.resolver#DefiniteNounResolver', None)": [
                        54
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/resolver/IsAResolver.java": {
                "new": {
                    "('opennlp.tools.coref.resolver#IsAResolver', None)": [
                        57,
                        84,
                        90,
                        95
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/resolver/MaxentResolver.java": {
                "new": {
                    "('opennlp.tools.coref.resolver#MaxentResolver', None)": [
                        227,
                        305,
                        326
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/resolver/PerfectResolver.java": {
                "new": {
                    "('opennlp.tools.coref.resolver#PerfectResolver', None)": [
                        37
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/resolver/PluralNounResolver.java": {
                "new": {
                    "('opennlp.tools.coref.resolver#PluralNounResolver', None)": [
                        44,
                        63
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/resolver/PluralPronounResolver.java": {
                "new": {
                    "('opennlp.tools.coref.resolver#PluralPronounResolver', None)": [
                        42,
                        81
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/resolver/ProperNounResolver.java": {
                "new": {
                    "('opennlp.tools.coref.resolver#ProperNounResolver', None)": [
                        118,
                        130
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/resolver/SingletonNonReferentialResolver.java": {
                "new": {
                    "('opennlp.tools.coref.resolver#SingletonNonReferentialResolver', None)": [
                        44
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/resolver/SingularPronounResolver.java": {
                "new": {
                    "('opennlp.tools.coref.resolver#SingularPronounResolver', None)": [
                        54,
                        102,
                        125
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/resolver/SpeechPronounResolver.java": {
                "new": {
                    "('opennlp.tools.coref.resolver#SpeechPronounResolver', None)": [
                        46,
                        74,
                        87
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/sim/Context.java": {
                "new": {
                    "('opennlp.tools.coref.sim#Context', None)": [
                        90
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/sim/GenderEnum.java": {
                "new": {
                    "('opennlp.tools.coref.sim#GenderEnum', None)": [
                        39
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/sim/NumberEnum.java": {
                "new": {
                    "('opennlp.tools.coref.sim#NumberEnum', None)": [
                        46
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/sim/SemanticEnum.java": {
                "new": {
                    "('opennlp.tools.coref.sim#SemanticEnum', None)": [
                        35
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/Dictionary.java": {
                "new": {
                    "('opennlp.tools.dictionary#Dictionary', None)": [
                        56,
                        81,
                        87,
                        221,
                        241,
                        246
                    ],
                    "('opennlp.tools.dictionary#Dictionary', 'asStringSet')": [
                        298
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentCategorizerEvaluator.java": {
                "new": {
                    "('opennlp.tools.doccat#DocumentCategorizerEvaluator', None)": [
                        104
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADSentenceStream.java": {
                "new": {
                    "('opennlp.tools.formats.ad#ADSentenceStream', None)": [
                        391
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lang/english/TreebankLinker.java": {
                "new": {
                    "('opennlp.tools.lang.english#TreebankLinker', None)": [
                        64
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameSample.java": {
                "new": {
                    "('opennlp.tools.namefind#NameSample', None)": [
                        120
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderModel.java": {
                "new": {
                    "('opennlp.tools.namefind#TokenNameFinderModel', None)": [
                        241
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ngram/NGramModel.java": {
                "new": {
                    "('opennlp.tools.ngram#NGramModel', None)": [
                        340,
                        359,
                        364
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/Parse.java": {
                "new": {
                    "('opennlp.tools.parser#Parse', None)": [
                        959,
                        987
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/Parser.java": {
                "new": {
                    "('opennlp.tools.parser.chunking#Parser', None)": [
                        142,
                        151
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/ParserEventStream.java": {
                "new": {
                    "('opennlp.tools.parser.chunking#ParserEventStream', None)": [
                        55,
                        121
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/Parser.java": {
                "new": {
                    "('opennlp.tools.parser.treeinsert#Parser', None)": [
                        224,
                        236,
                        438
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/ParserEventStream.java": {
                "new": {
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', None)": [
                        56,
                        114,
                        130
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSEvaluator.java": {
                "new": {
                    "('opennlp.tools.postag#POSEvaluator', None)": [
                        100
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/lang/th/SentenceContextGenerator.java": {
                "new": {
                    "('opennlp.tools.sentdetect.lang.th#SentenceContextGenerator', None)": [
                        34
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/SimpleTokenizer.java": {
                "new": {
                    "('opennlp.tools.tokenize#CharacterEnum', None)": [
                        135
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokSpanEventStream.java": {
                "new": {
                    "('opennlp.tools.tokenize#TokSpanEventStream', None)": [
                        97
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/Cache.java": {
                "new": {
                    "('opennlp.tools.util#DoubleLinkedList', None)": [
                        337
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/HashList.java": {
                "new": {
                    "('opennlp.tools.util#HashList', None)": [
                        62
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/Sequence.java": {
                "new": {
                    "('opennlp.tools.util#Sequence', None)": [
                        112
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/Span.java": {
                "new": {
                    "('opennlp.tools.util#Span', None)": [
                        211,
                        229,
                        255
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/StringList.java": {
                "new": {
                    "('opennlp.tools.util#StringList', None)": [
                        147,
                        167,
                        196
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/Version.java": {
                "new": {
                    "('opennlp.tools.util#Version', None)": [
                        121
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/CachedFeatureGenerator.java": {
                "new": {
                    "('opennlp.tools.util.featuregen#CachedFeatureGenerator', None)": [
                        101
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/WindowFeatureGenerator.java": {
                "new": {
                    "('opennlp.tools.util.featuregen#WindowFeatureGenerator', None)": [
                        127
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/ModelUtil.java": {
                "new": {
                    "('opennlp.tools.util.model#ModelUtil', 'writeModel(AbstractModel,OutputStream)')": [
                        65
                    ]
                }
            }
        }
    },
    "ba445c3e2036535158faa04dc139f1ce059824ce": {
        "authored_data": "2011 Aug 24 08:42",
        "commit.message": "No jira, added missing deprecated annotation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1161009 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "5b218da5afb970bcb3081b5b43517a31b6ff41cc",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerME.java": {
                "new": {
                    "('opennlp.tools.tokenize#TokenizerME', None)": [
                        94
                    ]
                }
            }
        }
    },
    "5b218da5afb970bcb3081b5b43517a31b6ff41cc": {
        "authored_data": "2011 Aug 24 08:36",
        "commit.message": "OPENNLP-264 Code Cleanup: Remove unnecessary casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1161001 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "cf27ec82a34e1fc8f302794be2dbe2405730b16e",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkerME.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkerME', 'chunk(List,List)')": [
                        149
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkerME', 'chunk(List,List)')": [
                        149
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/parser/ParserTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.parser#ParserTool', 'parseLine(String,opennlp,int)')": [
                        78
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.parser#ParserTool', 'parseLine(String,opennlp,int)')": [
                        78
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/DiscourseElement.java": {
                "old": {
                    "('opennlp.tools.coref#DiscourseElement', 'toString')": [
                        114,
                        118
                    ]
                },
                "new": {
                    "('opennlp.tools.coref#DiscourseElement', 'toString')": [
                        114,
                        118
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/mention/AbstractMentionFinder.java": {
                "old": {
                    "('opennlp.tools.coref.mention#AbstractMentionFinder', 'collectCoordinatedNounPhraseMentions(Parse,List)')": [
                        144
                    ]
                },
                "new": {
                    "('opennlp.tools.coref.mention#AbstractMentionFinder', 'collectCoordinatedNounPhraseMentions(Parse,List)')": [
                        144
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/Dictionary.java": {
                "old": {
                    "('opennlp.tools.dictionary#Dictionary', 'serialize(OutputStream)')": [
                        204,
                        205
                    ]
                },
                "new": {
                    "('opennlp.tools.dictionary#Dictionary', 'serialize(OutputStream)')": [
                        204
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/Index.java": {
                "old": {
                    "('opennlp.tools.dictionary#Index', None)": [
                        45
                    ]
                },
                "new": {
                    "('opennlp.tools.dictionary#Index', None)": [
                        45
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lang/english/TreebankLinker.java": {
                "old": {
                    "('opennlp.tools.lang.english#TreebankLinker', 'main(String)')": [
                        99,
                        127
                    ],
                    "('opennlp.tools.lang.english#CorefParse', None)": [
                        145
                    ],
                    "('opennlp.tools.lang.english#CorefParse', 'show')": [
                        156
                    ]
                },
                "new": {
                    "('opennlp.tools.lang.english#TreebankLinker', 'main(String)')": [
                        99,
                        127
                    ],
                    "('opennlp.tools.lang.english#CorefParse', None)": [
                        145
                    ],
                    "('opennlp.tools.lang.english#CorefParse', 'show')": [
                        156
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/DictionaryNameFinder.java": {
                "old": {
                    "('opennlp.tools.namefind#DictionaryNameFinder', 'find(String)')": [
                        86
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#DictionaryNameFinder', 'find(String)')": [
                        86
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderEventStream.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderEventStream', 'generateEvents(String,String,NameContextGenerator)')": [
                        105
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStream', 'additionalContext(String,Map)')": [
                        141
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderEventStream', 'generateEvents(String,String,NameContextGenerator)')": [
                        105
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStream', 'additionalContext(String,Map)')": [
                        141
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderME.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderME', 'find(String,String)')": [
                        223,
                        229
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderME', 'find(String,String)')": [
                        223,
                        229
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameSampleSequenceStream.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSampleSequenceStream', 'updateContext(Sequence,AbstractModel)')": [
                        64
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceIterator', 'next')": [
                        97
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSampleSequenceStream', 'updateContext(Sequence,AbstractModel)')": [
                        64
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceIterator', 'next')": [
                        97
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/RegexNameFinder.java": {
                "old": {
                    "('opennlp.tools.namefind#RegexNameFinder', 'find(String)')": [
                        73,
                        75,
                        86
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#RegexNameFinder', 'find(String)')": [
                        73,
                        75,
                        86
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ngram/NGramModel.java": {
                "old": {
                    "('opennlp.tools.ngram#NGramModel', 'getCount(StringList)')": [
                        97
                    ],
                    "('opennlp.tools.ngram#NGramModel', 'setCount(StringList,int)')": [
                        114
                    ],
                    "('opennlp.tools.ngram#NGramModel', 'cutoff(int,int)')": [
                        259
                    ],
                    "('opennlp.tools.ngram#NGramModel', 'toDictionary(boolean)')": [
                        298
                    ],
                    "('opennlp.tools.ngram#NGramModel', 'serialize(OutputStream)')": [
                        322
                    ]
                },
                "new": {
                    "('opennlp.tools.ngram#NGramModel', 'getCount(StringList)')": [
                        97
                    ],
                    "('opennlp.tools.ngram#NGramModel', 'setCount(StringList,int)')": [
                        114
                    ],
                    "('opennlp.tools.ngram#NGramModel', 'cutoff(int,int)')": [
                        259
                    ],
                    "('opennlp.tools.ngram#NGramModel', 'toDictionary(boolean)')": [
                        298
                    ],
                    "('opennlp.tools.ngram#NGramModel', 'serialize(OutputStream)')": [
                        322
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/lang/en/HeadRules.java": {
                "old": {
                    "('opennlp.tools.parser.lang.en#HeadRules', 'getHead(Parse,String)')": [
                        150
                    ],
                    "('opennlp.tools.parser.lang.en#HeadRules', 'labelGaps(Stack)')": [
                        199,
                        200,
                        201,
                        202
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.lang.en#HeadRules', 'getHead(Parse,String)')": [
                        150
                    ],
                    "('opennlp.tools.parser.lang.en#HeadRules', 'labelGaps(Stack)')": [
                        199,
                        200,
                        201,
                        202
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/AttachContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'containsPunct(Collection,String)')": [
                        46
                    ],
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'getContext(Parse,int,List,int)')": [
                        65,
                        68,
                        72,
                        168
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'containsPunct(Collection,String)')": [
                        46
                    ],
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'getContext(Parse,int,List,int)')": [
                        65,
                        68,
                        72,
                        168
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/BuildContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#BuildContextGenerator', 'getContext(Parse,int)')": [
                        149
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#BuildContextGenerator', 'getContext(Parse,int)')": [
                        149
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/CheckContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#CheckContextGenerator', 'getContext(Parse,Parse,int,boolean)')": [
                        107
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#CheckContextGenerator', 'getContext(Parse,Parse,int,boolean)')": [
                        107
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/Parser.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#Parser', 'advanceParses(Parse,double)')": [
                        348,
                        374,
                        380,
                        391
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#Parser', 'advanceParses(Parse,double)')": [
                        348,
                        374,
                        380,
                        391
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/ParserEventStream.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'addParseEvents(List,Parse)')": [
                        216,
                        217,
                        219,
                        242,
                        243,
                        274,
                        277,
                        290,
                        293,
                        302
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'addParseEvents(List,Parse)')": [
                        216,
                        217,
                        219,
                        242,
                        243,
                        274,
                        277,
                        290,
                        293,
                        302
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/DefaultPOSContextGenerator.java": {
                "old": {
                    "('opennlp.tools.postag#DefaultPOSContextGenerator', 'getContext(int,Object,String)')": [
                        193
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#DefaultPOSContextGenerator', 'getContext(int,Object,String)')": [
                        193
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSSampleSequenceStream.java": {
                "old": {
                    "('opennlp.tools.postag#POSSampleSequenceStream', 'updateContext(Sequence,AbstractModel)')": [
                        55
                    ],
                    "('opennlp.tools.postag#POSSampleSequenceIterator', 'next')": [
                        86
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSSampleSequenceStream', 'updateContext(Sequence,AbstractModel)')": [
                        55
                    ],
                    "('opennlp.tools.postag#POSSampleSequenceIterator', 'next')": [
                        86
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/DefaultSDContextGenerator.java": {
                "old": {
                    "('opennlp.tools.sentdetect#DefaultSDContextGenerator', 'getContext(CharSequence,int)')": [
                        151
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#DefaultSDContextGenerator', 'getContext(CharSequence,int)')": [
                        151
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceDetectorME.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'getSentenceProbabilities')": [
                        247
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'getSentenceProbabilities')": [
                        247
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/SimpleTokenizer.java": {
                "old": {
                    "('opennlp.tools.tokenize#SimpleTokenizer', 'tokenizePos(String)')": [
                        86
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#SimpleTokenizer', 'tokenizePos(String)')": [
                        86
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenSample.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenSample', 'parse(String,String)')": [
                        196
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenSample', 'parse(String,String)')": [
                        196
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/BeamSearch.java": {
                "old": {
                    "('opennlp.tools.util#BeamSearch', 'bestSequences(int,T,Object,double)')": [
                        122,
                        124,
                        183
                    ]
                },
                "new": {
                    "('opennlp.tools.util#BeamSearch', 'bestSequences(int,T,Object,double)')": [
                        122,
                        124,
                        183
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/CountedSet.java": {
                "old": {
                    "('opennlp.tools.util#CountedSet', 'add(E)')": [
                        58
                    ],
                    "('opennlp.tools.util#CountedSet', 'getCount(E)')": [
                        105
                    ]
                },
                "new": {
                    "('opennlp.tools.util#CountedSet', 'add(E)')": [
                        58
                    ],
                    "('opennlp.tools.util#CountedSet', 'getCount(E)')": [
                        105
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/CharacterNgramFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#CharacterNgramFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        55
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#CharacterNgramFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        55
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/PreviousMapFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#PreviousMapFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        32
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#PreviousMapFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        32
                    ]
                }
            }
        }
    },
    "cf27ec82a34e1fc8f302794be2dbe2405730b16e": {
        "authored_data": "2011 Aug 23 23:00",
        "commit.message": "OPENNLP-226 Evaluator create a copy of the monitors list.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1160921 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "William Colen",
        "pcid": "7cc9003d2c2a39f6f73c0cef14a6c19a125f05ca",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/util/eval/Evaluator.java": {
                "old": {
                    "('opennlp.tools.util.eval#Evaluator', None)": [
                        33,
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('opennlp.tools.util.eval#Evaluator', None)": [
                        35,
                        38,
                        39,
                        40
                    ]
                }
            }
        }
    },
    "7cc9003d2c2a39f6f73c0cef14a6c19a125f05ca": {
        "authored_data": "2011 Aug 23 22:29",
        "commit.message": "OPENNLP-226 Moved one constructor up in the class to make code from top to down readable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1160908 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "96b278d06c66db380c6104f2ea5cccfc89804ec2",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerCrossValidator.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenizerCrossValidator', None)": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerCrossValidator', None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49
                    ]
                }
            }
        }
    },
    "96b278d06c66db380c6104f2ea5cccfc89804ec2": {
        "authored_data": "2011 Aug 23 22:28",
        "commit.message": "OPENNLP-226 Moved one constructor up in the class to make code from top to down readable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1160907 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "8484721028202edb34b60942c6cfab1263616125",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SDCrossValidator.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SDCrossValidator', None)": [
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SDCrossValidator', None)": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51
                    ]
                }
            }
        }
    }
}