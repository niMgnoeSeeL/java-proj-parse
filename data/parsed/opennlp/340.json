{
    "8e610f183caf1829337559e63a68c6a7d4f1ba05": {
        "authored_data": "2017 Feb 17 11:32",
        "commit.message": "OPENNLP-982: Allow loading of 1.5.x models\n\nThis closes #129\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "33871c3db6d870f460636f6205bc23f8d48fdd4d",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/util/model/BaseModel.java": {
                "old": {
                    "('opennlp.tools.util.model#BaseModel', 'validateArtifactMap')": [
                        419
                    ]
                },
                "new": {
                    "('opennlp.tools.util.model#BaseModel', 'validateArtifactMap')": [
                        419
                    ]
                }
            }
        }
    },
    "33871c3db6d870f460636f6205bc23f8d48fdd4d": {
        "authored_data": "2017 Jan 29 10:06",
        "commit.message": "OPENNLP-176: Switch language codes to ISO-639-3\n\nThis closes #114\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "bbd6d3fc4178d9209e3e53868ce4ec9b74679f3b",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/CensusDictionaryCreatorTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.namefind#CensusDictionaryCreatorTool', None)": [
                        53
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.namefind#CensusDictionaryCreatorTool', None)": [
                        53
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/parser/ParserTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.parser#ParserTrainerTool', 'creaeHeadRules(TrainerToolParams)')": [
                        93,
                        96
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.parser#ParserTrainerTool', 'creaeHeadRules(TrainerToolParams)')": [
                        93,
                        96
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/AbstractSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats#AbstractSampleStreamFactory', 'getLang')": [
                        37
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#AbstractSampleStreamFactory', 'getLang')": [
                        37
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll03NameSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats#Conll03NameSampleStreamFactory', None)": [
                        35
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStreamFactory', 'create(String)')": [
                        57,
                        61
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#Conll03NameSampleStreamFactory', None)": [
                        35
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStreamFactory', 'create(String)')": [
                        57,
                        61
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/lang/Factory.java": {
                "old": {
                    "('opennlp.tools.sentdetect.lang#Factory', 'createSentenceContextGenerator(String,Set)')": [
                        52,
                        54
                    ],
                    "('opennlp.tools.sentdetect.lang#Factory', 'getEOSCharacters(String)')": [
                        71,
                        73,
                        75
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect.lang#Factory', 'createSentenceContextGenerator(String,Set)')": [
                        52,
                        54
                    ],
                    "('opennlp.tools.sentdetect.lang#Factory', 'getEOSCharacters(String)')": [
                        71,
                        73,
                        75
                    ]
                }
            }
        }
    },
    "bbd6d3fc4178d9209e3e53868ce4ec9b74679f3b": {
        "authored_data": "2017 Feb 16 11:48",
        "commit.message": "OPENNLP-990 Fix all array style violations and add a checkstyle rule\n\nThis closes #127\n",
        "commit.author.name": "Peter Thygesen",
        "pcid": "b7d3abce569b5a4bf0ae39b24c6ac9920032db01",
        "changes": {
            "opennlp-brat-annotator/src/main/java/opennlp/bratann/NameFinderAnnService.java": {
                "old": {
                    "('opennlp.bratann#NameFinderAnnService', None)": [
                        47
                    ]
                },
                "new": {
                    "('opennlp.bratann#NameFinderAnnService', None)": [
                        47
                    ]
                }
            },
            "opennlp-brat-annotator/src/main/java/opennlp/bratann/NameFinderResource.java": {
                "old": {
                    "('opennlp.bratann#NameFinderResource', None)": [
                        42
                    ],
                    "('opennlp.bratann#NameFinderResource', 'findNames(String,String)')": [
                        69,
                        72
                    ]
                },
                "new": {
                    "('opennlp.bratann#NameFinderResource', None)": [
                        42
                    ],
                    "('opennlp.bratann#NameFinderResource', 'findNames(String,String)')": [
                        69,
                        72
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/cmdline/CLI.java": {
                "old": {
                    "('opennlp.morfologik.cmdline#CLI', 'main(String)')": [
                        104
                    ]
                },
                "new": {
                    "('opennlp.morfologik.cmdline#CLI', 'main(String)')": [
                        104
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkSampleSequenceStream.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkSampleSequenceStream', 'read')": [
                        44,
                        45
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkSampleSequenceStream', 'read')": [
                        44,
                        45
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/Chunker.java": {
                "old": {
                    "(None, None)": [
                        36,
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        46
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/AbstractConverterTool.java": {
                "old": {
                    "('opennlp.tools.cmdline#AbstractConverterTool', 'run(String,String)')": [
                        92
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#AbstractConverterTool', 'run(String,String)')": [
                        92
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/ArgumentParser.java": {
                "old": {
                    "('opennlp.tools.cmdline#ArgumentParser', 'checkProxyInterfaces(Class)')": [
                        172
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'methodNameToParameter(String)')": [
                        207
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'validateArguments(String,Class)')": [
                        388,
                        401
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'validateArgumentsLoudly(String,Class)')": [
                        412,
                        423
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'parse(String,Class)')": [
                        481
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'filter(String,Class)')": [
                        536
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#ArgumentParser', 'checkProxyInterfaces(Class)')": [
                        172
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'methodNameToParameter(String)')": [
                        207
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'validateArguments(String,Class)')": [
                        388,
                        401
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'validateArgumentsLoudly(String,Class)')": [
                        412,
                        423
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'parse(String,Class)')": [
                        481
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'filter(String,Class)')": [
                        536
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/BasicCmdLineTool.java": {
                "old": {
                    "('opennlp.tools.cmdline#BasicCmdLineTool', 'run(String)')": [
                        32
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#BasicCmdLineTool', 'run(String)')": [
                        32
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/CLI.java": {
                "old": {
                    "('opennlp.tools.cmdline#CLI', 'main(String)')": [
                        213
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#CLI', 'main(String)')": [
                        213
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/CmdLineUtil.java": {
                "old": {
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getParameterIndex(String,String)')": [
                        207
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getParameter(String,String)')": [
                        224
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getIntParameter(String,String)')": [
                        243
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getDoubleParameter(String,String)')": [
                        264
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'containsParam(String,String)')": [
                        289
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getParameterIndex(String,String)')": [
                        207
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getParameter(String,String)')": [
                        224
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getIntParameter(String,String)')": [
                        243
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getDoubleParameter(String,String)')": [
                        264
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'containsParam(String,String)')": [
                        289
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/EvaluationErrorPrinter.java": {
                "old": {
                    "('opennlp.tools.cmdline#EvaluationErrorPrinter', 'printError(Span,Span,T,T,String)')": [
                        41,
                        78
                    ],
                    "('opennlp.tools.cmdline#EvaluationErrorPrinter', 'printError(String,Span,Span,T,T,String)')": [
                        58
                    ],
                    "('opennlp.tools.cmdline#EvaluationErrorPrinter', 'printError(String,String,T,T,String)')": [
                        84
                    ],
                    "('opennlp.tools.cmdline#EvaluationErrorPrinter', 'findErrors(Span,Span,List,List)')": [
                        216
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#EvaluationErrorPrinter', 'printError(Span,Span,T,T,String)')": [
                        41,
                        78
                    ],
                    "('opennlp.tools.cmdline#EvaluationErrorPrinter', 'printError(String,Span,Span,T,T,String)')": [
                        58
                    ],
                    "('opennlp.tools.cmdline#EvaluationErrorPrinter', 'printError(String,String,T,T,String)')": [
                        84
                    ],
                    "('opennlp.tools.cmdline#EvaluationErrorPrinter', 'findErrors(Span,Span,List,List)')": [
                        216
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/FineGrainedReportListener.java": {
                "old": {
                    "('opennlp.tools.cmdline#FineGrainedReportListener', 'generateAlphaLabel(int)')": [
                        63
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#FineGrainedReportListener', 'generateAlphaLabel(int)')": [
                        63
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/ObjectStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        39
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/TypedCmdLineTool.java": {
                "old": {
                    "('opennlp.tools.cmdline#TypedCmdLineTool', 'run(String,String)')": [
                        119
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#TypedCmdLineTool', 'run(String,String)')": [
                        119
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/doccat/DoccatTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.doccat#DoccatTool', 'run(String)')": [
                        73
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.doccat#DoccatTool', 'run(String)')": [
                        73
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/entitylinker/EntityLinkerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.entitylinker#EntityLinkerTool', 'run(String)')": [
                        96
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.entitylinker#EntityLinkerTool', 'run(String)')": [
                        96
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TokenNameFinderCrossValidatorTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderCrossValidatorTool', 'run(String,String)')": [
                        71,
                        78
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderCrossValidatorTool', 'run(String,String)')": [
                        71,
                        78
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TokenNameFinderEvaluatorTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderEvaluatorTool', 'run(String,String)')": [
                        99
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderEvaluatorTool', 'run(String,String)')": [
                        99
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TokenNameFinderTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTool', 'run(String)')": [
                        56,
                        74,
                        93
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTool', 'run(String)')": [
                        56,
                        74,
                        93
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TokenNameFinderTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', 'openFeatureGeneratorBytes(File)')": [
                        71
                    ],
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', 'loadResources(File,File)')": [
                        121
                    ],
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', 'run(String,String)')": [
                        175,
                        187
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', 'openFeatureGeneratorBytes(File)')": [
                        71
                    ],
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', 'loadResources(File,File)')": [
                        121
                    ],
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', 'run(String,String)')": [
                        175,
                        187
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/postag/POSTaggerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.postag#POSTaggerTool', 'run(String)')": [
                        66
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.postag#POSTaggerTool', 'run(String)')": [
                        66
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/tokenizer/DictionaryDetokenizerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.tokenizer#DictionaryDetokenizerTool', 'run(String)')": [
                        61
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.tokenizer#DictionaryDetokenizerTool', 'run(String)')": [
                        61
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/Dictionary.java": {
                "old": {
                    "('opennlp.tools.dictionary#Dictionary', 'parseOneEntryPerLine(Reader)')": [
                        278
                    ]
                },
                "new": {
                    "('opennlp.tools.dictionary#Dictionary', 'parseOneEntryPerLine(Reader)')": [
                        278
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentCategorizer.java": {
                "old": {
                    "(None, None)": [
                        35,
                        46,
                        104
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        46,
                        104
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentCategorizerContextGenerator.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentCategorizerContextGenerator', 'getContext(String,Map)')": [
                        35
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DocumentCategorizerContextGenerator', 'getContext(String,Map)')": [
                        35
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentCategorizerEvaluator.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentCategorizerEvaluator', 'processSample(DocumentSample)')": [
                        60,
                        62
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DocumentCategorizerEvaluator', 'processSample(DocumentSample)')": [
                        60,
                        62
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentCategorizerME.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'categorize(String)')": [
                        88
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'getAllResults(double)')": [
                        228
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'categorize(String)')": [
                        88
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'getAllResults(double)')": [
                        228
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentSample.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentSample', None)": [
                        42,
                        46
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DocumentSample', None)": [
                        42,
                        46
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentSampleStream.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentSampleStream', 'read')": [
                        48,
                        54
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DocumentSampleStream', 'read')": [
                        48,
                        54
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/BioNLP2004NameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#BioNLP2004NameSampleStream', 'read')": [
                        90
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#BioNLP2004NameSampleStream', 'read')": [
                        90
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll02NameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#Conll02NameSampleStream', 'read')": [
                        128
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#Conll02NameSampleStream', 'read')": [
                        128
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll03NameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#Conll03NameSampleStream', 'read')": [
                        96
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#Conll03NameSampleStream', 'read')": [
                        96
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ConllXPOSSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#ConllXPOSSampleStream', 'read')": [
                        79
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#ConllXPOSSampleStream', 'read')": [
                        79
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/DirectorySampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#DirectorySampleStream', None)": [
                        46
                    ],
                    "('opennlp.tools.formats#DirectorySampleStream', 'read')": [
                        76
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#DirectorySampleStream', None)": [
                        46
                    ],
                    "('opennlp.tools.formats#DirectorySampleStream', 'read')": [
                        76
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/EvalitaNameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#EvalitaNameSampleStream', 'read')": [
                        141
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#EvalitaNameSampleStream', 'read')": [
                        141
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/LeipzigDoccatSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#LeipzigDoccatSampleStream', 'read')": [
                        90
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#LeipzigDoccatSampleStream', 'read')": [
                        90
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/LeipzigDocumentSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats#LeipzigDocumentSampleStreamFactory', 'create(String)')": [
                        54,
                        62
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#LeipzigDocumentSampleStreamFactory', 'create(String)')": [
                        54,
                        62
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratAnnotationStream.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratAnnotationStream', None)": [
                        43,
                        63,
                        114,
                        125
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotationStream', 'read')": [
                        197
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratAnnotationStream', None)": [
                        43,
                        63,
                        114,
                        125
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotationStream', 'read')": [
                        197
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratDocument.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratDocument', 'parseDocument(AnnotationConfiguration,String,InputStream,InputStream)')": [
                        81
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratDocument', 'parseDocument(AnnotationConfiguration,String,InputStream,InputStream)')": [
                        81
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratNameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratNameSampleStream', 'read(BratDocument)')": [
                        114
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratNameSampleStream', 'read(BratDocument)')": [
                        114
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/convert/FileToByteArraySampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.convert#FileToByteArraySampleStream', 'readFile(File)')": [
                        41
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.convert#FileToByteArraySampleStream', 'readFile(File)')": [
                        41
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/convert/FileToStringSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.convert#FileToStringSampleStream', 'readFile(File,Charset)')": [
                        48
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.convert#FileToStringSampleStream', 'readFile(File,Charset)')": [
                        48
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/muc/MucNameContentHandler.java": {
                "old": {
                    "('opennlp.tools.formats.muc#MucNameContentHandler', 'characters(CharSequence)')": [
                        109
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.muc#MucNameContentHandler', 'characters(CharSequence)')": [
                        109
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ontonotes/OntoNotesNameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.ontonotes#OntoNotesNameSampleStream', 'read')": [
                        108
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ontonotes#OntoNotesNameSampleStream', 'read')": [
                        108
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmaSampleSequenceStream.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmaSampleSequenceStream', 'read')": [
                        44,
                        45,
                        46
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#LemmaSampleSequenceStream', 'read')": [
                        44,
                        45,
                        46
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/Lemmatizer.java": {
                "old": {
                    "(None, None)": [
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/BeamSearch.java": {
                "old": {
                    "('opennlp.tools.ml#BeamSearch', 'bestSequence(T,Object,BeamSearchContextGenerator,SequenceValidator)')": [
                        174
                    ],
                    "('opennlp.tools.ml#BeamSearch', 'getOutcomes')": [
                        184
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#BeamSearch', 'bestSequence(T,Object,BeamSearchContextGenerator,SequenceValidator)')": [
                        174
                    ],
                    "('opennlp.tools.ml#BeamSearch', 'getOutcomes')": [
                        184
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GISModel.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GISModel', 'eval(int,float,double,EvalParameters)')": [
                        159
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#GISModel', 'eval(int,float,double,EvalParameters)')": [
                        159
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/MaxentModel.java": {
                "old": {
                    "(None, None)": [
                        45
                    ]
                },
                "new": {
                    "(None, None)": [
                        45
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/SimplePerceptronSequenceTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'nextIteration(int)')": [
                        253,
                        275
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'nextIteration(int)')": [
                        253,
                        275
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/BioCodec.java": {
                "old": {
                    "('opennlp.tools.namefind#BioCodec', 'encode(Span,int)')": [
                        79
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#BioCodec', 'encode(Span,int)')": [
                        79
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/DefaultNameContextGenerator.java": {
                "old": {
                    "('opennlp.tools.namefind#DefaultNameContextGenerator', None)": [
                        39
                    ],
                    "('opennlp.tools.namefind#DefaultNameContextGenerator', 'addFeatureGenerator(AdaptiveFeatureGenerator)')": [
                        76
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#DefaultNameContextGenerator', None)": [
                        39
                    ],
                    "('opennlp.tools.namefind#DefaultNameContextGenerator', 'addFeatureGenerator(AdaptiveFeatureGenerator)')": [
                        76
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/DictionaryNameFinder.java": {
                "old": {
                    "('opennlp.tools.namefind#DictionaryNameFinder', 'find(String)')": [
                        65
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#DictionaryNameFinder', 'find(String)')": [
                        65
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderEventStream.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderEventStream', 'createEvents(NameSample)')": [
                        135
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderEventStream', 'createEvents(NameSample)')": [
                        135
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderME.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderME', 'dropOverlappingSpans(Span)')": [
                        305
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderME', 'dropOverlappingSpans(Span)')": [
                        305
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameSample.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSample', 'errorTokenWithContext(String,int)')": [
                        182
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSample', 'errorTokenWithContext(String,int)')": [
                        182
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameSampleSequenceStream.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSampleSequenceStream', 'read')": [
                        89,
                        90
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSampleSequenceStream', 'read')": [
                        89,
                        90
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/RegexNameFinder.java": {
                "old": {
                    "('opennlp.tools.namefind#RegexNameFinder', None)": [
                        35,
                        43,
                        58
                    ],
                    "('opennlp.tools.namefind#RegexNameFinder', 'find(String)')": [
                        68
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#RegexNameFinder', None)": [
                        35,
                        43,
                        58
                    ],
                    "('opennlp.tools.namefind#RegexNameFinder', 'find(String)')": [
                        68
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinder.java": {
                "old": {
                    "(None, None)": [
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderCrossValidator.java": {
                "old": {
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidator', None)": [
                        39,
                        40,
                        41
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidator', None)": [
                        39,
                        40,
                        41
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderEvaluator.java": {
                "old": {
                    "('opennlp.tools.namefind#TokenNameFinderEvaluator', 'processSample(NameSample)')": [
                        76,
                        77
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#TokenNameFinderEvaluator', 'processSample(NameSample)')": [
                        76,
                        77
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderFactory.java": {
                "old": {
                    "('opennlp.tools.namefind#TokenNameFinderFactory', 'loadDefaultFeatureGeneratorBytes')": [
                        83
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#TokenNameFinderFactory', 'loadDefaultFeatureGeneratorBytes')": [
                        83
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderModel.java": {
                "old": {
                    "('opennlp.tools.namefind#TokenNameFinderModel', 'isModelValid(MaxentModel)')": [
                        214
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#TokenNameFinderModel', 'isModelValid(MaxentModel)')": [
                        214
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/AbstractBottomUpParser.java": {
                "old": {
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'advanceChunks(Parse,double)')": [
                        391,
                        392,
                        393
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'advanceChunks(Parse,double)')": [
                        391,
                        392,
                        393
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ChunkContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser#ChunkContextGenerator', 'getContext(int,String,String,String)')": [
                        163
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ChunkContextGenerator', 'getContext(int,String,String,String)')": [
                        163
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ParserChunkerFactory.java": {
                "old": {
                    "('opennlp.tools.parser#ParserChunkerFactory', 'getSequenceValidator')": [
                        38
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ParserChunkerFactory', 'getSequenceValidator')": [
                        38
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ParserChunkerSequenceValidator.java": {
                "old": {
                    "('opennlp.tools.parser#ParserChunkerSequenceValidator', None)": [
                        30
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ParserChunkerSequenceValidator', None)": [
                        30
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/PosSampleStream.java": {
                "old": {
                    "('opennlp.tools.parser#PosSampleStream', 'read')": [
                        40,
                        41
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#PosSampleStream', 'read')": [
                        40,
                        41
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSDictionary.java": {
                "old": {
                    "('opennlp.tools.postag#POSDictionary', 'tagsToString(String)')": [
                        102
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSDictionary', 'tagsToString(String)')": [
                        102
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSEvaluator.java": {
                "old": {
                    "('opennlp.tools.postag#POSEvaluator', 'processSample(POSSample)')": [
                        60,
                        61
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSEvaluator', 'processSample(POSSample)')": [
                        60,
                        61
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSSample.java": {
                "old": {
                    "('opennlp.tools.postag#POSSample', None)": [
                        40,
                        69
                    ],
                    "('opennlp.tools.postag#POSSample', 'parse(String)')": [
                        123,
                        125,
                        126
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSSample', None)": [
                        40,
                        69
                    ],
                    "('opennlp.tools.postag#POSSample', 'parse(String)')": [
                        123,
                        125,
                        126
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSSampleEventStream.java": {
                "old": {
                    "('opennlp.tools.postag#POSSampleEventStream', 'createEvents(POSSample)')": [
                        66,
                        67,
                        68
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSSampleEventStream', 'createEvents(POSSample)')": [
                        66,
                        67,
                        68
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSSampleSequenceStream.java": {
                "old": {
                    "('opennlp.tools.postag#POSSampleSequenceStream', 'read')": [
                        62,
                        63
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSSampleSequenceStream', 'read')": [
                        62,
                        63
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/DefaultEndOfSentenceScanner.java": {
                "old": {
                    "('opennlp.tools.sentdetect#DefaultEndOfSentenceScanner', None)": [
                        31,
                        38
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#DefaultEndOfSentenceScanner', None)": [
                        31,
                        38
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceDetectorEvaluator.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceDetectorEvaluator', 'trimSpans(String,Span)')": [
                        54,
                        55
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorEvaluator', 'processSample(SentenceSample)')": [
                        66
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceDetectorEvaluator', 'trimSpans(String,Span)')": [
                        54,
                        55
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorEvaluator', 'processSample(SentenceSample)')": [
                        66
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceDetectorME.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'sentDetect(String)')": [
                        131
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'sentDetect(String)')": [
                        131
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceSample.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceSample', None)": [
                        56
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceSample', None)": [
                        56
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/DetokenizationDictionary.java": {
                "old": {
                    "('opennlp.tools.tokenize#DetokenizationDictionary', None)": [
                        90,
                        91
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#DetokenizationDictionary', None)": [
                        90,
                        91
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/Detokenizer.java": {
                "old": {
                    "(None, None)": [
                        60,
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        60,
                        72
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/DictionaryDetokenizer.java": {
                "old": {
                    "('opennlp.tools.tokenize#DictionaryDetokenizer', 'detokenize(String)')": [
                        40
                    ],
                    "('opennlp.tools.tokenize#DictionaryDetokenizer', 'detokenize(String,String)')": [
                        82,
                        84
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#DictionaryDetokenizer', 'detokenize(String)')": [
                        40
                    ],
                    "('opennlp.tools.tokenize#DictionaryDetokenizer', 'detokenize(String,String)')": [
                        82,
                        84
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokSpanEventStream.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokSpanEventStream', 'createEvents(TokenSample)')": [
                        102
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokSpanEventStream', 'createEvents(TokenSample)')": [
                        102
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenSample.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenSample', None)": [
                        48,
                        63
                    ],
                    "('opennlp.tools.tokenize#TokenSample', 'parse(String,String)')": [
                        162
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenSample', None)": [
                        48,
                        63
                    ],
                    "('opennlp.tools.tokenize#TokenSample', 'parse(String,String)')": [
                        162
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerEvaluator.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenizerEvaluator', 'processSample(TokenSample)')": [
                        58
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerEvaluator', 'processSample(TokenSample)')": [
                        58
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerStream.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenizerStream', 'read')": [
                        44
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerStream', 'read')": [
                        44
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/SequenceCodec.java": {
                "old": {
                    "(None, None)": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        41
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/StringList.java": {
                "old": {
                    "('opennlp.tools.util#StringList', None)": [
                        30
                    ]
                },
                "new": {
                    "('opennlp.tools.util#StringList', None)": [
                        30
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/StringUtil.java": {
                "old": {
                    "('opennlp.tools.util#StringUtil', 'toLowerCase(CharSequence)')": [
                        76
                    ],
                    "('opennlp.tools.util#StringUtil', 'toUpperCase(CharSequence)')": [
                        94
                    ]
                },
                "new": {
                    "('opennlp.tools.util#StringUtil', 'toLowerCase(CharSequence)')": [
                        76
                    ],
                    "('opennlp.tools.util#StringUtil', 'toUpperCase(CharSequence)')": [
                        94
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/DocumentBeginFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#DocumentBeginFeatureGenerator', None)": [
                        24
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#DocumentBeginFeatureGenerator', None)": [
                        24
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/InSpanGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#InSpanGenerator', None)": [
                        36,
                        38
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#InSpanGenerator', None)": [
                        36,
                        38
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/WordClusterDictionary.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#WordClusterDictionary', None)": [
                        59
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#WordClusterDictionary', None)": [
                        59
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/ModelUtil.java": {
                "old": {
                    "('opennlp.tools.util.model#ModelUtil', 'read(InputStream)')": [
                        119
                    ]
                },
                "new": {
                    "('opennlp.tools.util.model#ModelUtil', 'read(InputStream)')": [
                        119
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/ChunkerMETest.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkerMETest', 'testChunkAsArray')": [
                        88
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkerMETest', 'testChunkAsArray')": [
                        88
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/cmdline/ArgumentParserTest.java": {
                "old": {
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSimpleArgumentsUsage')": [
                        123
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testDefaultEncodingParameter')": [
                        147
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSetEncodingParameter')": [
                        165
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSimpleArgumentsUsage')": [
                        123
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testDefaultEncodingParameter')": [
                        147
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSetEncodingParameter')": [
                        165
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/doccat/DocumentCategorizerMETest.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentCategorizerMETest', 'testSimpleTraining')": [
                        53,
                        56
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DocumentCategorizerMETest', 'testSimpleTraining')": [
                        53,
                        56
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/doccat/DocumentCategorizerNBTest.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentCategorizerNBTest', 'testSimpleTraining')": [
                        56,
                        59
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DocumentCategorizerNBTest', 'testSimpleTraining')": [
                        56,
                        59
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ConllXPOSSampleStreamTest.java": {
                "old": {
                    "('opennlp.tools.formats#ConllXPOSSampleStreamTest', 'testParsingSample')": [
                        44,
                        45,
                        118,
                        119
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#ConllXPOSSampleStreamTest', 'testParsingSample')": [
                        44,
                        45,
                        118,
                        119
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/frenchtreebank/ConstitParseSampleStreamTest.java": {
                "old": {
                    "('opennlp.tools.formats.frenchtreebank#ConstitParseSampleStreamTest', None)": [
                        33
                    ],
                    "('opennlp.tools.formats.frenchtreebank#ConstitParseSampleStreamTest', 'getSample1')": [
                        91
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.frenchtreebank#ConstitParseSampleStreamTest', None)": [
                        33
                    ],
                    "('opennlp.tools.formats.frenchtreebank#ConstitParseSampleStreamTest', 'getSample1')": [
                        91
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/BeamSearchTest.java": {
                "old": {
                    "('opennlp.tools.ml#BeamSearchTest', None)": [
                        36,
                        56,
                        68
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceZeroLengthInput')": [
                        121,
                        122,
                        123,
                        124
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceOneElementInput')": [
                        141,
                        142,
                        143,
                        144
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequence')": [
                        163,
                        164,
                        165,
                        166
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceWithValidator')": [
                        189,
                        190,
                        191,
                        192
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#BeamSearchTest', None)": [
                        36,
                        56,
                        68
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceZeroLengthInput')": [
                        121,
                        122,
                        123,
                        124
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceOneElementInput')": [
                        141,
                        142,
                        143,
                        144
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequence')": [
                        163,
                        164,
                        165,
                        166
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceWithValidator')": [
                        189,
                        190,
                        191,
                        192
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/DictionaryNameFinderTest.java": {
                "old": {
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testSingleTokeNameAtSentenceStart')": [
                        62,
                        63
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testSingleTokeNameInsideSentence')": [
                        72,
                        73
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testSingleTokeNameAtSentenceEnd')": [
                        83,
                        84
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testLastMatchingTokenNameIsChoosen')": [
                        91,
                        92
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testLongerTokenNameIsPreferred')": [
                        99,
                        100
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testCaseSensitivity')": [
                        107,
                        108
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testCaseLongerEntry')": [
                        115,
                        116
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testSingleTokeNameAtSentenceStart')": [
                        62,
                        63
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testSingleTokeNameInsideSentence')": [
                        72,
                        73
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testSingleTokeNameAtSentenceEnd')": [
                        83,
                        84
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testLastMatchingTokenNameIsChoosen')": [
                        91,
                        92
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testLongerTokenNameIsPreferred')": [
                        99,
                        100
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testCaseSensitivity')": [
                        107,
                        108
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testCaseLongerEntry')": [
                        115,
                        116
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameFinderMETest.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinder')": [
                        81,
                        92
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinderWithTypes')": [
                        153,
                        156
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testDropOverlappingSpans')": [
                        322,
                        323
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinder')": [
                        81,
                        92
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinderWithTypes')": [
                        153,
                        156
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testDropOverlappingSpans')": [
                        322,
                        323
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameSampleTest.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSampleTest', 'testNameAtEnd')": [
                        104
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSampleTest', 'testNameAtEnd')": [
                        104
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/RegexNameFinderTest.java": {
                "old": {
                    "('opennlp.tools.namefind#RegexNameFinderTest', 'testFindSingleTokenPattern')": [
                        38
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderTest', 'testFindTokenizdPattern')": [
                        62
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderTest', 'testFindMatchingPatternWithoutMatchingTokenBounds')": [
                        86
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#RegexNameFinderTest', 'testFindSingleTokenPattern')": [
                        38
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderTest', 'testFindTokenizdPattern')": [
                        62
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderTest', 'testFindMatchingPatternWithoutMatchingTokenBounds')": [
                        86
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/ParseTest.java": {
                "old": {
                    "('opennlp.tools.parser#ParseTest', 'testGetTagNodes')": [
                        105
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ParseTest', 'testGetTagNodes')": [
                        105
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/POSTaggerMETest.java": {
                "old": {
                    "('opennlp.tools.postag#POSTaggerMETest', 'testPOSTagger')": [
                        66
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSTaggerMETest', 'testPOSTagger')": [
                        66
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/WordTagSampleStreamTest.java": {
                "old": {
                    "('opennlp.tools.postag#WordTagSampleStreamTest', 'testParseSimpleSample')": [
                        44,
                        53
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#WordTagSampleStreamTest', 'testParseSimpleSample')": [
                        44,
                        53
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/NewlineSentenceDetectorTest.java": {
                "old": {
                    "('opennlp.tools.sentdetect#NewlineSentenceDetectorTest', 'testSentenceValues(String)')": [
                        32
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#NewlineSentenceDetectorTest', 'testSentenceValues(String)')": [
                        32
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/SentenceDetectorMETest.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceDetectorMETest', 'testSentenceDetector')": [
                        127
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceDetectorMETest', 'testSentenceDetector')": [
                        127
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/DictionaryDetokenizerTest.java": {
                "old": {
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', 'testDetokenizer')": [
                        34,
                        36,
                        47
                    ],
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', 'testDetokenizeToString')": [
                        74
                    ],
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', 'testDetokenizeToString2')": [
                        86
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', 'testDetokenizer')": [
                        34,
                        36,
                        47
                    ],
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', 'testDetokenizeToString')": [
                        74
                    ],
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', 'testDetokenizeToString2')": [
                        86
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokenSampleStreamTest.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingWhitespaceSeparatedTokens')": [
                        48
                    ],
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingSeparatedString')": [
                        72
                    ],
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingWhitespaceAndSeparatedString')": [
                        104
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingWhitespaceSeparatedTokens')": [
                        48
                    ],
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingSeparatedString')": [
                        72
                    ],
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingWhitespaceAndSeparatedString')": [
                        104
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokenSampleTest.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenSampleTest', 'testCreationWithDetokenizer')": [
                        48
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenSampleTest', 'testCreationWithDetokenizer')": [
                        48
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokenizerMETest.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenizerMETest', 'testTokenizerSimpleModel')": [
                        43
                    ],
                    "('opennlp.tools.tokenize#TokenizerMETest', 'testTokenizer')": [
                        55
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerMETest', 'testTokenizerSimpleModel')": [
                        43
                    ],
                    "('opennlp.tools.tokenize#TokenizerMETest', 'testTokenizer')": [
                        55
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/eval/FMeasureTest.java": {
                "old": {
                    "('opennlp.tools.util.eval#FMeasureTest', None)": [
                        32,
                        41,
                        49,
                        57,
                        67
                    ]
                },
                "new": {
                    "('opennlp.tools.util.eval#FMeasureTest', None)": [
                        32,
                        41,
                        49,
                        57,
                        67
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/featuregen/CachedFeatureGeneratorTest.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#CachedFeatureGeneratorTest', None)": [
                        32,
                        35,
                        37
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#CachedFeatureGeneratorTest', None)": [
                        32,
                        35,
                        37
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/featuregen/PreviousMapFeatureGeneratorTest.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#PreviousMapFeatureGeneratorTest', 'testFeatureGeneration')": [
                        36
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#PreviousMapFeatureGeneratorTest', 'testFeatureGeneration')": [
                        36
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/chunker/Chunker.java": {
                "old": {
                    "('opennlp.uima.chunker#Chunker', 'addChunkAnnotation(CAS,AnnotationFS,String,int,int)')": [
                        153
                    ],
                    "('opennlp.uima.chunker#Chunker', 'process(CAS)')": [
                        170,
                        171,
                        172,
                        187
                    ]
                },
                "new": {
                    "('opennlp.uima.chunker#Chunker', 'addChunkAnnotation(CAS,AnnotationFS,String,int,int)')": [
                        153
                    ],
                    "('opennlp.uima.chunker#Chunker', 'process(CAS)')": [
                        170,
                        171,
                        172,
                        187
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/doccat/AbstractDocumentCategorizer.java": {
                "old": {
                    "('opennlp.uima.doccat#AbstractDocumentCategorizer', 'process(CAS)')": [
                        85
                    ]
                },
                "new": {
                    "('opennlp.uima.doccat#AbstractDocumentCategorizer', 'process(CAS)')": [
                        85
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/namefind/AbstractNameFinder.java": {
                "old": {
                    "('opennlp.uima.namefind#AbstractNameFinder', 'postProcessAnnotations(Span,AnnotationFS)')": [
                        137
                    ],
                    "('opennlp.uima.namefind#AbstractNameFinder', 'process(CAS)')": [
                        189
                    ]
                },
                "new": {
                    "('opennlp.uima.namefind#AbstractNameFinder', 'postProcessAnnotations(Span,AnnotationFS)')": [
                        137
                    ],
                    "('opennlp.uima.namefind#AbstractNameFinder', 'process(CAS)')": [
                        189
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/namefind/NameFinder.java": {
                "old": {
                    "('opennlp.uima.namefind#NameFinder', 'find(CAS,String)')": [
                        157,
                        158,
                        159
                    ],
                    "('opennlp.uima.namefind#NameFinder', 'postProcessAnnotations(Span,AnnotationFS)')": [
                        168
                    ]
                },
                "new": {
                    "('opennlp.uima.namefind#NameFinder', 'find(CAS,String)')": [
                        157,
                        158,
                        159
                    ],
                    "('opennlp.uima.namefind#NameFinder', 'postProcessAnnotations(Span,AnnotationFS)')": [
                        168
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/normalizer/NumberUtil.java": {
                "old": {
                    "('opennlp.uima.normalizer#NumberUtil', 'isLanguageSupported(String)')": [
                        39
                    ]
                },
                "new": {
                    "('opennlp.uima.normalizer#NumberUtil', 'isLanguageSupported(String)')": [
                        39
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/parser/Parser.java": {
                "old": {
                    "('opennlp.uima.parser#Parser', 'createAnnotation(CAS,int,Parse)')": [
                        202,
                        203
                    ],
                    "('opennlp.uima.parser#Parser', None)": [
                        247,
                        253
                    ]
                },
                "new": {
                    "('opennlp.uima.parser#Parser', 'createAnnotation(CAS,int,Parse)')": [
                        202,
                        203
                    ],
                    "('opennlp.uima.parser#Parser', None)": [
                        247,
                        253
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/postag/POSTagger.java": {
                "old": {
                    "('opennlp.uima.postag#POSTagger', 'process(CAS)')": [
                        183
                    ]
                },
                "new": {
                    "('opennlp.uima.postag#POSTagger', 'process(CAS)')": [
                        183
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/sentdetect/AbstractSentenceDetector.java": {
                "old": {
                    "('opennlp.uima.sentdetect#AbstractSentenceDetector', 'postProcessAnnotations(AnnotationFS)')": [
                        90
                    ],
                    "('opennlp.uima.sentdetect#AbstractSentenceDetector', 'process(CAS)')": [
                        109
                    ]
                },
                "new": {
                    "('opennlp.uima.sentdetect#AbstractSentenceDetector', 'postProcessAnnotations(AnnotationFS)')": [
                        90
                    ],
                    "('opennlp.uima.sentdetect#AbstractSentenceDetector', 'process(CAS)')": [
                        109
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/sentdetect/SentenceDetector.java": {
                "old": {
                    "('opennlp.uima.sentdetect#SentenceDetector', 'postProcessAnnotations(AnnotationFS)')": [
                        117,
                        120
                    ]
                },
                "new": {
                    "('opennlp.uima.sentdetect#SentenceDetector', 'postProcessAnnotations(AnnotationFS)')": [
                        117,
                        120
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/tokenize/AbstractTokenizer.java": {
                "old": {
                    "('opennlp.uima.tokenize#AbstractTokenizer', 'postProcessAnnotations(Span,AnnotationFS)')": [
                        94,
                        95
                    ],
                    "('opennlp.uima.tokenize#AbstractTokenizer', 'process(CAS)')": [
                        110,
                        116
                    ]
                },
                "new": {
                    "('opennlp.uima.tokenize#AbstractTokenizer', 'postProcessAnnotations(Span,AnnotationFS)')": [
                        94,
                        95
                    ],
                    "('opennlp.uima.tokenize#AbstractTokenizer', 'process(CAS)')": [
                        110,
                        116
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/tokenize/Tokenizer.java": {
                "old": {
                    "('opennlp.uima.tokenize#Tokenizer', 'postProcessAnnotations(Span,AnnotationFS)')": [
                        126
                    ]
                },
                "new": {
                    "('opennlp.uima.tokenize#Tokenizer', 'postProcessAnnotations(Span,AnnotationFS)')": [
                        126
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/util/OpennlpUtil.java": {
                "old": {
                    "('opennlp.uima.util#OpennlpUtil', 'loadBytes(File)')": [
                        64
                    ]
                },
                "new": {
                    "('opennlp.uima.util#OpennlpUtil', 'loadBytes(File)')": [
                        64
                    ]
                }
            }
        }
    },
    "b7d3abce569b5a4bf0ae39b24c6ac9920032db01": {
        "authored_data": "2017 Feb 13 12:57",
        "commit.message": "OPENNLP-983: Make suffix/prefix length configurable\n\nThis closes #121\n",
        "commit.author.name": "jzonthemtn",
        "pcid": "929595d2f707a24cffbcbb593f5357e19385b266",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/GeneratorFactory.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#GeneratorFactory', None)": [
                        558,
                        573
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#GeneratorFactory', None)": [
                        558,
                        559,
                        560,
                        561,
                        562,
                        563,
                        564,
                        565,
                        566,
                        567,
                        582,
                        583,
                        584,
                        585,
                        586,
                        587,
                        588,
                        589,
                        590,
                        591
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/PrefixFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#PrefixFeatureGenerator', None)": [
                        24,
                        33
                    ],
                    "('opennlp.tools.util.featuregen#PrefixFeatureGenerator', 'getPrefixes(String)')": [
                        26,
                        27,
                        28
                    ],
                    "('opennlp.tools.util.featuregen#PrefixFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        34,
                        35,
                        36,
                        37,
                        38
                    ],
                    "(None, None)": [
                        39,
                        40
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#PrefixFeatureGenerator', None)": [
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        36,
                        42,
                        43,
                        44
                    ],
                    "('opennlp.tools.util.featuregen#PrefixFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        37,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('opennlp.tools.util.featuregen#PrefixFeatureGenerator', 'getPrefixes(String)')": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/SuffixFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#SuffixFeatureGenerator', None)": [
                        24,
                        33
                    ],
                    "('opennlp.tools.util.featuregen#SuffixFeatureGenerator', 'getSuffixes(String)')": [
                        26,
                        27,
                        28
                    ],
                    "('opennlp.tools.util.featuregen#SuffixFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        34,
                        35,
                        36,
                        37,
                        38
                    ],
                    "(None, None)": [
                        39,
                        40
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#SuffixFeatureGenerator', None)": [
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        36,
                        42,
                        43,
                        44
                    ],
                    "('opennlp.tools.util.featuregen#SuffixFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        37,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('opennlp.tools.util.featuregen#SuffixFeatureGenerator', 'getSuffixes(String)')": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50
                    ],
                    "(None, None)": [
                        55
                    ]
                }
            }
        }
    },
    "9fbc2a346b86872c397ff891d379115abe5846cf": {
        "authored_data": "2017 Feb 14 13:49",
        "commit.message": "OPENNLP-986 - Stupid Backoff as default LM discounting\n",
        "commit.author.name": "Tommaso Teofili",
        "pcid": "24c27ceafb963d96d0ca8ee2fe2090510a39b400",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/languagemodel/NGramLanguageModel.java": {
                "old": {
                    "(None, None)": [
                        29,
                        30,
                        31,
                        145
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', None)": [
                        36,
                        39,
                        42,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        55,
                        59,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        74,
                        131
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'calculateProbability(StringList)')": [
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'getLaplaceSmoothingProbability(StringList,StringList)')": [
                        128,
                        129,
                        130
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'getStupidBackoffProbability(StringList,StringList)')": [
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        108
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', None)": [
                        38,
                        46,
                        49
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'calculateProbability(StringList)')": [
                        60,
                        61,
                        62,
                        63,
                        66
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'stupidBackoff(StringList)')": [
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ngram/NGramUtils.java": {
                "old": {
                    "('opennlp.tools.ngram#NGramUtils', None)": [
                        37
                    ],
                    "('opennlp.tools.ngram#NGramUtils', 'calculateLaplaceSmoothingProbability(StringList,Iterable,int,Double)')": [
                        43
                    ]
                },
                "new": {
                    "('opennlp.tools.ngram#NGramUtils', 'calculateLaplaceSmoothingProbability(StringList,Iterable,Double)')": [
                        42
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/languagemodel/LanguageModelEvaluationTest.java": {
                "old": {
                    "('opennlp.tools.languagemodel#LanguageModelEvaluationTest', 'testPerplexityComparison')": [
                        57
                    ]
                },
                "new": {
                    "('opennlp.tools.languagemodel#LanguageModelEvaluationTest', 'testPerplexityComparison')": [
                        57
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/languagemodel/NgramLanguageModelTest.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testRandomVocabularyAndSentence')": [
                        50
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testBigramProbabilityNoSmoothing')": [
                        74
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testTrigram')": [
                        97,
                        98,
                        99,
                        106
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testSerializedNGramLanguageModel')": [
                        131
                    ]
                },
                "new": {
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testRandomVocabularyAndSentence')": [
                        49
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testBigramProbabilityNoSmoothing')": [
                        73
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testTrigram')": [
                        96,
                        97,
                        98,
                        105
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testSerializedNGramLanguageModel')": [
                        130
                    ]
                }
            }
        }
    }
}