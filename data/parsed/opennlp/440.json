{
    "a4ecf95d9a40472b7e7afa1d4839138b7fd8767c": {
        "authored_data": "2017 Jan 09 20:16",
        "commit.message": "OPENNLP-83: Add equals to AbstractModels and referenced classes\n\nThis closes #40\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "7feb7558c929aa72388f17c884e0e2e2a7be42e3",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractModel.java": {
                "new": {
                    "(None, None)": [
                        23,
                        26,
                        197
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', None)": [
                        177,
                        178,
                        181,
                        182,
                        183
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'hashCode')": [
                        179,
                        180
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'equals(Object)')": [
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/Context.java": {
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        83
                    ],
                    "('opennlp.tools.ml.model#Context', None)": [
                        63,
                        64,
                        67,
                        68,
                        69
                    ],
                    "('opennlp.tools.ml.model#Context', 'hashCode')": [
                        65,
                        66
                    ],
                    "('opennlp.tools.ml.model#Context', 'equals(Object)')": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/EvalParameters.java": {
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        117
                    ],
                    "('opennlp.tools.ml.model#EvalParameters', None)": [
                        93,
                        94,
                        98,
                        99,
                        100
                    ],
                    "('opennlp.tools.ml.model#EvalParameters', 'hashCode')": [
                        95,
                        96,
                        97
                    ],
                    "('opennlp.tools.ml.model#EvalParameters', 'equals(Object)')": [
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/UniformPrior.java": {
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        65
                    ],
                    "('opennlp.tools.ml.model#UniformPrior', None)": [
                        46,
                        47,
                        50,
                        51,
                        52
                    ],
                    "('opennlp.tools.ml.model#UniformPrior', 'hashCode')": [
                        48,
                        49
                    ],
                    "('opennlp.tools.ml.model#UniformPrior', 'equals(Object)')": [
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/perceptron/PerceptronPrepAttachTest.java": {
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26,
                        34,
                        38,
                        139
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', None)": [
                        98,
                        99,
                        123,
                        124,
                        125
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testModelSerialization')": [
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testModelEquals')": [
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138
                    ]
                }
            }
        }
    },
    "83af8f89e7b7c8669520b9d46ce212665d0d1b90": {
        "authored_data": "2017 Jan 09 17:19",
        "commit.message": "OPENNLP-880: Refactor data indexer\n\n1.) Added method to EventTrainer \u2013 train(DataIndexer indexer)\n    \u2013Then I added the method to AbstractEventTrainer.\n    No other code needed to be changed.\n\n2.) Created a new class \u2013 PluggableParmeters: Only AbstractTrainers\n    had access to getXXXParam(Value,Default). So I pulled out this\n    functionality into a separate class. Now both\n    AbstractTrainers and AbstractDataIndexers can hold parameters.\n\n3.) Refactored DataIndexer. This touched a lot of code.\n    Added init(Map,Map) method and index(ObjectStream) method.\n    Changed 1-Pass and 2-Pass DataIndexers. Everywhere 1-pass/2-pass\n    indexers where created, I changed the constructor,\n    and added the init and index methods.\n\n4.) Changed GIS.doTrain(indexer) to use the parameters\n    passed in the init method.\n\n5.) QNTrainer \u2013 created a working init method. Changed the\n    isValid method so it is not the init method.\n\nThis closes #14\n",
        "commit.author.name": "Daniel Russ",
        "pcid": "364232f781d0cc91cd4b83012e1f49e62fa81190",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/ml/AbstractEventModelSequenceTrainer.java": {
                "old": {
                    "('opennlp.tools.ml#AbstractEventModelSequenceTrainer', 'train(SequenceStream)')": [
                        41
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#AbstractEventModelSequenceTrainer', 'train(SequenceStream)')": [
                        41
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/AbstractEventTrainer.java": {
                "old": {
                    "('opennlp.tools.ml#AbstractEventTrainer', None)": [
                        30,
                        31
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'isValid')": [
                        46
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'getDataIndexer(ObjectStream)')": [
                        64,
                        67,
                        68,
                        72,
                        74
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'train(ObjectStream)')": [
                        93,
                        94,
                        95,
                        96,
                        97
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        24
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', None)": [
                        33,
                        88,
                        96
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'isValid')": [
                        48
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'getDataIndexer(ObjectStream)')": [
                        66,
                        68,
                        69,
                        70,
                        75,
                        77,
                        82,
                        83
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'train(DataIndexer)')": [
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'train(ObjectStream)')": [
                        107
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/AbstractSequenceTrainer.java": {
                "old": {
                    "('opennlp.tools.ml#AbstractSequenceTrainer', 'train(SequenceStream)')": [
                        41
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#AbstractSequenceTrainer', 'train(SequenceStream)')": [
                        41
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/AbstractTrainer.java": {
                "old": {
                    "('opennlp.tools.ml#AbstractTrainer', None)": [
                        36,
                        37,
                        57,
                        58,
                        70,
                        71,
                        80,
                        81,
                        90,
                        91,
                        100,
                        101,
                        105
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'init(Map,Map)')": [
                        43,
                        44
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getAlgorithm')": [
                        48
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getCutoff')": [
                        52
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getIterations')": [
                        56
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getStringParam(String,String)')": [
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getIntParam(String,int)')": [
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getDoubleParam(String,double)')": [
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getBooleanParam(String,boolean)')": [
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'addToReport(String,String)')": [
                        102,
                        103,
                        104
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'isValid')": [
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#AbstractTrainer', None)": [
                        36,
                        37,
                        38,
                        39,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'init(Map,Map)')": [
                        45
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getAlgorithm')": [
                        49
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getCutoff')": [
                        53
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getIterations')": [
                        57
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'isValid')": [
                        67,
                        68
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getStringParam(String,String)')": [
                        82,
                        83
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getIntParam(String,int)')": [
                        92,
                        93
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getDoubleParam(String,double)')": [
                        102,
                        103
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getBooleanParam(String,boolean)')": [
                        112,
                        113
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'addToReport(String,String)')": [
                        122,
                        123
                    ],
                    "(None, None)": [
                        124
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/EventTrainer.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        35
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GIS.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GIS', 'doTrain(DataIndexer)')": [
                        78,
                        79,
                        80
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#GIS', None)": [
                        55,
                        56,
                        57
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'doTrain(DataIndexer)')": [
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GISTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(ObjectStream,int,int)')": [
                        223
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', None)": [
                        499
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'nextIteration(double,CompletionService)')": [
                        555
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        31
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(ObjectStream,int,int)')": [
                        226,
                        227,
                        228,
                        229,
                        230,
                        231
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', None)": [
                        507
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'nextIteration(double,CompletionService)')": [
                        563
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/QNTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainer', 'isValid')": [
                        111,
                        115,
                        118,
                        122,
                        125,
                        129,
                        132,
                        136,
                        137,
                        138,
                        142
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainer', None)": [
                        100,
                        108,
                        109
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainer', 'init(Map,Map)')": [
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainer', 'isValid')": [
                        140
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#AbstractDataIndexer', None)": [
                        69,
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28
                    ],
                    "('opennlp.tools.ml.model#AbstractDataIndexer', None)": [
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        48
                    ],
                    "('opennlp.tools.ml.model#AbstractDataIndexer', 'init(Map,Map)')": [
                        46,
                        47
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractModel.java": {
                "old": {
                    "('opennlp.tools.ml.model#AbstractModel', None)": [
                        37,
                        38,
                        39,
                        40,
                        41,
                        42
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#AbstractModel', None)": [
                        37
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/DataIndexer.java": {
                "old": {
                    "(None, None)": [
                        58,
                        59,
                        60
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        25,
                        63,
                        64,
                        65,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/EvalParameters.java": {
                "old": {
                    "('opennlp.tools.ml.model#EvalParameters', None)": [
                        28
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#EvalParameters', None)": [
                        28
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/OnePassDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#OnePassDataIndexer', None)": [
                        72
                    ],
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'computeEventCounts(ObjectStream,Map,int)')": [
                        109,
                        113,
                        116
                    ],
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'index(LinkedList,Map)')": [
                        129,
                        138,
                        139
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#OnePassDataIndexer', None)": [
                        50,
                        55,
                        71,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100
                    ],
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'index(ObjectStream)')": [
                        101,
                        102,
                        103,
                        104,
                        105,
                        106
                    ],
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'computeEventCounts(ObjectStream,Map,int)')": [
                        143,
                        147,
                        150
                    ],
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'index(List,Map)')": [
                        163,
                        172
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/OnePassRealValueDataIndexer.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('opennlp.tools.ml.model#OnePassRealValueDataIndexer', None)": [
                        41,
                        45
                    ],
                    "('opennlp.tools.ml.model#OnePassRealValueDataIndexer', 'index(LinkedList,Map)')": [
                        75,
                        83,
                        84,
                        112,
                        113
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#OnePassRealValueDataIndexer', None)": [
                        40,
                        41,
                        45,
                        53,
                        56,
                        57,
                        58,
                        79,
                        80
                    ],
                    "('opennlp.tools.ml.model#OnePassRealValueDataIndexer', 'index(List,Map)')": [
                        81,
                        89,
                        117
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/RealValueFileEventStream.java": {
                "old": {
                    "('opennlp.tools.ml.model#RealValueFileEventStream', 'main(String)')": [
                        109,
                        110,
                        112,
                        113,
                        117
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        27,
                        28
                    ],
                    "('opennlp.tools.ml.model#RealValueFileEventStream', 'main(String)')": [
                        113,
                        114,
                        115,
                        116,
                        118,
                        119,
                        121,
                        124,
                        125,
                        126,
                        127,
                        128
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/TwoPassDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', None)": [
                        76,
                        78,
                        86,
                        88,
                        96,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'computeEventCounts(ObjectStream,Writer,Map,int)')": [
                        123
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', None)": [
                        57,
                        62,
                        75,
                        79,
                        81,
                        89,
                        91,
                        99,
                        114,
                        115,
                        116,
                        155,
                        156,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'index(ObjectStream)')": [
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'computeEventCounts(ObjectStream,Writer,Map,int)')": [
                        169
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/PerceptronTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'doTrain(DataIndexer)')": [
                        106,
                        107,
                        108,
                        114,
                        115,
                        116
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'doTrain(DataIndexer)')": [
                        106,
                        107,
                        108,
                        114,
                        115,
                        116
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/SimplePerceptronSequenceTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'doTrain(SequenceStream)')": [
                        106
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainModel(int,SequenceStream,int,boolean)')": [
                        116
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'doTrain(SequenceStream)')": [
                        107
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainModel(int,SequenceStream,int,boolean)')": [
                        117,
                        118,
                        119,
                        120,
                        121,
                        122
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/MockEventTrainer.java": {
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.ml#MockEventTrainer', 'train(DataIndexer)')": [
                        35,
                        36
                    ],
                    "('opennlp.tools.ml#MockEventTrainer', None)": [
                        37,
                        38,
                        39
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameFinderEventStreamTest.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderEventStreamTest', None)": [
                        36,
                        37
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderEventStreamTest', None)": [
                        36,
                        37
                    ]
                }
            }
        }
    },
    "364232f781d0cc91cd4b83012e1f49e62fa81190": {
        "authored_data": "2017 Jan 09 12:48",
        "commit.message": "Restores type parameter in NameFinder\n\nThis closes #34\nSee issue OPENNLP-719\n",
        "commit.author.name": "William D C M SILVA",
        "pcid": "5042595161a3eeba355ac590242d6f4945585e9c",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderEventStream.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderEventStream', None)": [
                        50,
                        62,
                        63,
                        64,
                        65,
                        66
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStream', 'generateEvents(String,String,NameContextGenerator)')": [
                        110
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStream', 'createEvents(NameSample)')": [
                        127
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStream', None)": [
                        45,
                        46,
                        53,
                        65,
                        141,
                        142,
                        149,
                        150
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStream', 'generateEvents(String,String,NameContextGenerator)')": [
                        109
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStream', 'createEvents(NameSample)')": [
                        126,
                        127,
                        128,
                        129,
                        130,
                        131
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStream', 'overrideDefaultType(Span)')": [
                        143,
                        144,
                        145,
                        146,
                        147,
                        148
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameFinderEventStreamTest.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderEventStreamTest', 'testOutcomesForSingleTypeSentence')": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        145
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStreamTest', None)": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStreamTest', 'testOutcomesForSingleTypeSentence')": [
                        48
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStreamTest', 'testOutcomesTypeCantOverride')": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStreamTest', 'testOutcomesWithType')": [
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStreamTest', 'testOutcomesTypeEmpty')": [
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144
                    ]
                }
            }
        }
    },
    "101ce134125f513eb9bfbe86f7a7ba7262c1c5fa": {
        "authored_data": "2017 Jan 07 14:57",
        "commit.message": "OPENNLP-910: Add checkstyle, this closes apache/opennlp#37\n",
        "commit.author.name": "smarthi",
        "pcid": "cb8cf1574f99fc51c9e67b9456ea4d494fd4cf29",
        "changes": {
            "opennlp-brat-annotator/src/main/java/opennlp/bratann/NameFinderAnnService.java": {
                "old": {
                    "('opennlp.bratann#NameFinderAnnService', None)": [
                        43
                    ]
                },
                "new": {
                    "('opennlp.bratann#NameFinderAnnService', None)": [
                        43
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/cmdline/builder/XMLDictionaryToTableTool.java": {
                "old": {
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'run(String)')": [
                        76
                    ],
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'createEntry(String,String)')": [
                        120
                    ],
                    "(None, None)": [
                        123
                    ]
                },
                "new": {
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'run(String)')": [
                        76
                    ],
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'createEntry(String,String)')": [
                        120
                    ]
                }
            },
            "opennlp-morfologik-addon/src/test/java/opennlp/morfologik/lemmatizer/MorfologikLemmatizerTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ]
                }
            },
            "opennlp-morfologik-addon/src/test/java/opennlp/morfologik/tagdict/POSTaggerFactoryTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30
                    ],
                    "('opennlp.morfologik.tagdict#POSTaggerFactoryTest', 'createSampleStream')": [
                        53,
                        54,
                        55
                    ],
                    "('opennlp.morfologik.tagdict#POSTaggerFactoryTest', 'trainPOSModel(ModelType,POSTaggerFactory)')": [
                        67
                    ],
                    "('opennlp.morfologik.tagdict#POSTaggerFactoryTest', 'testPOSTaggerWithCustomFactory')": [
                        84,
                        95,
                        97
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42
                    ],
                    "('opennlp.morfologik.tagdict#POSTaggerFactoryTest', 'createSampleStream')": [
                        51
                    ],
                    "('opennlp.morfologik.tagdict#POSTaggerFactoryTest', 'trainPOSModel(ModelType,POSTaggerFactory)')": [
                        63
                    ],
                    "('opennlp.morfologik.tagdict#POSTaggerFactoryTest', 'testPOSTaggerWithCustomFactory')": [
                        80,
                        91,
                        93
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/CmdLineUtil.java": {
                "old": {
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getIntParameter(String,String)')": [
                        250
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getDoubleParameter(String,String)')": [
                        270
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getIntParameter(String,String)')": [
                        250,
                        251
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getDoubleParameter(String,String)')": [
                        271,
                        272
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/TrainerFactory.java": {
                "new": {
                    "('opennlp.tools.ml#TrainerFactory', 'getTrainerType(Map)')": [
                        93,
                        101,
                        109
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/SimpleTokenizer.java": {
                "old": {
                    "(None, None)": [
                        124,
                        140,
                        141
                    ],
                    "('opennlp.tools.tokenize#CharacterEnum', None)": [
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137
                    ],
                    "('opennlp.tools.tokenize#CharacterEnum', 'toString')": [
                        138,
                        139
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#SimpleTokenizer', None)": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/StringUtil.java": {
                "old": {
                    "('opennlp.tools.util#StringUtil', 'computeShortestEditScript(String,String,int,StringBuffer)')": [
                        220
                    ]
                },
                "new": {
                    "('opennlp.tools.util#StringUtil', 'computeShortestEditScript(String,String,int,StringBuffer)')": [
                        220,
                        221
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameSampleDataStreamTest.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithoutNameTypeAndInvalidData')": [
                        147,
                        154
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', None)": [
                        162,
                        307
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithNameTypeAndInvalidData')": [
                        299
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithoutNameTypeAndInvalidData')": [
                        147,
                        148,
                        155,
                        156
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', None)": [
                        164,
                        165,
                        311,
                        312
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithNameTypeAndInvalidData')": [
                        302,
                        303
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/NewlineSentenceDetectorTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('opennlp.tools.sentdetect#NewlineSentenceDetectorTest', 'testSentenceValues(String)')": [
                        35,
                        36,
                        37,
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('opennlp.tools.sentdetect#NewlineSentenceDetectorTest', 'testSentenceValues(String)')": [
                        34,
                        35,
                        36,
                        37
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/eval/CrossValidationPartitionerTest.java": {
                "old": {
                    "('opennlp.tools.util.eval#CrossValidationPartitionerTest', 'testFailSafty')": [
                        175,
                        182,
                        192
                    ],
                    "('opennlp.tools.util.eval#CrossValidationPartitionerTest', None)": [
                        207
                    ]
                },
                "new": {
                    "('opennlp.tools.util.eval#CrossValidationPartitionerTest', 'testFailSafty')": [
                        175,
                        176,
                        183,
                        184,
                        194,
                        195
                    ],
                    "('opennlp.tools.util.eval#CrossValidationPartitionerTest', None)": [
                        210,
                        211
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/namefind/AbstractNameFinder.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42
                    ]
                }
            },
            "opennlp-uima/src/test/java/opennlp/uima/dictionary/DictionaryResourceTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        44,
                        45
                    ]
                }
            }
        }
    },
    "cb8cf1574f99fc51c9e67b9456ea4d494fd4cf29": {
        "authored_data": "2017 Jan 06 23:16",
        "commit.message": "OPENNLP-910: Add checkstyle, this closes apache/opennlp#36\n",
        "commit.author.name": "smarthi",
        "pcid": "a83ea28f9a9c400e32a14173f6e6d4e5578da720",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/Probabilities.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('opennlp.tools.ml.naivebayes#Probabilities', None)": [
                        29
                    ],
                    "('opennlp.tools.ml.naivebayes#Probabilities', 'discardCountsBelow(double)')": [
                        193
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25
                    ],
                    "('opennlp.tools.ml.naivebayes#Probabilities', None)": [
                        34
                    ],
                    "('opennlp.tools.ml.naivebayes#Probabilities', 'discardCountsBelow(double)')": [
                        198
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/NewlineSentenceDetectorTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            }
        }
    },
    "a83ea28f9a9c400e32a14173f6e6d4e5578da720": {
        "authored_data": "2017 Jan 06 22:15",
        "commit.message": "OPENNLP-910: Add checkstyle, this closes apache/opennlp#29\n",
        "commit.author.name": "smarthi",
        "pcid": "1bccbabb72f7598c2041efdfae54b80707ab38b3",
        "changes": {
            "opennlp-brat-annotator/src/main/java/opennlp/bratann/NameFinderAnnService.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        36,
                        37,
                        38
                    ]
                }
            },
            "opennlp-brat-annotator/src/main/java/opennlp/bratann/NameFinderResource.java": {
                "old": {
                    "(None, None)": [
                        24,
                        32,
                        33,
                        34,
                        35,
                        36
                    ],
                    "('opennlp.bratann#NameFinderResource', None)": [
                        41,
                        42,
                        43
                    ],
                    "('opennlp.bratann#NameFinderResource', 'findNames(String,String)')": [
                        68,
                        70,
                        79,
                        80,
                        95,
                        112,
                        113
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24
                    ],
                    "('opennlp.bratann#NameFinderResource', None)": [
                        40,
                        41,
                        42
                    ],
                    "('opennlp.bratann#NameFinderResource', 'findNames(String,String)')": [
                        67,
                        69,
                        78,
                        93,
                        110,
                        111
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/cmdline/builder/XMLDictionaryToTableTool.java": {
                "old": {
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'run(String)')": [
                        76
                    ],
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'createEntry(String,String)')": [
                        120,
                        121,
                        122
                    ]
                },
                "new": {
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'run(String)')": [
                        76
                    ],
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'createEntry(String,String)')": [
                        120,
                        121
                    ]
                }
            }
        }
    },
    "1bccbabb72f7598c2041efdfae54b80707ab38b3": {
        "authored_data": "2017 Jan 03 16:45",
        "commit.message": "Correct indentation and white spaces\n\nThis closes #30\n\nSee issue OPENNLP-914\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "8fc51b20180480ca869b14555127a38b7e42abeb",
        "changes": {
            "opennlp-brat-annotator/src/main/java/opennlp/bratann/NameFinderResource.java": {
                "old": {
                    "('opennlp.bratann#NameFinderResource', 'findNames(String,String)')": [
                        75,
                        77,
                        88
                    ]
                },
                "new": {
                    "('opennlp.bratann#NameFinderResource', 'findNames(String,String)')": [
                        75,
                        77,
                        88
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/builder/MorfologikDictionayBuilder.java": {
                "old": {
                    "('opennlp.morfologik.builder#MorfologikDictionayBuilder', None)": [
                        37,
                        52,
                        75,
                        79,
                        81
                    ],
                    "('opennlp.morfologik.builder#MorfologikDictionayBuilder', 'build(Path,boolean,boolean,boolean,boolean,boolean)')": [
                        63,
                        66
                    ]
                },
                "new": {
                    "('opennlp.morfologik.builder#MorfologikDictionayBuilder', None)": [
                        37,
                        52,
                        75,
                        79,
                        81
                    ],
                    "('opennlp.morfologik.builder#MorfologikDictionayBuilder', 'build(Path,boolean,boolean,boolean,boolean,boolean)')": [
                        63,
                        66
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/cmdline/CLI.java": {
                "old": {
                    "('opennlp.morfologik.cmdline#CLI', None)": [
                        38,
                        40,
                        42,
                        43,
                        45,
                        47,
                        48,
                        50,
                        51,
                        52,
                        54,
                        55,
                        57,
                        58,
                        59,
                        62,
                        95,
                        98
                    ],
                    "('opennlp.morfologik.cmdline#CLI', 'getToolNames')": [
                        60,
                        61
                    ],
                    "('opennlp.morfologik.cmdline#CLI', 'usage')": [
                        64,
                        65,
                        66,
                        67,
                        68,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        79,
                        81,
                        83,
                        84,
                        85,
                        86,
                        88,
                        89,
                        91,
                        92,
                        93,
                        94
                    ],
                    "('opennlp.morfologik.cmdline#CLI', 'main(String)')": [
                        99,
                        101,
                        102,
                        103,
                        104,
                        106,
                        107,
                        109,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        120,
                        121,
                        122,
                        123,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        133,
                        134,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        150,
                        151,
                        152,
                        154,
                        155,
                        156,
                        157,
                        159
                    ],
                    "(None, None)": [
                        160,
                        161,
                        162,
                        163
                    ]
                },
                "new": {
                    "('opennlp.morfologik.cmdline#CLI', None)": [
                        38,
                        40,
                        42,
                        43,
                        45,
                        47,
                        48,
                        50,
                        51,
                        52,
                        54,
                        55,
                        57,
                        58,
                        59,
                        62,
                        95,
                        98
                    ],
                    "('opennlp.morfologik.cmdline#CLI', 'getToolNames')": [
                        60,
                        61
                    ],
                    "('opennlp.morfologik.cmdline#CLI', 'usage')": [
                        64,
                        65,
                        66,
                        67,
                        68,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        79,
                        81,
                        83,
                        84,
                        85,
                        86,
                        88,
                        89,
                        91,
                        92,
                        93,
                        94
                    ],
                    "('opennlp.morfologik.cmdline#CLI', 'main(String)')": [
                        99,
                        101,
                        102,
                        103,
                        104,
                        106,
                        107,
                        109,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        120,
                        121,
                        122,
                        123,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        133,
                        134,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        150,
                        151,
                        152,
                        154,
                        155,
                        156,
                        157,
                        159
                    ],
                    "(None, None)": [
                        160,
                        161
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/cmdline/builder/MorfologikDictionaryBuilderParams.java": {
                "old": {
                    "(None, None)": [
                        33,
                        35,
                        37,
                        39,
                        41,
                        43,
                        45,
                        47,
                        49,
                        51,
                        53,
                        55
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        35,
                        37,
                        39,
                        41,
                        43,
                        45,
                        47,
                        49,
                        51,
                        53,
                        55
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/cmdline/builder/XMLDictionaryToTableParams.java": {
                "old": {
                    "(None, None)": [
                        34,
                        37,
                        38,
                        40,
                        41,
                        42,
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        35,
                        38,
                        39,
                        40,
                        42,
                        43,
                        44,
                        45,
                        46,
                        48
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/cmdline/builder/XMLDictionaryToTableTool.java": {
                "old": {
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'run(String)')": [
                        76,
                        89,
                        94,
                        96
                    ],
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', None)": [
                        104
                    ],
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'valid(String,String)')": [
                        108,
                        114
                    ],
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'createEntry(String,String)')": [
                        120
                    ]
                },
                "new": {
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'run(String)')": [
                        76,
                        89,
                        94,
                        96
                    ],
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', None)": [
                        104
                    ],
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'valid(String,String)')": [
                        108,
                        114
                    ],
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'createEntry(String,String)')": [
                        120
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/lemmatizer/MorfologikLemmatizer.java": {
                "old": {
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'lemmatize(String,String)')": [
                        48,
                        65,
                        66
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'asString(CharSequence)')": [
                        56
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', None)": [
                        74
                    ]
                },
                "new": {
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'lemmatize(String,String)')": [
                        48,
                        65,
                        66
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'asString(CharSequence)')": [
                        56
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', None)": [
                        74
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/tagdict/MorfologikPOSTaggerFactory.java": {
                "old": {
                    "('opennlp.morfologik.tagdict#MorfologikPOSTaggerFactory', None)": [
                        53,
                        70,
                        72
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikPOSTaggerFactory', 'createTagDictionary(File)')": [
                        55,
                        56,
                        59,
                        61,
                        62,
                        65,
                        68
                    ]
                },
                "new": {
                    "('opennlp.morfologik.tagdict#MorfologikPOSTaggerFactory', None)": [
                        53,
                        71
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikPOSTaggerFactory', 'createTagDictionary(File)')": [
                        55,
                        56,
                        59,
                        61,
                        62,
                        65,
                        68
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/util/MorfologikUtil.java": {
                "old": {
                    "('opennlp.morfologik.util#MorfologikUtil', None)": [
                        25,
                        30
                    ]
                },
                "new": {
                    "('opennlp.morfologik.util#MorfologikUtil', None)": [
                        25,
                        30
                    ]
                }
            },
            "opennlp-morfologik-addon/src/test/java/opennlp/morfologik/builder/POSDictionayBuilderTest.java": {
                "old": {
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', 'testBuildDictionary')": [
                        36
                    ],
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', None)": [
                        43,
                        58,
                        59
                    ],
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', 'createMorfologikDictionary')": [
                        48,
                        53,
                        55
                    ],
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', 'main(String)')": [
                        62,
                        63,
                        64,
                        67,
                        71,
                        74,
                        77
                    ],
                    "(None, None)": [
                        80
                    ]
                },
                "new": {
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', 'testBuildDictionary')": [
                        36
                    ],
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', None)": [
                        43,
                        58,
                        59
                    ],
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', 'createMorfologikDictionary')": [
                        48,
                        53,
                        55
                    ],
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', 'main(String)')": [
                        62,
                        63,
                        64,
                        67,
                        71,
                        74,
                        77
                    ],
                    "(None, None)": [
                        80
                    ]
                }
            },
            "opennlp-morfologik-addon/src/test/java/opennlp/morfologik/lemmatizer/MorfologikLemmatizerTest.java": {
                "old": {
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizerTest', 'testLemmatizeInsensitive')": [
                        36,
                        37,
                        40
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizerTest', None)": [
                        50,
                        64
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizerTest', 'testLemmatizeMultiLemma')": [
                        54,
                        55,
                        58,
                        61
                    ]
                },
                "new": {
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizerTest', 'testLemmatizeInsensitive')": [
                        36,
                        37,
                        40
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizerTest', None)": [
                        50,
                        64
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizerTest', 'testLemmatizeMultiLemma')": [
                        54,
                        55,
                        58,
                        61
                    ]
                }
            },
            "opennlp-morfologik-addon/src/test/java/opennlp/morfologik/tagdict/POSTaggerFactoryTest.java": {
                "old": {
                    "('opennlp.morfologik.tagdict#POSTaggerFactoryTest', 'createSampleStream')": [
                        55
                    ],
                    "('opennlp.morfologik.tagdict#POSTaggerFactoryTest', 'testPOSTaggerWithCustomFactory')": [
                        87,
                        96
                    ]
                },
                "new": {
                    "('opennlp.morfologik.tagdict#POSTaggerFactoryTest', 'createSampleStream')": [
                        55
                    ],
                    "('opennlp.morfologik.tagdict#POSTaggerFactoryTest', 'testPOSTaggerWithCustomFactory')": [
                        87,
                        96
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkSample.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkSample', 'phrasesAsSpanList(String,String,String)')": [
                        129
                    ],
                    "('opennlp.tools.chunker#ChunkSample', 'nicePrint')": [
                        161,
                        162,
                        163
                    ],
                    "('opennlp.tools.chunker#ChunkSample', 'toString')": [
                        194,
                        195,
                        196,
                        197,
                        198,
                        199
                    ],
                    "('opennlp.tools.chunker#ChunkSample', None)": [
                        200
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkSample', 'phrasesAsSpanList(String,String,String)')": [
                        129
                    ],
                    "('opennlp.tools.chunker#ChunkSample', 'nicePrint')": [
                        161,
                        162,
                        163
                    ],
                    "('opennlp.tools.chunker#ChunkSample', 'toString')": [
                        194,
                        195,
                        196,
                        197,
                        198,
                        199
                    ],
                    "('opennlp.tools.chunker#ChunkSample', None)": [
                        200
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkSampleSequenceStream.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkSampleSequenceStream', 'read')": [
                        48
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkSampleSequenceStream', 'read')": [
                        48
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkSampleStream.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkSampleStream', 'read')": [
                        51,
                        54
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkSampleStream', 'read')": [
                        51,
                        54
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkerME.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkerME', None)": [
                        67,
                        97,
                        98,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkerME', None)": [
                        67,
                        97,
                        98,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/DefaultChunkerContextGenerator.java": {
                "old": {
                    "('opennlp.tools.chunker#DefaultChunkerContextGenerator', 'getContext(int,String,String,String)')": [
                        38
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#DefaultChunkerContextGenerator', 'getContext(int,String,String,String)')": [
                        38
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/DefaultChunkerSequenceValidator.java": {
                "old": {
                    "('opennlp.tools.chunker#DefaultChunkerSequenceValidator', None)": [
                        22
                    ],
                    "('opennlp.tools.chunker#DefaultChunkerSequenceValidator', 'validOutcome(String,String)')": [
                        44
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#DefaultChunkerSequenceValidator', None)": [
                        22
                    ],
                    "('opennlp.tools.chunker#DefaultChunkerSequenceValidator', 'validOutcome(String,String)')": [
                        44
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/AbstractConverterTool.java": {
                "old": {
                    "('opennlp.tools.cmdline#AbstractConverterTool', 'getShortDescription')": [
                        45
                    ],
                    "('opennlp.tools.cmdline#AbstractConverterTool', 'run(String,String)')": [
                        108
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#AbstractConverterTool', 'getShortDescription')": [
                        45
                    ],
                    "('opennlp.tools.cmdline#AbstractConverterTool', 'run(String,String)')": [
                        108
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/ArgumentParser.java": {
                "old": {
                    "('opennlp.tools.cmdline#ArgumentParser', None)": [
                        52,
                        53,
                        58,
                        59,
                        115,
                        223,
                        233,
                        257,
                        258,
                        259
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'checkProxyInterfaces(Class)')": [
                        186,
                        193,
                        194,
                        195
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'createArguments(Class)')": [
                        292,
                        297,
                        301
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'createUsage(Class)')": [
                        349
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#ArgumentParser', None)": [
                        52,
                        57,
                        113,
                        221,
                        231,
                        255,
                        256,
                        257
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'checkProxyInterfaces(Class)')": [
                        184,
                        191,
                        192,
                        193
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'createArguments(Class)')": [
                        290,
                        295,
                        299
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'createUsage(Class)')": [
                        347
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/CLI.java": {
                "old": {
                    "('opennlp.tools.cmdline#CLI', None)": [
                        126,
                        164
                    ],
                    "('opennlp.tools.cmdline#CLI', 'main(String)')": [
                        208,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#CLI', None)": [
                        126,
                        164
                    ],
                    "('opennlp.tools.cmdline#CLI', 'main(String)')": [
                        208,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/CmdLineUtil.java": {
                "old": {
                    "('opennlp.tools.cmdline#CmdLineUtil', None)": [
                        46,
                        61,
                        66
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'checkOutputFile(String,File)')": [
                        138
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getParameter(String,String)')": [
                        226,
                        227,
                        228,
                        229,
                        230,
                        231
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getIntParameter(String,String)')": [
                        248
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getDoubleParameter(String,String)')": [
                        268
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#CmdLineUtil', None)": [
                        46,
                        61,
                        66
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'checkOutputFile(String,File)')": [
                        138
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getParameter(String,String)')": [
                        226,
                        227,
                        228,
                        229,
                        230,
                        231
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getIntParameter(String,String)')": [
                        248
                    ],
                    "('opennlp.tools.cmdline#CmdLineUtil', 'getDoubleParameter(String,String)')": [
                        268
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/EvaluationErrorPrinter.java": {
                "old": {
                    "('opennlp.tools.cmdline#EvaluationErrorPrinter', 'printError(T,T)')": [
                        109,
                        110
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#EvaluationErrorPrinter', 'printError(T,T)')": [
                        109,
                        110
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/GenerateManualTool.java": {
                "old": {
                    "('opennlp.tools.cmdline#GenerateManualTool', None)": [
                        85,
                        105,
                        236
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#GenerateManualTool', None)": [
                        85,
                        105,
                        236
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/PerformanceMonitor.java": {
                "old": {
                    "('opennlp.tools.cmdline#PerformanceMonitor', None)": [
                        40
                    ],
                    "('opennlp.tools.cmdline#PerformanceMonitor', 'startAndPrintThroughput')": [
                        131
                    ],
                    "('opennlp.tools.cmdline#PerformanceMonitor', 'stopAndPrintFinalResult')": [
                        160
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#PerformanceMonitor', None)": [
                        40
                    ],
                    "('opennlp.tools.cmdline#PerformanceMonitor', 'startAndPrintThroughput')": [
                        131
                    ],
                    "('opennlp.tools.cmdline#PerformanceMonitor', 'stopAndPrintFinalResult')": [
                        160
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/StreamFactoryRegistry.java": {
                "old": {
                    "('opennlp.tools.cmdline#StreamFactoryRegistry', 'getFactory(Class,String)')": [
                        201
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#StreamFactoryRegistry', 'getFactory(Class,String)')": [
                        201
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/TypedCmdLineTool.java": {
                "old": {
                    "('opennlp.tools.cmdline#TypedCmdLineTool', 'getBasicHelp(Class)')": [
                        102
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#TypedCmdLineTool', 'getBasicHelp(Class)')": [
                        102
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/chunker/ChunkerDetailedFMeasureListener.java": {
                "old": {
                    "('opennlp.tools.cmdline.chunker#ChunkerDetailedFMeasureListener', None)": [
                        26
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.chunker#ChunkerDetailedFMeasureListener', None)": [
                        26
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/chunker/ChunkerEvaluatorTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.chunker#ChunkerEvaluatorTool', 'run(String,String)')": [
                        59,
                        62
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.chunker#ChunkerEvaluatorTool', 'run(String,String)')": [
                        59,
                        62
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/chunker/ChunkerMETool.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/chunker/ChunkerTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.chunker#ChunkerTrainerTool', 'run(String,String)')": [
                        56
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.chunker#ChunkerTrainerTool', 'run(String,String)')": [
                        56
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/doccat/DoccatTool.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/doccat/DoccatTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.doccat#DoccatTrainerTool', 'run(String,String)')": [
                        59
                    ],
                    "('opennlp.tools.cmdline.doccat#DoccatTrainerTool', 'createTokenizer(String)')": [
                        94
                    ],
                    "('opennlp.tools.cmdline.doccat#DoccatTrainerTool', 'createFeatureGenerators(String)')": [
                        101
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.doccat#DoccatTrainerTool', 'run(String,String)')": [
                        59
                    ],
                    "('opennlp.tools.cmdline.doccat#DoccatTrainerTool', 'createTokenizer(String)')": [
                        94
                    ],
                    "('opennlp.tools.cmdline.doccat#DoccatTrainerTool', 'createFeatureGenerators(String)')": [
                        101
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/lemmatizer/LemmatizerMETool.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/CensusDictionaryCreatorTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.namefind#CensusDictionaryCreatorTool', None)": [
                        57,
                        81
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.namefind#CensusDictionaryCreatorTool', None)": [
                        57,
                        81
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/NameSampleCountersStream.java": {
                "old": {
                    "('opennlp.tools.cmdline.namefind#NameSampleCountersStream', None)": [
                        38,
                        40,
                        67,
                        76,
                        80,
                        84
                    ],
                    "('opennlp.tools.cmdline.namefind#NameSampleCountersStream', 'read')": [
                        47,
                        49,
                        53,
                        56,
                        60,
                        64
                    ],
                    "('opennlp.tools.cmdline.namefind#NameSampleCountersStream', 'reset')": [
                        71
                    ],
                    "('opennlp.tools.cmdline.namefind#NameSampleCountersStream', 'printSummary')": [
                        93
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.namefind#NameSampleCountersStream', None)": [
                        38,
                        40,
                        67,
                        76,
                        80,
                        84
                    ],
                    "('opennlp.tools.cmdline.namefind#NameSampleCountersStream', 'read')": [
                        47,
                        49,
                        53,
                        56,
                        60,
                        64
                    ],
                    "('opennlp.tools.cmdline.namefind#NameSampleCountersStream', 'reset')": [
                        71
                    ],
                    "('opennlp.tools.cmdline.namefind#NameSampleCountersStream', 'printSummary')": [
                        93
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TokenNameFinderCrossValidatorTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderCrossValidatorTool', 'run(String,String)')": [
                        126
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderCrossValidatorTool', 'run(String,String)')": [
                        126
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TokenNameFinderEvaluatorTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderEvaluatorTool', 'run(String,String)')": [
                        119
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderEvaluatorTool', 'run(String,String)')": [
                        119
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TokenNameFinderTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTool', 'run(String)')": [
                        62,
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTool', 'run(String)')": [
                        63,
                        64
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TokenNameFinderTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', 'openFeatureGeneratorBytes(String)')": [
                        63
                    ],
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', 'loadResources(File,File)')": [
                        111
                    ],
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', 'run(String,String)')": [
                        167,
                        210,
                        228,
                        232
                    ],
                    "(None, None)": [
                        234
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', 'openFeatureGeneratorBytes(String)')": [
                        63
                    ],
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', 'loadResources(File,File)')": [
                        111
                    ],
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', 'run(String,String)')": [
                        167,
                        210,
                        228,
                        232
                    ],
                    "(None, None)": [
                        234
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/params/CVParams.java": {
                "old": {
                    "(None, None)": [
                        32,
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        36
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/params/DetailedFMeasureEvaluatorParams.java": {
                "old": {
                    "(None, None)": [
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/params/EvaluatorParams.java": {
                "old": {
                    "(None, None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/parser/BuildModelUpdaterTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.parser#BuildModelUpdaterTool', 'trainAndUpdate(ParserModel,ObjectStream,ModelUpdaterParams)')": [
                        43,
                        45,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        54,
                        56
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.parser#BuildModelUpdaterTool', 'trainAndUpdate(ParserModel,ObjectStream,ModelUpdaterParams)')": [
                        43,
                        45,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        54,
                        56
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/parser/CheckModelUpdaterTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.parser#CheckModelUpdaterTool', 'trainAndUpdate(ParserModel,ObjectStream,ModelUpdaterParams)')": [
                        44,
                        46,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        56,
                        58
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.parser#CheckModelUpdaterTool', 'trainAndUpdate(ParserModel,ObjectStream,ModelUpdaterParams)')": [
                        44,
                        46,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        56,
                        58
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/parser/ParserConverterTool.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/parser/ParserTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.parser#ParserTool', 'run(String)')": [
                        124
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.cmdline.parser#ParserTool', None)": [
                        59
                    ],
                    "('opennlp.tools.cmdline.parser#ParserTool', 'run(String)')": [
                        126
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/parser/ParserTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.parser#ParserTrainerTool', 'parseParserType(String)')": [
                        73,
                        75
                    ],
                    "('opennlp.tools.cmdline.parser#ParserTrainerTool', 'run(String,String)')": [
                        143,
                        155,
                        156
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.parser#ParserTrainerTool', 'parseParserType(String)')": [
                        73,
                        75
                    ],
                    "('opennlp.tools.cmdline.parser#ParserTrainerTool', 'run(String,String)')": [
                        143,
                        155,
                        156
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/postag/POSModelLoader.java": {
                "old": {
                    "('opennlp.tools.cmdline.postag#POSModelLoader', None)": [
                        30
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.postag#POSModelLoader', None)": [
                        30
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/postag/POSTaggerTool.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/postag/POSTaggerTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.postag#POSTaggerTrainerTool', 'run(String,String)')": [
                        64
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.postag#POSTaggerTrainerTool', 'run(String,String)')": [
                        64
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/sentdetect/SentenceDetectorEvaluatorTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.sentdetect#SentenceDetectorEvaluatorTool', 'run(String,String)')": [
                        61
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.sentdetect#SentenceDetectorEvaluatorTool', 'run(String,String)')": [
                        61
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/sentdetect/SentenceDetectorTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.sentdetect#SentenceDetectorTrainerTool', 'run(String,String)')": [
                        73
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.sentdetect#SentenceDetectorTrainerTool', 'run(String,String)')": [
                        73
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/tokenizer/CommandLineTokenizer.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/tokenizer/DictionaryDetokenizerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.tokenizer#DictionaryDetokenizerTool', 'run(String)')": [
                        46,
                        47,
                        48,
                        50,
                        51,
                        53,
                        54,
                        67
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.tokenizer#DictionaryDetokenizerTool', 'run(String)')": [
                        46,
                        47,
                        48,
                        50,
                        51,
                        53,
                        54,
                        67
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/tokenizer/SimpleTokenizerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.tokenizer#SimpleTokenizerTool', 'run(String)')": [
                        44
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.tokenizer#SimpleTokenizerTool', 'run(String)')": [
                        44
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/tokenizer/TokenizerMETool.java": {
                "old": {
                    "('opennlp.tools.cmdline.tokenizer#TokenizerMETool', 'run(String)')": [
                        44
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.tokenizer#TokenizerMETool', 'run(String)')": [
                        44
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/tokenizer/TokenizerTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.tokenizer#TokenizerTrainerTool', 'run(String,String)')": [
                        76
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.tokenizer#TokenizerTrainerTool', 'run(String,String)')": [
                        76
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/Dictionary.java": {
                "old": {
                    "('opennlp.tools.dictionary#Dictionary', None)": [
                        71,
                        202
                    ],
                    "('opennlp.tools.dictionary#Dictionary', 'put(StringList)')": [
                        142,
                        143,
                        144
                    ],
                    "('opennlp.tools.dictionary#Dictionary', 'getMinTokenCount')": [
                        152
                    ],
                    "('opennlp.tools.dictionary#Dictionary', 'getMaxTokenCount')": [
                        160
                    ],
                    "('opennlp.tools.dictionary#Dictionary', 'contains(StringList)')": [
                        170
                    ],
                    "('opennlp.tools.dictionary#Dictionary', 'remove(StringList)')": [
                        179
                    ],
                    "('opennlp.tools.dictionary#Dictionary', 'serialize(OutputStream)')": [
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241
                    ]
                },
                "new": {
                    "('opennlp.tools.dictionary#Dictionary', None)": [
                        71,
                        202,
                        203
                    ],
                    "('opennlp.tools.dictionary#Dictionary', 'put(StringList)')": [
                        142,
                        143,
                        144
                    ],
                    "('opennlp.tools.dictionary#Dictionary', 'getMinTokenCount')": [
                        152
                    ],
                    "('opennlp.tools.dictionary#Dictionary', 'getMaxTokenCount')": [
                        160
                    ],
                    "('opennlp.tools.dictionary#Dictionary', 'contains(StringList)')": [
                        170
                    ],
                    "('opennlp.tools.dictionary#Dictionary', 'remove(StringList)')": [
                        179
                    ],
                    "('opennlp.tools.dictionary#Dictionary', 'serialize(OutputStream)')": [
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/serializer/DictionarySerializer.java": {
                "old": {
                    "(None, None)": [
                        48,
                        49
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', None)": [
                        57,
                        58,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', 'create(InputStream,EntryInserter)')": [
                        225
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', 'serialize(OutputStream,Iterator)')": [
                        244,
                        245
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', 'serialize(OutputStream,Iterator,boolean)')": [
                        262,
                        263,
                        288
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', 'serializeEntry(TransformerHandler,Entry)')": [
                        307,
                        315
                    ]
                },
                "new": {
                    "(None, None)": [
                        48,
                        49
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', None)": [
                        57,
                        58,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', 'create(InputStream,EntryInserter)')": [
                        226
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', 'serialize(OutputStream,Iterator)')": [
                        245,
                        246
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', 'serialize(OutputStream,Iterator,boolean)')": [
                        263,
                        288
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', 'serializeEntry(TransformerHandler,Entry)')": [
                        307,
                        315
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DoccatFactory.java": {
                "old": {
                    "('opennlp.tools.doccat#DoccatFactory', 'create(String,Tokenizer,FeatureGenerator)')": [
                        101
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DoccatFactory', 'create(String,Tokenizer,FeatureGenerator)')": [
                        101
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentCategorizer.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentCategorizerContextGenerator.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentCategorizerEvaluator.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentCategorizerEvaluator', None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerEvaluator', None)": [
                        32
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentCategorizerEventStream.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27,
                        79
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerEventStream', None)": [
                        43,
                        55
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerEventStream', 'createEvents(DocumentSample)')": [
                        61
                    ]
                },
                "new": {
                    "(None, None)": [
                        17,
                        27,
                        28,
                        80,
                        81
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerEventStream', None)": [
                        44,
                        56
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerEventStream', 'createEvents(DocumentSample)')": [
                        62
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentCategorizerME.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'categorize(String,Map)')": [
                        97
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'train(String,ObjectStream,TrainingParameters,DoccatFactory)')": [
                        177,
                        178,
                        183
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'categorize(String,Map)')": [
                        98
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'train(String,ObjectStream,TrainingParameters,DoccatFactory)')": [
                        178,
                        179,
                        184
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentSample.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentSample', None)": [
                        55
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.doccat#DocumentSample', None)": [
                        56
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentSampleStream.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentSampleStream', 'read')": [
                        53
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DocumentSampleStream', 'read')": [
                        53
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/entitylinker/BaseLink.java": {
                "old": {
                    "('opennlp.tools.entitylinker#BaseLink', None)": [
                        43,
                        44,
                        45,
                        46,
                        50,
                        51,
                        52,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ],
                    "('opennlp.tools.entitylinker#BaseLink', None)": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        52,
                        53,
                        54,
                        55,
                        56
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/entitylinker/EntityLinker.java": {
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/entitylinker/EntityLinkerFactory.java": {
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/entitylinker/EntityLinkerProperties.java": {
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/entitylinker/LinkedSpan.java": {
                "new": {
                    "(None, None)": [
                        16
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/BioNLP2004NameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#BioNLP2004NameSampleStream', 'read')": [
                        136
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#BioNLP2004NameSampleStream', 'read')": [
                        136
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ChunkerSampleStreamFactory.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll02NameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#Conll02NameSampleStream', None)": [
                        49
                    ],
                    "('opennlp.tools.formats#Conll02NameSampleStream', 'read')": [
                        175
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#Conll02NameSampleStream', None)": [
                        49
                    ],
                    "('opennlp.tools.formats#Conll02NameSampleStream', 'read')": [
                        175
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll03NameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#Conll03NameSampleStream', None)": [
                        36
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStream', 'read')": [
                        90,
                        124,
                        128,
                        132,
                        136
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#Conll03NameSampleStream', None)": [
                        36
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStream', 'read')": [
                        90,
                        124,
                        128,
                        132,
                        136
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ConllXPOSSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#ConllXPOSSampleStream', 'read')": [
                        62,
                        64,
                        66,
                        68,
                        69,
                        71,
                        72,
                        74,
                        75,
                        77,
                        79,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        91,
                        92,
                        93,
                        95,
                        96,
                        98
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#ConllXPOSSampleStream', 'read')": [
                        62,
                        64,
                        66,
                        68,
                        69,
                        71,
                        72,
                        74,
                        75,
                        77,
                        79,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        91,
                        92,
                        93,
                        95,
                        96,
                        98
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/DirectorySampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#DirectorySampleStream', None)": [
                        48
                    ],
                    "('opennlp.tools.formats#DirectorySampleStream', 'read')": [
                        74
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#DirectorySampleStream', None)": [
                        48
                    ],
                    "('opennlp.tools.formats#DirectorySampleStream', 'read')": [
                        74
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/DocumentSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats#DocumentSampleStreamFactory', 'create(String)')": [
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.formats#DocumentSampleStreamFactory', 'create(String)')": [
                        54
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/EvalitaNameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#EvalitaNameSampleStream', None)": [
                        58
                    ],
                    "('opennlp.tools.formats#EvalitaNameSampleStream', 'read')": [
                        135,
                        188
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#EvalitaNameSampleStream', None)": [
                        58
                    ],
                    "('opennlp.tools.formats#EvalitaNameSampleStream', 'read')": [
                        135,
                        188
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/LeipzigDoccatSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#LeipzigDoccatSampleStream', None)": [
                        78
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#LeipzigDoccatSampleStream', None)": [
                        78
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/LeipzigDocumentSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats#LeipzigDocumentSampleStreamFactory', 'create(String)')": [
                        59,
                        66,
                        68,
                        80
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#LeipzigDocumentSampleStreamFactory', 'create(String)')": [
                        59,
                        66,
                        68,
                        80
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/LemmatizerSampleStreamFactory.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/NameFinderCensus90NameStream.java": {
                "old": {
                    "('opennlp.tools.formats#NameFinderCensus90NameStream', None)": [
                        69
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#NameFinderCensus90NameStream', None)": [
                        69
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/NameSampleDataStreamFactory.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ParseSampleStreamFactory.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/SentenceSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats#SentenceSampleStreamFactory', 'create(String)')": [
                        56
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#SentenceSampleStreamFactory', 'create(String)')": [
                        56
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/TokenSampleStreamFactory.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/WordTagSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats#WordTagSampleStreamFactory', 'registerFactory')": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.formats#WordTagSampleStreamFactory', 'registerFactory')": [
                        42
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADChunkSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', None)": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        123,
                        124,
                        134,
                        135,
                        136,
                        137,
                        138,
                        184,
                        185,
                        186,
                        187,
                        188,
                        217,
                        267,
                        268,
                        271,
                        272,
                        275,
                        276,
                        279
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'read')": [
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'processRoot(Node,List,List,List)')": [
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'processNode(Node,List,List,List,String)')": [
                        139,
                        140,
                        144,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'processLeaf(Leaf,boolean,String,List,List,List)')": [
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'getChunkTag(Leaf)')": [
                        239
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'setStart(int)')": [
                        265,
                        266
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'setEnd(int)')": [
                        269,
                        270
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'reset')": [
                        273,
                        274
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'close')": [
                        277,
                        278
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', None)": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        123,
                        124,
                        134,
                        135,
                        136,
                        137,
                        138,
                        184,
                        185,
                        186,
                        187,
                        188,
                        217,
                        267,
                        268,
                        271,
                        272,
                        275,
                        276,
                        279
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'read')": [
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'processRoot(Node,List,List,List)')": [
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'processNode(Node,List,List,List,String)')": [
                        139,
                        140,
                        144,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'processLeaf(Leaf,boolean,String,List,List,List)')": [
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'getChunkTag(Leaf)')": [
                        239
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'setStart(int)')": [
                        265,
                        266
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'setEnd(int)')": [
                        269,
                        270
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'reset')": [
                        273,
                        274
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'close')": [
                        277,
                        278
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADChunkSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamFactory', 'create(String)')": [
                        82,
                        91,
                        95
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamFactory', 'create(String)')": [
                        82,
                        91,
                        95
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADNameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'read')": [
                        214
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'processLeaf(Leaf,List,List)')": [
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', None)": [
                        330,
                        331,
                        332,
                        333,
                        334,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'processLexeme(String)')": [
                        340
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'getNER(String)')": [
                        419
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'read')": [
                        214
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'processLeaf(Leaf,List,List)')": [
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', None)": [
                        330,
                        331,
                        332,
                        333,
                        334,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'processLexeme(String)')": [
                        340
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'getNER(String)')": [
                        419
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADNameSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADNameSampleStreamFactory', 'create(String)')": [
                        78
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADNameSampleStreamFactory', 'create(String)')": [
                        78
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADPOSSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamFactory', 'create(String)')": [
                        77
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamFactory', 'create(String)')": [
                        77
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADSentenceSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADSentenceSampleStream', 'read')": [
                        121,
                        123
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADSentenceSampleStream', 'read')": [
                        121,
                        122,
                        124,
                        125
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADSentenceSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADSentenceSampleStreamFactory', 'create(String)')": [
                        75
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADSentenceSampleStreamFactory', 'create(String)')": [
                        75
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADSentenceStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADSentenceStream', None)": [
                        46,
                        47,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        95,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        149,
                        150,
                        167,
                        178,
                        211,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        352,
                        419,
                        425,
                        446
                    ],
                    "('opennlp.tools.formats.ad#ADSentenceStream', 'read')": [
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558,
                        559,
                        560,
                        561,
                        562,
                        563,
                        564,
                        565
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADSentenceStream', None)": [
                        46,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        94,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        148,
                        149,
                        166,
                        177,
                        210,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        351,
                        352,
                        353,
                        420,
                        421,
                        422,
                        428,
                        449
                    ],
                    "('opennlp.tools.formats.ad#ADSentenceStream', 'read')": [
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558,
                        559,
                        560,
                        561,
                        562,
                        563,
                        564,
                        565,
                        566,
                        567,
                        568
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/AnnotationConfiguration.java": {
                "old": {
                    "('opennlp.tools.formats.brat#AnnotationConfiguration', 'parse(InputStream)')": [
                        61,
                        73,
                        74,
                        75,
                        77,
                        78,
                        79,
                        81,
                        82,
                        83,
                        85,
                        86
                    ],
                    "('opennlp.tools.formats.brat#AnnotationConfiguration', None)": [
                        93
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#AnnotationConfiguration', 'parse(InputStream)')": [
                        61,
                        73,
                        74,
                        75,
                        77,
                        78,
                        79,
                        81,
                        82,
                        83,
                        85,
                        86
                    ],
                    "('opennlp.tools.formats.brat#AnnotationConfiguration', None)": [
                        93
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratAnnotation.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratAnnotation', None)": [
                        27
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratAnnotation', None)": [
                        27
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratAnnotationStream.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratAnnotationStream', 'read')": [
                        193
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratAnnotationStream', 'read')": [
                        193
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratDocumentStream.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratDocumentStream', None)": [
                        45,
                        55
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratDocumentStream', None)": [
                        45,
                        55
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratNameSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratNameSampleStreamFactory', 'create(String)')": [
                        142
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratNameSampleStreamFactory', 'create(String)')": [
                        142
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/convert/ParseToPOSSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.convert#ParseToPOSSampleStream', 'read')": [
                        47
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.convert#ParseToPOSSampleStream', 'read')": [
                        47
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/frenchtreebank/ConstitDocumentHandler.java": {
                "old": {
                    "('opennlp.tools.formats.frenchtreebank#ConstitDocumentHandler', 'endElement(String,String,String)')": [
                        170
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.frenchtreebank#ConstitDocumentHandler', 'endElement(String,String,String)')": [
                        170
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/muc/Muc6NameSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.muc#Muc6NameSampleStreamFactory', 'create(String)')": [
                        57
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.muc#Muc6NameSampleStreamFactory', 'create(String)')": [
                        57
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ontonotes/OntoNotesNameSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.ontonotes#OntoNotesNameSampleStreamFactory', 'create(String)')": [
                        42
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ontonotes#OntoNotesNameSampleStreamFactory', 'create(String)')": [
                        42,
                        43
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ontonotes/OntoNotesParseSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.ontonotes#OntoNotesParseSampleStream', 'read')": [
                        38
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ontonotes#OntoNotesParseSampleStream', 'read')": [
                        38
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ontonotes/OntoNotesParseSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.ontonotes#OntoNotesParseSampleStreamFactory', 'create(String)')": [
                        41
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ontonotes#OntoNotesParseSampleStreamFactory', 'create(String)')": [
                        41,
                        42
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/languagemodel/LanguageModel.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/languagemodel/NGramLanguageModel.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/DefaultLemmatizerContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28
                    ],
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerContextGenerator', None)": [
                        32,
                        57
                    ],
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerContextGenerator', 'getContext(int,String,String,String)')": [
                        82,
                        88,
                        111
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28
                    ],
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerContextGenerator', None)": [
                        32,
                        57
                    ],
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerContextGenerator', 'getContext(int,String,String,String)')": [
                        82,
                        88,
                        111
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/DefaultLemmatizerSequenceValidator.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerSequenceValidator', None)": [
                        22
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerSequenceValidator', None)": [
                        22
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/DictionaryLemmatizer.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#DictionaryLemmatizer', None)": [
                        44,
                        46,
                        67,
                        76
                    ],
                    "('opennlp.tools.lemmatizer#DictionaryLemmatizer', 'lemmatize(String,String)')": [
                        92
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#DictionaryLemmatizer', None)": [
                        44,
                        46,
                        67,
                        76
                    ],
                    "('opennlp.tools.lemmatizer#DictionaryLemmatizer', 'lemmatize(String,String)')": [
                        92
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmaSample.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmaSample', None)": [
                        33,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        50,
                        73,
                        97
                    ],
                    "('opennlp.tools.lemmatizer#LemmaSample', 'toString')": [
                        91,
                        92,
                        93,
                        94,
                        95,
                        96
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#LemmaSample', None)": [
                        33,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        50,
                        73,
                        96
                    ],
                    "('opennlp.tools.lemmatizer#LemmaSample', 'toString')": [
                        90,
                        92,
                        93,
                        94,
                        95
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmaSampleEventStream.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmaSampleEventStream', None)": [
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.lemmatizer#LemmaSampleEventStream', None)": [
                        45
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmaSampleSequenceStream.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmaSampleSequenceStream', 'read')": [
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.lemmatizer#LemmaSampleSequenceStream', 'read')": [
                        49
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmaSampleStream.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmaSampleStream', 'read')": [
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.lemmatizer#LemmaSampleStream', 'read')": [
                        60
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/Lemmatizer.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmatizerContextGenerator.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmatizerEvaluationMonitor.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmatizerEvaluator.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmatizerEvaluator', 'processSample(LemmaSample)')": [
                        60
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerEvaluator', 'processSample(LemmaSample)')": [
                        61
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmatizerFactory.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmatizerME.java": {
                "old": {
                    "(None, None)": [
                        43,
                        44
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerME', None)": [
                        48,
                        52,
                        54,
                        57,
                        65,
                        72,
                        86,
                        92,
                        111,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        142,
                        195
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerME', 'lemmatize(String,String)')": [
                        87
                    ]
                },
                "new": {
                    "(None, None)": [
                        17,
                        44,
                        45
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerME', None)": [
                        49,
                        53,
                        55,
                        58,
                        66,
                        73,
                        87,
                        93,
                        112,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        143,
                        196
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerME', 'lemmatize(String,String)')": [
                        88
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmatizerModel.java": {
                "old": {
                    "(None, None)": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        122
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerModel', None)": [
                        42,
                        43,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        52,
                        53,
                        54,
                        55,
                        57,
                        58,
                        59,
                        60,
                        62,
                        63,
                        64,
                        65,
                        67,
                        68,
                        69,
                        71,
                        72,
                        73,
                        75,
                        76,
                        77,
                        79,
                        80,
                        81,
                        83,
                        89,
                        90,
                        111,
                        112,
                        114,
                        117
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerModel', 'validateArtifactMap')": [
                        84,
                        85,
                        87,
                        88
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerModel', 'getLemmatizerSequenceModel')": [
                        92,
                        94,
                        96,
                        97,
                        99,
                        100,
                        101,
                        102,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerModel', 'getDefaultFactory')": [
                        115,
                        116
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerModel', 'getFactory')": [
                        120,
                        121
                    ]
                },
                "new": {
                    "(None, None)": [
                        17,
                        36,
                        37,
                        38,
                        39,
                        40,
                        123
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerModel', None)": [
                        43,
                        44,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        53,
                        54,
                        55,
                        56,
                        58,
                        59,
                        60,
                        61,
                        63,
                        64,
                        65,
                        66,
                        68,
                        69,
                        70,
                        72,
                        73,
                        74,
                        76,
                        77,
                        78,
                        80,
                        81,
                        82,
                        84,
                        90,
                        91,
                        112,
                        113,
                        115,
                        118
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerModel', 'validateArtifactMap')": [
                        85,
                        86,
                        88,
                        89
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerModel', 'getLemmatizerSequenceModel')": [
                        93,
                        95,
                        97,
                        98,
                        100,
                        101,
                        102,
                        103,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerModel', 'getDefaultFactory')": [
                        116,
                        117
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerModel', 'getFactory')": [
                        121,
                        122
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/BeamSearch.java": {
                "old": {
                    "('opennlp.tools.ml#BeamSearch', 'bestSequences(int,T,Object,double,BeamSearchContextGenerator,SequenceValidator)')": [
                        120,
                        126,
                        131,
                        134
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#BeamSearch', 'bestSequences(int,T,Object,double,BeamSearchContextGenerator,SequenceValidator)')": [
                        120,
                        126,
                        131,
                        134
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/EventTrainer.java": {
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/TrainerFactory.java": {
                "old": {
                    "('opennlp.tools.ml#TrainerFactory', 'getTrainerType(Map)')": [
                        62,
                        73
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'getSequenceModelTrainer(Map,Map)')": [
                        118
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'getEventModelSequenceTrainer(Map,Map)')": [
                        138
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'getEventTrainer(Map,Map)')": [
                        165
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#TrainerFactory', 'getTrainerType(Map)')": [
                        62,
                        73
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'getSequenceModelTrainer(Map,Map)')": [
                        118
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'getEventModelSequenceTrainer(Map,Map)')": [
                        138
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'getEventTrainer(Map,Map)')": [
                        165
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/BasicContextGenerator.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#BasicContextGenerator', None)": [
                        36,
                        38
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#BasicContextGenerator', None)": [
                        36,
                        38
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GISTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(int,DataIndexer,Prior,int,int)')": [
                        276,
                        277,
                        304,
                        326,
                        337,
                        364,
                        367,
                        374,
                        390
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'findParameters(int,double)')": [
                        402,
                        403,
                        404
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', None)": [
                        499
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'nextIteration(double,CompletionService)')": [
                        555,
                        564,
                        566,
                        567,
                        568,
                        569,
                        598,
                        612,
                        618,
                        621
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(int,DataIndexer,Prior,int,int)')": [
                        276,
                        277,
                        304,
                        326,
                        337,
                        364,
                        367,
                        374,
                        390
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'findParameters(int,double)')": [
                        402,
                        403,
                        404
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', None)": [
                        499
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'nextIteration(double,CompletionService)')": [
                        555,
                        564,
                        566,
                        567,
                        568,
                        569,
                        598,
                        612,
                        618,
                        621
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/IntegerPool.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#IntegerPool', None)": [
                        29
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#IntegerPool', None)": [
                        29
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/RealBasicEventStream.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#RealBasicEventStream', 'createEvent(String)')": [
                        54
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#RealBasicEventStream', 'createEvent(String)')": [
                        54
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/BinaryGISModelWriter.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.io#BinaryGISModelWriter', None)": [
                        34
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.io#BinaryGISModelWriter', None)": [
                        34
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/BinaryQNModelReader.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/BinaryQNModelWriter.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/GISModelWriter.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.io#GISModelWriter', 'compressOutcomes(ComparablePredicate)')": [
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        159
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.io#GISModelWriter', 'compressOutcomes(ComparablePredicate)')": [
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        158,
                        159
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/ObjectQNModelReader.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/OldFormatGISModelReader.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.io#OldFormatGISModelReader', None)": [
                        38
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.io#OldFormatGISModelReader', None)": [
                        38
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/PlainTextGISModelWriter.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.io#PlainTextGISModelWriter', None)": [
                        45,
                        46,
                        65
                    ],
                    "('opennlp.tools.ml.maxent.io#PlainTextGISModelWriter', 'writeUTF(String)')": [
                        70
                    ],
                    "('opennlp.tools.ml.maxent.io#PlainTextGISModelWriter', 'writeInt(int)')": [
                        75
                    ],
                    "('opennlp.tools.ml.maxent.io#PlainTextGISModelWriter', 'writeDouble(double)')": [
                        80
                    ],
                    "('opennlp.tools.ml.maxent.io#PlainTextGISModelWriter', 'close')": [
                        85
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.io#PlainTextGISModelWriter', None)": [
                        45,
                        64
                    ],
                    "('opennlp.tools.ml.maxent.io#PlainTextGISModelWriter', 'writeUTF(String)')": [
                        69
                    ],
                    "('opennlp.tools.ml.maxent.io#PlainTextGISModelWriter', 'writeInt(int)')": [
                        74
                    ],
                    "('opennlp.tools.ml.maxent.io#PlainTextGISModelWriter', 'writeDouble(double)')": [
                        79
                    ],
                    "('opennlp.tools.ml.maxent.io#PlainTextGISModelWriter', 'close')": [
                        84
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/QNModelReader.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/QNModelWriter.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/SuffixSensitiveGISModelWriter.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.io#SuffixSensitiveGISModelWriter', None)": [
                        54,
                        55,
                        57,
                        65
                    ],
                    "('opennlp.tools.ml.maxent.io#SuffixSensitiveGISModelWriter', 'writeUTF(String)')": [
                        84
                    ],
                    "('opennlp.tools.ml.maxent.io#SuffixSensitiveGISModelWriter', 'writeInt(int)')": [
                        88
                    ],
                    "('opennlp.tools.ml.maxent.io#SuffixSensitiveGISModelWriter', 'writeDouble(double)')": [
                        92
                    ],
                    "('opennlp.tools.ml.maxent.io#SuffixSensitiveGISModelWriter', 'close')": [
                        96
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.io#SuffixSensitiveGISModelWriter', None)": [
                        54,
                        56,
                        64
                    ],
                    "('opennlp.tools.ml.maxent.io#SuffixSensitiveGISModelWriter', 'writeUTF(String)')": [
                        83
                    ],
                    "('opennlp.tools.ml.maxent.io#SuffixSensitiveGISModelWriter', 'writeInt(int)')": [
                        87
                    ],
                    "('opennlp.tools.ml.maxent.io#SuffixSensitiveGISModelWriter', 'writeDouble(double)')": [
                        91
                    ],
                    "('opennlp.tools.ml.maxent.io#SuffixSensitiveGISModelWriter', 'close')": [
                        95
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/ArrayMath.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#ArrayMath', None)": [
                        89
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#ArrayMath', None)": [
                        90
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/Function.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/LineSearch.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearch', 'doConstrainedLineSearch(Function,double,LineSearchResult,double,double)')": [
                        104
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearch', None)": [
                        179,
                        198,
                        320,
                        331,
                        348,
                        349
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearch', 'doConstrainedLineSearch(Function,double,LineSearchResult,double,double)')": [
                        105
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearch', None)": [
                        180,
                        199,
                        253,
                        261,
                        269,
                        277,
                        285,
                        293,
                        301,
                        309,
                        317,
                        325,
                        331,
                        342,
                        359
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/NegLogLikelihood.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihood', 'valueAt(double)')": [
                        97
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihood', 'gradientAt(double)')": [
                        132,
                        144,
                        147
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihood', 'valueAt(double)')": [
                        98
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihood', 'gradientAt(double)')": [
                        133,
                        145,
                        148
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/ParallelNegLogLikelihood.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#ParallelNegLogLikelihood', 'computeInParallel(double,Class)')": [
                        120,
                        123
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#ParallelNegLogLikelihood', None)": [
                        182,
                        224,
                        236,
                        239
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#ParallelNegLogLikelihood', 'computeInParallel(double,Class)')": [
                        121,
                        124
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#ParallelNegLogLikelihood', None)": [
                        183,
                        225,
                        237,
                        240
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/QNMinimizer.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizer', 'minimize(Function)')": [
                        221,
                        223,
                        263,
                        264,
                        265,
                        268
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizer', 'isConverged(LineSearchResult)')": [
                        373,
                        379
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizer', None)": [
                        169
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizer', 'minimize(Function)')": [
                        223,
                        225,
                        265,
                        266,
                        269
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizer', 'isConverged(LineSearchResult)')": [
                        374,
                        380
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/QNModel.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNModel', None)": [
                        27
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNModel', 'eval(String,float)')": [
                        48
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNModel', 'eval(String,float,double)')": [
                        84
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNModel', 'eval(int,float,double,int,int,double)')": [
                        112
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNModel', 'equals(Object)')": [
                        145,
                        159,
                        160,
                        166,
                        167
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNModel', None)": [
                        28
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNModel', 'eval(String,float)')": [
                        49
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNModel', 'eval(String,float,double)')": [
                        85
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNModel', 'eval(int,float,double,int,int,double)')": [
                        113
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNModel', 'equals(Object)')": [
                        146,
                        160,
                        161,
                        167,
                        168
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/QNTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainer', None)": [
                        87,
                        88,
                        226
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainer', None)": [
                        88,
                        89,
                        227
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#AbstractDataIndexer', 'sortAndMerge(List,boolean)')": [
                        92,
                        111,
                        112,
                        115
                    ],
                    "('opennlp.tools.ml.model#AbstractDataIndexer', 'update(String,Set,Map,int)')": [
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157
                    ],
                    "('opennlp.tools.ml.model#AbstractDataIndexer', None)": [
                        158,
                        159
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#AbstractDataIndexer', 'sortAndMerge(List,boolean)')": [
                        92,
                        111,
                        112,
                        115
                    ],
                    "('opennlp.tools.ml.model#AbstractDataIndexer', 'update(String,Set,Map,int)')": [
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157
                    ],
                    "('opennlp.tools.ml.model#AbstractDataIndexer', None)": [
                        158,
                        159
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractModel.java": {
                "old": {
                    "('opennlp.tools.ml.model#AbstractModel', None)": [
                        37,
                        112,
                        131,
                        157
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'init(String,String)')": [
                        58,
                        60,
                        64
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'getBestOutcome(double)')": [
                        78,
                        79,
                        80,
                        81
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'getModelType')": [
                        84
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'getAllOutcomes(double)')": [
                        101,
                        102,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'getOutcome(int)')": [
                        122
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'getIndex(String)')": [
                        134,
                        135,
                        136,
                        137,
                        138
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'getDataStructures')": [
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#AbstractModel', None)": [
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        117,
                        136,
                        162
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'init(String,String)')": [
                        63,
                        65,
                        69
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'getBestOutcome(double)')": [
                        83,
                        84,
                        85,
                        86
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'getModelType')": [
                        89
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'getAllOutcomes(double)')": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        116
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'getOutcome(int)')": [
                        127
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'getIndex(String)')": [
                        139,
                        140,
                        141,
                        142,
                        143
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'getDataStructures')": [
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractModelReader.java": {
                "old": {
                    "('opennlp.tools.ml.model#AbstractModelReader', None)": [
                        44,
                        126,
                        127,
                        128
                    ],
                    "('opennlp.tools.ml.model#AbstractModelReader', 'getOutcomes')": [
                        95,
                        96,
                        97,
                        98
                    ],
                    "('opennlp.tools.ml.model#AbstractModelReader', 'getOutcomePatterns')": [
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        112
                    ],
                    "('opennlp.tools.ml.model#AbstractModelReader', 'getPredicates')": [
                        116,
                        117,
                        118,
                        119,
                        120
                    ],
                    "('opennlp.tools.ml.model#AbstractModelReader', 'getParameters(int)')": [
                        134,
                        135,
                        137,
                        138,
                        141,
                        142,
                        143,
                        144
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#AbstractModelReader', None)": [
                        44,
                        126,
                        127,
                        128
                    ],
                    "('opennlp.tools.ml.model#AbstractModelReader', 'getOutcomes')": [
                        95,
                        96,
                        97,
                        98
                    ],
                    "('opennlp.tools.ml.model#AbstractModelReader', 'getOutcomePatterns')": [
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        110,
                        111,
                        112
                    ],
                    "('opennlp.tools.ml.model#AbstractModelReader', 'getPredicates')": [
                        116,
                        117,
                        118,
                        119,
                        120
                    ],
                    "('opennlp.tools.ml.model#AbstractModelReader', 'getParameters(int)')": [
                        134,
                        135,
                        137,
                        138,
                        141,
                        142,
                        143,
                        144
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/ComparableEvent.java": {
                "old": {
                    "('opennlp.tools.ml.model#ComparableEvent', None)": [
                        30,
                        31
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#ComparableEvent', None)": [
                        30
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/ComparablePredicate.java": {
                "old": {
                    "('opennlp.tools.ml.model#ComparablePredicate', 'compareTo(ComparablePredicate)')": [
                        39,
                        42
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#ComparablePredicate', 'compareTo(ComparablePredicate)')": [
                        39,
                        42
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/DataIndexer.java": {
                "old": {
                    "(None, None)": [
                        28,
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        47
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/EvalParameters.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('opennlp.tools.ml.model#EvalParameters', None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('opennlp.tools.ml.model#EvalParameters', None)": [
                        28
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/Event.java": {
                "old": {
                    "('opennlp.tools.ml.model#Event', None)": [
                        28,
                        29,
                        30,
                        32,
                        33,
                        35,
                        36,
                        37,
                        38,
                        39,
                        41,
                        44,
                        45,
                        48,
                        49,
                        52,
                        53
                    ],
                    "('opennlp.tools.ml.model#Event', 'getOutcome')": [
                        42,
                        43
                    ],
                    "('opennlp.tools.ml.model#Event', 'getContext')": [
                        46,
                        47
                    ],
                    "('opennlp.tools.ml.model#Event', 'getValues')": [
                        50,
                        51
                    ],
                    "('opennlp.tools.ml.model#Event', 'toString')": [
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ],
                    "(None, None)": [
                        71,
                        72
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#Event', None)": [
                        28,
                        29,
                        30,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        44,
                        45,
                        48,
                        49,
                        52,
                        53
                    ],
                    "('opennlp.tools.ml.model#Event', 'getOutcome')": [
                        42,
                        43
                    ],
                    "('opennlp.tools.ml.model#Event', 'getContext')": [
                        46,
                        47
                    ],
                    "('opennlp.tools.ml.model#Event', 'getValues')": [
                        50,
                        51
                    ],
                    "('opennlp.tools.ml.model#Event', 'toString')": [
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        63,
                        64,
                        65,
                        66,
                        67,
                        69,
                        70
                    ],
                    "(None, None)": [
                        71
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/FileEventStream.java": {
                "old": {
                    "('opennlp.tools.ml.model#FileEventStream', 'read')": [
                        70
                    ],
                    "('opennlp.tools.ml.model#FileEventStream', 'toLine(Event)')": [
                        99
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#FileEventStream', 'read')": [
                        70
                    ],
                    "('opennlp.tools.ml.model#FileEventStream', 'toLine(Event)')": [
                        99
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/GenericModelReader.java": {
                "old": {
                    "('opennlp.tools.ml.model#GenericModelReader', None)": [
                        34
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#GenericModelReader', None)": [
                        34
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/HashSumEventStream.java": {
                "old": {
                    "('opennlp.tools.ml.model#HashSumEventStream', None)": [
                        40,
                        66
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#HashSumEventStream', None)": [
                        40,
                        66
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/IndexHashTable.java": {
                "old": {
                    "(None, None)": [
                        36,
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        37
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/MaxentModel.java": {
                "old": {
                    "(None, None)": [
                        101
                    ]
                },
                "new": {
                    "(None, None)": [
                        101
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/MutableContext.java": {
                "old": {
                    "('opennlp.tools.ml.model#MutableContext', 'setParameter(int,double)')": [
                        48
                    ],
                    "('opennlp.tools.ml.model#MutableContext', 'updateParameter(int,double)')": [
                        58
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#MutableContext', 'setParameter(int,double)')": [
                        48
                    ],
                    "('opennlp.tools.ml.model#MutableContext', 'updateParameter(int,double)')": [
                        58
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/OnePassRealValueDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#OnePassRealValueDataIndexer', 'index(LinkedList,Map)')": [
                        83,
                        107,
                        114,
                        116
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#OnePassRealValueDataIndexer', 'index(LinkedList,Map)')": [
                        83,
                        107,
                        114,
                        116
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/TwoPassDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', None)": [
                        48,
                        105
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'computeEventCounts(ObjectStream,Writer,Map,int)')": [
                        136
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'index(int,ObjectStream,Map)')": [
                        176
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', None)": [
                        48,
                        64,
                        106
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'computeEventCounts(ObjectStream,Writer,Map,int)')": [
                        137
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'index(int,ObjectStream,Map)')": [
                        177
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/UniformPrior.java": {
                "old": {
                    "('opennlp.tools.ml.model#UniformPrior', 'logPrior(double,int,float)')": [
                        31
                    ],
                    "('opennlp.tools.ml.model#UniformPrior', 'setLabels(String,String)')": [
                        42
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#UniformPrior', 'logPrior(double,int,float)')": [
                        31
                    ],
                    "('opennlp.tools.ml.model#UniformPrior', 'setLabels(String,String)')": [
                        42
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/NaiveBayesEvalParameters.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/NaiveBayesModelReader.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReader', None)": [
                        62
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReader', None)": [
                        62
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/BinaryPerceptronModelReader.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#BinaryPerceptronModelReader', None)": [
                        48
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#BinaryPerceptronModelReader', None)": [
                        48
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/BinaryPerceptronModelWriter.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#BinaryPerceptronModelWriter', None)": [
                        44,
                        64
                    ],
                    "('opennlp.tools.ml.perceptron#BinaryPerceptronModelWriter', 'writeUTF(String)')": [
                        69
                    ],
                    "('opennlp.tools.ml.perceptron#BinaryPerceptronModelWriter', 'writeInt(int)')": [
                        73
                    ],
                    "('opennlp.tools.ml.perceptron#BinaryPerceptronModelWriter', 'writeDouble(double)')": [
                        77
                    ],
                    "('opennlp.tools.ml.perceptron#BinaryPerceptronModelWriter', 'close')": [
                        81
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#BinaryPerceptronModelWriter', None)": [
                        44,
                        64
                    ],
                    "('opennlp.tools.ml.perceptron#BinaryPerceptronModelWriter', 'writeUTF(String)')": [
                        69
                    ],
                    "('opennlp.tools.ml.perceptron#BinaryPerceptronModelWriter', 'writeInt(int)')": [
                        73
                    ],
                    "('opennlp.tools.ml.perceptron#BinaryPerceptronModelWriter', 'writeDouble(double)')": [
                        77
                    ],
                    "('opennlp.tools.ml.perceptron#BinaryPerceptronModelWriter', 'close')": [
                        81
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/PerceptronModel.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#PerceptronModel', 'eval(String,float,double)')": [
                        59
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModel', 'eval(int,float,double,EvalParameters,boolean)')": [
                        101
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModel', 'main(String)')": [
                        122,
                        123
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#PerceptronModel', 'eval(String,float,double)')": [
                        59
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModel', 'eval(int,float,double,EvalParameters,boolean)')": [
                        101
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModel', 'main(String)')": [
                        122,
                        123
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/PerceptronModelReader.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#PerceptronModelReader', None)": [
                        36,
                        37,
                        38,
                        40,
                        41,
                        42,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        74
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModelReader', 'constructModel')": [
                        65,
                        66,
                        67,
                        68,
                        69,
                        71,
                        72,
                        73
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModelReader', 'checkModelType')": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ],
                    "(None, None)": [
                        82
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#PerceptronModelReader', None)": [
                        36,
                        37,
                        38,
                        40,
                        41,
                        42,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        74
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModelReader', 'constructModel')": [
                        65,
                        66,
                        67,
                        68,
                        69,
                        71,
                        72,
                        73
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModelReader', 'checkModelType')": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ],
                    "(None, None)": [
                        82
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/PerceptronModelWriter.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#PerceptronModelWriter', None)": [
                        40,
                        41,
                        42,
                        43,
                        45,
                        47,
                        48,
                        49,
                        51,
                        52,
                        53,
                        55,
                        56,
                        57,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModelWriter', 'sortValues')": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        80,
                        81,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModelWriter', 'computeOutcomePatterns(ComparablePredicate)')": [
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModelWriter', 'persist')": [
                        127,
                        129,
                        130,
                        132,
                        133,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163
                    ],
                    "(None, None)": [
                        164
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#PerceptronModelWriter', None)": [
                        40,
                        41,
                        42,
                        43,
                        45,
                        47,
                        48,
                        49,
                        51,
                        52,
                        53,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        97,
                        117,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModelWriter', 'sortValues')": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        92,
                        93,
                        94,
                        95,
                        96
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModelWriter', 'computeOutcomePatterns(ComparablePredicate)')": [
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModelWriter', 'persist')": [
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        139,
                        140,
                        141,
                        142,
                        143,
                        145,
                        146,
                        147,
                        148,
                        151,
                        152,
                        154,
                        155,
                        156,
                        158,
                        159,
                        160,
                        161,
                        163
                    ],
                    "(None, None)": [
                        164
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/PerceptronTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'findParameters(int,boolean)')": [
                        219,
                        223,
                        231,
                        242,
                        327,
                        328,
                        345,
                        346
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'trainingStats(EvalParameters)')": [
                        358,
                        362,
                        377
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'maxIndex(double)')": [
                        382
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'display(String)')": [
                        390
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'displayIteration(int)')": [
                        395,
                        396
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'isPerfectSquare(int)')": [
                        409,
                        410,
                        411
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'findParameters(int,boolean)')": [
                        219,
                        223,
                        231,
                        242,
                        327,
                        328,
                        345,
                        346
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'trainingStats(EvalParameters)')": [
                        358,
                        362,
                        377
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'maxIndex(double)')": [
                        382
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'display(String)')": [
                        390
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'displayIteration(int)')": [
                        395,
                        396
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'isPerfectSquare(int)')": [
                        409,
                        410,
                        411
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/PlainTextPerceptronModelReader.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#PlainTextPerceptronModelReader', None)": [
                        47
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#PlainTextPerceptronModelReader', None)": [
                        47
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/PlainTextPerceptronModelWriter.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#PlainTextPerceptronModelWriter', None)": [
                        45,
                        46,
                        65
                    ],
                    "('opennlp.tools.ml.perceptron#PlainTextPerceptronModelWriter', 'writeUTF(String)')": [
                        70
                    ],
                    "('opennlp.tools.ml.perceptron#PlainTextPerceptronModelWriter', 'writeInt(int)')": [
                        75
                    ],
                    "('opennlp.tools.ml.perceptron#PlainTextPerceptronModelWriter', 'writeDouble(double)')": [
                        80
                    ],
                    "('opennlp.tools.ml.perceptron#PlainTextPerceptronModelWriter', 'close')": [
                        85
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#PlainTextPerceptronModelWriter', None)": [
                        45,
                        46,
                        65
                    ],
                    "('opennlp.tools.ml.perceptron#PlainTextPerceptronModelWriter', 'writeUTF(String)')": [
                        70
                    ],
                    "('opennlp.tools.ml.perceptron#PlainTextPerceptronModelWriter', 'writeInt(int)')": [
                        75
                    ],
                    "('opennlp.tools.ml.perceptron#PlainTextPerceptronModelWriter', 'writeDouble(double)')": [
                        80
                    ],
                    "('opennlp.tools.ml.perceptron#PlainTextPerceptronModelWriter', 'close')": [
                        85
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/SimplePerceptronSequenceTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'isValid')": [
                        99
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainModel(int,SequenceStream,int,boolean)')": [
                        132,
                        140,
                        161,
                        167,
                        169,
                        187
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'nextIteration(int)')": [
                        223,
                        224,
                        226,
                        238,
                        248,
                        253,
                        257,
                        267,
                        285,
                        288,
                        298,
                        306,
                        322,
                        323,
                        326,
                        328,
                        331,
                        338
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainingStats(MutableContext)')": [
                        343,
                        350,
                        357
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'isValid')": [
                        99
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainModel(int,SequenceStream,int,boolean)')": [
                        132,
                        140,
                        161,
                        167,
                        169,
                        187
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'nextIteration(int)')": [
                        223,
                        224,
                        226,
                        238,
                        248,
                        253,
                        257,
                        267,
                        285,
                        288,
                        298,
                        306,
                        322,
                        323,
                        326,
                        328,
                        331,
                        338
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainingStats(MutableContext)')": [
                        343,
                        350,
                        357
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/SuffixSensitivePerceptronModelWriter.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#SuffixSensitivePerceptronModelWriter', None)": [
                        46,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        58,
                        60,
                        61,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        91,
                        95
                    ],
                    "('opennlp.tools.ml.perceptron#SuffixSensitivePerceptronModelWriter', 'writeUTF(String)')": [
                        85,
                        86
                    ],
                    "('opennlp.tools.ml.perceptron#SuffixSensitivePerceptronModelWriter', 'writeInt(int)')": [
                        89,
                        90
                    ],
                    "('opennlp.tools.ml.perceptron#SuffixSensitivePerceptronModelWriter', 'writeDouble(double)')": [
                        93,
                        94
                    ],
                    "('opennlp.tools.ml.perceptron#SuffixSensitivePerceptronModelWriter', 'close')": [
                        97,
                        98
                    ],
                    "(None, None)": [
                        99
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#SuffixSensitivePerceptronModelWriter', None)": [
                        46,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        58,
                        60,
                        61,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        72,
                        73,
                        74,
                        75,
                        76,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        87,
                        91,
                        95,
                        96
                    ],
                    "('opennlp.tools.ml.perceptron#SuffixSensitivePerceptronModelWriter', 'writeUTF(String)')": [
                        85,
                        86
                    ],
                    "('opennlp.tools.ml.perceptron#SuffixSensitivePerceptronModelWriter', 'writeInt(int)')": [
                        89,
                        90
                    ],
                    "('opennlp.tools.ml.perceptron#SuffixSensitivePerceptronModelWriter', 'writeDouble(double)')": [
                        93,
                        94
                    ],
                    "('opennlp.tools.ml.perceptron#SuffixSensitivePerceptronModelWriter', 'close')": [
                        97,
                        98
                    ],
                    "(None, None)": [
                        99
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/BilouNameFinderSequenceValidator.java": {
                "old": {
                    "('opennlp.tools.namefind#BilouNameFinderSequenceValidator', 'validSequence(int,String,String,String)')": [
                        42,
                        43,
                        44
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#BilouNameFinderSequenceValidator', 'validSequence(int,String,String,String)')": [
                        42,
                        43,
                        44
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/BioCodec.java": {
                "old": {
                    "('opennlp.tools.namefind#BioCodec', 'extractNameType(String)')": [
                        38
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#BioCodec', 'extractNameType(String)')": [
                        38
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/DefaultNameContextGenerator.java": {
                "old": {
                    "('opennlp.tools.namefind#DefaultNameContextGenerator', None)": [
                        43,
                        44,
                        45,
                        46,
                        47
                    ],
                    "('opennlp.tools.namefind#DefaultNameContextGenerator', 'addFeatureGenerator(AdaptiveFeatureGenerator)')": [
                        76,
                        78,
                        80,
                        82
                    ],
                    "('opennlp.tools.namefind#DefaultNameContextGenerator', 'updateAdaptiveData(String,String)')": [
                        88,
                        89,
                        90
                    ],
                    "('opennlp.tools.namefind#DefaultNameContextGenerator', 'getContext(int,String,String,Object)')": [
                        125,
                        126,
                        130
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#DefaultNameContextGenerator', None)": [
                        43,
                        44,
                        45,
                        46,
                        47
                    ],
                    "('opennlp.tools.namefind#DefaultNameContextGenerator', 'addFeatureGenerator(AdaptiveFeatureGenerator)')": [
                        76,
                        78,
                        80,
                        82
                    ],
                    "('opennlp.tools.namefind#DefaultNameContextGenerator', 'updateAdaptiveData(String,String)')": [
                        88,
                        89,
                        90
                    ],
                    "('opennlp.tools.namefind#DefaultNameContextGenerator', 'getContext(int,String,String,Object)')": [
                        125,
                        126,
                        130
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderEventStream.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderEventStream', 'createEvents(NameSample)')": [
                        128
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStream', 'additionalContext(String,Map)')": [
                        148,
                        150
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderEventStream', 'createEvents(NameSample)')": [
                        128
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStream', 'additionalContext(String,Map)')": [
                        148,
                        150
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderME.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderME', 'createFeatureGenerator(byte,Map)')": [
                        95,
                        96,
                        97,
                        98,
                        99,
                        100
                    ],
                    "('opennlp.tools.namefind#NameFinderME', None)": [
                        116,
                        117,
                        119,
                        154,
                        165
                    ],
                    "('opennlp.tools.namefind#NameFinderME', 'setProbs(Span)')": [
                        178,
                        179,
                        183
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.namefind#NameFinderME', 'createFeatureGenerator(byte,Map)')": [
                        96,
                        97,
                        98,
                        99,
                        100,
                        101
                    ],
                    "('opennlp.tools.namefind#NameFinderME', None)": [
                        117,
                        119,
                        154,
                        165
                    ],
                    "('opennlp.tools.namefind#NameFinderME', 'setProbs(Span)')": [
                        178,
                        179,
                        183
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderSequenceValidator.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderSequenceValidator', 'validSequence(int,String,String,String)')": [
                        42,
                        43,
                        44
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderSequenceValidator', 'validSequence(int,String,String,String)')": [
                        42,
                        43,
                        44
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameSample.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSample', 'errorTokenWithContext(String,int)')": [
                        185,
                        188
                    ],
                    "('opennlp.tools.namefind#NameSample', 'parse(String,String,boolean)')": [
                        213,
                        215,
                        232,
                        239,
                        240,
                        248
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSample', 'errorTokenWithContext(String,int)')": [
                        185,
                        188
                    ],
                    "('opennlp.tools.namefind#NameSample', 'parse(String,String,boolean)')": [
                        213,
                        215,
                        232,
                        239,
                        240,
                        248
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameSampleDataStream.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSampleDataStream', 'read')": [
                        43,
                        45,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        55,
                        56,
                        57,
                        58,
                        59
                    ],
                    "(None, None)": [
                        60
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSampleDataStream', 'read')": [
                        43,
                        45,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        55,
                        56,
                        57,
                        58,
                        59
                    ],
                    "(None, None)": [
                        60
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameSampleSequenceStream.java": {
                "old": {
                    "(None, None)": [
                        18
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceStream', None)": [
                        43,
                        48,
                        64,
                        109
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceStream', 'read')": [
                        91,
                        106,
                        107,
                        108
                    ]
                },
                "new": {
                    "(None, None)": [
                        18
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceStream', None)": [
                        43,
                        48,
                        64,
                        109
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceStream', 'read')": [
                        91,
                        106,
                        107,
                        108
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/RegexNameFinder.java": {
                "old": {
                    "('opennlp.tools.namefind#RegexNameFinder', 'find(String)')": [
                        99,
                        101,
                        116,
                        118,
                        130
                    ],
                    "('opennlp.tools.namefind#RegexNameFinder', 'getAnnotations(String)')": [
                        175
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.namefind#RegexNameFinder', 'find(String)')": [
                        100,
                        102,
                        117,
                        119,
                        131
                    ],
                    "('opennlp.tools.namefind#RegexNameFinder', 'getAnnotations(String)')": [
                        176
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/RegexNameFinderFactory.java": {
                "old": {
                    "('opennlp.tools.namefind#RegexNameFinderFactory', 'main(String)')": [
                        78,
                        79,
                        80,
                        81,
                        82
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderFactory', None)": [
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderFactory', 'main(String)')": [
                        79,
                        80,
                        81,
                        82,
                        83
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderFactory', None)": [
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderCrossValidator.java": {
                "old": {
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidator', None)": [
                        108
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidator', 'evaluate(ObjectStream,int)')": [
                        218,
                        222
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidator', None)": [
                        108
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidator', 'evaluate(ObjectStream,int)')": [
                        218,
                        222
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderFactory.java": {
                "old": {
                    "('opennlp.tools.namefind#TokenNameFinderFactory', None)": [
                        62,
                        94
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderFactory', 'loadDefaultFeatureGeneratorBytes')": [
                        73,
                        77,
                        81,
                        91
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderFactory', 'create(String,byte,Map,SequenceCodec)')": [
                        108,
                        109
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderFactory', 'createContextGenerator')": [
                        153,
                        154,
                        155,
                        156,
                        157,
                        158
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderFactory', 'createFeatureGenerators')": [
                        179
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#TokenNameFinderFactory', None)": [
                        62,
                        94
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderFactory', 'loadDefaultFeatureGeneratorBytes')": [
                        73,
                        77,
                        81,
                        91
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderFactory', 'create(String,byte,Map,SequenceCodec)')": [
                        108
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderFactory', 'createContextGenerator')": [
                        152,
                        153,
                        154,
                        155,
                        156,
                        157
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderFactory', 'createFeatureGenerators')": [
                        178
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderModel.java": {
                "old": {
                    "('opennlp.tools.namefind#TokenNameFinderModel', 'validateArtifactMap')": [
                        235,
                        236
                    ],
                    "(None, None)": [
                        237
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#TokenNameFinderModel', 'validateArtifactMap')": [
                        235,
                        236
                    ],
                    "(None, None)": [
                        237
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ngram/NGramGenerator.java": {
                "old": {
                    "('opennlp.tools.ngram#NGramGenerator', None)": [
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        16
                    ],
                    "('opennlp.tools.ngram#NGramGenerator', None)": [
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ngram/NGramModel.java": {
                "old": {
                    "('opennlp.tools.ngram#NGramModel', None)": [
                        41,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        79,
                        80,
                        81,
                        349
                    ],
                    "('opennlp.tools.ngram#NGramModel', 'add(StringList,int,int)')": [
                        142,
                        143,
                        146,
                        147
                    ],
                    "('opennlp.tools.ngram#NGramModel', 'serialize(OutputStream)')": [
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329
                    ]
                },
                "new": {
                    "('opennlp.tools.ngram#NGramModel', None)": [
                        41,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        349
                    ],
                    "('opennlp.tools.ngram#NGramModel', 'add(StringList,int,int)')": [
                        142,
                        143,
                        146,
                        147
                    ],
                    "('opennlp.tools.ngram#NGramModel', 'serialize(OutputStream)')": [
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ngram/NGramUtils.java": {
                "old": {
                    "('opennlp.tools.ngram#NGramUtils', 'calculateTrigramLinearInterpolationProbability(String,String,String,Collection,Double,Double,Double)')": [
                        126
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('opennlp.tools.ngram#NGramUtils', 'calculateTrigramLinearInterpolationProbability(String,String,String,Collection,Double,Double,Double)')": [
                        127
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/AbstractBottomUpParser.java": {
                "old": {
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'collapsePunctuation(Parse,Set)')": [
                        223,
                        228
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'parse(Parse,int)')": [
                        292,
                        348,
                        353
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'advanceChunks(Parse,double)')": [
                        393
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', None)": [
                        487
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'buildDictionary(ObjectStream,HeadRules,TrainingParameters)')": [
                        530,
                        535,
                        543,
                        559,
                        568,
                        569,
                        571,
                        572,
                        578,
                        585
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'collapsePunctuation(Parse,Set)')": [
                        223,
                        228
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'parse(Parse,int)')": [
                        292,
                        348,
                        353
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'advanceChunks(Parse,double)')": [
                        393
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', None)": [
                        487
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'buildDictionary(ObjectStream,HeadRules,TrainingParameters)')": [
                        530,
                        535,
                        543,
                        559,
                        568,
                        569,
                        571,
                        572,
                        578,
                        585
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/AbstractContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser#AbstractContextGenerator', None)": [
                        94
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'production(Parse,boolean)')": [
                        102,
                        107
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'cons2(List,Cons,Cons,Collection,boolean)')": [
                        121,
                        127,
                        128,
                        132,
                        133,
                        137,
                        138,
                        139,
                        140
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'cons3(List,Cons,Cons,Cons,Collection,Collection,boolean,boolean,boolean)')": [
                        169,
                        171,
                        172,
                        184,
                        186,
                        187,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        214,
                        215,
                        216,
                        217,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'surround(Parse,int,String,Collection,List)')": [
                        295,
                        296
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'getFrontierNodes(List,Parse)')": [
                        386,
                        398
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#AbstractContextGenerator', None)": [
                        94
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'production(Parse,boolean)')": [
                        102,
                        107
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'cons2(List,Cons,Cons,Collection,boolean)')": [
                        121,
                        127,
                        128,
                        132,
                        133,
                        137,
                        138,
                        139,
                        140
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'cons3(List,Cons,Cons,Cons,Collection,Collection,boolean,boolean,boolean)')": [
                        169,
                        171,
                        172,
                        184,
                        186,
                        187,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        214,
                        215,
                        216,
                        217,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'surround(Parse,int,String,Collection,List)')": [
                        295,
                        296
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'getFrontierNodes(List,Parse)')": [
                        386,
                        398
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/AbstractParserEventStream.java": {
                "old": {
                    "('opennlp.tools.parser#AbstractParserEventStream', 'addChunkEvents(List,Parse)')": [
                        151
                    ],
                    "('opennlp.tools.parser#AbstractParserEventStream', 'addTagEvents(List,Parse)')": [
                        181
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#AbstractParserEventStream', 'addChunkEvents(List,Parse)')": [
                        151
                    ],
                    "('opennlp.tools.parser#AbstractParserEventStream', 'addTagEvents(List,Parse)')": [
                        181
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ChunkContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser#ChunkContextGenerator', 'getContext(int,String,String,String)')": [
                        69,
                        70,
                        71,
                        74,
                        75,
                        76,
                        81,
                        82,
                        83,
                        86,
                        87,
                        88,
                        92,
                        93,
                        97,
                        98,
                        101,
                        102,
                        107,
                        108,
                        111,
                        112,
                        115,
                        116
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ChunkContextGenerator', 'getContext(int,String,String,String)')": [
                        69,
                        70,
                        71,
                        74,
                        75,
                        76,
                        81,
                        82,
                        83,
                        86,
                        87,
                        88,
                        92,
                        93,
                        97,
                        98,
                        101,
                        102,
                        107,
                        108,
                        111,
                        112,
                        115,
                        116
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ChunkSampleStream.java": {
                "old": {
                    "('opennlp.tools.parser#ChunkSampleStream', 'read')": [
                        85
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ChunkSampleStream', 'read')": [
                        85
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/Cons.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/Parse.java": {
                "old": {
                    "('opennlp.tools.parser#Parse', 'clone(Parse)')": [
                        206,
                        207
                    ],
                    "('opennlp.tools.parser#Parse', 'insert(Parse)')": [
                        323
                    ],
                    "('opennlp.tools.parser#Parse', 'show')": [
                        395
                    ],
                    "('opennlp.tools.parser#Parse', 'addProb(double)')": [
                        485
                    ],
                    "('opennlp.tools.parser#Parse', 'remove(int)')": [
                        524,
                        525,
                        526
                    ],
                    "('opennlp.tools.parser#Parse', None)": [
                        527,
                        739,
                        1052,
                        1053
                    ],
                    "('opennlp.tools.parser#Parse', 'adjoin(Parse,HeadRules)')": [
                        552,
                        559
                    ],
                    "('opennlp.tools.parser#Parse', 'expandTopNode(Parse)')": [
                        569
                    ],
                    "('opennlp.tools.parser#Parse', 'getType(String)')": [
                        677
                    ],
                    "('opennlp.tools.parser#Parse', 'updateHeads(HeadRules)')": [
                        757
                    ],
                    "('opennlp.tools.parser#Parse', 'updateSpan')": [
                        775
                    ],
                    "('opennlp.tools.parser#Parse', 'pruneParse(Parse)')": [
                        786
                    ],
                    "('opennlp.tools.parser#Parse', 'fixPossesives(Parse)')": [
                        802,
                        804,
                        805,
                        806,
                        807,
                        808,
                        815
                    ],
                    "('opennlp.tools.parser#Parse', 'parseParse(String,GapLabeler)')": [
                        876,
                        883
                    ],
                    "('opennlp.tools.parser#Parse', 'isFlat')": [
                        934
                    ],
                    "('opennlp.tools.parser#Parse', 'getTagNodes')": [
                        957
                    ],
                    "('opennlp.tools.parser#Parse', 'getCommonParent(Parse)')": [
                        984
                    ],
                    "('opennlp.tools.parser#Parse', 'equals(Object)')": [
                        1015,
                        1016,
                        1017,
                        1018
                    ],
                    "('opennlp.tools.parser#Parse', 'hashCode')": [
                        1031,
                        1034,
                        1035
                    ],
                    "('opennlp.tools.parser#Parse', 'codeTree(Parse,int)')": [
                        1072,
                        1073,
                        1077,
                        1079
                    ],
                    "('opennlp.tools.parser#Parse', 'addNames(String,Span,Parse)')": [
                        1102,
                        1116,
                        1117,
                        1127,
                        1128
                    ],
                    "('opennlp.tools.parser#Parse', 'main(String)')": [
                        1151,
                        1153
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#Parse', 'clone(Parse)')": [
                        206,
                        207
                    ],
                    "('opennlp.tools.parser#Parse', None)": [
                        211,
                        528,
                        740,
                        1053
                    ],
                    "('opennlp.tools.parser#Parse', 'insert(Parse)')": [
                        324
                    ],
                    "('opennlp.tools.parser#Parse', 'show')": [
                        396
                    ],
                    "('opennlp.tools.parser#Parse', 'addProb(double)')": [
                        486
                    ],
                    "('opennlp.tools.parser#Parse', 'remove(int)')": [
                        525,
                        526,
                        527
                    ],
                    "('opennlp.tools.parser#Parse', 'adjoin(Parse,HeadRules)')": [
                        553,
                        560
                    ],
                    "('opennlp.tools.parser#Parse', 'expandTopNode(Parse)')": [
                        570
                    ],
                    "('opennlp.tools.parser#Parse', 'getType(String)')": [
                        678
                    ],
                    "('opennlp.tools.parser#Parse', 'updateHeads(HeadRules)')": [
                        758
                    ],
                    "('opennlp.tools.parser#Parse', 'updateSpan')": [
                        776
                    ],
                    "('opennlp.tools.parser#Parse', 'pruneParse(Parse)')": [
                        787
                    ],
                    "('opennlp.tools.parser#Parse', 'fixPossesives(Parse)')": [
                        803,
                        805,
                        806,
                        807,
                        808,
                        809,
                        816
                    ],
                    "('opennlp.tools.parser#Parse', 'parseParse(String,GapLabeler)')": [
                        877,
                        884
                    ],
                    "('opennlp.tools.parser#Parse', 'isFlat')": [
                        935
                    ],
                    "('opennlp.tools.parser#Parse', 'getTagNodes')": [
                        958
                    ],
                    "('opennlp.tools.parser#Parse', 'getCommonParent(Parse)')": [
                        985
                    ],
                    "('opennlp.tools.parser#Parse', 'equals(Object)')": [
                        1016,
                        1017,
                        1018,
                        1019
                    ],
                    "('opennlp.tools.parser#Parse', 'hashCode')": [
                        1032,
                        1035,
                        1036
                    ],
                    "('opennlp.tools.parser#Parse', 'codeTree(Parse,int)')": [
                        1072,
                        1073,
                        1077,
                        1079
                    ],
                    "('opennlp.tools.parser#Parse', 'addNames(String,Span,Parse)')": [
                        1102,
                        1116,
                        1117,
                        1127,
                        1128
                    ],
                    "('opennlp.tools.parser#Parse', 'main(String)')": [
                        1151,
                        1153
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ParserChunkerSequenceValidator.java": {
                "old": {
                    "('opennlp.tools.parser#ParserChunkerSequenceValidator', None)": [
                        33,
                        35,
                        36,
                        39
                    ],
                    "('opennlp.tools.parser#ParserChunkerSequenceValidator', 'validSequence(int,String,String,String)')": [
                        53
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ParserChunkerSequenceValidator', None)": [
                        33,
                        35,
                        36,
                        39,
                        40
                    ],
                    "('opennlp.tools.parser#ParserChunkerSequenceValidator', 'validSequence(int,String,String,String)')": [
                        54
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ParserModel.java": {
                "old": {
                    "('opennlp.tools.parser#ParserModel', 'createArtifactSerializers(Map)')": [
                        202
                    ],
                    "('opennlp.tools.parser#ParserModel', 'getParserType')": [
                        209
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ParserModel', 'createArtifactSerializers(Map)')": [
                        202
                    ],
                    "('opennlp.tools.parser#ParserModel', 'getParserType')": [
                        209
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/PosSampleStream.java": {
                "old": {
                    "('opennlp.tools.parser#PosSampleStream', 'read')": [
                        43
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#PosSampleStream', 'read')": [
                        43
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/CheckContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#CheckContextGenerator', 'getContext(Parse,String,int,int)')": [
                        61,
                        77
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#CheckContextGenerator', 'getContext(Parse,String,int,int)')": [
                        61,
                        77
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/Parser.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#Parser', None)": [
                        97,
                        253
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'advanceParses(Parse,double)')": [
                        146,
                        228
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#Parser', None)": [
                        97,
                        253
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'advanceParses(Parse,double)')": [
                        146,
                        228
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/ParserEventStream.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'reduceChunks(Parse,int,Parse)')": [
                        88,
                        94,
                        98,
                        103,
                        104,
                        105,
                        108
                    ],
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'addParseEvents(List,Parse)')": [
                        152,
                        157
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'reduceChunks(Parse,int,Parse)')": [
                        88,
                        94,
                        98,
                        103,
                        104,
                        105,
                        108
                    ],
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'addParseEvents(List,Parse)')": [
                        152,
                        157
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/lang/en/HeadRules.java": {
                "old": {
                    "('opennlp.tools.parser.lang.en#HeadRules', 'labelGaps(Stack)')": [
                        216,
                        217,
                        218,
                        219,
                        223,
                        224,
                        225,
                        229,
                        230,
                        231,
                        232
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.lang.en#HeadRules', None)": [
                        64
                    ],
                    "('opennlp.tools.parser.lang.en#HeadRules', 'labelGaps(Stack)')": [
                        217,
                        218,
                        219,
                        220,
                        224,
                        225,
                        226,
                        230,
                        231,
                        232,
                        233
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/lang/es/AncoraSpanishHeadRules.java": {
                "old": {
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', 'getHead(Parse,String)')": [
                        136,
                        176
                    ],
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', 'labelGaps(Stack)')": [
                        218,
                        219,
                        220,
                        221,
                        225,
                        226,
                        227,
                        231,
                        232,
                        233,
                        234
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', None)": [
                        72,
                        76
                    ],
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', 'getHead(Parse,String)')": [
                        138,
                        178
                    ],
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', 'labelGaps(Stack)')": [
                        220,
                        221,
                        222,
                        223,
                        227,
                        228,
                        229,
                        233,
                        234,
                        235,
                        236
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/AttachContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'containsPunct(Collection,String)')": [
                        43,
                        44,
                        45
                    ],
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'getContext(Parse,int,List,int)')": [
                        66,
                        67,
                        75,
                        76,
                        83,
                        84,
                        85,
                        86,
                        87,
                        89,
                        90,
                        91,
                        92,
                        93,
                        119,
                        120,
                        121,
                        124,
                        147,
                        148,
                        149,
                        151,
                        152
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'containsPunct(Collection,String)')": [
                        43,
                        44,
                        45
                    ],
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'getContext(Parse,int,List,int)')": [
                        66,
                        67,
                        75,
                        76,
                        83,
                        84,
                        85,
                        86,
                        87,
                        89,
                        90,
                        91,
                        92,
                        93,
                        119,
                        120,
                        121,
                        124,
                        147,
                        148,
                        149,
                        151,
                        152
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/BuildContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#BuildContextGenerator', 'getContext(Parse,int)')": [
                        68,
                        143,
                        144
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#BuildContextGenerator', 'getContext(Parse,int)')": [
                        68,
                        143,
                        144
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/CheckContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#CheckContextGenerator', 'getContext(Parse,Parse,int,boolean)')": [
                        50,
                        54,
                        55,
                        75,
                        78
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#CheckContextGenerator', 'getContext(Parse,Parse,int,boolean)')": [
                        50,
                        54,
                        55,
                        75,
                        78
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/Parser.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#Parser', 'getRightFrontier(Parse,Set)')": [
                        152,
                        155
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'setBuilt(Parse)')": [
                        167,
                        170
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'setComplete(Parse)')": [
                        181
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'setIncomplete(Parse)')": [
                        190
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'advanceChunks(Parse,double)')": [
                        207,
                        209
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'advanceParses(Parse,double)')": [
                        222,
                        251,
                        252,
                        277,
                        283,
                        285,
                        298,
                        303,
                        314,
                        317,
                        329,
                        331,
                        334,
                        336,
                        343,
                        345,
                        349,
                        351,
                        355,
                        361,
                        362,
                        372,
                        386,
                        388,
                        397,
                        398,
                        403,
                        406,
                        407
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        425
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#Parser', 'getRightFrontier(Parse,Set)')": [
                        152,
                        155
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'setBuilt(Parse)')": [
                        167,
                        170
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'setComplete(Parse)')": [
                        181
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'setIncomplete(Parse)')": [
                        190
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'advanceChunks(Parse,double)')": [
                        207,
                        209
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'advanceParses(Parse,double)')": [
                        222,
                        251,
                        252,
                        253,
                        254,
                        255,
                        280,
                        286,
                        288,
                        301,
                        306,
                        317,
                        320,
                        332,
                        334,
                        337,
                        338,
                        339,
                        341,
                        348,
                        350,
                        354,
                        356,
                        360,
                        366,
                        367,
                        377,
                        391,
                        393,
                        402,
                        403,
                        408,
                        409,
                        410,
                        411,
                        414,
                        415,
                        416,
                        417
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        435
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/ParserEventStream.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', None)": [
                        51
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'getNonAdjoinedParent(Parse)')": [
                        78
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'indexOf(Parse,Parse)')": [
                        89
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'lastChild(Parse,Parse)')": [
                        116
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'addParseEvents(List,Parse)')": [
                        139,
                        146,
                        159,
                        161,
                        164,
                        174,
                        181,
                        204,
                        205,
                        212,
                        217,
                        222,
                        228,
                        234,
                        238,
                        243,
                        248,
                        253,
                        263,
                        268,
                        276,
                        281,
                        287,
                        295,
                        302,
                        306,
                        312,
                        319,
                        326
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'main(String)')": [
                        336,
                        383
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', None)": [
                        51,
                        52
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'getNonAdjoinedParent(Parse)')": [
                        79
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'indexOf(Parse,Parse)')": [
                        90
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'lastChild(Parse,Parse)')": [
                        117
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'addParseEvents(List,Parse)')": [
                        140,
                        147,
                        160,
                        162,
                        163,
                        166,
                        167,
                        177,
                        178,
                        185,
                        186,
                        209,
                        210,
                        211,
                        218,
                        219,
                        224,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        240,
                        241,
                        247,
                        248,
                        249,
                        250,
                        254,
                        259,
                        264,
                        269,
                        270,
                        280,
                        281,
                        286,
                        294,
                        295,
                        296,
                        297,
                        298,
                        303,
                        304,
                        310,
                        311,
                        319,
                        320,
                        321,
                        322,
                        323,
                        330,
                        334,
                        335,
                        341,
                        342,
                        349,
                        356
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'main(String)')": [
                        366,
                        367,
                        414
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/DefaultPOSContextGenerator.java": {
                "old": {
                    "('opennlp.tools.postag#DefaultPOSContextGenerator', 'getContext(int,Object,String)')": [
                        130,
                        132,
                        181
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#DefaultPOSContextGenerator', None)": [
                        70
                    ],
                    "('opennlp.tools.postag#DefaultPOSContextGenerator', 'getContext(int,Object,String)')": [
                        131,
                        133,
                        182
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSDictionary.java": {
                "old": {
                    "('opennlp.tools.postag#POSDictionary', None)": [
                        73
                    ],
                    "('opennlp.tools.postag#POSDictionary', 'create(InputStream)')": [
                        227,
                        230
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSDictionary', None)": [
                        73
                    ],
                    "('opennlp.tools.postag#POSDictionary', 'create(InputStream)')": [
                        227,
                        230,
                        231
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSModel.java": {
                "old": {
                    "('opennlp.tools.postag#POSModel', 'getNgramDictionary')": [
                        160
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSModel', 'getNgramDictionary')": [
                        160
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSSample.java": {
                "old": {
                    "('opennlp.tools.postag#POSSample', 'checkArguments')": [
                        80,
                        81,
                        82,
                        83,
                        84
                    ],
                    "('opennlp.tools.postag#POSSample', None)": [
                        85
                    ],
                    "('opennlp.tools.postag#POSSample', 'parse(String)')": [
                        135
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSSample', 'checkArguments')": [
                        80,
                        81,
                        82,
                        83,
                        84
                    ],
                    "('opennlp.tools.postag#POSSample', None)": [
                        85
                    ],
                    "('opennlp.tools.postag#POSSample', 'parse(String)')": [
                        135
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSSampleEventStream.java": {
                "old": {
                    "('opennlp.tools.postag#POSSampleEventStream', 'generateEvents(String,String,Object,POSContextGenerator)')": [
                        77
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSSampleEventStream', 'generateEvents(String,String,Object,POSContextGenerator)')": [
                        77
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSSampleSequenceStream.java": {
                "old": {
                    "(None, None)": [
                        18
                    ],
                    "('opennlp.tools.postag#POSSampleSequenceStream', 'read')": [
                        66
                    ]
                },
                "new": {
                    "(None, None)": [
                        18
                    ],
                    "('opennlp.tools.postag#POSSampleSequenceStream', 'read')": [
                        66
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSTaggerCrossValidator.java": {
                "old": {
                    "('opennlp.tools.postag#POSTaggerCrossValidator', 'evaluate(ObjectStream,int)')": [
                        108
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSTaggerCrossValidator', 'evaluate(ObjectStream,int)')": [
                        108
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSTaggerEvaluationMonitor.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSTaggerFactory.java": {
                "old": {
                    "('opennlp.tools.postag#POSTaggerFactory', 'getTagDictionary')": [
                        114
                    ],
                    "('opennlp.tools.postag#POSTaggerFactory', 'getDictionary')": [
                        120
                    ],
                    "('opennlp.tools.postag#POSTaggerFactory', 'validateArtifactMap')": [
                        199
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSTaggerFactory', 'getTagDictionary')": [
                        114
                    ],
                    "('opennlp.tools.postag#POSTaggerFactory', 'getDictionary')": [
                        120
                    ],
                    "('opennlp.tools.postag#POSTaggerFactory', 'validateArtifactMap')": [
                        199
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSTaggerME.java": {
                "old": {
                    "('opennlp.tools.postag#POSTaggerME', 'tag(int,String)')": [
                        155
                    ],
                    "('opennlp.tools.postag#POSTaggerME', 'getOrderedTags(List,List,int,double)')": [
                        211,
                        212
                    ],
                    "('opennlp.tools.postag#POSTaggerME', 'buildNGramDictionary(ObjectStream,int)')": [
                        283
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSTaggerME', 'tag(int,String)')": [
                        155
                    ],
                    "('opennlp.tools.postag#POSTaggerME', 'getOrderedTags(List,List,int,double)')": [
                        211,
                        212
                    ],
                    "('opennlp.tools.postag#POSTaggerME', 'buildNGramDictionary(ObjectStream,int)')": [
                        283
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/DefaultSDContextGenerator.java": {
                "old": {
                    "('opennlp.tools.sentdetect#DefaultSDContextGenerator', None)": [
                        62,
                        63
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#DefaultSDContextGenerator', None)": [
                        62,
                        63
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/EndOfSentenceScanner.java": {
                "old": {
                    "(None, None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ]
                },
                "new": {
                    "(None, None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SDCrossValidator.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SDCrossValidator', None)": [
                        75
                    ],
                    "('opennlp.tools.sentdetect#SDCrossValidator', 'evaluate(ObjectStream,int)')": [
                        96,
                        98,
                        99
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SDCrossValidator', None)": [
                        75
                    ],
                    "('opennlp.tools.sentdetect#SDCrossValidator', 'evaluate(ObjectStream,int)')": [
                        96,
                        98,
                        99
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceDetectorME.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceDetectorME', None)": [
                        52,
                        57,
                        276,
                        277
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'getAbbreviations(Dictionary)')": [
                        116
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'sentPosDetect(String)')": [
                        180,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        229,
                        230,
                        231,
                        234,
                        238,
                        253,
                        255,
                        264
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceDetectorME', None)": [
                        52,
                        57,
                        276
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'getAbbreviations(Dictionary)')": [
                        116
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'sentPosDetect(String)')": [
                        180,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        229,
                        230,
                        231,
                        234,
                        238,
                        253,
                        255,
                        264
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceModel.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceModel', 'validateArtifactMap')": [
                        119
                    ],
                    "('opennlp.tools.sentdetect#SentenceModel', 'main(String)')": [
                        158
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceModel', 'validateArtifactMap')": [
                        119
                    ],
                    "('opennlp.tools.sentdetect#SentenceModel', 'main(String)')": [
                        158
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceSample.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceSample', None)": [
                        81,
                        82
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceSample', None)": [
                        81,
                        82
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/lang/Factory.java": {
                "old": {
                    "('opennlp.tools.sentdetect.lang#Factory', 'createSentenceContextGenerator(String,Set)')": [
                        55
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect.lang#Factory', 'createSentenceContextGenerator(String,Set)')": [
                        55
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/lang/th/SentenceContextGenerator.java": {
                "old": {
                    "('opennlp.tools.sentdetect.lang.th#SentenceContextGenerator', 'collectFeatures(String,String,String,String)')": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect.lang.th#SentenceContextGenerator', 'collectFeatures(String,String,String,String)')": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/DefaultTokenContextGenerator.java": {
                "old": {
                    "('opennlp.tools.tokenize#DefaultTokenContextGenerator', 'createContext(String,int)')": [
                        94,
                        105
                    ],
                    "('opennlp.tools.tokenize#DefaultTokenContextGenerator', 'addCharPreds(String,char,List)')": [
                        131,
                        134,
                        137,
                        140
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#DefaultTokenContextGenerator', 'createContext(String,int)')": [
                        94,
                        105
                    ],
                    "('opennlp.tools.tokenize#DefaultTokenContextGenerator', 'addCharPreds(String,char,List)')": [
                        131,
                        134,
                        137,
                        140
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/DetokenizationDictionary.java": {
                "old": {
                    "('opennlp.tools.tokenize#DetokenizationDictionary', None)": [
                        109,
                        119,
                        128
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#DetokenizationDictionary', None)": [
                        109,
                        119,
                        128,
                        129
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/DictionaryDetokenizer.java": {
                "old": {
                    "('opennlp.tools.tokenize#DictionaryDetokenizer', 'detokenize(String)')": [
                        46,
                        47
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#DictionaryDetokenizer', 'detokenize(String)')": [
                        46
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/SimpleTokenizer.java": {
                "old": {
                    "('opennlp.tools.tokenize#SimpleTokenizer', None)": [
                        41
                    ],
                    "('opennlp.tools.tokenize#SimpleTokenizer', 'main(String)')": [
                        115,
                        116
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#SimpleTokenizer', None)": [
                        41
                    ],
                    "('opennlp.tools.tokenize#SimpleTokenizer', 'main(String)')": [
                        115,
                        116
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokSpanEventStream.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokSpanEventStream', 'createEvents(TokenSample)')": [
                        122,
                        123,
                        144
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokSpanEventStream', 'createEvents(TokenSample)')": [
                        122,
                        143
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenSample.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenSample', 'parse(String,String)')": [
                        165,
                        168
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenSample', 'parse(String,String)')": [
                        165,
                        168
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenSampleStream.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenSampleStream', None)": [
                        54
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenSampleStream', None)": [
                        54
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/Tokenizer.java": {
                "old": {
                    "(None, None)": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerCrossValidator.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenizerCrossValidator', 'evaluate(ObjectStream,int)')": [
                        55,
                        57,
                        58,
                        60,
                        61,
                        63,
                        65,
                        66
                    ],
                    "('opennlp.tools.tokenize#TokenizerCrossValidator', None)": [
                        67
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerCrossValidator', 'evaluate(ObjectStream,int)')": [
                        55,
                        57,
                        58,
                        60,
                        61,
                        63,
                        65,
                        66
                    ],
                    "('opennlp.tools.tokenize#TokenizerCrossValidator', None)": [
                        67
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerME.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenizerME', None)": [
                        80,
                        85,
                        161,
                        162
                    ],
                    "('opennlp.tools.tokenize#TokenizerME', 'getAbbreviations(Dictionary)')": [
                        150
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerME', None)": [
                        80,
                        85,
                        161
                    ],
                    "('opennlp.tools.tokenize#TokenizerME', 'getAbbreviations(Dictionary)')": [
                        150
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerModel.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenizerModel', 'main(String)')": [
                        148,
                        170
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerModel', 'main(String)')": [
                        148,
                        170
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/WhitespaceTokenStream.java": {
                "old": {
                    "('opennlp.tools.tokenize#WhitespaceTokenStream', 'read')": [
                        51
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#WhitespaceTokenStream', 'read')": [
                        51
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/WhitespaceTokenizer.java": {
                "old": {
                    "('opennlp.tools.tokenize#WhitespaceTokenizer', 'tokenizePos(String)')": [
                        48
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#WhitespaceTokenizer', 'tokenizePos(String)')": [
                        48
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/lang/Factory.java": {
                "old": {
                    "('opennlp.tools.tokenize.lang#Factory', 'getAlphanumeric(String)')": [
                        40
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize.lang#Factory', 'getAlphanumeric(String)')": [
                        40
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/lang/en/TokenSampleStream.java": {
                "old": {
                    "('opennlp.tools.tokenize.lang.en#TokenSampleStream', 'next')": [
                        56,
                        61,
                        63,
                        82,
                        102,
                        103,
                        113,
                        114
                    ],
                    "('opennlp.tools.tokenize.lang.en#TokenSampleStream', 'main(String)')": [
                        138,
                        144,
                        150,
                        155,
                        157,
                        158,
                        161,
                        163
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize.lang.en#TokenSampleStream', 'next')": [
                        56,
                        61,
                        63,
                        82,
                        102,
                        103,
                        113,
                        114
                    ],
                    "('opennlp.tools.tokenize.lang.en#TokenSampleStream', 'main(String)')": [
                        138,
                        144,
                        150,
                        155,
                        157,
                        158,
                        161,
                        163
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/AbstractEventStream.java": {
                "old": {
                    "('opennlp.tools.util#AbstractEventStream', None)": [
                        46,
                        49
                    ]
                },
                "new": {
                    "('opennlp.tools.util#AbstractEventStream', None)": [
                        46,
                        49
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/BaseToolFactory.java": {
                "old": {
                    "('opennlp.tools.util#BaseToolFactory', None)": [
                        49,
                        50,
                        51
                    ]
                },
                "new": {
                    "('opennlp.tools.util#BaseToolFactory', None)": [
                        49,
                        50,
                        51
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/HashList.java": {
                "old": {
                    "('opennlp.tools.util#HashList', 'put(Object,Object)')": [
                        73
                    ],
                    "('opennlp.tools.util#HashList', 'remove(Object,Object)')": [
                        87
                    ]
                },
                "new": {
                    "('opennlp.tools.util#HashList', 'put(Object,Object)')": [
                        73
                    ],
                    "('opennlp.tools.util#HashList', 'remove(Object,Object)')": [
                        87
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/Heap.java": {
                "old": {
                    "(None, None)": [
                        60,
                        61,
                        62,
                        63,
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        60,
                        61,
                        62,
                        63,
                        64
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/InputStreamFactory.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/ListHeap.java": {
                "old": {
                    "('opennlp.tools.util#ListHeap', 'main(String)')": [
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204
                    ]
                },
                "new": {
                    "('opennlp.tools.util#ListHeap', 'main(String)')": [
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/MarkableFileInputStreamFactory.java": {
                "old": {
                    "('opennlp.tools.util#MarkableFileInputStreamFactory', None)": [
                        33
                    ]
                },
                "new": {
                    "('opennlp.tools.util#MarkableFileInputStreamFactory', None)": [
                        33
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/ObjectStreamUtils.java": {
                "old": {
                    "('opennlp.tools.util#ObjectStreamUtils', None)": [
                        90
                    ],
                    "('opennlp.tools.util#ObjectStreamUtils', 'createObjectStream(ObjectStream)')": [
                        114
                    ],
                    "(None, None)": [
                        133
                    ]
                },
                "new": {
                    "('opennlp.tools.util#ObjectStreamUtils', None)": [
                        90
                    ],
                    "('opennlp.tools.util#ObjectStreamUtils', 'createObjectStream(ObjectStream)')": [
                        114
                    ],
                    "(None, None)": [
                        133,
                        134
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/PlainTextByLineStream.java": {
                "old": {
                    "('opennlp.tools.util#PlainTextByLineStream', 'reset')": [
                        62
                    ],
                    "('opennlp.tools.util#PlainTextByLineStream', 'close')": [
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "(None, None)": [
                        77
                    ]
                },
                "new": {
                    "('opennlp.tools.util#PlainTextByLineStream', 'reset')": [
                        62
                    ],
                    "('opennlp.tools.util#PlainTextByLineStream', 'close')": [
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "(None, None)": [
                        77
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/ReverseListIterator.java": {
                "old": {
                    "('opennlp.tools.util#ReverseListIterator', None)": [
                        32,
                        33
                    ],
                    "('opennlp.tools.util#ReverseListIterator', 'hasNext')": [
                        41
                    ]
                },
                "new": {
                    "('opennlp.tools.util#ReverseListIterator', None)": [
                        32,
                        33
                    ],
                    "('opennlp.tools.util#ReverseListIterator', 'hasNext')": [
                        41
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/Sequence.java": {
                "old": {
                    "('opennlp.tools.util#Sequence', None)": [
                        39,
                        41,
                        47,
                        50,
                        53
                    ],
                    "('opennlp.tools.util#Sequence', 'getProbs(double)')": [
                        107
                    ],
                    "('opennlp.tools.util#Sequence', 'toString')": [
                        114
                    ]
                },
                "new": {
                    "('opennlp.tools.util#Sequence', None)": [
                        39,
                        41,
                        47,
                        50,
                        53
                    ],
                    "('opennlp.tools.util#Sequence', 'getProbs(double)')": [
                        107
                    ],
                    "('opennlp.tools.util#Sequence', 'toString')": [
                        114
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/Span.java": {
                "old": {
                    "('opennlp.tools.util#Span', None)": [
                        105,
                        106,
                        107,
                        108,
                        109,
                        161,
                        162,
                        187,
                        214
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.util#Span', None)": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        163,
                        188,
                        215
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/StringList.java": {
                "old": {
                    "('opennlp.tools.util#StringList', None)": [
                        53
                    ]
                },
                "new": {
                    "('opennlp.tools.util#StringList', None)": [
                        53
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/StringUtil.java": {
                "old": {
                    "('opennlp.tools.util#StringUtil', 'isWhitespace(char)')": [
                        41
                    ],
                    "('opennlp.tools.util#StringUtil', None)": [
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        115,
                        116,
                        134,
                        135,
                        182,
                        186,
                        187,
                        188,
                        189,
                        190,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311
                    ],
                    "('opennlp.tools.util#StringUtil', 'isEmpty(CharSequence)')": [
                        114
                    ],
                    "('opennlp.tools.util#StringUtil', 'minimum(int,int,int)')": [
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133
                    ],
                    "('opennlp.tools.util#StringUtil', 'levenshteinDistance(String,String)')": [
                        152
                    ],
                    "('opennlp.tools.util#StringUtil', 'computeShortestEditScript(String,String,int,StringBuffer)')": [
                        191,
                        192,
                        195,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229
                    ],
                    "('opennlp.tools.util#StringUtil', 'decodeShortestEditScript(String,String)')": [
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303
                    ],
                    "('opennlp.tools.util#StringUtil', 'getShortestEditScript(String,String)')": [
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324
                    ],
                    "(None, None)": [
                        325,
                        326,
                        327
                    ]
                },
                "new": {
                    "('opennlp.tools.util#StringUtil', 'isWhitespace(char)')": [
                        41
                    ],
                    "('opennlp.tools.util#StringUtil', None)": [
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        115,
                        116,
                        134,
                        135,
                        182,
                        186,
                        187,
                        188,
                        189,
                        190,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311
                    ],
                    "('opennlp.tools.util#StringUtil', 'isEmpty(CharSequence)')": [
                        114
                    ],
                    "('opennlp.tools.util#StringUtil', 'minimum(int,int,int)')": [
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133
                    ],
                    "('opennlp.tools.util#StringUtil', 'levenshteinDistance(String,String)')": [
                        152
                    ],
                    "('opennlp.tools.util#StringUtil', 'computeShortestEditScript(String,String,int,StringBuffer)')": [
                        191,
                        192,
                        195,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229
                    ],
                    "('opennlp.tools.util#StringUtil', 'decodeShortestEditScript(String,String)')": [
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303
                    ],
                    "('opennlp.tools.util#StringUtil', 'getShortestEditScript(String,String)')": [
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324
                    ],
                    "(None, None)": [
                        325,
                        326
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/TrainingParameters.java": {
                "old": {
                    "('opennlp.tools.util#TrainingParameters', None)": [
                        39
                    ]
                },
                "new": {
                    "('opennlp.tools.util#TrainingParameters', None)": [
                        39
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/Version.java": {
                "old": {
                    "('opennlp.tools.util#Version', None)": [
                        153
                    ],
                    "('opennlp.tools.util#Version', 'parse(String)')": [
                        162
                    ],
                    "('opennlp.tools.util#Version', 'currentVersion')": [
                        194,
                        203,
                        204
                    ]
                },
                "new": {
                    "('opennlp.tools.util#Version', None)": [
                        153
                    ],
                    "('opennlp.tools.util#Version', 'parse(String)')": [
                        162
                    ],
                    "('opennlp.tools.util#Version', 'currentVersion')": [
                        194,
                        203
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/eval/Evaluator.java": {
                "old": {
                    "('opennlp.tools.util.eval#Evaluator', 'evaluateSample(T)')": [
                        81,
                        82
                    ],
                    "('opennlp.tools.util.eval#Evaluator', None)": [
                        100
                    ]
                },
                "new": {
                    "('opennlp.tools.util.eval#Evaluator', 'evaluateSample(T)')": [
                        81,
                        82
                    ],
                    "('opennlp.tools.util.eval#Evaluator', None)": [
                        100
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/eval/Mean.java": {
                "old": {
                    "('opennlp.tools.util.eval#Mean', None)": [
                        40,
                        50,
                        53
                    ]
                },
                "new": {
                    "('opennlp.tools.util.eval#Mean', None)": [
                        40,
                        50,
                        53
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/ext/ExtensionLoader.java": {
                "old": {
                    "('opennlp.tools.util.ext#ExtensionLoader', 'instantiateExtension(Class,String)')": [
                        81
                    ]
                },
                "new": {
                    "('opennlp.tools.util.ext#ExtensionLoader', 'instantiateExtension(Class,String)')": [
                        81
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/AdaptiveFeatureGenerator.java": {
                "old": {
                    "(None, None)": [
                        54,
                        60
                    ]
                },
                "new": {
                    "(None, None)": [
                        54,
                        60
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/AdditionalContextFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#AdditionalContextFeatureGenerator', None)": [
                        31,
                        32,
                        33
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/BigramNameFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#BigramNameFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        28,
                        29,
                        30,
                        32,
                        33,
                        34,
                        35
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#BigramNameFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        28,
                        29,
                        30,
                        32,
                        33,
                        34,
                        35
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/BrownBigramFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#BrownBigramFeatureGenerator', None)": [
                        29
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#BrownBigramFeatureGenerator', None)": [
                        29
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/BrownCluster.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#BrownCluster', None)": [
                        79,
                        80
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#BrownCluster', None)": [
                        79,
                        80
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/BrownTokenClassFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#BrownTokenClassFeatureGenerator', None)": [
                        29
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#BrownTokenClassFeatureGenerator', None)": [
                        29
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/BrownTokenFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#BrownTokenFeatureGenerator', None)": [
                        29
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#BrownTokenFeatureGenerator', None)": [
                        29
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/CachedFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#CachedFeatureGenerator', 'toString')": [
                        103,
                        104
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#CachedFeatureGenerator', 'toString')": [
                        103,
                        104,
                        105
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/DictionaryFeatureGenerator.java": {
                "new": {
                    "('opennlp.tools.util.featuregen#DictionaryFeatureGenerator', None)": [
                        41
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/GeneratorFactory.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#GeneratorFactory', None)": [
                        135,
                        432,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        515,
                        706,
                        709
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactory', 'extractCustomArtifactSerializerMappings(InputStream)')": [
                        727,
                        728
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactory', 'getDescriptorElements(InputStream)')": [
                        770,
                        771,
                        789,
                        790
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#GeneratorFactory', None)": [
                        135,
                        432,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        515,
                        706,
                        709
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactory', 'extractCustomArtifactSerializerMappings(InputStream)')": [
                        727
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactory', 'getDescriptorElements(InputStream)')": [
                        769,
                        787,
                        788
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/InSpanGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#InSpanGenerator', None)": [
                        44,
                        50,
                        55
                    ],
                    "('opennlp.tools.util.featuregen#InSpanGenerator', 'createFeatures(List,String,int,String)')": [
                        61
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#InSpanGenerator', None)": [
                        44,
                        50,
                        55
                    ],
                    "('opennlp.tools.util.featuregen#InSpanGenerator', 'createFeatures(List,String,int,String)')": [
                        61
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/StringPattern.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#StringPattern', 'recognize(String)')": [
                        163,
                        164,
                        165,
                        167,
                        168,
                        169,
                        171,
                        172,
                        173,
                        175,
                        176,
                        177,
                        179,
                        180
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#StringPattern', 'recognize(String)')": [
                        163,
                        164,
                        165,
                        167,
                        168,
                        169,
                        171,
                        172,
                        173,
                        175,
                        176,
                        177,
                        179,
                        180
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/TokenPatternFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#TokenPatternFeatureGenerator', None)": [
                        34,
                        35,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51
                    ],
                    "('opennlp.tools.util.featuregen#TokenPatternFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87
                    ],
                    "(None, None)": [
                        88
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#TokenPatternFeatureGenerator', None)": [
                        34,
                        35,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53
                    ],
                    "('opennlp.tools.util.featuregen#TokenPatternFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        87
                    ],
                    "(None, None)": [
                        88
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/WindowFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#WindowFeatureGenerator', 'clearAdaptiveData')": [
                        123
                    ],
                    "('opennlp.tools.util.featuregen#WindowFeatureGenerator', 'toString')": [
                        128
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#WindowFeatureGenerator', 'clearAdaptiveData')": [
                        123
                    ],
                    "('opennlp.tools.util.featuregen#WindowFeatureGenerator', 'toString')": [
                        128
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/WordClusterFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#WordClusterFeatureGenerator', None)": [
                        31,
                        32,
                        33
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#WordClusterFeatureGenerator', None)": [
                        31,
                        32,
                        33
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/BaseModel.java": {
                "old": {
                    "('opennlp.tools.util.model#BaseModel', None)": [
                        133
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'loadModel(InputStream)')": [
                        226
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'initializeFactory')": [
                        256
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'finishLoadingArtifacts(InputStream)')": [
                        298
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'createArtifactSerializers(Map)')": [
                        383
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'validateArtifactMap')": [
                        426,
                        432,
                        451,
                        472
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'getArtifact(String)')": [
                        608
                    ]
                },
                "new": {
                    "('opennlp.tools.util.model#BaseModel', None)": [
                        133
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'loadModel(InputStream)')": [
                        226
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'initializeFactory')": [
                        256
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'finishLoadingArtifacts(InputStream)')": [
                        298
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'createArtifactSerializers(Map)')": [
                        383
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'validateArtifactMap')": [
                        426,
                        432,
                        451,
                        472
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'getArtifact(String)')": [
                        608
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/DictionarySerializer.java": {
                "old": {
                    "(None, None)": [
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        43
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/GenericModelSerializer.java": {
                "old": {
                    "('opennlp.tools.util.model#GenericModelSerializer', 'register(Map)')": [
                        43
                    ]
                },
                "new": {
                    "('opennlp.tools.util.model#GenericModelSerializer', 'register(Map)')": [
                        43
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/PropertiesSerializer.java": {
                "old": {
                    "(None, None)": [
                        45
                    ]
                },
                "new": {
                    "(None, None)": [
                        45
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/ChunkSampleStreamTest.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkSampleStreamTest', None)": [
                        32
                    ],
                    "('opennlp.tools.chunker#ChunkSampleStreamTest', 'testReadingEvents')": [
                        57,
                        89
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkSampleStreamTest', None)": [
                        32
                    ],
                    "('opennlp.tools.chunker#ChunkSampleStreamTest', 'testReadingEvents')": [
                        57,
                        89
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/ChunkSampleTest.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkSampleTest', None)": [
                        40,
                        136,
                        168,
                        184,
                        214
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testToString')": [
                        130,
                        131,
                        132,
                        133,
                        134,
                        135
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testNicePrint')": [
                        145,
                        146
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testAsSpan')": [
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testPhraseAsSpan')": [
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testRegions')": [
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'createGoldSample')": [
                        256
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'createPredSample')": [
                        260,
                        261,
                        262
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkSampleTest', None)": [
                        40,
                        136,
                        168,
                        184,
                        214
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testToString')": [
                        130,
                        131,
                        132,
                        133,
                        134,
                        135
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testNicePrint')": [
                        145,
                        146
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testAsSpan')": [
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testPhraseAsSpan')": [
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testRegions')": [
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'createGoldSample')": [
                        256
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'createPredSample')": [
                        260,
                        261,
                        262
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/ChunkerDetailedFMeasureListenerTest.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkerDetailedFMeasureListenerTest', 'testEvaluator')": [
                        43
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkerDetailedFMeasureListenerTest', 'testEvaluator')": [
                        43
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/ChunkerEvaluatorTest.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkerEvaluatorTest', None)": [
                        39,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        75
                    ],
                    "('opennlp.tools.chunker#ChunkerEvaluatorTest', 'testEvaluator')": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        55,
                        56,
                        57,
                        58,
                        59,
                        61,
                        63,
                        64,
                        65,
                        67,
                        69,
                        71,
                        72,
                        74
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkerEvaluatorTest', None)": [
                        39,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        75
                    ],
                    "('opennlp.tools.chunker#ChunkerEvaluatorTest', 'testEvaluator')": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        55,
                        56,
                        58,
                        59,
                        61,
                        63,
                        64,
                        65,
                        67,
                        69,
                        71,
                        72,
                        73,
                        74
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/DummyChunkSampleStream.java": {
                "old": {
                    "('opennlp.tools.chunker#DummyChunkSampleStream', None)": [
                        33,
                        35,
                        36,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51
                    ],
                    "('opennlp.tools.chunker#DummyChunkSampleStream', 'read')": [
                        52,
                        54,
                        55,
                        56,
                        57,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85
                    ],
                    "(None, None)": [
                        86,
                        88
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#DummyChunkSampleStream', None)": [
                        33,
                        35,
                        36,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51
                    ],
                    "('opennlp.tools.chunker#DummyChunkSampleStream', 'read')": [
                        52,
                        54,
                        55,
                        56,
                        57,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85
                    ],
                    "(None, None)": [
                        86,
                        88
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/DummyChunker.java": {
                "old": {
                    "('opennlp.tools.chunker#DummyChunker', None)": [
                        35,
                        37,
                        38,
                        39,
                        44,
                        68,
                        69,
                        73,
                        78,
                        82
                    ],
                    "('opennlp.tools.chunker#DummyChunker', 'chunk(List,List)')": [
                        41,
                        42,
                        43
                    ],
                    "('opennlp.tools.chunker#DummyChunker', 'chunk(String,String)')": [
                        46,
                        47,
                        48,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        64,
                        66,
                        67
                    ],
                    "('opennlp.tools.chunker#DummyChunker', 'topKSequences(List,List)')": [
                        71,
                        72
                    ],
                    "('opennlp.tools.chunker#DummyChunker', 'topKSequences(String,String,double)')": [
                        75,
                        76,
                        77
                    ],
                    "('opennlp.tools.chunker#DummyChunker', 'chunkAsSpans(String,String)')": [
                        80,
                        81
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#DummyChunker', None)": [
                        35,
                        37,
                        38,
                        39,
                        44,
                        68,
                        69,
                        73,
                        78,
                        82
                    ],
                    "('opennlp.tools.chunker#DummyChunker', 'chunk(List,List)')": [
                        41,
                        42,
                        43
                    ],
                    "('opennlp.tools.chunker#DummyChunker', 'chunk(String,String)')": [
                        46,
                        47,
                        48,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        64,
                        66,
                        67
                    ],
                    "('opennlp.tools.chunker#DummyChunker', 'topKSequences(List,List)')": [
                        71,
                        72
                    ],
                    "('opennlp.tools.chunker#DummyChunker', 'topKSequences(String,String,double)')": [
                        75,
                        76,
                        77
                    ],
                    "('opennlp.tools.chunker#DummyChunker', 'chunkAsSpans(String,String)')": [
                        80,
                        81
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/cmdline/ArgumentParserTest.java": {
                "old": {
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSimpleArgumentsUsage')": [
                        131,
                        132
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSetEncodingParameter')": [
                        172
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSimpleArgumentsUsage')": [
                        131,
                        132
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSetEncodingParameter')": [
                        172
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/cmdline/CLITest.java": {
                "old": {
                    "('opennlp.tools.cmdline#CLITest', None)": [
                        56,
                        65
                    ],
                    "('opennlp.tools.cmdline#CLITest', 'testHelpMessageOfTools')": [
                        127
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#CLITest', None)": [
                        56,
                        65
                    ],
                    "('opennlp.tools.cmdline#CLITest', 'testHelpMessageOfTools')": [
                        127
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/dictionary/DictionaryTest.java": {
                "old": {
                    "(None, None)": [
                        35,
                        36
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'getCaseSensitive')": [
                        43
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'getCaseInsensitive')": [
                        50
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testParseOneEntryPerLine')": [
                        129
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        36
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'getCaseSensitive')": [
                        43
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'getCaseInsensitive')": [
                        50
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testParseOneEntryPerLine')": [
                        129
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/doccat/DoccatFactoryTest.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/doccat/DocumentCategorizerMETest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerMETest', 'testSimpleTraining')": [
                        38,
                        39,
                        40,
                        41,
                        42,
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerMETest', 'testSimpleTraining')": [
                        38,
                        39,
                        40,
                        41,
                        42,
                        43
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/doccat/DocumentCategorizerNBTest.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/OntoNotes4NameFinderEval.java": {
                "old": {
                    "('opennlp.tools.eval#OntoNotes4NameFinderEval', 'crossEval(TrainingParameters,String,double)')": [
                        42
                    ]
                },
                "new": {
                    "('opennlp.tools.eval#OntoNotes4NameFinderEval', 'crossEval(TrainingParameters,String,double)')": [
                        42,
                        43
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/OntoNotes4ParserEval.java": {
                "old": {
                    "('opennlp.tools.eval#OntoNotes4ParserEval', 'crossEval(TrainingParameters,HeadRules,double)')": [
                        45
                    ]
                },
                "new": {
                    "('opennlp.tools.eval#OntoNotes4ParserEval', 'crossEval(TrainingParameters,HeadRules,double)')": [
                        45,
                        46
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/OntoNotes4PosTaggerEval.java": {
                "old": {
                    "('opennlp.tools.eval#OntoNotes4PosTaggerEval', 'crossEval(TrainingParameters,double)')": [
                        40,
                        42,
                        52,
                        53,
                        56
                    ],
                    "('opennlp.tools.eval#OntoNotes4PosTaggerEval', None)": [
                        59
                    ]
                },
                "new": {
                    "('opennlp.tools.eval#OntoNotes4PosTaggerEval', 'crossEval(TrainingParameters,double)')": [
                        40,
                        42,
                        43,
                        53,
                        54,
                        57
                    ],
                    "('opennlp.tools.eval#OntoNotes4PosTaggerEval', None)": [
                        60
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/Conll03NameSampleStreamTest.java": {
                "old": {
                    "('opennlp.tools.formats#Conll03NameSampleStreamTest', None)": [
                        77,
                        83
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStreamTest', 'testParsingGermanSampleWithEnglishAsLanguage')": [
                        85,
                        86
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#Conll03NameSampleStreamTest', None)": [
                        77,
                        83
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStreamTest', 'testParsingGermanSampleWithEnglishAsLanguage')": [
                        85,
                        86
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/LeipzigDoccatSampleStreamTest.java": {
                "old": {
                    "('opennlp.tools.formats#LeipzigDoccatSampleStreamTest', 'testParsingSample')": [
                        54
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#LeipzigDoccatSampleStreamTest', 'testParsingSample')": [
                        54
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADChunkSampleStreamTest.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamTest', 'setup')": [
                        74
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamTest', 'setup')": [
                        74
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADParagraphStreamTest.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADParagraphStreamTest', 'testSimpleReading')": [
                        42,
                        45
                    ],
                    "('opennlp.tools.formats.ad#ADParagraphStreamTest', 'testLeadingWithContraction')": [
                        58
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADParagraphStreamTest', 'testSimpleReading')": [
                        42,
                        45
                    ],
                    "('opennlp.tools.formats.ad#ADParagraphStreamTest', 'testLeadingWithContraction')": [
                        58
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/frenchtreebank/ConstitParseSampleStreamTest.java": {
                "old": {
                    "('opennlp.tools.formats.frenchtreebank#ConstitParseSampleStreamTest', 'testTokensAreCorrect')": [
                        123
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.frenchtreebank#ConstitParseSampleStreamTest', 'testTokensAreCorrect')": [
                        123
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/muc/DocumentSplitterStreamTest.java": {
                "old": {
                    "('opennlp.tools.formats.muc#DocumentSplitterStreamTest', 'testSplitTwoDocuments')": [
                        36,
                        45,
                        49
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.muc#DocumentSplitterStreamTest', 'testSplitTwoDocuments')": [
                        36,
                        45,
                        49
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/languagemodel/LanguageModelEvaluationTest.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/languagemodel/LanguageModelTestUtils.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/languagemodel/NgramLanguageModelTest.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/lemmatizer/LemmatizerEvaluatorTest.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmatizerEvaluatorTest', None)": [
                        44
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#LemmatizerEvaluatorTest', None)": [
                        44
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/BeamSearchTest.java": {
                "old": {
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceZeroLengthInput')": [
                        133,
                        134
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceOneElementInput')": [
                        154
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequence')": [
                        176
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceWithValidator')": [
                        201,
                        202,
                        203,
                        204
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceZeroLengthInput')": [
                        133,
                        134,
                        135,
                        136
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceOneElementInput')": [
                        156,
                        157,
                        158
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequence')": [
                        180,
                        181,
                        182
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceWithValidator')": [
                        207,
                        208,
                        209
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/PrepAttachDataUtil.java": {
                "old": {
                    "('opennlp.tools.ml#PrepAttachDataUtil', 'readPpaFile(String)')": [
                        49
                    ],
                    "('opennlp.tools.ml#PrepAttachDataUtil', 'testModel(MaxentModel,double)')": [
                        73,
                        84
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#PrepAttachDataUtil', 'readPpaFile(String)')": [
                        49
                    ],
                    "('opennlp.tools.ml#PrepAttachDataUtil', 'testModel(MaxentModel,double)')": [
                        73,
                        84
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/RealValueModelTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#RealValueModelTest', 'testRealValuedWeightsVsRepeatWeighting')": [
                        49,
                        61
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#RealValueModelTest', 'testRealValuedWeightsVsRepeatWeighting')": [
                        49,
                        61
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/LineSearchTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', None)": [
                        185
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', None)": [
                        186
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/NegLogLikelihoodTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtNonInitialPoint02')": [
                        120,
                        121
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientAtNonInitialPoint')": [
                        152,
                        153,
                        154,
                        156,
                        157,
                        158,
                        159,
                        160
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'alignDoubleArrayForTestData(double,String,String)')": [
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        187,
                        188,
                        189
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtNonInitialPoint02')": [
                        121,
                        122
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientAtNonInitialPoint')": [
                        153,
                        154,
                        155,
                        157,
                        158,
                        159,
                        160,
                        161
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'alignDoubleArrayForTestData(double,String,String)')": [
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        188,
                        189,
                        190
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/QNMinimizerTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizerTest', None)": [
                        90,
                        96
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizerTest', None)": [
                        91,
                        97
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/QNTrainerTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testModel')": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        83,
                        84
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testSerdeModel')": [
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        96,
                        97,
                        98,
                        99,
                        100,
                        102,
                        103,
                        104,
                        105,
                        107,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        117,
                        118,
                        119
                    ],
                    "(None, None)": [
                        120
                    ]
                },
                "new": {
                    "(None, None)": [
                        17,
                        121
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testModel')": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        84,
                        85
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testSerdeModel')": [
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        97,
                        98,
                        99,
                        100,
                        101,
                        103,
                        104,
                        105,
                        106,
                        108,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        118,
                        119,
                        120
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/naivebayes/NaiveBayesModelReadWriteTest.java": {
                "new": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/DictionaryNameFinderEvaluatorTest.java": {
                "old": {
                    "('opennlp.tools.namefind#DictionaryNameFinderEvaluatorTest', 'createSample')": [
                        70
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#DictionaryNameFinderEvaluatorTest', 'createSample')": [
                        70
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/DictionaryNameFinderTest.java": {
                "old": {
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', None)": [
                        33,
                        43,
                        44,
                        45
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', None)": [
                        33,
                        43
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameFinderEventStreamTest.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderEventStreamTest', None)": [
                        32
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderEventStreamTest', None)": [
                        32
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameFinderMETest.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinder')": [
                        67,
                        68,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinderWithTypes')": [
                        129
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNames')": [
                        176,
                        190
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNamesWithTypes')": [
                        213,
                        227
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'hasOtherAsOutcome(TokenNameFinderModel)')": [
                        276,
                        277,
                        278,
                        283
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinderWithMultipleTypes')": [
                        307
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinder')": [
                        67,
                        68,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinderWithTypes')": [
                        129
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNames')": [
                        176,
                        190
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNamesWithTypes')": [
                        213,
                        227
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'hasOtherAsOutcome(TokenNameFinderModel)')": [
                        276,
                        277,
                        278,
                        283
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinderWithMultipleTypes')": [
                        307
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameSampleDataStreamTest.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithoutNameTypes')": [
                        106
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithNameTypes')": [
                        192,
                        193,
                        194,
                        195,
                        199
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testClearAdaptiveData')": [
                        332
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testHtmlNameSampleParsing')": [
                        338,
                        397
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithoutNameTypes')": [
                        106
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithNameTypes')": [
                        192,
                        193,
                        197
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testClearAdaptiveData')": [
                        330
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testHtmlNameSampleParsing')": [
                        336,
                        395
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameSampleTest.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSampleTest', 'createSimpleNameSample(boolean)')": [
                        52
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testNoTypesToString')": [
                        77
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testWithTypesToString')": [
                        90,
                        91,
                        92
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', None)": [
                        151,
                        161,
                        171,
                        181,
                        191
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSampleTest', 'createSimpleNameSample(boolean)')": [
                        52
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testNoTypesToString')": [
                        77
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testWithTypesToString')": [
                        90,
                        91,
                        92
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', None)": [
                        151,
                        161,
                        171,
                        181,
                        191
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/RegexNameFinderTest.java": {
                "old": {
                    "('opennlp.tools.namefind#RegexNameFinderTest', 'testFindMatchingPatternWithoutMatchingTokenBounds')": [
                        87
                    ]
                },
                "new": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderTest', 'testFindMatchingPatternWithoutMatchingTokenBounds')": [
                        88
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ngram/NGramModelTest.java": {
                "old": {
                    "('opennlp.tools.ngram#NGramModelTest', 'testSerialize')": [
                        194
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testSerialize')": [
                        195
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ngram/NGramUtilsTest.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/ParseTest.java": {
                "old": {
                    "('opennlp.tools.parser#ParseTest', 'testTokenReplacement')": [
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ParseTest', 'testTokenReplacement')": [
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/ParserTestUtil.java": {
                "old": {
                    "('opennlp.tools.parser#ParserTestUtil', 'createTestHeadRules')": [
                        36,
                        37,
                        38,
                        40,
                        41,
                        43,
                        45
                    ],
                    "('opennlp.tools.parser#ParserTestUtil', None)": [
                        46
                    ],
                    "('opennlp.tools.parser#ParserTestUtil', 'openTestTrainingData')": [
                        48,
                        49,
                        51,
                        53,
                        55,
                        56,
                        57,
                        59,
                        60,
                        61,
                        63,
                        64,
                        65,
                        66,
                        74,
                        75,
                        77,
                        79
                    ],
                    "(None, None)": [
                        80
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ParserTestUtil', 'createTestHeadRules')": [
                        36,
                        37,
                        38,
                        40,
                        41,
                        43,
                        45
                    ],
                    "('opennlp.tools.parser#ParserTestUtil', None)": [
                        46
                    ],
                    "('opennlp.tools.parser#ParserTestUtil', 'openTestTrainingData')": [
                        48,
                        49,
                        51,
                        53,
                        55,
                        56,
                        57,
                        59,
                        60,
                        61,
                        63,
                        64,
                        65,
                        66,
                        74,
                        75,
                        77,
                        79
                    ],
                    "(None, None)": [
                        80
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/chunking/ParserTest.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#ParserTest', 'testChunkingParserTraining')": [
                        55,
                        56
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#ParserTest', 'testChunkingParserTraining')": [
                        55,
                        56
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/DummyPOSTaggerFactory.java": {
                "old": {
                    "('opennlp.tools.postag#DummyPOSTaggerFactory', 'createArtifactMap')": [
                        72
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#DummyPOSTaggerFactory', 'createArtifactMap')": [
                        72
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/POSDictionaryTest.java": {
                "old": {
                    "('opennlp.tools.postag#POSDictionaryTest', 'serializeDeserializeDict(POSDictionary)')": [
                        50
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSDictionaryTest', 'serializeDeserializeDict(POSDictionary)')": [
                        50
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/POSSampleTest.java": {
                "old": {
                    "('opennlp.tools.postag#POSSampleTest', 'testParse')": [
                        65
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSSampleTest', 'testParse')": [
                        65
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/POSTaggerFactoryTest.java": {
                "old": {
                    "('opennlp.tools.postag#POSTaggerFactoryTest', 'testPOSTaggerWithCustomFactory')": [
                        67,
                        68
                    ],
                    "('opennlp.tools.postag#POSTaggerFactoryTest', 'testPOSTaggerWithDefaultFactory')": [
                        94,
                        95
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSTaggerFactoryTest', 'testPOSTaggerWithCustomFactory')": [
                        67
                    ],
                    "('opennlp.tools.postag#POSTaggerFactoryTest', 'testPOSTaggerWithDefaultFactory')": [
                        93
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/POSTaggerMETest.java": {
                "old": {
                    "('opennlp.tools.postag#POSTaggerMETest', 'createSampleStream')": [
                        41
                    ],
                    "('opennlp.tools.postag#POSTaggerMETest', 'testPOSTagger')": [
                        70,
                        71,
                        72,
                        73,
                        74
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSTaggerMETest', 'createSampleStream')": [
                        41
                    ],
                    "('opennlp.tools.postag#POSTaggerMETest', 'testPOSTagger')": [
                        70,
                        71,
                        72,
                        73,
                        74
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/WordTagSampleStreamTest.java": {
                "old": {
                    "('opennlp.tools.postag#WordTagSampleStreamTest', 'testParseSimpleSample')": [
                        45
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#WordTagSampleStreamTest', 'testParseSimpleSample')": [
                        45
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/NewlineSentenceDetectorTest.java": {
                "old": {
                    "('opennlp.tools.sentdetect#NewlineSentenceDetectorTest', 'testSentenceValues(String)')": [
                        30
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#NewlineSentenceDetectorTest', 'testSentenceValues(String)')": [
                        30
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/SDEventStreamTest.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SDEventStreamTest', 'testEventOutcomes')": [
                        45
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SDEventStreamTest', 'testEventOutcomes')": [
                        45
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/SentenceDetectorMETest.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceDetectorMETest', 'testSentenceDetector')": [
                        42
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceDetectorMETest', 'testSentenceDetector')": [
                        42
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/stemmer/PorterStemmerTest.java": {
                "old": {
                    "('opennlp.tools.stemmer#PorterStemmerTest', 'testStemming')": [
                        34
                    ]
                },
                "new": {
                    "('opennlp.tools.stemmer#PorterStemmerTest', 'testStemming')": [
                        34
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/DetokenizationDictionaryTest.java": {
                "old": {
                    "('opennlp.tools.tokenize#DetokenizationDictionaryTest', None)": [
                        32
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#DetokenizationDictionaryTest', None)": [
                        32
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/DictionaryDetokenizerTest.java": {
                "old": {
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', None)": [
                        30
                    ],
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', 'testDetokenizer')": [
                        43,
                        44
                    ],
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', 'createLatinDetokenizer')": [
                        62
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', None)": [
                        30
                    ],
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', 'testDetokenizer')": [
                        43
                    ],
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', 'createLatinDetokenizer')": [
                        61
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokSpanEventStreamTest.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokSpanEventStreamTest', 'testEventOutcomes')": [
                        44
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokSpanEventStreamTest', 'testEventOutcomes')": [
                        44
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokenSampleStreamTest.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingWhitespaceSeparatedTokens')": [
                        47
                    ],
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingSeparatedString')": [
                        72
                    ],
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingWhitespaceAndSeparatedString')": [
                        105
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingWhitespaceSeparatedTokens')": [
                        47
                    ],
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingSeparatedString')": [
                        72
                    ],
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingWhitespaceAndSeparatedString')": [
                        105
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokenSampleTest.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenSampleTest', 'testCreationWithDetokenizer')": [
                        66,
                        67,
                        68
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenSampleTest', 'testCreationWithDetokenizer')": [
                        66,
                        67,
                        68,
                        69,
                        70
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/AbstractEventStreamTest.java": {
                "old": {
                    "('opennlp.tools.util#AbstractEventStreamTest', None)": [
                        63,
                        64,
                        65
                    ]
                },
                "new": {
                    "('opennlp.tools.util#AbstractEventStreamTest', None)": [
                        63,
                        64,
                        65
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/ListHeapTest.java": {
                "old": {
                    "('opennlp.tools.util#ListHeapTest', 'testSimple')": [
                        33
                    ]
                },
                "new": {
                    "('opennlp.tools.util#ListHeapTest', 'testSimple')": [
                        33
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/MockInputStreamFactory.java": {
                "old": {
                    "('opennlp.tools.util#MockInputStreamFactory', None)": [
                        34,
                        38
                    ]
                },
                "new": {
                    "('opennlp.tools.util#MockInputStreamFactory', None)": [
                        34,
                        38
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/PlainTextByLineStreamTest.java": {
                "old": {
                    "('opennlp.tools.util#PlainTextByLineStreamTest', 'testLineSegmentation')": [
                        51
                    ]
                },
                "new": {
                    "('opennlp.tools.util#PlainTextByLineStreamTest', 'testLineSegmentation')": [
                        51
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/StringUtilTest.java": {
                "old": {
                    "('opennlp.tools.util#StringUtilTest', None)": [
                        59
                    ],
                    "('opennlp.tools.util#StringUtilTest', 'testIsEmptyWithNullString')": [
                        61
                    ]
                },
                "new": {
                    "('opennlp.tools.util#StringUtilTest', None)": [
                        59
                    ],
                    "('opennlp.tools.util#StringUtilTest', 'testIsEmptyWithNullString')": [
                        61
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/eval/CrossValidationPartitionerTest.java": {
                "old": {
                    "('opennlp.tools.util.eval#CrossValidationPartitionerTest', 'testFailSafty')": [
                        175,
                        181,
                        190
                    ],
                    "('opennlp.tools.util.eval#CrossValidationPartitionerTest', None)": [
                        204
                    ]
                },
                "new": {
                    "('opennlp.tools.util.eval#CrossValidationPartitionerTest', 'testFailSafty')": [
                        175,
                        176,
                        182,
                        183,
                        192,
                        193
                    ],
                    "('opennlp.tools.util.eval#CrossValidationPartitionerTest', None)": [
                        207,
                        208
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/eval/FMeasureTest.java": {
                "old": {
                    "('opennlp.tools.util.eval#FMeasureTest', None)": [
                        68
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testEmpty')": [
                        115,
                        116,
                        117,
                        118
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testPerfect')": [
                        123,
                        124,
                        125,
                        126,
                        127
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testMerge')": [
                        132,
                        133,
                        134,
                        136,
                        137,
                        138,
                        139,
                        140,
                        142,
                        143,
                        144,
                        146,
                        147,
                        148,
                        151,
                        152,
                        154,
                        155
                    ]
                },
                "new": {
                    "('opennlp.tools.util.eval#FMeasureTest', None)": [
                        68
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testEmpty')": [
                        115,
                        116,
                        117,
                        118
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testPerfect')": [
                        123,
                        124,
                        125,
                        126,
                        127
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testMerge')": [
                        132,
                        133,
                        134,
                        136,
                        137,
                        138,
                        139,
                        140,
                        142,
                        143,
                        144,
                        146,
                        147,
                        148,
                        151,
                        152,
                        154,
                        155
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/featuregen/FeatureGenWithSerializerMapping.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#FeatureGenWithSerializerMapping', None)": [
                        29
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#FeatureGenWithSerializerMapping', None)": [
                        29
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/featuregen/GeneratorFactoryTest.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#GeneratorFactoryTest', None)": [
                        38,
                        53
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactoryTest', 'testCreationWithTokenClassFeatureGenerator')": [
                        49,
                        52
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactoryTest', 'testCreationWihtSimpleDescriptor')": [
                        69,
                        73,
                        74,
                        76,
                        78
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactoryTest', 'testCreationWithCustomGenerator')": [
                        96
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#GeneratorFactoryTest', None)": [
                        38,
                        54
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactoryTest', 'testCreationWithTokenClassFeatureGenerator')": [
                        49,
                        52,
                        53
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactoryTest', 'testCreationWihtSimpleDescriptor')": [
                        70,
                        74,
                        76,
                        78
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactoryTest', 'testCreationWithCustomGenerator')": [
                        96
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/chunker/Chunker.java": {
                "old": {
                    "('opennlp.uima.chunker#Chunker', 'initialize(UimaContext)')": [
                        108,
                        120,
                        121,
                        122,
                        125
                    ],
                    "('opennlp.uima.chunker#Chunker', 'typeSystemInit(TypeSystem)')": [
                        138,
                        143,
                        151
                    ],
                    "('opennlp.uima.chunker#Chunker', 'process(CAS)')": [
                        174,
                        199,
                        206,
                        207,
                        208,
                        218
                    ]
                },
                "new": {
                    "('opennlp.uima.chunker#Chunker', 'initialize(UimaContext)')": [
                        108,
                        120,
                        121,
                        122,
                        125
                    ],
                    "('opennlp.uima.chunker#Chunker', 'typeSystemInit(TypeSystem)')": [
                        138,
                        143,
                        151
                    ],
                    "('opennlp.uima.chunker#Chunker', 'process(CAS)')": [
                        174,
                        199,
                        206,
                        207,
                        208,
                        218
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/chunker/ChunkerTrainer.java": {
                "old": {
                    "('opennlp.uima.chunker#ChunkerTrainer', 'typeSystemInit(TypeSystem)')": [
                        113,
                        116
                    ],
                    "('opennlp.uima.chunker#ChunkerTrainer', 'processSentence(CAS,AnnotationFS)')": [
                        161
                    ],
                    "('opennlp.uima.chunker#ChunkerTrainer', 'processChunk(CAS,AnnotationFS)')": [
                        179
                    ]
                },
                "new": {
                    "('opennlp.uima.chunker#ChunkerTrainer', 'typeSystemInit(TypeSystem)')": [
                        113,
                        116
                    ],
                    "('opennlp.uima.chunker#ChunkerTrainer', 'processSentence(CAS,AnnotationFS)')": [
                        161
                    ],
                    "('opennlp.uima.chunker#ChunkerTrainer', 'processChunk(CAS,AnnotationFS)')": [
                        179
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/doccat/DocumentCategorizer.java": {
                "old": {
                    "('opennlp.uima.doccat#DocumentCategorizer', 'typeSystemInit(TypeSystem)')": [
                        52
                    ]
                },
                "new": {
                    "('opennlp.uima.doccat#DocumentCategorizer', 'typeSystemInit(TypeSystem)')": [
                        52
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/doccat/DocumentCategorizerTrainer.java": {
                "old": {
                    "('opennlp.uima.doccat#DocumentCategorizerTrainer', 'processCas(CAS)')": [
                        119,
                        120
                    ]
                },
                "new": {
                    "('opennlp.uima.doccat#DocumentCategorizerTrainer', 'processCas(CAS)')": [
                        119,
                        120
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/namefind/AbstractNameFinder.java": {
                "old": {
                    "('opennlp.uima.namefind#AbstractNameFinder', 'initialize(UimaContext)')": [
                        66,
                        67,
                        68,
                        73,
                        74,
                        81
                    ],
                    "('opennlp.uima.namefind#AbstractNameFinder', 'typeSystemInit(TypeSystem)')": [
                        94,
                        120,
                        128
                    ],
                    "('opennlp.uima.namefind#AbstractNameFinder', 'postProcessAnnotations(Span,AnnotationFS)')": [
                        133
                    ]
                },
                "new": {
                    "('opennlp.uima.namefind#AbstractNameFinder', 'initialize(UimaContext)')": [
                        66,
                        67,
                        68,
                        73,
                        80
                    ],
                    "('opennlp.uima.namefind#AbstractNameFinder', 'typeSystemInit(TypeSystem)')": [
                        93,
                        119,
                        127
                    ],
                    "('opennlp.uima.namefind#AbstractNameFinder', 'postProcessAnnotations(Span,AnnotationFS)')": [
                        132
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/namefind/NameFinder.java": {
                "old": {
                    "('opennlp.uima.namefind#NameFinder', 'initialize')": [
                        127,
                        130
                    ],
                    "('opennlp.uima.namefind#NameFinder', 'typeSystemInit(TypeSystem)')": [
                        145
                    ]
                },
                "new": {
                    "('opennlp.uima.namefind#NameFinder', 'initialize')": [
                        127,
                        130
                    ],
                    "('opennlp.uima.namefind#NameFinder', 'typeSystemInit(TypeSystem)')": [
                        145
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/normalizer/Normalizer.java": {
                "old": {
                    "('opennlp.uima.normalizer#Normalizer', None)": [
                        147,
                        148,
                        149
                    ]
                },
                "new": {
                    "('opennlp.uima.normalizer#Normalizer', None)": [
                        147,
                        148,
                        149
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/parser/Parser.java": {
                "old": {
                    "('opennlp.uima.parser#Parser', 'process(CAS,AnnotationFS)')": [
                        276
                    ]
                },
                "new": {
                    "('opennlp.uima.parser#Parser', 'process(CAS,AnnotationFS)')": [
                        276
                    ],
                    "('opennlp.uima.parser#Parser', None)": [
                        337
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/postag/POSTaggerTrainer.java": {
                "old": {
                    "('opennlp.uima.postag#POSTaggerTrainer', 'destroy')": [
                        231
                    ]
                },
                "new": {
                    "('opennlp.uima.postag#POSTaggerTrainer', 'destroy')": [
                        231
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/sentdetect/SentenceDetector.java": {
                "old": {
                    "(None, None)": [
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        50
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/sentdetect/SentenceDetectorTrainer.java": {
                "old": {
                    "('opennlp.uima.sentdetect#SentenceDetectorTrainer', 'collectionProcessComplete(ProcessTrace)')": [
                        169,
                        170,
                        176,
                        177
                    ]
                },
                "new": {
                    "('opennlp.uima.sentdetect#SentenceDetectorTrainer', 'collectionProcessComplete(ProcessTrace)')": [
                        169,
                        170,
                        176,
                        177
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/tokenize/SimpleTokenizer.java": {
                "old": {
                    "('opennlp.uima.tokenize#SimpleTokenizer', None)": [
                        52
                    ]
                },
                "new": {
                    "('opennlp.uima.tokenize#SimpleTokenizer', None)": [
                        52
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/tokenize/TokenizerTrainer.java": {
                "old": {
                    "('opennlp.uima.tokenize#TokenizerTrainer', 'initialize')": [
                        116,
                        137
                    ]
                },
                "new": {
                    "('opennlp.uima.tokenize#TokenizerTrainer', 'initialize')": [
                        116,
                        137
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/tokenize/WhitespaceTokenizer.java": {
                "old": {
                    "('opennlp.uima.tokenize#WhitespaceTokenizer', None)": [
                        46
                    ]
                },
                "new": {
                    "('opennlp.uima.tokenize#WhitespaceTokenizer', None)": [
                        46
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/util/AbstractModelResource.java": {
                "old": {
                    "('opennlp.uima.util#AbstractModelResource', None)": [
                        29
                    ],
                    "('opennlp.uima.util#AbstractModelResource', 'loadModel(InputStream)')": [
                        31
                    ],
                    "('opennlp.uima.util#AbstractModelResource', 'load(DataResource)')": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40
                    ],
                    "(None, None)": [
                        41,
                        42
                    ]
                },
                "new": {
                    "('opennlp.uima.util#AbstractModelResource', None)": [
                        29
                    ],
                    "('opennlp.uima.util#AbstractModelResource', 'loadModel(InputStream)')": [
                        31
                    ],
                    "('opennlp.uima.util#AbstractModelResource', 'load(DataResource)')": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40
                    ],
                    "(None, None)": [
                        41,
                        42
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/util/AnnotationIteratorPair.java": {
                "new": {
                    "('opennlp.uima.util#AnnotationIteratorPair', None)": [
                        31,
                        37,
                        41
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/util/AnnotatorUtil.java": {
                "old": {
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredFeatureParameter(UimaContext,Type,String)')": [
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'checkForNull(Object,String)')": [
                        247,
                        250,
                        251
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalFeature(Type,String,String)')": [
                        276
                    ]
                },
                "new": {
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredFeatureParameter(UimaContext,Type,String)')": [
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'checkForNull(Object,String)')": [
                        246,
                        249,
                        250
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalFeature(Type,String,String)')": [
                        275
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/util/CasConsumerUtil.java": {
                "old": {
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalResourceAsStream(UimaContext,String)')": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', None)": [
                        54,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'checkForNull(Object,String)')": [
                        192,
                        197,
                        198
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalStringParameter(UimaContext,String)')": [
                        224,
                        225
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalStringArrayParameter(UimaContext,String)')": [
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalIntegerParameter(UimaContext,String)')": [
                        268,
                        269
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalFloatParameter(UimaContext,String)')": [
                        316,
                        317
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalBooleanParameter(UimaContext,String)')": [
                        343,
                        344
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'checkFeatureType(Feature,String)')": [
                        373
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'createOptionalDictionary(UimaContext,String)')": [
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424
                    ]
                },
                "new": {
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalResourceAsStream(UimaContext,String)')": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', None)": [
                        54,
                        115,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'checkForNull(Object,String)')": [
                        193,
                        198
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalStringParameter(UimaContext,String)')": [
                        224
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalStringArrayParameter(UimaContext,String)')": [
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalIntegerParameter(UimaContext,String)')": [
                        267
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalFloatParameter(UimaContext,String)')": [
                        314
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalBooleanParameter(UimaContext,String)')": [
                        340
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'checkFeatureType(Feature,String)')": [
                        369
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'createOptionalDictionary(UimaContext,String)')": [
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/util/UimaUtil.java": {
                "old": {
                    "('opennlp.uima.util#UimaUtil', None)": [
                        77
                    ]
                },
                "new": {
                    "('opennlp.uima.util#UimaUtil', None)": [
                        77
                    ]
                }
            }
        }
    }
}