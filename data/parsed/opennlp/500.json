{
    "06c27b37ccbde70514e035a50ba0a6ee1ff94ea3": {
        "authored_data": "2016 Dec 21 11:06",
        "commit.message": "Use String.join instead of manual join\n",
        "commit.author.name": "Joern Kottmann",
        "pcid": "2b0658c59d6285547a5c6de7ac71c7cb134ce975",
        "changes": {
            "opennlp-tools/src/test/java/opennlp/tools/eval/SourceForgeModelEval.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalSentenceModel')": [
                        127,
                        128,
                        129,
                        130
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalTokenModel')": [
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalParserModel')": [
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356
                    ]
                },
                "new": {
                    "(None, None)": [
                        48
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalSentenceModel')": [
                        127
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalTokenModel')": [
                        162
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalParserModel')": [
                        338
                    ]
                }
            }
        }
    },
    "2b0658c59d6285547a5c6de7ac71c7cb134ce975": {
        "authored_data": "2016 Dec 21 10:28",
        "commit.message": "Increase backward compatibility to two minor versions\n\nSee issue OPENNLP-896\n",
        "commit.author.name": "Joern Kottmann",
        "pcid": "0debe9c1fc70c31b491ac99c4373040177435ef3",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/util/model/BaseModel.java": {
                "old": {
                    "('opennlp.tools.util.model#BaseModel', 'validateArtifactMap')": [
                        425
                    ]
                },
                "new": {
                    "('opennlp.tools.util.model#BaseModel', 'validateArtifactMap')": [
                        425,
                        426
                    ]
                }
            }
        }
    },
    "0debe9c1fc70c31b491ac99c4373040177435ef3": {
        "authored_data": "2016 Nov 10 00:07",
        "commit.message": "Improve error reporting on brat parser crashes\n\nParsing errors are now catched and wrapped in\nan IOException containing the document id for\ntracking down the actual file.\n\nSee issue OPENNLP-881\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "727964d7efad28d6b61d6d0597386415b0ab7075",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratAnnotationStream.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratAnnotationStream', None)": [
                        85,
                        86,
                        87
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotationStream', 'read')": [
                        175,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratAnnotationStream', None)": [
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotationStream', 'read')": [
                        180,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193
                    ]
                }
            }
        }
    },
    "727964d7efad28d6b61d6d0597386415b0ab7075": {
        "authored_data": "2016 Dec 21 00:44",
        "commit.message": "Remove deprecated code from PlainTextByLineStream\n\nSee issue OPENNLP-882\n",
        "commit.author.name": "William Colen",
        "pcid": "554626de2edb69951083b847b5fd13db28bae30e",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/formats/BioNLP2004NameSampleStream.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.formats#BioNLP2004NameSampleStream', None)": [
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/BioNLP2004NameSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats#BioNLP2004NameSampleStreamFactory', 'create(String)')": [
                        71,
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        78
                    ],
                    "('opennlp.tools.formats#BioNLP2004NameSampleStreamFactory', 'create(String)')": [
                        73,
                        74,
                        75,
                        76,
                        77
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll02NameSampleStream.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.formats#Conll02NameSampleStream', None)": [
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll03NameSampleStream.java": {
                "old": {
                    "(None, None)": [
                        19,
                        30,
                        31
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStream', None)": [
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19,
                        25
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/EvalitaNameSampleStream.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.formats#EvalitaNameSampleStream', None)": [
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/NameFinderCensus90NameStream.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('opennlp.tools.formats#NameFinderCensus90NameStream', None)": [
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADChunkSampleStream.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', None)": [
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADNameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADNameSampleStream', None)": [
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'processLeaf(Leaf,List,List)')": [
                        350,
                        356,
                        357,
                        358,
                        359,
                        360
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADNameSampleStream', None)": [
                        330
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADPOSSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADPOSSampleStream', None)": [
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADSentenceSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADSentenceSampleStream', None)": [
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderEvaluator.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        149,
                        150
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderEvaluator', None)": [
                        102,
                        103
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderEvaluator', 'main(String)')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/PlainTextByLineStream.java": {
                "old": {
                    "(None, None)": [
                        23,
                        25,
                        26
                    ],
                    "('opennlp.tools.util#PlainTextByLineStream', None)": [
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96
                    ]
                }
            }
        }
    },
    "554626de2edb69951083b847b5fd13db28bae30e": {
        "authored_data": "2016 Dec 20 22:35",
        "commit.message": "Add japanese eos chars\n\nThanks to Bar Perach for providing a patch!\n\nSee issue OPENNLP-772\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "f89f3ffe2121acc223631c71ea5bdcf6764194a7",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/lang/Factory.java": {
                "old": {
                    "('opennlp.tools.sentdetect.lang#Factory', 'createEndOfSentenceScanner(String)')": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        46
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect.lang#Factory', None)": [
                        39,
                        40
                    ],
                    "('opennlp.tools.sentdetect.lang#Factory', 'createEndOfSentenceScanner(String)')": [
                        43
                    ],
                    "('opennlp.tools.sentdetect.lang#Factory', 'getEOSCharacters(String)')": [
                        76,
                        77
                    ]
                }
            }
        }
    },
    "5f36766c1707bdfff7ebff550b172f937787b2d4": {
        "authored_data": "2016 Dec 19 18:49",
        "commit.message": "Remove deprecated API from the Parser\n\nSee issue OPENNLP-886\n",
        "commit.author.name": "Joern Kottmann",
        "pcid": "4f2790853b3bf1c39cd98683fe84859fb35e36b5",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/parser/BuildModelUpdaterTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.parser#BuildModelUpdaterTool', 'trainAndUpdate(ParserModel,ObjectStream,ModelUpdaterParams)')": [
                        52,
                        53
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.parser#BuildModelUpdaterTool', 'trainAndUpdate(ParserModel,ObjectStream,ModelUpdaterParams)')": [
                        52
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/Parser.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#Parser', None)": [
                        321,
                        322,
                        323,
                        324,
                        325,
                        326
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'train(String,ObjectStream,HeadRules,int,int)')": [
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342
                    ],
                    "(None, None)": [
                        343
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/chunking/ParserTest.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#ParserTest', 'testChunkingParserTraining')": [
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('opennlp.tools.parser.chunking#ParserTest', 'testChunkingParserTraining')": [
                        48
                    ]
                }
            }
        }
    },
    "4f2790853b3bf1c39cd98683fe84859fb35e36b5": {
        "authored_data": "2016 Dec 20 04:25",
        "commit.message": "OPENNLP-894: Switch from Java 7 to Java 8 and enforce Maven 3.3.9\n\nThis closes #10\n",
        "commit.author.name": "smarthi",
        "pcid": "afc6b65b74a4d774cf122fd73733527b181d7d85",
        "changes": {
            "opennlp-uima/src/test/java/opennlp/uima/AnnotatorsInitializationTest.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30
                    ],
                    "('opennlp.uima#AnnotatorsInitializationTest', None)": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('opennlp.uima#AnnotatorsInitializationTest', None)": [
                        39,
                        40,
                        41
                    ]
                }
            },
            "opennlp-uima/src/test/java/opennlp/uima/dictionary/DictionaryResourceTest.java": {
                "old": {
                    "('opennlp.uima.dictionary#DictionaryResourceTest', None)": [
                        46
                    ]
                },
                "new": {
                    "('opennlp.uima.dictionary#DictionaryResourceTest', None)": [
                        46
                    ]
                }
            }
        }
    },
    "afc6b65b74a4d774cf122fd73733527b181d7d85": {
        "authored_data": "2016 Dec 20 06:47",
        "commit.message": "OPENNLP-871: Cleanup code base for release\n\nThis closes #11\n",
        "commit.author.name": "smarthi",
        "pcid": "664d80330a3b4df05a524c3c202fe3f4de2806ba",
        "changes": {
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/builder/MorfologikDictionayBuilder.java": {
                "old": {
                    "(None, None)": [
                        20,
                        25
                    ],
                    "('opennlp.morfologik.builder#MorfologikDictionayBuilder', 'createProperties(Charset,String,EncoderType)')": [
                        93
                    ]
                },
                "new": {
                    "('opennlp.morfologik.builder#MorfologikDictionayBuilder', 'createProperties(Charset,String,EncoderType)')": [
                        91
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/cmdline/builder/XMLDictionaryToTableTool.java": {
                "old": {
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'run(String)')": [
                        62
                    ],
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'createEntry(String,String)')": [
                        119,
                        120,
                        123,
                        124
                    ]
                },
                "new": {
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'run(String)')": [
                        62
                    ],
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', 'createEntry(String,String)')": [
                        119,
                        120
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/lemmatizer/MorfologikLemmatizer.java": {
                "old": {
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', None)": [
                        38,
                        39
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'getLemmaTagsDict(String)')": [
                        46,
                        48,
                        50
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'getDictKeys(String,String)')": [
                        59
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'getDictMap(String,String)')": [
                        68,
                        69
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'lemmatize(String,String)')": [
                        80,
                        82,
                        87,
                        89
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', None)": [
                        40
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'getLemmaTagsDict(String)')": [
                        47,
                        49,
                        51
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'getDictKeys(String,String)')": [
                        60
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'getDictMap(String,String)')": [
                        69,
                        70
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'lemmatize(String,String)')": [
                        81,
                        83,
                        88,
                        90
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/tagdict/MorfologikPOSTaggerFactory.java": {
                "old": {
                    "(None, None)": [
                        29,
                        34
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikPOSTaggerFactory', 'createTagDictionary(File)')": [
                        56,
                        57
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikPOSTaggerFactory', 'getTagDictionary')": [
                        90,
                        92
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikPOSTaggerFactory', 'createTagDictionary(InputStream)')": [
                        124
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikPOSTaggerFactory', 'createArtifactSerializersMap')": [
                        132,
                        133
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikPOSTaggerFactory', None)": [
                        159,
                        160,
                        161
                    ]
                },
                "new": {
                    "('opennlp.morfologik.tagdict#MorfologikPOSTaggerFactory', 'createTagDictionary(File)')": [
                        54
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikPOSTaggerFactory', 'getTagDictionary')": [
                        87,
                        89
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikPOSTaggerFactory', 'createTagDictionary(InputStream)')": [
                        121
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikPOSTaggerFactory', 'createArtifactSerializersMap')": [
                        129
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikPOSTaggerFactory', None)": [
                        155
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/tagdict/MorfologikTagDictionary.java": {
                "old": {
                    "('opennlp.morfologik.tagdict#MorfologikTagDictionary', 'getTags(String)')": [
                        80
                    ]
                },
                "new": {
                    "('opennlp.morfologik.tagdict#MorfologikTagDictionary', 'getTags(String)')": [
                        80
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkSample.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkSample', None)": [
                        50,
                        51,
                        52,
                        69,
                        70,
                        71
                    ],
                    "('opennlp.tools.chunker#ChunkSample', 'phrasesAsSpanList(String,String,String)')": [
                        112
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkSample', None)": [
                        50,
                        51,
                        52,
                        69,
                        70,
                        71
                    ],
                    "('opennlp.tools.chunker#ChunkSample', 'phrasesAsSpanList(String,String,String)')": [
                        112
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkSampleSequenceStream.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkSampleSequenceStream', 'read')": [
                        56
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkSampleSequenceStream', 'read')": [
                        56
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/Chunker.java": {
                "old": {
                    "(None, None)": [
                        36,
                        46,
                        55,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        46,
                        55,
                        65
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkerContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkerCrossValidator.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('opennlp.tools.chunker#ChunkerCrossValidator', 'evaluate(ObjectStream,int)')": [
                        56,
                        57
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkerCrossValidator', 'evaluate(ObjectStream,int)')": [
                        54,
                        55
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkerEventStream.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkerEventStream', 'createEvents(ChunkSample)')": [
                        50
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkerEventStream', 'createEvents(ChunkSample)')": [
                        50
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkerFactory.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkerFactory', 'create(String)')": [
                        41,
                        42,
                        43
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkerFactory', 'create(String)')": [
                        41
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkerME.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkerME', None)": [
                        80,
                        104
                    ],
                    "('opennlp.tools.chunker#ChunkerME', 'train(String,ObjectStream,TrainingParameters,ChunkerFactory)')": [
                        171
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkerME', None)": [
                        80,
                        104
                    ],
                    "('opennlp.tools.chunker#ChunkerME', 'train(String,ObjectStream,TrainingParameters,ChunkerFactory)')": [
                        171
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/ArgumentParser.java": {
                "old": {
                    "('opennlp.tools.cmdline#ArgumentParser', None)": [
                        54,
                        55,
                        60,
                        61,
                        66,
                        151
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'methodNameToParameter(String)')": [
                        208,
                        209,
                        210
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'createArguments(Class)')": [
                        273,
                        274,
                        275
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'createUsage(Class)')": [
                        324,
                        351
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'validateArgumentsLoudly(String,Class)')": [
                        428
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'parse(String,Class)')": [
                        485
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'filter(String,Class)')": [
                        534
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#ArgumentParser', None)": [
                        54,
                        55,
                        60,
                        61,
                        66,
                        151
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'methodNameToParameter(String)')": [
                        208
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'createArguments(Class)')": [
                        271,
                        272,
                        273
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'createUsage(Class)')": [
                        322,
                        349
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'validateArgumentsLoudly(String,Class)')": [
                        426
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'parse(String,Class)')": [
                        483
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'filter(String,Class)')": [
                        532
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/CLI.java": {
                "old": {
                    "('opennlp.tools.cmdline#CLI', None)": [
                        81,
                        82,
                        83
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#CLI', None)": [
                        81,
                        82,
                        83
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/DetailedFMeasureListener.java": {
                "old": {
                    "('opennlp.tools.cmdline#DetailedFMeasureListener', None)": [
                        44
                    ],
                    "('opennlp.tools.cmdline#DetailedFMeasureListener', 'missclassified(T,T)')": [
                        62,
                        63
                    ],
                    "('opennlp.tools.cmdline#DetailedFMeasureListener', 'createReport(Locale)')": [
                        132
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#DetailedFMeasureListener', None)": [
                        44
                    ],
                    "('opennlp.tools.cmdline#DetailedFMeasureListener', 'missclassified(T,T)')": [
                        62,
                        63
                    ],
                    "('opennlp.tools.cmdline#DetailedFMeasureListener', 'createReport(Locale)')": [
                        132
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/EvaluationErrorPrinter.java": {
                "old": {
                    "('opennlp.tools.cmdline#EvaluationErrorPrinter', 'printError(Span,Span,T,T,String)')": [
                        43,
                        44
                    ],
                    "('opennlp.tools.cmdline#EvaluationErrorPrinter', 'printError(String,Span,Span,T,T,String)')": [
                        60,
                        61
                    ],
                    "('opennlp.tools.cmdline#EvaluationErrorPrinter', 'printError(String,String,T,T,String)')": [
                        86,
                        87,
                        88
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#EvaluationErrorPrinter', 'printError(Span,Span,T,T,String)')": [
                        43,
                        44
                    ],
                    "('opennlp.tools.cmdline#EvaluationErrorPrinter', 'printError(String,Span,Span,T,T,String)')": [
                        60,
                        61
                    ],
                    "('opennlp.tools.cmdline#EvaluationErrorPrinter', 'printError(String,String,T,T,String)')": [
                        86,
                        87,
                        88
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/GenerateManualTool.java": {
                "old": {
                    "('opennlp.tools.cmdline#GenerateManualTool', 'main(String)')": [
                        48
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#GenerateManualTool', 'main(String)')": [
                        48
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/ModelLoader.java": {
                "old": {
                    "('opennlp.tools.cmdline#ModelLoader', 'loadModel(InputStream)')": [
                        46
                    ],
                    "('opennlp.tools.cmdline#ModelLoader', None)": [
                        47
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#ModelLoader', 'loadModel(InputStream)')": [
                        46
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/StreamFactoryRegistry.java": {
                "old": {
                    "('opennlp.tools.cmdline#StreamFactoryRegistry', None)": [
                        63,
                        64
                    ],
                    "('opennlp.tools.cmdline#StreamFactoryRegistry', 'registerFactory(Class,String,ObjectStreamFactory)')": [
                        132
                    ],
                    "('opennlp.tools.cmdline#StreamFactoryRegistry', 'getFactory(Class,String)')": [
                        201,
                        203,
                        204
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#StreamFactoryRegistry', None)": [
                        63
                    ],
                    "('opennlp.tools.cmdline#StreamFactoryRegistry', 'registerFactory(Class,String,ObjectStreamFactory)')": [
                        131
                    ],
                    "('opennlp.tools.cmdline#StreamFactoryRegistry', 'getFactory(Class,String)')": [
                        200
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/chunker/ChunkerCrossValidatorTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.chunker#ChunkerCrossValidatorTool', 'run(String,String)')": [
                        60
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.chunker#ChunkerCrossValidatorTool', 'run(String,String)')": [
                        60
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/chunker/ChunkerEvaluatorTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.chunker#ChunkerEvaluatorTool', 'run(String,String)')": [
                        57
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.chunker#ChunkerEvaluatorTool', 'run(String,String)')": [
                        57
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/chunker/ChunkerMETool.java": {
                "old": {
                    "('opennlp.tools.cmdline.chunker#ChunkerMETool', 'run(String)')": [
                        53
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.chunker#ChunkerMETool', 'run(String)')": [
                        53
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/doccat/DoccatFineGrainedReportListener.java": {
                "old": {
                    "(None, None)": [
                        29,
                        36
                    ],
                    "('opennlp.tools.cmdline.doccat#DoccatFineGrainedReportListener', 'generateAlphaLabel(int)')": [
                        333
                    ],
                    "('opennlp.tools.cmdline.doccat#DoccatFineGrainedReportListener', None)": [
                        358,
                        359,
                        360,
                        363,
                        364,
                        365,
                        368,
                        371,
                        450,
                        455,
                        456,
                        512,
                        535,
                        576,
                        641,
                        643,
                        696
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.doccat#DoccatFineGrainedReportListener', 'generateAlphaLabel(int)')": [
                        331
                    ],
                    "('opennlp.tools.cmdline.doccat#DoccatFineGrainedReportListener', None)": [
                        356,
                        357,
                        358,
                        361,
                        362,
                        363,
                        366,
                        369,
                        448,
                        453,
                        454,
                        510,
                        533,
                        574,
                        639,
                        641,
                        694
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/doccat/DoccatTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.doccat#DoccatTool', 'run(String)')": [
                        57
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.doccat#DoccatTool', 'run(String)')": [
                        57
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/doccat/DoccatTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.doccat#DoccatTrainerTool', 'createFeatureGenerators(String)')": [
                        102,
                        103
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.doccat#DoccatTrainerTool', 'createFeatureGenerators(String)')": [
                        102
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/entitylinker/EntityLinkerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.entitylinker#EntityLinkerTool', 'run(String)')": [
                        87
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.entitylinker#EntityLinkerTool', 'run(String)')": [
                        87
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/lemmatizer/LemmatizerFineGrainedReportListener.java": {
                "old": {
                    "('opennlp.tools.cmdline.lemmatizer#LemmatizerFineGrainedReportListener', 'generateAlphaLabel(int)')": [
                        462
                    ],
                    "('opennlp.tools.cmdline.lemmatizer#LemmatizerFineGrainedReportListener', None)": [
                        487,
                        488,
                        489,
                        492,
                        493,
                        494,
                        497,
                        500,
                        579,
                        584,
                        585,
                        641,
                        664,
                        705,
                        770,
                        773,
                        827
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.lemmatizer#LemmatizerFineGrainedReportListener', 'generateAlphaLabel(int)')": [
                        462
                    ],
                    "('opennlp.tools.cmdline.lemmatizer#LemmatizerFineGrainedReportListener', None)": [
                        487,
                        488,
                        489,
                        492,
                        493,
                        494,
                        497,
                        500,
                        579,
                        584,
                        585,
                        641,
                        664,
                        705,
                        770,
                        773,
                        827
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/lemmatizer/LemmatizerMETool.java": {
                "old": {
                    "('opennlp.tools.cmdline.lemmatizer#LemmatizerMETool', 'run(String)')": [
                        54
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.lemmatizer#LemmatizerMETool', 'run(String)')": [
                        54
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TokenNameFinderTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTool', 'run(String)')": [
                        84
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTool', 'run(String)')": [
                        84
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/postag/POSModelLoader.java": {
                "old": {
                    "(None, None)": [
                        22,
                        25
                    ],
                    "('opennlp.tools.cmdline.postag#POSModelLoader', 'loadModel(InputStream)')": [
                        39,
                        40
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.postag#POSModelLoader', 'loadModel(InputStream)')": [
                        37
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/postag/POSTaggerFineGrainedReportListener.java": {
                "old": {
                    "('opennlp.tools.cmdline.postag#POSTaggerFineGrainedReportListener', 'generateAlphaLabel(int)')": [
                        469
                    ],
                    "('opennlp.tools.cmdline.postag#POSTaggerFineGrainedReportListener', None)": [
                        494,
                        495,
                        496,
                        499,
                        500,
                        501,
                        504,
                        507,
                        586,
                        591,
                        592,
                        648,
                        671,
                        712,
                        767,
                        768,
                        777,
                        779,
                        832
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.postag#POSTaggerFineGrainedReportListener', 'generateAlphaLabel(int)')": [
                        469
                    ],
                    "('opennlp.tools.cmdline.postag#POSTaggerFineGrainedReportListener', None)": [
                        494,
                        495,
                        496,
                        499,
                        500,
                        501,
                        504,
                        507,
                        586,
                        591,
                        592,
                        648,
                        671,
                        712,
                        767,
                        776,
                        778,
                        831
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/postag/POSTaggerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.postag#POSTaggerTool', 'run(String)')": [
                        54
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.postag#POSTaggerTool', 'run(String)')": [
                        54
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/postag/POSTaggerTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.postag#POSTaggerTrainerTool', 'run(String,String)')": [
                        88
                    ],
                    "('opennlp.tools.cmdline.postag#POSTaggerTrainerTool', 'getModelType(String)')": [
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.postag#POSTaggerTrainerTool', 'run(String,String)')": [
                        88
                    ],
                    "('opennlp.tools.cmdline.postag#POSTaggerTrainerTool', 'getModelType(String)')": [
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/tokenizer/CommandLineTokenizer.java": {
                "old": {
                    "('opennlp.tools.cmdline.tokenizer#CommandLineTokenizer', 'process')": [
                        39,
                        41
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.tokenizer#CommandLineTokenizer', 'process')": [
                        39,
                        41
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/Dictionary.java": {
                "old": {
                    "(None, None)": [
                        31,
                        36
                    ],
                    "('opennlp.tools.dictionary#Dictionary', None)": [
                        94,
                        116,
                        117,
                        118,
                        139,
                        140,
                        141,
                        176
                    ]
                },
                "new": {
                    "('opennlp.tools.dictionary#Dictionary', None)": [
                        92,
                        114,
                        115,
                        136,
                        137
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/Index.java": {
                "old": {
                    "('opennlp.tools.dictionary#Index', None)": [
                        33
                    ]
                },
                "new": {
                    "('opennlp.tools.dictionary#Index', None)": [
                        33
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/serializer/Attributes.java": {
                "old": {
                    "('opennlp.tools.dictionary.serializer#Attributes', None)": [
                        33
                    ]
                },
                "new": {
                    "('opennlp.tools.dictionary.serializer#Attributes', None)": [
                        33
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/serializer/DictionarySerializer.java": {
                "old": {
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', None)": [
                        62
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', 'create(InputStream,EntryInserter)')": [
                        212
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', 'serialize(OutputStream,Iterator,boolean)')": [
                        302,
                        303
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', 'serializeEntry(TransformerHandler,Entry)')": [
                        323,
                        327,
                        328,
                        329,
                        330
                    ]
                },
                "new": {
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', None)": [
                        62
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', 'create(InputStream,EntryInserter)')": [
                        212
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', 'serialize(OutputStream,Iterator,boolean)')": [
                        302
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', 'serializeEntry(TransformerHandler,Entry)')": [
                        322,
                        326
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/BagOfWordsFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.doccat#BagOfWordsFeatureGenerator', 'extractFeatures(String,Map)')": [
                        44
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#BagOfWordsFeatureGenerator', 'extractFeatures(String,Map)')": [
                        44
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DoccatCrossValidator.java": {
                "old": {
                    "('opennlp.tools.doccat#DoccatCrossValidator', 'evaluate(ObjectStream,int)')": [
                        68
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DoccatCrossValidator', 'evaluate(ObjectStream,int)')": [
                        68
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DoccatFactory.java": {
                "old": {
                    "('opennlp.tools.doccat#DoccatFactory', 'getFeatureGenerators')": [
                        143,
                        144
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DoccatFactory', 'getFeatureGenerators')": [
                        143
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DoccatModel.java": {
                "old": {
                    "('opennlp.tools.doccat#DoccatModel', None)": [
                        48,
                        52,
                        56
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DoccatModel', None)": [
                        48,
                        52,
                        56
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentCategorizerContextGenerator.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentCategorizerContextGenerator', 'getContext(String,Map)')": [
                        36
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DocumentCategorizerContextGenerator', 'getContext(String,Map)')": [
                        36
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentCategorizerME.java": {
                "old": {
                    "(None, None)": [
                        20,
                        28,
                        36
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'scoreMap(String)')": [
                        122
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'sortedScoreMap(String)')": [
                        142
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'train(String,ObjectStream,TrainingParameters,DoccatFactory)')": [
                        183
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'scoreMap(String)')": [
                        119
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'sortedScoreMap(String)')": [
                        139
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'train(String,ObjectStream,TrainingParameters,DoccatFactory)')": [
                        180
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentSample.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentSample', None)": [
                        53
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DocumentSample', None)": [
                        53
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/NGramFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.doccat#NGramFeatureGenerator', 'extractFeatures(String,Map)')": [
                        72
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#NGramFeatureGenerator', 'extractFeatures(String,Map)')": [
                        72
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/entitylinker/BaseLink.java": {
                "old": {
                    "('opennlp.tools.entitylinker#BaseLink', None)": [
                        32
                    ],
                    "('opennlp.tools.entitylinker#BaseLink', 'equals(Object)')": [
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159
                    ]
                },
                "new": {
                    "('opennlp.tools.entitylinker#BaseLink', None)": [
                        32
                    ],
                    "('opennlp.tools.entitylinker#BaseLink', 'equals(Object)')": [
                        153
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/entitylinker/LinkedSpan.java": {
                "old": {
                    "('opennlp.tools.entitylinker#LinkedSpan', 'equals(Object)')": [
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145
                    ]
                },
                "new": {
                    "('opennlp.tools.entitylinker#LinkedSpan', 'equals(Object)')": [
                        139
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/BioNLP2004NameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#BioNLP2004NameSampleStream', 'read')": [
                        85,
                        86,
                        119
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#BioNLP2004NameSampleStream', 'read')": [
                        85,
                        86,
                        119
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll02NameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#Conll02NameSampleStream', 'extract(int,int,String)')": [
                        105
                    ],
                    "('opennlp.tools.formats#Conll02NameSampleStream', 'read')": [
                        131,
                        132,
                        165
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#Conll02NameSampleStream', 'extract(int,int,String)')": [
                        105
                    ],
                    "('opennlp.tools.formats#Conll02NameSampleStream', 'read')": [
                        131,
                        132,
                        165
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll03NameSampleStream.java": {
                "old": {
                    "(None, None)": [
                        18,
                        19,
                        26
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStream', 'read')": [
                        96,
                        97,
                        136
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStream', 'read')": [
                        95,
                        96,
                        135
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ConllXPOSSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#ConllXPOSSampleStream', 'read')": [
                        71,
                        72
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#ConllXPOSSampleStream', 'read')": [
                        71,
                        72
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADChunkSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'read')": [
                        129,
                        130,
                        131
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADChunkSampleStream', 'read')": [
                        129,
                        130,
                        131
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADNameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADNameSampleStream', None)": [
                        83,
                        229,
                        363,
                        364,
                        365,
                        366
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'read')": [
                        245,
                        246
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'processLeaf(Leaf,List,List)')": [
                        362
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'processLexeme(String)')": [
                        372
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'processTok(String)')": [
                        387,
                        388
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADNameSampleStream', None)": [
                        83,
                        229
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'read')": [
                        245,
                        246
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'processLexeme(String)')": [
                        367
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'processTok(String)')": [
                        382,
                        383
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADPOSSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADPOSSampleStream', 'read')": [
                        127,
                        128
                    ],
                    "('opennlp.tools.formats.ad#ADPOSSampleStream', 'processLeaf(Leaf,List,List)')": [
                        169,
                        170
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADPOSSampleStream', 'read')": [
                        127,
                        128
                    ],
                    "('opennlp.tools.formats.ad#ADPOSSampleStream', 'processLeaf(Leaf,List,List)')": [
                        169,
                        170
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADPOSSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamFactory', 'create(String)')": [
                        84,
                        86,
                        87
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamFactory', 'create(String)')": [
                        84
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADSentenceSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADSentenceSampleStream', 'read')": [
                        132
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADSentenceSampleStream', 'read')": [
                        132
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADSentenceSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADSentenceSampleStreamFactory', 'create(String)')": [
                        82,
                        83,
                        84,
                        85
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADSentenceSampleStreamFactory', 'create(String)')": [
                        82
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADSentenceStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADSentenceStream', None)": [
                        141,
                        142,
                        143,
                        157,
                        384
                    ],
                    "('opennlp.tools.formats.ad#ADSentenceStream', 'read')": [
                        549,
                        550,
                        551,
                        554
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADSentenceStream', None)": [
                        154,
                        381
                    ],
                    "('opennlp.tools.formats.ad#ADSentenceStream', 'read')": [
                        546,
                        549
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/AnnotationConfiguration.java": {
                "old": {
                    "('opennlp.tools.formats.brat#AnnotationConfiguration', None)": [
                        44,
                        45
                    ],
                    "('opennlp.tools.formats.brat#AnnotationConfiguration', 'parse(InputStream)')": [
                        54,
                        66,
                        68
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#AnnotationConfiguration', None)": [
                        44
                    ],
                    "('opennlp.tools.formats.brat#AnnotationConfiguration', 'parse(InputStream)')": [
                        53
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratAnnotationStream.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratAnnotationStream', None)": [
                        144,
                        145
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratAnnotationStream', None)": [
                        144
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratDocumentStream.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratDocumentStream', None)": [
                        36,
                        60
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratDocumentStream', None)": [
                        36,
                        60
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratNameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratNameSampleStream', 'read(BratDocument)')": [
                        70,
                        96,
                        112,
                        119
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratNameSampleStream', 'read(BratDocument)')": [
                        70,
                        96,
                        112,
                        119
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/convert/AbstractToSentenceSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.convert#AbstractToSentenceSampleStream', 'read')": [
                        57
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.convert#AbstractToSentenceSampleStream', 'read')": [
                        57
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/convert/ParseToPOSSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.convert#ParseToPOSSampleStream', 'read')": [
                        44,
                        45
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.convert#ParseToPOSSampleStream', 'read')": [
                        44,
                        45
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/DefaultLemmatizerContextGenerator.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerContextGenerator', 'getPrefixes(String)')": [
                        44
                    ],
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerContextGenerator', 'getSuffixes(String)')": [
                        52
                    ],
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerContextGenerator', 'getContext(int,String,String,String)')": [
                        81
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerContextGenerator', 'getPrefixes(String)')": [
                        44
                    ],
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerContextGenerator', 'getSuffixes(String)')": [
                        52
                    ],
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerContextGenerator', 'getContext(int,String,String,String)')": [
                        81
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/DictionaryLemmatizer.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#DictionaryLemmatizer', None)": [
                        50
                    ],
                    "('opennlp.tools.lemmatizer#DictionaryLemmatizer', 'getDictKeys(String,String)')": [
                        83
                    ],
                    "('opennlp.tools.lemmatizer#DictionaryLemmatizer', 'lemmatize(String,String)')": [
                        89
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#DictionaryLemmatizer', None)": [
                        50
                    ],
                    "('opennlp.tools.lemmatizer#DictionaryLemmatizer', 'getDictKeys(String,String)')": [
                        83
                    ],
                    "('opennlp.tools.lemmatizer#DictionaryLemmatizer', 'lemmatize(String,String)')": [
                        89
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmaSample.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmaSample', None)": [
                        46,
                        47,
                        48,
                        61,
                        62,
                        63
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#LemmaSample', None)": [
                        46,
                        47,
                        48,
                        61,
                        62,
                        63
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmaSampleEventStream.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmaSampleEventStream', 'createEvents(LemmaSample)')": [
                        48
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#LemmaSampleEventStream', 'createEvents(LemmaSample)')": [
                        48
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmaSampleSequenceStream.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmaSampleSequenceStream', 'read')": [
                        55
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#LemmaSampleSequenceStream', 'read')": [
                        55
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmaSampleStream.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmaSampleStream', 'read')": [
                        41,
                        42,
                        43,
                        58,
                        59
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#LemmaSampleStream', 'read')": [
                        41,
                        42,
                        43,
                        58,
                        59
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/Lemmatizer.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmatizerContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmatizerFactory.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmatizerFactory', 'create(String)')": [
                        40,
                        41,
                        42
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#LemmatizerFactory', 'create(String)')": [
                        40
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmatizerME.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmatizerME', None)": [
                        82
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerME', 'decodeLemmas(String,String)')": [
                        100
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerME', 'train(String,ObjectStream,TrainingParameters,LemmatizerFactory)')": [
                        156
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#LemmatizerME', None)": [
                        82
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerME', 'decodeLemmas(String,String)')": [
                        100
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerME', 'train(String,ObjectStream,TrainingParameters,LemmatizerFactory)')": [
                        156
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/TrainerFactory.java": {
                "old": {
                    "('opennlp.tools.ml#TrainerFactory', None)": [
                        45
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'getTrainerType(Map)')": [
                        92,
                        99,
                        106
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#TrainerFactory', None)": [
                        45
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'getTrainerType(Map)')": [
                        92,
                        99,
                        106
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/DataStream.java": {
                "old": {
                    "(None, None)": [
                        35,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        42
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GIS.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GIS', 'isValid')": [
                        66,
                        67,
                        68,
                        69,
                        70
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#GIS', 'isValid')": [
                        66
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/RealBasicEventStream.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#RealBasicEventStream', None)": [
                        30
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#RealBasicEventStream', None)": [
                        30
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/BinaryGISModelWriter.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.io#BinaryGISModelWriter', None)": [
                        34
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.io#BinaryGISModelWriter', None)": [
                        34
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/GISModelWriter.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.io#GISModelWriter', 'sortValues')": [
                        126,
                        138
                    ],
                    "('opennlp.tools.ml.maxent.io#GISModelWriter', 'compressOutcomes(ComparablePredicate)')": [
                        146,
                        149,
                        156
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.io#GISModelWriter', 'sortValues')": [
                        137
                    ],
                    "('opennlp.tools.ml.maxent.io#GISModelWriter', 'compressOutcomes(ComparablePredicate)')": [
                        145,
                        148,
                        155
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/OldFormatGISModelReader.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.io#OldFormatGISModelReader', None)": [
                        38
                    ],
                    "('opennlp.tools.ml.maxent.io#OldFormatGISModelReader', 'getParameters(int)')": [
                        71,
                        72,
                        73
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.io#OldFormatGISModelReader', None)": [
                        38
                    ],
                    "('opennlp.tools.ml.maxent.io#OldFormatGISModelReader', 'getParameters(int)')": [
                        71
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/PlainTextGISModelWriter.java": {
                "old": {
                    "(None, None)": [
                        24,
                        30
                    ],
                    "('opennlp.tools.ml.maxent.io#PlainTextGISModelWriter', None)": [
                        37,
                        48
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.io#PlainTextGISModelWriter', None)": [
                        35,
                        46
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/SuffixSensitiveGISModelReader.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.io#SuffixSensitiveGISModelReader', 'main(String)')": [
                        79,
                        80
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.io#SuffixSensitiveGISModelReader', 'main(String)')": [
                        79
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/ParallelNegLogLikelihood.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#ParallelNegLogLikelihood', None)": [
                        38
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#ParallelNegLogLikelihood', 'computeInParallel(double,Class)')": [
                        116
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.quasinewton#ParallelNegLogLikelihood', None)": [
                        38
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#ParallelNegLogLikelihood', 'computeInParallel(double,Class)')": [
                        116
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/MaxentModel.java": {
                "old": {
                    "(None, None)": [
                        36,
                        47,
                        56,
                        67,
                        82,
                        92,
                        103,
                        105,
                        113
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        47,
                        56,
                        67,
                        82,
                        92,
                        103,
                        105,
                        113
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/OnePassDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#OnePassDataIndexer', None)": [
                        71
                    ],
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'computeEventCounts(ObjectStream,Map,int)')": [
                        111,
                        112,
                        113
                    ],
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'index(LinkedList,Map)')": [
                        131,
                        135,
                        136
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#OnePassDataIndexer', None)": [
                        71
                    ],
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'computeEventCounts(ObjectStream,Map,int)')": [
                        111,
                        112,
                        113
                    ],
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'index(LinkedList,Map)')": [
                        131,
                        135,
                        136
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/Prior.java": {
                "old": {
                    "(None, None)": [
                        34,
                        43,
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        43,
                        52
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/SequenceStream.java": {
                "old": {
                    "(None, None)": [
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/TwoPassDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', None)": [
                        73
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'computeEventCounts(ObjectStream,Writer,Map,int)')": [
                        121,
                        122,
                        124
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'index(int,ObjectStream,Map)')": [
                        145,
                        147,
                        148
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', None)": [
                        73
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'computeEventCounts(ObjectStream,Writer,Map,int)')": [
                        121,
                        122,
                        123,
                        125
                    ],
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'index(int,ObjectStream,Map)')": [
                        146,
                        148,
                        149
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/LogProbabilities.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#LogProbabilities', 'discardCountsBelow(double)')": [
                        162
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#LogProbabilities', 'discardCountsBelow(double)')": [
                        162
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/NaiveBayesModel.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModel', 'eval(int,float,double,EvalParameters,boolean)')": [
                        94,
                        124,
                        125
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModel', 'getSmoothedProbability(double,double,double)')": [
                        144,
                        146
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModel', 'eval(int,float,double,EvalParameters,boolean)')": [
                        94,
                        124
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModel', 'getSmoothedProbability(double,double,double)')": [
                        144
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/NaiveBayesModelWriter.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelWriter', 'computeOutcomePatterns(ComparablePredicate)')": [
                        101,
                        102,
                        109
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelWriter', 'computeOutcomePatterns(ComparablePredicate)')": [
                        101,
                        102,
                        109
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/NaiveBayesTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesTrainer', 'findParameters')": [
                        150
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesTrainer', 'findParameters')": [
                        150
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/PlainTextNaiveBayesModelWriter.java": {
                "old": {
                    "(None, None)": [
                        24,
                        30
                    ],
                    "('opennlp.tools.ml.naivebayes#PlainTextNaiveBayesModelWriter', None)": [
                        37,
                        48
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#PlainTextNaiveBayesModelWriter', None)": [
                        35,
                        46
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/Probabilities.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#Probabilities', None)": [
                        29
                    ],
                    "('opennlp.tools.ml.naivebayes#Probabilities', 'createMapDataStructure')": [
                        162
                    ],
                    "('opennlp.tools.ml.naivebayes#Probabilities', 'discardCountsBelow(double)')": [
                        193
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#Probabilities', None)": [
                        29
                    ],
                    "('opennlp.tools.ml.naivebayes#Probabilities', 'createMapDataStructure')": [
                        162
                    ],
                    "('opennlp.tools.ml.naivebayes#Probabilities', 'discardCountsBelow(double)')": [
                        193
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/BilouCodec.java": {
                "old": {
                    "('opennlp.tools.namefind#BilouCodec', 'decode(List)')": [
                        40,
                        59,
                        60,
                        61
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#BilouCodec', 'decode(List)')": [
                        40
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/BioCodec.java": {
                "old": {
                    "('opennlp.tools.namefind#BioCodec', 'extractNameType(String)')": [
                        36,
                        39,
                        40
                    ],
                    "('opennlp.tools.namefind#BioCodec', 'decode(List)')": [
                        49
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#BioCodec', 'extractNameType(String)')": [
                        36,
                        39
                    ],
                    "('opennlp.tools.namefind#BioCodec', 'decode(List)')": [
                        48
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/DictionaryNameFinder.java": {
                "old": {
                    "('opennlp.tools.namefind#DictionaryNameFinder', 'find(String)')": [
                        66
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#DictionaryNameFinder', 'find(String)')": [
                        66
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/DocumentNameFinder.java": {
                "old": {
                    "(None, None)": [
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        39
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        33,
                        40,
                        45
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        40,
                        45
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderEventStream.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderEventStream', None)": [
                        42,
                        43,
                        65,
                        67
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderEventStream', None)": [
                        62,
                        64,
                        66
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderME.java": {
                "old": {
                    "(None, None)": [
                        29,
                        57
                    ],
                    "('opennlp.tools.namefind#NameFinderME', None)": [
                        98
                    ],
                    "('opennlp.tools.namefind#NameFinderME', 'train(String,String,ObjectStream,TrainingParameters,TokenNameFinderFactory)')": [
                        256
                    ],
                    "('opennlp.tools.namefind#NameFinderME', 'train(String,String,ObjectStream,TrainingParameters,AdaptiveFeatureGenerator,Map)')": [
                        330
                    ],
                    "('opennlp.tools.namefind#NameFinderME', 'extractNameType(String)')": [
                        421,
                        424,
                        425
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderME', None)": [
                        96
                    ],
                    "('opennlp.tools.namefind#NameFinderME', 'train(String,String,ObjectStream,TrainingParameters,TokenNameFinderFactory)')": [
                        254
                    ],
                    "('opennlp.tools.namefind#NameFinderME', 'train(String,String,ObjectStream,TrainingParameters,AdaptiveFeatureGenerator,Map)')": [
                        328
                    ],
                    "('opennlp.tools.namefind#NameFinderME', 'extractNameType(String)')": [
                        419,
                        422
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameSample.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSample', None)": [
                        58,
                        59
                    ],
                    "('opennlp.tools.namefind#NameSample', 'parse(String,String,boolean)')": [
                        218,
                        219
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSample', None)": [
                        58,
                        59
                    ],
                    "('opennlp.tools.namefind#NameSample', 'parse(String,String,boolean)')": [
                        218,
                        219
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameSampleSequenceStream.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSampleSequenceStream', 'updateContext(Sequence,AbstractModel)')": [
                        73,
                        75
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceStream', 'read')": [
                        106,
                        107
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSampleSequenceStream', 'updateContext(Sequence,AbstractModel)')": [
                        74
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceStream', 'read')": [
                        105
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameSampleTypeFilter.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSampleTypeFilter', None)": [
                        41,
                        46
                    ],
                    "('opennlp.tools.namefind#NameSampleTypeFilter', 'read')": [
                        55
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSampleTypeFilter', None)": [
                        41,
                        46
                    ],
                    "('opennlp.tools.namefind#NameSampleTypeFilter', 'read')": [
                        55
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/RegexNameFinderFactory.java": {
                "old": {
                    "('opennlp.tools.namefind#RegexNameFinderFactory', None)": [
                        103,
                        105,
                        107
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#RegexNameFinderFactory', None)": [
                        103,
                        105,
                        107
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinder.java": {
                "old": {
                    "(None, None)": [
                        31,
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        39
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderCrossValidator.java": {
                "old": {
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidator', None)": [
                        63,
                        146,
                        178
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidator', 'evaluate(ObjectStream,int)')": [
                        212
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidator', None)": [
                        63
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidator', 'evaluate(ObjectStream,int)')": [
                        210
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderEvaluator.java": {
                "old": {
                    "(None, None)": [
                        25,
                        27,
                        154,
                        155
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderEvaluator', 'main(String)')": [
                        106,
                        107,
                        153
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#TokenNameFinderEvaluator', 'main(String)')": [
                        104
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderModel.java": {
                "old": {
                    "('opennlp.tools.namefind#TokenNameFinderModel', None)": [
                        119,
                        123,
                        127
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderModel', 'validateArtifactMap')": [
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301
                    ],
                    "(None, None)": [
                        302
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#TokenNameFinderModel', None)": [
                        119,
                        123,
                        127
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderModel', 'validateArtifactMap')": [
                        294,
                        295,
                        296
                    ],
                    "(None, None)": [
                        297
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ngram/NGramModel.java": {
                "old": {
                    "('opennlp.tools.ngram#NGramModel', None)": [
                        47
                    ]
                },
                "new": {
                    "('opennlp.tools.ngram#NGramModel', None)": [
                        47
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/AbstractBottomUpParser.java": {
                "old": {
                    "('opennlp.tools.parser#AbstractBottomUpParser', None)": [
                        184,
                        185,
                        186
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'collapsePunctuation(Parse,Set)')": [
                        220
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'parse(Parse,int)')": [
                        277
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#AbstractBottomUpParser', None)": [
                        184,
                        185,
                        186
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'collapsePunctuation(Parse,Set)')": [
                        220
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'parse(Parse,int)')": [
                        277
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/AbstractParserEventStream.java": {
                "old": {
                    "('opennlp.tools.parser#AbstractParserEventStream', 'createEvents(Parse)')": [
                        69
                    ],
                    "('opennlp.tools.parser#AbstractParserEventStream', 'getInitialChunks(Parse)')": [
                        99
                    ],
                    "('opennlp.tools.parser#AbstractParserEventStream', 'addChunkEvents(List,Parse)')": [
                        137,
                        138,
                        139
                    ],
                    "('opennlp.tools.parser#AbstractParserEventStream', 'addTagEvents(List,Parse)')": [
                        171,
                        172
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#AbstractParserEventStream', 'createEvents(Parse)')": [
                        69
                    ],
                    "('opennlp.tools.parser#AbstractParserEventStream', 'getInitialChunks(Parse)')": [
                        99
                    ],
                    "('opennlp.tools.parser#AbstractParserEventStream', 'addChunkEvents(List,Parse)')": [
                        137,
                        138,
                        139
                    ],
                    "('opennlp.tools.parser#AbstractParserEventStream', 'addTagEvents(List,Parse)')": [
                        171,
                        172
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ChunkSampleStream.java": {
                "old": {
                    "('opennlp.tools.parser#ChunkSampleStream', 'getInitialChunks(Parse)')": [
                        60
                    ],
                    "('opennlp.tools.parser#ChunkSampleStream', 'read')": [
                        71,
                        72,
                        73
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ChunkSampleStream', 'getInitialChunks(Parse)')": [
                        60
                    ],
                    "('opennlp.tools.parser#ChunkSampleStream', 'read')": [
                        71,
                        72,
                        73
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/GapLabeler.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/HeadRules.java": {
                "old": {
                    "(None, None)": [
                        35,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        42
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/Parse.java": {
                "old": {
                    "('opennlp.tools.parser#Parse', None)": [
                        156
                    ],
                    "('opennlp.tools.parser#Parse', 'clone')": [
                        182
                    ],
                    "('opennlp.tools.parser#Parse', 'parseParse(String,GapLabeler)')": [
                        846,
                        847,
                        859
                    ],
                    "('opennlp.tools.parser#Parse', 'getTagNodes')": [
                        953,
                        954
                    ],
                    "('opennlp.tools.parser#Parse', 'getCommonParent(Parse)')": [
                        981
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.parser#Parse', None)": [
                        157
                    ],
                    "('opennlp.tools.parser#Parse', 'clone')": [
                        183
                    ],
                    "('opennlp.tools.parser#Parse', 'parseParse(String,GapLabeler)')": [
                        847,
                        848,
                        860
                    ],
                    "('opennlp.tools.parser#Parse', 'getTagNodes')": [
                        954,
                        955
                    ],
                    "('opennlp.tools.parser#Parse', 'getCommonParent(Parse)')": [
                        982
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/Parser.java": {
                "old": {
                    "(None, None)": [
                        37,
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        37,
                        44
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ParserChunkerFactory.java": {
                "old": {
                    "('opennlp.tools.parser#ParserChunkerFactory', 'getSequenceValidator')": [
                        36
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ParserChunkerFactory', 'getSequenceValidator')": [
                        36
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ParserChunkerSequenceValidator.java": {
                "old": {
                    "('opennlp.tools.parser#ParserChunkerSequenceValidator', None)": [
                        32,
                        33
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ParserChunkerSequenceValidator', None)": [
                        32
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ParserCrossValidator.java": {
                "old": {
                    "('opennlp.tools.parser#ParserCrossValidator', 'evaluate(ObjectStream,int)')": [
                        51,
                        52,
                        55,
                        56
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ParserCrossValidator', 'evaluate(ObjectStream,int)')": [
                        51,
                        54
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ParserEvaluator.java": {
                "old": {
                    "('opennlp.tools.parser#ParserEvaluator', 'getConstituencySpans(Parse)')": [
                        66,
                        73
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ParserEvaluator', 'getConstituencySpans(Parse)')": [
                        66,
                        73
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ParserModel.java": {
                "old": {
                    "('opennlp.tools.parser#ParserModel', None)": [
                        50,
                        51,
                        76,
                        77,
                        179,
                        183,
                        187
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ParserModel', None)": [
                        50,
                        75,
                        177,
                        181,
                        185
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/BuildContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#BuildContextGenerator', 'getContext(Parse,int)')": [
                        71
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#BuildContextGenerator', 'getContext(Parse,int)')": [
                        71
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/CheckContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#CheckContextGenerator', 'getContext(Parse,String,int,int)')": [
                        56
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#CheckContextGenerator', 'getContext(Parse,String,int,int)')": [
                        56
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/Parser.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#Parser', None)": [
                        107,
                        108
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'advanceParses(Parse,double)')": [
                        137,
                        139,
                        141,
                        143,
                        145,
                        167
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        277,
                        282,
                        311
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#Parser', None)": [
                        107,
                        108
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'advanceParses(Parse,double)')": [
                        137,
                        139,
                        141,
                        143,
                        145,
                        167
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        277,
                        282,
                        311
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/ParserEventStream.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'reduceChunks(Parse,int,Parse)')": [
                        96
                    ],
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'main(String)')": [
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'reduceChunks(Parse,int,Parse)')": [
                        96
                    ],
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'main(String)')": [
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/lang/en/HeadRules.java": {
                "old": {
                    "(None, None)": [
                        37,
                        42
                    ],
                    "('opennlp.tools.parser.lang.en#HeadRules', None)": [
                        53,
                        54,
                        121
                    ],
                    "('opennlp.tools.parser.lang.en#HeadRules', 'readHeadRules(BufferedReader)')": [
                        200
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.lang.en#HeadRules', None)": [
                        51,
                        118
                    ],
                    "('opennlp.tools.parser.lang.en#HeadRules', 'readHeadRules(BufferedReader)')": [
                        197
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/lang/es/AncoraSpanishHeadRules.java": {
                "old": {
                    "(None, None)": [
                        36,
                        41
                    ],
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', None)": [
                        65,
                        66,
                        122
                    ],
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', 'readHeadRules(BufferedReader)')": [
                        202
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', None)": [
                        63,
                        119
                    ],
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', 'readHeadRules(BufferedReader)')": [
                        199
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/DefaultPOSSequenceValidator.java": {
                "old": {
                    "('opennlp.tools.postag#DefaultPOSSequenceValidator', 'validSequence(int,String,String,String)')": [
                        38,
                        39,
                        40,
                        41
                    ],
                    "(None, None)": [
                        42
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#DefaultPOSSequenceValidator', 'validSequence(int,String,String,String)')": [
                        38
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/MutableTagDictionary.java": {
                "old": {
                    "(None, None)": [
                        39,
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        39,
                        48
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSTagger.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        34,
                        36,
                        38,
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        34,
                        36,
                        38
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSTaggerCrossValidator.java": {
                "old": {
                    "('opennlp.tools.postag#POSTaggerCrossValidator', 'evaluate(ObjectStream,int)')": [
                        93
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSTaggerCrossValidator', 'evaluate(ObjectStream,int)')": [
                        93
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/TagDictionary.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/EndOfSentenceScanner.java": {
                "old": {
                    "(None, None)": [
                        39,
                        48,
                        57,
                        66
                    ]
                },
                "new": {
                    "(None, None)": [
                        39,
                        48,
                        57,
                        66
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SDContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceDetector.java": {
                "old": {
                    "(None, None)": [
                        36,
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        46
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/stemmer/PorterStemmer.java": {
                "old": {
                    "('opennlp.tools.stemmer#PorterStemmer', 'add(char)')": [
                        82
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'cons(int)')": [
                        111,
                        116
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'm')": [
                        133
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'vowelinstem')": [
                        167
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'doublec(int)')": [
                        177,
                        178,
                        179,
                        180,
                        181,
                        182
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'cvc(int)')": [
                        194
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'ends(String)')": [
                        204
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'step1')": [
                        254
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'step2')": [
                        281
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'step3')": [
                        292
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'step4')": [
                        336
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'step5')": [
                        358
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'step6')": [
                        413
                    ]
                },
                "new": {
                    "('opennlp.tools.stemmer#PorterStemmer', 'add(char)')": [
                        82,
                        83
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'cons(int)')": [
                        112,
                        117
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'm')": [
                        134
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'vowelinstem')": [
                        168
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'doublec(int)')": [
                        178,
                        179
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'cvc(int)')": [
                        191
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'ends(String)')": [
                        201
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'step1')": [
                        251
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'step2')": [
                        278
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'step3')": [
                        289
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'step4')": [
                        333
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'step5')": [
                        355
                    ],
                    "('opennlp.tools.stemmer#PorterStemmer', 'step6')": [
                        410
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/stemmer/Stemmer.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/Tokenizer.java": {
                "old": {
                    "(None, None)": [
                        55,
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        55,
                        64
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/BeamSearchContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/Heap.java": {
                "old": {
                    "(None, None)": [
                        34,
                        40,
                        46,
                        52,
                        58,
                        64,
                        71,
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        40,
                        46,
                        52,
                        58,
                        64,
                        71,
                        76
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/TrainingParameters.java": {
                "old": {
                    "('opennlp.tools.util#TrainingParameters', None)": [
                        40
                    ],
                    "('opennlp.tools.util#TrainingParameters', 'getSettings(String)')": [
                        82
                    ],
                    "('opennlp.tools.util#TrainingParameters', 'defaultParams')": [
                        149
                    ]
                },
                "new": {
                    "('opennlp.tools.util#TrainingParameters', None)": [
                        40
                    ],
                    "('opennlp.tools.util#TrainingParameters', 'getSettings(String)')": [
                        82
                    ],
                    "('opennlp.tools.util#TrainingParameters', 'defaultParams')": [
                        149
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/BaseModel.java": {
                "old": {
                    "('opennlp.tools.util.model#BaseModel', None)": [
                        53,
                        54,
                        176,
                        177,
                        178,
                        184,
                        192
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'loadModel(InputStream)')": [
                        200
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'finishLoadingArtifacts(InputStream)')": [
                        293,
                        297
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'createArtifactSerializers')": [
                        358
                    ]
                },
                "new": {
                    "('opennlp.tools.util.model#BaseModel', None)": [
                        174,
                        175,
                        181,
                        189
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'loadModel(InputStream)')": [
                        197,
                        210
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'finishLoadingArtifacts(InputStream)')": [
                        291,
                        295
                    ],
                    "('opennlp.tools.util.model#BaseModel', 'createArtifactSerializers')": [
                        356
                    ]
                }
            }
        }
    },
    "664d80330a3b4df05a524c3c202fe3f4de2806ba": {
        "authored_data": "2016 Dec 19 12:01",
        "commit.message": "Speed up GIS training by saving Executor in the GISTrainer\n\nThanks to Daniel Russ  for providing a patch\n\nSee issue OPENNLP-759\n",
        "commit.author.name": "Joern Kottmann",
        "pcid": "06371807f421926eefb99b0ce15dd552066b0cab",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GISTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GISTrainer', 'findParameters(int,double)')": [
                        416
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'nextIteration(double)')": [
                        547,
                        555,
                        556,
                        557,
                        559,
                        562,
                        563,
                        565,
                        566,
                        568,
                        569,
                        570,
                        571,
                        572,
                        574,
                        594,
                        595
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        28
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'findParameters(int,double)')": [
                        408,
                        409,
                        410,
                        421,
                        439
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'nextIteration(double,CompletionService)')": [
                        553,
                        560,
                        561,
                        562,
                        567,
                        569,
                        570,
                        572,
                        573,
                        574,
                        575,
                        576,
                        578
                    ]
                }
            }
        }
    }
}