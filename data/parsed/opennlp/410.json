{
    "9d4f7a03f3a02c8598751c2c93f09525aa1f1789": {
        "authored_data": "2017 Jan 19 05:13",
        "commit.message": "OPENNLP-947: Trivial fix to trigger Git mirror resync\n",
        "commit.author.name": "smarthi",
        "pcid": "ccc58b4886cbfb4f90014165d84c6a653514af79",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TokenNameFinderModelLoader.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderModelLoader', None)": [
                        32
                    ],
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderModelLoader', 'loadModel(InputStream)')": [
                        39,
                        40
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderModelLoader', None)": [
                        31
                    ],
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderModelLoader', 'loadModel(InputStream)')": [
                        38
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/serializer/DictionarySerializer.java": {
                "old": {
                    "(None, None)": [
                        18,
                        34,
                        35,
                        36,
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        41,
                        42,
                        43,
                        44
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADPOSSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADPOSSampleStream', None)": [
                        84,
                        85
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADPOSSampleStream', None)": [
                        84
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADSentenceStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADSentenceStream', None)": [
                        103,
                        104
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADSentenceStream', None)": [
                        103
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADTokenSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADTokenSampleStreamFactory', None)": [
                        35,
                        36
                    ],
                    "('opennlp.tools.formats.ad#ADTokenSampleStreamFactory', 'create(String)')": [
                        52,
                        53,
                        54,
                        55
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADTokenSampleStreamFactory', None)": [
                        35
                    ],
                    "('opennlp.tools.formats.ad#ADTokenSampleStreamFactory', 'create(String)')": [
                        51,
                        52
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/PortugueseContractionUtility.java": {
                "old": {
                    "('opennlp.tools.formats.ad#PortugueseContractionUtility', None)": [
                        42
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#PortugueseContractionUtility', None)": [
                        42
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratAnnotationStream.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratAnnotationStream', None)": [
                        86,
                        87,
                        88
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratAnnotationStream', None)": [
                        86,
                        87
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratDocument.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratDocument', None)": [
                        46
                    ],
                    "('opennlp.tools.formats.brat#BratDocument', 'parseDocument(AnnotationConfiguration,String,InputStream,InputStream)')": [
                        75,
                        76,
                        89,
                        90,
                        92
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratDocument', None)": [
                        46
                    ],
                    "('opennlp.tools.formats.brat#BratDocument', 'parseDocument(AnnotationConfiguration,String,InputStream,InputStream)')": [
                        75,
                        88
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/convert/POSToSentenceSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.convert#POSToSentenceSampleStream', None)": [
                        29,
                        30
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.convert#POSToSentenceSampleStream', None)": [
                        29,
                        30
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/frenchtreebank/ConstitParseSampleStream.java": {
                "old": {
                    "(None, None)": [
                        32,
                        33,
                        77
                    ],
                    "('opennlp.tools.formats.frenchtreebank#ConstitParseSampleStream', 'read')": [
                        53,
                        54,
                        62,
                        75,
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        30
                    ],
                    "('opennlp.tools.formats.frenchtreebank#ConstitParseSampleStream', 'read')": [
                        60,
                        61,
                        74
                    ]
                }
            }
        }
    },
    "ccc58b4886cbfb4f90014165d84c6a653514af79": {
        "authored_data": "2017 Jan 19 04:31",
        "commit.message": "OPENNLP-947: Organize imports according to new order, this closes apache/opennlp#74\n",
        "commit.author.name": "smarthi",
        "pcid": "10ec5a35b13963b953d3c6a9d8321dcecf11fb3f",
        "changes": {
            "opennlp-brat-annotator/src/main/java/opennlp/bratann/NameFinderAnnService.java": {
                "old": {
                    "(None, None)": [
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39
                    ],
                    "('opennlp.bratann#NameFinderAnnService', 'main(String)')": [
                        52,
                        53,
                        66,
                        67,
                        81,
                        82,
                        93,
                        94
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29
                    ],
                    "('opennlp.bratann#NameFinderAnnService', 'main(String)')": [
                        54,
                        55,
                        68,
                        82,
                        93,
                        94
                    ]
                }
            },
            "opennlp-brat-annotator/src/main/java/opennlp/bratann/NameFinderResource.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24
                    ],
                    "('opennlp.bratann#NameFinderResource', None)": [
                        38,
                        39,
                        40,
                        41,
                        42,
                        43
                    ],
                    "('opennlp.bratann#NameFinderResource', 'findNextNonWhitespaceChar(CharSequence,int,int)')": [
                        49,
                        50,
                        51,
                        57
                    ],
                    "('opennlp.bratann#NameFinderResource', 'findNames(String,String)')": [
                        64,
                        65,
                        66,
                        68,
                        73,
                        75,
                        87,
                        88,
                        89,
                        90,
                        118,
                        131,
                        143
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        32,
                        33,
                        34,
                        35,
                        36,
                        137
                    ],
                    "('opennlp.bratann#NameFinderResource', 'findNextNonWhitespaceChar(CharSequence,int,int)')": [
                        44
                    ],
                    "('opennlp.bratann#NameFinderResource', 'findNames(String,String)')": [
                        56,
                        62,
                        64,
                        76,
                        77,
                        105,
                        118
                    ],
                    "('opennlp.bratann#NameFinderResource', None)": [
                        132,
                        133,
                        134,
                        135,
                        136
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/builder/MorfologikDictionayBuilder.java": {
                "old": {
                    "('opennlp.morfologik.builder#MorfologikDictionayBuilder', None)": [
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        52,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        87
                    ],
                    "('opennlp.morfologik.builder#MorfologikDictionayBuilder', 'build(Path,boolean,boolean,boolean,boolean,boolean)')": [
                        56,
                        59,
                        60,
                        63,
                        64,
                        65
                    ],
                    "('opennlp.morfologik.builder#MorfologikDictionayBuilder', 'build(Path)')": [
                        85
                    ],
                    "('opennlp.morfologik.builder#MorfologikDictionayBuilder', 'createProperties(Charset,String,EncoderType)')": [
                        90,
                        91,
                        92,
                        97
                    ],
                    "(None, None)": [
                        99
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('opennlp.morfologik.builder#MorfologikDictionayBuilder', None)": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        68,
                        69,
                        70
                    ],
                    "('opennlp.morfologik.builder#MorfologikDictionayBuilder', 'build(Path,boolean,boolean,boolean,boolean,boolean)')": [
                        50,
                        53,
                        54,
                        57
                    ],
                    "('opennlp.morfologik.builder#MorfologikDictionayBuilder', 'createProperties(Charset,String,EncoderType)')": [
                        77,
                        78
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/cmdline/CLI.java": {
                "old": {
                    "('opennlp.morfologik.cmdline#CLI', None)": [
                        38
                    ],
                    "('opennlp.morfologik.cmdline#CLI', 'usage')": [
                        91,
                        92,
                        93,
                        94
                    ],
                    "('opennlp.morfologik.cmdline#CLI', 'main(String)')": [
                        147,
                        148
                    ]
                },
                "new": {
                    "('opennlp.morfologik.cmdline#CLI', None)": [
                        38
                    ],
                    "('opennlp.morfologik.cmdline#CLI', 'usage')": [
                        91,
                        92
                    ],
                    "('opennlp.morfologik.cmdline#CLI', 'main(String)')": [
                        145
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/cmdline/builder/MorfologikDictionaryBuilderTool.java": {
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/cmdline/builder/XMLDictionaryToTableTool.java": {
                "old": {
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', None)": [
                        37,
                        38,
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        123
                    ],
                    "('opennlp.morfologik.cmdline.builder#XMLDictionaryToTableTool', None)": [
                        121,
                        122
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/lemmatizer/MorfologikLemmatizer.java": {
                "old": {
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'asString(CharSequence)')": [
                        56
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'lemmatize(String,String)')": [
                        65
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', None)": [
                        81
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'lemmatize(List,List)')": [
                        87
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'asString(CharSequence)')": [
                        57,
                        59
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'lemmatize(String,String)')": [
                        67
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizer', 'lemmatize(List,List)')": [
                        88
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/tagdict/MorfologikPOSTaggerFactory.java": {
                "new": {
                    "(None, None)": [
                        29,
                        31
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/tagdict/MorfologikTagDictionary.java": {
                "old": {
                    "('opennlp.morfologik.tagdict#MorfologikTagDictionary', 'getTags(String)')": [
                        81,
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikTagDictionary', 'getTags(String)')": [
                        82,
                        83
                    ]
                }
            },
            "opennlp-morfologik-addon/src/test/java/opennlp/morfologik/builder/POSDictionayBuilderTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24
                    ],
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', None)": [
                        33,
                        34,
                        42,
                        59
                    ],
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', 'testBuildDictionary')": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', 'main(String)')": [
                        63,
                        70,
                        71
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33
                    ],
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', 'main(String)')": [
                        60
                    ],
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', None)": [
                        70,
                        72
                    ],
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', 'testBuildDictionary')": [
                        73,
                        74,
                        75,
                        76
                    ]
                }
            },
            "opennlp-morfologik-addon/src/test/java/opennlp/morfologik/lemmatizer/MorfologikLemmatizerTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizerTest', 'testLemmatizeInsensitive')": [
                        45,
                        46,
                        49
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizerTest', None)": [
                        50,
                        66,
                        67
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizerTest', 'testLemmatizeMultiLemma')": [
                        57,
                        63,
                        64,
                        65
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizerTest', 'createDictionary(boolean)')": [
                        72,
                        74,
                        75,
                        76,
                        77
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizerTest', 'testLemmatizeInsensitive')": [
                        42,
                        43,
                        46
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizerTest', 'testLemmatizeMultiLemma')": [
                        58,
                        59
                    ],
                    "('opennlp.morfologik.lemmatizer#MorfologikLemmatizerTest', 'createDictionary(boolean)')": [
                        65
                    ]
                }
            },
            "opennlp-morfologik-addon/src/test/java/opennlp/morfologik/tagdict/MorfologikTagDictionaryTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        29,
                        30
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikTagDictionaryTest', 'testNoLemma')": [
                        39,
                        40
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikTagDictionaryTest', None)": [
                        41,
                        60
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikTagDictionaryTest', 'testPOSDictionaryInsensitive')": [
                        49,
                        50,
                        51,
                        57,
                        58,
                        59
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikTagDictionaryTest', 'testPOSDictionarySensitive')": [
                        68,
                        69,
                        70,
                        76,
                        77
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikTagDictionaryTest', 'createDictionary(boolean,List)')": [
                        88,
                        90,
                        91,
                        92
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikTagDictionaryTest', 'testNoLemma')": [
                        38,
                        39
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikTagDictionaryTest', 'testPOSDictionaryInsensitive')": [
                        47,
                        48,
                        49,
                        55,
                        56,
                        57
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikTagDictionaryTest', 'testPOSDictionarySensitive')": [
                        65,
                        66,
                        67,
                        73,
                        74
                    ],
                    "('opennlp.morfologik.tagdict#MorfologikTagDictionaryTest', 'createDictionary(boolean,List)')": [
                        86
                    ]
                }
            },
            "opennlp-morfologik-addon/src/test/java/opennlp/morfologik/tagdict/POSTaggerFactoryTest.java": {
                "old": {
                    "(None, None)": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkerCrossValidator.java": {
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/doccat/DoccatFineGrainedReportListener.java": {
                "old": {
                    "('opennlp.tools.cmdline.doccat#DoccatFineGrainedReportListener', None)": [
                        437,
                        438,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        574,
                        575,
                        576,
                        577,
                        578,
                        579,
                        580,
                        581,
                        582,
                        583,
                        584,
                        585,
                        586,
                        587,
                        588
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ],
                    "('opennlp.tools.cmdline.doccat#DoccatFineGrainedReportListener', None)": [
                        438,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        570,
                        571,
                        572,
                        573,
                        574,
                        575,
                        576,
                        577,
                        578,
                        579,
                        580,
                        581,
                        582
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/lemmatizer/LemmatizerEvaluatorTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.lemmatizer#LemmatizerEvaluatorTool', None)": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        45
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.lemmatizer#LemmatizerEvaluatorTool', None)": [
                        113,
                        114,
                        115,
                        116,
                        117
                    ],
                    "(None, None)": [
                        118
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/postag/POSModelLoader.java": {
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/Dictionary.java": {
                "old": {
                    "(None, None)": [
                        18
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentCategorizerME.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'categorize(String)')": [
                        109,
                        110
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerME', 'categorize(String)')": [
                        110
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/NGramFeatureGenerator.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll03NameSampleStream.java": {
                "old": {
                    "(None, None)": [
                        18,
                        19
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStream', 'read')": [
                        142,
                        150,
                        164,
                        179
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#Conll03NameSampleStream', 'read')": [
                        140,
                        148,
                        162,
                        177
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/LeipzigDocumentSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats#LeipzigDocumentSampleStreamFactory', None)": [
                        40,
                        41,
                        42,
                        43,
                        49,
                        50,
                        51,
                        52
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#LeipzigDocumentSampleStreamFactory', None)": [
                        40,
                        41,
                        77,
                        78,
                        79,
                        80,
                        81
                    ],
                    "(None, None)": [
                        82
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/AnnotationConfiguration.java": {
                "old": {
                    "('opennlp.tools.formats.brat#AnnotationConfiguration', 'parse(InputStream)')": [
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        72,
                        73,
                        74,
                        75,
                        77,
                        78,
                        79,
                        81,
                        82,
                        83,
                        85,
                        86
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('opennlp.tools.formats.brat#AnnotationConfiguration', 'parse(InputStream)')": [
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        73,
                        74,
                        75,
                        76,
                        78,
                        79,
                        80,
                        82,
                        83,
                        84,
                        86,
                        87,
                        88,
                        89
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratNameSampleStreamFactory.java": {
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/convert/ParseToPOSSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/muc/Muc6NameSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.muc#Muc6NameSampleStreamFactory', None)": [
                        39,
                        40,
                        41,
                        44,
                        45
                    ],
                    "('opennlp.tools.formats.muc#Muc6NameSampleStreamFactory', 'create(String)')": [
                        58
                    ],
                    "('opennlp.tools.formats.muc#Muc6NameSampleStreamFactory', 'registerFactory')": [
                        63,
                        64
                    ],
                    "(None, None)": [
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('opennlp.tools.formats.muc#Muc6NameSampleStreamFactory', None)": [
                        40,
                        41,
                        46,
                        64,
                        65,
                        66
                    ],
                    "('opennlp.tools.formats.muc#Muc6NameSampleStreamFactory', 'registerFactory')": [
                        44,
                        45
                    ],
                    "('opennlp.tools.formats.muc#Muc6NameSampleStreamFactory', 'create(String)')": [
                        59
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/AbstractEventTrainer.java": {
                "old": {
                    "(None, None)": [
                        30,
                        31
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'isValid')": [
                        48,
                        49,
                        50,
                        51,
                        52
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#AbstractEventTrainer', 'isValid')": [
                        46
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/TrainerFactory.java": {
                "old": {
                    "('opennlp.tools.ml#TrainerFactory', 'getSequenceModelTrainer(Map,Map)')": [
                        126
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'isValid(Map)')": [
                        213
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.ml#TrainerFactory', 'getSequenceModelTrainer(Map,Map)')": [
                        127,
                        128
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/DataIndexerFactory.java": {
                "old": {
                    "('opennlp.tools.ml.model#DataIndexerFactory', None)": [
                        11
                    ],
                    "('opennlp.tools.ml.model#DataIndexerFactory', 'getDataIndexer(TrainingParameters,Map)')": [
                        12,
                        14,
                        18,
                        19,
                        20,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        35,
                        36,
                        41
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#DataIndexerFactory', None)": [
                        11
                    ],
                    "('opennlp.tools.ml.model#DataIndexerFactory', 'getDataIndexer(TrainingParameters,Map)')": [
                        12,
                        14,
                        18,
                        19,
                        20,
                        21,
                        22,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        37,
                        38,
                        43
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/PlainTextNaiveBayesModelWriter.java": {
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/SimplePerceptronSequenceTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', None)": [
                        51,
                        65,
                        66,
                        84
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainModel(int,SequenceStream,int,boolean)')": [
                        118,
                        168,
                        181
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainModel(int,SequenceStream,int,boolean)')": [
                        115,
                        165,
                        178
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'display(String)')": [
                        220
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/RegexNameFinderFactory.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderFactory', None)": [
                        40,
                        59
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#RegexNameFinderFactory', None)": [
                        38,
                        57
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ngram/NGramModel.java": {
                "old": {
                    "(None, None)": [
                        18
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/ParserEventStream.java": {
                "old": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSDictionary.java": {
                "old": {
                    "(None, None)": [
                        18,
                        21,
                        22,
                        23,
                        26,
                        37
                    ],
                    "('opennlp.tools.postag#POSDictionary', None)": [
                        64
                    ],
                    "('opennlp.tools.postag#POSDictionary', 'create(InputStream)')": [
                        229,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        253
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSDictionary', None)": [
                        58
                    ],
                    "('opennlp.tools.postag#POSDictionary', 'create(InputStream)')": [
                        223,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        245
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/WordTagSampleStream.java": {
                "old": {
                    "(None, None)": [
                        22,
                        29
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/DefaultEndOfSentenceScanner.java": {
                "old": {
                    "('opennlp.tools.sentdetect#DefaultEndOfSentenceScanner', 'getPositions(char)')": [
                        51
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#DefaultEndOfSentenceScanner', 'getPositions(char)')": [
                        51
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/DefaultSDContextGenerator.java": {
                "old": {
                    "('opennlp.tools.sentdetect#DefaultSDContextGenerator', None)": [
                        54,
                        71
                    ],
                    "('opennlp.tools.sentdetect#DefaultSDContextGenerator', 'getContext(CharSequence,int)')": [
                        91,
                        96,
                        101,
                        106
                    ],
                    "('opennlp.tools.sentdetect#DefaultSDContextGenerator', 'isFirstUpper(String)')": [
                        247
                    ],
                    "('opennlp.tools.sentdetect#DefaultSDContextGenerator', 'previousSpaceIndex(CharSequence,int)')": [
                        258
                    ],
                    "('opennlp.tools.sentdetect#DefaultSDContextGenerator', 'nextSpaceIndex(CharSequence,int,int)')": [
                        279
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#DefaultSDContextGenerator', None)": [
                        54,
                        71
                    ],
                    "('opennlp.tools.sentdetect#DefaultSDContextGenerator', 'getContext(CharSequence,int)')": [
                        91,
                        96,
                        101,
                        106
                    ],
                    "('opennlp.tools.sentdetect#DefaultSDContextGenerator', 'isFirstUpper(String)')": [
                        247
                    ],
                    "('opennlp.tools.sentdetect#DefaultSDContextGenerator', 'previousSpaceIndex(CharSequence,int)')": [
                        258
                    ],
                    "('opennlp.tools.sentdetect#DefaultSDContextGenerator', 'nextSpaceIndex(CharSequence,int,int)')": [
                        279
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/EndOfSentenceScanner.java": {
                "old": {
                    "(None, None)": [
                        17,
                        18
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/NewlineSentenceDetector.java": {
                "old": {
                    "('opennlp.tools.sentdetect#NewlineSentenceDetector', 'sentPosDetect(String)')": [
                        37
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#NewlineSentenceDetector', 'sentPosDetect(String)')": [
                        37
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SDCrossValidator.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SDCrossValidator', None)": [
                        44,
                        45
                    ],
                    "('opennlp.tools.sentdetect#SDCrossValidator', 'evaluate(ObjectStream,int)')": [
                        97
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SDCrossValidator', None)": [
                        44
                    ],
                    "('opennlp.tools.sentdetect#SDCrossValidator', 'evaluate(ObjectStream,int)')": [
                        96
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceDetectorEvaluator.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceDetectorEvaluator', None)": [
                        49
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceDetectorEvaluator', None)": [
                        49
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceDetectorFactory.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceDetectorFactory', 'validateArtifactMap')": [
                        80,
                        81,
                        82,
                        83,
                        84
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceDetectorFactory', 'validateArtifactMap')": [
                        80,
                        81,
                        82
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceDetectorME.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceDetectorME', None)": [
                        77
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'getAbbreviations(Dictionary)')": [
                        117
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'sentDetect(String)')": [
                        133,
                        135
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'sentPosDetect(String)')": [
                        170,
                        173,
                        174,
                        259
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'train(String,ObjectStream,SentenceDetectorFactory,TrainingParameters)')": [
                        320,
                        330,
                        331
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceDetectorME', None)": [
                        77
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'getAbbreviations(Dictionary)')": [
                        117
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'sentPosDetect(String)')": [
                        168,
                        171,
                        256
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'train(String,ObjectStream,SentenceDetectorFactory,TrainingParameters)')": [
                        317,
                        327
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceSample.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceSample', None)": [
                        47,
                        52
                    ],
                    "('opennlp.tools.sentdetect#SentenceSample', 'toString')": [
                        92,
                        94,
                        100
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceSample', None)": [
                        47,
                        52
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceSampleStream.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceSampleStream', 'read')": [
                        47,
                        51,
                        65,
                        66
                    ],
                    "(None, None)": [
                        67
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceSampleStream', 'read')": [
                        47,
                        64
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/lang/Factory.java": {
                "old": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.sentdetect.lang#Factory', 'createSentenceContextGenerator(String)')": [
                        68
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect.lang#Factory', 'createSentenceContextGenerator(String)')": [
                        67
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/lang/th/SentenceContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/DefaultTokenContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.tokenize#DefaultTokenContextGenerator', None)": [
                        39
                    ],
                    "('opennlp.tools.tokenize#DefaultTokenContextGenerator', 'createContext(String,int)')": [
                        74
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#DefaultTokenContextGenerator', None)": [
                        38
                    ],
                    "('opennlp.tools.tokenize#DefaultTokenContextGenerator', 'createContext(String,int)')": [
                        73
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/DetokenizationDictionary.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('opennlp.tools.tokenize#DetokenizationDictionary', None)": [
                        79,
                        80,
                        109,
                        111,
                        112,
                        114,
                        116,
                        118,
                        119,
                        121,
                        122,
                        124,
                        125,
                        127,
                        128
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#DetokenizationDictionary', None)": [
                        78,
                        107,
                        109,
                        111,
                        113,
                        115,
                        116,
                        118,
                        119,
                        121,
                        122,
                        124
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/DictionaryDetokenizer.java": {
                "old": {
                    "('opennlp.tools.tokenize#DictionaryDetokenizer', 'detokenize(String)')": [
                        40,
                        41,
                        43
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#DictionaryDetokenizer', 'detokenize(String)')": [
                        40,
                        42
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/SimpleTokenizer.java": {
                "old": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.tokenize#SimpleTokenizer', 'tokenizePos(String)')": [
                        68
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#SimpleTokenizer', 'tokenizePos(String)')": [
                        67
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokSpanEventStream.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokSpanEventStream', 'createEvents(TokenSample)')": [
                        100
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokSpanEventStream', 'createEvents(TokenSample)')": [
                        100
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenSample.java": {
                "old": {
                    "(None, None)": [
                        18
                    ],
                    "('opennlp.tools.tokenize#TokenSample', None)": [
                        37,
                        58,
                        75
                    ],
                    "('opennlp.tools.tokenize#TokenSample', 'parse(String,String)')": [
                        176
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenSample', None)": [
                        36,
                        57,
                        74
                    ],
                    "('opennlp.tools.tokenize#TokenSample', 'parse(String,String)')": [
                        175
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerCrossValidator.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenizerCrossValidator', 'evaluate(ObjectStream,int)')": [
                        53
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerCrossValidator', 'evaluate(ObjectStream,int)')": [
                        53,
                        54
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerFactory.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenizerFactory', 'validateArtifactMap')": [
                        85,
                        86,
                        87,
                        91,
                        92
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactory', 'createArtifactMap')": [
                        105
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactory', 'createManifestEntries')": [
                        115,
                        118
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerFactory', 'validateArtifactMap')": [
                        85,
                        89
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactory', 'createArtifactMap')": [
                        102,
                        104
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactory', 'createManifestEntries')": [
                        113,
                        114,
                        117,
                        119
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerME.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenizerME', 'tokenizePos(String)')": [
                        182,
                        183,
                        189,
                        190,
                        193,
                        194,
                        201
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerME', 'tokenizePos(String)')": [
                        182,
                        188,
                        191,
                        198
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/lang/en/TokenSampleStream.java": {
                "old": {
                    "('opennlp.tools.tokenize.lang.en#TokenSampleStream', 'next')": [
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        103
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize.lang.en#TokenSampleStream', 'next')": [
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        105
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/AbstractEventStream.java": {
                "old": {
                    "(None, None)": [
                        17
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/CollectionObjectStream.java": {
                "old": {
                    "('opennlp.tools.util#CollectionObjectStream', None)": [
                        30
                    ],
                    "('opennlp.tools.util#CollectionObjectStream', 'read')": [
                        35,
                        36,
                        37,
                        38
                    ]
                },
                "new": {
                    "('opennlp.tools.util#CollectionObjectStream', 'read')": [
                        34
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/FilterObjectStream.java": {
                "old": {
                    "('opennlp.tools.util#FilterObjectStream', None)": [
                        36
                    ]
                },
                "new": {
                    "('opennlp.tools.util#FilterObjectStream', None)": [
                        36,
                        38
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/ObjectStreamUtils.java": {
                "old": {
                    "('opennlp.tools.util#ObjectStreamUtils', 'createObjectStream(ObjectStream)')": [
                        98
                    ]
                },
                "new": {
                    "('opennlp.tools.util#ObjectStreamUtils', 'createObjectStream(ObjectStream)')": [
                        98,
                        100
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/PlainTextByLineStream.java": {
                "old": {
                    "(None, None)": [
                        17
                    ],
                    "('opennlp.tools.util#PlainTextByLineStream', None)": [
                        40,
                        44
                    ],
                    "('opennlp.tools.util#PlainTextByLineStream', 'reset')": [
                        59,
                        60,
                        61,
                        63,
                        64
                    ],
                    "('opennlp.tools.util#PlainTextByLineStream', 'close')": [
                        71,
                        74,
                        75
                    ]
                },
                "new": {
                    "('opennlp.tools.util#PlainTextByLineStream', None)": [
                        39,
                        40,
                        44,
                        45
                    ],
                    "('opennlp.tools.util#PlainTextByLineStream', 'reset')": [
                        60,
                        61,
                        62,
                        64
                    ],
                    "('opennlp.tools.util#PlainTextByLineStream', 'close')": [
                        73
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/Sequence.java": {
                "old": {
                    "('opennlp.tools.util#Sequence', None)": [
                        33,
                        34,
                        39,
                        41,
                        47,
                        50
                    ]
                },
                "new": {
                    "('opennlp.tools.util#Sequence', None)": [
                        33,
                        34,
                        39,
                        41,
                        47,
                        50
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/StringList.java": {
                "old": {
                    "('opennlp.tools.util#StringList', None)": [
                        41,
                        42,
                        43
                    ]
                },
                "new": {
                    "('opennlp.tools.util#StringList', None)": [
                        41
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/StringUtil.java": {
                "old": {
                    "('opennlp.tools.util#StringUtil', 'toLowerCase(CharSequence)')": [
                        76
                    ],
                    "('opennlp.tools.util#StringUtil', 'levenshteinDistance(String,String)')": [
                        147
                    ],
                    "('opennlp.tools.util#StringUtil', 'computeShortestEditScript(String,String,int,StringBuffer)')": [
                        241
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/eval/CrossValidationPartitioner.java": {
                "old": {
                    "('opennlp.tools.util.eval#CrossValidationPartitioner', None)": [
                        198,
                        246
                    ],
                    "('opennlp.tools.util.eval#CrossValidationPartitioner', 'next')": [
                        266
                    ]
                },
                "new": {
                    "('opennlp.tools.util.eval#CrossValidationPartitioner', None)": [
                        198,
                        246
                    ],
                    "('opennlp.tools.util.eval#CrossValidationPartitioner', 'next')": [
                        266
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/eval/Evaluator.java": {
                "old": {
                    "('opennlp.tools.util.eval#Evaluator', None)": [
                        41,
                        42
                    ]
                },
                "new": {
                    "('opennlp.tools.util.eval#Evaluator', None)": [
                        41
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/eval/FMeasure.java": {
                "old": {
                    "('opennlp.tools.util.eval#FMeasure', 'countTruePositives(Object,Object)')": [
                        137,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148
                    ]
                },
                "new": {
                    "('opennlp.tools.util.eval#FMeasure', 'countTruePositives(Object,Object)')": [
                        137,
                        142,
                        143,
                        144,
                        145
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/ext/OSGiExtensionLoader.java": {
                "old": {
                    "('opennlp.tools.util.ext#OSGiExtensionLoader', 'start(BundleContext)')": [
                        42
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/AggregatedFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#AggregatedFeatureGenerator', None)": [
                        49
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#AggregatedFeatureGenerator', None)": [
                        49
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/BigramNameFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#BigramNameFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        24
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#BigramNameFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        24,
                        25
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/BrownCluster.java": {
                "old": {
                    "(None, None)": [
                        33
                    ],
                    "('opennlp.tools.util.featuregen#BrownCluster', None)": [
                        52,
                        53,
                        73
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#BrownCluster', None)": [
                        51,
                        71,
                        72
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/BrownTokenClasses.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#BrownTokenClasses', 'getWordClasses(String,BrownCluster)')": [
                        42,
                        45,
                        46,
                        47
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#BrownTokenClasses', 'getWordClasses(String,BrownCluster)')": [
                        42,
                        45,
                        46
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/CharacterNgramFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#CharacterNgramFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        49,
                        54
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/GeneratorFactory.java": {
                "old": {
                    "(None, None)": [
                        38,
                        39,
                        40,
                        41,
                        42
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactory', None)": [
                        94,
                        118,
                        119,
                        125,
                        128,
                        219,
                        438,
                        630,
                        631
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactory', 'createDOM(InputStream)')": [
                        682
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactory', 'create(InputStream,FeatureGeneratorResourceProvider)')": [
                        722
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactory', 'extractCustomArtifactSerializerMappings(InputStream)')": [
                        732
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactory', 'getDescriptorElements(InputStream)')": [
                        775,
                        776,
                        777
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        44,
                        45,
                        46,
                        47,
                        48
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactory', None)": [
                        95,
                        119,
                        217,
                        436,
                        628
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactory', 'createDOM(InputStream)')": [
                        679
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactory', 'create(InputStream,FeatureGeneratorResourceProvider)')": [
                        719
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactory', 'extractCustomArtifactSerializerMappings(InputStream)')": [
                        729
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactory', 'getDescriptorElements(InputStream)')": [
                        772,
                        773,
                        774
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/OutcomePriorFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#OutcomePriorFeatureGenerator', None)": [
                        28
                    ],
                    "('opennlp.tools.util.featuregen#OutcomePriorFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        31
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#OutcomePriorFeatureGenerator', None)": [
                        28
                    ],
                    "('opennlp.tools.util.featuregen#OutcomePriorFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        31
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/PrefixFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#PrefixFeatureGenerator', 'getPrefixes(String)')": [
                        26,
                        28
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#PrefixFeatureGenerator', 'getPrefixes(String)')": [
                        26,
                        28
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/PreviousTwoMapFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#PreviousTwoMapFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        38
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#PreviousTwoMapFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        38,
                        39
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/SuffixFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#SuffixFeatureGenerator', 'getSuffixes(String)')": [
                        28
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#SuffixFeatureGenerator', 'getSuffixes(String)')": [
                        28
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/TokenClassFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#TokenClassFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        48
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#TokenClassFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        48,
                        49
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/WindowFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#WindowFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        94,
                        108
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#WindowFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        94,
                        108
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/WordClusterDictionary.java": {
                "old": {
                    "(None, None)": [
                        32
                    ],
                    "('opennlp.tools.util.featuregen#WordClusterDictionary', None)": [
                        40,
                        41,
                        45,
                        46,
                        51,
                        59,
                        61
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#WordClusterDictionary', None)": [
                        39,
                        43,
                        48
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/BaseModel.java": {
                "old": {
                    "('opennlp.tools.util.model#BaseModel', None)": [
                        84,
                        111,
                        112,
                        120,
                        121
                    ]
                },
                "new": {
                    "('opennlp.tools.util.model#BaseModel', None)": [
                        84,
                        86,
                        112,
                        113,
                        114,
                        122
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/DictionarySerializer.java": {
                "old": {
                    "(None, None)": [
                        18,
                        27
                    ],
                    "('opennlp.tools.util.model#DictionarySerializer', 'create(InputStream)')": [
                        31,
                        32
                    ],
                    "('opennlp.tools.util.model#DictionarySerializer', 'serialize(Dictionary,OutputStream)')": [
                        36,
                        37
                    ]
                },
                "new": {
                    "('opennlp.tools.util.model#DictionarySerializer', 'create(InputStream)')": [
                        29
                    ],
                    "('opennlp.tools.util.model#DictionarySerializer', 'serialize(Dictionary,OutputStream)')": [
                        33
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/GenericModelSerializer.java": {
                "old": {
                    "(None, None)": [
                        18,
                        29
                    ],
                    "('opennlp.tools.util.model#GenericModelSerializer', 'create(InputStream)')": [
                        33,
                        34
                    ]
                },
                "new": {
                    "('opennlp.tools.util.model#GenericModelSerializer', 'create(InputStream)')": [
                        31
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/ModelUtil.java": {
                "old": {
                    "('opennlp.tools.util.model#ModelUtil', 'writeModel(MaxentModel,OutputStream)')": [
                        60,
                        63
                    ],
                    "('opennlp.tools.util.model#ModelUtil', 'validateOutcomes(MaxentModel,String)')": [
                        91
                    ]
                },
                "new": {
                    "('opennlp.tools.util.model#ModelUtil', 'writeModel(MaxentModel,OutputStream)')": [
                        60,
                        62,
                        64,
                        66
                    ],
                    "('opennlp.tools.util.model#ModelUtil', 'validateOutcomes(MaxentModel,String)')": [
                        93
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/PropertiesSerializer.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28
                    ],
                    "('opennlp.tools.util.model#PropertiesSerializer', 'create(InputStream)')": [
                        31,
                        32,
                        35
                    ]
                },
                "new": {
                    "('opennlp.tools.util.model#PropertiesSerializer', 'create(InputStream)')": [
                        29
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/ChunkSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        24,
                        25
                    ],
                    "('opennlp.tools.chunker#ChunkSampleStreamTest', 'testReadingEvents')": [
                        37,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        48,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        59,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        88
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        23
                    ],
                    "('opennlp.tools.chunker#ChunkSampleStreamTest', 'testReadingEvents')": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        56,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        85
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/ChunkSampleTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', None)": [
                        39,
                        40,
                        44,
                        167,
                        217,
                        218,
                        219,
                        220,
                        254,
                        255,
                        258,
                        259
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testParameterValidation')": [
                        41,
                        42,
                        43
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'createTags')": [
                        69
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'createChunks')": [
                        90
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testRetrievingContent')": [
                        114,
                        115,
                        116
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testToString')": [
                        132,
                        133,
                        134,
                        135
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testNicePrint')": [
                        144
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testAsSpan')": [
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testPhraseAsSpan')": [
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testRegions')": [
                        193,
                        197,
                        201,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testEquals')": [
                        250,
                        251,
                        252,
                        253
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'createGoldSample')": [
                        256,
                        257
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'createPredSample')": [
                        260,
                        261,
                        262,
                        263
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        26
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'createTags')": [
                        59
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'createChunks')": [
                        80
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'createGoldSample')": [
                        100,
                        101
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', None)": [
                        102,
                        103,
                        108,
                        109,
                        110,
                        114,
                        115,
                        173,
                        174,
                        175,
                        176,
                        177
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'createPredSample')": [
                        104,
                        105,
                        106,
                        107
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testParameterValidation')": [
                        111,
                        112,
                        113
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testRetrievingContent')": [
                        120,
                        121,
                        122
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testToString')": [
                        138,
                        139,
                        140,
                        141
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testNicePrint')": [
                        150
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testAsSpan')": [
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testPhraseAsSpan')": [
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testRegions')": [
                        203,
                        207,
                        211,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222
                    ],
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testEquals')": [
                        256,
                        257,
                        258,
                        259
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/ChunkerDetailedFMeasureListenerTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/ChunkerEvaluatorTest.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27
                    ],
                    "('opennlp.tools.chunker#ChunkerEvaluatorTest', None)": [
                        47
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/ChunkerFactoryTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ],
                    "('opennlp.tools.chunker#ChunkerFactoryTest', 'createSampleStream')": [
                        45,
                        46,
                        47
                    ],
                    "('opennlp.tools.chunker#ChunkerFactoryTest', 'trainModel(ModelType,ChunkerFactory)')": [
                        50
                    ],
                    "('opennlp.tools.chunker#ChunkerFactoryTest', 'testDefaultFactory')": [
                        62,
                        63,
                        72,
                        73
                    ],
                    "('opennlp.tools.chunker#ChunkerFactoryTest', 'testDummyFactory')": [
                        83,
                        84,
                        85,
                        94,
                        95,
                        96,
                        101,
                        103,
                        105,
                        106
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        25
                    ],
                    "('opennlp.tools.chunker#ChunkerFactoryTest', 'createSampleStream')": [
                        44,
                        45
                    ],
                    "('opennlp.tools.chunker#ChunkerFactoryTest', 'trainModel(ModelType,ChunkerFactory)')": [
                        48
                    ],
                    "('opennlp.tools.chunker#ChunkerFactoryTest', 'testDefaultFactory')": [
                        60,
                        61,
                        70,
                        71
                    ],
                    "('opennlp.tools.chunker#ChunkerFactoryTest', 'testDummyFactory')": [
                        81,
                        82,
                        91,
                        92,
                        93,
                        98,
                        100,
                        102,
                        103
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/ChunkerMETest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        26,
                        27,
                        28,
                        29
                    ],
                    "('opennlp.tools.chunker#ChunkerMETest', None)": [
                        60,
                        64,
                        67
                    ],
                    "('opennlp.tools.chunker#ChunkerMETest', 'startup')": [
                        79
                    ],
                    "('opennlp.tools.chunker#ChunkerMETest', 'testChunkAsArray')": [
                        95
                    ],
                    "('opennlp.tools.chunker#ChunkerMETest', 'testChunkAsSpan')": [
                        100,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114
                    ],
                    "('opennlp.tools.chunker#ChunkerMETest', 'testTokenProbArray')": [
                        120,
                        123,
                        124,
                        125,
                        126
                    ],
                    "('opennlp.tools.chunker#ChunkerMETest', 'testTokenProbMinScore')": [
                        131,
                        134,
                        135,
                        136,
                        137
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        24
                    ],
                    "('opennlp.tools.chunker#ChunkerMETest', None)": [
                        55,
                        59,
                        62
                    ],
                    "('opennlp.tools.chunker#ChunkerMETest', 'startup')": [
                        74
                    ],
                    "('opennlp.tools.chunker#ChunkerMETest', 'testChunkAsArray')": [
                        90
                    ],
                    "('opennlp.tools.chunker#ChunkerMETest', 'testChunkAsSpan')": [
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108
                    ],
                    "('opennlp.tools.chunker#ChunkerMETest', 'testTokenProbArray')": [
                        116,
                        117,
                        118,
                        119
                    ],
                    "('opennlp.tools.chunker#ChunkerMETest', 'testTokenProbMinScore')": [
                        126,
                        127,
                        128,
                        129
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/DummyChunkSampleStream.java": {
                "old": {
                    "('opennlp.tools.chunker#DummyChunkSampleStream', None)": [
                        35,
                        36,
                        40,
                        41
                    ],
                    "('opennlp.tools.chunker#DummyChunkSampleStream', 'read')": [
                        54,
                        55,
                        56,
                        57
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#DummyChunkSampleStream', None)": [
                        35,
                        36,
                        40
                    ],
                    "('opennlp.tools.chunker#DummyChunkSampleStream', 'read')": [
                        53,
                        54,
                        55,
                        56
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/cmdline/ArgumentParserTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        30,
                        31,
                        183
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSimpleArguments')": [
                        84,
                        86,
                        89,
                        90,
                        91,
                        92
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSimpleArgumentsMissingEncoding')": [
                        99
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testAllOptionalArgumentsOneArgument')": [
                        107
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testAllOptionalArgumentsZeroArguments')": [
                        114,
                        115
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testAllOptionalArgumentsExtraArgument')": [
                        122,
                        123
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSimpleArgumentsUsage')": [
                        138,
                        142,
                        143,
                        144
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', None)": [
                        148,
                        151,
                        153,
                        163
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testDefaultEncodingParameter')": [
                        159,
                        162
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSetEncodingParameter')": [
                        168,
                        179,
                        182
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSimpleArguments')": [
                        84,
                        85,
                        86,
                        87
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSimpleArgumentsMissingEncoding')": [
                        94
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testAllOptionalArgumentsOneArgument')": [
                        102
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testAllOptionalArgumentsZeroArguments')": [
                        109
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testAllOptionalArgumentsExtraArgument')": [
                        116
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSimpleArgumentsUsage')": [
                        131,
                        135,
                        136
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testDefaultEncodingParameter')": [
                        148,
                        151
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSetEncodingParameter')": [
                        166,
                        169
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/cmdline/CLITest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('opennlp.tools.cmdline#CLITest', 'testMainHelpMessage')": [
                        79
                    ],
                    "('opennlp.tools.cmdline#CLITest', 'testUnknownToolMessage')": [
                        91
                    ],
                    "('opennlp.tools.cmdline#CLITest', 'testToolParameterMessage')": [
                        103
                    ],
                    "('opennlp.tools.cmdline#CLITest', 'testUnknownFileMessage')": [
                        115
                    ],
                    "('opennlp.tools.cmdline#CLITest', 'testHelpMessageOfTools')": [
                        131
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.cmdline#CLITest', 'testMainHelpMessage')": [
                        78
                    ],
                    "('opennlp.tools.cmdline#CLITest', 'testUnknownToolMessage')": [
                        90
                    ],
                    "('opennlp.tools.cmdline#CLITest', 'testToolParameterMessage')": [
                        102
                    ],
                    "('opennlp.tools.cmdline#CLITest', 'testUnknownFileMessage')": [
                        114
                    ],
                    "('opennlp.tools.cmdline#CLITest', 'testHelpMessageOfTools')": [
                        130
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/cmdline/TerminateToolExceptionTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('opennlp.tools.cmdline#TerminateToolExceptionTest', 'testCreation')": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('opennlp.tools.cmdline#TerminateToolExceptionTest', 'testCreation')": [
                        31
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/dictionary/DictionaryAsSetCaseInsensitiveTest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        20,
                        21,
                        22,
                        23,
                        24,
                        32,
                        33
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testLookup')": [
                        60,
                        61,
                        62,
                        63
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testSet')": [
                        82,
                        83
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testSetDiffCase')": [
                        102,
                        103
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testEquals')": [
                        126
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testEqualsDifferentCase')": [
                        147
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testHashCode')": [
                        167
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testHashCodeDifferentCase')": [
                        188
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testDifferentCaseLookup')": [
                        207
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testIterator')": [
                        226,
                        231,
                        232,
                        233
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testLookup')": [
                        55,
                        56,
                        57,
                        58
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testSet')": [
                        77,
                        78
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testSetDiffCase')": [
                        97,
                        98
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testEquals')": [
                        121
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testEqualsDifferentCase')": [
                        142
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testHashCode')": [
                        162
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testHashCodeDifferentCase')": [
                        183
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testDifferentCaseLookup')": [
                        202
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseInsensitiveTest', 'testIterator')": [
                        221,
                        226,
                        227,
                        228
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/dictionary/DictionaryAsSetCaseSensitiveTest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        20,
                        21,
                        22,
                        23,
                        24,
                        32,
                        33
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testLookup')": [
                        60,
                        61,
                        62,
                        63
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testSet')": [
                        82,
                        83
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testSetDiffCase')": [
                        102,
                        103
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testEquals')": [
                        126
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testEqualsDifferentCase')": [
                        148
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testHashCode')": [
                        168
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testHashCodeDifferentCase')": [
                        189
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testDifferentCaseLookup')": [
                        209
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testIterator')": [
                        228,
                        233,
                        234,
                        235,
                        236,
                        237
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testLookup')": [
                        55,
                        56,
                        57,
                        58
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testSet')": [
                        77,
                        78
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testSetDiffCase')": [
                        97,
                        98
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testEquals')": [
                        121
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testEqualsDifferentCase')": [
                        143
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testHashCode')": [
                        163
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testHashCodeDifferentCase')": [
                        184
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testDifferentCaseLookup')": [
                        204
                    ],
                    "('opennlp.tools.dictionary#DictionaryAsSetCaseSensitiveTest', 'testIterator')": [
                        223,
                        228,
                        229,
                        230,
                        231,
                        232
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/dictionary/DictionaryTest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        20,
                        21,
                        22,
                        31,
                        32
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testLookup')": [
                        59,
                        60,
                        61,
                        67,
                        68,
                        69
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testLookupCaseSensitive')": [
                        77,
                        78,
                        79,
                        85,
                        86,
                        87
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testSerialization')": [
                        97,
                        105,
                        114
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testParseOneEntryPerLine')": [
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testEquals')": [
                        151,
                        152,
                        166,
                        167,
                        168
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testHashCode')": [
                        176,
                        177,
                        191,
                        192,
                        193
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testToString')": [
                        201
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testDifferentCaseLookup')": [
                        218,
                        219,
                        225
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testDifferentCaseLookupCaseSensitive')": [
                        234,
                        235,
                        241
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testLookup')": [
                        56,
                        57,
                        58,
                        64,
                        65,
                        66
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testLookupCaseSensitive')": [
                        74,
                        75,
                        76,
                        82,
                        83,
                        84
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testSerialization')": [
                        94,
                        102,
                        111
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testParseOneEntryPerLine')": [
                        128,
                        129,
                        130,
                        131,
                        132
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testEquals')": [
                        140,
                        141,
                        155,
                        156,
                        157
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testHashCode')": [
                        165,
                        166,
                        180,
                        181,
                        182
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testToString')": [
                        190
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testDifferentCaseLookup')": [
                        207,
                        208,
                        214
                    ],
                    "('opennlp.tools.dictionary#DictionaryTest', 'testDifferentCaseLookupCaseSensitive')": [
                        223,
                        224,
                        230
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/doccat/DoccatFactoryTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        34,
                        35
                    ],
                    "('opennlp.tools.doccat#DoccatFactoryTest', 'testDefault')": [
                        65,
                        75,
                        77,
                        78,
                        81
                    ],
                    "('opennlp.tools.doccat#DoccatFactoryTest', 'testCustom')": [
                        94,
                        104,
                        106,
                        107,
                        109,
                        111,
                        113
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25
                    ],
                    "('opennlp.tools.doccat#DoccatFactoryTest', 'testDefault')": [
                        63,
                        73,
                        75,
                        76,
                        79
                    ],
                    "('opennlp.tools.doccat#DoccatFactoryTest', 'testCustom')": [
                        92,
                        102,
                        104,
                        105,
                        107,
                        109,
                        111
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/doccat/DocumentCategorizerMETest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        29,
                        30
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerMETest', 'testSimpleTraining')": [
                        37,
                        43,
                        44,
                        56,
                        59,
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerMETest', 'testSimpleTraining')": [
                        36,
                        42,
                        54,
                        57,
                        62
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/doccat/DocumentCategorizerNBTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        31,
                        32
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerNBTest', 'testSimpleTraining')": [
                        58,
                        61,
                        66
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25
                    ],
                    "('opennlp.tools.doccat#DocumentCategorizerNBTest', 'testSimpleTraining')": [
                        57,
                        60,
                        65
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/doccat/DocumentSampleTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        24
                    ],
                    "('opennlp.tools.doccat#DocumentSampleTest', 'testEquals')": [
                        30,
                        31,
                        32,
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('opennlp.tools.doccat#DocumentSampleTest', 'testEquals')": [
                        27,
                        28,
                        29,
                        30
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/ArvoresDeitadasEval.java": {
                "old": {
                    "(None, None)": [
                        46,
                        47,
                        48,
                        64
                    ],
                    "('opennlp.tools.eval#ArvoresDeitadasEval', 'sentenceCrossEval(TrainingParameters,double)')": [
                        91
                    ],
                    "('opennlp.tools.eval#ArvoresDeitadasEval', 'tokenizerCrossEval(TrainingParameters,double)')": [
                        107
                    ],
                    "('opennlp.tools.eval#ArvoresDeitadasEval', 'chunkerCrossEval(TrainingParameters,double)')": [
                        134
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26
                    ],
                    "('opennlp.tools.eval#ArvoresDeitadasEval', 'sentenceCrossEval(TrainingParameters,double)')": [
                        90
                    ],
                    "('opennlp.tools.eval#ArvoresDeitadasEval', 'tokenizerCrossEval(TrainingParameters,double)')": [
                        106
                    ],
                    "('opennlp.tools.eval#ArvoresDeitadasEval', 'chunkerCrossEval(TrainingParameters,double)')": [
                        133
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/Conll00ChunkerEval.java": {
                "old": {
                    "(None, None)": [
                        18,
                        35,
                        36,
                        37
                    ],
                    "('opennlp.tools.eval#Conll00ChunkerEval', 'eval(ChunkerModel,File,double)')": [
                        59,
                        62
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('opennlp.tools.eval#Conll00ChunkerEval', 'eval(ChunkerModel,File,double)')": [
                        58,
                        61
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/Conll02NameFinderEval.java": {
                "old": {
                    "(None, None)": [
                        18,
                        35,
                        36,
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/ConllXPosTaggerEval.java": {
                "old": {
                    "(None, None)": [
                        34,
                        35,
                        36
                    ],
                    "('opennlp.tools.eval#ConllXPosTaggerEval', 'train(File,String,TrainingParameters)')": [
                        59
                    ],
                    "('opennlp.tools.eval#ConllXPosTaggerEval', 'eval(POSModel,File,double)')": [
                        68
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26
                    ],
                    "('opennlp.tools.eval#ConllXPosTaggerEval', 'train(File,String,TrainingParameters)')": [
                        59
                    ],
                    "('opennlp.tools.eval#ConllXPosTaggerEval', 'eval(POSModel,File,double)')": [
                        68
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/EvalUtil.java": {
                "old": {
                    "('opennlp.tools.eval#EvalUtil', 'getOpennlpDataDir')": [
                        24
                    ]
                },
                "new": {
                    "('opennlp.tools.eval#EvalUtil', 'getOpennlpDataDir')": [
                        24
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/OntoNotes4NameFinderEval.java": {
                "old": {
                    "(None, None)": [
                        33,
                        34
                    ],
                    "('opennlp.tools.eval#OntoNotes4NameFinderEval', 'crossEval(TrainingParameters,String,double)')": [
                        54,
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26
                    ],
                    "('opennlp.tools.eval#OntoNotes4NameFinderEval', 'crossEval(TrainingParameters,String,double)')": [
                        56,
                        60
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/OntoNotes4ParserEval.java": {
                "old": {
                    "(None, None)": [
                        36,
                        37
                    ],
                    "('opennlp.tools.eval#OntoNotes4ParserEval', 'crossEval(TrainingParameters,HeadRules,double)')": [
                        56
                    ],
                    "('opennlp.tools.eval#OntoNotes4ParserEval', 'evalEnglishMaxent')": [
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28
                    ],
                    "('opennlp.tools.eval#OntoNotes4ParserEval', 'crossEval(TrainingParameters,HeadRules,double)')": [
                        58
                    ],
                    "('opennlp.tools.eval#OntoNotes4ParserEval', 'evalEnglishMaxent')": [
                        72
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/OntoNotes4PosTaggerEval.java": {
                "old": {
                    "(None, None)": [
                        33,
                        34
                    ],
                    "('opennlp.tools.eval#OntoNotes4PosTaggerEval', 'crossEval(TrainingParameters,double)')": [
                        42,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26
                    ],
                    "('opennlp.tools.eval#OntoNotes4PosTaggerEval', 'crossEval(TrainingParameters,double)')": [
                        44,
                        55
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/SourceForgeModelEval.java": {
                "old": {
                    "(None, None)": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        61,
                        65
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'ensureTestDataIsCorrect')": [
                        96,
                        97,
                        105
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalSentenceModel')": [
                        113,
                        122,
                        123,
                        124,
                        125,
                        138
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalTokenModel')": [
                        149,
                        156,
                        157,
                        158,
                        170
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'createLineWiseStream')": [
                        175,
                        176
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalNerDateModel')": [
                        204
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalNerLocationModel')": [
                        212
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalNerMoneyModel')": [
                        220
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalNerOrganizationModel')": [
                        228
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalNerPercentageModel')": [
                        236
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalChunkerModel')": [
                        263,
                        266
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalMaxentModel')": [
                        311
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalPerceptronModel')": [
                        319
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalParserModel')": [
                        328,
                        341,
                        342,
                        349
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        62,
                        66
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'ensureTestDataIsCorrect')": [
                        97,
                        98,
                        106
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalSentenceModel')": [
                        114,
                        123,
                        124,
                        125,
                        126,
                        139
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalTokenModel')": [
                        150,
                        157,
                        158,
                        159,
                        171
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'createLineWiseStream')": [
                        176,
                        177
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalNerDateModel')": [
                        205
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalNerLocationModel')": [
                        213
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalNerMoneyModel')": [
                        221
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalNerOrganizationModel')": [
                        229
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalNerPercentageModel')": [
                        237
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalChunkerModel')": [
                        264,
                        267
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalMaxentModel')": [
                        312
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalPerceptronModel')": [
                        320
                    ],
                    "('opennlp.tools.eval#SourceForgeModelEval', 'evalParserModel')": [
                        329,
                        342,
                        349
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/Conll02NameSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        26,
                        33,
                        34
                    ],
                    "('opennlp.tools.formats#Conll02NameSampleStreamTest', 'testParsingSpanishSample')": [
                        57,
                        59,
                        60,
                        61,
                        64,
                        65,
                        66,
                        68,
                        70
                    ],
                    "('opennlp.tools.formats#Conll02NameSampleStreamTest', 'testParsingDutchSample')": [
                        79,
                        80,
                        84,
                        86
                    ],
                    "('opennlp.tools.formats#Conll02NameSampleStreamTest', 'testReset')": [
                        97
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        23
                    ],
                    "('opennlp.tools.formats#Conll02NameSampleStreamTest', 'testParsingSpanishSample')": [
                        52,
                        54,
                        55,
                        56,
                        59,
                        60,
                        61,
                        63,
                        65
                    ],
                    "('opennlp.tools.formats#Conll02NameSampleStreamTest', 'testParsingDutchSample')": [
                        74,
                        75,
                        79,
                        81
                    ],
                    "('opennlp.tools.formats#Conll02NameSampleStreamTest', 'testReset')": [
                        92
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/Conll03NameSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        24,
                        31,
                        32
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStreamTest', 'testParsingEnglishSample')": [
                        56,
                        58,
                        59,
                        60,
                        64,
                        66,
                        67,
                        68,
                        71,
                        72,
                        74
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStreamTest', 'testParsingGermanSample')": [
                        95,
                        97,
                        98,
                        99
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStreamTest', 'testReset')": [
                        110
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        23
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStreamTest', 'testParsingEnglishSample')": [
                        53,
                        55,
                        56,
                        57,
                        61,
                        63,
                        64,
                        65,
                        68,
                        69,
                        71
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStreamTest', 'testParsingGermanSample')": [
                        92,
                        94,
                        95,
                        96
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStreamTest', 'testReset')": [
                        107
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ConllXPOSSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        29,
                        30
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/EvalitaNameSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        24,
                        32,
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        30,
                        31,
                        32
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/LeipzigDoccatSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/NameFinderCensus90NameStreamTest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        19,
                        20,
                        21,
                        22
                    ],
                    "('opennlp.tools.formats#NameFinderCensus90NameStreamTest', 'openData(String)')": [
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        26,
                        27,
                        28,
                        29
                    ],
                    "('opennlp.tools.formats#NameFinderCensus90NameStreamTest', 'openData(String)')": [
                        39
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADChunkSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        31,
                        32,
                        33
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamTest', None)": [
                        36,
                        65
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamTest', 'testSimpleCount')": [
                        40
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamTest', 'testChunks')": [
                        46,
                        47,
                        48,
                        50,
                        51,
                        52,
                        54,
                        55,
                        56,
                        58,
                        59,
                        60,
                        62,
                        63,
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamTest', None)": [
                        35
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamTest', 'testSimpleCount')": [
                        39
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamTest', 'testChunks')": [
                        45,
                        46,
                        47,
                        49,
                        50,
                        51,
                        53,
                        54,
                        55,
                        57,
                        58,
                        59,
                        61,
                        62,
                        63
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADNameSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        32,
                        33,
                        34
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamTest', None)": [
                        37
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamTest', 'testSimpleCount')": [
                        41
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamTest', 'testCheckMergedContractions')": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamTest', 'testSize')": [
                        61,
                        62,
                        63,
                        64
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamTest', 'testNames')": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        97,
                        98,
                        99
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamTest', 'testSmallSentence')": [
                        104
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamTest', 'testMissingRightContraction')": [
                        109,
                        110,
                        111
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamTest', None)": [
                        36
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamTest', 'testSimpleCount')": [
                        40
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamTest', 'testCheckMergedContractions')": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamTest', 'testSize')": [
                        60,
                        61,
                        62,
                        63
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamTest', 'testNames')": [
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        96,
                        97
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamTest', 'testSmallSentence')": [
                        102
                    ],
                    "('opennlp.tools.formats.ad#ADNameSampleStreamTest', 'testMissingRightContraction')": [
                        107,
                        108,
                        109
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADPOSSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22,
                        27,
                        28
                    ],
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamTest', 'testSimple')": [
                        42,
                        44,
                        45,
                        47,
                        48,
                        50,
                        51,
                        53,
                        54
                    ],
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamTest', 'testExpandME')": [
                        67,
                        69,
                        70,
                        72,
                        73,
                        75,
                        76,
                        78,
                        79,
                        81,
                        82
                    ],
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamTest', 'testIncludeFeats')": [
                        95,
                        97,
                        98,
                        100,
                        101,
                        103,
                        104,
                        106,
                        107
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        23
                    ],
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamTest', 'testSimple')": [
                        41,
                        43,
                        44,
                        46,
                        47,
                        49,
                        50,
                        52,
                        53
                    ],
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamTest', 'testExpandME')": [
                        66,
                        68,
                        69,
                        71,
                        72,
                        74,
                        75,
                        77,
                        78,
                        80,
                        81
                    ],
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamTest', 'testIncludeFeats')": [
                        94,
                        96,
                        97,
                        99,
                        100,
                        102,
                        103,
                        105,
                        106
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADParagraphStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22,
                        27,
                        28
                    ],
                    "('opennlp.tools.formats.ad#ADParagraphStreamTest', 'testSimpleReading')": [
                        48
                    ],
                    "('opennlp.tools.formats.ad#ADParagraphStreamTest', 'testLeadingWithContraction')": [
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        23
                    ],
                    "('opennlp.tools.formats.ad#ADParagraphStreamTest', 'testSimpleReading')": [
                        47
                    ],
                    "('opennlp.tools.formats.ad#ADParagraphStreamTest', 'testLeadingWithContraction')": [
                        63
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADSentenceSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        33,
                        34,
                        35
                    ],
                    "('opennlp.tools.formats.ad#ADSentenceSampleStreamTest', None)": [
                        38
                    ],
                    "('opennlp.tools.formats.ad#ADSentenceSampleStreamTest', 'testSimpleCount')": [
                        42
                    ],
                    "('opennlp.tools.formats.ad#ADSentenceSampleStreamTest', 'testSentences')": [
                        48,
                        49,
                        50,
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26
                    ],
                    "('opennlp.tools.formats.ad#ADSentenceSampleStreamTest', None)": [
                        36
                    ],
                    "('opennlp.tools.formats.ad#ADSentenceSampleStreamTest', 'testSimpleCount')": [
                        40
                    ],
                    "('opennlp.tools.formats.ad#ADSentenceSampleStreamTest', 'testSentences')": [
                        46,
                        47,
                        48,
                        49
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADTokenSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        32,
                        33,
                        34
                    ],
                    "('opennlp.tools.formats.ad#ADTokenSampleStreamTest', None)": [
                        37
                    ],
                    "('opennlp.tools.formats.ad#ADTokenSampleStreamTest', 'testSimpleCount')": [
                        41
                    ],
                    "('opennlp.tools.formats.ad#ADTokenSampleStreamTest', 'testSentences')": [
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        28,
                        29
                    ],
                    "('opennlp.tools.formats.ad#ADTokenSampleStreamTest', None)": [
                        35
                    ],
                    "('opennlp.tools.formats.ad#ADTokenSampleStreamTest', 'testSimpleCount')": [
                        39
                    ],
                    "('opennlp.tools.formats.ad#ADTokenSampleStreamTest', 'testSentences')": [
                        44
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/brat/BratAnnotationStreamTest.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotationStreamTest', 'creatBratAnnotationStream(AnnotationConfiguration,String)')": [
                        33,
                        34,
                        35
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotationStreamTest', None)": [
                        38
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotationStreamTest', 'testParsingEntities')": [
                        49,
                        50
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotationStreamTest', 'testParsingRelations')": [
                        68,
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotationStreamTest', 'creatBratAnnotationStream(AnnotationConfiguration,String)')": [
                        33
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotationStreamTest', 'testParsingEntities')": [
                        46
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotationStreamTest', 'testParsingRelations')": [
                        64
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/brat/BratDocumentTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ],
                    "('opennlp.tools.formats.brat#BratDocumentTest', 'testDocumentWithEntitiesParsing')": [
                        35,
                        47,
                        48,
                        49,
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('opennlp.tools.formats.brat#BratDocumentTest', 'testDocumentWithEntitiesParsing')": [
                        33,
                        45,
                        46,
                        47,
                        49
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/frenchtreebank/ConstitParseSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29
                    ],
                    "('opennlp.tools.formats.frenchtreebank#ConstitParseSampleStreamTest', 'getSample1')": [
                        88
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26
                    ],
                    "('opennlp.tools.formats.frenchtreebank#ConstitParseSampleStreamTest', 'getSample1')": [
                        88
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/muc/DocumentSplitterStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        25
                    ],
                    "('opennlp.tools.formats.muc#DocumentSplitterStreamTest', 'testSplitTwoDocuments')": [
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        25,
                        26
                    ],
                    "('opennlp.tools.formats.muc#DocumentSplitterStreamTest', 'testSplitTwoDocuments')": [
                        37
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/languagemodel/LanguageModelEvaluationTest.java": {
                "old": {
                    "(None, None)": [
                        24,
                        27
                    ],
                    "('opennlp.tools.languagemodel#LanguageModelEvaluationTest', 'testPerplexityComparison')": [
                        37,
                        38,
                        44,
                        50,
                        51,
                        57,
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        27
                    ],
                    "('opennlp.tools.languagemodel#LanguageModelEvaluationTest', 'testPerplexityComparison')": [
                        37,
                        38,
                        39,
                        40,
                        46,
                        47,
                        53,
                        54,
                        55,
                        61,
                        62,
                        63
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/languagemodel/LanguageModelTestUtils.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/languagemodel/NgramLanguageModelTest.java": {
                "old": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31,
                        32,
                        33
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testEmptyVocabularyProbability')": [
                        43,
                        45
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testRandomVocabularyAndSentence')": [
                        56
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testNgramModel')": [
                        67,
                        71,
                        72
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testBigramProbabilityNoSmoothing')": [
                        82,
                        84,
                        86,
                        88,
                        90,
                        92,
                        94
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testTrigram')": [
                        104,
                        108,
                        109
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testBigram')": [
                        119,
                        123,
                        124
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testSerializedNGramLanguageModel')": [
                        132,
                        135,
                        136
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testTrigramLanguageModelCreationFromText')": [
                        157,
                        158,
                        163
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        28,
                        29,
                        30
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testEmptyVocabularyProbability')": [
                        42,
                        44
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testRandomVocabularyAndSentence')": [
                        55
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testNgramModel')": [
                        66,
                        70,
                        71
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testBigramProbabilityNoSmoothing')": [
                        81,
                        83,
                        85,
                        87,
                        89,
                        91,
                        93
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testTrigram')": [
                        103,
                        107,
                        108
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testBigram')": [
                        118,
                        122,
                        123
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testSerializedNGramLanguageModel')": [
                        131,
                        134,
                        135
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testTrigramLanguageModelCreationFromText')": [
                        156,
                        157,
                        162
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/lemmatizer/DummyLemmaSampleStream.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#DummyLemmaSampleStream', None)": [
                        35,
                        36
                    ],
                    "('opennlp.tools.lemmatizer#DummyLemmaSampleStream', 'read')": [
                        48,
                        49,
                        50,
                        51
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#DummyLemmaSampleStream', None)": [
                        35,
                        36
                    ],
                    "('opennlp.tools.lemmatizer#DummyLemmaSampleStream', 'read')": [
                        48,
                        49,
                        50,
                        51
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/lemmatizer/LemmaSampleTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24
                    ],
                    "('opennlp.tools.lemmatizer#LemmaSampleTest', 'testRetrievingContent')": [
                        56,
                        57,
                        59,
                        60,
                        61
                    ],
                    "('opennlp.tools.lemmatizer#LemmaSampleTest', 'testToString')": [
                        78,
                        79,
                        80,
                        81
                    ],
                    "('opennlp.tools.lemmatizer#LemmaSampleTest', 'testEquals')": [
                        87,
                        88,
                        89,
                        90
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('opennlp.tools.lemmatizer#LemmaSampleTest', 'testRetrievingContent')": [
                        52,
                        54,
                        55,
                        56
                    ],
                    "('opennlp.tools.lemmatizer#LemmaSampleTest', 'testToString')": [
                        73,
                        74,
                        75,
                        76
                    ],
                    "('opennlp.tools.lemmatizer#LemmaSampleTest', 'testEquals')": [
                        82,
                        83,
                        84,
                        85
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/lemmatizer/LemmatizerEvaluatorTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/lemmatizer/LemmatizerMETest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerMETest', None)": [
                        52,
                        56,
                        59
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerMETest', 'testLemmasAsArray')": [
                        89
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerMETest', None)": [
                        51,
                        55,
                        58
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerMETest', 'testLemmasAsArray')": [
                        88
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/BeamSearchTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        28,
                        31
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', None)": [
                        54
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceZeroLengthInput')": [
                        133,
                        134,
                        135,
                        137,
                        138
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceOneElementInput')": [
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequence')": [
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceWithValidator')": [
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', None)": [
                        51
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceZeroLengthInput')": [
                        130,
                        132,
                        133
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceOneElementInput')": [
                        151,
                        152,
                        153,
                        154,
                        155
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequence')": [
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181
                    ],
                    "('opennlp.tools.ml#BeamSearchTest', 'testBestSequenceWithValidator')": [
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/PrepAttachDataUtil.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('opennlp.tools.ml#PrepAttachDataUtil', 'readPpaFile(String)')": [
                        39
                    ],
                    "('opennlp.tools.ml#PrepAttachDataUtil', 'testModel(MaxentModel,double)')": [
                        87
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27
                    ],
                    "('opennlp.tools.ml#PrepAttachDataUtil', 'readPpaFile(String)')": [
                        39
                    ],
                    "('opennlp.tools.ml#PrepAttachDataUtil', 'testModel(MaxentModel,double)')": [
                        87
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/TrainerFactoryTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        25,
                        26,
                        27,
                        28
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testBuiltInValid')": [
                        44
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testSequenceTrainerValid')": [
                        50
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testEventTrainerValid')": [
                        56
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testInvalidTrainer')": [
                        62
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testIsSequenceTrainerTrue')": [
                        72
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testIsSequenceTrainerFalse')": [
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testBuiltInValid')": [
                        43
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testSequenceTrainerValid')": [
                        49
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testEventTrainerValid')": [
                        55
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testInvalidTrainer')": [
                        61
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testIsSequenceTrainerTrue')": [
                        71
                    ],
                    "('opennlp.tools.ml#TrainerFactoryTest', 'testIsSequenceTrainerFalse')": [
                        81
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/ScaleDoesntMatterTest.java": {
                "old": {
                    "(None, None)": [
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37
                    ],
                    "('opennlp.tools.ml.maxent#ScaleDoesntMatterTest', None)": [
                        48,
                        55
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ],
                    "('opennlp.tools.ml.maxent#ScaleDoesntMatterTest', None)": [
                        41,
                        49
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/io/RealValueFileEventStreamTest.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32
                    ],
                    "('opennlp.tools.ml.maxent.io#RealValueFileEventStreamTest', None)": [
                        43
                    ],
                    "('opennlp.tools.ml.maxent.io#RealValueFileEventStreamTest', 'testLastLineBug')": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        52,
                        53,
                        57,
                        58,
                        59,
                        61,
                        62
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ],
                    "('opennlp.tools.ml.maxent.io#RealValueFileEventStreamTest', None)": [
                        36,
                        44
                    ],
                    "('opennlp.tools.ml.maxent.io#RealValueFileEventStreamTest', 'testLastLineBug')": [
                        47,
                        48,
                        53,
                        54
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/LineSearchTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        26,
                        27
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', 'testLineSearchDeterminesSaneStepLength1')": [
                        46
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', 'testLineSearchDeterminesSaneStepLength2')": [
                        63
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', 'testLineSearchFailsWithWrongDirection1')": [
                        80,
                        81
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', 'testLineSearchFailsWithWrongDirection2')": [
                        98,
                        99
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', 'testLineSearchFailsWithWrongDirection3')": [
                        116,
                        117
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', 'testLineSearchFailsWithWrongDirection4')": [
                        134,
                        135
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', 'testLineSearchFailsAtMinimum1')": [
                        152,
                        153
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', 'testLineSearchFailsAtMinimum2')": [
                        170,
                        171
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', 'testLineSearchDeterminesSaneStepLength1')": [
                        44
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', 'testLineSearchDeterminesSaneStepLength2')": [
                        61
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', 'testLineSearchFailsWithWrongDirection1')": [
                        78,
                        79
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', 'testLineSearchFailsWithWrongDirection2')": [
                        96,
                        97
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', 'testLineSearchFailsWithWrongDirection3')": [
                        114,
                        115
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', 'testLineSearchFailsWithWrongDirection4')": [
                        132,
                        133
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', 'testLineSearchFailsAtMinimum1')": [
                        150,
                        151
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#LineSearchTest', 'testLineSearchFailsAtMinimum2')": [
                        168,
                        169
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/NegLogLikelihoodTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        31,
                        36,
                        37,
                        38,
                        39
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', None)": [
                        41,
                        42,
                        52
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testDomainDimensionSanity')": [
                        64
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testInitialSanity')": [
                        77,
                        78
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientSanity')": [
                        93
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtInitialPoint')": [
                        107
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtNonInitialPoint01')": [
                        122
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtNonInitialPoint02')": [
                        139
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientAtInitialPoint')": [
                        153
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientAtNonInitialPoint')": [
                        177
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'alignDoubleArrayForTestData(double,String,String)')": [
                        190,
                        191
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'dealignDoubleArrayForTestData(double,String,String)')": [
                        219,
                        220
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', None)": [
                        36,
                        37,
                        40,
                        48
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testDomainDimensionSanity')": [
                        60
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testInitialSanity')": [
                        73,
                        74
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientSanity')": [
                        89
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtInitialPoint')": [
                        103
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtNonInitialPoint01')": [
                        118
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtNonInitialPoint02')": [
                        135
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientAtInitialPoint')": [
                        149
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientAtNonInitialPoint')": [
                        173
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'alignDoubleArrayForTestData(double,String,String)')": [
                        186,
                        187
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'dealignDoubleArrayForTestData(double,String,String)')": [
                        215,
                        216
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/QNMinimizerTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizerTest', 'testQuadraticFunction')": [
                        36,
                        37,
                        38
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizerTest', 'testRosenbrockFunction')": [
                        48,
                        49,
                        50
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizerTest', None)": [
                        65,
                        91,
                        97,
                        98
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizerTest', 'testQuadraticFunction')": [
                        34,
                        35,
                        36
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizerTest', 'testRosenbrockFunction')": [
                        46,
                        47,
                        48
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNMinimizerTest', None)": [
                        63,
                        89,
                        95,
                        96
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/QNPrepAttachTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        37,
                        38
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachData')": [
                        46,
                        48,
                        49,
                        50,
                        51,
                        52,
                        54
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataWithParamsDefault')": [
                        60,
                        64,
                        66
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataWithElasticNetParams')": [
                        72,
                        81,
                        83
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataWithL1Params')": [
                        89,
                        98,
                        100
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataWithL2Params')": [
                        106,
                        115,
                        117
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataInParallel')": [
                        123,
                        128,
                        130
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        28
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachData')": [
                        44,
                        46,
                        48,
                        49,
                        50
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataWithParamsDefault')": [
                        56,
                        60,
                        62
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataWithElasticNetParams')": [
                        68,
                        77,
                        79
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataWithL1Params')": [
                        85,
                        94,
                        96
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataWithL2Params')": [
                        102,
                        111,
                        113
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachDataInParallel')": [
                        119,
                        124,
                        126
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/QNTrainerTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        41,
                        42,
                        43
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', None)": [
                        46,
                        56
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testTrainModelReturnsAQNModel')": [
                        66
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testInTinyDevSet')": [
                        84
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testModel')": [
                        97,
                        98
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testSerdeModel')": [
                        121,
                        131,
                        133
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', None)": [
                        42,
                        45,
                        53
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testTrainModelReturnsAQNModel')": [
                        63
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testInTinyDevSet')": [
                        81
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testModel')": [
                        94
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testSerdeModel')": [
                        117,
                        127,
                        129
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/naivebayes/NaiveBayesCorrectnessTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', None)": [
                        54
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testModel(MaxentModel,Event,double)')": [
                        121,
                        122,
                        124,
                        127,
                        130,
                        133
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'createTrainingStream')": [
                        138
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', None)": [
                        45,
                        54
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testModel(MaxentModel,Event,double)')": [
                        121,
                        122,
                        124,
                        127,
                        130,
                        133
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'createTrainingStream')": [
                        138
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/naivebayes/NaiveBayesModelReadWriteTest.java": {
                "old": {
                    "(None, None)": [
                        23,
                        33,
                        34,
                        35,
                        36,
                        37
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', None)": [
                        42,
                        52
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', 'testBinaryModelPersistence')": [
                        64
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', 'testTextModelPersistence')": [
                        78
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', None)": [
                        40,
                        42,
                        51
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', 'testBinaryModelPersistence')": [
                        63
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', 'testTextModelPersistence')": [
                        77
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/naivebayes/NaiveBayesPrepAttachTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        37,
                        38,
                        39
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesPrepAttachTest', None)": [
                        54
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesPrepAttachTest', 'testNaiveBayesOnPrepAttachData')": [
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesPrepAttachTest', 'testNaiveBayesOnPrepAttachDataUsingTrainUtil')": [
                        68,
                        69,
                        74,
                        75,
                        76,
                        77,
                        78
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesPrepAttachTest', 'testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5')": [
                        83,
                        84,
                        89,
                        90,
                        91,
                        92,
                        93
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27,
                        30
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesPrepAttachTest', None)": [
                        44,
                        53
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesPrepAttachTest', 'testNaiveBayesOnPrepAttachData')": [
                        56,
                        57,
                        58,
                        59
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesPrepAttachTest', 'testNaiveBayesOnPrepAttachDataUsingTrainUtil')": [
                        64,
                        69,
                        70,
                        71
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesPrepAttachTest', 'testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5')": [
                        76,
                        81,
                        82,
                        83
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/perceptron/PerceptronPrepAttachTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        39,
                        40,
                        41
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachData')": [
                        53,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithSkippedAveraging')": [
                        66,
                        72,
                        73,
                        74
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithTolerance')": [
                        80,
                        87,
                        88,
                        89
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithStepSizeDecrease')": [
                        95,
                        102,
                        103,
                        104
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testModelSerialization')": [
                        116,
                        118,
                        129,
                        130
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testModelEquals')": [
                        141,
                        142,
                        143
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        33
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachData')": [
                        51,
                        53,
                        54,
                        55
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithSkippedAveraging')": [
                        61,
                        67,
                        68
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithTolerance')": [
                        74,
                        81,
                        82
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachDataWithStepSizeDecrease')": [
                        88,
                        95,
                        96
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testModelSerialization')": [
                        108,
                        110,
                        121
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testModelEquals')": [
                        132,
                        133
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/DictionaryNameFinderEvaluatorTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderEvaluatorTest', 'testEvaluator')": [
                        57,
                        58
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderEvaluatorTest', 'createSample')": [
                        75
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderEvaluatorTest', 'createDictionary')": [
                        89
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        26
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderEvaluatorTest', 'testEvaluator')": [
                        56,
                        57
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderEvaluatorTest', 'createSample')": [
                        74
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderEvaluatorTest', 'createDictionary')": [
                        88
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/DictionaryNameFinderTest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        21,
                        26,
                        27,
                        28
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', None)": [
                        43,
                        50
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testSingleTokeNameAtSentenceStart')": [
                        61,
                        63,
                        66,
                        68,
                        69,
                        70
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testSingleTokeNameInsideSentence')": [
                        76,
                        79,
                        81,
                        82,
                        83
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testSingleTokeNameAtSentenceEnd')": [
                        92,
                        94,
                        95,
                        96
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testLastMatchingTokenNameIsChoosen')": [
                        102,
                        104,
                        105,
                        106
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testLongerTokenNameIsPreferred')": [
                        112,
                        114,
                        115,
                        116
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testCaseSensitivity')": [
                        122,
                        124,
                        125,
                        126
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testCaseLongerEntry')": [
                        132,
                        134,
                        135,
                        136
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', None)": [
                        42,
                        49
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testSingleTokeNameAtSentenceStart')": [
                        64,
                        65
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testSingleTokeNameInsideSentence')": [
                        74,
                        75
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testSingleTokeNameAtSentenceEnd')": [
                        85,
                        86
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testLastMatchingTokenNameIsChoosen')": [
                        93,
                        94
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testLongerTokenNameIsPreferred')": [
                        101,
                        102
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testCaseSensitivity')": [
                        109,
                        110
                    ],
                    "('opennlp.tools.namefind#DictionaryNameFinderTest', 'testCaseLongerEntry')": [
                        117,
                        118
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameFinderEventStreamTest.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameFinderMETest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        29,
                        30,
                        31,
                        32
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', None)": [
                        54,
                        55
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinder')": [
                        95,
                        96,
                        110,
                        111,
                        112
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinderWithTypes')": [
                        148,
                        149,
                        150,
                        151,
                        152,
                        159,
                        160,
                        161
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNames')": [
                        195,
                        196,
                        197,
                        198
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNamesTypeOverride')": [
                        228,
                        229,
                        230,
                        231
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNamesWithTypes')": [
                        266,
                        267,
                        268,
                        269,
                        270,
                        271
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithEntitiesWithTypes')": [
                        304,
                        305,
                        306,
                        307
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'hasOtherAsOutcome(TokenNameFinderModel)')": [
                        313,
                        314
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testDropOverlappingSpans')": [
                        325,
                        326
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinderWithMultipleTypes')": [
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        378,
                        379,
                        380,
                        381,
                        382
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', None)": [
                        53,
                        54
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinder')": [
                        94,
                        95,
                        109,
                        110,
                        111
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinderWithTypes')": [
                        147,
                        148,
                        149,
                        150,
                        151,
                        158,
                        159,
                        160
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNames')": [
                        194,
                        195,
                        196,
                        197
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNamesTypeOverride')": [
                        227,
                        228,
                        229,
                        230
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNamesWithTypes')": [
                        265,
                        266,
                        267,
                        268,
                        269
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithEntitiesWithTypes')": [
                        302,
                        303,
                        304,
                        305
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'hasOtherAsOutcome(TokenNameFinderModel)')": [
                        311,
                        312
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testDropOverlappingSpans')": [
                        323
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinderWithMultipleTypes')": [
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        375,
                        376,
                        377,
                        378,
                        379
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameSampleDataStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', None)": [
                        50,
                        51,
                        52,
                        53
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'sublistToString(String,Span)')": [
                        65
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithoutNameTypes')": [
                        83,
                        94,
                        95
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithoutNameTypeAndInvalidData')": [
                        161
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithNameTypes')": [
                        181,
                        182,
                        183,
                        184,
                        192,
                        193
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testClearAdaptiveData')": [
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        326
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testHtmlNameSampleParsing')": [
                        345
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', None)": [
                        49,
                        50,
                        51,
                        52
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'sublistToString(String,Span)')": [
                        64
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithoutNameTypes')": [
                        82,
                        93,
                        94
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithoutNameTypeAndInvalidData')": [
                        160
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testWithNameTypes')": [
                        180,
                        181,
                        182,
                        183,
                        191,
                        192
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testClearAdaptiveData')": [
                        317,
                        318,
                        319,
                        320,
                        321,
                        324
                    ],
                    "('opennlp.tools.namefind#NameSampleDataStreamTest', 'testHtmlNameSampleParsing')": [
                        343
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameSampleTest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        21,
                        22,
                        23,
                        24,
                        28,
                        29
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testNoTypesToString')": [
                        76
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testWithTypesToString')": [
                        87,
                        96
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testNameAtEnd')": [
                        115
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testParseWithAdditionalSpace')": [
                        129
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testTypeWithSpecialChars')": [
                        144,
                        145,
                        146,
                        147
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testMissingType')": [
                        155,
                        156
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testTypeWithSpace')": [
                        165,
                        166
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testTypeWithNewLine')": [
                        175,
                        176
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testTypeWithInvalidChar1')": [
                        185,
                        186
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testTypeWithInvalidChar2')": [
                        195,
                        196
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testEquals')": [
                        201,
                        202,
                        203,
                        204
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testNoTypesToString')": [
                        72,
                        73
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testWithTypesToString')": [
                        84,
                        85,
                        94
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testNameAtEnd')": [
                        113
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testParseWithAdditionalSpace')": [
                        127
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testTypeWithSpecialChars')": [
                        142,
                        143,
                        144,
                        145
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testMissingType')": [
                        153
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testTypeWithSpace')": [
                        162
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testTypeWithNewLine')": [
                        171
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testTypeWithInvalidChar1')": [
                        180
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testTypeWithInvalidChar2')": [
                        189
                    ],
                    "('opennlp.tools.namefind#NameSampleTest', 'testEquals')": [
                        194,
                        195,
                        196,
                        197
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/RegexNameFinderFactoryTest.java": {
                "old": {
                    "('opennlp.tools.namefind#RegexNameFinderFactoryTest', None)": [
                        34,
                        35
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#RegexNameFinderFactoryTest', None)": [
                        34,
                        35,
                        36,
                        37
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/RegexNameFinderTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        27,
                        28
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderTest', 'testFindSingleTokenPattern')": [
                        53,
                        55,
                        56
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderTest', 'testFindTokenizdPattern')": [
                        76,
                        78,
                        79,
                        80
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderTest', 'testFindMatchingPatternWithoutMatchingTokenBounds')": [
                        94,
                        95,
                        99
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderTest', 'testFindSingleTokenPattern')": [
                        52,
                        54,
                        55
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderTest', 'testFindTokenizdPattern')": [
                        75,
                        77,
                        78,
                        79
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderTest', 'testFindMatchingPatternWithoutMatchingTokenBounds')": [
                        93,
                        97
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/TokenNameFinderCrossValidatorTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        32,
                        33,
                        34,
                        35
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidatorTest', 'testWithNullResources')": [
                        51,
                        65
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidatorTest', 'testWithNameEvaluationErrorListener')": [
                        78,
                        96,
                        97
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        24,
                        25,
                        26,
                        27
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidatorTest', 'testWithNullResources')": [
                        50,
                        64
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidatorTest', 'testWithNameEvaluationErrorListener')": [
                        77,
                        95,
                        96
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/TokenNameFinderEvaluatorTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        25,
                        26
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderEvaluatorTest', 'testPositive')": [
                        40
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderEvaluatorTest', 'testNegative')": [
                        55
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        26,
                        27
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderEvaluatorTest', 'testPositive')": [
                        41,
                        42
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderEvaluatorTest', 'testNegative')": [
                        57,
                        58
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ngram/NGramModelTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26,
                        33,
                        34,
                        35,
                        36
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testZeroGetCount')": [
                        47,
                        48
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testZeroGetCount2')": [
                        56,
                        57
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testAdd')": [
                        65,
                        66
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testAdd1')": [
                        74,
                        75
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testAdd2')": [
                        83,
                        84
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testAdd3')": [
                        92,
                        94,
                        96,
                        97
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testRemove')": [
                        106
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testContains')": [
                        114
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testContains2')": [
                        122
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testNumberOfGrams')": [
                        130
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testCutoff1')": [
                        139
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testCutoff2')": [
                        148
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testToDictionary')": [
                        159,
                        160,
                        161,
                        162
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testToDictionary1')": [
                        173,
                        174,
                        175,
                        176
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testSerialize')": [
                        189,
                        190,
                        198,
                        199,
                        200
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        28,
                        29,
                        30
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testZeroGetCount')": [
                        43,
                        44
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testZeroGetCount2')": [
                        52,
                        53
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testAdd')": [
                        61,
                        62
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testAdd1')": [
                        70,
                        71
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testAdd2')": [
                        79,
                        80
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testAdd3')": [
                        88,
                        90,
                        92,
                        93
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testRemove')": [
                        102
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testContains')": [
                        110
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testContains2')": [
                        118
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testNumberOfGrams')": [
                        126
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testCutoff1')": [
                        135
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testCutoff2')": [
                        144
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testToDictionary')": [
                        155,
                        156,
                        157,
                        158
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testToDictionary1')": [
                        169,
                        170,
                        171,
                        172
                    ],
                    "('opennlp.tools.ngram#NGramModelTest', 'testSerialize')": [
                        185,
                        186,
                        187,
                        195,
                        196,
                        197,
                        198,
                        199
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ngram/NGramUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        24,
                        27,
                        28,
                        29,
                        111
                    ],
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testBigramMLProbability')": [
                        38,
                        44,
                        46,
                        48
                    ],
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testTrigramMLProbability')": [
                        53,
                        59,
                        61
                    ],
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testNgramMLProbability')": [
                        66,
                        72,
                        74
                    ],
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testLinearInterpolation')": [
                        79,
                        87,
                        88
                    ],
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testLinearInterpolation2')": [
                        93,
                        99,
                        100
                    ],
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testGetNGrams')": [
                        107,
                        109
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        28
                    ],
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testBigramMLProbability')": [
                        37,
                        43,
                        45,
                        47
                    ],
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testTrigramMLProbability')": [
                        52,
                        58,
                        60
                    ],
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testNgramMLProbability')": [
                        65,
                        71,
                        73
                    ],
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testLinearInterpolation')": [
                        78,
                        86,
                        87
                    ],
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testLinearInterpolation2')": [
                        92,
                        98,
                        99
                    ],
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testGetNGrams')": [
                        106,
                        108
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/ChunkSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        23,
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        28,
                        29
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/ParseSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        24,
                        25
                    ],
                    "('opennlp.tools.parser#ParseSampleStreamTest', 'createParseSampleStream')": [
                        35,
                        40
                    ],
                    "('opennlp.tools.parser#ParseSampleStreamTest', 'testReadTestStream')": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        23
                    ],
                    "('opennlp.tools.parser#ParseSampleStreamTest', 'createParseSampleStream')": [
                        33,
                        38
                    ],
                    "('opennlp.tools.parser#ParseSampleStreamTest', 'testReadTestStream')": [
                        44,
                        45,
                        46,
                        47,
                        48
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/ParseTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ],
                    "('opennlp.tools.parser#ParseTest', None)": [
                        33
                    ],
                    "('opennlp.tools.parser#ParseTest', 'testEquals')": [
                        50
                    ],
                    "('opennlp.tools.parser#ParseTest', 'testParseClone')": [
                        57,
                        58
                    ],
                    "('opennlp.tools.parser#ParseTest', 'testGetText')": [
                        69
                    ],
                    "('opennlp.tools.parser#ParseTest', 'testShow')": [
                        78,
                        80,
                        81
                    ],
                    "('opennlp.tools.parser#ParseTest', 'testTokenReplacement')": [
                        101,
                        102
                    ],
                    "('opennlp.tools.parser#ParseTest', 'testGetTagNodes')": [
                        112,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('opennlp.tools.parser#ParseTest', None)": [
                        31,
                        32
                    ],
                    "('opennlp.tools.parser#ParseTest', 'testEquals')": [
                        49
                    ],
                    "('opennlp.tools.parser#ParseTest', 'testParseClone')": [
                        56,
                        57
                    ],
                    "('opennlp.tools.parser#ParseTest', 'testGetText')": [
                        68
                    ],
                    "('opennlp.tools.parser#ParseTest', 'testShow')": [
                        78
                    ],
                    "('opennlp.tools.parser#ParseTest', 'testTokenReplacement')": [
                        98
                    ],
                    "('opennlp.tools.parser#ParseTest', 'testGetTagNodes')": [
                        108,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/ParserTestUtil.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ],
                    "('opennlp.tools.parser#ParserTestUtil', 'openTestTrainingData')": [
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33
                    ],
                    "('opennlp.tools.parser#ParserTestUtil', 'openTestTrainingData')": [
                        66,
                        68
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/PosSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        23,
                        28,
                        29
                    ],
                    "('opennlp.tools.parser#PosSampleStreamTest', 'testConvertParseToPosSample')": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        78
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        23
                    ],
                    "('opennlp.tools.parser#PosSampleStreamTest', 'testConvertParseToPosSample')": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        76
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/chunking/ParserTest.java": {
                "old": {
                    "(None, None)": [
                        29,
                        31
                    ],
                    "('opennlp.tools.parser.chunking#ParserTest', 'testChunkingParserTraining')": [
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('opennlp.tools.parser.chunking#ParserTest', 'testChunkingParserTraining')": [
                        64
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/lang/en/HeadRulesTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('opennlp.tools.parser.lang.en#HeadRulesTest', 'testSerialization')": [
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('opennlp.tools.parser.lang.en#HeadRulesTest', 'testSerialization')": [
                        46
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/treeinsert/ParserTest.java": {
                "old": {
                    "(None, None)": [
                        29,
                        30
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserTest', 'testTreeInsertParserTraining')": [
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserTest', 'testTreeInsertParserTraining')": [
                        54
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/DummyPOSTaggerFactory.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('opennlp.tools.postag#DummyPOSTaggerFactory', None)": [
                        87,
                        88,
                        116
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#DummyPOSTaggerFactory', None)": [
                        86,
                        114
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/POSDictionaryTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        29,
                        30
                    ],
                    "('opennlp.tools.postag#POSDictionaryTest', 'serializeDeserializeDict(POSDictionary)')": [
                        54
                    ],
                    "('opennlp.tools.postag#POSDictionaryTest', 'testSerialization')": [
                        63,
                        66,
                        67,
                        68,
                        69,
                        71
                    ],
                    "('opennlp.tools.postag#POSDictionaryTest', 'testLoadingDictionaryWithoutCaseAttribute')": [
                        78,
                        79
                    ],
                    "('opennlp.tools.postag#POSDictionaryTest', 'testCaseSensitiveDictionary')": [
                        86,
                        87,
                        91,
                        92
                    ],
                    "('opennlp.tools.postag#POSDictionaryTest', 'testCaseInsensitiveDictionary')": [
                        99,
                        100,
                        101,
                        102,
                        106,
                        107
                    ],
                    "('opennlp.tools.postag#POSDictionaryTest', 'testToString')": [
                        113,
                        115
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSDictionaryTest', 'serializeDeserializeDict(POSDictionary)')": [
                        47
                    ],
                    "('opennlp.tools.postag#POSDictionaryTest', 'testSerialization')": [
                        56,
                        59,
                        60,
                        61,
                        62,
                        64
                    ],
                    "('opennlp.tools.postag#POSDictionaryTest', 'testLoadingDictionaryWithoutCaseAttribute')": [
                        71,
                        72
                    ],
                    "('opennlp.tools.postag#POSDictionaryTest', 'testCaseSensitiveDictionary')": [
                        79,
                        80,
                        84,
                        85
                    ],
                    "('opennlp.tools.postag#POSDictionaryTest', 'testCaseInsensitiveDictionary')": [
                        92,
                        93,
                        94,
                        95,
                        99,
                        100
                    ],
                    "('opennlp.tools.postag#POSDictionaryTest', 'testToString')": [
                        106,
                        108
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/POSEvaluatorTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25
                    ],
                    "('opennlp.tools.postag#POSEvaluatorTest', 'testPositive')": [
                        42,
                        44
                    ],
                    "('opennlp.tools.postag#POSEvaluatorTest', 'testNegative')": [
                        53,
                        56,
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30
                    ],
                    "('opennlp.tools.postag#POSEvaluatorTest', 'testNegative')": [
                        52,
                        53
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/POSModelTest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        25,
                        27,
                        28
                    ],
                    "('opennlp.tools.postag#POSModelTest', 'testPOSModelSerializationMaxent')": [
                        33
                    ],
                    "('opennlp.tools.postag#POSModelTest', 'testPOSModelSerializationPerceptron')": [
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('opennlp.tools.postag#POSModelTest', 'testPOSModelSerializationMaxent')": [
                        31
                    ],
                    "('opennlp.tools.postag#POSModelTest', 'testPOSModelSerializationPerceptron')": [
                        49
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/POSSampleEventStreamTest.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24,
                        25
                    ],
                    "('opennlp.tools.postag#POSSampleEventStreamTest', None)": [
                        35,
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/POSSampleTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        29,
                        30
                    ],
                    "('opennlp.tools.postag#POSSampleTest', 'testEquals')": [
                        39,
                        40,
                        41,
                        42
                    ],
                    "('opennlp.tools.postag#POSSampleTest', None)": [
                        60,
                        74,
                        92,
                        106
                    ],
                    "('opennlp.tools.postag#POSSampleTest', 'testParse')": [
                        66,
                        68,
                        69
                    ],
                    "('opennlp.tools.postag#POSSampleTest', 'testParseEmptyString')": [
                        78,
                        83,
                        84,
                        85,
                        86
                    ],
                    "('opennlp.tools.postag#POSSampleTest', 'testParseEmtpyToken')": [
                        97,
                        99,
                        100
                    ],
                    "('opennlp.tools.postag#POSSampleTest', 'testParseEmtpyTag')": [
                        110,
                        112,
                        114,
                        115
                    ],
                    "('opennlp.tools.postag#POSSampleTest', 'testParseWithError')": [
                        132
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('opennlp.tools.postag#POSSampleTest', 'testEquals')": [
                        33,
                        34,
                        35,
                        36
                    ],
                    "('opennlp.tools.postag#POSSampleTest', 'testParse')": [
                        60
                    ],
                    "('opennlp.tools.postag#POSSampleTest', 'testParseEmptyString')": [
                        72,
                        73
                    ],
                    "('opennlp.tools.postag#POSSampleTest', 'testParseEmtpyToken')": [
                        84
                    ],
                    "('opennlp.tools.postag#POSSampleTest', 'testParseEmtpyTag')": [
                        95
                    ],
                    "('opennlp.tools.postag#POSSampleTest', 'testParseWithError')": [
                        112
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/POSTaggerFactoryTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        36,
                        37,
                        38
                    ],
                    "('opennlp.tools.postag#POSTaggerFactoryTest', 'createSampleStream')": [
                        51
                    ],
                    "('opennlp.tools.postag#POSTaggerFactoryTest', 'testPOSTaggerWithCustomFactory')": [
                        70,
                        71,
                        72,
                        81,
                        82,
                        83,
                        84
                    ],
                    "('opennlp.tools.postag#POSTaggerFactoryTest', 'testPOSTaggerWithDefaultFactory')": [
                        96,
                        97,
                        98,
                        99,
                        108,
                        109,
                        110,
                        111
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26,
                        27
                    ],
                    "('opennlp.tools.postag#POSTaggerFactoryTest', 'createSampleStream')": [
                        51
                    ],
                    "('opennlp.tools.postag#POSTaggerFactoryTest', 'testPOSTaggerWithCustomFactory')": [
                        70,
                        71,
                        72,
                        81,
                        82,
                        83,
                        84
                    ],
                    "('opennlp.tools.postag#POSTaggerFactoryTest', 'testPOSTaggerWithDefaultFactory')": [
                        96,
                        97,
                        98,
                        99,
                        108,
                        109,
                        110,
                        111
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/POSTaggerMETest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        21,
                        22,
                        24,
                        25,
                        26
                    ],
                    "('opennlp.tools.postag#POSTaggerMETest', 'createSampleStream')": [
                        44
                    ],
                    "('opennlp.tools.postag#POSTaggerMETest', None)": [
                        50,
                        51
                    ],
                    "('opennlp.tools.postag#POSTaggerMETest', 'trainPOSModel(ModelType)')": [
                        59
                    ],
                    "('opennlp.tools.postag#POSTaggerMETest', 'testPOSTagger')": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83
                    ],
                    "('opennlp.tools.postag#POSTaggerMETest', 'testBuildNGramDictionary')": [
                        89
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        23,
                        30
                    ],
                    "('opennlp.tools.postag#POSTaggerMETest', 'createSampleStream')": [
                        42
                    ],
                    "('opennlp.tools.postag#POSTaggerMETest', None)": [
                        48,
                        57
                    ],
                    "('opennlp.tools.postag#POSTaggerMETest', 'trainPOSModel(ModelType)')": [
                        56
                    ],
                    "('opennlp.tools.postag#POSTaggerMETest', 'testPOSTagger')": [
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/WordTagSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        20,
                        21,
                        22,
                        23,
                        30,
                        31
                    ],
                    "('opennlp.tools.postag#WordTagSampleStreamTest', 'testParseSimpleSample')": [
                        41,
                        45,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        65,
                        67
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26
                    ],
                    "('opennlp.tools.postag#WordTagSampleStreamTest', 'testParseSimpleSample')": [
                        37,
                        41,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        61,
                        63
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/DefaultEndOfSentenceScannerTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('opennlp.tools.sentdetect#DefaultEndOfSentenceScannerTest', 'testScanning')": [
                        39,
                        40,
                        41,
                        43,
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('opennlp.tools.sentdetect#DefaultEndOfSentenceScannerTest', 'testScanning')": [
                        38,
                        39,
                        40,
                        42,
                        43
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/SDEventStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        23,
                        30,
                        31
                    ],
                    "('opennlp.tools.sentdetect#SDEventStreamTest', 'testEventOutcomes')": [
                        53,
                        54,
                        55,
                        56,
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        23
                    ],
                    "('opennlp.tools.sentdetect#SDEventStreamTest', 'testEventOutcomes')": [
                        51,
                        52,
                        53,
                        54,
                        56
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/SentenceDetectorEvaluatorTest.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26,
                        27
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorEvaluatorTest', None)": [
                        62
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorEvaluatorTest', None)": [
                        63,
                        64,
                        65
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/SentenceDetectorFactoryTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorFactoryTest', 'createSampleStream')": [
                        56
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorFactoryTest', 'loadAbbDictionary')": [
                        65
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorFactoryTest', 'testDefault')": [
                        77,
                        82,
                        83,
                        84,
                        85,
                        94,
                        95,
                        96,
                        97
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorFactoryTest', 'testNullDict')": [
                        104,
                        105,
                        106,
                        109,
                        110,
                        111,
                        112,
                        121,
                        122,
                        123,
                        124
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorFactoryTest', 'testDefaultEOS')": [
                        132,
                        133,
                        136,
                        137,
                        138,
                        139,
                        149,
                        150,
                        151,
                        152
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorFactoryTest', 'testDummyFactory')": [
                        161,
                        166,
                        167,
                        168,
                        169,
                        178,
                        179,
                        180,
                        181,
                        183,
                        184,
                        185,
                        186
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorFactoryTest', 'testCreateDummyFactory')": [
                        192,
                        198,
                        199,
                        200,
                        201
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        27
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorFactoryTest', 'createSampleStream')": [
                        53
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorFactoryTest', 'loadAbbDictionary')": [
                        62
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorFactoryTest', 'testDefault')": [
                        74,
                        79,
                        80,
                        81,
                        90,
                        91,
                        92
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorFactoryTest', 'testNullDict')": [
                        99,
                        100,
                        101,
                        104,
                        105,
                        106,
                        107,
                        116,
                        117,
                        118,
                        119
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorFactoryTest', 'testDefaultEOS')": [
                        127,
                        128,
                        131,
                        132,
                        133,
                        134,
                        144,
                        145,
                        146,
                        147
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorFactoryTest', 'testDummyFactory')": [
                        156,
                        161,
                        162,
                        163,
                        164,
                        173,
                        174,
                        175,
                        176,
                        178,
                        179
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorFactoryTest', 'testCreateDummyFactory')": [
                        185,
                        191,
                        192,
                        193,
                        194
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/SentenceDetectorMETest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        24,
                        25
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorMETest', 'testSentenceDetector')": [
                        50,
                        52,
                        59,
                        60,
                        61,
                        63,
                        67,
                        69,
                        70,
                        71,
                        75,
                        77,
                        78,
                        79,
                        83,
                        85,
                        86,
                        87,
                        88,
                        92,
                        93,
                        97,
                        101,
                        102,
                        106,
                        110,
                        114,
                        116,
                        120,
                        124,
                        128,
                        130,
                        131,
                        132
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        24
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorMETest', 'testSentenceDetector')": [
                        49,
                        50,
                        52,
                        59,
                        60,
                        61,
                        63,
                        67,
                        69,
                        70,
                        71,
                        75,
                        77,
                        78,
                        79,
                        83,
                        85,
                        86,
                        87,
                        88,
                        92,
                        93,
                        97,
                        101,
                        102,
                        106,
                        110,
                        114,
                        116,
                        120,
                        124,
                        128,
                        130,
                        131,
                        132
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/SentenceSampleTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        24,
                        25
                    ],
                    "('opennlp.tools.sentdetect#SentenceSampleTest', 'testRetrievingContent')": [
                        38,
                        39,
                        40
                    ],
                    "('opennlp.tools.sentdetect#SentenceSampleTest', 'testEquals')": [
                        45,
                        46,
                        47,
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ],
                    "('opennlp.tools.sentdetect#SentenceSampleTest', 'testRetrievingContent')": [
                        36,
                        37,
                        38
                    ],
                    "('opennlp.tools.sentdetect#SentenceSampleTest', 'testEquals')": [
                        43,
                        44,
                        45,
                        46
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/stemmer/SnowballStemmerTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        24,
                        25
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testDanish')": [
                        32,
                        33,
                        34
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testDutch')": [
                        40,
                        41,
                        42
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testEnglish')": [
                        50,
                        51,
                        52
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testFinnish')": [
                        59,
                        60,
                        62
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testFrench')": [
                        69,
                        70,
                        71
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testGerman')": [
                        77,
                        78,
                        79
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testHungarian')": [
                        86,
                        87,
                        88
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testItalian')": [
                        95,
                        96,
                        97
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testPortuguese')": [
                        104,
                        105,
                        106
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testRomanian')": [
                        113,
                        114,
                        115
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testSpanish')": [
                        122,
                        123,
                        124
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testSwedish')": [
                        130,
                        131,
                        132
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testTurkish')": [
                        139,
                        140,
                        141
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testDanish')": [
                        31,
                        32,
                        33
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testDutch')": [
                        39,
                        40,
                        41
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testEnglish')": [
                        49,
                        50,
                        51
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testFinnish')": [
                        58,
                        59,
                        61
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testFrench')": [
                        68,
                        69,
                        70
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testGerman')": [
                        76,
                        77,
                        78
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testHungarian')": [
                        85,
                        86,
                        87
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testItalian')": [
                        94,
                        95,
                        96
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testPortuguese')": [
                        103,
                        104,
                        105
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testRomanian')": [
                        112,
                        113,
                        114
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testSpanish')": [
                        121,
                        122,
                        123
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testSwedish')": [
                        129,
                        130,
                        131
                    ],
                    "('opennlp.tools.stemmer#SnowballStemmerTest', 'testTurkish')": [
                        138,
                        139,
                        140
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/DetokenizationDictionaryTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        26,
                        27,
                        28
                    ],
                    "('opennlp.tools.tokenize#DetokenizationDictionaryTest', None)": [
                        34,
                        35
                    ],
                    "('opennlp.tools.tokenize#DetokenizationDictionaryTest', 'setUp')": [
                        41,
                        43,
                        44
                    ],
                    "('opennlp.tools.tokenize#DetokenizationDictionaryTest', 'testEntries(DetokenizationDictionary)')": [
                        50,
                        51,
                        52,
                        53
                    ],
                    "('opennlp.tools.tokenize#DetokenizationDictionaryTest', 'testSerialization')": [
                        62,
                        63,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        28,
                        29
                    ],
                    "('opennlp.tools.tokenize#DetokenizationDictionaryTest', 'setUp')": [
                        37,
                        39,
                        40
                    ],
                    "('opennlp.tools.tokenize#DetokenizationDictionaryTest', 'testEntries(DetokenizationDictionary)')": [
                        46,
                        47,
                        48,
                        49
                    ],
                    "('opennlp.tools.tokenize#DetokenizationDictionaryTest', 'testSerialization')": [
                        58
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/DictionaryDetokenizerTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        27,
                        28
                    ],
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', 'testDetokenizer')": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56
                    ],
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', 'testDetokenizeToString')": [
                        79
                    ],
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', 'testDetokenizeToString2')": [
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25
                    ],
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', 'testDetokenizer')": [
                        50,
                        51,
                        52,
                        53,
                        54,
                        55
                    ],
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', 'testDetokenizeToString')": [
                        78
                    ],
                    "('opennlp.tools.tokenize#DictionaryDetokenizerTest', 'testDetokenizeToString2')": [
                        90
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/DummyTokenizerFactory.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.tokenize#DummyTokenizerFactory', None)": [
                        88,
                        89
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#DummyTokenizerFactory', None)": [
                        87
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/SimpleTokenizerTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        23
                    ],
                    "('opennlp.tools.tokenize#SimpleTokenizerTest', 'testWhitespaceTokenization')": [
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        50
                    ],
                    "('opennlp.tools.tokenize#SimpleTokenizerTest', 'testWordDotTokenization')": [
                        62,
                        63,
                        64,
                        65
                    ],
                    "('opennlp.tools.tokenize#SimpleTokenizerTest', 'testWordNumericTokeniztation')": [
                        77,
                        78,
                        79,
                        80
                    ],
                    "('opennlp.tools.tokenize#SimpleTokenizerTest', 'testWordWithOtherTokenization')": [
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('opennlp.tools.tokenize#SimpleTokenizerTest', 'testWhitespaceTokenization')": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        48
                    ],
                    "('opennlp.tools.tokenize#SimpleTokenizerTest', 'testWordDotTokenization')": [
                        60,
                        61,
                        62
                    ],
                    "('opennlp.tools.tokenize#SimpleTokenizerTest', 'testWordNumericTokeniztation')": [
                        74,
                        75,
                        76
                    ],
                    "('opennlp.tools.tokenize#SimpleTokenizerTest', 'testWordWithOtherTokenization')": [
                        85,
                        86,
                        87,
                        88,
                        89,
                        90
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokSpanEventStreamTest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        21,
                        22,
                        24,
                        29,
                        30
                    ],
                    "('opennlp.tools.tokenize#TokSpanEventStreamTest', 'testEventOutcomes')": [
                        50,
                        51,
                        52,
                        53,
                        54,
                        56,
                        57
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        23
                    ],
                    "('opennlp.tools.tokenize#TokSpanEventStreamTest', 'testEventOutcomes')": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        53,
                        54
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokenSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22,
                        23,
                        28,
                        29
                    ],
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', None)": [
                        40,
                        65,
                        98
                    ],
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingWhitespaceSeparatedTokens')": [
                        53,
                        55,
                        56,
                        57,
                        58
                    ],
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingSeparatedString')": [
                        78,
                        80,
                        81,
                        83,
                        84,
                        86,
                        87,
                        89,
                        90
                    ],
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingWhitespaceAndSeparatedString')": [
                        111,
                        113,
                        114,
                        115,
                        116,
                        117
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        23
                    ],
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingWhitespaceSeparatedTokens')": [
                        50,
                        52,
                        53,
                        54,
                        55
                    ],
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingSeparatedString')": [
                        74,
                        76,
                        77,
                        79,
                        80,
                        82,
                        83,
                        85,
                        86
                    ],
                    "('opennlp.tools.tokenize#TokenSampleStreamTest', 'testParsingWhitespaceAndSeparatedString')": [
                        106,
                        108,
                        109,
                        110,
                        111,
                        112
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokenSampleTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        27,
                        28
                    ],
                    "('opennlp.tools.tokenize#TokenSampleTest', 'testRetrievingContent')": [
                        40,
                        42,
                        43
                    ],
                    "('opennlp.tools.tokenize#TokenSampleTest', 'testCreationWithDetokenizer')": [
                        65,
                        66,
                        67,
                        72,
                        74,
                        75,
                        76,
                        77,
                        78,
                        80,
                        81,
                        82,
                        83
                    ],
                    "('opennlp.tools.tokenize#TokenSampleTest', 'testEquals')": [
                        88,
                        89,
                        90,
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('opennlp.tools.tokenize#TokenSampleTest', 'testRetrievingContent')": [
                        37,
                        39,
                        40
                    ],
                    "('opennlp.tools.tokenize#TokenSampleTest', 'testCreationWithDetokenizer')": [
                        62,
                        63,
                        68,
                        70,
                        71,
                        72,
                        73,
                        74,
                        76,
                        77,
                        78,
                        79
                    ],
                    "('opennlp.tools.tokenize#TokenSampleTest', 'testEquals')": [
                        84,
                        85,
                        86,
                        87
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokenizerEvaluatorTest.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26,
                        27
                    ],
                    "('opennlp.tools.tokenize#TokenizerEvaluatorTest', None)": [
                        62
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25
                    ],
                    "('opennlp.tools.tokenize#TokenizerEvaluatorTest', None)": [
                        63,
                        64,
                        65
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokenizerFactoryTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'createSampleStream')": [
                        53
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'testDefault')": [
                        77,
                        78,
                        79,
                        80,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        98,
                        99,
                        100
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'testNullDict')": [
                        112,
                        113,
                        114,
                        115,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'testCustomPatternAndAlphaOpt')": [
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'testDummyFactory')": [
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'testCreateDummyFactory')": [
                        217,
                        218,
                        219,
                        220,
                        221,
                        222
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        26,
                        27,
                        28,
                        29
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'createSampleStream')": [
                        50
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'testDefault')": [
                        74,
                        75,
                        76,
                        77,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        95,
                        96,
                        97
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'testNullDict')": [
                        109,
                        110,
                        111,
                        112,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'testCustomPatternAndAlphaOpt')": [
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'testDummyFactory')": [
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'testCreateDummyFactory')": [
                        211,
                        212,
                        213,
                        214,
                        215
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokenizerMETest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        20,
                        21
                    ],
                    "('opennlp.tools.tokenize#TokenizerMETest', 'testTokenizerSimpleModel')": [
                        47,
                        48,
                        49
                    ],
                    "('opennlp.tools.tokenize#TokenizerMETest', 'testTokenizer')": [
                        57,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('opennlp.tools.tokenize#TokenizerMETest', 'testTokenizerSimpleModel')": [
                        45,
                        46,
                        47
                    ],
                    "('opennlp.tools.tokenize#TokenizerMETest', 'testTokenizer')": [
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokenizerModelTest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        24,
                        25
                    ],
                    "('opennlp.tools.tokenize#TokenizerModelTest', 'testSentenceModel')": [
                        35
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerModelTest', 'testSentenceModel')": [
                        32
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokenizerTestUtil.java": {
                "old": {
                    "(None, None)": [
                        18,
                        21,
                        22
                    ],
                    "('opennlp.tools.tokenize#TokenizerTestUtil', 'createMaxentTokenModel')": [
                        71
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        24
                    ],
                    "('opennlp.tools.tokenize#TokenizerTestUtil', 'createMaxentTokenModel')": [
                        70
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/WhitespaceTokenizerTest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        21,
                        22,
                        23
                    ],
                    "('opennlp.tools.tokenize#WhitespaceTokenizerTest', 'testOneToken')": [
                        33,
                        34,
                        35
                    ],
                    "('opennlp.tools.tokenize#WhitespaceTokenizerTest', 'testWhitespaceTokenization')": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        55
                    ],
                    "('opennlp.tools.tokenize#WhitespaceTokenizerTest', 'testTokenizationOfStringWithoutTokens')": [
                        60,
                        61,
                        62,
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('opennlp.tools.tokenize#WhitespaceTokenizerTest', 'testOneToken')": [
                        30,
                        31,
                        32
                    ],
                    "('opennlp.tools.tokenize#WhitespaceTokenizerTest', 'testWhitespaceTokenization')": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        52
                    ],
                    "('opennlp.tools.tokenize#WhitespaceTokenizerTest', 'testTokenizationOfStringWithoutTokens')": [
                        57,
                        58,
                        59,
                        60
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/AbstractEventStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        133
                    ],
                    "('opennlp.tools.util#AbstractEventStreamTest', None)": [
                        43,
                        61,
                        63,
                        64,
                        65,
                        71,
                        72,
                        75,
                        76,
                        79,
                        80,
                        82,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119
                    ],
                    "('opennlp.tools.util#AbstractEventStreamTest', 'testStandardCase')": [
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ],
                    "('opennlp.tools.util#AbstractEventStreamTest', 'testEmtpyEventStream')": [
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.util#AbstractEventStreamTest', None)": [
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        79,
                        80,
                        103,
                        104,
                        105,
                        111,
                        112,
                        115,
                        118,
                        120
                    ],
                    "('opennlp.tools.util#AbstractEventStreamTest', 'testStandardCase')": [
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57
                    ],
                    "('opennlp.tools.util#AbstractEventStreamTest', 'testEmtpyEventStream')": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/ListHeapTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('opennlp.tools.util#ListHeapTest', 'testSimple')": [
                        28,
                        30,
                        31,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        43,
                        44,
                        46,
                        47,
                        49,
                        50,
                        52,
                        53,
                        55,
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('opennlp.tools.util#ListHeapTest', 'testSimple')": [
                        28,
                        31,
                        32,
                        33,
                        34,
                        35,
                        39,
                        40,
                        42,
                        43,
                        45,
                        46,
                        48,
                        49,
                        51,
                        52
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/ParagraphStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('opennlp.tools.util#ParagraphStreamTest', 'testSimpleReading')": [
                        30,
                        41,
                        42,
                        47,
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('opennlp.tools.util#ParagraphStreamTest', 'testSimpleReading')": [
                        39,
                        40,
                        45,
                        46
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/PlainTextByLineStreamTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        23,
                        24
                    ],
                    "('opennlp.tools.util#PlainTextByLineStreamTest', 'testLineSegmentation')": [
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        45,
                        47,
                        48,
                        49,
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        23
                    ],
                    "('opennlp.tools.util#PlainTextByLineStreamTest', 'testLineSegmentation')": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        43,
                        45,
                        46,
                        47,
                        48
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/SequenceTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24
                    ],
                    "('opennlp.tools.util#SequenceTest', 'testCopyConstructor')": [
                        43,
                        44,
                        45
                    ],
                    "('opennlp.tools.util#SequenceTest', 'testAddMethod')": [
                        58,
                        59
                    ],
                    "('opennlp.tools.util#SequenceTest', 'testCompareTo')": [
                        77,
                        78,
                        79
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('opennlp.tools.util#SequenceTest', 'testCopyConstructor')": [
                        39,
                        40,
                        41
                    ],
                    "('opennlp.tools.util#SequenceTest', 'testAddMethod')": [
                        54,
                        55
                    ],
                    "('opennlp.tools.util#SequenceTest', 'testCompareTo')": [
                        73,
                        74
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/SpanTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('opennlp.tools.util#SpanTest', 'testGetStart')": [
                        36
                    ],
                    "('opennlp.tools.util#SpanTest', 'testGetEnd')": [
                        44
                    ],
                    "('opennlp.tools.util#SpanTest', 'testLength')": [
                        52
                    ],
                    "('opennlp.tools.util#SpanTest', 'testContains')": [
                        63
                    ],
                    "('opennlp.tools.util#SpanTest', 'testContainsWithEqual')": [
                        72,
                        73
                    ],
                    "('opennlp.tools.util#SpanTest', 'testContainsWithLowerIntersect')": [
                        83,
                        84
                    ],
                    "('opennlp.tools.util#SpanTest', 'testContainsWithHigherIntersect')": [
                        94,
                        95
                    ],
                    "('opennlp.tools.util#SpanTest', 'testContainsInt')": [
                        110,
                        111,
                        112,
                        113,
                        114
                    ],
                    "('opennlp.tools.util#SpanTest', 'testStartsWith')": [
                        125,
                        126,
                        127,
                        128,
                        129
                    ],
                    "('opennlp.tools.util#SpanTest', 'testIntersects')": [
                        140,
                        141,
                        146,
                        147,
                        148,
                        149
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCrosses')": [
                        160,
                        161,
                        166,
                        167,
                        168,
                        169
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCompareToLower')": [
                        179,
                        180
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCompareToHigher')": [
                        190,
                        191
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCompareToEquals')": [
                        201,
                        202
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCompareToEqualsSameType')": [
                        214,
                        215
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCompareToEqualsDiffType1')": [
                        225,
                        226
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCompareToEqualsDiffType2')": [
                        236,
                        237
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCompareToEqualsNullType1')": [
                        247,
                        248
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCompareToEqualsNullType2')": [
                        258,
                        259
                    ],
                    "('opennlp.tools.util#SpanTest', None)": [
                        260,
                        261,
                        262
                    ],
                    "('opennlp.tools.util#SpanTest', 'testhHashCode')": [
                        269
                    ],
                    "('opennlp.tools.util#SpanTest', 'testEqualsWithNull')": [
                        278,
                        279
                    ],
                    "('opennlp.tools.util#SpanTest', 'testEquals')": [
                        289,
                        290,
                        294,
                        298,
                        301,
                        302,
                        303
                    ],
                    "('opennlp.tools.util#SpanTest', 'testTrim')": [
                        319
                    ],
                    "('opennlp.tools.util#SpanTest', 'testTrimWhitespaceSpan')": [
                        326
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('opennlp.tools.util#SpanTest', 'testGetStart')": [
                        33
                    ],
                    "('opennlp.tools.util#SpanTest', 'testGetEnd')": [
                        41
                    ],
                    "('opennlp.tools.util#SpanTest', 'testLength')": [
                        49
                    ],
                    "('opennlp.tools.util#SpanTest', 'testContains')": [
                        60
                    ],
                    "('opennlp.tools.util#SpanTest', 'testContainsWithEqual')": [
                        69
                    ],
                    "('opennlp.tools.util#SpanTest', 'testContainsWithLowerIntersect')": [
                        79
                    ],
                    "('opennlp.tools.util#SpanTest', 'testContainsWithHigherIntersect')": [
                        89
                    ],
                    "('opennlp.tools.util#SpanTest', 'testContainsInt')": [
                        104,
                        105,
                        106,
                        107,
                        108
                    ],
                    "('opennlp.tools.util#SpanTest', 'testStartsWith')": [
                        119,
                        120,
                        121
                    ],
                    "('opennlp.tools.util#SpanTest', 'testIntersects')": [
                        132,
                        133,
                        138,
                        139,
                        140
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCrosses')": [
                        151,
                        152,
                        157,
                        158,
                        159
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCompareToLower')": [
                        169
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCompareToHigher')": [
                        179
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCompareToEquals')": [
                        189
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCompareToEqualsSameType')": [
                        201
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCompareToEqualsDiffType1')": [
                        211
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCompareToEqualsDiffType2')": [
                        221
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCompareToEqualsNullType1')": [
                        231
                    ],
                    "('opennlp.tools.util#SpanTest', 'testCompareToEqualsNullType2')": [
                        241
                    ],
                    "('opennlp.tools.util#SpanTest', None)": [
                        242
                    ],
                    "('opennlp.tools.util#SpanTest', 'testhHashCode')": [
                        249
                    ],
                    "('opennlp.tools.util#SpanTest', 'testEqualsWithNull')": [
                        258
                    ],
                    "('opennlp.tools.util#SpanTest', 'testEquals')": [
                        268,
                        272,
                        276,
                        279,
                        280
                    ],
                    "('opennlp.tools.util#SpanTest', 'testTrim')": [
                        296
                    ],
                    "('opennlp.tools.util#SpanTest', 'testTrimWhitespaceSpan')": [
                        303
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/StringListTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('opennlp.tools.util#StringListTest', 'testGetToken')": [
                        39,
                        40,
                        41,
                        42,
                        43
                    ],
                    "('opennlp.tools.util#StringListTest', 'testItertor')": [
                        50,
                        52,
                        54,
                        55,
                        56,
                        57,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "('opennlp.tools.util#StringListTest', 'testCompareToIgnoreCase')": [
                        80
                    ],
                    "('opennlp.tools.util#StringListTest', 'testEquals')": [
                        89,
                        92
                    ],
                    "('opennlp.tools.util#StringListTest', 'testHashCode')": [
                        101
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('opennlp.tools.util#StringListTest', 'testGetToken')": [
                        36,
                        37,
                        38
                    ],
                    "('opennlp.tools.util#StringListTest', 'testIterator')": [
                        45,
                        48,
                        49,
                        50,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62
                    ],
                    "('opennlp.tools.util#StringListTest', 'testCompareToIgnoreCase')": [
                        70
                    ],
                    "('opennlp.tools.util#StringListTest', 'testEquals')": [
                        79,
                        82
                    ],
                    "('opennlp.tools.util#StringListTest', 'testHashCode')": [
                        91
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/StringUtilTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ],
                    "('opennlp.tools.util#StringUtilTest', 'testNoBreakSpace')": [
                        32,
                        33,
                        34,
                        36,
                        37,
                        38
                    ],
                    "('opennlp.tools.util#StringUtilTest', 'testToLowerCase')": [
                        43,
                        44
                    ],
                    "('opennlp.tools.util#StringUtilTest', 'testToUpperCase')": [
                        49,
                        50
                    ],
                    "('opennlp.tools.util#StringUtilTest', 'testIsEmpty')": [
                        55,
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('opennlp.tools.util#StringUtilTest', 'testNoBreakSpace')": [
                        30,
                        31,
                        32,
                        34,
                        35,
                        36
                    ],
                    "('opennlp.tools.util#StringUtilTest', 'testToLowerCase')": [
                        41,
                        42
                    ],
                    "('opennlp.tools.util#StringUtilTest', 'testToUpperCase')": [
                        47,
                        48
                    ],
                    "('opennlp.tools.util#StringUtilTest', 'testIsEmpty')": [
                        53,
                        54
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/VersionTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ],
                    "('opennlp.tools.util#VersionTest', 'testParse')": [
                        33,
                        35,
                        36
                    ],
                    "('opennlp.tools.util#VersionTest', 'testParseSnapshot')": [
                        41,
                        42
                    ],
                    "('opennlp.tools.util#VersionTest', 'testParseInvalidVersion')": [
                        54
                    ],
                    "('opennlp.tools.util#VersionTest', 'testParseInvalidVersion2')": [
                        66
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('opennlp.tools.util#VersionTest', 'testParse')": [
                        31,
                        33,
                        34,
                        35,
                        36
                    ],
                    "('opennlp.tools.util#VersionTest', 'testParseSnapshot')": [
                        41,
                        42,
                        43,
                        44
                    ],
                    "('opennlp.tools.util#VersionTest', 'testParseInvalidVersion')": [
                        56
                    ],
                    "('opennlp.tools.util#VersionTest', 'testParseInvalidVersion2')": [
                        68
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/eval/CrossValidationPartitionerTest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        36,
                        37
                    ],
                    "('opennlp.tools.util.eval#CrossValidationPartitionerTest', 'testEmptyDataSet')": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        64
                    ],
                    "('opennlp.tools.util.eval#CrossValidationPartitionerTest', 'test3FoldCV')": [
                        76,
                        88,
                        91,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        104,
                        105,
                        106,
                        107,
                        108,
                        111,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        126,
                        127,
                        128,
                        129,
                        132,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151
                    ],
                    "('opennlp.tools.util.eval#CrossValidationPartitionerTest', 'testFailSafty')": [
                        156,
                        162,
                        167,
                        173,
                        181,
                        192,
                        203,
                        208
                    ],
                    "('opennlp.tools.util.eval#CrossValidationPartitionerTest', 'testToString')": [
                        218
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29
                    ],
                    "('opennlp.tools.util.eval#CrossValidationPartitionerTest', 'testEmptyDataSet')": [
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        58
                    ],
                    "('opennlp.tools.util.eval#CrossValidationPartitionerTest', 'test3FoldCV')": [
                        70,
                        82,
                        85,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        98,
                        99,
                        100,
                        101,
                        102,
                        105,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        120,
                        121,
                        122,
                        123,
                        126,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145
                    ],
                    "('opennlp.tools.util.eval#CrossValidationPartitionerTest', 'testFailSafty')": [
                        150,
                        156,
                        157,
                        162,
                        168,
                        176,
                        187,
                        198,
                        203
                    ],
                    "('opennlp.tools.util.eval#CrossValidationPartitionerTest', 'testToString')": [
                        213
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/eval/FMeasureTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22,
                        23
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', None)": [
                        77
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testCountTruePositives')": [
                        83,
                        84,
                        85,
                        86
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testPrecision')": [
                        94,
                        95,
                        96,
                        97,
                        98
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testRecall')": [
                        106,
                        107,
                        108,
                        109,
                        110
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testEmpty')": [
                        116,
                        117,
                        118
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testPerfect')": [
                        125,
                        126,
                        127
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testMerge')": [
                        151,
                        152,
                        154,
                        155
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testCountTruePositives')": [
                        82,
                        83,
                        84,
                        85
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testPrecision')": [
                        93,
                        94,
                        95,
                        96,
                        97
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testRecall')": [
                        105,
                        106,
                        107,
                        108,
                        109
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testEmpty')": [
                        115,
                        116,
                        117
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testPerfect')": [
                        124,
                        125,
                        126
                    ],
                    "('opennlp.tools.util.eval#FMeasureTest', 'testMerge')": [
                        150,
                        151,
                        153,
                        154
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/eval/MeanTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('opennlp.tools.util.eval#MeanTest', 'testMeanCalculation')": [
                        33,
                        34,
                        37,
                        38,
                        43,
                        44,
                        47,
                        48,
                        52,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('opennlp.tools.util.eval#MeanTest', 'testMeanCalculation')": [
                        32,
                        33,
                        36,
                        37,
                        42,
                        43,
                        46,
                        47,
                        51,
                        52
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/ext/ExtensionLoaderTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/featuregen/CachedFeatureGeneratorTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ],
                    "('opennlp.tools.util.featuregen#CachedFeatureGeneratorTest', 'setUp')": [
                        50
                    ],
                    "('opennlp.tools.util.featuregen#CachedFeatureGeneratorTest', 'testCachingOfSentence')": [
                        65,
                        66,
                        68,
                        80,
                        81,
                        83,
                        84,
                        85,
                        95,
                        96,
                        97,
                        98,
                        106
                    ],
                    "('opennlp.tools.util.featuregen#CachedFeatureGeneratorTest', 'testCacheClearAfterSentenceChange')": [
                        126,
                        127,
                        129,
                        130,
                        131,
                        142,
                        143,
                        144
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.util.featuregen#CachedFeatureGeneratorTest', 'setUp')": [
                        48
                    ],
                    "('opennlp.tools.util.featuregen#CachedFeatureGeneratorTest', 'testCachingOfSentence')": [
                        63,
                        64,
                        66,
                        78,
                        79,
                        81,
                        82,
                        92,
                        93,
                        94,
                        102
                    ],
                    "('opennlp.tools.util.featuregen#CachedFeatureGeneratorTest', 'testCacheClearAfterSentenceChange')": [
                        122,
                        123,
                        125,
                        126,
                        137,
                        138
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/featuregen/GeneratorFactoryTest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        20,
                        21,
                        22,
                        23,
                        34,
                        35
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactoryTest', 'testCreationWithTokenClassFeatureGenerator')": [
                        46,
                        51,
                        52
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactoryTest', 'testCreationWihtSimpleDescriptor')": [
                        64,
                        66,
                        83
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactoryTest', 'testCreationWithCustomGenerator')": [
                        93,
                        100,
                        103
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactoryTest', 'testArtifactToSerializerMappingExtraction')": [
                        129
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        28
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactoryTest', 'testCreationWithTokenClassFeatureGenerator')": [
                        42,
                        47,
                        48
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactoryTest', 'testCreationWihtSimpleDescriptor')": [
                        60,
                        62,
                        79
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactoryTest', 'testCreationWithCustomGenerator')": [
                        89,
                        96,
                        99
                    ],
                    "('opennlp.tools.util.featuregen#GeneratorFactoryTest', 'testArtifactToSerializerMappingExtraction')": [
                        125
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/featuregen/PreviousMapFeatureGeneratorTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('opennlp.tools.util.featuregen#PreviousMapFeatureGeneratorTest', 'testFeatureGeneration')": [
                        39,
                        43,
                        44,
                        51,
                        52,
                        60,
                        61
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.util.featuregen#PreviousMapFeatureGeneratorTest', 'testFeatureGeneration')": [
                        38,
                        42,
                        43,
                        50,
                        51,
                        59,
                        60
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/featuregen/StringPatternTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testIsAllLetters')": [
                        30,
                        31,
                        32,
                        33,
                        34
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testIsInitialCapitalLetter')": [
                        39,
                        40,
                        41,
                        42
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testIsAllCapitalLetter')": [
                        47,
                        48,
                        49,
                        50
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testIsAllLowerCaseLetter')": [
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testIsAllDigit')": [
                        66,
                        67,
                        68
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testDigits')": [
                        73,
                        74,
                        75
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testContainsPeriod')": [
                        80,
                        81,
                        82
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testContainsComma')": [
                        87,
                        88,
                        89
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testContainsSlash')": [
                        94,
                        95,
                        96
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testContainsDigit')": [
                        101,
                        102,
                        103
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testContainsHyphen')": [
                        108,
                        109,
                        110
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testContainsLetters')": [
                        115,
                        116,
                        117
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testIsAllLetters')": [
                        27,
                        28,
                        29,
                        30,
                        31
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testIsInitialCapitalLetter')": [
                        36,
                        37,
                        38,
                        39
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testIsAllCapitalLetter')": [
                        44,
                        45,
                        46,
                        47
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testIsAllLowerCaseLetter')": [
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testIsAllDigit')": [
                        63,
                        64,
                        65
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testDigits')": [
                        70,
                        71,
                        72
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testContainsPeriod')": [
                        77,
                        78,
                        79
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testContainsComma')": [
                        84,
                        85,
                        86
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testContainsSlash')": [
                        91,
                        92,
                        93
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testContainsDigit')": [
                        98,
                        99,
                        100
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testContainsHyphen')": [
                        105,
                        106,
                        107
                    ],
                    "('opennlp.tools.util.featuregen#StringPatternTest', 'testContainsLetters')": [
                        112,
                        113,
                        114
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/featuregen/WindowFeatureGeneratorTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ],
                    "('opennlp.tools.util.featuregen#WindowFeatureGeneratorTest', 'setUp')": [
                        41
                    ],
                    "('opennlp.tools.util.featuregen#WindowFeatureGeneratorTest', 'testWithoutWindow')": [
                        58,
                        60
                    ],
                    "('opennlp.tools.util.featuregen#WindowFeatureGeneratorTest', 'testWindowSizeOne')": [
                        72
                    ],
                    "('opennlp.tools.util.featuregen#WindowFeatureGeneratorTest', 'testWindowAtBeginOfSentence')": [
                        81,
                        83,
                        84,
                        85,
                        86
                    ],
                    "('opennlp.tools.util.featuregen#WindowFeatureGeneratorTest', 'testWindowAtEndOfSentence')": [
                        95,
                        97,
                        98,
                        99,
                        100
                    ],
                    "('opennlp.tools.util.featuregen#WindowFeatureGeneratorTest', 'testForCorrectFeatures')": [
                        113,
                        114,
                        115,
                        116,
                        117,
                        119,
                        122,
                        124,
                        126
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.util.featuregen#WindowFeatureGeneratorTest', 'setUp')": [
                        39
                    ],
                    "('opennlp.tools.util.featuregen#WindowFeatureGeneratorTest', 'testWithoutWindow')": [
                        56,
                        58
                    ],
                    "('opennlp.tools.util.featuregen#WindowFeatureGeneratorTest', 'testWindowSizeOne')": [
                        70
                    ],
                    "('opennlp.tools.util.featuregen#WindowFeatureGeneratorTest', 'testWindowAtBeginOfSentence')": [
                        80,
                        81
                    ],
                    "('opennlp.tools.util.featuregen#WindowFeatureGeneratorTest', 'testWindowAtEndOfSentence')": [
                        91,
                        92
                    ],
                    "('opennlp.tools.util.featuregen#WindowFeatureGeneratorTest', 'testForCorrectFeatures')": [
                        104,
                        105,
                        107,
                        109,
                        112,
                        114,
                        116
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/chunker/Chunker.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        56,
                        57,
                        58,
                        59
                    ],
                    "('opennlp.uima.chunker#Chunker', None)": [
                        90,
                        100
                    ],
                    "('opennlp.uima.chunker#Chunker', 'initialize(UimaContext)')": [
                        123,
                        124
                    ],
                    "('opennlp.uima.chunker#Chunker', 'addChunkAnnotation(CAS,AnnotationFS,String,int,int)')": [
                        155
                    ],
                    "('opennlp.uima.chunker#Chunker', 'process(CAS)')": [
                        174,
                        204,
                        205,
                        207,
                        208,
                        216,
                        217
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        35,
                        36,
                        37,
                        38,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        56,
                        57,
                        58,
                        59
                    ],
                    "('opennlp.uima.chunker#Chunker', None)": [
                        90,
                        100
                    ],
                    "('opennlp.uima.chunker#Chunker', 'initialize(UimaContext)')": [
                        123
                    ],
                    "('opennlp.uima.chunker#Chunker', 'addChunkAnnotation(CAS,AnnotationFS,String,int,int)')": [
                        154
                    ],
                    "('opennlp.uima.chunker#Chunker', 'process(CAS)')": [
                        173,
                        203,
                        205,
                        213
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/chunker/ChunkerTrainer.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ],
                    "('opennlp.uima.chunker#ChunkerTrainer', 'collectionProcessComplete(ProcessTrace)')": [
                        215
                    ]
                },
                "new": {
                    "(None, None)": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ],
                    "('opennlp.uima.chunker#ChunkerTrainer', 'collectionProcessComplete(ProcessTrace)')": [
                        215
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/dictionary/DictionaryResourceImpl.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/doccat/AbstractDocumentCategorizer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24
                    ],
                    "('opennlp.uima.doccat#AbstractDocumentCategorizer', 'process(CAS)')": [
                        94,
                        95
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        33,
                        34
                    ],
                    "('opennlp.uima.doccat#AbstractDocumentCategorizer', 'process(CAS)')": [
                        94
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/doccat/DocumentCategorizer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        32
                    ],
                    "('opennlp.uima.doccat#DocumentCategorizer', None)": [
                        40
                    ],
                    "('opennlp.uima.doccat#DocumentCategorizer', 'setBestCategory(CAS,String)')": [
                        63,
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        32
                    ],
                    "('opennlp.uima.doccat#DocumentCategorizer', 'setBestCategory(CAS,String)')": [
                        62
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/doccat/DocumentCategorizerTrainer.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        52
                    ],
                    "('opennlp.uima.doccat#DocumentCategorizerTrainer', 'processCas(CAS)')": [
                        117
                    ],
                    "('opennlp.uima.doccat#DocumentCategorizerTrainer', 'collectionProcessComplete(ProcessTrace)')": [
                        140
                    ]
                },
                "new": {
                    "(None, None)": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        52
                    ],
                    "('opennlp.uima.doccat#DocumentCategorizerTrainer', 'processCas(CAS)')": [
                        117
                    ],
                    "('opennlp.uima.doccat#DocumentCategorizerTrainer', 'collectionProcessComplete(ProcessTrace)')": [
                        140
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/namefind/DictionaryNameFinder.java": {
                "old": {
                    "(None, None)": [
                        29,
                        30,
                        31,
                        32
                    ],
                    "('opennlp.uima.namefind#DictionaryNameFinder', None)": [
                        39,
                        44,
                        49
                    ],
                    "('opennlp.uima.namefind#DictionaryNameFinder', 'initialize')": [
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26
                    ],
                    "('opennlp.uima.namefind#DictionaryNameFinder', None)": [
                        40,
                        45,
                        50
                    ],
                    "('opennlp.uima.namefind#DictionaryNameFinder', 'initialize')": [
                        77
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/namefind/NameFinder.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60
                    ],
                    "('opennlp.uima.namefind#NameFinder', None)": [
                        103,
                        113
                    ],
                    "('opennlp.uima.namefind#NameFinder', 'initialize')": [
                        125,
                        128,
                        129
                    ],
                    "('opennlp.uima.namefind#NameFinder', 'postProcessAnnotations(Span,AnnotationFS)')": [
                        171
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59
                    ],
                    "('opennlp.uima.namefind#NameFinder', None)": [
                        102,
                        112
                    ],
                    "('opennlp.uima.namefind#NameFinder', 'initialize')": [
                        124,
                        127
                    ],
                    "('opennlp.uima.namefind#NameFinder', 'postProcessAnnotations(Span,AnnotationFS)')": [
                        169
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/normalizer/Normalizer.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        49,
                        51,
                        55,
                        56
                    ],
                    "('opennlp.uima.normalizer#Normalizer', None)": [
                        92,
                        104,
                        114
                    ],
                    "('opennlp.uima.normalizer#Normalizer', 'typeSystemInit(TypeSystem)')": [
                        170
                    ]
                },
                "new": {
                    "(None, None)": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        49,
                        51,
                        55,
                        56
                    ],
                    "('opennlp.uima.normalizer#Normalizer', None)": [
                        92,
                        104,
                        114
                    ],
                    "('opennlp.uima.normalizer#Normalizer', 'typeSystemInit(TypeSystem)')": [
                        170
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/parser/Parser.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        65,
                        66,
                        67,
                        340
                    ],
                    "('opennlp.uima.parser#Parser', None)": [
                        74,
                        76,
                        77,
                        112,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        225,
                        226,
                        227,
                        228,
                        229,
                        250,
                        251,
                        252,
                        253,
                        254,
                        260,
                        261,
                        262,
                        304,
                        305,
                        306,
                        333,
                        334,
                        335,
                        336,
                        337
                    ],
                    "('opennlp.uima.parser#Parser', 'initialize(UimaContext)')": [
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224
                    ],
                    "('opennlp.uima.parser#Parser', 'typeSystemInit(TypeSystem)')": [
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249
                    ],
                    "('opennlp.uima.parser#Parser', 'process(CAS)')": [
                        255,
                        256,
                        257,
                        258,
                        259
                    ],
                    "('opennlp.uima.parser#Parser', 'process(CAS,AnnotationFS)')": [
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303
                    ],
                    "('opennlp.uima.parser#Parser', 'createAnnotation(CAS,int,Parse)')": [
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332
                    ],
                    "('opennlp.uima.parser#Parser', 'destroy')": [
                        338,
                        339
                    ]
                },
                "new": {
                    "(None, None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        65,
                        66,
                        67
                    ],
                    "('opennlp.uima.parser#Parser', None)": [
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        118,
                        119,
                        120,
                        121,
                        122,
                        143,
                        144,
                        145,
                        146,
                        147,
                        153,
                        154,
                        155,
                        197,
                        198,
                        199,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        234,
                        235,
                        237,
                        274,
                        276
                    ],
                    "('opennlp.uima.parser#Parser', 'initialize(UimaContext)')": [
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117
                    ],
                    "('opennlp.uima.parser#Parser', 'typeSystemInit(TypeSystem)')": [
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142
                    ],
                    "('opennlp.uima.parser#Parser', 'process(CAS)')": [
                        148,
                        149,
                        150,
                        151,
                        152
                    ],
                    "('opennlp.uima.parser#Parser', 'process(CAS,AnnotationFS)')": [
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196
                    ],
                    "('opennlp.uima.parser#Parser', 'createAnnotation(CAS,int,Parse)')": [
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225
                    ],
                    "('opennlp.uima.parser#Parser', 'destroy')": [
                        232,
                        233
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/postag/POSTagger.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ],
                    "('opennlp.uima.postag#POSTagger', None)": [
                        87,
                        97
                    ],
                    "('opennlp.uima.postag#POSTagger', 'initialize(UimaContext)')": [
                        129
                    ],
                    "('opennlp.uima.postag#POSTagger', 'process(CAS)')": [
                        180
                    ]
                },
                "new": {
                    "(None, None)": [
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ],
                    "('opennlp.uima.postag#POSTagger', None)": [
                        87,
                        97
                    ],
                    "('opennlp.uima.postag#POSTagger', 'initialize(UimaContext)')": [
                        129,
                        131
                    ],
                    "('opennlp.uima.postag#POSTagger', 'process(CAS)')": [
                        181,
                        222,
                        224
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/postag/POSTaggerTrainer.java": {
                "old": {
                    "(None, None)": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65
                    ],
                    "('opennlp.uima.postag#POSTaggerTrainer', 'collectionProcessComplete(ProcessTrace)')": [
                        213
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67
                    ],
                    "('opennlp.uima.postag#POSTaggerTrainer', 'collectionProcessComplete(ProcessTrace)')": [
                        215
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/sentdetect/AbstractSentenceDetector.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32,
                        33,
                        34
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/sentdetect/SentenceDetector.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        40,
                        41,
                        42,
                        43,
                        48,
                        49,
                        50,
                        51,
                        52
                    ],
                    "('opennlp.uima.sentdetect#SentenceDetector', None)": [
                        66,
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        40,
                        41,
                        42,
                        43,
                        48,
                        49,
                        50,
                        51,
                        52
                    ],
                    "('opennlp.uima.sentdetect#SentenceDetector', None)": [
                        66,
                        76
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/sentdetect/SentenceDetectorTrainer.java": {
                "old": {
                    "(None, None)": [
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ],
                    "('opennlp.uima.sentdetect#SentenceDetectorTrainer', 'initialize')": [
                        116
                    ],
                    "('opennlp.uima.sentdetect#SentenceDetectorTrainer', 'typeSystemInit(TypeSystem)')": [
                        134
                    ],
                    "('opennlp.uima.sentdetect#SentenceDetectorTrainer', 'collectionProcessComplete(ProcessTrace)')": [
                        171,
                        185,
                        193
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ],
                    "('opennlp.uima.sentdetect#SentenceDetectorTrainer', 'initialize')": [
                        116
                    ],
                    "('opennlp.uima.sentdetect#SentenceDetectorTrainer', 'typeSystemInit(TypeSystem)')": [
                        134
                    ],
                    "('opennlp.uima.sentdetect#SentenceDetectorTrainer', 'collectionProcessComplete(ProcessTrace)')": [
                        171,
                        185,
                        193
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/tokenize/AbstractTokenizer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('opennlp.uima.tokenize#AbstractTokenizer', 'postProcessAnnotations(Span,AnnotationFS)')": [
                        95
                    ],
                    "('opennlp.uima.tokenize#AbstractTokenizer', 'process(CAS)')": [
                        106
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32,
                        33,
                        34
                    ],
                    "('opennlp.uima.tokenize#AbstractTokenizer', 'postProcessAnnotations(Span,AnnotationFS)')": [
                        95
                    ],
                    "('opennlp.uima.tokenize#AbstractTokenizer', 'process(CAS)')": [
                        106,
                        108
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/tokenize/SimpleTokenizer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        31,
                        32,
                        33,
                        34
                    ],
                    "('opennlp.uima.tokenize#SimpleTokenizer', None)": [
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        31,
                        32,
                        33,
                        34
                    ],
                    "('opennlp.uima.tokenize#SimpleTokenizer', None)": [
                        47
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/tokenize/Tokenizer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        40,
                        41,
                        42,
                        43,
                        44,
                        49,
                        50,
                        51,
                        52
                    ],
                    "('opennlp.uima.tokenize#Tokenizer', None)": [
                        68,
                        80
                    ],
                    "('opennlp.uima.tokenize#Tokenizer', 'postProcessAnnotations(Span,AnnotationFS)')": [
                        123
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        40,
                        41,
                        42,
                        43,
                        44,
                        49,
                        50,
                        51,
                        52
                    ],
                    "('opennlp.uima.tokenize#Tokenizer', None)": [
                        68,
                        80
                    ],
                    "('opennlp.uima.tokenize#Tokenizer', 'postProcessAnnotations(Span,AnnotationFS)')": [
                        123
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/tokenize/TokenizerModelResource.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/tokenize/TokenizerTrainer.java": {
                "old": {
                    "(None, None)": [
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        68,
                        69,
                        70,
                        71,
                        72,
                        77,
                        78,
                        79
                    ],
                    "('opennlp.uima.tokenize#TokenizerTrainer', 'initialize')": [
                        138,
                        154
                    ],
                    "('opennlp.uima.tokenize#TokenizerTrainer', 'collectionProcessComplete(ProcessTrace)')": [
                        267,
                        268
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        69,
                        70,
                        71,
                        72,
                        73,
                        78,
                        79,
                        80
                    ],
                    "('opennlp.uima.tokenize#TokenizerTrainer', 'initialize')": [
                        139,
                        155
                    ],
                    "('opennlp.uima.tokenize#TokenizerTrainer', 'collectionProcessComplete(ProcessTrace)')": [
                        268,
                        269
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/tokenize/WhitespaceTokenizer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        31,
                        32,
                        33,
                        34
                    ],
                    "('opennlp.uima.tokenize#WhitespaceTokenizer', None)": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        31,
                        32,
                        33,
                        34
                    ],
                    "('opennlp.uima.tokenize#WhitespaceTokenizer', None)": [
                        41
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/util/AnnotatorUtil.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24,
                        27,
                        28
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', None)": [
                        42,
                        52,
                        74,
                        105,
                        107,
                        109,
                        171,
                        191,
                        211,
                        231,
                        307,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        379,
                        408,
                        452
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'checkFeatureType(Feature,String)')": [
                        82,
                        83
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredFeature(Type,String)')": [
                        95,
                        96
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredFeature(Type,String,String)')": [
                        113
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredFeatureParameter(UimaContext,Type,String)')": [
                        123
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredFeatureParameter(UimaContext,Type,String,String)')": [
                        137
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredTypeParameter(UimaContext,TypeSystem,String)')": [
                        151
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredStringParameter(UimaContext,String)')": [
                        175
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredIntegerParameter(UimaContext,String)')": [
                        195
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredFloatParameter(UimaContext,String)')": [
                        215
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredBooleanParameter(UimaContext,String)')": [
                        235
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalFeatureParameter(UimaContext,Type,String,String)')": [
                        257
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalTypeParameter(UimaContext,TypeSystem,String)')": [
                        285,
                        295,
                        297,
                        298
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalStringParameter(UimaContext,String)')": [
                        311,
                        317,
                        318,
                        319,
                        320,
                        321
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalStringArrayParameter(UimaContext,String)')": [
                        330,
                        340,
                        341
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalIntegerParameter(UimaContext,String)')": [
                        355,
                        356,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalFloatParameter(UimaContext,String)')": [
                        383,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalBooleanParameter(UimaContext,String)')": [
                        412,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalParameter(UimaContext,String)')": [
                        431
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getResourceAsStream(UimaContext,String)')": [
                        463,
                        464
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalResourceAsStream(UimaContext,String)')": [
                        471
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'createOptionalDictionary(UimaContext,String)')": [
                        484,
                        524,
                        525
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        34,
                        512
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', None)": [
                        40,
                        99,
                        101,
                        292,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'checkFeatureType(Feature,String)')": [
                        78
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredFeature(Type,String)')": [
                        90
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredFeature(Type,String,String)')": [
                        106,
                        107
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredFeatureParameter(UimaContext,Type,String)')": [
                        117,
                        118
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredFeatureParameter(UimaContext,Type,String,String)')": [
                        132,
                        133
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredTypeParameter(UimaContext,TypeSystem,String)')": [
                        147
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredStringParameter(UimaContext,String)')": [
                        170
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredIntegerParameter(UimaContext,String)')": [
                        189
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredFloatParameter(UimaContext,String)')": [
                        208
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getRequiredBooleanParameter(UimaContext,String)')": [
                        227
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalFeatureParameter(UimaContext,Type,String,String)')": [
                        249,
                        250
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalTypeParameter(UimaContext,TypeSystem,String)')": [
                        278,
                        288,
                        290,
                        291
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalStringParameter(UimaContext,String)')": [
                        304,
                        310,
                        311,
                        312
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalStringArrayParameter(UimaContext,String)')": [
                        321,
                        322,
                        332,
                        333
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalIntegerParameter(UimaContext,String)')": [
                        346,
                        347,
                        348,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalFloatParameter(UimaContext,String)')": [
                        372,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalBooleanParameter(UimaContext,String)')": [
                        398,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalParameter(UimaContext,String)')": [
                        415
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getResourceAsStream(UimaContext,String)')": [
                        446,
                        447
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'getOptionalResourceAsStream(UimaContext,String)')": [
                        454,
                        455,
                        456
                    ],
                    "('opennlp.uima.util#AnnotatorUtil', 'createOptionalDictionary(UimaContext,String)')": [
                        469,
                        470,
                        510,
                        511
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/util/CasConsumerUtil.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24,
                        26
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', None)": [
                        43,
                        66,
                        89,
                        111,
                        125,
                        144,
                        163,
                        182,
                        280,
                        368
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalResourceAsStream(UimaContext,String)')": [
                        48,
                        54,
                        56
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getResourceAsStream(UimaContext,String)')": [
                        70,
                        77
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getType(TypeSystem,String)')": [
                        99
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getRequiredStringParameter(UimaContext,String)')": [
                        129
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getRequiredIntegerParameter(UimaContext,String)')": [
                        148
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getRequiredFloatParameter(UimaContext,String)')": [
                        167
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getRequiredBooleanParameter(UimaContext,String)')": [
                        186
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'checkForNull(Object,String)')": [
                        201
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalStringParameter(UimaContext,String)')": [
                        214,
                        220,
                        221,
                        223,
                        224,
                        225,
                        226,
                        227
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalStringArrayParameter(UimaContext,String)')": [
                        232,
                        243,
                        244
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalIntegerParameter(UimaContext,String)')": [
                        257,
                        263,
                        264,
                        266,
                        267,
                        268,
                        269,
                        270
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalIntegerParameter(UimaContext,String,int)')": [
                        285,
                        289
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalFloatParameter(UimaContext,String)')": [
                        304,
                        310,
                        311,
                        313,
                        314,
                        315,
                        316,
                        317
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalBooleanParameter(UimaContext,String)')": [
                        330,
                        336,
                        337,
                        339,
                        340,
                        341,
                        342,
                        343
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalParameter(UimaContext,String)')": [
                        348,
                        349,
                        350
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'checkFeatureType(Feature,String)')": [
                        376
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'createOptionalDictionary(UimaContext,String)')": [
                        422
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        33,
                        36,
                        409
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', None)": [
                        43
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalResourceAsStream(UimaContext,String)')": [
                        48,
                        54,
                        56
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getResourceAsStream(UimaContext,String)')": [
                        69,
                        76
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getType(TypeSystem,String)')": [
                        97
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getRequiredStringParameter(UimaContext,String)')": [
                        125
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getRequiredIntegerParameter(UimaContext,String)')": [
                        143
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getRequiredFloatParameter(UimaContext,String)')": [
                        161
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getRequiredBooleanParameter(UimaContext,String)')": [
                        179
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'checkForNull(Object,String)')": [
                        194
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalStringParameter(UimaContext,String)')": [
                        207,
                        213,
                        215,
                        216,
                        217,
                        218
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalStringArrayParameter(UimaContext,String)')": [
                        223,
                        224,
                        235,
                        236
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalIntegerParameter(UimaContext,String)')": [
                        249,
                        255,
                        257,
                        258,
                        259,
                        260
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalIntegerParameter(UimaContext,String,int)')": [
                        274,
                        278,
                        280
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalFloatParameter(UimaContext,String)')": [
                        294,
                        300,
                        302,
                        303,
                        304,
                        305
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalBooleanParameter(UimaContext,String)')": [
                        318,
                        324,
                        326,
                        327,
                        328,
                        329
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'getOptionalParameter(UimaContext,String)')": [
                        334,
                        335,
                        336
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'checkFeatureType(Feature,String)')": [
                        361
                    ],
                    "('opennlp.uima.util#CasConsumerUtil', 'createOptionalDictionary(UimaContext,String)')": [
                        407
                    ]
                }
            },
            "opennlp-uima/src/test/java/opennlp/uima/AnnotatorsInitializationTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('opennlp.uima#AnnotatorsInitializationTest', 'testInitializationExecutionAndReconfigure')": [
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        31
                    ],
                    "('opennlp.uima#AnnotatorsInitializationTest', 'testInitializationExecutionAndReconfigure')": [
                        54
                    ]
                }
            },
            "opennlp-uima/src/test/java/opennlp/uima/dictionary/DictionaryResourceTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        121,
                        122
                    ],
                    "('opennlp.uima.dictionary#DictionaryResourceTest', 'testDictionaryWasLoaded')": [
                        70,
                        74,
                        76,
                        79
                    ],
                    "('opennlp.uima.dictionary#DictionaryResourceTest', 'testDictionaryNameFinder')": [
                        102,
                        106,
                        109
                    ],
                    "('opennlp.uima.dictionary#DictionaryResourceTest', 'produceAE(String)')": [
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        38
                    ],
                    "('opennlp.uima.dictionary#DictionaryResourceTest', 'produceAE(String)')": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67
                    ],
                    "('opennlp.uima.dictionary#DictionaryResourceTest', None)": [
                        68,
                        69
                    ],
                    "('opennlp.uima.dictionary#DictionaryResourceTest', 'testDictionaryWasLoaded')": [
                        77,
                        81,
                        83,
                        86
                    ],
                    "('opennlp.uima.dictionary#DictionaryResourceTest', 'testDictionaryNameFinder')": [
                        109,
                        113,
                        116
                    ]
                }
            },
            "opennlp-uima/src/test/java/opennlp/uima/util/AnnotationComboIteratorTest.java": {
                "old": {
                    "('opennlp.uima.util#AnnotationComboIteratorTest', 'OPENNLP_676')": [
                        73
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        29
                    ],
                    "('opennlp.uima.util#AnnotationComboIteratorTest', 'OPENNLP_676')": [
                        75
                    ]
                }
            },
            "opennlp-uima/src/test/java/opennlp/uima/util/CasUtil.java": {
                "new": {
                    "(None, None)": [
                        41
                    ]
                }
            }
        }
    },
    "10ec5a35b13963b953d3c6a9d8321dcecf11fb3f": {
        "authored_data": "2017 Jan 19 01:02",
        "commit.message": "OPENNLP-927: Removed PluggableParameter\n\nFixes OPENNLP-927\nCloses apache/opennlp#55\n",
        "commit.author.name": "Daniel Russ",
        "pcid": "4a10030ee78ea8da944f6d52e3c671799d73b5d2",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/ml/AbstractEventModelSequenceTrainer.java": {
                "old": {
                    "('opennlp.tools.ml#AbstractEventModelSequenceTrainer', 'train(SequenceStream)')": [
                        41
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#AbstractEventModelSequenceTrainer', 'train(SequenceStream)')": [
                        41
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/AbstractEventTrainer.java": {
                "old": {
                    "('opennlp.tools.ml#AbstractEventTrainer', 'isValid')": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'getDataIndexer(ObjectStream)')": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        82
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'train(DataIndexer)')": [
                        94
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', None)": [
                        39,
                        40,
                        41
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'isValid')": [
                        51
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'getDataIndexer(ObjectStream)')": [
                        59,
                        60,
                        61,
                        62,
                        64,
                        65
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', 'train(DataIndexer)')": [
                        77
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/AbstractSequenceTrainer.java": {
                "old": {
                    "('opennlp.tools.ml#AbstractSequenceTrainer', 'train(SequenceStream)')": [
                        41
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#AbstractSequenceTrainer', 'train(SequenceStream)')": [
                        41
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/AbstractTrainer.java": {
                "old": {
                    "('opennlp.tools.ml#AbstractTrainer', None)": [
                        38,
                        39,
                        77,
                        117,
                        121
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'init(Map,Map)')": [
                        45
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getAlgorithm')": [
                        49
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getCutoff')": [
                        53
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getIterations')": [
                        57
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'isValid')": [
                        67,
                        68,
                        72
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getStringParam(String,String)')": [
                        83
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getIntParam(String,int)')": [
                        92,
                        93
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getDoubleParam(String,double)')": [
                        103
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getBooleanParam(String,boolean)')": [
                        113
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'addToReport(String,String)')": [
                        123
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        24
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', None)": [
                        40,
                        41,
                        42,
                        51,
                        52,
                        86,
                        126
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'init(TrainingParameters,Map)')": [
                        47,
                        48,
                        49,
                        50
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'init(Map,Map)')": [
                        54
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getAlgorithm')": [
                        58
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getCutoff')": [
                        62
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getIterations')": [
                        66
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'isValid')": [
                        76,
                        77,
                        81
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getStringParam(String,String)')": [
                        92
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'TrainingParameters(String,int)')": [
                        101,
                        102
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getDoubleParam(String,double)')": [
                        112
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'getBooleanParam(String,boolean)')": [
                        122
                    ],
                    "('opennlp.tools.ml#AbstractTrainer', 'addToReport(String,String)')": [
                        131
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GIS.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GIS', 'doTrain(DataIndexer)')": [
                        81,
                        82,
                        83
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#GIS', 'doTrain(DataIndexer)')": [
                        81,
                        82,
                        83
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GISTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(ObjectStream,int,int)')": [
                        201,
                        202,
                        203,
                        204
                    ]
                },
                "new": {
                    "(None, None)": [
                        40
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', None)": [
                        139,
                        140,
                        141
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(ObjectStream,int,int)')": [
                        205,
                        206,
                        207,
                        208,
                        209
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/QNTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainer', 'init(Map,Map)')": [
                        102,
                        103,
                        104,
                        105,
                        106,
                        107
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainer', 'init(TrainingParameters,Map)')": [
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainer', None)": [
                        109,
                        110,
                        111
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainer', 'init(Map,Map)')": [
                        113
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractDataIndexer.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.ml.model#AbstractDataIndexer', None)": [
                        44,
                        45
                    ],
                    "('opennlp.tools.ml.model#AbstractDataIndexer', 'init(Map,Map)')": [
                        46,
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        30
                    ],
                    "('opennlp.tools.ml.model#AbstractDataIndexer', None)": [
                        45,
                        46,
                        47
                    ],
                    "('opennlp.tools.ml.model#AbstractDataIndexer', 'init(TrainingParameters,Map)')": [
                        48,
                        49,
                        50,
                        51
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/DataIndexer.java": {
                "old": {
                    "(None, None)": [
                        79,
                        83,
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        80,
                        85
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/OnePassDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'index(ObjectStream)')": [
                        102,
                        103
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#OnePassDataIndexer', 'index(ObjectStream)')": [
                        102,
                        103
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/TwoPassDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'index(ObjectStream)')": [
                        115,
                        116
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'index(ObjectStream)')": [
                        115,
                        116
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/PerceptronTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'doTrain(DataIndexer)')": [
                        106,
                        107,
                        108,
                        114,
                        115,
                        116
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', 'doTrain(DataIndexer)')": [
                        106,
                        107,
                        108,
                        114,
                        115,
                        116
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/SimplePerceptronSequenceTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'doTrain(SequenceStream)')": [
                        107
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainModel(int,SequenceStream,int,boolean)')": [
                        118,
                        119,
                        120,
                        122
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'doTrain(SequenceStream)')": [
                        107
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainModel(int,SequenceStream,int,boolean)')": [
                        118,
                        119,
                        120,
                        122
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/TrainingParameters.java": {
                "new": {
                    "('opennlp.tools.util#TrainingParameters', None)": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        159,
                        160,
                        166,
                        167,
                        171,
                        172,
                        179,
                        180,
                        184,
                        185,
                        192,
                        193,
                        197,
                        198,
                        205,
                        206
                    ],
                    "('opennlp.tools.util#TrainingParameters', 'getStringParameter(String,String)')": [
                        157,
                        158
                    ],
                    "('opennlp.tools.util#TrainingParameters', 'getStringParameter(String,String,String)')": [
                        161,
                        162,
                        163,
                        164,
                        165
                    ],
                    "('opennlp.tools.util#TrainingParameters', 'getIntParameter(String,int)')": [
                        168,
                        169,
                        170
                    ],
                    "('opennlp.tools.util#TrainingParameters', 'getIntParameter(String,String,int)')": [
                        173,
                        174,
                        175,
                        176,
                        177,
                        178
                    ],
                    "('opennlp.tools.util#TrainingParameters', 'getDoubleParameter(String,double)')": [
                        181,
                        182,
                        183
                    ],
                    "('opennlp.tools.util#TrainingParameters', 'getDoubleParameter(String,String,double)')": [
                        186,
                        187,
                        188,
                        189,
                        190,
                        191
                    ],
                    "('opennlp.tools.util#TrainingParameters', 'getBooleanParameter(String,boolean)')": [
                        194,
                        195,
                        196
                    ],
                    "('opennlp.tools.util#TrainingParameters', 'getBooleanParameter(String,String,boolean)')": [
                        199,
                        200,
                        201,
                        202,
                        203,
                        204
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/MaxentPrepAttachTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachData')": [
                        42,
                        43
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachData2Threads')": [
                        51,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        32,
                        34,
                        38
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', None)": [
                        42,
                        43,
                        50,
                        51
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'initIndexer')": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachData')": [
                        54,
                        55,
                        56,
                        57,
                        60,
                        61
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachData2Threads')": [
                        67,
                        70
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/RealValueModelTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#RealValueModelTest', 'testRealValuedWeightsVsRepeatWeighting')": [
                        36,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        25,
                        28,
                        29,
                        33,
                        34
                    ],
                    "('opennlp.tools.ml.maxent#RealValueModelTest', None)": [
                        38,
                        39,
                        45,
                        46
                    ],
                    "('opennlp.tools.ml.maxent#RealValueModelTest', 'initIndexer')": [
                        40,
                        41,
                        42,
                        43,
                        44
                    ],
                    "('opennlp.tools.ml.maxent#RealValueModelTest', 'testRealValuedWeightsVsRepeatWeighting')": [
                        52,
                        53,
                        59,
                        60
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/ScaleDoesntMatterTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#ScaleDoesntMatterTest', 'testScaleResults')": [
                        56,
                        68
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        29,
                        30,
                        32,
                        36
                    ],
                    "('opennlp.tools.ml.maxent#ScaleDoesntMatterTest', None)": [
                        40,
                        41,
                        47,
                        48
                    ],
                    "('opennlp.tools.ml.maxent#ScaleDoesntMatterTest', 'initIndexer')": [
                        42,
                        43,
                        44,
                        45,
                        46
                    ],
                    "('opennlp.tools.ml.maxent#ScaleDoesntMatterTest', 'testScaleResults')": [
                        70,
                        72,
                        83,
                        85
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/io/RealValueFileEventStreamTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.io#RealValueFileEventStreamTest', 'testLastLineBug')": [
                        31,
                        37,
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        24,
                        25,
                        27,
                        31
                    ],
                    "('opennlp.tools.ml.maxent.io#RealValueFileEventStreamTest', None)": [
                        35,
                        36,
                        42,
                        43
                    ],
                    "('opennlp.tools.ml.maxent.io#RealValueFileEventStreamTest', 'initIndexer')": [
                        37,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('opennlp.tools.ml.maxent.io#RealValueFileEventStreamTest', 'testLastLineBug')": [
                        51,
                        60
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/NegLogLikelihoodTest.java": {
                "old": {
                    "(None, None)": [
                        32
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testDomainDimensionSanity')": [
                        44
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testInitialSanity')": [
                        58
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientSanity')": [
                        73
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtInitialPoint')": [
                        87
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtNonInitialPoint01')": [
                        101
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtNonInitialPoint02')": [
                        116
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientAtInitialPoint')": [
                        133
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientAtNonInitialPoint')": [
                        148
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        31,
                        34,
                        35,
                        36,
                        37
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', None)": [
                        44,
                        45,
                        51,
                        52
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'initIndexer')": [
                        46,
                        47,
                        48,
                        49,
                        50
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testDomainDimensionSanity')": [
                        58
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testInitialSanity')": [
                        72
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientSanity')": [
                        87
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtInitialPoint')": [
                        101
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtNonInitialPoint01')": [
                        115
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtNonInitialPoint02')": [
                        130
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientAtInitialPoint')": [
                        147
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientAtNonInitialPoint')": [
                        162
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/QNPrepAttachTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachData')": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        32,
                        35
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNPrepAttachTest', 'testQNOnPrepAttachData')": [
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        52
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/QNTrainerTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testTrainModelReturnsAQNModel')": [
                        49
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testInTinyDevSet')": [
                        61
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testModel')": [
                        79
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testSerdeModel')": [
                        93
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        31,
                        39,
                        41
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', None)": [
                        48,
                        49,
                        55,
                        56
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'initIndexer')": [
                        50,
                        51,
                        52,
                        53,
                        54
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testTrainModelReturnsAQNModel')": [
                        62
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testInTinyDevSet')": [
                        74
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testModel')": [
                        92
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainerTest', 'testSerdeModel')": [
                        106
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/naivebayes/NaiveBayesCorrectnessTest.java": {
                "old": {
                    "(None, None)": [
                        29,
                        30,
                        31
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testNaiveBayes1')": [
                        42,
                        43
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testNaiveBayes2')": [
                        58,
                        59
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testNaiveBayes3')": [
                        74,
                        75
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testNaiveBayes4')": [
                        90,
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        24,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        38
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', None)": [
                        45,
                        46,
                        53,
                        54
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'initIndexer')": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testNaiveBayes1')": [
                        58,
                        60
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testNaiveBayes2')": [
                        74,
                        76
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testNaiveBayes3')": [
                        90,
                        92
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testNaiveBayes4')": [
                        106,
                        108
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/naivebayes/NaiveBayesModelReadWriteTest.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', 'testBinaryModelPersistence')": [
                        37,
                        38
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', 'testTextModelPersistence')": [
                        51,
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        26,
                        27,
                        29,
                        31,
                        32,
                        33
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', None)": [
                        42,
                        43,
                        44,
                        51,
                        52
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', 'initIndexer')": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', 'testBinaryModelPersistence')": [
                        55,
                        56
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModelReadWriteTest', 'testTextModelPersistence')": [
                        69,
                        70
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/naivebayes/NaiveBayesPrepAttachTest.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesPrepAttachTest', 'testNaiveBayesOnPrepAttachData')": [
                        43,
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32,
                        35,
                        37
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesPrepAttachTest', None)": [
                        45,
                        46,
                        53,
                        54
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesPrepAttachTest', 'initIndexer')": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesPrepAttachTest', 'testNaiveBayesOnPrepAttachData')": [
                        57,
                        58,
                        59
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/perceptron/PerceptronPrepAttachTest.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachData')": [
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        38
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronPrepAttachTest', 'testPerceptronOnPrepAttachData')": [
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        58
                    ]
                }
            }
        }
    },
    "4a10030ee78ea8da944f6d52e3c671799d73b5d2": {
        "authored_data": "2017 Jan 18 15:40",
        "commit.message": "OPENNLP-719: Fixes issue with NF default type in CLI\n\nFixes OPENNLP-719\n",
        "commit.author.name": "William D C M SILVA",
        "pcid": "11bfce381bfd0ea9fb854514460317156c3e9be2",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TrainingParams.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            }
        }
    },
    "11bfce381bfd0ea9fb854514460317156c3e9be2": {
        "authored_data": "2017 Jan 17 19:05",
        "commit.message": "OPENNLP-166: Remove or deprecate slack parameter\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "c75bce14266b727c0bd022929d3ee10bc3062704",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GISModel.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GISModel', 'eval(int,float,double,EvalParameters)')": [
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#GISModel', None)": [
                        49,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        89,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112
                    ],
                    "('opennlp.tools.ml.maxent#GISModel', 'eval(int,float,double,EvalParameters)')": [
                        228
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GISTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(int,DataIndexer,Prior,int)')": [
                        315,
                        372,
                        373,
                        374,
                        375
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(int,DataIndexer,Prior,int)')": [
                        315,
                        372,
                        373
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractModel.java": {
                "old": {
                    "('opennlp.tools.ml.model#AbstractModel', None)": [
                        57
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#AbstractModel', None)": [
                        56,
                        58
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/EvalParameters.java": {
                "old": {
                    "('opennlp.tools.ml.model#EvalParameters', None)": [
                        31,
                        32,
                        34,
                        36,
                        62,
                        65,
                        66,
                        67,
                        72,
                        73,
                        74
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#EvalParameters', None)": [
                        31,
                        32,
                        33,
                        34,
                        36,
                        37,
                        38,
                        40,
                        41,
                        46,
                        49,
                        59,
                        70,
                        81,
                        86,
                        91,
                        96
                    ]
                }
            }
        }
    },
    "c75bce14266b727c0bd022929d3ee10bc3062704": {
        "authored_data": "2017 Jan 17 17:17",
        "commit.message": "OPENNLP-919: Remove type variable from varargs\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "e0612227af58b0d882cca382c655692a1ed768ad",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/ArgumentParser.java": {
                "old": {
                    "('opennlp.tools.cmdline#ArgumentParser', 'checkProxyInterfaces(Class)')": [
                        164,
                        165
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'createArguments(Class)')": [
                        272,
                        279
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'createUsage(Class)')": [
                        324,
                        331
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'validateArguments(String,Class)')": [
                        401
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', None)": [
                        412
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'validateArgumentsLoudly(String,Class)')": [
                        413,
                        424,
                        433
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#ArgumentParser', 'checkProxyInterfaces(Class)')": [
                        164,
                        165
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'createArguments(Class)')": [
                        272,
                        279
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'createUsage(Class)')": [
                        324,
                        331
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'validateArguments(String,Class)')": [
                        401
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'validateArgumentsLoudly(String,Class)')": [
                        412,
                        423,
                        432
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/CmdLineTool.java": {
                "old": {
                    "('opennlp.tools.cmdline#CmdLineTool', None)": [
                        50
                    ],
                    "('opennlp.tools.cmdline#CmdLineTool', 'getBasicHelp(Class)')": [
                        51,
                        55
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#CmdLineTool', 'getBasicHelp(Class)')": [
                        50,
                        54
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/TypedCmdLineTool.java": {
                "old": {
                    "('opennlp.tools.cmdline#TypedCmdLineTool', 'getBasicHelp(Class)')": [
                        91
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#TypedCmdLineTool', 'getBasicHelp(Class)')": [
                        91
                    ]
                }
            }
        }
    },
    "b73744b718bff5da7b22c798ceb9d58b360fb1ce": {
        "authored_data": "2017 Jan 14 23:20",
        "commit.message": "OPENNLP-940: Use all cores for build, user 4 cores for parser eval\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "bddd536a9f951db0dc14930c16233de30d950e03",
        "changes": {
            "opennlp-tools/src/test/java/opennlp/tools/eval/OntoNotes4ParserEval.java": {
                "old": {
                    "('opennlp.tools.eval#OntoNotes4ParserEval', 'evalEnglishMaxent')": [
                        75
                    ]
                },
                "new": {
                    "('opennlp.tools.eval#OntoNotes4ParserEval', 'evalEnglishMaxent')": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82
                    ]
                }
            }
        }
    },
    "bddd536a9f951db0dc14930c16233de30d950e03": {
        "authored_data": "2017 Jan 16 14:25",
        "commit.message": "OPENNLP-123: Feature cutoff should only be done by data indexers, this closes apache/opennlp#65\n",
        "commit.author.name": "smarthi",
        "pcid": "f06bab48060d2fb4075a339b7eb01887a241d403",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GIS.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GIS', None)": [
                        53,
                        54,
                        55,
                        56,
                        260,
                        261,
                        286,
                        287
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'doTrain(DataIndexer)')": [
                        83,
                        86
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(ObjectStream,int,int,double)')": [
                        191
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(int,DataIndexer,boolean)')": [
                        209,
                        210,
                        211
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(int,DataIndexer)')": [
                        225
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(int,DataIndexer,boolean,boolean,Prior,int)')": [
                        266,
                        267,
                        268,
                        269
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(int,DataIndexer,boolean,boolean,Prior,int,int)')": [
                        292,
                        293,
                        300,
                        301
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#GIS', None)": [
                        53,
                        54,
                        55,
                        56
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'doTrain(DataIndexer)')": [
                        85
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(ObjectStream,int,int,double)')": [
                        190,
                        192
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(int,DataIndexer,boolean)')": [
                        209,
                        210
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(int,DataIndexer)')": [
                        224
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(int,DataIndexer,boolean,boolean,Prior)')": [
                        263,
                        264,
                        265
                    ],
                    "('opennlp.tools.ml.maxent#GIS', 'trainModel(int,DataIndexer,boolean,boolean,Prior,int)')": [
                        286,
                        287,
                        294
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GISTrainer.java": {
                "old": {
                    "(None, None)": [
                        47,
                        54
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', None)": [
                        65,
                        71,
                        73,
                        78,
                        79,
                        80,
                        85,
                        90,
                        95,
                        100,
                        105,
                        110,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        129,
                        136,
                        141,
                        146,
                        151,
                        156,
                        157,
                        158,
                        167,
                        210,
                        221,
                        222,
                        238,
                        239,
                        241,
                        242,
                        250,
                        251,
                        254,
                        255,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(ObjectStream,int,int)')": [
                        225,
                        232
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(int,DataIndexer,int)')": [
                        243,
                        244
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(int,DataIndexer,Prior,int,int)')": [
                        256,
                        268,
                        269,
                        282,
                        283,
                        301,
                        314,
                        315,
                        320,
                        321,
                        322,
                        335,
                        343,
                        356,
                        357,
                        359,
                        366,
                        367,
                        372,
                        373,
                        374,
                        375,
                        376,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        396,
                        398
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'findParameters(int,double)')": [
                        414,
                        420,
                        422,
                        424,
                        426
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'gaussianUpdate(int,int,int,double)')": [
                        448
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'nextIteration(double,CompletionService)')": [
                        561,
                        569,
                        577,
                        578,
                        579,
                        580,
                        584,
                        628,
                        629,
                        630,
                        635
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'display(String)')": [
                        652
                    ]
                },
                "new": {
                    "(None, None)": [
                        47,
                        54,
                        619
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', None)": [
                        61,
                        62,
                        192,
                        194,
                        195,
                        212,
                        213,
                        215,
                        216,
                        224,
                        225,
                        228,
                        229,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558,
                        559,
                        560,
                        561,
                        562,
                        563,
                        564,
                        565,
                        566,
                        567,
                        568,
                        569,
                        570,
                        571,
                        572,
                        573,
                        574,
                        575,
                        576,
                        577,
                        578,
                        579,
                        580,
                        581,
                        582,
                        583,
                        584,
                        585,
                        586,
                        587,
                        588,
                        589,
                        590,
                        591,
                        592,
                        593,
                        594,
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610,
                        611,
                        612,
                        613,
                        614,
                        615,
                        616,
                        617,
                        618
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(ObjectStream,int,int)')": [
                        198,
                        199,
                        206
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(int,DataIndexer)')": [
                        217,
                        218
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(int,DataIndexer,Prior,int)')": [
                        230,
                        242,
                        243,
                        244,
                        245,
                        258,
                        276,
                        289,
                        306,
                        308,
                        315,
                        328,
                        330,
                        337,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        355,
                        356,
                        357,
                        358,
                        359,
                        364,
                        366,
                        368
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'findParameters(int,double)')": [
                        383,
                        389,
                        391,
                        393,
                        395,
                        396
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'gaussianUpdate(int,int,double)')": [
                        418
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'nextIteration(double,CompletionService)')": [
                        442,
                        450,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        468,
                        512,
                        513,
                        518
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'display(String)')": [
                        535
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/QNTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainer', 'trainModel(int,DataIndexer)')": [
                        185,
                        186
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainer', 'trainModel(int,DataIndexer)')": [
                        185,
                        186
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/GISTestIndexing.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GISTestIndexing', None)": [
                        32,
                        37,
                        82
                    ],
                    "('opennlp.tools.ml.maxent#GISTestIndexing', 'testGISTrainSignature3')": [
                        77
                    ],
                    "('opennlp.tools.ml.maxent#GISTestIndexing', 'testGISTrainSignature4')": [
                        91
                    ],
                    "('opennlp.tools.ml.maxent#GISTestIndexing', 'testGISTrainSignature5')": [
                        106
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#GISTestIndexing', None)": [
                        32,
                        37,
                        38,
                        83,
                        84
                    ],
                    "('opennlp.tools.ml.maxent#GISTestIndexing', 'testGISTrainSignature3')": [
                        78
                    ],
                    "('opennlp.tools.ml.maxent#GISTestIndexing', 'testGISTrainSignature4')": [
                        93
                    ],
                    "('opennlp.tools.ml.maxent#GISTestIndexing', 'testGISTrainSignature5')": [
                        108
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/MaxentPrepAttachTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        35,
                        36
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachData')": [
                        44,
                        46
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachData2Threads')": [
                        53,
                        54,
                        56
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachDataWithParams')": [
                        62,
                        69,
                        71
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachDataWithParamsDefault')": [
                        77,
                        81,
                        83
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        29
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachData')": [
                        42,
                        44
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachData2Threads')": [
                        51,
                        52,
                        54
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachDataWithParams')": [
                        60,
                        67,
                        69
                    ],
                    "('opennlp.tools.ml.maxent#MaxentPrepAttachTest', 'testMaxentOnPrepAttachDataWithParamsDefault')": [
                        75,
                        79,
                        81
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/RealValueModelTest.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24
                    ]
                }
            }
        }
    }
}