{
    "2e84ddb7181cdf80c2a0e8df64bf4fa6e87a2291": {
        "authored_data": "2020 Jan 26 20:00",
        "commit.message": "[Minor]: Cleaning up legacy Code (#369)\n\n",
        "commit.author.name": "Suneel Marthi",
        "pcid": "5bfe9dbf1c7180b2f435bfda52b1d399172f5137",
        "changes": {
            "opennlp-morfologik-addon/src/test/java/opennlp/morfologik/tagdict/POSTaggerFactoryTest.java": {
                "old": {
                    "('opennlp.morfologik.tagdict#POSTaggerFactoryTest', 'createSampleStream')": [
                        55
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('opennlp.morfologik.tagdict#POSTaggerFactoryTest', 'createSampleStream')": [
                        56
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/serializer/DictionaryEntryPersistor.java": {
                "old": {
                    "('opennlp.tools.dictionary.serializer#DictionaryEntryPersistor', None)": [
                        189
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.dictionary.serializer#DictionaryEntryPersistor', None)": [
                        190
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/BioNLP2004NameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#BioNLP2004NameSampleStream', None)": [
                        59
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#BioNLP2004NameSampleStream', None)": [
                        59
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll02NameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#Conll02NameSampleStream', None)": [
                        79
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#Conll02NameSampleStream', None)": [
                        79
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll03NameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#Conll03NameSampleStream', None)": [
                        66
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#Conll03NameSampleStream', None)": [
                        66
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ConllXPOSSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats#ConllXPOSSampleStreamFactory', 'create(String)')": [
                        60
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#ConllXPOSSampleStreamFactory', 'create(String)')": [
                        60
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/EvalitaNameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#EvalitaNameSampleStream', None)": [
                        87
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#EvalitaNameSampleStream', None)": [
                        87
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/cmdline/ArgumentParserTest.java": {
                "old": {
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSimpleArguments')": [
                        84,
                        86
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSetEncodingParameter')": [
                        157
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSimpleArguments')": [
                        85,
                        87
                    ],
                    "('opennlp.tools.cmdline#ArgumentParserTest', 'testSetEncodingParameter')": [
                        158
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/doccat/DoccatFactoryTest.java": {
                "old": {
                    "('opennlp.tools.doccat#DoccatFactoryTest', 'createSampleStream')": [
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.doccat#DoccatFactoryTest', 'createSampleStream')": [
                        45
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/OntoNotes4ParserEval.java": {
                "old": {
                    "('opennlp.tools.eval#OntoNotes4ParserEval', 'evalEnglishMaxent')": [
                        84
                    ]
                },
                "new": {
                    "('opennlp.tools.eval#OntoNotes4ParserEval', 'evalEnglishMaxent')": [
                        84
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ConllXPOSSampleStreamTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.formats#ConllXPOSSampleStreamTest', 'testParsingSample')": [
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.formats#ConllXPOSSampleStreamTest', 'testParsingSample')": [
                        40
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADChunkSampleStreamTest.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamTest', 'testSimpleCount')": [
                        38
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamTest', 'testChunks')": [
                        43
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamTest', 'setup')": [
                        71
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamTest', 'testSimpleCount')": [
                        39
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamTest', 'testChunks')": [
                        44
                    ],
                    "('opennlp.tools.formats.ad#ADChunkSampleStreamTest', 'setup')": [
                        72,
                        73
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADParagraphStreamTest.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADParagraphStreamTest', 'openData')": [
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.formats.ad#ADParagraphStreamTest', 'openData')": [
                        71
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADTokenSampleStreamTest.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADTokenSampleStreamTest', 'setup')": [
                        52,
                        53,
                        54,
                        55
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('opennlp.tools.formats.ad#ADTokenSampleStreamTest', 'setup')": [
                        53,
                        54,
                        55,
                        56
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/muc/SgmlParserTest.java": {
                "old": {
                    "('opennlp.tools.formats.muc#SgmlParserTest', 'testParse1')": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.formats.muc#SgmlParserTest', 'testParse1')": [
                        33
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/langdetect/LanguageDetectorFactoryTest.java": {
                "old": {
                    "('opennlp.tools.langdetect#LanguageDetectorFactoryTest', 'train')": [
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.langdetect#LanguageDetectorFactoryTest', 'train')": [
                        47
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/langdetect/LanguageDetectorMETest.java": {
                "old": {
                    "('opennlp.tools.langdetect#LanguageDetectorMETest', 'createSampleStream')": [
                        131
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('opennlp.tools.langdetect#LanguageDetectorMETest', 'createSampleStream')": [
                        132
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/lemmatizer/LemmatizerEvaluatorTest.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmatizerEvaluatorTest', 'testEvaluator')": [
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerEvaluatorTest', 'testEvaluator')": [
                        54
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/lemmatizer/LemmatizerMETest.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmatizerMETest', 'startup')": [
                        69
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerMETest', 'testInsufficientData')": [
                        94,
                        95
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerMETest', 'startup')": [
                        70
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerMETest', 'testInsufficientData')": [
                        95
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/PrepAttachDataUtil.java": {
                "old": {
                    "('opennlp.tools.ml#PrepAttachDataUtil', 'readPpaFile(String)')": [
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('opennlp.tools.ml#PrepAttachDataUtil', 'readPpaFile(String)')": [
                        44
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/quasinewton/NegLogLikelihoodTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testDomainDimensionSanity')": [
                        53
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testInitialSanity')": [
                        67
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientSanity')": [
                        82
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtNonInitialPoint01')": [
                        110
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtNonInitialPoint02')": [
                        125
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientAtInitialPoint')": [
                        142
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientAtNonInitialPoint')": [
                        157
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testDomainDimensionSanity')": [
                        54,
                        55
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testInitialSanity')": [
                        69,
                        70
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientSanity')": [
                        85,
                        86
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtNonInitialPoint01')": [
                        114,
                        115
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testValueAtNonInitialPoint02')": [
                        130,
                        131
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientAtInitialPoint')": [
                        148,
                        149
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#NegLogLikelihoodTest', 'testGradientAtNonInitialPoint')": [
                        164,
                        165
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameFinderMETest.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNames')": [
                        167,
                        188
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNamesTypeOverride')": [
                        197,
                        218
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNamesWithTypes')": [
                        232,
                        254
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithEntitiesWithTypes')": [
                        267,
                        288
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinderWithMultipleTypes')": [
                        319
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNames')": [
                        168,
                        189
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNamesTypeOverride')": [
                        198,
                        219
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNamesWithTypes')": [
                        233,
                        255
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithEntitiesWithTypes')": [
                        268,
                        289
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinderWithMultipleTypes')": [
                        320
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/TokenNameFinderModelTest.java": {
                "old": {
                    "('opennlp.tools.namefind#TokenNameFinderModelTest', 'testNERWithPOSModel')": [
                        88
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderModelTest', 'testNERWithPOSModel')": [
                        89
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/ParserTestUtil.java": {
                "old": {
                    "('opennlp.tools.parser#ParserTestUtil', 'createTestHeadRules')": [
                        42
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ParserTestUtil', 'createTestHeadRules')": [
                        42
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/lang/en/HeadRulesTest.java": {
                "old": {
                    "('opennlp.tools.parser.lang.en#HeadRulesTest', 'testSerialization')": [
                        37,
                        40,
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('opennlp.tools.parser.lang.en#HeadRulesTest', 'testSerialization')": [
                        38,
                        41,
                        45
                    ]
                }
            }
        }
    },
    "5bfe9dbf1c7180b2f435bfda52b1d399172f5137": {
        "authored_data": "2020 Jan 25 18:08",
        "commit.message": "Add default value for pi (#366)\n\nAvoid a NullPointerException when pmap does not contain a feature",
        "commit.author.name": "J\u0101nis \u0160lapi\u0146\u0161",
        "pcid": "219c64b33b88873b5afadd3e31b7599e0ecfb589",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/SimplePerceptronSequenceTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'nextIteration(int)')": [
                        306
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'nextIteration(int)')": [
                        306
                    ]
                }
            }
        }
    },
    "219c64b33b88873b5afadd3e31b7599e0ecfb589": {
        "authored_data": "2020 Jan 25 13:36",
        "commit.message": "OPENNLP-1269 -- add simpler alternative to NGramStringModel (#358)\n\n",
        "commit.author.name": "Tim Allison",
        "pcid": "0e5d296c6d5811867fadd83c0bd5efabe0087c9e",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/langdetect/DefaultLanguageDetectorContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('opennlp.tools.langdetect#DefaultLanguageDetectorContextGenerator', 'getContext(CharSequence)')": [
                        61,
                        64,
                        65,
                        66,
                        67
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.langdetect#DefaultLanguageDetectorContextGenerator', 'getContext(CharSequence)')": [
                        60,
                        63,
                        64
                    ]
                }
            }
        }
    },
    "0e5d296c6d5811867fadd83c0bd5efabe0087c9e": {
        "authored_data": "2020 Jan 25 13:34",
        "commit.message": "OPENNLP-1258: Makes LanguageDetector and Normalizer serializable (#349)\n\n",
        "commit.author.name": "Lucas Avan\u00e7o",
        "pcid": "86d8713b522ddeb6a706c2fa905469d8998ac108",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/langdetect/LanguageDetector.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        25
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/langdetect/LanguageDetectorContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        25
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/normalizer/CharSequenceNormalizer.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        28
                    ]
                }
            }
        }
    },
    "14c1a524de3f33e1127274b88d7e924305f67dc7": {
        "authored_data": "2020 Jan 25 00:12",
        "commit.message": "OPENNLP-1268 -- fix StringUtil.toLowerCase() to work on codepoints, not chars (#356)\n\n",
        "commit.author.name": "Tim Allison",
        "pcid": "20fd5503a13fd383407951f2e4112fb4f5c741af",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/util/StringUtil.java": {
                "old": {
                    "('opennlp.tools.util#StringUtil', None)": [
                        69
                    ],
                    "('opennlp.tools.util#StringUtil', 'toLowerCase(CharSequence)')": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82
                    ]
                },
                "new": {
                    "('opennlp.tools.util#StringUtil', None)": [
                        69
                    ],
                    "('opennlp.tools.util#StringUtil', 'toLowerCase(CharSequence)')": [
                        76,
                        77
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/util/StringUtilTest.java": {
                "new": {
                    "('opennlp.tools.util#StringUtilTest', None)": [
                        63
                    ],
                    "('opennlp.tools.util#StringUtilTest', 'testLowercaseBeyondBMP')": [
                        64,
                        65,
                        66,
                        67,
                        68,
                        69
                    ],
                    "(None, None)": [
                        70
                    ]
                }
            }
        }
    },
    "20fd5503a13fd383407951f2e4112fb4f5c741af": {
        "authored_data": "2020 Jan 24 16:54",
        "commit.message": "OPENNLP-1267 -- add a ProbingLanguageDetector that can stop early. (#357)\n\n* OPENNLP-1267 -- add a ProbingLanguageDetector that can stop early.\r\n\r\n* OPENNLP-1267 -- updates based on discussion.  This moves probing\r\ninto LanguageDetectorME.\r\n",
        "commit.author.name": "Tim Allison",
        "pcid": "b27603601e0f72bb21ab96920450a388e272f72d",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/langdetect/LanguageDetectorME.java": {
                "old": {
                    "('opennlp.tools.langdetect#LanguageDetectorME', None)": [
                        37,
                        61,
                        62
                    ],
                    "('opennlp.tools.langdetect#LanguageDetectorME', 'predictLanguages(CharSequence)')": [
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        31,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        302,
                        303
                    ],
                    "('opennlp.tools.langdetect#LanguageDetectorME', None)": [
                        65,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        161,
                        162,
                        163,
                        164,
                        173,
                        174,
                        175,
                        176,
                        181,
                        182,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        252,
                        253,
                        266,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301
                    ],
                    "('opennlp.tools.langdetect#LanguageDetectorME', 'predictLanguages(CharSequence)')": [
                        87,
                        88
                    ],
                    "('opennlp.tools.langdetect#LanguageDetectorME', 'probingPredictLanguages(CharSequence)')": [
                        120,
                        121,
                        122
                    ],
                    "('opennlp.tools.langdetect#LanguageDetectorME', 'probingPredictLanguages(CharSequence,LanguageDetectorConfig)')": [
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160
                    ],
                    "('opennlp.tools.langdetect#LanguageDetectorME', 'updateCounts(String,Map)')": [
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172
                    ],
                    "('opennlp.tools.langdetect#LanguageDetectorME', 'arrayToCounts(String)')": [
                        177,
                        178,
                        179,
                        180
                    ],
                    "('opennlp.tools.langdetect#LanguageDetectorME', 'predict(Map)')": [
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201
                    ],
                    "('opennlp.tools.langdetect#LanguageDetectorME', 'seenEnough(List,Language,Map,LanguageDetectorConfig)')": [
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251
                    ],
                    "('opennlp.tools.langdetect#LanguageDetectorME', 'chunk(CharSequence,int,int)')": [
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/langdetect/LanguageDetectorMETest.java": {
                "new": {
                    "('opennlp.tools.langdetect#LanguageDetectorMETest', None)": [
                        53,
                        54,
                        55,
                        71
                    ],
                    "('opennlp.tools.langdetect#LanguageDetectorMETest', 'testProbingPredictLanguages')": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ]
                }
            }
        }
    }
}