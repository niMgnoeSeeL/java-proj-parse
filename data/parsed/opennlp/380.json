{
    "09e627c07fa47a256daad84fef2663a2783aa8e5": {
        "authored_data": "2017 Jan 27 18:41",
        "commit.message": "OPENNLP-969:Added constructor to trainers that takes a TrainingParameter. This closes #95\n",
        "commit.author.name": "Daniel Russ",
        "pcid": "9bab385a04bab326263ebad1582da1e7d54aaa95",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/ml/AbstractEventTrainer.java": {
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', None)": [
                        41,
                        42,
                        43,
                        44
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/AbstractTrainer.java": {
                "new": {
                    "('opennlp.tools.ml#AbstractTrainer', None)": [
                        49,
                        50,
                        51,
                        52,
                        60
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GIS.java": {
                "new": {
                    "('opennlp.tools.ml.maxent#GIS', None)": [
                        59,
                        60,
                        61,
                        62
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/QNTrainer.java": {
                "new": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNTrainer', None)": [
                        69,
                        70,
                        71,
                        72,
                        113
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/NaiveBayesTrainer.java": {
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesTrainer', None)": [
                        96,
                        97,
                        98,
                        99
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/PerceptronTrainer.java": {
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronTrainer', None)": [
                        84,
                        85,
                        86,
                        87
                    ]
                }
            }
        }
    },
    "9bab385a04bab326263ebad1582da1e7d54aaa95": {
        "authored_data": "2017 Jan 27 19:04",
        "commit.message": "OPENNLP-962: Dictionary should implement SerializableArtifact, this closes apache/opennlp#90\n",
        "commit.author.name": "smarthi",
        "pcid": "b14ad2e30a3f6f8e3112b375a1379f5eefb09050",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/Dictionary.java": {
                "old": {
                    "(None, None)": [
                        32
                    ],
                    "('opennlp.tools.dictionary#Dictionary', None)": [
                        40,
                        111,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        166,
                        176,
                        218,
                        281,
                        282,
                        284
                    ],
                    "('opennlp.tools.dictionary#Dictionary', 'serialize(OutputStream)')": [
                        223,
                        224,
                        244
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        36,
                        37,
                        353
                    ],
                    "('opennlp.tools.dictionary#Dictionary', None)": [
                        42,
                        113,
                        117,
                        150,
                        160,
                        202,
                        264,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350
                    ],
                    "('opennlp.tools.dictionary#Dictionary', 'serialize(OutputStream)')": [
                        207,
                        227
                    ],
                    "('opennlp.tools.dictionary#Dictionary', 'getArtifactSerializerClass')": [
                        351,
                        352
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/serializer/Entry.java": {
                "old": {
                    "(None, None)": [
                        27,
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        29
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ngram/NGramModel.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('opennlp.tools.ngram#NGramModel', None)": [
                        60
                    ],
                    "('opennlp.tools.ngram#NGramModel', 'serialize(OutputStream)')": [
                        330
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('opennlp.tools.ngram#NGramModel', None)": [
                        60
                    ],
                    "('opennlp.tools.ngram#NGramModel', 'serialize(OutputStream)')": [
                        330
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSDictionary.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('opennlp.tools.postag#POSDictionary', 'serialize(OutputStream)')": [
                        155
                    ],
                    "('opennlp.tools.postag#POSDictionary', 'create(InputStream)')": [
                        227
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('opennlp.tools.postag#POSDictionary', 'serialize(OutputStream)')": [
                        155
                    ],
                    "('opennlp.tools.postag#POSDictionary', 'create(InputStream)')": [
                        227
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/DetokenizationDictionary.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('opennlp.tools.tokenize#DetokenizationDictionary', 'init(InputStream)')": [
                        121
                    ],
                    "('opennlp.tools.tokenize#DetokenizationDictionary', 'serialize(OutputStream)')": [
                        169
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('opennlp.tools.tokenize#DetokenizationDictionary', 'init(InputStream)')": [
                        121
                    ],
                    "('opennlp.tools.tokenize#DetokenizationDictionary', 'serialize(OutputStream)')": [
                        169
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/ArtifactSerializer.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26,
                        40,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        39
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/DictionarySerializer.java": {
                "old": {
                    "('opennlp.tools.util.model#DictionarySerializer', None)": [
                        27
                    ]
                },
                "new": {
                    "('opennlp.tools.util.model#DictionarySerializer', None)": [
                        27
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/sentdetect/DummySentenceDetectorFactory.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('opennlp.tools.sentdetect#DummySentenceDetectorFactory', 'createArtifactSerializersMap')": [
                        72,
                        73,
                        74
                    ],
                    "('opennlp.tools.sentdetect#DummySentenceDetectorFactory', 'createArtifactMap')": [
                        82
                    ],
                    "('opennlp.tools.sentdetect#DummySentenceDetectorFactory', None)": [
                        87,
                        88,
                        90,
                        91,
                        101
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#DummySentenceDetectorFactory', 'createArtifactSerializersMap')": [
                        71
                    ],
                    "('opennlp.tools.sentdetect#DummySentenceDetectorFactory', 'createArtifactMap')": [
                        79,
                        81
                    ],
                    "('opennlp.tools.sentdetect#DummySentenceDetectorFactory', None)": [
                        85,
                        87,
                        97,
                        114,
                        115,
                        116,
                        117,
                        118
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/DummyTokenizerFactory.java": {
                "old": {
                    "('opennlp.tools.tokenize#DummyTokenizerFactory', 'createArtifactSerializersMap')": [
                        69,
                        70,
                        71
                    ],
                    "('opennlp.tools.tokenize#DummyTokenizerFactory', None)": [
                        84,
                        97
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#DummyTokenizerFactory', 'createArtifactSerializersMap')": [
                        69
                    ],
                    "('opennlp.tools.tokenize#DummyTokenizerFactory', None)": [
                        82,
                        95,
                        113,
                        114,
                        115,
                        116,
                        117
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/tokenize/TokenizerFactoryTest.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'testDefault')": [
                        77,
                        78,
                        93,
                        94
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'testNullDict')": [
                        112,
                        113
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'testDefault')": [
                        77,
                        92
                    ],
                    "('opennlp.tools.tokenize#TokenizerFactoryTest', 'testNullDict')": [
                        110
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/normalizer/StringDictionary.java": {
                "old": {
                    "(None, None)": [
                        28,
                        30,
                        31
                    ],
                    "('opennlp.uima.normalizer#StringDictionary', None)": [
                        49,
                        50,
                        51,
                        52,
                        53
                    ],
                    "('opennlp.uima.normalizer#StringDictionary', 'serialize(OutputStream)')": [
                        100
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.uima.normalizer#StringDictionary', None)": [
                        47,
                        48,
                        49
                    ],
                    "('opennlp.uima.normalizer#StringDictionary', 'serialize(OutputStream)')": [
                        96
                    ]
                }
            }
        }
    },
    "b14ad2e30a3f6f8e3112b375a1379f5eefb09050": {
        "authored_data": "2017 Jan 25 15:46",
        "commit.message": "OPENNLP-961: Add support to parse event annotations in brat files\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "d37041ca62ea9eab6e777bffc15ddab49941217a",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/AnnotationConfiguration.java": {
                "new": {
                    "('opennlp.tools.formats.brat#AnnotationConfiguration', None)": [
                        40
                    ],
                    "('opennlp.tools.formats.brat#AnnotationConfiguration', 'parse(InputStream)')": [
                        87,
                        88,
                        89,
                        90
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratAnnotation.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratAnnotation', None)": [
                        26,
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotation', None)": [
                        28,
                        29
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratAnnotationStream.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratAnnotationStream', None)": [
                        148,
                        158,
                        159,
                        160,
                        161,
                        162
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotationStream', 'read')": [
                        173,
                        174,
                        175,
                        176,
                        179
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratAnnotationStream', None)": [
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotationStream', 'read')": [
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        229
                    ]
                }
            }
        }
    },
    "d37041ca62ea9eab6e777bffc15ddab49941217a": {
        "authored_data": "2017 Jan 27 14:33",
        "commit.message": "OPENNLP-890 - added CLI for LM#calculateProbability\n",
        "commit.author.name": "Tommaso Teofili",
        "pcid": "f0020c407098873fbd5a369de4863e6b9adc592b",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/CLI.java": {
                "new": {
                    "(None, None)": [
                        40
                    ],
                    "('opennlp.tools.cmdline#CLI', None)": [
                        152,
                        153,
                        154
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/languagemodel/LanguageModel.java": {
                "old": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/languagemodel/NGramLanguageModel.java": {
                "old": {
                    "(None, None)": [
                        31,
                        138
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', None)": [
                        35,
                        36,
                        38,
                        39,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        98,
                        99,
                        100,
                        122,
                        126
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'calculateProbability(StringList)')": [
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'predictNextTokens(StringList)')": [
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        121
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'getLaplaceSmoothingProbability(StringList,StringList)')": [
                        124,
                        125
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'getStupidBackoffProbability(StringList,StringList)')": [
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        143,
                        144
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', None)": [
                        35,
                        36,
                        38,
                        39,
                        41,
                        42,
                        45,
                        46,
                        47,
                        49,
                        50,
                        51,
                        53,
                        54,
                        55,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        101,
                        102,
                        124,
                        125,
                        129,
                        130
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'calculateProbability(StringList)')": [
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'predictNextTokens(StringList)')": [
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'getLaplaceSmoothingProbability(StringList,StringList)')": [
                        126,
                        127,
                        128
                    ],
                    "('opennlp.tools.languagemodel#NGramLanguageModel', 'getStupidBackoffProbability(StringList,StringList)')": [
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142
                    ]
                }
            }
        }
    },
    "570a54188a2b3e909285c40b8261a9edb91a8d56": {
        "authored_data": "2017 Jan 26 21:40",
        "commit.message": "OPENNLP-965: Use UTF_8 constant instead of Charset.forName\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "8fb2b8b4b1526058121783712d3f394951a2e196",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/formats/BioNLP2004NameSampleStream.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.formats#BioNLP2004NameSampleStream', None)": [
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.formats#BioNLP2004NameSampleStream', None)": [
                        58
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll02NameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#Conll02NameSampleStream', None)": [
                        77
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.formats#Conll02NameSampleStream', None)": [
                        78
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll03NameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#Conll03NameSampleStream', None)": [
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.formats#Conll03NameSampleStream', None)": [
                        65
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ConllXPOSSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.formats#ConllXPOSSampleStreamFactory', 'create(String)')": [
                        62
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.formats#ConllXPOSSampleStreamFactory', 'create(String)')": [
                        62
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/EvalitaNameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#EvalitaNameSampleStream', None)": [
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.formats#EvalitaNameSampleStream', None)": [
                        86
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/AnnotationConfiguration.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('opennlp.tools.formats.brat#AnnotationConfiguration', 'parse(InputStream)')": [
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('opennlp.tools.formats.brat#AnnotationConfiguration', 'parse(InputStream)')": [
                        56
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratAnnotationStream.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotationStream', None)": [
                        157
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('opennlp.tools.formats.brat#BratAnnotationStream', None)": [
                        157
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/muc/Muc6NameSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.formats.muc#Muc6NameSampleStreamFactory', 'create(String)')": [
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.formats.muc#Muc6NameSampleStreamFactory', 'create(String)')": [
                        59
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ontonotes/OntoNotesNameSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.formats.ontonotes#OntoNotesNameSampleStreamFactory', 'create(String)')": [
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.formats.ontonotes#OntoNotesNameSampleStreamFactory', 'create(String)')": [
                        53
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ontonotes/OntoNotesParseSampleStreamFactory.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.formats.ontonotes#OntoNotesParseSampleStreamFactory', 'create(String)')": [
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.formats.ontonotes#OntoNotesParseSampleStreamFactory', 'create(String)')": [
                        56
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/HashSumEventStream.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('opennlp.tools.ml.model#HashSumEventStream', 'read')": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('opennlp.tools.ml.model#HashSumEventStream', 'read')": [
                        49
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ParserModel.java": {
                "old": {
                    "('opennlp.tools.parser#ParserModel', None)": [
                        101,
                        106
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.parser#ParserModel', None)": [
                        102,
                        107
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/lang/en/HeadRules.java": {
                "old": {
                    "('opennlp.tools.parser.lang.en#HeadRules', None)": [
                        53,
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('opennlp.tools.parser.lang.en#HeadRules', None)": [
                        54,
                        59
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/lang/es/AncoraSpanishHeadRules.java": {
                "old": {
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', None)": [
                        66,
                        71
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', None)": [
                        67,
                        68,
                        73
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/BrownCluster.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.util.featuregen#BrownCluster', None)": [
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.util.featuregen#BrownCluster', None)": [
                        72
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/WordClusterDictionary.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.util.featuregen#WordClusterDictionary', None)": [
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('opennlp.tools.util.featuregen#WordClusterDictionary', None)": [
                        56
                    ]
                }
            }
        }
    },
    "8fb2b8b4b1526058121783712d3f394951a2e196": {
        "authored_data": "2017 Jan 25 18:38",
        "commit.message": "OPENNLP-963: Removed shadowing Map<> reportMap from AbstractEventTrainer, this closes #89\n",
        "commit.author.name": "Daniel Russ",
        "pcid": "eb19eaaf33695abbdb032f8f60e121a73a33b6d4",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/ml/AbstractEventTrainer.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('opennlp.tools.ml#AbstractEventTrainer', None)": [
                        38,
                        39
                    ]
                }
            }
        }
    },
    "eb19eaaf33695abbdb032f8f60e121a73a33b6d4": {
        "authored_data": "2017 Jan 24 16:24",
        "commit.message": "OPENNLP-959: Correct sentence segmenations in labeld names\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "5166f3dd04980177e46293408d998087040d4c19",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratNameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratNameSampleStream', 'read(BratDocument)')": [
                        78,
                        80,
                        81,
                        82,
                        84,
                        85,
                        86,
                        87,
                        88,
                        96
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratNameSampleStream', 'read(BratDocument)')": [
                        71,
                        76,
                        77,
                        78,
                        79,
                        80,
                        84,
                        85,
                        86,
                        88,
                        89,
                        90,
                        91,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        107
                    ]
                }
            }
        }
    },
    "5166f3dd04980177e46293408d998087040d4c19": {
        "authored_data": "2017 Jan 24 12:06",
        "commit.message": "OPENNLP-955: Fixes docbegin feature generator\n\nThe docbegin was mapped to PreviousMapFeatureGenerator instead of DocumentBeginFeatureGenerator. Also changed the name of the factory by appending the sufix.\n\nFixes OPENNLP-955\nCloses apache/opennlp#84\n",
        "commit.author.name": "William D C M SILVA",
        "pcid": "91d0ce5a299b64d8502a5aa834db9be27cbd9f82",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/GeneratorFactory.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#GeneratorFactory', None)": [
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        636
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#GeneratorFactory', None)": [
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        636
                    ]
                }
            }
        }
    }
}