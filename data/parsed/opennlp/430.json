{
    "bf90d2225e9d94ed741a19ce2200dd80c49a17b1": {
        "authored_data": "2017 Jan 12 00:20",
        "commit.message": "OPENNLP-923: Wrap all lines longer than 110 chars\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "2e1f7e759bac3d12aa21e39bbf97fb51ddeaa86d",
        "changes": {
            "opennlp-morfologik-addon/src/test/java/opennlp/morfologik/builder/POSDictionayBuilderTest.java": {
                "old": {
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', 'main(String)')": [
                        66
                    ]
                },
                "new": {
                    "('opennlp.morfologik.builder#POSDictionayBuilderTest', 'main(String)')": [
                        66,
                        67
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/chunker/ChunkSampleTest.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testNicePrint')": [
                        144,
                        145,
                        146
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkSampleTest', 'testNicePrint')": [
                        144,
                        145,
                        146,
                        147
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/doccat/DocumentCategorizerNBTest.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentCategorizerNBTest', 'testSimpleTraining')": [
                        39
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DocumentCategorizerNBTest', 'testSimpleTraining')": [
                        39,
                        40
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/eval/Conll02NameFinderEval.java": {
                "old": {
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalDutchPerson')": [
                        85,
                        86,
                        87,
                        88
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalDutchOrganization')": [
                        100,
                        101,
                        102,
                        103
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalDutchLocation')": [
                        115,
                        116,
                        117,
                        118
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalDutchMisc')": [
                        130,
                        131,
                        132,
                        133
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalDutchCombined')": [
                        140,
                        141
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalSpanishPerson')": [
                        163,
                        164,
                        165,
                        166
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalSpanishOrganization')": [
                        178,
                        179,
                        180,
                        181
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalSpanishLocation')": [
                        193,
                        194,
                        195,
                        196
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalSpanishMisc')": [
                        208,
                        209,
                        210,
                        211
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalSpanishCombined')": [
                        218,
                        219
                    ]
                },
                "new": {
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalDutchPerson')": [
                        85,
                        86,
                        87,
                        88,
                        89,
                        90
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalDutchOrganization')": [
                        102,
                        103,
                        104,
                        105,
                        106,
                        107
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalDutchLocation')": [
                        119,
                        120,
                        121,
                        122,
                        123,
                        124
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalDutchMisc')": [
                        136,
                        137,
                        138,
                        139,
                        140,
                        141
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalDutchCombined')": [
                        148,
                        149,
                        150,
                        151
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalSpanishPerson')": [
                        173,
                        174,
                        175,
                        176,
                        177,
                        178
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalSpanishOrganization')": [
                        190,
                        191,
                        192,
                        193,
                        194,
                        195
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalSpanishLocation')": [
                        207,
                        208,
                        209,
                        210,
                        211,
                        212
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalSpanishMisc')": [
                        224,
                        225,
                        226,
                        227,
                        228,
                        229
                    ],
                    "('opennlp.tools.eval#Conll02NameFinderEval', 'evalSpanishCombined')": [
                        236,
                        237,
                        238,
                        239
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/ad/ADParagraphStreamTest.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADParagraphStreamTest', 'openData')": [
                        68
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADParagraphStreamTest', 'openData')": [
                        68,
                        69
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/formats/muc/SgmlParserTest.java": {
                "old": {
                    "('opennlp.tools.formats.muc#SgmlParserTest', 'testParse1')": [
                        31
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.muc#SgmlParserTest', 'testParse1')": [
                        31,
                        32
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/languagemodel/LanguageModelTestUtils.java": {
                "old": {
                    "('opennlp.tools.languagemodel#LanguageModelTestUtils', 'getPerplexity(LanguageModel,Collection,int)')": [
                        63,
                        69
                    ]
                },
                "new": {
                    "('opennlp.tools.languagemodel#LanguageModelTestUtils', 'getPerplexity(LanguageModel,Collection,int)')": [
                        63,
                        64,
                        70,
                        71
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/languagemodel/NgramLanguageModelTest.java": {
                "old": {
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testEmptyVocabularyProbability')": [
                        43,
                        44
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testRandomVocabularyAndSentence')": [
                        54
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testNgramModel')": [
                        64
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testTrigram')": [
                        100
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testBigram')": [
                        114
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testSerializedNGramLanguageModel')": [
                        123,
                        125
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testTrigramLanguageModelCreationFromText')": [
                        147,
                        150,
                        151
                    ]
                },
                "new": {
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testEmptyVocabularyProbability')": [
                        43,
                        44,
                        45,
                        46
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testRandomVocabularyAndSentence')": [
                        56,
                        57
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testNgramModel')": [
                        67,
                        68
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testTrigram')": [
                        104,
                        105
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testBigram')": [
                        119,
                        120
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testSerializedNGramLanguageModel')": [
                        129,
                        130,
                        132,
                        133
                    ],
                    "('opennlp.tools.languagemodel#NgramLanguageModelTest', 'testTrigramLanguageModelCreationFromText')": [
                        155,
                        156,
                        159,
                        160,
                        161,
                        162
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/maxent/RealValueModelTest.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#RealValueModelTest', 'testRealValuedWeightsVsRepeatWeighting')": [
                        33,
                        34,
                        39,
                        40,
                        50,
                        51,
                        62,
                        63
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#RealValueModelTest', 'testRealValuedWeightsVsRepeatWeighting')": [
                        33,
                        34,
                        39,
                        40,
                        50,
                        51,
                        52,
                        53,
                        64,
                        65,
                        66,
                        67
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ml/naivebayes/NaiveBayesCorrectnessTest.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testNaiveBayes1')": [
                        42
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testNaiveBayes2')": [
                        57
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testNaiveBayes3')": [
                        72
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testNaiveBayes4')": [
                        87
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testNaiveBayes1')": [
                        42,
                        43
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testNaiveBayes2')": [
                        58,
                        59
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testNaiveBayes3')": [
                        74,
                        75
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesCorrectnessTest', 'testNaiveBayes4')": [
                        90,
                        91
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameFinderMETest.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderMETest', None)": [
                        235
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderMETest', None)": [
                        235,
                        236
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameSampleTest.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSampleTest', 'testWithTypesToString')": [
                        87
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSampleTest', 'testWithTypesToString')": [
                        87,
                        88,
                        89
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ngram/NGramModelTest.java": {
                "old": {
                    "('opennlp.tools.ngram#NGramModelTest', 'testSerialize')": [
                        198,
                        199
                    ]
                },
                "new": {
                    "('opennlp.tools.ngram#NGramModelTest', 'testSerialize')": [
                        198,
                        199,
                        200
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/ngram/NGramUtilsTest.java": {
                "old": {
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testLinearInterpolation')": [
                        85
                    ],
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testLinearInterpolation2')": [
                        96
                    ],
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testGetNGrams')": [
                        103
                    ]
                },
                "new": {
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testLinearInterpolation')": [
                        85,
                        86
                    ],
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testLinearInterpolation2')": [
                        97,
                        98
                    ],
                    "('opennlp.tools.ngram#NGramUtilsTest', 'testGetNGrams')": [
                        105,
                        106
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/ParseTest.java": {
                "old": {
                    "('opennlp.tools.parser#ParseTest', None)": [
                        30
                    ],
                    "('opennlp.tools.parser#ParseTest', 'testGetText')": [
                        63
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ParseTest', None)": [
                        30,
                        31,
                        32,
                        33
                    ],
                    "('opennlp.tools.parser#ParseTest', 'testGetText')": [
                        66,
                        67
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/parser/chunking/ParserTest.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#ParserTest', 'testChunkingParserTraining')": [
                        48
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#ParserTest', 'testChunkingParserTraining')": [
                        48,
                        49
                    ]
                }
            },
            "opennlp-uima/src/test/java/opennlp/uima/AnnotatorsInitializationTest.java": {
                "old": {
                    "('opennlp.uima#AnnotatorsInitializationTest', 'produceAE(String)')": [
                        59
                    ]
                },
                "new": {
                    "('opennlp.uima#AnnotatorsInitializationTest', 'produceAE(String)')": [
                        59,
                        60
                    ]
                }
            }
        }
    },
    "2e1f7e759bac3d12aa21e39bbf97fb51ddeaa86d": {
        "authored_data": "2017 Jan 11 21:40",
        "commit.message": "OPENNLP-923: Wrap all lines longer than 110 chars\n\nAnd also add checkstyle enforcement\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "f295b186fd8f6c619d34a8c69c6a1307f2276779",
        "changes": {
            "opennlp-brat-annotator/src/main/java/opennlp/bratann/NameFinderAnnService.java": {
                "old": {
                    "('opennlp.bratann#NameFinderAnnService', 'main(String)')": [
                        51,
                        52,
                        53
                    ]
                },
                "new": {
                    "('opennlp.bratann#NameFinderAnnService', 'main(String)')": [
                        51,
                        52,
                        53
                    ]
                }
            },
            "opennlp-morfologik-addon/src/main/java/opennlp/morfologik/cmdline/builder/MorfologikDictionaryBuilderParams.java": {
                "old": {
                    "(None, None)": [
                        31,
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32,
                        55,
                        56
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkSample.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkSample', 'validateArguments(int,int,int)')": [
                        143
                    ],
                    "('opennlp.tools.chunker#ChunkSample', None)": [
                        155
                    ],
                    "('opennlp.tools.chunker#ChunkSample', 'toString')": [
                        198
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkSample', 'validateArguments(int,int,int)')": [
                        143,
                        144
                    ],
                    "('opennlp.tools.chunker#ChunkSample', None)": [
                        156,
                        157,
                        158
                    ],
                    "('opennlp.tools.chunker#ChunkSample', 'toString')": [
                        201,
                        202
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkerContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        30,
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        33,
                        34
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkerME.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkerME', None)": [
                        66,
                        67,
                        143
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkerME', None)": [
                        66,
                        67,
                        143,
                        144
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/DefaultChunkerContextGenerator.java": {
                "old": {
                    "('opennlp.tools.chunker#DefaultChunkerContextGenerator', 'getContext(int,String,String,Object)')": [
                        33
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#DefaultChunkerContextGenerator', 'getContext(int,String,String,Object)')": [
                        33,
                        34
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/ArgumentParser.java": {
                "old": {
                    "('opennlp.tools.cmdline#ArgumentParser', 'checkProxyInterfaces(Class)')": [
                        182,
                        183,
                        184,
                        191,
                        192,
                        193
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'createArguments(Class)')": [
                        296
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', None)": [
                        471
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#ArgumentParser', 'checkProxyInterfaces(Class)')": [
                        182,
                        183,
                        184,
                        185,
                        186,
                        193,
                        194,
                        195,
                        196
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', None)": [
                        197,
                        476,
                        477
                    ],
                    "('opennlp.tools.cmdline#ArgumentParser', 'createArguments(Class)')": [
                        300,
                        301
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/CmdLineUtil.java": {
                "old": {
                    "('opennlp.tools.cmdline#CmdLineUtil', 'loadTrainingParameters(String,boolean)')": [
                        333
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#CmdLineUtil', 'loadTrainingParameters(String,boolean)')": [
                        333,
                        334
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/GenerateManualTool.java": {
                "old": {
                    "('opennlp.tools.cmdline#GenerateManualTool', 'appendArgumentTable(Map,StringBuilder)')": [
                        152
                    ],
                    "('opennlp.tools.cmdline#GenerateManualTool', 'appendHeader(StringBuilder)')": [
                        201,
                        203,
                        206
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#GenerateManualTool', 'appendArgumentTable(Map,StringBuilder)')": [
                        152,
                        153
                    ],
                    "('opennlp.tools.cmdline#GenerateManualTool', 'appendHeader(StringBuilder)')": [
                        202,
                        203,
                        205,
                        206,
                        209,
                        210
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/PerformanceMonitor.java": {
                "old": {
                    "('opennlp.tools.cmdline#PerformanceMonitor', 'startAndPrintThroughput')": [
                        123,
                        124
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#PerformanceMonitor', 'startAndPrintThroughput')": [
                        123,
                        124
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/SystemInputStreamFactory.java": {
                "old": {
                    "('opennlp.tools.cmdline#SystemInputStreamFactory', 'createInputStream')": [
                        42
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#SystemInputStreamFactory', 'createInputStream')": [
                        42,
                        43
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/chunker/ChunkerMETool.java": {
                "old": {
                    "('opennlp.tools.cmdline.chunker#ChunkerMETool', 'run(String)')": [
                        58,
                        75
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.chunker#ChunkerMETool', 'run(String)')": [
                        58,
                        59,
                        76,
                        77
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/chunker/TrainingParams.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/dictionary/DictionaryBuilderTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.dictionary#DictionaryBuilderTool', 'run(String)')": [
                        63
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.dictionary#DictionaryBuilderTool', 'run(String)')": [
                        63,
                        64
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/doccat/DoccatTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.doccat#DoccatTool', 'run(String)')": [
                        67,
                        68
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.doccat#DoccatTool', 'run(String)')": [
                        67,
                        68
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/doccat/TrainingParams.java": {
                "old": {
                    "(None, None)": [
                        31,
                        35,
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32,
                        36,
                        37,
                        41,
                        42
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/entitylinker/EntityLinkerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.entitylinker#EntityLinkerTool', 'run(String)')": [
                        124
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.entitylinker#EntityLinkerTool', 'run(String)')": [
                        124,
                        125
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/lemmatizer/TrainingParams.java": {
                "old": {
                    "(None, None)": [
                        31,
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TokenNameFinderCrossValidatorTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderCrossValidatorTool', 'run(String,String)')": [
                        95
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderCrossValidatorTool', 'run(String,String)')": [
                        95,
                        96
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TokenNameFinderTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTool', 'run(String)')": [
                        70,
                        71
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTool', 'run(String)')": [
                        70,
                        71
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/namefind/TokenNameFinderTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', 'loadResources(File,File)')": [
                        106
                    ],
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', 'run(String,String)')": [
                        198
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', 'loadResources(File,File)')": [
                        106,
                        107
                    ],
                    "('opennlp.tools.cmdline.namefind#TokenNameFinderTrainerTool', 'run(String,String)')": [
                        199,
                        200
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/parser/ParserTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.parser#ParserTool', 'getHelp')": [
                        57
                    ],
                    "('opennlp.tools.cmdline.parser#ParserTool', 'run(String)')": [
                        127,
                        136
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.parser#ParserTool', 'getHelp')": [
                        57,
                        58
                    ],
                    "('opennlp.tools.cmdline.parser#ParserTool', 'run(String)')": [
                        128,
                        137,
                        138
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/parser/ParserTrainerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.parser#ParserTrainerTool', 'creaeHeadRules(TrainerToolParams)')": [
                        111
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.parser#ParserTrainerTool', 'creaeHeadRules(TrainerToolParams)')": [
                        111,
                        112
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/postag/POSTaggerTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.postag#POSTaggerTool', 'run(String)')": [
                        59
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.postag#POSTaggerTool', 'run(String)')": [
                        59,
                        60
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/postag/TrainingParams.java": {
                "old": {
                    "(None, None)": [
                        33,
                        41,
                        45,
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        34,
                        42,
                        43,
                        47,
                        48,
                        52,
                        53
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/sentdetect/SentenceDetectorTool.java": {
                "old": {
                    "('opennlp.tools.cmdline.sentdetect#SentenceDetectorTool', 'run(String)')": [
                        66,
                        67
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline.sentdetect#SentenceDetectorTool', 'run(String)')": [
                        66,
                        67
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/sentdetect/TrainingParams.java": {
                "old": {
                    "(None, None)": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        41,
                        42
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/tokenizer/TrainingParams.java": {
                "old": {
                    "(None, None)": [
                        32,
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        33,
                        41,
                        42
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/dictionary/serializer/DictionarySerializer.java": {
                "old": {
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', None)": [
                        241
                    ]
                },
                "new": {
                    "('opennlp.tools.dictionary.serializer#DictionarySerializer', None)": [
                        241,
                        242
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentCategorizerEventStream.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentCategorizerEventStream', None)": [
                        40
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#DocumentCategorizerEventStream', None)": [
                        40,
                        41
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentSampleStream.java": {
                "old": {
                    "(None, None)": [
                        27,
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        32,
                        33
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/NGramFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.doccat#NGramFeatureGenerator', None)": [
                        50,
                        53
                    ]
                },
                "new": {
                    "('opennlp.tools.doccat#NGramFeatureGenerator', None)": [
                        50,
                        51,
                        54,
                        55
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/entitylinker/EntityLinker.java": {
                "old": {
                    "(None, None)": [
                        92
                    ]
                },
                "new": {
                    "(None, None)": [
                        92,
                        93
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/entitylinker/EntityLinkerFactory.java": {
                "old": {
                    "('opennlp.tools.entitylinker#EntityLinkerFactory', 'getLinker(String,EntityLinkerProperties)')": [
                        42
                    ]
                },
                "new": {
                    "('opennlp.tools.entitylinker#EntityLinkerFactory', 'getLinker(String,EntityLinkerProperties)')": [
                        42,
                        43
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/entitylinker/LinkedSpan.java": {
                "old": {
                    "('opennlp.tools.entitylinker#LinkedSpan', 'toString')": [
                        116
                    ]
                },
                "new": {
                    "('opennlp.tools.entitylinker#LinkedSpan', 'toString')": [
                        116,
                        117
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/BioNLP2004NameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#BioNLP2004NameSampleStream', 'read')": [
                        157
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#BioNLP2004NameSampleStream', 'read')": [
                        157,
                        158
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll02NameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#Conll02NameSampleStream', 'read')": [
                        196
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#Conll02NameSampleStream', 'read')": [
                        196,
                        197
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/Conll03NameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#Conll03NameSampleStream', 'read')": [
                        181
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#Conll03NameSampleStream', 'read')": [
                        181,
                        182
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ConllXPOSSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#ConllXPOSSampleStream', 'read')": [
                        95
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#ConllXPOSSampleStream', 'read')": [
                        95,
                        96
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/EvalitaNameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#EvalitaNameSampleStream', 'read')": [
                        209
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#EvalitaNameSampleStream', 'read')": [
                        209,
                        210
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/LeipzigDoccatSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats#LeipzigDoccatSampleStream', None)": [
                        53,
                        70
                    ]
                },
                "new": {
                    "('opennlp.tools.formats#LeipzigDoccatSampleStream', None)": [
                        53,
                        54,
                        71,
                        72
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADNameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADNameSampleStream', None)": [
                        74
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADNameSampleStream', None)": [
                        74,
                        75
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADNameSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADNameSampleStreamFactory', None)": [
                        53
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADNameSampleStreamFactory', None)": [
                        53,
                        54
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADPOSSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamFactory', None)": [
                        42,
                        55
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADPOSSampleStreamFactory', None)": [
                        42,
                        43,
                        56,
                        57
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADSentenceSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADSentenceSampleStreamFactory', None)": [
                        51
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADSentenceSampleStreamFactory', None)": [
                        51,
                        52
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/brat/BratNameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.brat#BratNameSampleStream', 'read(BratDocument)')": [
                        140,
                        141
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.brat#BratNameSampleStream', 'read(BratDocument)')": [
                        140,
                        141,
                        142
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/convert/NameToSentenceSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.convert#NameToSentenceSampleStream', None)": [
                        29
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.convert#NameToSentenceSampleStream', None)": [
                        29,
                        30
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/convert/ParseToPOSSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.convert#ParseToPOSSampleStreamFactory', 'create(String)')": [
                        40
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.convert#ParseToPOSSampleStreamFactory', 'create(String)')": [
                        40,
                        41
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/frenchtreebank/ConstitParseSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.frenchtreebank#ConstitParseSampleStreamFactory', 'create(String)')": [
                        44,
                        45
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.frenchtreebank#ConstitParseSampleStreamFactory', 'create(String)')": [
                        44,
                        45
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/muc/Muc6NameSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.muc#Muc6NameSampleStreamFactory', 'create(String)')": [
                        57
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.muc#Muc6NameSampleStreamFactory', 'create(String)')": [
                        57,
                        58
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ontonotes/OntoNotesNameSampleStreamFactory.java": {
                "old": {
                    "('opennlp.tools.formats.ontonotes#OntoNotesNameSampleStreamFactory', 'create(String)')": [
                        51
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ontonotes#OntoNotesNameSampleStreamFactory', 'create(String)')": [
                        51,
                        52
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/languagemodel/NGramLanguageModel.java": {
                "old": {
                    "(None, None)": [
                        30,
                        31,
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        33
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/DefaultLemmatizerContextGenerator.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerContextGenerator', 'getContext(int,String,String,Object)')": [
                        58
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#DefaultLemmatizerContextGenerator', 'getContext(int,String,String,Object)')": [
                        58,
                        59
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmaSample.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmaSample', 'validateArguments(int,int,int)')": [
                        79
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#LemmaSample', 'validateArguments(int,int,int)')": [
                        79,
                        80
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmaSampleEventStream.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmaSampleEventStream', 'createEvents(LemmaSample)')": [
                        54
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#LemmaSampleEventStream', 'createEvents(LemmaSample)')": [
                        54,
                        55
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmatizerContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        30,
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        33,
                        34
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmatizerME.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmatizerME', None)": [
                        126
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerME', 'train(String,ObjectStream,TrainingParameters,LemmatizerFactory)')": [
                        172,
                        173
                    ]
                },
                "new": {
                    "('opennlp.tools.lemmatizer#LemmatizerME', None)": [
                        126,
                        127
                    ],
                    "('opennlp.tools.lemmatizer#LemmatizerME', 'train(String,ObjectStream,TrainingParameters,LemmatizerFactory)')": [
                        173,
                        174
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/BeamSearch.java": {
                "old": {
                    "('opennlp.tools.ml#BeamSearch', None)": [
                        79
                    ],
                    "('opennlp.tools.ml#BeamSearch', 'bestSequences(int,T,Object,double,BeamSearchContextGenerator,SequenceValidator)')": [
                        84
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#BeamSearch', None)": [
                        79,
                        80,
                        81
                    ],
                    "('opennlp.tools.ml#BeamSearch', 'bestSequences(int,T,Object,double,BeamSearchContextGenerator,SequenceValidator)')": [
                        86,
                        87
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GISTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(int,DataIndexer,Prior,int,int)')": [
                        405
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'findParameters(int,double)')": [
                        413
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', None)": [
                        513,
                        516
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'nextIteration(double,CompletionService)')": [
                        556,
                        630
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(int,DataIndexer,Prior,int,int)')": [
                        405,
                        406
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'findParameters(int,double)')": [
                        414,
                        415
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', None)": [
                        515,
                        516,
                        519,
                        520
                    ],
                    "('opennlp.tools.ml.maxent#GISTrainer', 'nextIteration(double,CompletionService)')": [
                        560,
                        561,
                        635,
                        636
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#AbstractDataIndexer', 'sortAndMerge(List,boolean)')": [
                        98
                    ],
                    "('opennlp.tools.ml.model#AbstractDataIndexer', 'update(String,Set,Map,int)')": [
                        159
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#AbstractDataIndexer', 'sortAndMerge(List,boolean)')": [
                        98,
                        99
                    ],
                    "('opennlp.tools.ml.model#AbstractDataIndexer', 'update(String,Set,Map,int)')": [
                        160,
                        161
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractModel.java": {
                "old": {
                    "('opennlp.tools.ml.model#AbstractModel', None)": [
                        44,
                        55
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'getAllOutcomes(double)')": [
                        104
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#AbstractModel', None)": [
                        44,
                        45,
                        56,
                        57
                    ],
                    "('opennlp.tools.ml.model#AbstractModel', 'getAllOutcomes(double)')": [
                        106,
                        107
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/AbstractModelReader.java": {
                "old": {
                    "('opennlp.tools.ml.model#AbstractModelReader', 'getParameters(int)')": [
                        139
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#AbstractModelReader', 'getParameters(int)')": [
                        139
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/EvalParameters.java": {
                "old": {
                    "('opennlp.tools.ml.model#EvalParameters', None)": [
                        52
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#EvalParameters', None)": [
                        52,
                        53
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/MutableContext.java": {
                "old": {
                    "('opennlp.tools.ml.model#MutableContext', None)": [
                        52
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#MutableContext', None)": [
                        52,
                        53
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/OnePassRealValueDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#OnePassRealValueDataIndexer', None)": [
                        42
                    ],
                    "('opennlp.tools.ml.model#OnePassRealValueDataIndexer', 'sortAndMerge(List,boolean)')": [
                        65
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#OnePassRealValueDataIndexer', None)": [
                        42,
                        43
                    ],
                    "('opennlp.tools.ml.model#OnePassRealValueDataIndexer', 'sortAndMerge(List,boolean)')": [
                        66,
                        67
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/PlainTextFileDataReader.java": {
                "old": {
                    "('opennlp.tools.ml.model#PlainTextFileDataReader', None)": [
                        37
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#PlainTextFileDataReader', None)": [
                        37,
                        38
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/SequenceClassificationModel.java": {
                "old": {
                    "(None, None)": [
                        56,
                        57
                    ]
                },
                "new": {
                    "(None, None)": [
                        56,
                        57
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/TwoPassDataIndexer.java": {
                "old": {
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'index(int,ObjectStream,Map)')": [
                        192
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.model#TwoPassDataIndexer', 'index(int,ObjectStream,Map)')": [
                        192,
                        193
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/LogProbabilities.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        26
                    ],
                    "('opennlp.tools.ml.naivebayes#LogProbabilities', None)": [
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27
                    ],
                    "('opennlp.tools.ml.naivebayes#LogProbabilities', None)": [
                        57,
                        58
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/LogProbability.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#LogProbability', None)": [
                        52,
                        64,
                        93
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#LogProbability', None)": [
                        52,
                        53,
                        65,
                        66,
                        95,
                        96
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/NaiveBayesEvalParameters.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesEvalParameters', None)": [
                        31
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesEvalParameters', None)": [
                        31,
                        32
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/NaiveBayesModel.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModel', None)": [
                        36,
                        39,
                        46
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModel', 'eval(int,float,double,EvalParameters,boolean)')": [
                        89,
                        92,
                        93
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModel', 'getProbability(double,double,double,boolean)')": [
                        128
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModel', None)": [
                        36,
                        37,
                        40,
                        41,
                        48,
                        49
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModel', 'eval(int,float,double,EvalParameters,boolean)')": [
                        92,
                        93,
                        96,
                        97,
                        98,
                        99
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModel', 'getProbability(double,double,double,boolean)')": [
                        134,
                        135
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/Probabilities.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#Probabilities', None)": [
                        64
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#Probabilities', None)": [
                        64,
                        65
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/Probability.java": {
                "old": {
                    "('opennlp.tools.ml.naivebayes#Probability', None)": [
                        53,
                        64
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.naivebayes#Probability', None)": [
                        53,
                        54,
                        65,
                        66
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/PerceptronModel.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#PerceptronModel', None)": [
                        30
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModel', 'eval(int,float,double,EvalParameters,boolean)')": [
                        66
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#PerceptronModel', None)": [
                        30,
                        31
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModel', 'eval(int,float,double,EvalParameters,boolean)')": [
                        67,
                        68
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/SimplePerceptronSequenceTrainer.java": {
                "old": {
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainModel(int,SequenceStream,int,boolean)')": [
                        114
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'nextIteration(int)')": [
                        257,
                        279,
                        312,
                        315,
                        334,
                        339
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainingStats(MutableContext)')": [
                        355
                    ]
                },
                "new": {
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainModel(int,SequenceStream,int,boolean)')": [
                        114,
                        115
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'nextIteration(int)')": [
                        258,
                        259,
                        281,
                        282,
                        315,
                        316,
                        319,
                        320,
                        321,
                        340,
                        341,
                        346,
                        347,
                        348
                    ],
                    "('opennlp.tools.ml.perceptron#SimplePerceptronSequenceTrainer', 'trainingStats(MutableContext)')": [
                        364,
                        365
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/BilouNameFinderSequenceValidator.java": {
                "old": {
                    "('opennlp.tools.namefind#BilouNameFinderSequenceValidator', 'validSequence(int,String,String,String)')": [
                        55
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#BilouNameFinderSequenceValidator', 'validSequence(int,String,String,String)')": [
                        55,
                        56
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/DefaultNameContextGenerator.java": {
                "old": {
                    "('opennlp.tools.namefind#DefaultNameContextGenerator', None)": [
                        105,
                        106,
                        107
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#DefaultNameContextGenerator', None)": [
                        105,
                        106,
                        107,
                        108,
                        109,
                        110
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/DocumentNameFinder.java": {
                "old": {
                    "(None, None)": [
                        34,
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        35,
                        36
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        36,
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        37,
                        44,
                        45
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderEventStream.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderEventStream', None)": [
                        41,
                        53,
                        63,
                        151
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStream', 'generateEvents(String,String,NameContextGenerator)')": [
                        108
                    ],
                    "(None, None)": [
                        165
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderEventStream', None)": [
                        41,
                        42,
                        54,
                        55,
                        65,
                        66
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStream', 'generateEvents(String,String,NameContextGenerator)')": [
                        111,
                        112
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderME.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderME', 'train(String,String,ObjectStream,TrainingParameters,TokenNameFinderFactory)')": [
                        255
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderME', 'train(String,String,ObjectStream,TrainingParameters,TokenNameFinderFactory)')": [
                        255,
                        256
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameSampleSequenceStream.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSampleSequenceStream', None)": [
                        47
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceStream', 'updateContext(Sequence,AbstractModel)')": [
                        73
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSampleSequenceStream', None)": [
                        47,
                        48
                    ],
                    "('opennlp.tools.namefind#NameSampleSequenceStream', 'updateContext(Sequence,AbstractModel)')": [
                        74,
                        75
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/RegexNameFinderFactory.java": {
                "old": {
                    "('opennlp.tools.namefind#RegexNameFinderFactory', 'getDefaultRegexNameFinders(Map,DEFAULT_REGEX_NAME_FINDER)')": [
                        42
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderFactory', 'getDefaultRegexNameFinders(DEFAULT_REGEX_NAME_FINDER)')": [
                        60
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderFactory', 'defaultsToMap(DEFAULT_REGEX_NAME_FINDER)')": [
                        67
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderFactory', None)": [
                        88,
                        104,
                        143,
                        158
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#RegexNameFinderFactory', 'getDefaultRegexNameFinders(Map,DEFAULT_REGEX_NAME_FINDER)')": [
                        42,
                        43
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderFactory', 'getDefaultRegexNameFinders(DEFAULT_REGEX_NAME_FINDER)')": [
                        61,
                        62
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderFactory', 'defaultsToMap(DEFAULT_REGEX_NAME_FINDER)')": [
                        69,
                        70
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderFactory', None)": [
                        91,
                        92,
                        93,
                        94,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        154,
                        155,
                        170,
                        171,
                        172,
                        173
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinder.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderCrossValidator.java": {
                "old": {
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidator', 'evaluate(ObjectStream,int)')": [
                        213
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#TokenNameFinderCrossValidator', 'evaluate(ObjectStream,int)')": [
                        213,
                        214
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderEvaluator.java": {
                "old": {
                    "('opennlp.tools.namefind#TokenNameFinderEvaluator', None)": [
                        51
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#TokenNameFinderEvaluator', None)": [
                        51,
                        52
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/TokenNameFinderFactory.java": {
                "old": {
                    "('opennlp.tools.namefind#TokenNameFinderFactory', 'init(byte,Map,SequenceCodec)')": [
                        66
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderFactory', 'create(String,byte,Map,SequenceCodec)')": [
                        107,
                        108
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#TokenNameFinderFactory', 'init(byte,Map,SequenceCodec)')": [
                        66,
                        67
                    ],
                    "('opennlp.tools.namefind#TokenNameFinderFactory', 'create(String,byte,Map,SequenceCodec)')": [
                        108,
                        109,
                        110
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ngram/NGramGenerator.java": {
                "old": {
                    "('opennlp.tools.ngram#NGramGenerator', None)": [
                        36,
                        59
                    ]
                },
                "new": {
                    "('opennlp.tools.ngram#NGramGenerator', None)": [
                        36,
                        37,
                        60,
                        61
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ngram/NGramModel.java": {
                "old": {
                    "('opennlp.tools.ngram#NGramModel', None)": [
                        281
                    ]
                },
                "new": {
                    "('opennlp.tools.ngram#NGramModel', None)": [
                        281,
                        282
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ngram/NGramUtils.java": {
                "old": {
                    "('opennlp.tools.ngram#NGramUtils', 'calculateLaplaceSmoothingProbability(StringList,Iterable,int,Double)')": [
                        44
                    ],
                    "('opennlp.tools.ngram#NGramUtils', 'calculateTrigramMLProbability(String,String,String,Iterable)')": [
                        84
                    ],
                    "('opennlp.tools.ngram#NGramUtils', 'calculateBigramPriorSmoothingProbability(String,String,Collection,Double)')": [
                        109
                    ],
                    "('opennlp.tools.ngram#NGramUtils', 'calculateTrigramLinearInterpolationProbability(String,String,String,Collection,Double,Double,Double)')": [
                        126
                    ],
                    "('opennlp.tools.ngram#NGramUtils', 'calculateMissingNgramProbabilityMass(StringList,Double,Iterable)')": [
                        145
                    ],
                    "(None, None)": [
                        253
                    ]
                },
                "new": {
                    "('opennlp.tools.ngram#NGramUtils', 'calculateLaplaceSmoothingProbability(StringList,Iterable,int,Double)')": [
                        44,
                        45
                    ],
                    "('opennlp.tools.ngram#NGramUtils', 'calculateTrigramMLProbability(String,String,String,Iterable)')": [
                        85,
                        86
                    ],
                    "('opennlp.tools.ngram#NGramUtils', 'calculateBigramPriorSmoothingProbability(String,String,Collection,Double)')": [
                        111,
                        112
                    ],
                    "('opennlp.tools.ngram#NGramUtils', 'calculateTrigramLinearInterpolationProbability(String,String,String,Collection,Double,Double,Double)')": [
                        129,
                        130
                    ],
                    "('opennlp.tools.ngram#NGramUtils', 'calculateMissingNgramProbabilityMass(StringList,Double,Iterable)')": [
                        149,
                        150
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/AbstractBottomUpParser.java": {
                "old": {
                    "(None, None)": [
                        43,
                        44,
                        45,
                        46,
                        47
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', None)": [
                        175,
                        213,
                        214,
                        252,
                        253,
                        255,
                        507,
                        596,
                        600
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'parse(Parse,int)')": [
                        276,
                        280,
                        284,
                        332
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'advanceChunks(Parse,double)')": [
                        405,
                        409,
                        417,
                        429
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'buildDictionary(ObjectStream,HeadRules,TrainingParameters)')": [
                        515,
                        516,
                        541,
                        551
                    ]
                },
                "new": {
                    "(None, None)": [
                        43,
                        44,
                        45,
                        46,
                        47
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', None)": [
                        175,
                        176,
                        214,
                        215,
                        216,
                        254,
                        255,
                        256,
                        258,
                        259,
                        519,
                        520,
                        611,
                        612,
                        616,
                        617
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'parse(Parse,int)')": [
                        280,
                        281,
                        285,
                        286,
                        290,
                        291,
                        339,
                        340
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'advanceChunks(Parse,double)')": [
                        413,
                        414,
                        418,
                        419,
                        427,
                        428,
                        440,
                        441
                    ],
                    "('opennlp.tools.parser#AbstractBottomUpParser', 'buildDictionary(ObjectStream,HeadRules,TrainingParameters)')": [
                        528,
                        529,
                        554,
                        555,
                        565,
                        566
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/AbstractContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser#AbstractContextGenerator', None)": [
                        39,
                        49,
                        161,
                        162
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'cons3(List,Cons,Cons,Cons,Collection,Collection,boolean,boolean,boolean)')": [
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        228,
                        229,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'surround(Parse,int,String,Collection,List)')": [
                        292,
                        299,
                        324
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'checkcons(Parse,String,String,List)')": [
                        353
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'checkcons(Parse,Parse,String,List)')": [
                        362,
                        365,
                        368,
                        371
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#AbstractContextGenerator', None)": [
                        39,
                        40,
                        50,
                        51,
                        163,
                        164,
                        165,
                        166
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'cons3(List,Cons,Cons,Cons,Collection,Collection,boolean,boolean,boolean)')": [
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        224,
                        240,
                        241,
                        242,
                        243,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'surround(Parse,int,String,Collection,List)')": [
                        313,
                        314,
                        321,
                        322,
                        347,
                        348
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'checkcons(Parse,String,String,List)')": [
                        377,
                        378
                    ],
                    "('opennlp.tools.parser#AbstractContextGenerator', 'checkcons(Parse,Parse,String,List)')": [
                        387,
                        388,
                        389,
                        392,
                        393,
                        396,
                        397,
                        400,
                        401
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/AbstractParserEventStream.java": {
                "old": {
                    "('opennlp.tools.parser#AbstractParserEventStream', None)": [
                        51
                    ],
                    "('opennlp.tools.parser#AbstractParserEventStream', 'addChunkEvents(List,Parse)')": [
                        166
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#AbstractParserEventStream', None)": [
                        51,
                        52
                    ],
                    "('opennlp.tools.parser#AbstractParserEventStream', 'addChunkEvents(List,Parse)')": [
                        167,
                        168,
                        169
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/Parse.java": {
                "old": {
                    "('opennlp.tools.parser#Parse', None)": [
                        140,
                        141,
                        162,
                        163,
                        471,
                        472,
                        473
                    ],
                    "('opennlp.tools.parser#Parse', 'insert(Parse)')": [
                        351
                    ],
                    "('opennlp.tools.parser#Parse', 'adjoinRoot(Parse,HeadRules,int)')": [
                        533
                    ],
                    "('opennlp.tools.parser#Parse', 'adjoin(Parse,HeadRules)')": [
                        553
                    ],
                    "('opennlp.tools.parser#Parse', 'addNames(String,Span,Parse)')": [
                        1099,
                        1104
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#Parse', None)": [
                        140,
                        141,
                        162,
                        163,
                        472,
                        473,
                        474,
                        475,
                        476
                    ],
                    "('opennlp.tools.parser#Parse', 'insert(Parse)')": [
                        351,
                        352
                    ],
                    "('opennlp.tools.parser#Parse', 'adjoinRoot(Parse,HeadRules,int)')": [
                        536,
                        537,
                        538
                    ],
                    "('opennlp.tools.parser#Parse', 'adjoin(Parse,HeadRules)')": [
                        558,
                        559
                    ],
                    "('opennlp.tools.parser#Parse', 'addNames(String,Span,Parse)')": [
                        1105,
                        1106,
                        1111,
                        1112
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/Parser.java": {
                "old": {
                    "(None, None)": [
                        18,
                        29,
                        30,
                        31,
                        32,
                        42,
                        45
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31,
                        40,
                        42,
                        43
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ParserCrossValidator.java": {
                "old": {
                    "('opennlp.tools.parser#ParserCrossValidator', None)": [
                        41,
                        42
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ParserCrossValidator', None)": [
                        41,
                        42
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/CheckContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#CheckContextGenerator', None)": [
                        34,
                        46,
                        47
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#CheckContextGenerator', None)": [
                        34,
                        35,
                        47,
                        48,
                        49
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/Parser.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#Parser', None)": [
                        89,
                        99
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'advanceParses(Parse,double)')": [
                        203,
                        206,
                        207,
                        208,
                        228,
                        229,
                        230,
                        233
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'train(ObjectStream,int,int)')": [
                        256
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        268,
                        283,
                        312
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#Parser', None)": [
                        89,
                        90,
                        100,
                        101
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'advanceParses(Parse,double)')": [
                        205,
                        206,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        244,
                        245,
                        246
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'train(ObjectStream,int,int)')": [
                        269
                    ],
                    "('opennlp.tools.parser.chunking#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        281,
                        282,
                        297,
                        298,
                        327,
                        328
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/ParserEventStream.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#ParserEventStream', None)": [
                        41,
                        47,
                        111
                    ],
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'reduceChunks(Parse,int,Parse)')": [
                        88
                    ],
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'addParseEvents(List,Parse)')": [
                        131
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#ParserEventStream', None)": [
                        41,
                        42,
                        48,
                        49,
                        114,
                        115
                    ],
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'reduceChunks(Parse,int,Parse)')": [
                        90,
                        91
                    ],
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'addParseEvents(List,Parse)')": [
                        135,
                        136
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/lang/en/HeadRules.java": {
                "old": {
                    "('opennlp.tools.parser.lang.en#HeadRules', None)": [
                        50,
                        51,
                        52,
                        53
                    ],
                    "('opennlp.tools.parser.lang.en#HeadRules', 'labelGaps(Stack)')": [
                        227,
                        235
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.lang.en#HeadRules', None)": [
                        50,
                        51,
                        52,
                        53
                    ],
                    "('opennlp.tools.parser.lang.en#HeadRules', 'labelGaps(Stack)')": [
                        227,
                        228,
                        236,
                        237
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/lang/es/AncoraSpanishHeadRules.java": {
                "old": {
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', None)": [
                        60,
                        61,
                        62,
                        63,
                        64,
                        65
                    ],
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', 'labelGaps(Stack)')": [
                        230,
                        232,
                        238
                    ]
                },
                "new": {
                    "(None, None)": [
                        39
                    ],
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', None)": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ],
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', 'labelGaps(Stack)')": [
                        231,
                        233,
                        234,
                        240,
                        241
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/CheckContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#CheckContextGenerator', 'getContext(Parse,Parse,int,boolean)')": [
                        79
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/Parser.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#Parser', None)": [
                        114
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'advanceParses(Parse,double)')": [
                        252,
                        253,
                        279,
                        317,
                        320,
                        324,
                        336,
                        350,
                        355,
                        385,
                        403
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        462,
                        464,
                        474,
                        476,
                        485,
                        487
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'train(ObjectStream,int,int)')": [
                        515
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#Parser', None)": [
                        114,
                        115,
                        116
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'advanceParses(Parse,double)')": [
                        254,
                        255,
                        256,
                        282,
                        283,
                        321,
                        322,
                        325,
                        326,
                        330,
                        331,
                        343,
                        344,
                        358,
                        359,
                        364,
                        365,
                        395,
                        396,
                        414,
                        415,
                        416
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'train(String,ObjectStream,HeadRules,TrainingParameters)')": [
                        475,
                        476,
                        478,
                        479,
                        489,
                        490,
                        492,
                        493,
                        502,
                        503,
                        505,
                        506
                    ],
                    "('opennlp.tools.parser.treeinsert#Parser', 'train(ObjectStream,int,int)')": [
                        534,
                        535
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/DefaultPOSContextGenerator.java": {
                "old": {
                    "('opennlp.tools.postag#DefaultPOSContextGenerator', 'getContext(int,String,String,Object)')": [
                        87
                    ],
                    "('opennlp.tools.postag#DefaultPOSContextGenerator', None)": [
                        92,
                        96
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#DefaultPOSContextGenerator', 'getContext(int,String,String,Object)')": [
                        87,
                        88
                    ],
                    "('opennlp.tools.postag#DefaultPOSContextGenerator', None)": [
                        93,
                        94,
                        98,
                        99
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSTaggerME.java": {
                "old": {
                    "('opennlp.tools.postag#POSTaggerME', 'train(String,ObjectStream,TrainingParameters,POSTaggerFactory)')": [
                        252,
                        253
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSTaggerME', 'train(String,ObjectStream,TrainingParameters,POSTaggerFactory)')": [
                        252,
                        253
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/DefaultSDContextGenerator.java": {
                "old": {
                    "('opennlp.tools.sentdetect#DefaultSDContextGenerator', 'collectFeatures(String,String,String,String,Character)')": [
                        191
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#DefaultSDContextGenerator', 'collectFeatures(String,String,String,String,Character)')": [
                        191,
                        192
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SDCrossValidator.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SDCrossValidator', None)": [
                        54,
                        64,
                        74
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SDCrossValidator', None)": [
                        54,
                        55,
                        65,
                        66,
                        76,
                        77
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceDetectorEvaluator.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceDetectorEvaluator', 'processSample(SentenceSample)')": [
                        66
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceDetectorEvaluator', 'processSample(SentenceSample)')": [
                        66,
                        67
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceDetectorME.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'train(String,ObjectStream,boolean,Dictionary)')": [
                        341
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceDetectorME', None)": [
                        339
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'train(String,ObjectStream,boolean,Dictionary)')": [
                        342,
                        343
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceModel.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceModel', None)": [
                        59,
                        60
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceModel', None)": [
                        59,
                        60
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceSampleStream.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceSampleStream', 'read')": [
                        62
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceSampleStream', 'read')": [
                        62,
                        63
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenSample.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenSample', 'addToken(StringBuilder,List,String,boolean)')": [
                        151
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenSample', 'addToken(StringBuilder,List,String,boolean)')": [
                        151,
                        152
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerFactory.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenizerFactory', None)": [
                        130
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize#TokenizerFactory', None)": [
                        130,
                        131
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/lang/en/TokenSampleStream.java": {
                "old": {
                    "('opennlp.tools.tokenize.lang.en#TokenSampleStream', 'next')": [
                        87,
                        88,
                        89,
                        90,
                        91
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize.lang.en#TokenSampleStream', 'next')": [
                        87,
                        88,
                        89,
                        90
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/BeamSearchContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/Sequence.java": {
                "old": {
                    "('opennlp.tools.util#Sequence', None)": [
                        104
                    ]
                },
                "new": {
                    "('opennlp.tools.util#Sequence', None)": [
                        104,
                        105
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/StringUtil.java": {
                "old": {
                    "('opennlp.tools.util#StringUtil', 'levenshteinDistance(String,String)')": [
                        177
                    ],
                    "('opennlp.tools.util#StringUtil', 'computeShortestEditScript(String,String,int,StringBuffer)')": [
                        191,
                        203,
                        204,
                        209,
                        210,
                        214,
                        215,
                        219,
                        224,
                        228
                    ]
                },
                "new": {
                    "('opennlp.tools.util#StringUtil', 'levenshteinDistance(String,String)')": [
                        177,
                        178
                    ],
                    "('opennlp.tools.util#StringUtil', 'computeShortestEditScript(String,String,int,StringBuffer)')": [
                        192,
                        193,
                        205,
                        206,
                        207,
                        208,
                        213,
                        214,
                        215,
                        216,
                        220,
                        221,
                        222,
                        223,
                        227,
                        228,
                        233,
                        234,
                        238,
                        239
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/BrownBigramFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#BrownBigramFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        40,
                        46
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#BrownBigramFeatureGenerator', 'createFeatures(List,String,int,String)')": [
                        40,
                        41,
                        47,
                        48
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/GeneratorFactory.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#GeneratorFactory', None)": [
                        293,
                        294,
                        295,
                        296,
                        518,
                        527,
                        537,
                        594,
                        595
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#GeneratorFactory', None)": [
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        520,
                        521,
                        530,
                        531,
                        541,
                        542,
                        599,
                        600
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/WindowFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#WindowFeatureGenerator', None)": [
                        63
                    ],
                    "('opennlp.tools.util.featuregen#WindowFeatureGenerator', 'toString')": [
                        128
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#WindowFeatureGenerator', None)": [
                        63,
                        64
                    ],
                    "('opennlp.tools.util.featuregen#WindowFeatureGenerator', 'toString')": [
                        129,
                        130
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/featuregen/WordClusterFeatureGenerator.java": {
                "old": {
                    "('opennlp.tools.util.featuregen#WordClusterFeatureGenerator', None)": [
                        30
                    ]
                },
                "new": {
                    "('opennlp.tools.util.featuregen#WordClusterFeatureGenerator', None)": [
                        30,
                        31
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/BaseModel.java": {
                "old": {
                    "('opennlp.tools.util.model#BaseModel', 'validateArtifactMap')": [
                        431,
                        432
                    ]
                },
                "new": {
                    "('opennlp.tools.util.model#BaseModel', 'validateArtifactMap')": [
                        431,
                        432,
                        433
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/model/ModelUtil.java": {
                "old": {
                    "('opennlp.tools.util.model#ModelUtil', 'writeModel(MaxentModel,OutputStream)')": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71
                    ]
                },
                "new": {
                    "('opennlp.tools.util.model#ModelUtil', 'writeModel(MaxentModel,OutputStream)')": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/chunker/Chunker.java": {
                "old": {
                    "('opennlp.uima.chunker#Chunker', 'typeSystemInit(TypeSystem)')": [
                        150,
                        151
                    ]
                },
                "new": {
                    "('opennlp.uima.chunker#Chunker', 'typeSystemInit(TypeSystem)')": [
                        150,
                        151
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/chunker/ChunkerTrainer.java": {
                "old": {
                    "('opennlp.uima.chunker#ChunkerTrainer', 'collectionProcessComplete(ProcessTrace)')": [
                        207
                    ]
                },
                "new": {
                    "('opennlp.uima.chunker#ChunkerTrainer', 'collectionProcessComplete(ProcessTrace)')": [
                        207,
                        208,
                        209
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/namefind/AbstractNameFinder.java": {
                "old": {
                    "('opennlp.uima.namefind#AbstractNameFinder', 'typeSystemInit(TypeSystem)')": [
                        123,
                        131
                    ]
                },
                "new": {
                    "('opennlp.uima.namefind#AbstractNameFinder', 'typeSystemInit(TypeSystem)')": [
                        123,
                        124,
                        132,
                        133
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/namefind/NameFinderTrainer.java": {
                "old": {
                    "(None, None)": [
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90
                    ],
                    "('opennlp.uima.namefind#NameFinderTrainer', None)": [
                        96,
                        97
                    ]
                },
                "new": {
                    "(None, None)": [
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97
                    ],
                    "('opennlp.uima.namefind#NameFinderTrainer', None)": [
                        103,
                        104,
                        105,
                        106
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/postag/POSTagger.java": {
                "old": {
                    "(None, None)": [
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        63,
                        64
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/sentdetect/SentenceDetectorTrainer.java": {
                "old": {
                    "(None, None)": [
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        65,
                        66
                    ]
                }
            }
        }
    },
    "f295b186fd8f6c619d34a8c69c6a1307f2276779": {
        "authored_data": "2017 Jan 11 22:44",
        "commit.message": "OPENNLP-719: Override any name type with specified type\nCloses apache/opennlp#48\n",
        "commit.author.name": "William D C M SILVA",
        "pcid": "8bba18089a1acf29f9d2433efc229d5c851f42b1",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameFinderEventStream.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderEventStream', 'createEvents(NameSample)')": [
                        128
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStream', 'overrideDefaultType(Span)')": [
                        143,
                        146,
                        147,
                        148
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStream', None)": [
                        149
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderEventStream', 'createEvents(NameSample)')": [
                        128
                    ],
                    "('opennlp.tools.namefind#NameFinderEventStream', 'overrideType(Span)')": [
                        143,
                        146,
                        147
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameFinderEventStreamTest.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderEventStreamTest', 'testOutcomesTypeCantOverride')": [
                        79
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderEventStreamTest', 'testOutcomesTypeCantOverride')": [
                        79
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/namefind/NameFinderMETest.java": {
                "old": {
                    "('opennlp.tools.namefind#NameFinderMETest', None)": [
                        54
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinder')": [
                        74,
                        95,
                        110,
                        111
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinderWithTypes')": [
                        135
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNames')": [
                        182,
                        194,
                        195,
                        196
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNamesWithTypes')": [
                        219
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithEntitiesWithTypes')": [
                        258
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinderWithMultipleTypes')": [
                        313
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameFinderMETest', None)": [
                        54,
                        55,
                        199,
                        200,
                        201
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinder')": [
                        75,
                        96,
                        111,
                        112
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinderWithTypes')": [
                        136
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNames')": [
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNamesTypeOverride')": [
                        202,
                        203,
                        204,
                        205,
                        206,
                        216,
                        228,
                        229,
                        230
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithNamesWithTypes')": [
                        253
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testOnlyWithEntitiesWithTypes')": [
                        292
                    ],
                    "('opennlp.tools.namefind#NameFinderMETest', 'testNameFinderWithMultipleTypes')": [
                        347
                    ]
                }
            }
        }
    },
    "8bba18089a1acf29f9d2433efc229d5c851f42b1": {
        "authored_data": "2017 Jan 10 18:07",
        "commit.message": "OPENNLP-137: Add execution time to CLI command line\n\nThis closes #44\n",
        "commit.author.name": "Peter Thygesen",
        "pcid": "76ef2e67546f09b337d7d82c4b90d930eb912d3e",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/CLI.java": {
                "new": {
                    "('opennlp.tools.cmdline#CLI', 'main(String)')": [
                        208,
                        264,
                        265,
                        266
                    ]
                }
            }
        }
    },
    "c63413182017e069393963d07570ec69f373ee1b": {
        "authored_data": "2017 Jan 10 17:37",
        "commit.message": "OPENNLP-929: GISTrainer must call the indexer.index() method\n\nThis closes #43\n",
        "commit.author.name": "Daniel Russ",
        "pcid": "189b6fb17acf08680f7bcdcb27ea030f5439cfdf",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GISTrainer.java": {
                "new": {
                    "('opennlp.tools.ml.maxent#GISTrainer', 'trainModel(ObjectStream,int,int)')": [
                        231
                    ]
                }
            }
        }
    },
    "189b6fb17acf08680f7bcdcb27ea030f5439cfdf": {
        "authored_data": "2017 Jan 10 19:56",
        "commit.message": "OPENNLP-924: Remove all old and leftover main methods, this closes apache/opennlp#45\n",
        "commit.author.name": "smarthi",
        "pcid": "b7ce303e349329cbee3eb45a064f0a2ce3179d0e",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/GISModel.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        25,
                        233,
                        234
                    ],
                    "('opennlp.tools.ml.maxent#GISModel', None)": [
                        215
                    ],
                    "('opennlp.tools.ml.maxent#GISModel', 'main(String)')": [
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/OldFormatGISModelReader.java": {
                "old": {
                    "(None, None)": [
                        28,
                        117,
                        118
                    ],
                    "('opennlp.tools.ml.maxent.io#OldFormatGISModelReader', None)": [
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95
                    ],
                    "('opennlp.tools.ml.maxent.io#OldFormatGISModelReader', 'main(String)')": [
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/io/SuffixSensitiveGISModelReader.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        81
                    ],
                    "('opennlp.tools.ml.maxent.io#SuffixSensitiveGISModelReader', None)": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77
                    ],
                    "('opennlp.tools.ml.maxent.io#SuffixSensitiveGISModelReader', 'main(String)')": [
                        78,
                        79,
                        80
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/GenericModelReader.java": {
                "old": {
                    "('opennlp.tools.ml.model#GenericModelReader', None)": [
                        66
                    ],
                    "('opennlp.tools.ml.model#GenericModelReader', 'main(String)')": [
                        67,
                        68,
                        69
                    ],
                    "(None, None)": [
                        70
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/model/RealValueFileEventStream.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        131
                    ],
                    "('opennlp.tools.ml.model#RealValueFileEventStream', None)": [
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105
                    ],
                    "('opennlp.tools.ml.model#RealValueFileEventStream', 'main(String)')": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/naivebayes/NaiveBayesModel.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        162,
                        163
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModel', None)": [
                        146
                    ],
                    "('opennlp.tools.ml.naivebayes#NaiveBayesModel', 'main(String)')": [
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/perceptron/PerceptronModel.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        126,
                        127
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModel', None)": [
                        110
                    ],
                    "('opennlp.tools.ml.perceptron#PerceptronModel', 'main(String)')": [
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/RegexNameFinderFactory.java": {
                "old": {
                    "('opennlp.tools.namefind#RegexNameFinderFactory', None)": [
                        73,
                        74,
                        101
                    ],
                    "('opennlp.tools.namefind#RegexNameFinderFactory', 'main(String)')": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/Parse.java": {
                "old": {
                    "(None, None)": [
                        21,
                        1155,
                        1156,
                        1157
                    ],
                    "('opennlp.tools.parser#Parse', 'addPreviousPunctuation(Parse)')": [
                        270
                    ],
                    "('opennlp.tools.parser#Parse', 'addNextPunctuation(Parse)')": [
                        291
                    ],
                    "('opennlp.tools.parser#Parse', 'pruneParse(Parse)')": [
                        785
                    ],
                    "('opennlp.tools.parser#Parse', 'addNames(String,Span,Parse)')": [
                        1082,
                        1083,
                        1089,
                        1091,
                        1092,
                        1093,
                        1096,
                        1097,
                        1102,
                        1103,
                        1104,
                        1108
                    ],
                    "('opennlp.tools.parser#Parse', None)": [
                        1116,
                        1117,
                        1118,
                        1119,
                        1120,
                        1121,
                        1122,
                        1123,
                        1124
                    ],
                    "('opennlp.tools.parser#Parse', 'main(String)')": [
                        1125,
                        1126,
                        1127,
                        1128,
                        1129,
                        1130,
                        1131,
                        1132,
                        1133,
                        1134,
                        1135,
                        1136,
                        1137,
                        1138,
                        1139,
                        1140,
                        1141,
                        1142,
                        1143,
                        1144,
                        1145,
                        1146,
                        1147,
                        1148,
                        1149,
                        1150,
                        1151,
                        1152,
                        1153,
                        1154
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#Parse', 'addPreviousPunctuation(Parse)')": [
                        269
                    ],
                    "('opennlp.tools.parser#Parse', 'addNextPunctuation(Parse)')": [
                        290
                    ],
                    "('opennlp.tools.parser#Parse', 'pruneParse(Parse)')": [
                        784
                    ],
                    "('opennlp.tools.parser#Parse', 'addNames(String,Span,Parse)')": [
                        1081,
                        1087,
                        1089,
                        1090,
                        1093,
                        1094,
                        1099,
                        1100,
                        1104
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ParserEvaluator.java": {
                "old": {
                    "('opennlp.tools.parser#ParserEvaluator', None)": [
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ],
                    "('opennlp.tools.parser#ParserEvaluator', 'main(String)')": [
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142
                    ],
                    "(None, None)": [
                        143
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/ParserEventStream.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        24,
                        31,
                        33,
                        35,
                        215,
                        216
                    ],
                    "('opennlp.tools.parser.chunking#ParserEventStream', None)": [
                        168
                    ],
                    "('opennlp.tools.parser.chunking#ParserEventStream', 'main(String)')": [
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/ParserEventStream.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        28,
                        30,
                        31,
                        37,
                        40,
                        426,
                        427,
                        428
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', None)": [
                        363
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'main(String)')": [
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceModel.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        30,
                        31,
                        181
                    ],
                    "('opennlp.tools.sentdetect#SentenceModel', None)": [
                        152
                    ],
                    "('opennlp.tools.sentdetect#SentenceModel', 'main(String)')": [
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/SimpleTokenizer.java": {
                "old": {
                    "(None, None)": [
                        21,
                        137,
                        138,
                        139,
                        140
                    ],
                    "('opennlp.tools.tokenize#SimpleTokenizer', None)": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116
                    ],
                    "('opennlp.tools.tokenize#SimpleTokenizer', 'main(String)')": [
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenizerModel.java": {
                "old": {
                    "(None, None)": [
                        21,
                        23,
                        24,
                        27,
                        32,
                        180,
                        181
                    ],
                    "('opennlp.tools.tokenize#TokenizerModel', None)": [
                        146
                    ],
                    "('opennlp.tools.tokenize#TokenizerModel', 'main(String)')": [
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/lang/en/TokenSampleStream.java": {
                "old": {
                    "('opennlp.tools.tokenize.lang.en#TokenSampleStream', 'next')": [
                        59,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107
                    ],
                    "('opennlp.tools.tokenize.lang.en#TokenSampleStream', None)": [
                        135
                    ],
                    "('opennlp.tools.tokenize.lang.en#TokenSampleStream', 'main(String)')": [
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174
                    ],
                    "(None, None)": [
                        175,
                        176,
                        177
                    ]
                },
                "new": {
                    "('opennlp.tools.tokenize.lang.en#TokenSampleStream', 'next')": [
                        59,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        87,
                        88,
                        89,
                        90,
                        91,
                        95
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/ListHeap.java": {
                "old": {
                    "('opennlp.tools.util#ListHeap', None)": [
                        194,
                        195
                    ],
                    "('opennlp.tools.util#ListHeap', 'main(String)')": [
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205
                    ],
                    "(None, None)": [
                        206
                    ]
                }
            }
        }
    },
    "b7ce303e349329cbee3eb45a064f0a2ce3179d0e": {
        "authored_data": "2017 Jan 10 05:12",
        "commit.message": "OPENNLP-922: Refactor equals and hashCode, add missing hashCode\n\nThis closes #42\n\nAlso adds a checkstyle rule to enforce presence\nof both hashCode and equals\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "e1da6a8f2e717adcecfe47abadcb036725378d40",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkSample.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkSample', 'equals(Object)')": [
                        206,
                        212,
                        213
                    ],
                    "(None, None)": [
                        214,
                        215,
                        216
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        224
                    ],
                    "('opennlp.tools.chunker#ChunkSample', 'hashCode')": [
                        204,
                        205,
                        206
                    ],
                    "('opennlp.tools.chunker#ChunkSample', None)": [
                        207,
                        208,
                        209
                    ],
                    "('opennlp.tools.chunker#ChunkSample', 'equals(Object)')": [
                        213,
                        214,
                        215,
                        221,
                        222,
                        223
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/doccat/DocumentSample.java": {
                "old": {
                    "('opennlp.tools.doccat#DocumentSample', 'equals(Object)')": [
                        98,
                        103,
                        104
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('opennlp.tools.doccat#DocumentSample', 'hashCode')": [
                        96,
                        97
                    ],
                    "('opennlp.tools.doccat#DocumentSample', None)": [
                        98,
                        99,
                        100
                    ],
                    "('opennlp.tools.doccat#DocumentSample', 'equals(Object)')": [
                        104,
                        105,
                        106,
                        112,
                        113
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/entitylinker/BaseLink.java": {
                "old": {
                    "('opennlp.tools.entitylinker#BaseLink', 'toString')": [
                        128
                    ],
                    "('opennlp.tools.entitylinker#BaseLink', 'hashCode')": [
                        133,
                        134,
                        135,
                        136,
                        137,
                        138
                    ],
                    "('opennlp.tools.entitylinker#BaseLink', 'equals(Object)')": [
                        143,
                        144,
                        146,
                        147,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156
                    ]
                },
                "new": {
                    "('opennlp.tools.entitylinker#BaseLink', 'toString')": [
                        128,
                        129,
                        130
                    ],
                    "('opennlp.tools.entitylinker#BaseLink', 'hashCode')": [
                        135
                    ],
                    "('opennlp.tools.entitylinker#BaseLink', 'equals(Object)')": [
                        140,
                        141,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        152,
                        153
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/entitylinker/LinkedSpan.java": {
                "old": {
                    "('opennlp.tools.entitylinker#LinkedSpan', 'hashCode')": [
                        121,
                        122,
                        123,
                        124,
                        125
                    ],
                    "('opennlp.tools.entitylinker#LinkedSpan', 'equals(Object)')": [
                        133,
                        134,
                        136,
                        137,
                        138,
                        139,
                        140
                    ]
                },
                "new": {
                    "('opennlp.tools.entitylinker#LinkedSpan', 'hashCode')": [
                        121
                    ],
                    "('opennlp.tools.entitylinker#LinkedSpan', 'equals(Object)')": [
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        136,
                        137
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/lemmatizer/LemmaSample.java": {
                "old": {
                    "('opennlp.tools.lemmatizer#LemmaSample', 'toString')": [
                        93
                    ],
                    "('opennlp.tools.lemmatizer#LemmaSample', 'equals(Object)')": [
                        102,
                        107,
                        108
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('opennlp.tools.lemmatizer#LemmaSample', 'toString')": [
                        94,
                        95
                    ],
                    "('opennlp.tools.lemmatizer#LemmaSample', None)": [
                        98,
                        99,
                        100
                    ],
                    "('opennlp.tools.lemmatizer#LemmaSample', 'hashCode')": [
                        101,
                        102,
                        103
                    ],
                    "('opennlp.tools.lemmatizer#LemmaSample', 'equals(Object)')": [
                        110,
                        111,
                        112,
                        114,
                        119,
                        120
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/maxent/quasinewton/QNModel.java": {
                "old": {
                    "('opennlp.tools.ml.maxent.quasinewton#QNModel', None)": [
                        127
                    ],
                    "('opennlp.tools.ml.maxent.quasinewton#QNModel', 'equals(Object)')": [
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171
                    ],
                    "(None, None)": [
                        172
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameSample.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSample', 'equals(Object)')": [
                        121,
                        129,
                        130
                    ],
                    "('opennlp.tools.namefind#NameSample', None)": [
                        131,
                        132
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('opennlp.tools.namefind#NameSample', 'hashCode')": [
                        117,
                        118,
                        119
                    ],
                    "('opennlp.tools.namefind#NameSample', None)": [
                        120,
                        121,
                        122
                    ],
                    "('opennlp.tools.namefind#NameSample', 'equals(Object)')": [
                        128,
                        129,
                        137,
                        138
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/Parse.java": {
                "old": {
                    "('opennlp.tools.parser#Parse', 'equals(Object)')": [
                        999,
                        1000,
                        1001,
                        1002,
                        1003,
                        1004,
                        1005,
                        1006,
                        1007,
                        1008,
                        1009,
                        1010,
                        1011,
                        1012,
                        1013,
                        1014,
                        1015,
                        1016,
                        1017,
                        1018,
                        1019,
                        1020,
                        1021,
                        1022,
                        1023
                    ],
                    "('opennlp.tools.parser#Parse', 'hashCode')": [
                        1031,
                        1032,
                        1033,
                        1034,
                        1035,
                        1036,
                        1037
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#Parse', 'equals(Object)')": [
                        999,
                        1000,
                        1003,
                        1004,
                        1005,
                        1006,
                        1007,
                        1008,
                        1009,
                        1010
                    ],
                    "('opennlp.tools.parser#Parse', 'hashCode')": [
                        1016,
                        1017
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/lang/en/HeadRules.java": {
                "old": {
                    "('opennlp.tools.parser.lang.en#HeadRules', None)": [
                        81,
                        84,
                        87,
                        88,
                        89,
                        294
                    ],
                    "('opennlp.tools.parser.lang.en#HeadRules', 'equals(Object)')": [
                        286,
                        289,
                        290,
                        291,
                        292,
                        293
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ],
                    "('opennlp.tools.parser.lang.en#HeadRules', None)": [
                        78,
                        79,
                        80,
                        81,
                        82,
                        87,
                        88,
                        91,
                        94,
                        95,
                        290,
                        291,
                        292
                    ],
                    "('opennlp.tools.parser.lang.en#HeadRules', 'hashCode')": [
                        288,
                        289
                    ],
                    "('opennlp.tools.parser.lang.en#HeadRules', 'equals(Object)')": [
                        297,
                        298,
                        301,
                        302,
                        303,
                        304,
                        305
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/lang/es/AncoraSpanishHeadRules.java": {
                "old": {
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', None)": [
                        93,
                        99,
                        100,
                        101,
                        297
                    ],
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', 'equals(Object)')": [
                        289,
                        292,
                        293,
                        294,
                        295,
                        296
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', None)": [
                        90,
                        91,
                        92,
                        93,
                        94,
                        99,
                        100,
                        106,
                        107,
                        293,
                        294,
                        295
                    ],
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', 'hashCode')": [
                        291,
                        292
                    ],
                    "('opennlp.tools.parser.lang.es#AncoraSpanishHeadRules', 'equals(Object)')": [
                        300,
                        301,
                        304,
                        305,
                        306,
                        307,
                        308
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSDictionary.java": {
                "old": {
                    "('opennlp.tools.postag#POSDictionary', 'equals(Object)')": [
                        164,
                        165,
                        166,
                        169,
                        170,
                        171,
                        172,
                        173,
                        175,
                        176,
                        177,
                        178,
                        179
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('opennlp.tools.postag#POSDictionary', 'hashCode')": [
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181
                    ],
                    "('opennlp.tools.postag#POSDictionary', None)": [
                        182,
                        183,
                        184
                    ],
                    "('opennlp.tools.postag#POSDictionary', 'equals(Object)')": [
                        185,
                        186,
                        189,
                        190,
                        191,
                        192,
                        193,
                        195
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSSample.java": {
                "old": {
                    "('opennlp.tools.postag#POSSample', 'equals(Object)')": [
                        143,
                        145,
                        150,
                        151
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('opennlp.tools.postag#POSSample', 'hashCode')": [
                        143,
                        144
                    ],
                    "('opennlp.tools.postag#POSSample', None)": [
                        145,
                        146,
                        147
                    ],
                    "('opennlp.tools.postag#POSSample', 'equals(Object)')": [
                        149,
                        151,
                        152,
                        153,
                        159,
                        160
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceSample.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceSample', 'equals(Object)')": [
                        107,
                        112,
                        113
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('opennlp.tools.sentdetect#SentenceSample', 'hashCode')": [
                        105,
                        106
                    ],
                    "('opennlp.tools.sentdetect#SentenceSample', None)": [
                        107,
                        108,
                        109
                    ],
                    "('opennlp.tools.sentdetect#SentenceSample', 'equals(Object)')": [
                        113,
                        114,
                        115,
                        121,
                        122
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/TokenSample.java": {
                "old": {
                    "('opennlp.tools.tokenize#TokenSample', 'equals(Object)')": [
                        218,
                        223,
                        224
                    ],
                    "(None, None)": [
                        225
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('opennlp.tools.tokenize#TokenSample', 'hashCode')": [
                        216,
                        217
                    ],
                    "('opennlp.tools.tokenize#TokenSample', None)": [
                        218,
                        219,
                        220
                    ],
                    "('opennlp.tools.tokenize#TokenSample', 'equals(Object)')": [
                        224,
                        225,
                        226,
                        231,
                        232,
                        233
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/Span.java": {
                "old": {
                    "('opennlp.tools.util#Span', 'hashCode')": [
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312
                    ],
                    "('opennlp.tools.util#Span', 'equals(Object)')": [
                        320,
                        321,
                        322,
                        324,
                        325,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('opennlp.tools.util#Span', 'hashCode')": [
                        305
                    ],
                    "('opennlp.tools.util#Span', 'equals(Object)')": [
                        314,
                        315,
                        316,
                        317,
                        320,
                        321,
                        322,
                        323,
                        324
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/StringList.java": {
                "old": {
                    "('opennlp.tools.util#StringList', 'equals(Object)')": [
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        161,
                        162,
                        163,
                        164,
                        167
                    ],
                    "('opennlp.tools.util#StringList', None)": [
                        168,
                        169,
                        170
                    ],
                    "('opennlp.tools.util#StringList', 'hashCode')": [
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196
                    ]
                },
                "new": {
                    "('opennlp.tools.util#StringList', None)": [
                        149,
                        152
                    ],
                    "('opennlp.tools.util#StringList', 'hashCode')": [
                        150,
                        151
                    ],
                    "('opennlp.tools.util#StringList', 'equals(Object)')": [
                        156,
                        157,
                        158,
                        160,
                        163,
                        166
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/Version.java": {
                "old": {
                    "('opennlp.tools.util#Version', None)": [
                        81,
                        141
                    ],
                    "('opennlp.tools.util#Version', 'equals(Object)')": [
                        128,
                        129,
                        131,
                        132,
                        139,
                        140
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.util#Version', 'hashCode')": [
                        128,
                        129
                    ],
                    "('opennlp.tools.util#Version', None)": [
                        130,
                        131,
                        132
                    ],
                    "('opennlp.tools.util#Version', 'equals(Object)')": [
                        133,
                        134,
                        136,
                        137,
                        138,
                        139,
                        146,
                        147
                    ]
                }
            },
            "opennlp-tools/src/test/java/opennlp/tools/postag/POSDictionaryTest.java": {
                "new": {
                    "(None, None)": [
                        32,
                        125
                    ],
                    "('opennlp.tools.postag#POSDictionaryTest', None)": [
                        117,
                        118
                    ],
                    "('opennlp.tools.postag#POSDictionaryTest', 'testEqualsAndHashCode')": [
                        119,
                        120,
                        121,
                        122,
                        123,
                        124
                    ]
                }
            }
        }
    },
    "e1da6a8f2e717adcecfe47abadcb036725378d40": {
        "authored_data": "2017 Jan 10 17:33",
        "commit.message": "OPENNLP-920: Enforce TypeSafety in SequenceTrainer, this closes apache/opennlp#41\n",
        "commit.author.name": "smarthi",
        "pcid": "a4ecf95d9a40472b7e7afa1d4839138b7fd8767c",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/cmdline/AbstractTypedParamTool.java": {
                "old": {
                    "('opennlp.tools.cmdline#AbstractTypedParamTool', 'getHelp(String)')": [
                        45,
                        46,
                        53
                    ]
                },
                "new": {
                    "('opennlp.tools.cmdline#AbstractTypedParamTool', 'getHelp(String)')": [
                        45,
                        52
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/AbstractSequenceTrainer.java": {
                "old": {
                    "('opennlp.tools.ml#AbstractSequenceTrainer', 'doTrain(SequenceStream)')": [
                        31
                    ],
                    "('opennlp.tools.ml#AbstractSequenceTrainer', 'train(SequenceStream)')": [
                        34,
                        40
                    ]
                },
                "new": {
                    "('opennlp.tools.ml#AbstractSequenceTrainer', 'doTrain(SequenceStream)')": [
                        31
                    ],
                    "('opennlp.tools.ml#AbstractSequenceTrainer', 'train(SequenceStream)')": [
                        34,
                        40
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/EventModelSequenceTrainer.java": {
                "old": {
                    "(None, None)": [
                        28,
                        30,
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        30,
                        32
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/EventTrainer.java": {
                "old": {
                    "(None, None)": [
                        30,
                        32,
                        34,
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        32,
                        34,
                        35
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ml/SequenceTrainer.java": {
                "old": {
                    "(None, None)": [
                        28,
                        30,
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        30,
                        32
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/AttachContextGenerator.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', None)": [
                        33
                    ],
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'getContext(Object)')": [
                        40
                    ],
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'containsPunct(Collection,String)')": [
                        45,
                        46
                    ],
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'getContext(Parse,int,List,int)')": [
                        124,
                        125
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'getContext(Object)')": [
                        38
                    ],
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'containsPunct(Collection,String)')": [
                        43
                    ],
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'getContext(Parse,int,List,int)')": [
                        121
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceModel.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('opennlp.tools.sentdetect#SentenceModel', None)": [
                        95,
                        99,
                        103
                    ],
                    "('opennlp.tools.sentdetect#SentenceModel', 'useTokenEnd')": [
                        144,
                        145,
                        146,
                        147
                    ],
                    "('opennlp.tools.sentdetect#SentenceModel', 'main(String)')": [
                        157
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceModel', None)": [
                        94,
                        98,
                        102
                    ],
                    "('opennlp.tools.sentdetect#SentenceModel', 'useTokenEnd')": [
                        143
                    ],
                    "('opennlp.tools.sentdetect#SentenceModel', 'main(String)')": [
                        153
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/tokenize/Detokenizer.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            }
        }
    }
}