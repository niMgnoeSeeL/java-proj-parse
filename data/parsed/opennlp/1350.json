{
    "167307e2ee99fef61d49f733c21948850bfccced": {
        "authored_data": "2011 Nov 11 11:23",
        "commit.message": "OPENNLP-369 Now using for each loop. Thanks to Aliaksandr Autayeu for providing patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1200812 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "98b8ac1ddf496435dd645d3df37cd6bc0912eb0b",
        "changes": {
            "opennlp-maxent/src/main/java/opennlp/maxent/GISTrainer.java": {
                "old": {
                    "('opennlp.maxent#GISTrainer', None)": [
                        209
                    ],
                    "('opennlp.maxent#GISTrainer', 'trainModel(int,DataIndexer,Prior,int,int)')": [
                        373,
                        374
                    ],
                    "('opennlp.maxent#GISTrainer', 'nextIteration(double)')": [
                        625,
                        626,
                        627
                    ]
                },
                "new": {
                    "('opennlp.maxent#GISTrainer', 'trainModel(int,DataIndexer,Prior,int,int)')": [
                        372,
                        373,
                        374
                    ],
                    "('opennlp.maxent#GISTrainer', 'nextIteration(double)')": [
                        625,
                        626,
                        627,
                        628
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/model/OnePassDataIndexer.java": {
                "old": {
                    "('opennlp.model#OnePassDataIndexer', 'index(LinkedList,Map)')": [
                        151,
                        152
                    ]
                },
                "new": {
                    "('opennlp.model#OnePassDataIndexer', 'index(LinkedList,Map)')": [
                        151
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/model/TwoPassDataIndexer.java": {
                "old": {
                    "('opennlp.model#TwoPassDataIndexer', 'index(int,EventStream,Map)')": [
                        160,
                        161
                    ]
                },
                "new": {
                    "('opennlp.model#TwoPassDataIndexer', 'index(int,EventStream,Map)')": [
                        160
                    ]
                }
            }
        }
    },
    "98b8ac1ddf496435dd645d3df37cd6bc0912eb0b": {
        "authored_data": "2011 Nov 11 08:53",
        "commit.message": "OPENNLP-370 Now uses generics. Thanks to Aliaksandr Autayeu for providing a patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1200777 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "6bb46921bdfb345a2b15aed596d96c57c1ff694b",
        "changes": {
            "opennlp-maxent/src/main/java/opennlp/maxent/io/GISModelWriter.java": {
                "old": {
                    "('opennlp.maxent.io#GISModelWriter', 'persist')": [
                        90,
                        95
                    ],
                    "('opennlp.maxent.io#GISModelWriter', 'compressOutcomes(ComparablePredicate)')": [
                        141,
                        143,
                        144,
                        151
                    ]
                },
                "new": {
                    "('opennlp.maxent.io#GISModelWriter', 'persist')": [
                        90,
                        95
                    ],
                    "('opennlp.maxent.io#GISModelWriter', 'compressOutcomes(ComparablePredicate)')": [
                        141,
                        143,
                        144,
                        151
                    ]
                }
            }
        }
    },
    "f545a85f56418147c1712ff4d08fcfcf35c09745": {
        "authored_data": "2011 Nov 09 08:57",
        "commit.message": "OPENNLP-363 Simplified a loop. Thanks to Aliaksandr Autayeu for providing a patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1199660 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "49fac6dde7bd38e63a2723af66aa6dfbbe442dd9",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADNameSampleStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'processLeaf(Leaf,List,List)')": [
                        247,
                        248,
                        249
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADNameSampleStream', 'processLeaf(Leaf,List,List)')": [
                        247
                    ]
                }
            }
        }
    },
    "49fac6dde7bd38e63a2723af66aa6dfbbe442dd9": {
        "authored_data": "2011 Nov 09 08:56",
        "commit.message": "OPENNLP-363 Replaced array copy loop with system array copy. Thanks to Aliaksandr Autayeu for providing a patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1199659 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "41e3094efe5e90b03e429b63883d3f245bab5554",
        "changes": {
            "opennlp-maxent/src/main/java/opennlp/perceptron/PerceptronModelWriter.java": {
                "old": {
                    "('opennlp.perceptron#PerceptronModelWriter', 'sortValues')": [
                        90,
                        91,
                        92
                    ]
                },
                "new": {
                    "('opennlp.perceptron#PerceptronModelWriter', 'sortValues')": [
                        90
                    ]
                }
            }
        }
    },
    "41e3094efe5e90b03e429b63883d3f245bab5554": {
        "authored_data": "2011 Nov 09 08:55",
        "commit.message": "OPENNLP-363 String performance handling fixes. Thanks to Aliaksandr Autayeu for providing a patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1199658 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "9958e539fd2cff9f0d89963a931369f46b8a2264",
        "changes": {
            "opennlp-maxent/samples/sports/CreateModel.java": {
                "old": {
                    "('None#CreateModel', 'main(String)')": [
                        80
                    ]
                },
                "new": {
                    "('None#CreateModel', 'main(String)')": [
                        80
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/maxent/ModelTrainer.java": {
                "old": {
                    "('opennlp.maxent#ModelTrainer', 'main(String)')": [
                        88,
                        89
                    ]
                },
                "new": {
                    "('opennlp.maxent#ModelTrainer', 'main(String)')": [
                        88,
                        89
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/model/Event.java": {
                "old": {
                    "('opennlp.model#Event', 'toString')": [
                        60,
                        66
                    ]
                },
                "new": {
                    "('opennlp.model#Event', 'toString')": [
                        60,
                        66
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/model/FileEventStream.java": {
                "old": {
                    "('opennlp.model#FileEventStream', 'toLine(Event)')": [
                        100
                    ]
                },
                "new": {
                    "('opennlp.model#FileEventStream', 'toLine(Event)')": [
                        100
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/chunker/ChunkSample.java": {
                "old": {
                    "('opennlp.tools.chunker#ChunkSample', 'nicePrint')": [
                        165,
                        173
                    ],
                    "('opennlp.tools.chunker#ChunkSample', 'toString')": [
                        194
                    ]
                },
                "new": {
                    "('opennlp.tools.chunker#ChunkSample', 'nicePrint')": [
                        165,
                        173
                    ],
                    "('opennlp.tools.chunker#ChunkSample', 'toString')": [
                        194
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/ADSentenceStream.java": {
                "old": {
                    "('opennlp.tools.formats.ad#ADSentenceStream', None)": [
                        410,
                        411,
                        412,
                        413
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#ADSentenceStream', None)": [
                        410,
                        411,
                        412
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/formats/ad/PortugueseContractionUtility.java": {
                "old": {
                    "('opennlp.tools.formats.ad#PortugueseContractionUtility', 'toContraction(String,String)')": [
                        168,
                        181,
                        184
                    ]
                },
                "new": {
                    "('opennlp.tools.formats.ad#PortugueseContractionUtility', 'toContraction(String,String)')": [
                        168,
                        181,
                        184
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/NameSample.java": {
                "old": {
                    "('opennlp.tools.namefind#NameSample', 'toString')": [
                        149
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#NameSample', 'toString')": [
                        149
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/ChunkContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser#ChunkContextGenerator', 'getContext(int,String,String,String)')": [
                        72,
                        84,
                        94,
                        99,
                        109
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#ChunkContextGenerator', 'getContext(int,String,String,String)')": [
                        72,
                        84,
                        94,
                        99,
                        109
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/Parse.java": {
                "old": {
                    "('opennlp.tools.parser#Parse', 'show(StringBuffer)')": [
                        365
                    ]
                },
                "new": {
                    "('opennlp.tools.parser#Parse', 'show(StringBuffer)')": [
                        365
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/postag/POSDictionary.java": {
                "old": {
                    "('opennlp.tools.postag#POSDictionary', 'toString')": [
                        254
                    ]
                },
                "new": {
                    "('opennlp.tools.postag#POSDictionary', 'toString')": [
                        254
                    ]
                }
            }
        }
    },
    "9958e539fd2cff9f0d89963a931369f46b8a2264": {
        "authored_data": "2011 Nov 09 08:40",
        "commit.message": "OPENNLP-365 Re-factoring: boxing\\unboxing, extra casts, shorter loops. Thanks to Aliaksandr Autayeu for providing a patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1199650 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "9012a017661e2fd712d382df118f1bf672f57053",
        "changes": {
            "opennlp-maxent/src/main/java/opennlp/maxent/IntegerPool.java": {
                "old": {
                    "('opennlp.maxent#IntegerPool', None)": [
                        40
                    ],
                    "('opennlp.maxent#IntegerPool', 'get(int)')": [
                        57
                    ]
                },
                "new": {
                    "('opennlp.maxent#IntegerPool', None)": [
                        40
                    ],
                    "('opennlp.maxent#IntegerPool', 'get(int)')": [
                        57
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/model/AbstractModel.java": {
                "old": {
                    "('opennlp.model#AbstractModel', 'getDataStructures')": [
                        163,
                        164
                    ]
                },
                "new": {
                    "('opennlp.model#AbstractModel', 'getDataStructures')": [
                        163,
                        164
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/resolver/AbstractResolver.java": {
                "old": {
                    "('opennlp.tools.coref.resolver#AbstractResolver', 'retain(MentionContext,DiscourseModel)')": [
                        172
                    ]
                },
                "new": {
                    "('opennlp.tools.coref.resolver#AbstractResolver', 'retain(MentionContext,DiscourseModel)')": [
                        172
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/coref/sim/SimilarityModel.java": {
                "old": {
                    "('opennlp.tools.coref.sim#SimilarityModel', 'setExtents(Context)')": [
                        331
                    ]
                },
                "new": {
                    "('opennlp.tools.coref.sim#SimilarityModel', 'setExtents(Context)')": [
                        331
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/namefind/RegexNameFinder.java": {
                "old": {
                    "('opennlp.tools.namefind#RegexNameFinder', 'find(String)')": [
                        58,
                        59,
                        78,
                        79,
                        80
                    ]
                },
                "new": {
                    "('opennlp.tools.namefind#RegexNameFinder', 'find(String)')": [
                        58,
                        77
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/ngram/NGramModel.java": {
                "old": {
                    "('opennlp.tools.ngram#NGramModel', 'getCount(StringList)')": [
                        103
                    ]
                },
                "new": {
                    "('opennlp.tools.ngram#NGramModel', 'getCount(StringList)')": [
                        103
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/BuildContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#BuildContextGenerator', 'getContext(Object)')": [
                        60
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#BuildContextGenerator', 'getContext(Object)')": [
                        60
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/chunking/CheckContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.chunking#CheckContextGenerator', 'getContext(Object)')": [
                        42
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.chunking#CheckContextGenerator', 'getContext(Object)')": [
                        42
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/AttachContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'getContext(Object)')": [
                        40
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#AttachContextGenerator', 'getContext(Object)')": [
                        40
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/BuildContextGenerator.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#BuildContextGenerator', 'getContext(Object)')": [
                        47
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#BuildContextGenerator', 'getContext(Object)')": [
                        47
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/parser/treeinsert/ParserEventStream.java": {
                "old": {
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'getNonAdjoinedParent(Parse)')": [
                        82
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'addParseEvents(List,Parse)')": [
                        223
                    ]
                },
                "new": {
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'getNonAdjoinedParent(Parse)')": [
                        82
                    ],
                    "('opennlp.tools.parser.treeinsert#ParserEventStream', 'addParseEvents(List,Parse)')": [
                        223
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/sentdetect/SentenceDetectorME.java": {
                "old": {
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'sentPosDetect(String)')": [
                        176
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'getSentenceProbabilities')": [
                        248
                    ]
                },
                "new": {
                    "('opennlp.tools.sentdetect#SentenceDetectorME', None)": [
                        59
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'sentPosDetect(String)')": [
                        177
                    ],
                    "('opennlp.tools.sentdetect#SentenceDetectorME', 'getSentenceProbabilities')": [
                        249
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/CountedSet.java": {
                "old": {
                    "('opennlp.tools.util#CountedSet', 'add(E)')": [
                        64
                    ],
                    "('opennlp.tools.util#CountedSet', 'subtract(E)')": [
                        78,
                        83
                    ],
                    "('opennlp.tools.util#CountedSet', 'setCount(E,int)')": [
                        95
                    ],
                    "('opennlp.tools.util#CountedSet', 'getCount(E)')": [
                        110
                    ]
                },
                "new": {
                    "('opennlp.tools.util#CountedSet', 'add(E)')": [
                        64
                    ],
                    "('opennlp.tools.util#CountedSet', 'subtract(E)')": [
                        78,
                        83
                    ],
                    "('opennlp.tools.util#CountedSet', 'setCount(E,int)')": [
                        95
                    ],
                    "('opennlp.tools.util#CountedSet', 'getCount(E)')": [
                        110
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/ListHeap.java": {
                "old": {
                    "('opennlp.tools.util#ListHeap', 'main(String)')": [
                        199
                    ]
                },
                "new": {
                    "('opennlp.tools.util#ListHeap', 'main(String)')": [
                        199
                    ]
                }
            },
            "opennlp-tools/src/main/java/opennlp/tools/util/TreeHeap.java": {
                "old": {
                    "('opennlp.tools.util#TreeHeap', 'main(String)')": [
                        88
                    ]
                },
                "new": {
                    "('opennlp.tools.util#TreeHeap', 'main(String)')": [
                        88
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/chunker/ChunkerTrainer.java": {
                "old": {
                    "('opennlp.uima.chunker#ChunkerTrainer', 'processCas(CAS)')": [
                        151,
                        152,
                        153,
                        154
                    ]
                },
                "new": {
                    "('opennlp.uima.chunker#ChunkerTrainer', 'processCas(CAS)')": [
                        151
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/namefind/NameFinderTrainer.java": {
                "old": {
                    "('opennlp.uima.namefind#NameFinderTrainer', 'processCas(CAS)')": [
                        262,
                        263,
                        264,
                        265,
                        268,
                        270,
                        273,
                        275,
                        278,
                        280,
                        282,
                        285,
                        290,
                        292,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299
                    ],
                    "('opennlp.uima.namefind#NameFinderTrainer', None)": [
                        300
                    ]
                },
                "new": {
                    "('opennlp.uima.namefind#NameFinderTrainer', 'processCas(CAS)')": [
                        262,
                        265,
                        267,
                        270,
                        272,
                        275,
                        277,
                        279,
                        282,
                        287,
                        289,
                        291,
                        292,
                        293,
                        294,
                        295
                    ],
                    "('opennlp.uima.namefind#NameFinderTrainer', None)": [
                        296
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/parser/Parser.java": {
                "old": {
                    "('opennlp.uima.parser#Parser', None)": [
                        97,
                        101,
                        152,
                        153,
                        154
                    ],
                    "('opennlp.uima.parser#Parser', 'process(CAS)')": [
                        261,
                        262,
                        263,
                        264,
                        265
                    ]
                },
                "new": {
                    "('opennlp.uima.parser#Parser', None)": [
                        97,
                        101,
                        152
                    ],
                    "('opennlp.uima.parser#Parser', 'process(CAS)')": [
                        259
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/postag/POSTaggerTrainer.java": {
                "old": {
                    "('opennlp.uima.postag#POSTaggerTrainer', 'processCas(CAS)')": [
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175
                    ]
                },
                "new": {
                    "('opennlp.uima.postag#POSTaggerTrainer', 'processCas(CAS)')": [
                        169
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/sentdetect/SentenceDetectorTrainer.java": {
                "old": {
                    "('opennlp.uima.sentdetect#SentenceDetectorTrainer', 'processCas(CAS)')": [
                        119,
                        120,
                        121,
                        122
                    ]
                },
                "new": {
                    "('opennlp.uima.sentdetect#SentenceDetectorTrainer', 'processCas(CAS)')": [
                        119
                    ]
                }
            },
            "opennlp-uima/src/main/java/opennlp/uima/tokenize/TokenizerTrainer.java": {
                "old": {
                    "('opennlp.uima.tokenize#TokenizerTrainer', 'processCas(CAS)')": [
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170
                    ],
                    "('opennlp.uima.tokenize#TokenizerTrainer', 'process(CAS,AnnotationFS)')": [
                        187,
                        188
                    ]
                },
                "new": {
                    "('opennlp.uima.tokenize#TokenizerTrainer', 'processCas(CAS)')": [
                        164
                    ],
                    "('opennlp.uima.tokenize#TokenizerTrainer', 'process(CAS,AnnotationFS)')": [
                        181
                    ]
                }
            }
        }
    },
    "9012a017661e2fd712d382df118f1bf672f57053": {
        "authored_data": "2011 Nov 09 08:37",
        "commit.message": "No jira, replaced StringBuffer with StringBuilder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1199649 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "dcd0de7c82b4eca21afd0f7904c863b0ac4ea11a",
        "changes": {
            "opennlp-tools/src/main/java/opennlp/tools/util/Span.java": {
                "old": {
                    "('opennlp.tools.util#Span', 'toString')": [
                        270
                    ]
                },
                "new": {
                    "('opennlp.tools.util#Span', 'toString')": [
                        270
                    ]
                }
            }
        }
    },
    "dcd0de7c82b4eca21afd0f7904c863b0ac4ea11a": {
        "authored_data": "2011 Nov 09 08:25",
        "commit.message": "OPENNLP-366 Used generics to avoid casts. Thanks to Aliaksandr Autayeu for providing a patch. \n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/opennlp/trunk@1199644 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "J\u00f6rn Kottmann",
        "pcid": "62172e95a301f98eefd0a508ca3678a6d18c1916",
        "changes": {
            "opennlp-maxent/src/main/java/opennlp/maxent/DomainToModelMap.java": {
                "old": {
                    "('opennlp.maxent#DomainToModelMap', None)": [
                        40
                    ],
                    "('opennlp.maxent#DomainToModelMap', 'getModel(ModelDomain)')": [
                        63
                    ]
                },
                "new": {
                    "('opennlp.maxent#DomainToModelMap', None)": [
                        40
                    ],
                    "('opennlp.maxent#DomainToModelMap', 'getModel(ModelDomain)')": [
                        63
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/maxent/io/GISModelWriter.java": {
                "old": {
                    "('opennlp.maxent.io#GISModelWriter', None)": [
                        52,
                        53
                    ],
                    "('opennlp.maxent.io#GISModelWriter', 'persist')": [
                        96
                    ]
                },
                "new": {
                    "('opennlp.maxent.io#GISModelWriter', None)": [
                        52,
                        53
                    ],
                    "('opennlp.maxent.io#GISModelWriter', 'persist')": [
                        96
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/model/AbstractDataIndexer.java": {
                "old": {
                    "('opennlp.model#AbstractDataIndexer', 'sortAndMerge(List,boolean)')": [
                        83,
                        92,
                        94,
                        116
                    ],
                    "('opennlp.model#AbstractDataIndexer', 'update(String,Set,Map,int)')": [
                        140
                    ]
                },
                "new": {
                    "('opennlp.model#AbstractDataIndexer', 'sortAndMerge(List,boolean)')": [
                        83,
                        92,
                        94,
                        116
                    ],
                    "('opennlp.model#AbstractDataIndexer', 'update(String,Set,Map,int)')": [
                        140
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/model/ComparableEvent.java": {
                "old": {
                    "('opennlp.model#ComparableEvent', None)": [
                        28
                    ],
                    "('opennlp.model#ComparableEvent', 'compareTo(Object)')": [
                        51,
                        52
                    ]
                },
                "new": {
                    "('opennlp.model#ComparableEvent', None)": [
                        28
                    ],
                    "('opennlp.model#ComparableEvent', 'compareTo(ComparableEvent)')": [
                        51,
                        52
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/model/OnePassDataIndexer.java": {
                "old": {
                    "('opennlp.model#OnePassDataIndexer', None)": [
                        71
                    ],
                    "('opennlp.model#OnePassDataIndexer', 'computeEventCounts(EventStream,Map,int)')": [
                        109,
                        119,
                        120
                    ],
                    "('opennlp.model#OnePassDataIndexer', 'index(LinkedList,Map)')": [
                        127,
                        133,
                        137
                    ]
                },
                "new": {
                    "('opennlp.model#OnePassDataIndexer', None)": [
                        71
                    ],
                    "('opennlp.model#OnePassDataIndexer', 'computeEventCounts(EventStream,Map,int)')": [
                        109,
                        119,
                        120
                    ],
                    "('opennlp.model#OnePassDataIndexer', 'index(LinkedList,Map)')": [
                        127,
                        133,
                        137
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/model/OnePassRealValueDataIndexer.java": {
                "old": {
                    "('opennlp.model#OnePassRealValueDataIndexer', 'sortAndMerge(List,boolean)')": [
                        58
                    ],
                    "('opennlp.model#OnePassRealValueDataIndexer', 'index(LinkedList,Map)')": [
                        77,
                        81
                    ]
                },
                "new": {
                    "('opennlp.model#OnePassRealValueDataIndexer', 'sortAndMerge(List,boolean)')": [
                        58
                    ],
                    "('opennlp.model#OnePassRealValueDataIndexer', 'index(LinkedList,Map)')": [
                        77,
                        81
                    ]
                }
            },
            "opennlp-maxent/src/main/java/opennlp/model/TwoPassDataIndexer.java": {
                "old": {
                    "('opennlp.model#TwoPassDataIndexer', None)": [
                        72
                    ],
                    "('opennlp.model#TwoPassDataIndexer', 'computeEventCounts(EventStream,Writer,Map,int)')": [
                        120,
                        130,
                        131
                    ],
                    "('opennlp.model#TwoPassDataIndexer', 'index(int,EventStream,Map)')": [
                        139,
                        142
                    ]
                },
                "new": {
                    "('opennlp.model#TwoPassDataIndexer', None)": [
                        72
                    ],
                    "('opennlp.model#TwoPassDataIndexer', 'computeEventCounts(EventStream,Writer,Map,int)')": [
                        120,
                        130,
                        131
                    ],
                    "('opennlp.model#TwoPassDataIndexer', 'index(int,EventStream,Map)')": [
                        139,
                        142
                    ]
                }
            }
        }
    }
}