{
    "0dfa11ac5ec13136a4d9813fae7d7506b330a379": {
        "authored_data": "2021 Jun 26 15:43",
        "commit.message": "(doc) Specify that typed getList returns null for missing key (#100)\n\nBased on this discussion:\r\nhttps://mail-archives.apache.org/mod_mbox/commons-user/202102.mbox/%3CCAOoCORfb5z6uJ%3DKG0ESLOnM2G50fM7VoW1fKovCZFRSO54h-Xg%40mail.gmail.com%3E",
        "commit.author.name": "Roman Zaynetdinov",
        "pcid": "6c60fef798dd04aee3c3f8dceacffbf422d72100",
        "changes": {
            "src/main/java/org/apache/commons/configuration2/ImmutableConfiguration.java": {
                "old": {
                    "(None, None)": [
                        512
                    ]
                },
                "new": {
                    "(None, None)": [
                        512
                    ]
                }
            }
        }
    },
    "dd82ef84397162b72b7b3196197066c5cd908494": {
        "authored_data": "2021 Jun 26 15:37",
        "commit.message": "CONFIGURATION-800 - Remove redundant initializer (#110)\n\n",
        "commit.author.name": "Arturo Bernal",
        "pcid": "8bc64b9ae404c7aaeb71eaaaabcc133cfd54f323",
        "changes": {
            "src/test/java/org/apache/commons/configuration2/TestBaseConfiguration.java": {
                "old": {
                    "('org.apache.commons.configuration2#TestBaseConfiguration', None)": [
                        64
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2#TestBaseConfiguration', None)": [
                        64
                    ]
                }
            },
            "src/test/java/org/apache/commons/configuration2/TestDynamicCombinedConfiguration.java": {
                "old": {
                    "('org.apache.commons.configuration2#TestDynamicCombinedConfiguration', None)": [
                        470
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2#TestDynamicCombinedConfiguration', None)": [
                        470
                    ]
                }
            },
            "src/test/java/org/apache/commons/configuration2/TestJNDIEnvironmentValues.java": {
                "old": {
                    "('org.apache.commons.configuration2#TestJNDIEnvironmentValues', None)": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2#TestJNDIEnvironmentValues', None)": [
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/configuration2/TestNullJNDIEnvironmentValues.java": {
                "old": {
                    "('org.apache.commons.configuration2#TestNullJNDIEnvironmentValues', None)": [
                        33
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2#TestNullJNDIEnvironmentValues', None)": [
                        33
                    ]
                }
            },
            "src/test/java/org/apache/commons/configuration2/test/HsqlDB.java": {
                "old": {
                    "('org.apache.commons.configuration2.test#HsqlDB', None)": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.test#HsqlDB', None)": [
                        37
                    ]
                }
            }
        }
    },
    "b9ba4a8e8ce5883db731aaf1aab4d9f06c532fb5": {
        "authored_data": "2021 Jun 26 15:34",
        "commit.message": "CONFIGURATION-802 - Set field as Final (#111)\n\n",
        "commit.author.name": "Arturo Bernal",
        "pcid": "d4fe31195285066f5ab9ae8de1a530147fd29978",
        "changes": {
            "src/main/java/org/apache/commons/configuration2/AbstractConfiguration.java": {
                "old": {
                    "('org.apache.commons.configuration2#AbstractConfiguration', 'getList(String,List)')": [
                        1430
                    ],
                    "('org.apache.commons.configuration2#AbstractConfiguration', 'handleDefaultCollection(Collection,Collection)')": [
                        1859
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2#AbstractConfiguration', 'getList(String,List)')": [
                        1430
                    ],
                    "('org.apache.commons.configuration2#AbstractConfiguration', 'handleDefaultCollection(Collection,Collection)')": [
                        1859
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/ConfigurationConverter.java": {
                "old": {
                    "('org.apache.commons.configuration2#ConfigurationConverter', 'getProperties(ImmutableConfiguration)')": [
                        70
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2#ConfigurationConverter', 'getProperties(ImmutableConfiguration)')": [
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/DatabaseConfiguration.java": {
                "old": {
                    "('org.apache.commons.configuration2#DatabaseConfiguration', None)": [
                        788
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2#DatabaseConfiguration', None)": [
                        788
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/INIConfiguration.java": {
                "old": {
                    "('org.apache.commons.configuration2#INIConfiguration', 'lineContinues(String,int)')": [
                        737
                    ],
                    "('org.apache.commons.configuration2#INIConfiguration', None)": [
                        1119
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2#INIConfiguration', 'lineContinues(String,int)')": [
                        737
                    ],
                    "('org.apache.commons.configuration2#INIConfiguration', None)": [
                        1119
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/PatternSubtreeConfigurationWrapper.java": {
                "old": {
                    "('org.apache.commons.configuration2#PatternSubtreeConfigurationWrapper', 'makePath(String)')": [
                        444
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2#PatternSubtreeConfigurationWrapper', 'makePath(String)')": [
                        444
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/PropertiesConfiguration.java": {
                "old": {
                    "('org.apache.commons.configuration2#PropertiesConfiguration', None)": [
                        510
                    ],
                    "('org.apache.commons.configuration2#PropertiesConfiguration', 'propertyLoaded(String,String,Deque)')": [
                        1747
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2#PropertiesConfiguration', None)": [
                        510
                    ],
                    "('org.apache.commons.configuration2#PropertiesConfiguration', 'propertyLoaded(String,String,Deque)')": [
                        1747
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/XMLConfiguration.java": {
                "old": {
                    "('org.apache.commons.configuration2#XMLConfiguration', 'createChildNodeWithValue(ImmutableNode,ImmutableNode,Element,String,boolean,Map,Map)')": [
                        712,
                        713
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2#XMLConfiguration', 'createChildNodeWithValue(ImmutableNode,ImmutableNode,Element,String,boolean,Map,Map)')": [
                        712,
                        713
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/XMLDocumentHelper.java": {
                "old": {
                    "('org.apache.commons.configuration2#XMLDocumentHelper', 'forSourceDocument(Document)')": [
                        142,
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2#XMLDocumentHelper', 'forSourceDocument(Document)')": [
                        142,
                        143
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/beanutils/BeanHelper.java": {
                "old": {
                    "('org.apache.commons.configuration2.beanutils#BeanHelper', 'createPropertyCollection(String,Class)')": [
                        387
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.beanutils#BeanHelper', 'createPropertyCollection(String,Class)')": [
                        387
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/beanutils/XMLBeanDeclaration.java": {
                "old": {
                    "('org.apache.commons.configuration2.beanutils#XMLBeanDeclaration', 'getNestedBeanDeclarations')": [
                        377
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.beanutils#XMLBeanDeclaration', 'getNestedBeanDeclarations')": [
                        377
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/builder/BasicConfigurationBuilder.java": {
                "old": {
                    "('org.apache.commons.configuration2.builder#BasicConfigurationBuilder', 'resetResult')": [
                        332
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.builder#BasicConfigurationBuilder', 'resetResult')": [
                        332
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/builder/combined/CombinedConfigurationBuilder.java": {
                "old": {
                    "('org.apache.commons.configuration2.builder.combined#CombinedConfigurationBuilder', None)": [
                        1452,
                        1464
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.builder.combined#CombinedConfigurationBuilder', None)": [
                        1452,
                        1464
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/builder/combined/CombinedConfigurationBuilderProvider.java": {
                "old": {
                    "('org.apache.commons.configuration2.builder.combined#CombinedConfigurationBuilderProvider', 'createBuilder(ConfigurationDeclaration,Collection)')": [
                        86
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.builder.combined#CombinedConfigurationBuilderProvider', 'createBuilder(ConfigurationDeclaration,Collection)')": [
                        86
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/convert/PropertyConverter.java": {
                "old": {
                    "('org.apache.commons.configuration2.convert#PropertyConverter', 'toColor(Object)')": [
                        666
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.convert#PropertyConverter', 'toColor(Object)')": [
                        666
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/io/DefaultFileSystem.java": {
                "old": {
                    "('org.apache.commons.configuration2.io#DefaultFileSystem', 'getBasePath(String)')": [
                        164
                    ],
                    "('org.apache.commons.configuration2.io#DefaultFileSystem', 'getFileName(String)')": [
                        179
                    ],
                    "('org.apache.commons.configuration2.io#DefaultFileSystem', 'locateFromURL(String,String)')": [
                        222,
                        232
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.io#DefaultFileSystem', 'getBasePath(String)')": [
                        164
                    ],
                    "('org.apache.commons.configuration2.io#DefaultFileSystem', 'getFileName(String)')": [
                        179
                    ],
                    "('org.apache.commons.configuration2.io#DefaultFileSystem', 'locateFromURL(String,String)')": [
                        222,
                        232
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/io/FileHandler.java": {
                "old": {
                    "('org.apache.commons.configuration2.io#FileHandler', 'load(File)')": [
                        733
                    ],
                    "('org.apache.commons.configuration2.io#FileHandler', 'save(String,FileLocator)')": [
                        1224
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.io#FileHandler', 'load(File)')": [
                        733
                    ],
                    "('org.apache.commons.configuration2.io#FileHandler', 'save(String,FileLocator)')": [
                        1224
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/io/FileLocatorUtils.java": {
                "old": {
                    "('org.apache.commons.configuration2.io#FileLocatorUtils', 'constructFile(String,String)')": [
                        160
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.io#FileLocatorUtils', 'constructFile(String,String)')": [
                        160
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/io/VFSFileSystem.java": {
                "old": {
                    "('org.apache.commons.configuration2.io#VFSFileSystem', 'getInputStream(URL)')": [
                        119
                    ],
                    "('org.apache.commons.configuration2.io#VFSFileSystem', 'getURL(String,String)')": [
                        276
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.io#VFSFileSystem', 'getInputStream(URL)')": [
                        119
                    ],
                    "('org.apache.commons.configuration2.io#VFSFileSystem', 'getURL(String,String)')": [
                        276
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java": {
                "old": {
                    "('org.apache.commons.configuration2.plist#XMLPropertyListConfiguration', 'printValue(PrintWriter,int,Object)')": [
                        424
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.plist#XMLPropertyListConfiguration', 'printValue(PrintWriter,int,Object)')": [
                        424
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/tree/InMemoryNodeModel.java": {
                "old": {
                    "('org.apache.commons.configuration2.tree#InMemoryNodeModel', 'createNodeOnPath(Iterator,Collection)')": [
                        989
                    ],
                    "('org.apache.commons.configuration2.tree#InMemoryNodeModel', 'executeTransactionOnCurrentStructure(TransactionInitializer,NodeSelector,TreeData,NodeKeyResolver)')": [
                        1158
                    ],
                    "('org.apache.commons.configuration2.tree#InMemoryNodeModel', 'createDataWithTrackedChildNode(TreeData,ImmutableNode,String,NodeKeyResolver,MutableObject)')": [
                        1318
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.tree#InMemoryNodeModel', 'createNodeOnPath(Iterator,Collection)')": [
                        989
                    ],
                    "('org.apache.commons.configuration2.tree#InMemoryNodeModel', 'executeTransactionOnCurrentStructure(TransactionInitializer,NodeSelector,TreeData,NodeKeyResolver)')": [
                        1158
                    ],
                    "('org.apache.commons.configuration2.tree#InMemoryNodeModel', 'createDataWithTrackedChildNode(TreeData,ImmutableNode,String,NodeKeyResolver,MutableObject)')": [
                        1318
                    ]
                }
            },
            "src/test/java/org/apache/commons/configuration2/sync/TestReadWriteSynchronizer.java": {
                "old": {
                    "('org.apache.commons.configuration2.sync#TestReadWriteSynchronizer', None)": [
                        276
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.sync#TestReadWriteSynchronizer', None)": [
                        276
                    ]
                }
            },
            "src/test/java/org/apache/commons/configuration2/tree/NodeStructureHelper.java": {
                "old": {
                    "('org.apache.commons.configuration2.tree#NodeStructureHelper', 'findNode(ImmutableNode,String,int)')": [
                        579,
                        580
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.tree#NodeStructureHelper', 'findNode(ImmutableNode,String,int)')": [
                        579,
                        580
                    ]
                }
            },
            "src/test/java/org/apache/commons/configuration2/web/TestAppletConfiguration.java": {
                "old": {
                    "('org.apache.commons.configuration2.web#TestAppletConfiguration', 'getConfiguration')": [
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.web#TestAppletConfiguration', 'getConfiguration')": [
                        67
                    ]
                }
            }
        }
    },
    "33da480e63bb9d75674d219e8986ea013a2a6937": {
        "authored_data": "2021 Jun 26 15:32",
        "commit.message": "CONFIGURATION-803 java8 lambda improvements (#112)\n\n",
        "commit.author.name": "Arturo Bernal",
        "pcid": "754b3b55d63a202f2206e2498cbbddda28ae4351",
        "changes": {
            "src/main/java/org/apache/commons/configuration2/builder/BasicConfigurationBuilder.java": {
                "old": {
                    "('org.apache.commons.configuration2.builder#BasicConfigurationBuilder', 'getFilteredParameters')": [
                        742,
                        743,
                        744,
                        745,
                        746,
                        747,
                        748,
                        749,
                        750
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.builder#BasicConfigurationBuilder', 'getFilteredParameters')": [
                        742
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/builder/combined/MultiFileConfigurationBuilder.java": {
                "old": {
                    "('org.apache.commons.configuration2.builder.combined#MultiFileConfigurationBuilder', None)": [
                        113
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.builder.combined#MultiFileConfigurationBuilder', None)": [
                        113
                    ]
                }
            },
            "src/main/java/org/apache/commons/configuration2/tree/ModelTransaction.java": {
                "old": {
                    "('org.apache.commons.configuration2.tree#ModelTransaction', 'fetchOperations(ImmutableNode,int)')": [
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.tree#ModelTransaction', 'fetchOperations(ImmutableNode,int)')": [
                        363
                    ]
                }
            },
            "src/test/java/org/apache/commons/configuration2/TestSystemConfiguration.java": {
                "old": {
                    "('org.apache.commons.configuration2#TestSystemConfiguration', 'testAppendWhileConcurrentAccess')": [
                        107,
                        108,
                        109,
                        110,
                        112,
                        113,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        126
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2#TestSystemConfiguration', 'testAppendWhileConcurrentAccess')": [
                        107,
                        108,
                        109,
                        111,
                        113,
                        115,
                        116,
                        117,
                        118,
                        119,
                        121
                    ]
                }
            },
            "src/test/java/org/apache/commons/configuration2/io/TestFileHandler.java": {
                "old": {
                    "('org.apache.commons.configuration2.io#TestFileHandler', 'testInitPropertiesMultiThreaded')": [
                        1354,
                        1355,
                        1356,
                        1357,
                        1358,
                        1359,
                        1360,
                        1361,
                        1362,
                        1363,
                        1364,
                        1365,
                        1366,
                        1367,
                        1368,
                        1369,
                        1370,
                        1371,
                        1372,
                        1373,
                        1374,
                        1375,
                        1376,
                        1377,
                        1378,
                        1379,
                        1380,
                        1381,
                        1382,
                        1383,
                        1384,
                        1385
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.io#TestFileHandler', 'testInitPropertiesMultiThreaded')": [
                        1354,
                        1355,
                        1356,
                        1357
                    ]
                }
            },
            "src/test/java/org/apache/commons/configuration2/tree/TestInMemoryNodeModel.java": {
                "old": {
                    "('org.apache.commons.configuration2.tree#TestInMemoryNodeModel', 'testConcurrentUpdate')": [
                        660,
                        661,
                        662,
                        663,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671,
                        672,
                        673,
                        674,
                        676
                    ]
                },
                "new": {
                    "('org.apache.commons.configuration2.tree#TestInMemoryNodeModel', 'testConcurrentUpdate')": [
                        660,
                        661,
                        663,
                        664,
                        665,
                        667,
                        668,
                        669,
                        670,
                        671
                    ]
                }
            }
        }
    }
}