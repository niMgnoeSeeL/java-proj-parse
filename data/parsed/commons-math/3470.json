{
    "47a87ce229b930e71ee72508da7427d343878a16": {
        "authored_data": "2012 Jan 18 06:17",
        "commit.message": "In LogNormalDistribution and LogNormalDistributionTest\n  - \"mean\" (of the underlying normal distribution) is now called \"scale\"\n  - \"standard deviation\" (of the underlying normal distribution) is now called \"shape\"\n  - in the javadoc, removed html links that point to internal anchors.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1232755 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "e2c0e16bff26a96037441f828e96eb30146d9e33",
        "changes": {
            "src/main/java/org/apache/commons/math/distribution/LogNormalDistribution.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.distribution#LogNormalDistribution', None)": [
                        67,
                        70,
                        77,
                        78,
                        79,
                        91,
                        92,
                        103,
                        123,
                        132,
                        133
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.distribution#LogNormalDistribution', None)": [
                        67,
                        70,
                        77,
                        89,
                        100,
                        120,
                        129
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/LogNormalDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#LogNormalDistributionTest', 'testGetMean')": [
                        167
                    ],
                    "('org.apache.commons.math.distribution#LogNormalDistributionTest', 'testGetStandardDeviation')": [
                        173
                    ],
                    "('org.apache.commons.math.distribution#LogNormalDistributionTest', 'checkDensity(double,double,double,double)')": [
                        196,
                        197
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#LogNormalDistributionTest', 'testGetScale')": [
                        167
                    ],
                    "('org.apache.commons.math.distribution#LogNormalDistributionTest', 'testGetShape')": [
                        173
                    ],
                    "('org.apache.commons.math.distribution#LogNormalDistributionTest', 'checkDensity(double,double,double,double)')": [
                        196,
                        197,
                        198
                    ]
                }
            }
        }
    },
    "e2c0e16bff26a96037441f828e96eb30146d9e33": {
        "authored_data": "2012 Jan 17 07:22",
        "commit.message": "Javadoc (MATH-733).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1232325 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "64230d2b427c3cd75d149b87ae556fabdb8df491",
        "changes": {
            "src/main/java/org/apache/commons/math/distribution/LogNormalDistribution.java": {
                "old": {
                    "(None, None)": [
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            }
        }
    },
    "64230d2b427c3cd75d149b87ae556fabdb8df491": {
        "authored_data": "2012 Jan 17 07:12",
        "commit.message": "Implementation of log-normal distributions (MATH-733). Patch contributed by Dennis Hendriks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1232324 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "29cd56b6f41313f758e4b559d1140c68afdd55b3",
        "changes": {
            "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26,
                        27
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionTest', None)": [
                        35,
                        173,
                        174
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionTest', None)": [
                        35,
                        173
                    ]
                }
            }
        }
    },
    "29cd56b6f41313f758e4b559d1140c68afdd55b3": {
        "authored_data": "2012 Jan 16 06:38",
        "commit.message": "Removed unchecked exceptions from method signatures. See\n  - Commons-Dev mailing list http://mail-archives.apache.org/mod_mbox/commons-dev/201201.mbox/%3C20120113105913.GM6537%40dusk.harfang.homelinux.org%3E\n  - \"Effective Java, second edition\", item 62.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1231847 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "d96758d1c66b73c4ffe25aade4f6020dbdcf6591",
        "changes": {
            "src/main/java/org/apache/commons/math/random/RandomData.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        39,
                        40,
                        41,
                        56,
                        57,
                        58,
                        73,
                        74,
                        75,
                        87,
                        88,
                        89,
                        107,
                        108,
                        109,
                        128,
                        129,
                        130,
                        131,
                        143,
                        144,
                        145,
                        158,
                        159,
                        160,
                        161,
                        173,
                        174,
                        175,
                        191,
                        192,
                        193,
                        194,
                        213,
                        214,
                        215,
                        216,
                        217,
                        231,
                        232,
                        233,
                        234,
                        235,
                        251,
                        252,
                        253,
                        254,
                        255
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        37,
                        38,
                        39,
                        54,
                        55,
                        56,
                        57,
                        72,
                        73,
                        74,
                        75,
                        87,
                        88,
                        89,
                        90,
                        108,
                        109,
                        110,
                        111,
                        130,
                        131,
                        132,
                        133,
                        145,
                        146,
                        147,
                        148,
                        161,
                        162,
                        163,
                        164,
                        176,
                        177,
                        178,
                        179,
                        195,
                        196,
                        197,
                        198,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextHexString(int)')": [
                        200
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextInt(int,int)')": [
                        236
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureHexString(int)')": [
                        273
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureLong(long,long)')": [
                        335,
                        336
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPoisson(double)')": [
                        361
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextGaussian(double,double)')": [
                        453,
                        454
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextExponential(double)')": [
                        473,
                        474
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextUniform(double,double)')": [
                        531,
                        532
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextUniform(double,double,boolean)')": [
                        553,
                        554
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSample(Collection,int)')": [
                        972,
                        973
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextHexString(int)')": [
                        200
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextInt(int,int)')": [
                        236
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureHexString(int)')": [
                        273
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureLong(long,long)')": [
                        335
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPoisson(double)')": [
                        360
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextGaussian(double,double)')": [
                        452
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextExponential(double)')": [
                        471
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextUniform(double,double)')": [
                        528
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextUniform(double,double,boolean)')": [
                        549
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSample(Collection,int)')": [
                        967
                    ]
                }
            }
        }
    },
    "d96758d1c66b73c4ffe25aade4f6020dbdcf6591": {
        "authored_data": "2012 Jan 13 15:33",
        "commit.message": "Added a test.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1231133 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "d6be0f50056709da9c6d9b0d8415e715345b9a3d",
        "changes": {
            "src/test/java/org/apache/commons/math/linear/QRDecompositionTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRDecompositionTest', None)": [
                        27,
                        32,
                        37,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionTest', None)": [
                        28,
                        33,
                        38,
                        43,
                        244,
                        250,
                        251
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionTest', 'testNonInvertible')": [
                        245,
                        246,
                        247,
                        248,
                        249
                    ]
                }
            }
        }
    },
    "d6be0f50056709da9c6d9b0d8415e715345b9a3d": {
        "authored_data": "2012 Jan 13 09:23",
        "commit.message": "Removed unnecessary import (MATH-731).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1230953 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "946b37c737c3ea0e91fdcf969261b1fc72270d68",
        "changes": {
            "src/test/java/org/apache/commons/math/distribution/TriangularDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ]
                }
            }
        }
    },
    "946b37c737c3ea0e91fdcf969261b1fc72270d68": {
        "authored_data": "2012 Jan 13 07:11",
        "commit.message": "Javadoc\nAdded optional support for transposition of linear operators.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1230907 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "ffbb85d329072fe868856a7f1772e42a7146c9d9",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/RealLinearOperator.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        24,
                        25,
                        32,
                        33,
                        34,
                        35,
                        36,
                        108
                    ],
                    "('org.apache.commons.math.linear#RealLinearOperator', None)": [
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105
                    ],
                    "('org.apache.commons.math.linear#RealLinearOperator', 'operateTranspose(RealVector)')": [
                        92,
                        93,
                        94
                    ],
                    "('org.apache.commons.math.linear#RealLinearOperator', 'isTransposable')": [
                        106,
                        107
                    ]
                }
            }
        }
    },
    "ffbb85d329072fe868856a7f1772e42a7146c9d9": {
        "authored_data": "2012 Jan 13 07:04",
        "commit.message": "Javadoc\nMade sure that exceptions are documented in both javadoc and method signatures.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1230906 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "d61dba0cf68a1400e55d0dcab7e55f6de16ae74a",
        "changes": {
            "src/main/java/org/apache/commons/math/random/RandomData.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        59,
                        60,
                        61,
                        62,
                        66,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        108,
                        113,
                        114,
                        115,
                        116,
                        117,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        189,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        210,
                        211,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        230,
                        231,
                        235,
                        236,
                        237,
                        238,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        30,
                        34,
                        35,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        49,
                        50,
                        54,
                        55,
                        56,
                        57,
                        58,
                        62,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        116,
                        118,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        165,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        183,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        204,
                        208,
                        209,
                        210,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        190,
                        191,
                        192,
                        193,
                        197,
                        198,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        407,
                        408,
                        409,
                        410,
                        411,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        523,
                        524,
                        532,
                        533,
                        534,
                        535,
                        536,
                        589,
                        590,
                        591,
                        592,
                        594,
                        595,
                        596,
                        611,
                        612,
                        613,
                        614,
                        615,
                        616,
                        617,
                        618,
                        619,
                        1000,
                        1001,
                        1002,
                        1003,
                        1004,
                        1005,
                        1006,
                        1007,
                        1008,
                        1009,
                        1010,
                        1011,
                        1012,
                        1013,
                        1014,
                        1020,
                        1021,
                        1022,
                        1023,
                        1024,
                        1025,
                        1026,
                        1027,
                        1050,
                        1055,
                        1058,
                        1059,
                        1060,
                        1061,
                        1062,
                        1063,
                        1064,
                        1065,
                        1066
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextHexString(int)')": [
                        202
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextInt(int,int)')": [
                        248,
                        255
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureHexString(int)')": [
                        300,
                        326
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureLong(long,long)')": [
                        384
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPoisson(double)')": [
                        412
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextGaussian(double,double)')": [
                        515
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextExponential(double)')": [
                        537
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextUniform(double,double)')": [
                        597
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextUniform(double,double,boolean)')": [
                        624
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPermutation(int,int)')": [
                        1034
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSample(Collection,int)')": [
                        1067
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        190,
                        191,
                        192,
                        196,
                        235,
                        244,
                        245,
                        246,
                        272,
                        322,
                        334,
                        360,
                        452,
                        463,
                        464,
                        472,
                        520,
                        529,
                        530,
                        539,
                        931,
                        932,
                        960,
                        961,
                        962,
                        967,
                        970,
                        971
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextHexString(int)')": [
                        200
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextInt(int,int)')": [
                        236,
                        243
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureHexString(int)')": [
                        273,
                        299
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureLong(long,long)')": [
                        335,
                        336,
                        337
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPoisson(double)')": [
                        361
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextGaussian(double,double)')": [
                        453,
                        454,
                        455
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextExponential(double)')": [
                        473,
                        474,
                        475
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextUniform(double,double)')": [
                        531,
                        532,
                        533
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextUniform(double,double,boolean)')": [
                        552,
                        553,
                        554,
                        555
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPermutation(int,int)')": [
                        944
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSample(Collection,int)')": [
                        972,
                        973,
                        974
                    ]
                }
            }
        }
    },
    "d61dba0cf68a1400e55d0dcab7e55f6de16ae74a": {
        "authored_data": "2012 Jan 12 13:05",
        "commit.message": "MATH-664\nAdded a user-defined singularity threshold (with 0 as default to retain\nprevious behaviour).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1230509 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "905a32a8f4188c3a9f6857271259d2476dec34af",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/QRDecomposition.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRDecomposition', None)": [
                        52,
                        60,
                        63,
                        66,
                        69,
                        72,
                        276,
                        284,
                        290,
                        291,
                        293,
                        300,
                        302
                    ],
                    "('org.apache.commons.math.linear#QRDecomposition', 'getSolver')": [
                        271
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#QRDecomposition', None)": [
                        69,
                        70,
                        74,
                        75,
                        77,
                        78,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        297,
                        298,
                        302,
                        303,
                        304,
                        305,
                        307,
                        308,
                        309,
                        312,
                        318
                    ],
                    "('org.apache.commons.math.linear#QRDecomposition', 'getSolver')": [
                        283
                    ]
                }
            }
        }
    },
    "905a32a8f4188c3a9f6857271259d2476dec34af": {
        "authored_data": "2012 Jan 12 08:08",
        "commit.message": "Removed invocations of some Java 1.6 methods (MATH-731).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1230435 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "54755f169ed58c6a66179e62a59d68ba6d631bf8",
        "changes": {
            "src/test/java/org/apache/commons/math/distribution/TriangularDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#TriangularDistributionTest', 'makeInverseCumulativeTestPoints')": [
                        103
                    ],
                    "('org.apache.commons.math.distribution#TriangularDistributionTest', 'makeInverseCumulativeTestValues')": [
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#TriangularDistributionTest', 'makeInverseCumulativeTestPoints')": [
                        103,
                        104,
                        105
                    ],
                    "('org.apache.commons.math.distribution#TriangularDistributionTest', None)": [
                        106,
                        122
                    ],
                    "('org.apache.commons.math.distribution#TriangularDistributionTest', 'makeInverseCumulativeTestValues')": [
                        119,
                        120,
                        121
                    ]
                }
            }
        }
    }
}