{
    "5cfa8ccf09b0bb62b722efdefe5ebfc69b544817": {
        "authored_data": "2011 Sep 05 03:30",
        "commit.message": "In CholeskyDecompositionImpl.Solver\n  - removed solve(double[]) according to JIRA MATH-653\n  - removed solve(ArrayRealVector) because it entails no performance gain over the general solve(RealVector)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1165155 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "e39a38955530163f77965d5a0e0d3cf9c2b61c0c",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#CholeskyDecompositionImpl', None)": [
                        199,
                        201,
                        202,
                        203,
                        204,
                        205,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#CholeskyDecompositionImpl', None)": [
                        199,
                        201,
                        202,
                        203,
                        204,
                        205,
                        226
                    ]
                }
            }
        }
    },
    "d696293435c04a8948c873fee4ed3a23536d7a26": {
        "authored_data": "2011 Sep 04 14:38",
        "commit.message": "moved the binding of the underlying exception from ExceptionContextProvider to ExceptionContext, as diccussed on the dev list\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1165034 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "f4abfdc106966ab25dee34174e2d705738de2878",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/MathArithmeticException.java": {
                "old": {
                    "('org.apache.commons.math.exception#MathArithmeticException', None)": [
                        38,
                        62,
                        63,
                        64
                    ],
                    "('org.apache.commons.math.exception#MathArithmeticException', 'getException')": [
                        65,
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MathArithmeticException', None)": [
                        38,
                        44,
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java": {
                "old": {
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', None)": [
                        37,
                        51,
                        52,
                        53
                    ],
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', 'getException')": [
                        54,
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', None)": [
                        37,
                        45
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java": {
                "old": {
                    "('org.apache.commons.math.exception#MathIllegalStateException', None)": [
                        36,
                        78,
                        79,
                        80
                    ],
                    "('org.apache.commons.math.exception#MathIllegalStateException', 'getException')": [
                        76,
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MathIllegalStateException', None)": [
                        36,
                        46,
                        61
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java": {
                "old": {
                    "('org.apache.commons.math.exception#MathUnsupportedOperationException', None)": [
                        38,
                        59,
                        60,
                        61
                    ],
                    "('org.apache.commons.math.exception#MathUnsupportedOperationException', 'getException')": [
                        62,
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MathUnsupportedOperationException', None)": [
                        38,
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathUserException.java": {
                "old": {
                    "('org.apache.commons.math.exception#MathUserException', None)": [
                        40,
                        86,
                        87,
                        88
                    ],
                    "('org.apache.commons.math.exception#MathUserException', 'getException')": [
                        89,
                        90
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MathUserException', None)": [
                        40,
                        46,
                        56,
                        68,
                        83
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/util/ExceptionContext.java": {
                "old": {
                    "('org.apache.commons.math.exception.util#ExceptionContext', None)": [
                        45,
                        51,
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception.util#ExceptionContext', None)": [
                        43,
                        44,
                        45,
                        46,
                        49,
                        55,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        76
                    ],
                    "('org.apache.commons.math.exception.util#ExceptionContext', 'getThrowable')": [
                        74,
                        75
                    ],
                    "('org.apache.commons.math.exception.util#ExceptionContext', 'writeObject(ObjectOutputStream)')": [
                        197
                    ],
                    "('org.apache.commons.math.exception.util#ExceptionContext', 'readObject(ObjectInputStream)')": [
                        211
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/util/ExceptionContextProvider.java": {
                "old": {
                    "(None, None)": [
                        34,
                        35,
                        36,
                        37,
                        38
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/exception/util/ExceptionContextTest.java": {
                "old": {
                    "('org.apache.commons.math.exception.util#ExceptionContextTest', 'testMessageChain')": [
                        38
                    ],
                    "('org.apache.commons.math.exception.util#ExceptionContextTest', 'testNoArgAddMessage')": [
                        53
                    ],
                    "('org.apache.commons.math.exception.util#ExceptionContextTest', 'testContext')": [
                        60
                    ],
                    "('org.apache.commons.math.exception.util#ExceptionContextTest', 'testSerialize')": [
                        85
                    ],
                    "('org.apache.commons.math.exception.util#ExceptionContextTest', 'testSerializeUnserializable')": [
                        105
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception.util#ExceptionContextTest', 'testMessageChain')": [
                        38
                    ],
                    "('org.apache.commons.math.exception.util#ExceptionContextTest', 'testNoArgAddMessage')": [
                        53
                    ],
                    "('org.apache.commons.math.exception.util#ExceptionContextTest', 'testContext')": [
                        60
                    ],
                    "('org.apache.commons.math.exception.util#ExceptionContextTest', 'testSerialize')": [
                        85
                    ],
                    "('org.apache.commons.math.exception.util#ExceptionContextTest', 'testSerializeUnserializable')": [
                        105
                    ]
                }
            }
        }
    },
    "f4abfdc106966ab25dee34174e2d705738de2878": {
        "authored_data": "2011 Sep 04 14:36",
        "commit.message": "removed MathUserException from StepHandler interface\n\nJIRA: MATH-488\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1165033 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "5c04a9d4560ed51c07cdfbab2fc186013cf2f3ee",
        "changes": {
            "src/main/java/org/apache/commons/math/ode/sampling/StepHandler.java": {
                "old": {
                    "(None, None)": [
                        20,
                        63,
                        64,
                        66
                    ]
                },
                "new": {
                    "(None, None)": [
                        63
                    ]
                }
            }
        }
    },
    "e79fcea6cfa46ae58d80e38bd56bfba87080e17d": {
        "authored_data": "2011 Sep 04 10:29",
        "commit.message": "Report missing resource rather than failing with NPE if not fount\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1164986 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "7dabaab1130b8ca475f7e1e5ab8fa5f155081004",
        "changes": {
            "src/test/java/org/apache/commons/math/stat/CertifiedDataTest.java": {
                "old": {
                    "('org.apache.commons.math.stat#CertifiedDataTest', 'loadStats(String,Object)')": [
                        118
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.stat#CertifiedDataTest', 'loadStats(String,Object)')": [
                        116,
                        117,
                        121,
                        150
                    ]
                }
            }
        }
    },
    "7dabaab1130b8ca475f7e1e5ab8fa5f155081004": {
        "authored_data": "2011 Sep 03 20:06",
        "commit.message": "Completed reversion of r1164756 changes (for now).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1164923 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "97b440fc8e6ce8129bc2c32f23ac4d43a5d012fa",
        "changes": {
            "src/main/java/org/apache/commons/math/complex/Complex.java": {
                "old": {
                    "('org.apache.commons.math.complex#Complex', None)": [
                        81,
                        82,
                        106,
                        228,
                        229,
                        230,
                        231
                    ],
                    "('org.apache.commons.math.complex#Complex', 'divide(Complex)')": [
                        258,
                        259,
                        266,
                        267,
                        268
                    ],
                    "('org.apache.commons.math.complex#Complex', 'divide(double)')": [
                        296
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#Complex', None)": [
                        225
                    ],
                    "('org.apache.commons.math.complex#Complex', 'divide(Complex)')": [
                        252,
                        253,
                        254
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/complex/ComplexTest.java": {
                "old": {
                    "('org.apache.commons.math.complex#ComplexTest', 'testDivideZero')": [
                        232,
                        233
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', None)": [
                        234,
                        235,
                        236,
                        578,
                        579,
                        580
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testDivideZeroZero')": [
                        237,
                        238,
                        239
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testScalarMultiplyInf')": [
                        360,
                        366
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testAtanI')": [
                        576,
                        577
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#ComplexTest', 'testScalarMultiplyInf')": [
                        352,
                        358
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testAtanNaN')": [
                        570
                    ]
                }
            }
        }
    },
    "97b440fc8e6ce8129bc2c32f23ac4d43a5d012fa": {
        "authored_data": "2011 Sep 03 19:22",
        "commit.message": "MATH-657\nReverting to previous behaviour, as requested by P. Steitz.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1164917 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "32b0f7336b7627bc6e471a1091dfb2712b613eee",
        "changes": {
            "src/main/java/org/apache/commons/math/complex/Complex.java": {
                "old": {
                    "('org.apache.commons.math.complex#Complex', 'divide(Complex)')": [
                        259
                    ],
                    "('org.apache.commons.math.complex#Complex', 'divide(double)')": [
                        295
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#Complex', 'divide(Complex)')": [
                        259,
                        260
                    ],
                    "('org.apache.commons.math.complex#Complex', 'divide(double)')": [
                        296,
                        297
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/complex/ComplexTest.java": {
                "old": {
                    "('org.apache.commons.math.complex#ComplexTest', 'testDivideZero')": [
                        232
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testAtanI')": [
                        576,
                        577,
                        578,
                        579
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#ComplexTest', 'testDivideZero')": [
                        232,
                        233
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testAtanI')": [
                        577
                    ]
                }
            }
        }
    },
    "32b0f7336b7627bc6e471a1091dfb2712b613eee": {
        "authored_data": "2011 Sep 02 23:05",
        "commit.message": "MATH-657\nComplex division by zero:\n z / 0 = INF if z is not ZERO\n 0 / 0 = NaN\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1164756 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "6a895ec220feeae0a8798169290c8777ab4fddfc",
        "changes": {
            "src/main/java/org/apache/commons/math/complex/Complex.java": {
                "old": {
                    "('org.apache.commons.math.complex#Complex', None)": [
                        225
                    ],
                    "('org.apache.commons.math.complex#Complex', 'divide(Complex)')": [
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260
                    ],
                    "('org.apache.commons.math.complex#Complex', 'divide(double)')": [
                        288
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#Complex', None)": [
                        81,
                        82,
                        106,
                        228,
                        229,
                        230,
                        231
                    ],
                    "('org.apache.commons.math.complex#Complex', 'divide(Complex)')": [
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265
                    ],
                    "('org.apache.commons.math.complex#Complex', 'divide(double)')": [
                        295
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/complex/ComplexTest.java": {
                "old": {
                    "('org.apache.commons.math.complex#ComplexTest', 'testScalarMultiplyInf')": [
                        352,
                        358
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testAtanNaN')": [
                        570
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#ComplexTest', 'testDivideZero')": [
                        232
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', None)": [
                        233,
                        234,
                        235,
                        580,
                        581,
                        582
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testDivideZeroZero')": [
                        236,
                        237,
                        238
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testScalarMultiplyInf')": [
                        359,
                        365
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testAtanI')": [
                        575,
                        576,
                        577,
                        578,
                        579
                    ]
                }
            }
        }
    },
    "6a895ec220feeae0a8798169290c8777ab4fddfc": {
        "authored_data": "2011 Sep 02 18:20",
        "commit.message": "Simplification of the conversion from RealVector to double[].\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1164662 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "de75806149238269ea9ea02788eb117c92446f7e",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        151
                    ]
                }
            }
        }
    }
}