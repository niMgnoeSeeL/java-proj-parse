{
    "8916830e8a2d551b87ed64559246621d439a8694": {
        "authored_data": "2014 Feb 18 14:33",
        "commit.message": "Clean up LeastSquaresBuilder\n\nProvide methods for using old and new interfaces. Data is stored internally\nusing the new interfaces now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1569356 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "4dcae270e688a3567b767b85354029dd1cbc7c0d",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', None)": [
                        25,
                        26,
                        27,
                        29,
                        31,
                        93,
                        102,
                        104
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'build')": [
                        42
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'model(MultivariateVectorFunction)')": [
                        96
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'jacobian(MultivariateMatrixFunction)')": [
                        107,
                        108
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'target(double)')": [
                        119
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'start(double)')": [
                        130,
                        131
                    ]
                },
                "new": {
                    "(None, None)": [
                        6,
                        8
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', None)": [
                        27,
                        29,
                        31,
                        93,
                        94,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        114,
                        116,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'build')": [
                        42
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'model(MultivariateVectorFunction,MultivariateMatrixFunction)')": [
                        97,
                        98,
                        99
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'model(MultivariateJacobianFunction)')": [
                        108
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'target(RealVector)')": [
                        119,
                        120
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'target(double)')": [
                        131
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'start(RealVector)')": [
                        140,
                        141
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'start(double)')": [
                        152
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'builder(CircleVectorial)')": [
                        62,
                        63
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'builder(StatisticalReferenceDataset)')": [
                        74,
                        75
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testGetIterations(LeastSquaresOptimizer)')": [
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', None)": [
                        557,
                        558
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        33
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'builder(CircleVectorial)')": [
                        65
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'builder(StatisticalReferenceDataset)')": [
                        76
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testGetIterations(LeastSquaresOptimizer)')": [
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', None)": [
                        556
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTest', 'builder(StatisticalReferenceDataset)')": [
                        47,
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTest', 'builder(StatisticalReferenceDataset)')": [
                        47
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTestValidation.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTestValidation', 'builder(StraightLineProblem)')": [
                        291,
                        292
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTestValidation', 'builder(StraightLineProblem)')": [
                        291
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizerTest', 'builder(BevingtonProblem)')": [
                        52,
                        53
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizerTest', 'builder(CircleProblem)')": [
                        58,
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizerTest', 'builder(BevingtonProblem)')": [
                        52
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizerTest', 'builder(CircleProblem)')": [
                        57
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#MinpackTest', 'minpackTest(MinpackFunction,boolean)')": [
                        510,
                        511
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#MinpackTest', 'minpackTest(MinpackFunction,boolean)')": [
                        510
                    ]
                }
            }
        }
    },
    "4dcae270e688a3567b767b85354029dd1cbc7c0d": {
        "authored_data": "2014 Feb 18 14:33",
        "commit.message": "Clean up LeastSquaresFactory\n\n* There are now 3 factory methods: one using the previous interfaces, one using\n  the new interfaces with weights, and one using the new interfaces without\n  weights.\n\n* Make model(...) method public.\n\n* Fix javadoc typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1569355 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "0079828734d62dbc2b44ccf4f21e3dc1daa7b90b",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', None)": [
                        59,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        112,
                        170
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateJacobianFunction,double,double,ConvergenceChecker,int,int)')": [
                        70,
                        71,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateVectorFunction,MultivariateMatrixFunction,double,double,ConvergenceChecker,int,int)')": [
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateVectorFunction,MultivariateMatrixFunction,double,double,RealMatrix,ConvergenceChecker,int,int)')": [
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'combine(MultivariateVectorFunction,MultivariateMatrixFunction)')": [
                        263
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', None)": [
                        59,
                        64,
                        92,
                        93,
                        94,
                        95,
                        96,
                        124,
                        147
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateJacobianFunction,RealVector,RealVector,RealMatrix,ConvergenceChecker,int,int)')": [
                        71,
                        72,
                        73,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateVectorFunction,MultivariateMatrixFunction,double,double,RealMatrix,ConvergenceChecker,int,int)')": [
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'model(MultivariateVectorFunction,MultivariateMatrixFunction)')": [
                        240
                    ]
                }
            }
        }
    },
    "0079828734d62dbc2b44ccf4f21e3dc1daa7b90b": {
        "authored_data": "2014 Feb 18 14:32",
        "commit.message": "Use Real{Vector,Matrix} in LeastSquares interfaces\n\nCovered all of the interfaces in the leastsquares package to use RealVector and\nRealMatrix instead of double[] and double[][]. This reduced some duplicated code.\nFor example Evaluation.computeResiduals() was a complete duplication of\nRealVector.subtract(). It also presents a consistent interface and allows data\nencapsulation.\n\nLastly, this change enables [math] to \"eat our own dog food.\" It enables the\nlinear package to be used in the implementation of the optimization algorithms.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1569354 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "a7a380f93478356b287791b917d6e68e89d20a8f",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractEvaluation.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractEvaluation', 'computeCovariances(double)')": [
                        34,
                        44
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractEvaluation', 'computeSigma(double)')": [
                        48,
                        49,
                        50,
                        51,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        8
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractEvaluation', 'computeCovariances(double)')": [
                        35,
                        45
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractEvaluation', 'computeSigma(double)')": [
                        49,
                        50,
                        51,
                        52,
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/DenseWeightedEvaluation.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#DenseWeightedEvaluation', 'computeResiduals')": [
                        40
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#DenseWeightedEvaluation', 'getPoint')": [
                        47
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#DenseWeightedEvaluation', 'computeValue')": [
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        5
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#DenseWeightedEvaluation', 'computeResiduals')": [
                        41
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#DenseWeightedEvaluation', 'getPoint')": [
                        48
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#DenseWeightedEvaluation', 'computeValue')": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'optimize(LeastSquaresProblem)')": [
                        136,
                        148,
                        167,
                        189,
                        192
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'optimize(LeastSquaresProblem)')": [
                        137,
                        149,
                        168,
                        190,
                        193
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresAdapter.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresAdapter', 'getStart')": [
                        26
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresAdapter', None)": [
                        40
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresAdapter', 'evaluate(double)')": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        3
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresAdapter', 'getStart')": [
                        27
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresAdapter', None)": [
                        41,
                        42
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresAdapter', 'evaluate(RealVector)')": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', None)": [
                        29,
                        157
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateJacobianFunction,double,double,ConvergenceChecker,int,int)')": [
                        42,
                        43
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'weightMatrix(LeastSquaresProblem,RealMatrix)')": [
                        135
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'countEvaluations(LeastSquaresProblem,Incrementor)')": [
                        168
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'evaluationChecker(ConvergenceChecker)')": [
                        195,
                        196,
                        199,
                        200
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'combine(MultivariateVectorFunction,MultivariateMatrixFunction)')": [
                        240,
                        241,
                        243,
                        244
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', None)": [
                        29,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        185
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateJacobianFunction,RealVector,RealVector,ConvergenceChecker,int,int)')": [
                        42,
                        43,
                        51,
                        52,
                        53
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateJacobianFunction,double,double,ConvergenceChecker,int,int)')": [
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'weightMatrix(LeastSquaresProblem,RealMatrix)')": [
                        163
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'countEvaluations(LeastSquaresProblem,Incrementor)')": [
                        196
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'evaluationChecker(ConvergenceChecker)')": [
                        223,
                        224,
                        227,
                        228
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'combine(MultivariateVectorFunction,MultivariateMatrixFunction)')": [
                        268,
                        269,
                        270,
                        271,
                        273,
                        274
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java": {
                "old": {
                    "(None, None)": [
                        22,
                        47,
                        67,
                        81,
                        96,
                        124,
                        129,
                        131
                    ]
                },
                "new": {
                    "(None, None)": [
                        6,
                        23,
                        42,
                        49,
                        64,
                        70,
                        78,
                        85,
                        100,
                        128,
                        133,
                        135
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblemImpl.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresProblemImpl', None)": [
                        39,
                        43,
                        46,
                        47,
                        87,
                        93,
                        97,
                        98,
                        99,
                        107,
                        108,
                        115,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresProblemImpl', 'getObservationSize')": [
                        58
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresProblemImpl', 'getParameterSize')": [
                        62
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresProblemImpl', 'getStart')": [
                        65,
                        66
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresProblemImpl', 'evaluate(double)')": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresProblemImpl', None)": [
                        38,
                        42,
                        45,
                        46,
                        86,
                        92,
                        96,
                        97,
                        98,
                        106,
                        107,
                        114,
                        118,
                        119
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresProblemImpl', 'getObservationSize')": [
                        57
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresProblemImpl', 'getParameterSize')": [
                        61
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresProblemImpl', 'getStart')": [
                        64,
                        65
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresProblemImpl', 'evaluate(RealVector)')": [
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'optimize(LeastSquaresProblem)')": [
                        300,
                        330,
                        331,
                        447,
                        448
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'optimize(LeastSquaresProblem)')": [
                        301,
                        331,
                        332,
                        448,
                        449
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/OptimumImpl.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#OptimumImpl', 'computeCovariances(double)')": [
                        47
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#OptimumImpl', 'computeSigma(double)')": [
                        52
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#OptimumImpl', 'computeValue')": [
                        62
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#OptimumImpl', 'computeResiduals')": [
                        77
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#OptimumImpl', 'getPoint')": [
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        6
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#OptimumImpl', 'computeCovariances(double)')": [
                        48
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#OptimumImpl', 'computeSigma(double)')": [
                        53
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#OptimumImpl', 'computeValue')": [
                        63
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#OptimumImpl', 'computeResiduals')": [
                        78
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#OptimumImpl', 'getPoint')": [
                        83
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testTrivial(LeastSquaresOptimizer)')": [
                        153,
                        154,
                        155
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testQRColumnsPermutation(LeastSquaresOptimizer)')": [
                        165,
                        166,
                        167,
                        168,
                        169,
                        170
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testNoDependency(LeastSquaresOptimizer)')": [
                        185,
                        187
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testOneSet(LeastSquaresOptimizer)')": [
                        200,
                        201,
                        202,
                        203
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testTwoSets(LeastSquaresOptimizer)')": [
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testIllConditioned(LeastSquaresOptimizer)')": [
                        256,
                        257,
                        258,
                        259,
                        260,
                        271,
                        272,
                        273,
                        274,
                        275
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testMoreEstimatedParametersSimple(LeastSquaresOptimizer)')": [
                        288
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testMoreEstimatedParametersUnsorted(LeastSquaresOptimizer)')": [
                        303,
                        304,
                        305,
                        306,
                        307
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testRedundantEquations(LeastSquaresOptimizer)')": [
                        320,
                        321,
                        322
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testInconsistentSizes1(LeastSquaresOptimizer)')": [
                        349,
                        350,
                        351
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testInconsistentSizes2(LeastSquaresOptimizer)')": [
                        371,
                        372,
                        373
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testCircleFitting(LeastSquaresOptimizer)')": [
                        403,
                        404,
                        405,
                        410,
                        428
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testCircleFittingBadInit(LeastSquaresOptimizer)')": [
                        447
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testCircleFittingGoodInit(LeastSquaresOptimizer)')": [
                        468,
                        469
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'doTestStRD(StatisticalReferenceDataset,LeastSquaresOptimizer,double,double)')": [
                        512,
                        513,
                        517
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', None)": [
                        48,
                        49,
                        50,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'assertEquals(double,RealVector,double)')": [
                        91,
                        92,
                        93,
                        94,
                        95
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testTrivial(LeastSquaresOptimizer)')": [
                        170,
                        171,
                        172
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testQRColumnsPermutation(LeastSquaresOptimizer)')": [
                        182,
                        183,
                        184
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testNoDependency(LeastSquaresOptimizer)')": [
                        199,
                        201
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testOneSet(LeastSquaresOptimizer)')": [
                        214,
                        215
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testTwoSets(LeastSquaresOptimizer)')": [
                        231,
                        232
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testIllConditioned(LeastSquaresOptimizer)')": [
                        263,
                        264,
                        275,
                        276
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testMoreEstimatedParametersSimple(LeastSquaresOptimizer)')": [
                        289
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testMoreEstimatedParametersUnsorted(LeastSquaresOptimizer)')": [
                        304,
                        305,
                        306
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testRedundantEquations(LeastSquaresOptimizer)')": [
                        319,
                        320
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testInconsistentSizes1(LeastSquaresOptimizer)')": [
                        347,
                        348
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testInconsistentSizes2(LeastSquaresOptimizer)')": [
                        368,
                        369
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testCircleFitting(LeastSquaresOptimizer)')": [
                        399,
                        400,
                        401,
                        406,
                        424
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testCircleFittingBadInit(LeastSquaresOptimizer)')": [
                        443
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testCircleFittingGoodInit(LeastSquaresOptimizer)')": [
                        464
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'doTestStRD(StatisticalReferenceDataset,LeastSquaresOptimizer,double,double)')": [
                        507,
                        508,
                        512
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTest', 'testComputeSigma')": [
                        90,
                        92,
                        93
                    ]
                },
                "new": {
                    "(None, None)": [
                        18
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTest', 'testComputeSigma')": [
                        91,
                        93,
                        94
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTestValidation.java": {
                "old": {
                    "(None, None)": [
                        16,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTestValidation', 'testParametersErrorMonteCarloObservations')": [
                        98,
                        120,
                        125,
                        141
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTestValidation', 'testParametersErrorMonteCarloParameters')": [
                        215,
                        224,
                        236,
                        237,
                        246,
                        263,
                        283
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTestValidation', 'builder(StraightLineProblem)')": [
                        292
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTestValidation', 'getChi2N(LeastSquaresProblem,double)')": [
                        298,
                        300
                    ]
                },
                "new": {
                    "(None, None)": [
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTestValidation', 'testParametersErrorMonteCarloObservations')": [
                        99,
                        121,
                        126,
                        142
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTestValidation', 'testParametersErrorMonteCarloParameters')": [
                        216,
                        225,
                        237,
                        238,
                        247,
                        248,
                        265,
                        285
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTestValidation', 'builder(StraightLineProblem)')": [
                        294,
                        295,
                        296
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTestValidation', 'getChi2N(LeastSquaresProblem,RealVector)')": [
                        302,
                        304
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizerTest', 'testBevington(LeastSquaresOptimizer)')": [
                        204,
                        207,
                        221,
                        230
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizerTest', 'testCircleFitting2(LeastSquaresOptimizer)')": [
                        261,
                        264
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizerTest', 'testBevington(LeastSquaresOptimizer)')": [
                        206,
                        209,
                        223,
                        232
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizerTest', 'testCircleFitting2(LeastSquaresOptimizer)')": [
                        263,
                        266
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#MinpackTest', 'minpackTest(MinpackFunction,boolean)')": [
                        521
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#MinpackTest', 'minpackTest(MinpackFunction,boolean)')": [
                        521
                    ]
                }
            }
        }
    },
    "a7a380f93478356b287791b917d6e68e89d20a8f": {
        "authored_data": "2014 Feb 18 14:32",
        "commit.message": "Use Evaluation instead of PointVectorValuePair\n\nUse Evaluation instead of PointVectorValuePair in the ConvergenceChecker. This\ngives the checkers access to more information, such as the rms and covariances.\nThe change also simplified the optimizer implementations since they no longer\nhave to keep track of the current function value.\n\nA method was added to LeastSquaresFactory to convert between the two types of\ncheckers and a method added to LeastSquaresBuilder so that it can accept either\ntype. I would have prefered to do this through method overloading, but\noverloading doesn't play well with generics.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1569353 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "3e18e999c7a0648cc9eee72202e07669df3c4ffb",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'optimize(LeastSquaresProblem)')": [
                        126,
                        140,
                        145,
                        148,
                        149,
                        150,
                        151,
                        152,
                        158
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'optimize(LeastSquaresProblem)')": [
                        125,
                        139,
                        144,
                        147,
                        148,
                        149,
                        155
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresAdapter.java": {
                "old": {
                    "(None, None)": [
                        4
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresAdapter', 'getConvergenceChecker')": [
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresAdapter', 'getConvergenceChecker')": [
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', None)": [
                        22
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'checker(ConvergenceChecker)')": [
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        5
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', None)": [
                        23,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'checker(ConvergenceChecker)')": [
                        73
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'checkerPair(ConvergenceChecker)')": [
                        86,
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateJacobianFunction,double,double,ConvergenceChecker,int,int)')": [
                        43
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateVectorFunction,MultivariateMatrixFunction,double,double,ConvergenceChecker,int,int)')": [
                        73
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateVectorFunction,MultivariateMatrixFunction,double,double,RealMatrix,ConvergenceChecker,int,int)')": [
                        105
                    ]
                },
                "new": {
                    "(None, None)": [
                        5
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateJacobianFunction,double,double,ConvergenceChecker,int,int)')": [
                        44
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateVectorFunction,MultivariateMatrixFunction,double,double,ConvergenceChecker,int,int)')": [
                        74
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateVectorFunction,MultivariateMatrixFunction,double,double,RealMatrix,ConvergenceChecker,int,int)')": [
                        106
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', None)": [
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'evaluationChecker(ConvergenceChecker)')": [
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java": {
                "old": {
                    "(None, None)": [
                        5,
                        15
                    ]
                },
                "new": {
                    "(None, None)": [
                        4,
                        15
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblemImpl.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresProblemImpl', None)": [
                        35,
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresProblemImpl', None)": [
                        35,
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'optimize(LeastSquaresProblem)')": [
                        306,
                        322,
                        332,
                        333,
                        334,
                        335,
                        336,
                        343,
                        344,
                        348,
                        407,
                        429,
                        430,
                        431,
                        455,
                        456,
                        457,
                        458,
                        459,
                        518,
                        530,
                        531,
                        532,
                        534,
                        535,
                        543
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'optimize(LeastSquaresProblem)')": [
                        305,
                        330,
                        331,
                        332,
                        339,
                        343,
                        402,
                        447,
                        448,
                        449,
                        508,
                        521,
                        529
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'base')": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'base')": [
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizerTest', 'testMaxEvaluations(LeastSquaresOptimizer)')": [
                        99
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizerTest', 'testMaxEvaluations(LeastSquaresOptimizer)')": [
                        99
                    ]
                }
            }
        }
    },
    "3e18e999c7a0648cc9eee72202e07669df3c4ffb": {
        "authored_data": "2014 Feb 18 14:32",
        "commit.message": "Use enum for LU or QR in GaussNewtonOptimizer\n\nChanged the boolean useLu prarameter to an enum. This is benificial because:\n1. user code is easier to read: new GNO(Decomposition.QR) instead of new GNO(false)\n2. Allows other algorithms to be added in the future\n3. developer code is easier to read. One less if statement in optimize()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1569352 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "49685c8bb46468bb2e3d65d8f8d8d506e636f653",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', None)": [
                        54,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        79,
                        80,
                        81,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'isUseLU')": [
                        82,
                        83
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'withLU(boolean)')": [
                        90,
                        91
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'optimize(LeastSquaresProblem)')": [
                        163,
                        164,
                        165
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'toString')": [
                        180
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', None)": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        81,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        106,
                        107,
                        110,
                        111,
                        112,
                        113,
                        115,
                        116,
                        117
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'getDecomposition')": [
                        108,
                        109
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'withDecomposition(Decomposition)')": [
                        118,
                        119
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'optimize(LeastSquaresProblem)')": [
                        191
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'toString')": [
                        206
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizerTest', 'testGaussNewtonLU')": [
                        47
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizerTest', 'testGaussNewtonQR')": [
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizerTest', 'testGaussNewtonLU')": [
                        48
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizerTest', 'testGaussNewtonQR')": [
                        53
                    ]
                }
            }
        }
    },
    "49685c8bb46468bb2e3d65d8f8d8d506e636f653": {
        "authored_data": "2014 Feb 18 14:32",
        "commit.message": "Make infinite loop in GaussNewton explicit.\n\nThe main loop in GN could only be ended by convergence or exception. I made that\nexplicit with while(true) and removed an unreachable MathInternalError.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1569350 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "8b697afded6133210249f943c220756951b64cbc",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'optimize(LeastSquaresProblem)')": [
                        114,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        177,
                        178
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'optimize(LeastSquaresProblem)')": [
                        113,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134
                    ]
                }
            }
        }
    },
    "8b697afded6133210249f943c220756951b64cbc": {
        "authored_data": "2014 Feb 18 14:32",
        "commit.message": "LevenbergMarquardtOptimizer is thread safe.\n\nConverted the mutable fields to locals.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1569349 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "4cdfc143ea07ff13a26b06ea9f1595289835e3c2",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', None)": [
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        634
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'optimize(LeastSquaresProblem)')": [
                        317,
                        318,
                        438,
                        440
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'determineLMParameter(double,double,double,InternalData,int,double,double,double)')": [
                        635,
                        637,
                        675,
                        737,
                        756,
                        790
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'determineLMDirection(double,double,double,InternalData,int,double)')": [
                        819
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'optimize(LeastSquaresProblem)')": [
                        311,
                        312,
                        313,
                        314,
                        434,
                        436
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', None)": [
                        630,
                        631,
                        632,
                        633,
                        814
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'determineLMParameter(double,double,double,InternalData,int,double,double,double,double,double)')": [
                        634,
                        636,
                        637,
                        675,
                        737,
                        756,
                        790
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'determineLMDirection(double,double,double,InternalData,int,double,double)')": [
                        820,
                        821
                    ]
                }
            }
        }
    },
    "4cdfc143ea07ff13a26b06ea9f1595289835e3c2": {
        "authored_data": "2014 Feb 18 14:32",
        "commit.message": "Add Javadoc to LeastSquaresBuilder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1569348 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "9444e2896789ddfc918e35c660d976aed9b24906",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder.java": {
                "old": {
                    "(None, None)": [
                        9
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'build')": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        9,
                        10,
                        11,
                        12,
                        13,
                        14
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', None)": [
                        17,
                        19,
                        21,
                        23,
                        25,
                        27,
                        29,
                        31,
                        35,
                        36,
                        37,
                        38,
                        39,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresBuilder', 'build')": [
                        40
                    ]
                }
            }
        }
    },
    "9444e2896789ddfc918e35c660d976aed9b24906": {
        "authored_data": "2014 Feb 18 14:32",
        "commit.message": "Fixup javadoc in LeastSquaresProblem\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1569347 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "fc9cb0ce163e54e4bba232d2bbf2f79dc495585d",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java": {
                "old": {
                    "(None, None)": [
                        9,
                        11,
                        22,
                        28,
                        65,
                        66,
                        85,
                        86,
                        87,
                        104,
                        115
                    ]
                },
                "new": {
                    "(None, None)": [
                        9,
                        10,
                        11,
                        13,
                        24,
                        25,
                        31,
                        32,
                        43,
                        44,
                        45,
                        49,
                        50,
                        51,
                        52,
                        76,
                        111,
                        122
                    ]
                }
            }
        }
    },
    "fc9cb0ce163e54e4bba232d2bbf2f79dc495585d": {
        "authored_data": "2014 Feb 18 14:32",
        "commit.message": "Value and Jacobian evaluated in a single method.\n\nA new interface MultivariateJacobianFunction lets the function value and\nJacobian be evaluated at the same time. This saves the user from having to cache\nthe result between calls to get the value and the jacobian.\n\nA factory method was added to create LeastSquaresProblems from the new interface.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1569346 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "4158f9746365df20b45f8c2b5c0d1436dc1756dc",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateVectorFunction,MultivariateMatrixFunction,double,double,ConvergenceChecker,int,int)')": [
                        45,
                        46,
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        5,
                        6,
                        15,
                        215,
                        216,
                        217
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', None)": [
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        53,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateJacobianFunction,double,double,ConvergenceChecker,int,int)')": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateVectorFunction,MultivariateMatrixFunction,double,double,ConvergenceChecker,int,int)')": [
                        76,
                        77
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'combine(MultivariateVectorFunction,MultivariateMatrixFunction)')": [
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblemImpl.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        22
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresProblemImpl', None)": [
                        42,
                        43,
                        44,
                        48,
                        49,
                        58,
                        93,
                        95,
                        99,
                        100,
                        112,
                        116,
                        118
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresProblemImpl', 'evaluate(double)')": [
                        75,
                        77,
                        78
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        25
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresProblemImpl', None)": [
                        41,
                        45,
                        89,
                        91,
                        95,
                        96,
                        108,
                        112
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresProblemImpl', 'evaluate(double)')": [
                        70,
                        71,
                        73,
                        74
                    ]
                }
            }
        }
    }
}