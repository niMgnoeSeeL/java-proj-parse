{
    "a27ca511a591caf813c26862a888e90e54af19a9": {
        "authored_data": "2017 May 04 11:30",
        "commit.message": "MATH-1284: Replace uses of \"Vector1D\" in comments and supporting files with \"Cartesian1D\".",
        "commit.author.name": "Ray DeCampo",
        "pcid": "e508ad09d79302d3cc6b86077d4a6ddb0679a0f5",
        "changes": {
            "src/main/java/org/apache/commons/math4/geometry/euclidean/oned/Cartesian1D.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.oned#Cartesian1D', None)": [
                        129,
                        335,
                        336
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.oned#Cartesian1D', None)": [
                        129,
                        335,
                        336
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/partitioning/Embedding.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            }
        }
    },
    "e508ad09d79302d3cc6b86077d4a6ddb0679a0f5": {
        "authored_data": "2017 May 04 11:27",
        "commit.message": "MATH-1284: Replace uses of Vector3D in user guide with Cartesian2D.",
        "commit.author.name": "Ray DeCampo",
        "pcid": "c7d20472de0dad34bce9483557f43c524e4f3e16",
        "changes": {
            "src/userguide/java/org/apache/commons/math4/userguide/sofm/ChineseRings.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math4.userguide.sofm#ChineseRings', None)": [
                        35,
                        47,
                        55,
                        57,
                        75,
                        90,
                        96,
                        99
                    ],
                    "('org.apache.commons.math4.userguide.sofm#ChineseRings', 'getPoints')": [
                        111
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math4.userguide.sofm#ChineseRings', None)": [
                        35,
                        47,
                        55,
                        57,
                        75,
                        90,
                        96,
                        99
                    ],
                    "('org.apache.commons.math4.userguide.sofm#ChineseRings', 'getPoints')": [
                        111
                    ]
                }
            },
            "src/userguide/java/org/apache/commons/math4/userguide/sofm/ChineseRingsClassifier.java": {
                "old": {
                    "(None, None)": [
                        41
                    ],
                    "('org.apache.commons.math4.userguide.sofm#ChineseRingsClassifier', 'main(String)')": [
                        64
                    ],
                    "('org.apache.commons.math4.userguide.sofm#ChineseRingsClassifier', 'makeInitializers')": [
                        188
                    ],
                    "('org.apache.commons.math4.userguide.sofm#ChineseRingsClassifier', 'createIterable')": [
                        223
                    ],
                    "('org.apache.commons.math4.userguide.sofm#ChineseRingsClassifier', 'createRandomIterator(long)')": [
                        256
                    ]
                },
                "new": {
                    "(None, None)": [
                        41
                    ],
                    "('org.apache.commons.math4.userguide.sofm#ChineseRingsClassifier', 'main(String)')": [
                        64
                    ],
                    "('org.apache.commons.math4.userguide.sofm#ChineseRingsClassifier', 'makeInitializers')": [
                        188
                    ],
                    "('org.apache.commons.math4.userguide.sofm#ChineseRingsClassifier', 'createIterable')": [
                        223
                    ],
                    "('org.apache.commons.math4.userguide.sofm#ChineseRingsClassifier', 'createRandomIterator(long)')": [
                        256
                    ]
                }
            }
        }
    },
    "c7d20472de0dad34bce9483557f43c524e4f3e16": {
        "authored_data": "2017 May 04 11:25",
        "commit.message": "MATH-1284: Replace uses of \"Vector2D\" in comments and supporting files with \"Cartesian2D\".",
        "commit.author.name": "Ray DeCampo",
        "pcid": "a3984815ebf24df07c2add09fbf0069f54666a20",
        "changes": {
            "src/main/java/org/apache/commons/math4/geometry/euclidean/twod/Cartesian2D.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#Cartesian2D', None)": [
                        152,
                        160,
                        168
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#Cartesian2D', None)": [
                        152,
                        160,
                        168
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/twod/Line.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#Line', None)": [
                        205,
                        206
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#Line', None)": [
                        205,
                        206
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/twod/NestedLoops.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#NestedLoops', None)": [
                        168
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#NestedLoops', None)": [
                        168
                    ]
                }
            },
            "src/userguide/java/org/apache/commons/math4/userguide/ClusterAlgorithmComparison.java": {
                "old": {
                    "(None, None)": [
                        43
                    ],
                    "('org.apache.commons.math4.userguide#ClusterAlgorithmComparison', 'makeCircles(int,boolean,double,double,UniformRandomProvider)')": [
                        64,
                        75,
                        79,
                        80
                    ],
                    "('org.apache.commons.math4.userguide#ClusterAlgorithmComparison', 'makeMoons(int,boolean,double,UniformRandomProvider)')": [
                        93,
                        102,
                        106,
                        112
                    ],
                    "('org.apache.commons.math4.userguide#ClusterAlgorithmComparison', 'makeBlobs(int,int,double,double,double,boolean,UniformRandomProvider)')": [
                        123,
                        133,
                        135,
                        146
                    ],
                    "('org.apache.commons.math4.userguide#ClusterAlgorithmComparison', 'makeRandom(int)')": [
                        160,
                        163,
                        168
                    ],
                    "('org.apache.commons.math4.userguide#ClusterAlgorithmComparison', 'generateNoiseVector(RealDistribution)')": [
                        175,
                        176
                    ],
                    "('org.apache.commons.math4.userguide#ClusterAlgorithmComparison', 'normalize(List,double,double,double,double)')": [
                        179,
                        187
                    ]
                },
                "new": {
                    "(None, None)": [
                        43
                    ],
                    "('org.apache.commons.math4.userguide#ClusterAlgorithmComparison', 'makeCircles(int,boolean,double,double,UniformRandomProvider)')": [
                        64,
                        75,
                        79,
                        80
                    ],
                    "('org.apache.commons.math4.userguide#ClusterAlgorithmComparison', 'makeMoons(int,boolean,double,UniformRandomProvider)')": [
                        93,
                        102,
                        106,
                        112
                    ],
                    "('org.apache.commons.math4.userguide#ClusterAlgorithmComparison', 'makeBlobs(int,int,double,double,double,boolean,UniformRandomProvider)')": [
                        123,
                        133,
                        135,
                        146
                    ],
                    "('org.apache.commons.math4.userguide#ClusterAlgorithmComparison', 'makeRandom(int)')": [
                        160,
                        163,
                        168
                    ],
                    "('org.apache.commons.math4.userguide#ClusterAlgorithmComparison', 'generateNoiseVector(RealDistribution)')": [
                        175,
                        176
                    ],
                    "('org.apache.commons.math4.userguide#ClusterAlgorithmComparison', 'normalize(List,double,double,double,double)')": [
                        179,
                        187
                    ]
                }
            },
            "src/userguide/java/org/apache/commons/math4/userguide/LowDiscrepancyGeneratorComparison.java": {
                "old": {
                    "(None, None)": [
                        38,
                        40
                    ],
                    "('org.apache.commons.math4.userguide#LowDiscrepancyGeneratorComparison', 'makeCircle(int,RandomVectorGenerator)')": [
                        54,
                        55,
                        58,
                        66,
                        67
                    ],
                    "('org.apache.commons.math4.userguide#LowDiscrepancyGeneratorComparison', 'makeRandom(int,RandomVectorGenerator)')": [
                        77,
                        78,
                        81
                    ],
                    "('org.apache.commons.math4.userguide#LowDiscrepancyGeneratorComparison', 'normalize(List)')": [
                        88,
                        92,
                        110,
                        111,
                        116
                    ],
                    "('org.apache.commons.math4.userguide#LowDiscrepancyGeneratorComparison', None)": [
                        181,
                        211,
                        212,
                        213,
                        232,
                        233,
                        244,
                        246
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.commons.math4.userguide#LowDiscrepancyGeneratorComparison', 'makeCircle(int,RandomVectorGenerator)')": [
                        53,
                        54,
                        57,
                        65,
                        66
                    ],
                    "('org.apache.commons.math4.userguide#LowDiscrepancyGeneratorComparison', 'makeRandom(int,RandomVectorGenerator)')": [
                        76,
                        77,
                        80
                    ],
                    "('org.apache.commons.math4.userguide#LowDiscrepancyGeneratorComparison', 'normalize(List)')": [
                        87,
                        91,
                        109,
                        110,
                        115
                    ],
                    "('org.apache.commons.math4.userguide#LowDiscrepancyGeneratorComparison', None)": [
                        180,
                        210,
                        211,
                        212,
                        231,
                        232,
                        243,
                        245
                    ]
                }
            },
            "src/userguide/java/org/apache/commons/math4/userguide/geometry/GeometryExample.java": {
                "old": {
                    "(None, None)": [
                        43
                    ],
                    "('org.apache.commons.math4.userguide.geometry#GeometryExample', 'createRandomPoints(int)')": [
                        68,
                        72,
                        75
                    ],
                    "('org.apache.commons.math4.userguide.geometry#GeometryExample', 'createCircle(int)')": [
                        82,
                        83,
                        84,
                        88
                    ],
                    "('org.apache.commons.math4.userguide.geometry#GeometryExample', 'createCross')": [
                        95,
                        96,
                        99,
                        100
                    ],
                    "('org.apache.commons.math4.userguide.geometry#GeometryExample', None)": [
                        153,
                        226,
                        239,
                        258,
                        259,
                        260
                    ]
                },
                "new": {
                    "(None, None)": [
                        43
                    ],
                    "('org.apache.commons.math4.userguide.geometry#GeometryExample', 'createRandomPoints(int)')": [
                        68,
                        72,
                        75
                    ],
                    "('org.apache.commons.math4.userguide.geometry#GeometryExample', 'createCircle(int)')": [
                        82,
                        83,
                        84,
                        88
                    ],
                    "('org.apache.commons.math4.userguide.geometry#GeometryExample', 'createCross')": [
                        95,
                        96,
                        99,
                        100
                    ],
                    "('org.apache.commons.math4.userguide.geometry#GeometryExample', None)": [
                        153,
                        226,
                        239,
                        258,
                        259,
                        260
                    ]
                }
            }
        }
    },
    "35e0ba449325e759e04203fcaa71920cf473baef": {
        "authored_data": "2017 May 04 00:22",
        "commit.message": "Fixed over-zealous \"search-and-replace\".\n",
        "commit.author.name": "Gilles",
        "pcid": "50d2939125522b7fecb16546fe7a5c253566df15",
        "changes": {
            "src/test/java/org/apache/commons/math4/fraction/FractionTest.java": {
                "old": {
                    "('org.apache.commons.math4.fraction#FractionTest', 'testConstructor')": [
                        55,
                        61
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testReciprocal')": [
                        298,
                        299
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testNegate')": [
                        331
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', None)": [
                        332
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testAdd')": [
                        395,
                        396
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testDivide')": [
                        432,
                        433
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testSubtract')": [
                        558,
                        559
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testGetReducedFraction')": [
                        602,
                        603
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.fraction#FractionTest', 'testConstructor')": [
                        55,
                        61
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testReciprocal')": [
                        298,
                        299
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testNegate')": [
                        331
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', None)": [
                        332
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testAdd')": [
                        395,
                        396
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testDivide')": [
                        432,
                        433
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testSubtract')": [
                        558,
                        559
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testGetReducedFraction')": [
                        602,
                        603
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/CombinatoricsUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math4.util#CombinatoricsUtilsTest', 'testFactorialFail')": [
                        251,
                        252
                    ],
                    "('org.apache.commons.math4.util#CombinatoricsUtilsTest', None)": [
                        310
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.util#CombinatoricsUtilsTest', 'testFactorialFail')": [
                        251,
                        252
                    ],
                    "('org.apache.commons.math4.util#CombinatoricsUtilsTest', None)": [
                        310
                    ]
                }
            }
        }
    },
    "50d2939125522b7fecb16546fe7a5c253566df15": {
        "authored_data": "2017 May 03 23:55",
        "commit.message": "MATH-1416: Depend on \"Commons Numbers\".\n\nReplaced class \"ArithmeticUtils\" by its equivalent in module \"commons-numbers-core\".\n",
        "commit.author.name": "Gilles",
        "pcid": "e082e0c48ed611ce3aca949cb47d0e96c35788ef",
        "changes": {
            "src/main/java/org/apache/commons/math4/fraction/BigFraction.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/fraction/Fraction.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/transform/FastCosineTransformer.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/transform/FastFourierTransformer.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/transform/FastHadamardTransformer.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/transform/FastSineTransformer.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/util/Combinations.java": {
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/util/CombinatoricsUtils.java": {
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/differentiation/DerivativeStructureTest.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fraction/FractionTest.java": {
                "old": {
                    "('org.apache.commons.math4.fraction#FractionTest', 'testConstructor')": [
                        55,
                        61
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testReciprocal')": [
                        298,
                        299
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testNegate')": [
                        331
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', None)": [
                        332,
                        415,
                        578
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testAdd')": [
                        387,
                        388,
                        395,
                        396,
                        401,
                        402,
                        407,
                        408,
                        414
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testDivide')": [
                        432,
                        433,
                        465,
                        466,
                        470,
                        471
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testSubtract')": [
                        550,
                        551,
                        558,
                        559,
                        564,
                        565,
                        570,
                        571,
                        577
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testGetReducedFraction')": [
                        602,
                        603
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.fraction#FractionTest', 'testConstructor')": [
                        55,
                        61
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testReciprocal')": [
                        298,
                        299
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testNegate')": [
                        331
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', None)": [
                        332,
                        415,
                        578
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testAdd')": [
                        387,
                        388,
                        395,
                        396,
                        401,
                        402,
                        407,
                        408,
                        414
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testDivide')": [
                        432,
                        433,
                        465,
                        466,
                        470,
                        471
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testSubtract')": [
                        550,
                        551,
                        558,
                        559,
                        564,
                        565,
                        570,
                        571,
                        577
                    ],
                    "('org.apache.commons.math4.fraction#FractionTest', 'testGetReducedFraction')": [
                        602,
                        603
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/InverseHilbertMatrix.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/CombinatoricsUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math4.util#CombinatoricsUtilsTest', 'testBinomialCoefficientFail')": [
                        140,
                        141,
                        146,
                        147
                    ],
                    "('org.apache.commons.math4.util#CombinatoricsUtilsTest', 'testBinomialCoefficientLarge')": [
                        170,
                        175,
                        202,
                        203
                    ],
                    "('org.apache.commons.math4.util#CombinatoricsUtilsTest', 'testFactorialFail')": [
                        251,
                        252
                    ],
                    "('org.apache.commons.math4.util#CombinatoricsUtilsTest', None)": [
                        310
                    ],
                    "('org.apache.commons.math4.util#CombinatoricsUtilsTest', 'binomialCoefficient(int,int)')": [
                        336,
                        360
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math4.util#CombinatoricsUtilsTest', 'testBinomialCoefficientFail')": [
                        140,
                        141,
                        146,
                        147
                    ],
                    "('org.apache.commons.math4.util#CombinatoricsUtilsTest', 'testBinomialCoefficientLarge')": [
                        170,
                        175,
                        202,
                        203
                    ],
                    "('org.apache.commons.math4.util#CombinatoricsUtilsTest', 'testFactorialFail')": [
                        251,
                        252
                    ],
                    "('org.apache.commons.math4.util#CombinatoricsUtilsTest', None)": [
                        310
                    ],
                    "('org.apache.commons.math4.util#CombinatoricsUtilsTest', 'binomialCoefficient(int,int)')": [
                        336,
                        360
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/FastMathTest.java": {
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            }
        }
    },
    "e082e0c48ed611ce3aca949cb47d0e96c35788ef": {
        "authored_data": "2017 May 03 23:19",
        "commit.message": "MATH-1416: Depend on \"Commons Numbers\".\n\nReplaced class \"Precision\" by its equivalent in module \"commons-numbers-core\".\n",
        "commit.author.name": "Gilles",
        "pcid": "ef2507a81658a658c5defdf68a1f1b8259d48aa4",
        "changes": {
            "src/main/java/org/apache/commons/math4/analysis/differentiation/SparseGradient.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/function/Gaussian.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/integration/BaseAbstractUnivariateIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.integration#BaseAbstractUnivariateIntegrator', None)": [
                        83
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.integration#BaseAbstractUnivariateIntegrator', None)": [
                        83
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/interpolation/AkimaSplineInterpolator.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/solvers/BracketingNthOrderBrentSolver.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/solvers/BrentSolver.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/solvers/FieldBracketingNthOrderBrentSolver.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/complex/Complex.java": {
                "old": {
                    "(None, None)": [
                        30,
                        49,
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        49,
                        50
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/complex/Quaternion.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/fitting/leastsquares/EvaluationRmsChecker.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/fitting/leastsquares/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/oned/IntervalsSet.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/Line.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/twod/PolygonsSet.java": {
                "old": {
                    "(None, None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/twod/hull/ConvexHull2D.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/twod/hull/MonotoneChain.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/spherical/oned/Arc.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/spherical/oned/ArcsSet.java": {
                "old": {
                    "(None, None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/DiagonalMatrix.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/EigenDecomposition.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/HessenbergTransformer.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/MatrixUtils.java": {
                "old": {
                    "(None, None)": [
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/SchurTransformer.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/SingularValueDecomposition.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/neuralnet/Neuron.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/AbstractIntegrator.java": {
                "old": {
                    "(None, None)": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/events/FilterType.java": {
                "old": {
                    "(None, None)": [
                        86,
                        264
                    ]
                },
                "new": {
                    "(None, None)": [
                        86,
                        264
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/events/Transformer.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/sampling/FieldStepNormalizer.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/sampling/StepNormalizer.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/optim/linear/SimplexSolver.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/optim/linear/SimplexTableau.java": {
                "old": {
                    "(None, None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/optim/univariate/BrentOptimizer.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/stat/descriptive/AbstractStorelessUnivariateStatistic.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/stat/descriptive/MultivariateSummaryStatistics.java": {
                "old": {
                    "(None, None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/stat/descriptive/StatisticalSummaryValues.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/stat/descriptive/SummaryStatistics.java": {
                "old": {
                    "(None, None)": [
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/stat/descriptive/rank/PSquarePercentile.java": {
                "old": {
                    "(None, None)": [
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/stat/descriptive/rank/Percentile.java": {
                "old": {
                    "(None, None)": [
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/stat/regression/MillerUpdatingRegression.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/stat/regression/SimpleRegression.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/util/ContinuedFraction.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/util/FastMath.java": {
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/util/MathArrays.java": {
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/TestUtils.java": {
                "old": {
                    "(None, None)": [
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/differentiation/DerivativeStructureTest.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/function/HarmonicOscillatorTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/interpolation/AkimaSplineInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/interpolation/BicubicInterpolatingFunctionTest.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/interpolation/PiecewiseBicubicSplineInterpolatingFunctionTest.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/interpolation/TricubicInterpolatingFunctionTest.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/polynomials/PolynomialsUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/dfp/DfpTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/distribution/ExponentialDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/distribution/GumbelDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/distribution/HypergeometricDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/distribution/LaplaceDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/distribution/LevyDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/distribution/LogisticsDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/distribution/NakagamiDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/distribution/UniformIntegerDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/filter/KalmanFilterTest.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/WeightedObservedPointsTest.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/EvaluationTest.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/oned/IntervalTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/oned/IntervalsSetTest.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/oned/Vector1DTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/threed/FieldVector3DTest.java": {
                "old": {
                    "(None, None)": [
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/threed/PLYParser.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/threed/Vector3DTest.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java": {
                "old": {
                    "(None, None)": [
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/spherical/oned/ArcTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/spherical/oned/ArcsSetTest.java": {
                "old": {
                    "(None, None)": [
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/DiagonalMatrixTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/EigenDecompositionTest.java": {
                "old": {
                    "(None, None)": [
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/EigenSolverTest.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/linear/SimplexSolverTest.java": {
                "old": {
                    "(None, None)": [
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/stat/StatUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/stat/descriptive/AggregateSummaryStatisticsTest.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/stat/descriptive/DescriptiveStatisticsTest.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/transform/FastHadamardTransformerTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/FastMathStrictComparisonTest.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/FastMathTest.java": {
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/MathArraysTest.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/OpenIntToDoubleHashMapTest.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/userguide/java/org/apache/commons/math4/userguide/genetics/HelloWorldExample.java": {
                "old": {
                    "(None, None)": [
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ]
                }
            }
        }
    },
    "cc26f76ad1e02bc157066d1903aae9214ad34702": {
        "authored_data": "2017 May 03 22:10",
        "commit.message": "Depend on snapshot version of \"Commons RNG\".\n\nReplace usage of \"BoxMullerGaussianSampler\" (to be deprecated in the next\nversion of \"Commons RNG\").  Update unit tests that are overly sensitive to\nthe sequence generated by the RNG.\n",
        "commit.author.name": "Gilles",
        "pcid": "dff1a0953d97d46290750a46d01be1e1519ae698",
        "changes": {
            "src/main/java/org/apache/commons/math4/distribution/LogNormalDistribution.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math4.distribution#LogNormalDistribution', 'createSampler(UniformRandomProvider)')": [
                        298
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math4.distribution#LogNormalDistribution', 'createSampler(UniformRandomProvider)')": [
                        298
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/distribution/NormalDistribution.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math4.distribution#NormalDistribution', 'createSampler(UniformRandomProvider)')": [
                        245
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29
                    ],
                    "('org.apache.commons.math4.distribution#NormalDistribution', 'createSampler(UniformRandomProvider)')": [
                        246,
                        247
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/filter/KalmanFilterTest.java": {
                "old": {
                    "('org.apache.commons.math4.filter#KalmanFilterTest', 'testCannonball')": [
                        395
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.filter#KalmanFilterTest', 'testCannonball')": [
                        395
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math4.fitting.leastsquares#LevenbergMarquardtOptimizerTest', 'testCircleFitting2')": [
                        265
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#LevenbergMarquardtOptimizerTest', 'testCircleFitting2')": [
                        265
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar#MultiStartMultivariateOptimizerTest', 'testRosenbrock')": [
                        97,
                        111,
                        112,
                        113,
                        114
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar#MultiStartMultivariateOptimizerTest', 'testRosenbrock')": [
                        97,
                        98,
                        112,
                        113,
                        114,
                        115,
                        116
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/random/UncorrelatedRandomVectorGeneratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.random#UncorrelatedRandomVectorGeneratorTest', None)": [
                        40
                    ],
                    "('org.apache.commons.math4.random#UncorrelatedRandomVectorGeneratorTest', 'testMeanAndCorrelation')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.random#UncorrelatedRandomVectorGeneratorTest', None)": [
                        40
                    ],
                    "('org.apache.commons.math4.random#UncorrelatedRandomVectorGeneratorTest', 'testMeanAndCorrelation')": [
                        45
                    ]
                }
            }
        }
    },
    "dff1a0953d97d46290750a46d01be1e1519ae698": {
        "authored_data": "2017 May 01 23:18",
        "commit.message": "MATH-1382: Unnecessary copying.\n\nThanks to Stefan Bunk for the report and fix.\nCloses #42\n",
        "commit.author.name": "Gilles",
        "pcid": "b645f5d085f121ae82e480491a58a8d7753a34d0",
        "changes": {
            "src/main/java/org/apache/commons/math4/distribution/MultivariateNormalDistribution.java": {
                "old": {
                    "('org.apache.commons.math4.distribution#MultivariateNormalDistribution', 'getExponentTerm(double)')": [
                        214
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.distribution#MultivariateNormalDistribution', 'getExponentTerm(double)')": [
                        214
                    ]
                }
            }
        }
    }
}