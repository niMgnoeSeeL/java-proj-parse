{
    "30c9e8c111f0e49acb8e9e7f6119230844fe1ee3": {
        "authored_data": "2010 Aug 22 13:13",
        "commit.message": "Corrected Y variance formula and added error variance methods to return\nwhat were previously reported as Y variances.\nJIRA: MATH-392\nReported and patched by Mark Devaney\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@987897 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "a46c441cec45b72d0716c2ca9a3ca4bd47506d6f",
        "changes": {
            "src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'estimateRegressionParametersStandardErrors')": [
                        151
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', None)": [
                        182,
                        183
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'calculateYVariance')": [
                        187
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'estimateRegressionParametersStandardErrors')": [
                        152,
                        153
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', None)": [
                        170,
                        171,
                        172,
                        173,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        186,
                        187,
                        188,
                        203,
                        204,
                        205,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        227
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'estimateErrorVariance')": [
                        174,
                        175
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'estimateRegressionStandardError')": [
                        184,
                        185
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'calculateYVariance')": [
                        209,
                        210
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'calculateErrorVariance')": [
                        223,
                        224,
                        225,
                        226
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', None)": [
                        104,
                        118,
                        120,
                        122
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'calculateYVariance')": [
                        125
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', None)": [
                        103,
                        116,
                        118,
                        120,
                        122,
                        123,
                        124,
                        125
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'calculateErrorVariance')": [
                        128
                    ],
                    "(None, None)": [
                        132
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java": {
                "old": {
                    "(None, None)": [
                        52,
                        177,
                        178
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', None)": [
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'calculateYVariance')": [
                        173,
                        174,
                        175,
                        176
                    ]
                },
                "new": {
                    "(None, None)": [
                        52
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java": {
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        137
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegressionTest', None)": [
                        126,
                        127,
                        128,
                        129
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegressionTest', 'testYVariance')": [
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testPerfectFit')": [
                        85
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testLongly')": [
                        125
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testSwissFertility')": [
                        190
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        397,
                        398
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testPerfectFit')": [
                        86
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', None)": [
                        112,
                        369,
                        370,
                        371,
                        372,
                        373,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testLongly')": [
                        127,
                        185,
                        186,
                        187,
                        188,
                        189
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testSwissFertility')": [
                        197,
                        293,
                        294,
                        295,
                        296,
                        297
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testYVariance')": [
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'checkVarianceConsistency(OLSMultipleLinearRegression)')": [
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396
                    ]
                }
            }
        }
    },
    "a46c441cec45b72d0716c2ca9a3ca4bd47506d6f": {
        "authored_data": "2010 Aug 21 18:12",
        "commit.message": "Removed trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@987809 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "ede256b235a78521e8a6bdf035271b755f118d31",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/util/MessageFactory.java": {
                "old": {
                    "('org.apache.commons.math.exception.util#MessageFactory', 'buildMessage(Locale,Localizable,Localizable,Object)')": [
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception.util#MessageFactory', 'buildMessage(Locale,Localizable,Localizable,Object)')": [
                        73
                    ]
                }
            }
        }
    },
    "ede256b235a78521e8a6bdf035271b755f118d31": {
        "authored_data": "2010 Aug 21 18:11",
        "commit.message": "Removed tabs and trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@987808 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "93362abb9b5c97f2e529ea05cf69186dbc2284b1",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        84
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        346
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        84
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        346
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        329,
                        330,
                        435,
                        436,
                        437,
                        454
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        329,
                        330,
                        435,
                        436,
                        437,
                        454
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        1959,
                        1960,
                        1961,
                        1962,
                        1963,
                        1964,
                        1965,
                        1966,
                        1967,
                        1968,
                        1969,
                        1970,
                        1971,
                        1972,
                        1973,
                        1974,
                        1975,
                        1976,
                        1977,
                        1978,
                        1979,
                        1980,
                        1981,
                        1982,
                        1983,
                        1984,
                        1985,
                        1986,
                        1987,
                        1988,
                        1989,
                        1990,
                        1991,
                        1992,
                        1993,
                        1994,
                        1995,
                        1996,
                        1997,
                        1998,
                        1999,
                        2000,
                        2001,
                        2002,
                        2003,
                        2004,
                        2005,
                        2006,
                        2007,
                        2008,
                        2009,
                        2010,
                        2011,
                        2012,
                        2013,
                        2014,
                        2015,
                        2016,
                        2017
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'safeNorm(double)')": [
                        2018,
                        2053
                    ],
                    "(None, None)": [
                        2072
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        1959,
                        1960,
                        1961,
                        1962,
                        1963,
                        1964,
                        1965,
                        1966,
                        1967,
                        1968,
                        1969,
                        1970,
                        1971,
                        1972,
                        1973,
                        1974,
                        1975,
                        1976,
                        1977,
                        1978,
                        1979,
                        1980,
                        1981,
                        1982,
                        1983,
                        1984,
                        1985,
                        1986,
                        1987,
                        1988,
                        1989,
                        1990,
                        1991,
                        1992,
                        1993,
                        1994,
                        1995,
                        1996,
                        1997,
                        1998,
                        1999,
                        2000,
                        2001,
                        2002,
                        2003,
                        2004,
                        2005,
                        2006,
                        2007,
                        2008,
                        2009,
                        2010,
                        2011,
                        2012,
                        2013,
                        2014,
                        2015,
                        2016,
                        2017
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'safeNorm(double)')": [
                        2018,
                        2053
                    ],
                    "(None, None)": [
                        2072
                    ]
                }
            }
        }
    },
    "93362abb9b5c97f2e529ea05cf69186dbc2284b1": {
        "authored_data": "2010 Aug 16 08:45",
        "commit.message": "Code simplified in AbstractLeastSquaresOptimizer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@985828 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Dimitri Pourbaix",
        "pcid": "19f58cfa37a40cb9a52d3b6e02577eadab4edc81",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        53,
                        59,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        92
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateJacobian')": [
                        191,
                        192,
                        194,
                        197,
                        200,
                        201
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateResidualsAndCost')": [
                        228,
                        229
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'getCovariances')": [
                        281
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        346,
                        351,
                        352,
                        353,
                        354
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        53,
                        59,
                        86
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateJacobian')": [
                        185,
                        186,
                        188,
                        191,
                        194,
                        195
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateResidualsAndCost')": [
                        222
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'getCovariances')": [
                        274
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        343,
                        344,
                        345
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        84
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        84
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        273,
                        288,
                        321,
                        348,
                        349,
                        390,
                        446,
                        447
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'determineLMParameter(double,double,double,double,double,double)')": [
                        517,
                        553,
                        568,
                        628
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'determineLMDirection(double,double,double,double)')": [
                        679,
                        710,
                        723,
                        730,
                        733,
                        741,
                        742,
                        762
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'qrDecomposition')": [
                        803,
                        804,
                        818,
                        819,
                        840,
                        847,
                        852,
                        853,
                        856,
                        857
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'qTy(double)')": [
                        877,
                        881
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        273,
                        288,
                        321,
                        348,
                        349,
                        390,
                        446,
                        447
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'determineLMParameter(double,double,double,double,double,double)')": [
                        517,
                        553,
                        568,
                        628
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'determineLMDirection(double,double,double,double)')": [
                        679,
                        710,
                        723,
                        730,
                        733,
                        741,
                        742,
                        762
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'qrDecomposition')": [
                        803,
                        804,
                        818,
                        819,
                        840,
                        847,
                        852,
                        853,
                        856,
                        857
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'qTy(double)')": [
                        877,
                        881
                    ]
                }
            }
        }
    },
    "19f58cfa37a40cb9a52d3b6e02577eadab4edc81": {
        "authored_data": "2010 Aug 14 21:59",
        "commit.message": "MATH-406 corrected\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@985589 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Dimitri Pourbaix",
        "pcid": "6b4085c327102d1479fa08e3d60af9ef0fc1c73a",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateJacobian')": [
                        192,
                        194
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'getCovariances')": [
                        273
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        87,
                        88,
                        89,
                        90,
                        91,
                        92
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateJacobian')": [
                        198,
                        200,
                        201
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateResidualsAndCost')": [
                        229
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'getCovariances')": [
                        281
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        353,
                        354,
                        355
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        273,
                        288,
                        321,
                        390
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'determineLMParameter(double,double,double,double,double,double)')": [
                        517,
                        553,
                        568,
                        628
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'determineLMDirection(double,double,double,double)')": [
                        679,
                        710,
                        723,
                        730,
                        733,
                        741,
                        742,
                        762
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'qrDecomposition')": [
                        803,
                        804,
                        818,
                        819,
                        840,
                        847,
                        852,
                        853,
                        856,
                        857
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'qTy(double)')": [
                        877,
                        881
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        273,
                        288,
                        321,
                        390
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'determineLMParameter(double,double,double,double,double,double)')": [
                        517,
                        553,
                        568,
                        628
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'determineLMDirection(double,double,double,double)')": [
                        679,
                        710,
                        723,
                        730,
                        733,
                        741,
                        742,
                        762
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'qrDecomposition')": [
                        803,
                        804,
                        818,
                        819,
                        840,
                        847,
                        852,
                        853,
                        856,
                        857
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'qTy(double)')": [
                        877,
                        881
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFittingBadInit')": [
                        475,
                        476
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFittingBadInit')": [
                        475,
                        476
                    ]
                }
            }
        }
    },
    "6b4085c327102d1479fa08e3d60af9ef0fc1c73a": {
        "authored_data": "2010 Aug 11 15:55",
        "commit.message": "MathUtils.safeNorm (translation of enorm.f from Minpack) added\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@984453 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Dimitri Pourbaix",
        "pcid": "784e4f69ec67d511a0620a2b030688f186ebb959",
        "changes": {
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "new": {
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        1958,
                        1959,
                        1960,
                        1961,
                        1962,
                        1963,
                        1964,
                        1965,
                        1966,
                        1967,
                        1968,
                        1969,
                        1970,
                        1971,
                        1972,
                        1973,
                        1974,
                        1975,
                        1976,
                        1977,
                        1978,
                        1979,
                        1980,
                        1981,
                        1982,
                        1983,
                        1984,
                        1985,
                        1986,
                        1987,
                        1988,
                        1989,
                        1990,
                        1991,
                        1992,
                        1993,
                        1994,
                        1995,
                        1996,
                        1997,
                        1998,
                        1999,
                        2000,
                        2001,
                        2002,
                        2003,
                        2004,
                        2005,
                        2006,
                        2007,
                        2008,
                        2009,
                        2010,
                        2011,
                        2012,
                        2013,
                        2014,
                        2015,
                        2016,
                        2017
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'safeNorm(double)')": [
                        2018,
                        2019,
                        2020,
                        2021,
                        2022,
                        2023,
                        2024,
                        2025,
                        2026,
                        2027,
                        2028,
                        2029,
                        2030,
                        2031,
                        2032,
                        2033,
                        2034,
                        2035,
                        2036,
                        2037,
                        2038,
                        2039,
                        2040,
                        2041,
                        2042,
                        2043,
                        2044,
                        2045,
                        2046,
                        2047,
                        2048,
                        2049,
                        2050,
                        2051,
                        2052,
                        2053,
                        2054,
                        2055,
                        2056,
                        2057,
                        2058,
                        2059,
                        2060,
                        2061,
                        2062,
                        2063,
                        2064,
                        2065,
                        2066,
                        2067,
                        2068,
                        2069,
                        2070
                    ],
                    "(None, None)": [
                        2072,
                        2073
                    ]
                }
            }
        }
    },
    "784e4f69ec67d511a0620a2b030688f186ebb959": {
        "authored_data": "2010 Aug 11 13:40",
        "commit.message": "MATH-405 corrected\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@984404 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Dimitri Pourbaix",
        "pcid": "31fef8fab1db1629eda5a118ad8669acee10f4f7",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'getChiSquare')": [
                        250,
                        251,
                        252,
                        253,
                        254,
                        255
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'getChiSquare')": [
                        250
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        270,
                        279,
                        280,
                        318,
                        348,
                        360,
                        368,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        258,
                        259,
                        272,
                        273,
                        274,
                        283,
                        321,
                        329,
                        330,
                        351,
                        352,
                        353,
                        356,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#MinpackTest', 'testMinpackFreudensteinRoth')": [
                        155,
                        156,
                        161,
                        162
                    ],
                    "('org.apache.commons.math.optimization.general#MinpackTest', 'testMinpackJennrichSampson')": [
                        328
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#MinpackTest', 'testMinpackFreudensteinRoth')": [
                        155,
                        156,
                        161,
                        162
                    ],
                    "('org.apache.commons.math.optimization.general#MinpackTest', 'testMinpackJennrichSampson')": [
                        328,
                        329
                    ]
                }
            }
        }
    },
    "31fef8fab1db1629eda5a118ad8669acee10f4f7": {
        "authored_data": "2010 Aug 10 12:45",
        "commit.message": "Minor clean-up (to avoid changing a method arguments in-place).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@983968 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "d2fd025403ff0412ff2c8b515805c69c05fc67c3",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/general/PowellOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#PowellOptimizer', 'doOptimize')": [
                        115,
                        117,
                        121,
                        124,
                        142,
                        144,
                        159,
                        162,
                        166
                    ],
                    "('org.apache.commons.math.optimization.general#PowellOptimizer', None)": [
                        180,
                        188
                    ],
                    "('org.apache.commons.math.optimization.general#PowellOptimizer', 'setNewPointAndDirection(double,double,double)')": [
                        181,
                        182,
                        183,
                        186,
                        187
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#PowellOptimizer', 'doOptimize')": [
                        116,
                        120,
                        123,
                        124,
                        142,
                        143,
                        145,
                        160,
                        163,
                        164,
                        168
                    ],
                    "('org.apache.commons.math.optimization.general#PowellOptimizer', None)": [
                        182,
                        183,
                        184
                    ],
                    "('org.apache.commons.math.optimization.general#PowellOptimizer', 'newPointAndDirection(double,double,double)')": [
                        185,
                        186,
                        187,
                        189,
                        190,
                        191,
                        193,
                        194,
                        195,
                        196
                    ]
                }
            }
        }
    },
    "d2fd025403ff0412ff2c8b515805c69c05fc67c3": {
        "authored_data": "2010 Aug 10 10:46",
        "commit.message": "Moved \"Localizable\", \"DummyLocalizable\" and \"LocalizedFormats\" from\npackage \"exception\" to package \"exception.util\". Modified \"import\"\nstatements in all affected files.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@983921 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "c15e80eba987c7f43462c8fdd38ac0b86f71a3f1",
        "changes": {
            "src/main/java/org/apache/commons/math/ConvergenceException.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/DimensionMismatchException.java": {
                "old": {
                    "(None, None)": [
                        19
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/DuplicateSampleAbscissaException.java": {
                "old": {
                    "(None, None)": [
                        19
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/FunctionEvaluationException.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/MathConfigurationException.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/MathException.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/MathRuntimeException.java": {
                "old": {
                    "(None, None)": [
                        29,
                        30,
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        30,
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/MaxIterationsExceededException.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingBicubicSplineInterpolator.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/complex/Complex.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/complex/ComplexFormat.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/complex/ComplexUtils.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/estimation/EstimationException.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java": {
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/NoDataException.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/NonMonotonousSequenceException.java": {
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/NotPositiveException.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/NullArgumentException.java": {
                "new": {
                    "(None, None)": [
                        18,
                        19,
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/OutOfRangeException.java": {
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/ZeroException.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/util/MessageFactory.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/AbstractFormat.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/BigFraction.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/Fraction.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/FractionConversionException.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/FractionFormat.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/genetics/ListPopulation.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/genetics/RandomKeyMutation.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/Rotation.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/Vector3D.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/Vector3DFormat.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/ArrayRealVector.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/MatrixIndexException.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/MatrixUtils.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/NotPositiveDefiniteMatrixException.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/NotSymmetricMatrixException.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/SingularMatrixException.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/SparseFieldVector.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/DerivativeException.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/IntegratorException.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/events/EventException.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/OptimizationException.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/UnboundedSolutionException.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/ValueServer.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/Frequency.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/StatUtils.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/correlation/Covariance.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java": {
                "old": {
                    "(None, None)": [
                        19
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/FastSineTransformer.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/ContinuedFraction.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/DefaultTransformer.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/MathExceptionTest.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/MaxIterationsExceededExceptionTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/MatrixIndexExceptionTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/util/TestBean.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            }
        }
    },
    "c15e80eba987c7f43462c8fdd38ac0b86f71a3f1": {
        "authored_data": "2010 Aug 06 13:29",
        "commit.message": "MATH-401\nCreated \"NullArgumentException\" (subclass of \"MathIllegalArgumentException\").\nChanged all occurrences of \"createIllegalArgumentException\" (in \"MathRuntime\")\nto throw the new exception whenever a \"null\" is not allowed. Added a few\nchecks for null in \"BigFraction.java\".\nSimplified \"LocalizedFormats\" enum.\nChanged \"ZeroNotAllowedException\" to \"ZeroException\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@982950 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "d402f6b5e1016bfbd4a36b46a06b3caa73c67880",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java": {
                "old": {
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', None)": [
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', None)": [
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', None)": [
                        77
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', None)": [
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'bracket(UnivariateRealFunction,double,double,double,int)')": [
                        173
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'setup(UnivariateRealFunction)')": [
                        228
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'bracket(UnivariateRealFunction,double,double,double,int)')": [
                        174
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'setup(UnivariateRealFunction)')": [
                        229
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/complex/ComplexFormat.java": {
                "old": {
                    "('org.apache.commons.math.complex#ComplexFormat', None)": [
                        361,
                        362,
                        375,
                        376
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'setImaginaryFormat(NumberFormat)')": [
                        366,
                        367
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'setRealFormat(NumberFormat)')": [
                        380,
                        381
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', None)": [
                        362,
                        374
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'setImaginaryFormat(NumberFormat)')": [
                        366
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'setRealFormat(NumberFormat)')": [
                        378
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/LocalizedFormats.java": {
                "old": {
                    "(None, None)": [
                        148,
                        152,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225
                    ]
                },
                "new": {
                    "(None, None)": [
                        151,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/AbstractFormat.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.fraction#AbstractFormat', None)": [
                        117,
                        118,
                        131,
                        132
                    ],
                    "('org.apache.commons.math.fraction#AbstractFormat', 'setDenominatorFormat(NumberFormat)')": [
                        122,
                        123
                    ],
                    "('org.apache.commons.math.fraction#AbstractFormat', 'setNumeratorFormat(NumberFormat)')": [
                        136,
                        137
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.fraction#AbstractFormat', None)": [
                        117,
                        129
                    ],
                    "('org.apache.commons.math.fraction#AbstractFormat', 'setDenominatorFormat(NumberFormat)')": [
                        121
                    ],
                    "('org.apache.commons.math.fraction#AbstractFormat', 'setNumeratorFormat(NumberFormat)')": [
                        133
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/BigFraction.java": {
                "old": {
                    "('org.apache.commons.math.fraction#BigFraction', None)": [
                        107,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        501,
                        502,
                        604,
                        605,
                        654,
                        655,
                        657,
                        658,
                        659,
                        660,
                        841,
                        842,
                        843,
                        844,
                        845,
                        885,
                        886,
                        888,
                        889,
                        1026,
                        1027,
                        1028,
                        1029,
                        1030,
                        1031,
                        1072,
                        1073,
                        1074,
                        1076,
                        1077
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.fraction#BigFraction', None)": [
                        109,
                        110,
                        111,
                        112,
                        113,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        503,
                        608,
                        657,
                        659,
                        660,
                        844,
                        845,
                        846,
                        889,
                        891,
                        1031,
                        1032,
                        1033,
                        1077,
                        1079
                    ],
                    "('org.apache.commons.math.fraction#BigFraction', 'add(BigFraction)')": [
                        506,
                        507,
                        508
                    ],
                    "('org.apache.commons.math.fraction#BigFraction', 'divide(BigFraction)')": [
                        663,
                        664,
                        665
                    ],
                    "('org.apache.commons.math.fraction#BigFraction', 'multiply(BigInteger)')": [
                        849,
                        850,
                        851
                    ],
                    "('org.apache.commons.math.fraction#BigFraction', 'multiply(BigFraction)')": [
                        894,
                        895,
                        896
                    ],
                    "('org.apache.commons.math.fraction#BigFraction', 'subtract(BigInteger)')": [
                        1036,
                        1037,
                        1038
                    ],
                    "('org.apache.commons.math.fraction#BigFraction', 'subtract(BigFraction)')": [
                        1082,
                        1083,
                        1084
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/Fraction.java": {
                "old": {
                    "('org.apache.commons.math.fraction#Fraction', 'addSub(Fraction,boolean)')": [
                        476
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'multiply(Fraction)')": [
                        533
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'divide(Fraction)')": [
                        568
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'addSub(Fraction,boolean)')": [
                        477
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'multiply(Fraction)')": [
                        534
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'divide(Fraction)')": [
                        569
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java": {
                "old": {
                    "(None, None)": [
                        24,
                        241
                    ],
                    "('org.apache.commons.math.fraction#ProperBigFractionFormat', None)": [
                        231,
                        232
                    ],
                    "('org.apache.commons.math.fraction#ProperBigFractionFormat', 'setWholeFormat(NumberFormat)')": [
                        236,
                        237
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.fraction#ProperBigFractionFormat', None)": [
                        231
                    ],
                    "('org.apache.commons.math.fraction#ProperBigFractionFormat', 'setWholeFormat(NumberFormat)')": [
                        235
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.fraction#ProperFractionFormat', None)": [
                        224,
                        225
                    ],
                    "('org.apache.commons.math.fraction#ProperFractionFormat', 'setWholeFormat(NumberFormat)')": [
                        229,
                        230
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.fraction#ProperFractionFormat', None)": [
                        224
                    ],
                    "('org.apache.commons.math.fraction#ProperFractionFormat', 'setWholeFormat(NumberFormat)')": [
                        228
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianDerivativeFunction', None)": [
                        68,
                        86,
                        92
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianDerivativeFunction', None)": [
                        69,
                        87,
                        93
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFunction', None)": [
                        80,
                        100,
                        106
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFunction', None)": [
                        81,
                        101,
                        107
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/GaussianParametersGuesser.java": {
                "old": {
                    "(None, None)": [
                        23,
                        27,
                        30
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianParametersGuesser', None)": [
                        52
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianParametersGuesser', 'interpolateXAtY(WeightedObservedPoint,int,int,double)')": [
                        157
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianParametersGuesser', 'getInterpolationPointsForY(WeightedObservedPoint,int,int,double)')": [
                        193
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        30
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianParametersGuesser', None)": [
                        52
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianParametersGuesser', 'interpolateXAtY(WeightedObservedPoint,int,int,double)')": [
                        157
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianParametersGuesser', 'getInterpolationPointsForY(WeightedObservedPoint,int,int,double)')": [
                        193
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java": {
                "old": {
                    "(None, None)": [
                        23,
                        26
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunction', 'validateParameters(double)')": [
                        156,
                        162
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunction', 'validateParameters(double)')": [
                        156,
                        162
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java": {
                "old": {
                    "('org.apache.commons.math.stat.correlation#PearsonsCorrelation', None)": [
                        95
                    ],
                    "('org.apache.commons.math.stat.correlation#PearsonsCorrelation', 'correlation(double,double)')": [
                        228,
                        229
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.commons.math.stat.correlation#PearsonsCorrelation', None)": [
                        97
                    ],
                    "('org.apache.commons.math.stat.correlation#PearsonsCorrelation', 'correlation(double,double)')": [
                        230
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.stat.descriptive#AbstractStorelessUnivariateStatistic', 'evaluate(double)')": [
                        59
                    ],
                    "('org.apache.commons.math.stat.descriptive#AbstractStorelessUnivariateStatistic', 'incrementAll(double)')": [
                        127
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.stat.descriptive#AbstractStorelessUnivariateStatistic', 'evaluate(double)')": [
                        59
                    ],
                    "('org.apache.commons.math.stat.descriptive#AbstractStorelessUnivariateStatistic', 'incrementAll(double)')": [
                        127
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#AbstractUnivariateStatistic', 'test(double,int,int)')": [
                        81,
                        85,
                        86,
                        90,
                        91
                    ],
                    "('org.apache.commons.math.stat.descriptive#AbstractUnivariateStatistic', 'test(double,double,int,int)')": [
                        143,
                        146,
                        147,
                        148
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math.stat.descriptive#AbstractUnivariateStatistic', 'test(double,int,int)')": [
                        84,
                        88,
                        92
                    ],
                    "('org.apache.commons.math.stat.descriptive#AbstractUnivariateStatistic', 'test(double,double,int,int)')": [
                        144,
                        147,
                        148
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#SemiVariance', 'evaluate(double)')": [
                        179
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#SemiVariance', 'evaluate(double)')": [
                        179
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java": {
                "old": {
                    "(None, None)": [
                        21,
                        606
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Variance', 'evaluate(double)')": [
                        217
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Variance', None)": [
                        592
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Variance', 'evaluate(double)')": [
                        217
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Variance', 'copy(Variance,Variance)')": [
                        601,
                        602,
                        603,
                        604
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/DefaultTransformer.java": {
                "old": {
                    "('org.apache.commons.math.util#DefaultTransformer', None)": [
                        41,
                        42
                    ],
                    "('org.apache.commons.math.util#DefaultTransformer', 'transform(Object)')": [
                        45,
                        46,
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.util#DefaultTransformer', None)": [
                        42,
                        43
                    ],
                    "('org.apache.commons.math.util#DefaultTransformer', 'transform(Object)')": [
                        46,
                        48
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/fraction/BigFractionTest.java": {
                "old": {
                    "('org.apache.commons.math.fraction#BigFractionTest', 'testConstructor')": [
                        67,
                        72
                    ],
                    "('org.apache.commons.math.fraction#BigFractionTest', 'testAdd')": [
                        329,
                        330
                    ],
                    "('org.apache.commons.math.fraction#BigFractionTest', 'testDivide')": [
                        417,
                        418
                    ],
                    "('org.apache.commons.math.fraction#BigFractionTest', 'testMultiply')": [
                        463
                    ],
                    "('org.apache.commons.math.fraction#BigFractionTest', None)": [
                        464
                    ],
                    "('org.apache.commons.math.fraction#BigFractionTest', 'testSubtract')": [
                        481,
                        482
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.fraction#BigFractionTest', 'testConstructor')": [
                        68,
                        73
                    ],
                    "('org.apache.commons.math.fraction#BigFractionTest', 'testAdd')": [
                        330,
                        331
                    ],
                    "('org.apache.commons.math.fraction#BigFractionTest', 'testDivide')": [
                        418,
                        419
                    ],
                    "('org.apache.commons.math.fraction#BigFractionTest', 'testMultiply')": [
                        464
                    ],
                    "('org.apache.commons.math.fraction#BigFractionTest', None)": [
                        465
                    ],
                    "('org.apache.commons.math.fraction#BigFractionTest', 'testSubtract')": [
                        482,
                        483
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunctionTest', None)": [
                        136
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunctionTest', None)": [
                        136
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/util/DefaultTransformerTest.java": {
                "old": {
                    "('org.apache.commons.math.util#DefaultTransformerTest', 'testTransformNull')": [
                        44,
                        48
                    ],
                    "('org.apache.commons.math.util#DefaultTransformerTest', None)": [
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.util#DefaultTransformerTest', 'testTransformNull')": [
                        45,
                        49
                    ],
                    "('org.apache.commons.math.util#DefaultTransformerTest', None)": [
                        50
                    ]
                }
            }
        }
    }
}