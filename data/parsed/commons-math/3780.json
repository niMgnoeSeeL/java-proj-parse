{
    "7ec522753a7d178c8d92341e85200955a291fe3f": {
        "authored_data": "2011 Oct 01 15:15",
        "commit.message": "Added a getRuntimeClass method to the Field interface.\n\nThis interface allows using a complete hierarchy of fields sharing a\ncommon interface.\n\nJIRA: MATH-284\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178009 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "78d9deeadcba6476dd3fc0f40e03fbbed473949c",
        "changes": {
            "src/main/java/org/apache/commons/math/Field.java": {
                "new": {
                    "(None, None)": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/complex/ComplexField.java": {
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.complex#ComplexField', None)": [
                        61,
                        64,
                        65
                    ],
                    "('org.apache.commons.math.complex#ComplexField', 'getRuntimeClass')": [
                        62,
                        63
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/dfp/DfpField.java": {
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.dfp#DfpField', None)": [
                        411,
                        414,
                        415
                    ],
                    "('org.apache.commons.math.dfp#DfpField', 'getRuntimeClass')": [
                        412,
                        413
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/BigFractionField.java": {
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.fraction#BigFractionField', None)": [
                        61,
                        64
                    ],
                    "('org.apache.commons.math.fraction#BigFractionField', 'getRuntimeClass')": [
                        62,
                        63
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/FractionField.java": {
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.fraction#FractionField', None)": [
                        61,
                        64
                    ],
                    "('org.apache.commons.math.fraction#FractionField', 'getRuntimeClass')": [
                        62,
                        63
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'buildArray(Field,int,int)')": [
                        140,
                        144
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'buildArray(Field,int)')": [
                        163
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'buildArray(Field,int,int)')": [
                        140,
                        144
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'buildArray(Field,int)')": [
                        163
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'buildArray(int)')": [
                        386
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'buildArray(int)')": [
                        386
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/FieldLUDecomposition.java": {
                "old": {
                    "('org.apache.commons.math.linear#FieldLUDecomposition', None)": [
                        311,
                        358,
                        400
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#FieldLUDecomposition', None)": [
                        311,
                        358,
                        400
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/MatrixUtils.java": {
                "old": {
                    "('org.apache.commons.math.linear#MatrixUtils', 'createFieldIdentityMatrix(Field,int)')": [
                        182,
                        183
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#MatrixUtils', 'createFieldIdentityMatrix(Field,int)')": [
                        182,
                        183
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/SparseFieldVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseFieldVector', 'buildArray(int)')": [
                        516
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SparseFieldVector', 'buildArray(int)')": [
                        516
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/BigRealField.java": {
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.util#BigRealField', None)": [
                        61,
                        64,
                        65
                    ],
                    "('org.apache.commons.math.util#BigRealField', 'getRuntimeClass')": [
                        62,
                        63
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java": {
                "old": {
                    "('org.apache.commons.math.util#OpenIntToFieldHashMap', 'buildArray(int)')": [
                        617
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#OpenIntToFieldHashMap', 'buildArray(int)')": [
                        617
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayFieldVectorTest', None)": [
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#ArrayFieldVectorTest', None)": [
                        79
                    ]
                }
            }
        }
    },
    "78d9deeadcba6476dd3fc0f40e03fbbed473949c": {
        "authored_data": "2011 Oct 01 14:52",
        "commit.message": "Replaced last remaining uses of OptimizationException.\n\nthe replacement exceptions are unchecked ones: UnboundSolutionException,\nNoFeasibleSolutionException, MaxCountExceededException ...\n\nJIRA: MATH-457\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178006 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "036ba4efec117f5d4598ce2cdecd99833a65208b",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java": {
                "old": {
                    "(None, None)": [
                        24,
                        128
                    ],
                    "('org.apache.commons.math.optimization.linear#AbstractLinearOptimizer', 'optimize(LinearObjectiveFunction,Collection,GoalType,boolean)')": [
                        107
                    ],
                    "('org.apache.commons.math.optimization.linear#AbstractLinearOptimizer', None)": [
                        124
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        128
                    ],
                    "('org.apache.commons.math.optimization.linear#AbstractLinearOptimizer', 'optimize(LinearObjectiveFunction,Collection,GoalType,boolean)')": [
                        107
                    ],
                    "('org.apache.commons.math.optimization.linear#AbstractLinearOptimizer', None)": [
                        124
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java": {
                "old": {
                    "(None, None)": [
                        23,
                        82,
                        87
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        82,
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.linear#NoFeasibleSolutionException', None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.linear#NoFeasibleSolutionException', None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', None)": [
                        131,
                        132,
                        161,
                        162,
                        163,
                        164
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'doIteration(SimplexTableau)')": [
                        135
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'solvePhase1(SimplexTableau)')": [
                        165
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'doOptimize')": [
                        184
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', None)": [
                        131,
                        132,
                        161,
                        162,
                        163,
                        164
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'doIteration(SimplexTableau)')": [
                        135
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'solvePhase1(SimplexTableau)')": [
                        165,
                        166
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'doOptimize')": [
                        185,
                        186
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/UnboundedSolutionException.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.linear#UnboundedSolutionException', None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.linear#UnboundedSolutionException', None)": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', None)": [
                        185,
                        186,
                        187,
                        188,
                        202,
                        203,
                        214,
                        215,
                        230,
                        231,
                        232,
                        233,
                        248,
                        249,
                        250,
                        251,
                        265,
                        266,
                        267,
                        268,
                        282,
                        283,
                        284,
                        285
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit01')": [
                        189,
                        190
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit02')": [
                        206,
                        207
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit03')": [
                        218,
                        219
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit04')": [
                        234,
                        235,
                        236
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit05')": [
                        252,
                        253
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit06')": [
                        269,
                        270
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit07')": [
                        286,
                        287
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', None)": [
                        184,
                        185,
                        220,
                        221,
                        234,
                        235,
                        248,
                        249,
                        262,
                        263
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit01')": [
                        186
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit02')": [
                        200
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit03')": [
                        209
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit04')": [
                        222
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit05')": [
                        236
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit06')": [
                        250
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit07')": [
                        264
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath434NegativeVariable')": [
                        34,
                        35
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath434UnfeasibleSolution')": [
                        52,
                        53
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath434PivotRowSelection')": [
                        67,
                        68
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath434PivotRowSelection2')": [
                        84,
                        85
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath272')": [
                        110
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath286')": [
                        127
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testDegeneracy')": [
                        148
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath288')": [
                        161
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath290GEQ')": [
                        176
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath290LEQ')": [
                        188
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath293')": [
                        197
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testSimplexSolver')": [
                        234
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testSingleVariableAndConstraint')": [
                        250
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testModelWithNoArtificialVars')": [
                        266
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMinimization')": [
                        281
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testSolutionWithNegativeDecisionVariable')": [
                        296
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testInfeasibleSolution')": [
                        310
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testUnboundedSolution')": [
                        321
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testRestrictVariablesToNonNegative')": [
                        331
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testEpsilon')": [
                        351
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testTrivialModel')": [
                        368
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testLargeModel')": [
                        379
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath434NegativeVariable')": [
                        33
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath434UnfeasibleSolution')": [
                        50
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath434PivotRowSelection')": [
                        64
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath434PivotRowSelection2')": [
                        80
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath272')": [
                        105
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath286')": [
                        122
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testDegeneracy')": [
                        143
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath288')": [
                        156
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath290GEQ')": [
                        171
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath290LEQ')": [
                        183
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath293')": [
                        192
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testSimplexSolver')": [
                        229
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testSingleVariableAndConstraint')": [
                        245
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testModelWithNoArtificialVars')": [
                        261
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMinimization')": [
                        276
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testSolutionWithNegativeDecisionVariable')": [
                        291
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testInfeasibleSolution')": [
                        305
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testUnboundedSolution')": [
                        316
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testRestrictVariablesToNonNegative')": [
                        326
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testEpsilon')": [
                        346
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testTrivialModel')": [
                        363
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testLargeModel')": [
                        374
                    ]
                }
            }
        }
    },
    "036ba4efec117f5d4598ce2cdecd99833a65208b": {
        "authored_data": "2011 Oct 01 14:16",
        "commit.message": "Replaced checked ConvergenceException with an unchecked version.\n\nJIRA: MATH-487\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1177986 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "cbb10701a763a000b4311ec290baae0ee2732ac0",
        "changes": {
            "src/main/java/org/apache/commons/math/fraction/FractionConversionException.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/FractionFormat.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/OptimizationException.java": {
                "old": {
                    "(None, None)": [
                        20,
                        53,
                        54
                    ],
                    "('org.apache.commons.math.optimization#OptimizationException', None)": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#AbstractLinearOptimizer', None)": [
                        93
                    ],
                    "('org.apache.commons.math.optimization.linear#AbstractLinearOptimizer', 'incrementIterationsCounter')": [
                        97,
                        99
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.linear#AbstractLinearOptimizer', None)": [
                        93
                    ],
                    "('org.apache.commons.math.optimization.linear#AbstractLinearOptimizer', 'incrementIterationsCounter')": [
                        97,
                        99
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegratorTest', 'testExactIntegration')": [
                        79,
                        80
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegratorTest', 'testIssue464')": [
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegratorTest', 'testExactIntegration')": [
                        78
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegratorTest', 'testIssue464')": [
                        106
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/fraction/BigFractionTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/fraction/FractionTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.fraction#FractionTest', None)": [
                        68,
                        74,
                        75,
                        76
                    ],
                    "('org.apache.commons.math.fraction#FractionTest', 'testGoldenRatio')": [
                        70,
                        71,
                        72,
                        73
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.fraction#FractionTest', None)": [
                        68
                    ],
                    "('org.apache.commons.math.fraction#FractionTest', 'testGoldenRatio')": [
                        70,
                        71
                    ]
                }
            }
        }
    },
    "ef6e9008270fcb8775f5887c24fcc243031074aa": {
        "authored_data": "2011 Oct 01 07:57",
        "commit.message": "Added missing SVN properties to some *.java files in package o.a.c.m.linear\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1177938 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "ba15d2764e831f2ccc3c18555c3afbb14bf5d2e2",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java": {
                "old": {
                    "(None, None)": [
                        45
                    ]
                },
                "new": {
                    "(None, None)": [
                        45
                    ]
                }
            }
        }
    },
    "4471616be7698f6731aaf88cb860fbbf2586b293": {
        "authored_data": "2011 Sep 28 10:10",
        "commit.message": "Additional test.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1176809 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "5313f6aaae414a72f83f43069cd439ba47024093",
        "changes": {
            "src/test/java/org/apache/commons/math/util/MathUtilsTest.java": {
                "new": {
                    "('org.apache.commons.math.util#MathUtilsTest', 'testCheckOrder')": [
                        1651,
                        1652,
                        1653,
                        1654
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', None)": [
                        1655,
                        1656,
                        1657
                    ]
                }
            }
        }
    },
    "5313f6aaae414a72f83f43069cd439ba47024093": {
        "authored_data": "2011 Sep 28 06:18",
        "commit.message": "updated serialization metadata as we now serialize secondary equations too\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1176745 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "b5724e1cc0110ff35b4e75b4784117f4daffcb93",
        "changes": {
            "src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolator', None)": [
                        50,
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolator', None)": [
                        50,
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolator', None)": [
                        74,
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolator', None)": [
                        74,
                        75
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', None)": [
                        41,
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', None)": [
                        41,
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolator', None)": [
                        44,
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolator', None)": [
                        44,
                        45
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolator', None)": [
                        56,
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolator', None)": [
                        56,
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', None)": [
                        82
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', None)": [
                        82
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolator', None)": [
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolator', None)": [
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolator', None)": [
                        46,
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolator', None)": [
                        46,
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolator', None)": [
                        51,
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolator', None)": [
                        51,
                        52
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'serialization')": [
                        64,
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'serialization')": [
                        64,
                        65
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'serialization')": [
                        76,
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'serialization')": [
                        76,
                        77
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'serialization')": [
                        76,
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'serialization')": [
                        76,
                        77
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', 'serialization')": [
                        64,
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', 'serialization')": [
                        64,
                        65
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'serialization')": [
                        78,
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'serialization')": [
                        78,
                        79
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'serialization')": [
                        76,
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'serialization')": [
                        76,
                        77
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', 'serialization')": [
                        65,
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', 'serialization')": [
                        65,
                        66
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'serialization')": [
                        64,
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'serialization')": [
                        64,
                        65
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', 'testSerialization')": [
                        88,
                        89
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', 'testSerialization')": [
                        88,
                        89
                    ]
                }
            }
        }
    },
    "b5724e1cc0110ff35b4e75b4784117f4daffcb93": {
        "authored_data": "2011 Sep 28 05:56",
        "commit.message": "added support for secondary state in ODE step interpolators\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1176734 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "924769fb0538d5e8be28c9fadd662a7f314b73fb",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java": {
                "old": {
                    "(None, None)": [
                        318,
                        320
                    ]
                },
                "new": {
                    "(None, None)": [
                        319
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#AbstractIntegrator', None)": [
                        50,
                        80,
                        188,
                        189,
                        190,
                        191,
                        201,
                        338,
                        339,
                        340,
                        341,
                        343,
                        344
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'setEquations(ExpandableFirstOrderDifferentialEquations)')": [
                        192
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        197,
                        198,
                        200
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'sanityChecks(ExpandableFirstOrderDifferentialEquations,double,double,double,double)')": [
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364
                    ],
                    "(None, None)": [
                        365,
                        366
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#AbstractIntegrator', None)": [
                        50,
                        80,
                        188,
                        189,
                        190,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        239,
                        376
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'setEquations(ExpandableStatefulODE)')": [
                        191
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        196,
                        197,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        238
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'sanityChecks(ExpandableStatefulODE,double)')": [
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/JacobianMatrices.java": {
                "old": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        32,
                        33,
                        38,
                        39,
                        46
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', None)": [
                        55,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        151,
                        152,
                        153,
                        154,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        181,
                        182,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        237,
                        238,
                        239,
                        240,
                        241,
                        258,
                        259,
                        260,
                        261,
                        263,
                        264,
                        265,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        312,
                        313,
                        314,
                        315,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        328,
                        329,
                        330,
                        331,
                        346,
                        347,
                        348,
                        366,
                        369,
                        370,
                        371,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        454,
                        455,
                        456
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'setParameterJacobianProvider(ParameterJacobianProvider)')": [
                        149,
                        150
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'selectParameters(String)')": [
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'setParameterStep(String,double)')": [
                        203,
                        207,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'setMainStateSteps(double)')": [
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'setInitialMainStateJacobian(double)')": [
                        244,
                        251,
                        253,
                        254,
                        255,
                        256,
                        257
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'setInitialParameterJacobian(String,double)')": [
                        266,
                        271,
                        272,
                        273,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'setInitialMainStateJacobian')": [
                        297,
                        298,
                        299,
                        300,
                        301,
                        302
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'setInitialParameterJacobian(String)')": [
                        310,
                        311
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'setInitialParameterJacobians')": [
                        316,
                        317,
                        318
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'setInitialJacobians')": [
                        325,
                        326,
                        327
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'getCurrentMainSetJacobian(double)')": [
                        336
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'getCurrentParameterJacobian(String,double)')": [
                        353
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'getDimension')": [
                        367,
                        368
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'computeDerivatives(double,double,double,double,double)')": [
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'checkCompatibility(ExpandableFirstOrderDifferentialEquations,FirstOrderDifferentialEquations)')": [
                        448,
                        449,
                        450,
                        451,
                        452,
                        453
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        32,
                        33,
                        38,
                        39,
                        46,
                        462,
                        463,
                        464,
                        465,
                        466
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', None)": [
                        55,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        79,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        183,
                        184,
                        185,
                        186,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        258,
                        259,
                        260,
                        281,
                        282,
                        283,
                        284,
                        285,
                        300,
                        301,
                        302,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'registerVariationalEquations(ExpandableStatefulODE)')": [
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'addParameterJacobianProvider(ParameterJacobianProvider)')": [
                        181,
                        182
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'setParameterStep(String,double)')": [
                        216,
                        217,
                        218,
                        219,
                        220
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'setInitialMainStateJacobian(double)')": [
                        232,
                        233,
                        240,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'setInitialParameterJacobian(String,double)')": [
                        261,
                        262,
                        267,
                        268,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'getCurrentMainSetJacobian(double)')": [
                        290
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'getCurrentParameterJacobian(String,double)')": [
                        307
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/ParameterJacobianProvider.java": {
                "old": {
                    "(None, None)": [
                        21,
                        29,
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        29,
                        36,
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/ParameterJacobianWrapper.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode#ParameterJacobianWrapper', None)": [
                        34,
                        37,
                        42,
                        43,
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode#ParameterJacobianWrapper', None)": [
                        34,
                        37,
                        42,
                        43,
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/ParameterizedODE.java": {
                "old": {
                    "(None, None)": [
                        19
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegrator', 'integrate(ExpandableFirstOrderDifferentialEquations,double,double,double,double)')": [
                        192,
                        193,
                        194,
                        197,
                        200,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        216,
                        225,
                        320,
                        321,
                        322,
                        323,
                        324,
                        326
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        192,
                        195,
                        198,
                        201,
                        202,
                        203,
                        207,
                        208,
                        217,
                        312,
                        313,
                        314,
                        315
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsIntegrator', 'integrate(ExpandableFirstOrderDifferentialEquations,double,double,double,double)')": [
                        89,
                        90,
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegrator', 'integrate(ExpandableFirstOrderDifferentialEquations,double,double,double,double)')": [
                        209,
                        210,
                        211,
                        214,
                        217,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        236,
                        245,
                        298,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        209,
                        212,
                        215,
                        218,
                        219,
                        220,
                        221,
                        222,
                        227,
                        228,
                        237,
                        290,
                        330,
                        331,
                        332,
                        333,
                        334
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java": {
                "old": {
                    "(None, None)": [
                        26,
                        46,
                        48
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', None)": [
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'sanityChecks(ExpandableFirstOrderDifferentialEquations,double,double,double,double)')": [
                        226,
                        227,
                        228,
                        231,
                        232,
                        233
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'integrate(ExpandableFirstOrderDifferentialEquations,double,double,double,double)')": [
                        352,
                        353,
                        354
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        46,
                        48
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', None)": [
                        216
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'sanityChecks(ExpandableStatefulODE,double)')": [
                        218,
                        221,
                        222,
                        223
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        342
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolator', 'reinitialize(AbstractIntegrator,double,double,boolean)')": [
                        148,
                        149
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolator', 'reinitialize(AbstractIntegrator,double,double,boolean,EquationsMapper,EquationsMapper)')": [
                        149,
                        150,
                        151,
                        152
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'reinitialize(AbstractIntegrator,double,double,boolean)')": [
                        283,
                        284,
                        285
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'readExternal(ObjectInput)')": [
                        457
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'reinitialize(AbstractIntegrator,double,double,boolean,EquationsMapper,EquationsMapper)')": [
                        284,
                        285,
                        286,
                        287,
                        288
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'readExternal(ObjectInput)')": [
                        460
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EmbeddedRungeKuttaIntegrator', 'integrate(ExpandableFirstOrderDifferentialEquations,double,double,double,double)')": [
                        192,
                        193,
                        194,
                        197,
                        200,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        219,
                        220,
                        223,
                        334,
                        335,
                        336,
                        337,
                        338,
                        340
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EmbeddedRungeKuttaIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        192,
                        195,
                        198,
                        201,
                        202,
                        204,
                        205,
                        206,
                        210,
                        211,
                        212,
                        215,
                        326,
                        327,
                        328,
                        329
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'integrate(ExpandableFirstOrderDifferentialEquations,double,double,double,double)')": [
                        544,
                        545,
                        548,
                        551,
                        554,
                        555,
                        556,
                        557,
                        558,
                        559,
                        560,
                        561,
                        562,
                        563,
                        568,
                        569,
                        609,
                        610,
                        611,
                        612,
                        943,
                        944,
                        945,
                        946,
                        947,
                        949
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        544,
                        547,
                        550,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558,
                        563,
                        564,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        940,
                        941,
                        942,
                        943
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', None)": [
                        97,
                        98,
                        103,
                        133,
                        134,
                        135,
                        164,
                        165,
                        166,
                        170,
                        171,
                        172,
                        173,
                        182
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'resetTables(int)')": [
                        188,
                        194,
                        195,
                        196,
                        204
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'computeCoefficients(int,double)')": [
                        240,
                        254,
                        255,
                        256,
                        257,
                        265,
                        269,
                        273,
                        277,
                        282,
                        283
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'estimateError(double)')": [
                        301
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        312,
                        327,
                        328,
                        329,
                        330,
                        336,
                        340
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'writeExternal(ObjectOutput)')": [
                        370
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'readExternal(ObjectInput)')": [
                        379,
                        392
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', None)": [
                        98,
                        99,
                        104,
                        130,
                        131,
                        136,
                        137,
                        138,
                        139,
                        140,
                        169,
                        170,
                        171,
                        175,
                        176,
                        177,
                        178,
                        187
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'resetTables(int)')": [
                        193,
                        199,
                        200,
                        201,
                        209
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'computeCoefficients(int,double)')": [
                        245,
                        259,
                        260,
                        261,
                        262,
                        270,
                        274,
                        278,
                        282,
                        287,
                        288
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'estimateError(double)')": [
                        306
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        317,
                        332,
                        333,
                        334,
                        335,
                        341,
                        345
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'writeExternal(ObjectOutput)')": [
                        375
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'readExternal(ObjectInput)')": [
                        384,
                        397
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaIntegrator', 'integrate(ExpandableFirstOrderDifferentialEquations,double,double,double,double)')": [
                        93,
                        94,
                        95,
                        98,
                        101,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        123,
                        124,
                        127,
                        188,
                        189,
                        190,
                        192,
                        195
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        93,
                        96,
                        99,
                        102,
                        103,
                        104,
                        114,
                        115,
                        116,
                        119,
                        180,
                        181,
                        182
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaStepInterpolator', 'reinitialize(AbstractIntegrator,double,double,boolean)')": [
                        125,
                        126
                    ],
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaStepInterpolator', 'readExternal(ObjectInput)')": [
                        156
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaStepInterpolator', None)": [
                        124,
                        125
                    ],
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaStepInterpolator', 'reinitialize(AbstractIntegrator,double,double,boolean,EquationsMapper,EquationsMapper)')": [
                        128,
                        129,
                        130,
                        131
                    ],
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaStepInterpolator', 'readExternal(ObjectInput)')": [
                        161
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', None)": [
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        157,
                        158,
                        159,
                        160,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        174,
                        175,
                        177,
                        331,
                        343,
                        358,
                        471
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'reinitialize(double,boolean)')": [
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'getInterpolatedState')": [
                        332,
                        333,
                        341,
                        342
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'getInterpolatedDerivatives')": [
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'readBaseExternal(ObjectInput)')": [
                        475,
                        496,
                        497,
                        498
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', None)": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        94,
                        95,
                        96,
                        97,
                        98,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        180,
                        181,
                        182,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        235,
                        236,
                        237,
                        241,
                        243,
                        244,
                        245,
                        400,
                        401,
                        410,
                        411,
                        412,
                        426,
                        427,
                        428,
                        434,
                        435,
                        436,
                        559
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'allocateInterpolatedArrays(int,EquationsMapper,EquationsMapper)')": [
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'reinitialize(double,boolean,EquationsMapper,EquationsMapper)')": [
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'evaluateCompleteInterpolatedState')": [
                        402
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'getInterpolatedState')": [
                        413,
                        414,
                        415,
                        416,
                        417
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'getInterpolatedDerivatives')": [
                        422,
                        423,
                        424,
                        425
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'getInterpolatedSecondaryState(int)')": [
                        429,
                        430,
                        431,
                        432,
                        433
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'getInterpolatedSecondaryDerivatives(int)')": [
                        437,
                        438,
                        439,
                        440,
                        441
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'writeBaseExternal(ObjectOutput)')": [
                        525,
                        526,
                        527,
                        528,
                        529
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'readBaseExternal(ObjectInput)')": [
                        563,
                        572,
                        573,
                        574,
                        575,
                        576,
                        589,
                        590
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolator', None)": [
                        107,
                        108
                    ],
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolator', 'reinitialize(double,boolean)')": [
                        109,
                        110
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolator', None)": [
                        108,
                        109,
                        110,
                        111
                    ],
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolator', 'reinitialize(double,boolean,EquationsMapper,EquationsMapper)')": [
                        112,
                        113,
                        114,
                        115
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/StepInterpolator.java": {
                "new": {
                    "(None, None)": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/JacobianMatricesTest.java": {
                "old": {
                    "('org.apache.commons.math.ode#JacobianMatricesTest', 'testInternalDifferentiation')": [
                        88,
                        100,
                        101,
                        103,
                        104,
                        108
                    ],
                    "('org.apache.commons.math.ode#JacobianMatricesTest', 'testAnalyticalDifferentiation')": [
                        126,
                        135,
                        136,
                        137,
                        138,
                        141
                    ],
                    "('org.apache.commons.math.ode#JacobianMatricesTest', 'testFinalResult')": [
                        159,
                        164,
                        165,
                        166,
                        167,
                        175
                    ],
                    "('org.apache.commons.math.ode#JacobianMatricesTest', 'testParameterizable')": [
                        207,
                        215,
                        216,
                        220,
                        221,
                        223,
                        224,
                        233
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#JacobianMatricesTest', 'testInternalDifferentiation')": [
                        88,
                        100,
                        101,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        112
                    ],
                    "('org.apache.commons.math.ode#JacobianMatricesTest', 'testAnalyticalDifferentiation')": [
                        130,
                        139,
                        140,
                        141,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        150
                    ],
                    "('org.apache.commons.math.ode#JacobianMatricesTest', 'testFinalResult')": [
                        168,
                        173,
                        174,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        188,
                        189
                    ],
                    "('org.apache.commons.math.ode#JacobianMatricesTest', 'testParameterizable')": [
                        221,
                        232,
                        233,
                        234,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        250,
                        251
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'noReset')": [
                        45
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'interpolationAtBounds')": [
                        66
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'interpolationInside')": [
                        99
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'noReset')": [
                        46,
                        47,
                        48
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'interpolationAtBounds')": [
                        69,
                        70,
                        71
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'interpolationInside')": [
                        104,
                        105,
                        106
                    ]
                }
            }
        }
    },
    "924769fb0538d5e8be28c9fadd662a7f314b73fb": {
        "authored_data": "2011 Sep 26 06:04",
        "commit.message": "Completed a test which did not exhaust all possibilities. Also cosmetic changes (param naming).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1175683 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "a0c36a7c8cfe5d8023c21c47980e059ffc4d0b98",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java": {
                "old": {
                    "('org.apache.commons.math.linear#IterativeLinearSolver', 'checkParameters(RealLinearOperator,RealVector,RealVector,boolean)')": [
                        91,
                        92,
                        93
                    ],
                    "('org.apache.commons.math.linear#IterativeLinearSolver', None)": [
                        94
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#IterativeLinearSolver', 'checkParameters(RealLinearOperator,RealVector,RealVector,boolean)')": [
                        91,
                        92,
                        93,
                        94
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java": {
                "old": {
                    "('org.apache.commons.math.linear#PreconditionedIterativeLinearSolver', 'solve(RealLinearOperator,RealVector,RealVector,boolean)')": [
                        129,
                        132,
                        133
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#PreconditionedIterativeLinearSolver', 'solve(RealLinearOperator,RealVector,RealVector,boolean)')": [
                        129,
                        132,
                        133
                    ]
                }
            }
        }
    }
}