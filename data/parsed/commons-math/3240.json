{
    "ebadb558aaac32dd82e1355a915d42c521a3e740": {
        "authored_data": "2012 Apr 12 18:32",
        "commit.message": "[MATH-779] Fixed iterator() method in ListPopulation to return an iterator of the unmodifiable list, thanks to Reid Hochstedler.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1325427 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "0d61a96330afa923801c585c7d60be48b26e99b2",
        "changes": {
            "src/main/java/org/apache/commons/math3/genetics/ListPopulation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#ListPopulation', None)": [
                        203
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'iterator')": [
                        208
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#ListPopulation', None)": [
                        203,
                        204
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'iterator')": [
                        209
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java": {
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulationTest', None)": [
                        167,
                        187,
                        188,
                        189
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulationTest', 'testIterator')": [
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186
                    ]
                }
            }
        }
    },
    "0d61a96330afa923801c585c7d60be48b26e99b2": {
        "authored_data": "2012 Apr 12 18:18",
        "commit.message": "[MATH-775] reverted internal list in ListPopulation to private scope and added protected getter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1325422 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "6c6d54e80e9d7f9fcd71c0a4c0a60336e4bc057c",
        "changes": {
            "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', 'nextGeneration')": [
                        79,
                        80,
                        83,
                        84,
                        85
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', 'nextGeneration')": [
                        79,
                        80,
                        83,
                        84,
                        85
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/ListPopulation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#ListPopulation', None)": [
                        40,
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#ListPopulation', None)": [
                        40,
                        117,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'getChromosomeList')": [
                        127,
                        128
                    ]
                }
            }
        }
    },
    "6eadae1ee2f3c3361ec8c6af3dba4f3805273194": {
        "authored_data": "2012 Apr 09 16:55",
        "commit.message": "[MATH-775] remove getChromosomeList method and change internal list to protected.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1311321 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "e1ee1ce8a0d5b461b94e2591a09351b559a91d19",
        "changes": {
            "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', 'nextGeneration')": [
                        79,
                        80,
                        83,
                        84,
                        85
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', 'nextGeneration')": [
                        79,
                        80,
                        83,
                        84,
                        85
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/ListPopulation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#ListPopulation', None)": [
                        40,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'getChromosomeList')": [
                        127,
                        128
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#ListPopulation', None)": [
                        40
                    ]
                }
            }
        }
    },
    "f81d4ff3a0a38839b415f6ba6699e729fce98245": {
        "authored_data": "2012 Apr 05 22:08",
        "commit.message": "[MATH-775] Cleanup ListPopulation class after suggestion from Reid Hochstedler,\nadded more sanity checks/exceptions in ctor and setters, unit tests, hide and protect internal representation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1310103 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "371b7ce0330c5abbbd19fa82ce59c9bdedc53ed8",
        "changes": {
            "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', 'nextGeneration')": [
                        77,
                        79,
                        83,
                        84
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', 'nextGeneration')": [
                        77,
                        79,
                        83,
                        84
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/ListPopulation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#ListPopulation', None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'setChromosomes(List)')": [
                        82
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'getChromosomes')": [
                        89
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        27,
                        29
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', None)": [
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        71,
                        72,
                        73,
                        74,
                        77,
                        82,
                        83,
                        85,
                        86,
                        87,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        134,
                        135,
                        172,
                        173,
                        174
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'setChromosomes(List)')": [
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'addChromosomes(Collection)')": [
                        107,
                        108,
                        109,
                        110,
                        111,
                        112
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'getChromosomes')": [
                        119,
                        120
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'getChromosomeList')": [
                        127
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'addChromosome(Chromosome)')": [
                        138,
                        139,
                        140,
                        141
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'setPopulationLimit(int)')": [
                        177,
                        178,
                        179,
                        180,
                        181,
                        182
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/Population.java": {
                "new": {
                    "(None, None)": [
                        18,
                        48,
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#TournamentSelection', None)": [
                        54
                    ],
                    "('org.apache.commons.math3.genetics#TournamentSelection', 'select(Population)')": [
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#TournamentSelection', None)": [
                        54
                    ],
                    "('org.apache.commons.math3.genetics#TournamentSelection', 'select(Population)')": [
                        59
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/genetics/ListPopulationTest.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#ListPopulationTest', 'testGetFittestChromosome')": [
                        50,
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        181,
                        182
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulationTest', 'testGetFittestChromosome')": [
                        53
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulationTest', None)": [
                        62,
                        63,
                        84,
                        85,
                        86,
                        96,
                        97,
                        98,
                        104,
                        105,
                        106,
                        107,
                        108,
                        116,
                        117,
                        118,
                        119,
                        120,
                        130,
                        131,
                        132,
                        133,
                        134,
                        149,
                        150,
                        151,
                        163,
                        164,
                        165,
                        166
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulationTest', 'testChromosomes')": [
                        64,
                        65,
                        66,
                        67,
                        68,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulationTest', 'testSetPopulationLimit')": [
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulationTest', 'testConstructorPopulationLimitNotPositive')": [
                        99,
                        100,
                        101,
                        102,
                        103
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulationTest', 'testChromosomeListConstructorPopulationLimitNotPositive')": [
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulationTest', 'testConstructorListOfChromosomesBiggerThanPopulationSize')": [
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulationTest', 'testAddTooManyChromosomes')": [
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulationTest', 'testAddTooManyChromosomesSingleCall')": [
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulationTest', 'testSetPopulationLimitTooSmall')": [
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180
                    ]
                }
            }
        }
    },
    "371b7ce0330c5abbbd19fa82ce59c9bdedc53ed8": {
        "authored_data": "2012 Apr 04 18:44",
        "commit.message": "Javadoc and formatting fixes in ElitisticListPopulation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1309531 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "b9ca51f09f38e5a4d73bcdafd09080c91670379c",
        "changes": {
            "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', None)": [
                        39,
                        55
                    ],
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', 'nextGeneration')": [
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', None)": [
                        39,
                        55
                    ],
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', 'nextGeneration')": [
                        76,
                        77
                    ]
                }
            }
        }
    },
    "b9ca51f09f38e5a4d73bcdafd09080c91670379c": {
        "authored_data": "2012 Apr 02 18:46",
        "commit.message": "[MATH-776] Use same range check in ctor as in setter for ElitisticListPopulation.\nThanks to Reid Hochstedler\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1308454 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "c016eb832b7ceedadcce85fb8fc7864611d7a0ef",
        "changes": {
            "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', None)": [
                        50,
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', None)": [
                        45,
                        51,
                        61,
                        65
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/genetics/ElitisticListPopulationTest.java": {
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math3.genetics#ElitisticListPopulationTest', None)": [
                        43,
                        44,
                        50,
                        51,
                        52,
                        57,
                        58,
                        59,
                        64,
                        65,
                        66,
                        70,
                        71,
                        72,
                        76,
                        77,
                        78,
                        83,
                        84,
                        85,
                        90
                    ],
                    "('org.apache.commons.math3.genetics#ElitisticListPopulationTest', 'testSetElitismRate')": [
                        45,
                        46,
                        47,
                        48,
                        49
                    ],
                    "('org.apache.commons.math3.genetics#ElitisticListPopulationTest', 'testSetElitismRateTooLow')": [
                        53,
                        54,
                        55,
                        56
                    ],
                    "('org.apache.commons.math3.genetics#ElitisticListPopulationTest', 'testSetElitismRateTooHigh')": [
                        60,
                        61,
                        62,
                        63
                    ],
                    "('org.apache.commons.math3.genetics#ElitisticListPopulationTest', 'testConstructorTooLow')": [
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.math3.genetics#ElitisticListPopulationTest', 'testConstructorTooHigh')": [
                        73,
                        74,
                        75
                    ],
                    "('org.apache.commons.math3.genetics#ElitisticListPopulationTest', 'testChromosomeListConstructorTooLow')": [
                        79,
                        80,
                        81,
                        82
                    ],
                    "('org.apache.commons.math3.genetics#ElitisticListPopulationTest', 'testChromosomeListConstructorTooHigh')": [
                        86,
                        87,
                        88,
                        89
                    ]
                }
            }
        }
    },
    "c016eb832b7ceedadcce85fb8fc7864611d7a0ef": {
        "authored_data": "2012 Apr 01 17:47",
        "commit.message": "MATH-767\nFixed unbalanced use of code tags in javadoc.\nThanks to Dennis Hendriks for reporting it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1308162 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "4142992080eb8aa75dcfae34808e66c4ce39760c",
        "changes": {
            "src/main/java/org/apache/commons/math3/genetics/Chromosome.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#Chromosome', None)": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#Chromosome', None)": [
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', None)": [
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', None)": [
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/stat/descriptive/AbstractStorelessUnivariateStatistic.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/stat/inference/TTest.java": {
                "old": {
                    "('org.apache.commons.math3.stat.inference#TTest', None)": [
                        257,
                        387
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.stat.inference#TTest', None)": [
                        257,
                        387
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math3.util#ResizableDoubleArray', None)": [
                        443,
                        460,
                        477
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#ResizableDoubleArray', None)": [
                        443,
                        460,
                        477
                    ]
                }
            }
        }
    }
}