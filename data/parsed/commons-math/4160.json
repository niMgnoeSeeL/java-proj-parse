{
    "07ecb4d65a2278824fb490870505f35952756e66": {
        "authored_data": "2011 May 18 19:55",
        "commit.message": "fixed typos\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1124398 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "5cf31cb6d5af3bc3c982b2743f0f6a6633aa6761",
        "changes": {
            "src/main/java/org/apache/commons/math/util/FastMath.java": {
                "old": {
                    "(None, None)": [
                        34,
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        36
                    ]
                }
            }
        }
    },
    "5cf31cb6d5af3bc3c982b2743f0f6a6633aa6761": {
        "authored_data": "2011 May 18 11:15",
        "commit.message": "improved javadoc as per Gilles's suggestions on the dev list.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1124191 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "0a853fd5a785f17fa3dc6e3b4a49aee50a1ec197",
        "changes": {
            "src/main/java/org/apache/commons/math/util/FastMath.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        33,
                        34,
                        35
                    ]
                }
            }
        }
    },
    "0a853fd5a785f17fa3dc6e3b4a49aee50a1ec197": {
        "authored_data": "2011 May 18 09:48",
        "commit.message": "improved javadoc for FastMath.\n\nJIRA: MATH-579\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1124151 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "dbb142bc5a4019bdff411a007b75decd753016eb",
        "changes": {
            "src/main/java/org/apache/commons/math/util/FastMath.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43
                    ]
                }
            }
        }
    },
    "dbb142bc5a4019bdff411a007b75decd753016eb": {
        "authored_data": "2011 May 17 22:19",
        "commit.message": "MATH-574\nFixed Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1104600 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "695dc3bdcc17abe96236116bb8481cd6cc21db4a",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/FieldVector.java": {
                "old": {
                    "(None, None)": [
                        244,
                        245,
                        246,
                        247,
                        248,
                        253,
                        254,
                        255,
                        256,
                        257
                    ]
                },
                "new": {
                    "(None, None)": [
                        244,
                        245,
                        246,
                        251,
                        252,
                        253
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealVector.java": {
                "old": {
                    "(None, None)": [
                        483,
                        484,
                        485,
                        492,
                        493,
                        494
                    ]
                },
                "new": {
                    "(None, None)": [
                        483,
                        490
                    ]
                }
            }
        }
    },
    "695dc3bdcc17abe96236116bb8481cd6cc21db4a": {
        "authored_data": "2011 May 17 21:38",
        "commit.message": "MATH-574\nAllow outer product of vectors of different sizes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1104575 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "987f659a12537fbbb7a39ad9e0f1d6bb2da92aa3",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/SparseFieldVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseFieldVector', 'outerProduct(SparseFieldVector)')": [
                        412,
                        413
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', 'outerProduct(T)')": [
                        428,
                        429,
                        435
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SparseFieldVector', 'outerProduct(SparseFieldVector)')": [
                        412,
                        413
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', 'outerProduct(T)')": [
                        428,
                        429,
                        435
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/SparseFieldVectorTest.java": {
                "new": {
                    "('org.apache.commons.math.linear#SparseFieldVectorTest', None)": [
                        173,
                        194
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVectorTest', 'testOuterProduct')": [
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193
                    ]
                }
            }
        }
    },
    "987f659a12537fbbb7a39ad9e0f1d6bb2da92aa3": {
        "authored_data": "2011 May 16 12:30",
        "commit.message": "MATH-574\nAllow outer product of vectors of different sizes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1103716 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "541527bdf3ee42817c0c0481dbe549744c3d5538",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'outerProduct(double)')": [
                        634,
                        635,
                        641
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'outerProduct(double)')": [
                        634,
                        635,
                        641
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java": {
                "new": {
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testOuterProduct')": [
                        932,
                        933,
                        934,
                        935,
                        936,
                        937,
                        938,
                        939,
                        940,
                        941,
                        942,
                        943,
                        944
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', None)": [
                        945,
                        946,
                        947
                    ]
                }
            }
        }
    },
    "541527bdf3ee42817c0c0481dbe549744c3d5538": {
        "authored_data": "2011 May 16 12:13",
        "commit.message": "Removed unnecessary exceptions.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1103710 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "7e3ad29257b934a71a6374afb50812bbf4e3b4fe",
        "changes": {
            "src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        26
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testInitOutofbounds')": [
                        49
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testBoundariesDimensionMismatch')": [
                        61
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testBoundariesNoData')": [
                        73
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testInputSigmaNegative')": [
                        86
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testInputSigmaOutOfRange')": [
                        98
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testInputSigmaDimensionMismatch')": [
                        110
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testRosen')": [
                        123
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testMaximize')": [
                        139
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testEllipse')": [
                        159
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testElliRotated')": [
                        174
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testCigar')": [
                        189
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testTwoAxes')": [
                        204
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testCigTab')": [
                        219
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testSphere')": [
                        234
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testTablet')": [
                        249
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testDiffPow')": [
                        264
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testSsDiffPow')": [
                        279
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testAckley')": [
                        294
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testRastrigin')": [
                        309
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testConstrainedRosen')": [
                        324
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testDiagonalRosen')": [
                        339
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'doTest(MultivariateRealFunction,double,double,double,GoalType,int,boolean,int,double,double,double,int,RealPointValuePair)')": [
                        377,
                        378
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testInitOutofbounds')": [
                        47
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testBoundariesDimensionMismatch')": [
                        59
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testBoundariesNoData')": [
                        71
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testInputSigmaNegative')": [
                        84
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testInputSigmaOutOfRange')": [
                        96
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testInputSigmaDimensionMismatch')": [
                        108
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testRosen')": [
                        121
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testMaximize')": [
                        137
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testEllipse')": [
                        157
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testElliRotated')": [
                        172
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testCigar')": [
                        187
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testTwoAxes')": [
                        202
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testCigTab')": [
                        217
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testSphere')": [
                        232
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testTablet')": [
                        247
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testDiffPow')": [
                        262
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testSsDiffPow')": [
                        277
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testAckley')": [
                        292
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testRastrigin')": [
                        307
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testConstrainedRosen')": [
                        322
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testDiagonalRosen')": [
                        337
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'doTest(MultivariateRealFunction,double,double,double,GoalType,int,boolean,int,double,double,double,int,RealPointValuePair)')": [
                        375
                    ]
                }
            }
        }
    },
    "7e3ad29257b934a71a6374afb50812bbf4e3b4fe": {
        "authored_data": "2011 May 16 12:01",
        "commit.message": "Added \"@Retry\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1103707 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "03fa7c14316371f43c62dd486036be9145ab98d0",
        "changes": {
            "src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testInputSigmaDimensionMismatch')": [
                        113
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testInputSigmaDimensionMismatch')": [
                        113
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', None)": [
                        122
                    ]
                }
            }
        }
    },
    "03fa7c14316371f43c62dd486036be9145ab98d0": {
        "authored_data": "2011 May 15 16:02",
        "commit.message": "A complete generic implementation of Binary Space Partitioning Trees (BSP trees)\nhas been added. A few specializations of this implementation are also provided\nfor 1D, 2D and 3D Euclidean geometry. This allows support for arbitrary\nintervals sets (1D), polygons sets (2D) and polyhedrons sets (3D) with all\nsets operations (union, intersection, symmetric difference, difference, complement),\nwith predicates (point inside/outside/on boundary, emptiness, other region contained),\nwith geometrical computation (barycenter, size, boundary size) and with conversions\nfrom and to boundary representation.\n\nJIRA: MATH-576\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1103438 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "e401d4ac0696c2dc62aa960044d9fd07bfc01ef9",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java": {
                "new": {
                    "(None, None)": [
                        80,
                        167,
                        224,
                        265
                    ]
                }
            }
        }
    }
}