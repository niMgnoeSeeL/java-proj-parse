{
    "053b1c4908024750888b8f231ee08affed4f3c51": {
        "authored_data": "2009 Jun 22 00:26",
        "commit.message": "Yes, sebb is correct.  After running tests, readResolve needs to be visible to subclasses to be used.  Since Complex is clearly designed to be subclassed, changing the visiblity.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@787118 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "William Barker",
        "pcid": "072539b502a69ef7098c714cf3dcadacd1ac7ccf",
        "changes": {
            "src/java/org/apache/commons/math/complex/Complex.java": {
                "old": {
                    "('org.apache.commons.math.complex#Complex', 'readResolve')": [
                        979
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#Complex', 'readResolve')": [
                        979
                    ]
                }
            }
        }
    },
    "072539b502a69ef7098c714cf3dcadacd1ac7ccf": {
        "authored_data": "2009 Jun 21 19:04",
        "commit.message": "Made protected fields private.  JIRA: MATH-207.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@787067 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "18b2ddb24bda92077add94bb80d35af272236848",
        "changes": {
            "src/java/org/apache/commons/math/genetics/GeneticAlgorithm.java": {
                "old": {
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', None)": [
                        59,
                        62,
                        65,
                        68,
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', None)": [
                        59,
                        62,
                        65,
                        68,
                        71
                    ]
                }
            }
        }
    },
    "18b2ddb24bda92077add94bb80d35af272236848": {
        "authored_data": "2009 Jun 21 17:07",
        "commit.message": "fixed Adams-Bashforth order for error control (it is k, not k+1)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@787052 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "5db7c253e118801dfdbc6e9da85701da30e5d08f",
        "changes": {
            "src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegrator', None)": [
                        160,
                        180
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegrator', None)": [
                        160,
                        180
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'testIncreasingTolerance')": [
                        81,
                        84,
                        85
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'testIncreasingTolerance')": [
                        81,
                        84,
                        85
                    ]
                }
            }
        }
    },
    "5db7c253e118801dfdbc6e9da85701da30e5d08f": {
        "authored_data": "2009 Jun 21 17:01",
        "commit.message": "removed the current point from count in multistep integrators\nupdated documentation since now Adams-Bashforth and Adams-Moulton\nare adaptive stepsize integrators\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@787050 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "4ee03f09ffce2f0b775f13ef5faff08ef16b1c0f",
        "changes": {
            "src/java/org/apache/commons/math/MessagesResources_fr.java": {
                "old": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        311,
                        312
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        311,
                        312
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/MultistepIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#MultistepIntegrator', None)": [
                        50,
                        80,
                        97,
                        99,
                        107,
                        125,
                        144,
                        328,
                        338,
                        339
                    ],
                    "('org.apache.commons.math.ode#MultistepIntegrator', 'readObject(ObjectInputStream)')": [
                        294
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#MultistepIntegrator', None)": [
                        50,
                        80,
                        97,
                        99,
                        107,
                        125,
                        144,
                        328,
                        338,
                        339
                    ],
                    "('org.apache.commons.math.ode#MultistepIntegrator', 'readObject(ObjectInputStream)')": [
                        294
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java": {
                "old": {
                    "(None, None)": [
                        35,
                        48,
                        49,
                        115
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegrator', None)": [
                        145,
                        146,
                        155,
                        160,
                        166,
                        167,
                        176,
                        181
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        36,
                        37,
                        50,
                        116
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegrator', None)": [
                        146,
                        155,
                        160,
                        166,
                        175,
                        180
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java": {
                "old": {
                    "(None, None)": [
                        39,
                        42,
                        55,
                        56,
                        122
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegrator', None)": [
                        161,
                        162,
                        163,
                        172,
                        177,
                        183,
                        184,
                        193,
                        198
                    ]
                },
                "new": {
                    "(None, None)": [
                        39,
                        40,
                        41,
                        44,
                        57,
                        123
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegrator', None)": [
                        162,
                        163,
                        172,
                        177,
                        183,
                        192,
                        197
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'dimensionCheck')": [
                        34
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'testMinStep')": [
                        49
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'testIncreasingTolerance')": [
                        72
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'exceedMaxEvaluations')": [
                        103
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'backward')": [
                        119
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'polynomial')": [
                        136,
                        138,
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'dimensionCheck')": [
                        34
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'testMinStep')": [
                        49
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'testIncreasingTolerance')": [
                        72
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'exceedMaxEvaluations')": [
                        103
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'backward')": [
                        119
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'polynomial')": [
                        136,
                        138,
                        143
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'dimensionCheck')": [
                        34
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'testMinStep')": [
                        49,
                        50,
                        51
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'testIncreasingTolerance')": [
                        72,
                        73,
                        74
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'exceedMaxEvaluations')": [
                        103
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'backward')": [
                        119
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'polynomial')": [
                        136,
                        138,
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'dimensionCheck')": [
                        34
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'testMinStep')": [
                        49,
                        50,
                        51
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'testIncreasingTolerance')": [
                        72,
                        73,
                        74
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'exceedMaxEvaluations')": [
                        103
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'backward')": [
                        119
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'polynomial')": [
                        136,
                        138,
                        143
                    ]
                }
            }
        }
    },
    "b3c7fd661ced3186fbc3b0bfe8b6465917abd2d6": {
        "authored_data": "2009 Jun 21 01:12",
        "commit.message": "Restore Serializable to PolynomialFunction\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@786936 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "William Barker",
        "pcid": "828c863a006a063c47e39f104643c66552d12571",
        "changes": {
            "src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java": {
                "old": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', None)": [
                        31,
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        348,
                        349
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', None)": [
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        326,
                        327,
                        333,
                        334,
                        335,
                        336
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', 'hashCode')": [
                        328,
                        329,
                        330,
                        331,
                        332
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', 'equals(Object)')": [
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347
                    ]
                }
            },
            "src/test/org/apache/commons/math/analysis/SinFunction.java": {
                "old": {
                    "(None, None)": [
                        18,
                        19
                    ]
                }
            },
            "src/test/org/apache/commons/math/analysis/polynomials/PolynomialFunctionTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionTest', 'testSerial')": [
                        229,
                        230,
                        231
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionTest', None)": [
                        232,
                        233
                    ]
                }
            }
        }
    },
    "15c9f02e5cec03298c28f20190c73398694188fa": {
        "authored_data": "2009 Jun 20 23:37",
        "commit.message": "Remove Serializable from some tranient analitics classes.\n\nLet me know if I've nuked ur favorite one, and I can put it back\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@786927 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "William Barker",
        "pcid": "7f8175d4f690fc249515279acb47ca15a44927b6",
        "changes": {
            "src/java/org/apache/commons/math/ConvergingAlgorithmImpl.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math#ConvergingAlgorithmImpl', None)": [
                        29,
                        30,
                        31,
                        32,
                        33,
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ConvergingAlgorithmImpl', None)": [
                        28
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegrator', None)": [
                        54,
                        55,
                        56
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.integration#RombergIntegrator', None)": [
                        38,
                        39,
                        40
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.integration#SimpsonIntegrator', None)": [
                        37,
                        38,
                        39
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegrator', None)": [
                        36,
                        37,
                        38
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', None)": [
                        33,
                        34,
                        35,
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', None)": [
                        31
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeForm', None)": [
                        38,
                        39,
                        40,
                        41,
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeForm', None)": [
                        36
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonForm', None)": [
                        38,
                        39,
                        40,
                        41,
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonForm', None)": [
                        37
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialSplineFunction', None)": [
                        62,
                        63,
                        64,
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialSplineFunction', None)": [
                        61
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolver', None)": [
                        33,
                        35,
                        36,
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#BisectionSolver', None)": [
                        31
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', None)": [
                        41,
                        42,
                        43,
                        44,
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', None)": [
                        39
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/solvers/MullerSolver.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', None)": [
                        40,
                        41,
                        42,
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', None)": [
                        38
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', None)": [
                        36,
                        38,
                        39,
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', None)": [
                        34
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/solvers/RiddersSolver.java": {
                "old": {
                    "(None, None)": [
                        18,
                        19
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', None)": [
                        39,
                        40,
                        41,
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', None)": [
                        37
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/solvers/SecantSolver.java": {
                "old": {
                    "(None, None)": [
                        18,
                        19
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', None)": [
                        44,
                        46,
                        47,
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', None)": [
                        42
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', None)": [
                        34,
                        35,
                        36
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        71
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/SecondOrderDifferentialEquations.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        47
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        48,
                        49,
                        50,
                        51,
                        245,
                        246,
                        247,
                        248,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        46,
                        240,
                        258
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', None)": [
                        36,
                        37,
                        38
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizer', None)": [
                        34,
                        35,
                        36
                    ]
                }
            },
            "src/test/org/apache/commons/math/analysis/Expm1Function.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.analysis#Expm1Function', None)": [
                        28,
                        29,
                        30
                    ],
                    "('org.apache.commons.math.analysis#Expm1Function', 'derivative')": [
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis#Expm1Function', None)": [
                        26
                    ]
                }
            },
            "src/test/org/apache/commons/math/analysis/MonitoredFunction.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.analysis#MonitoredFunction', None)": [
                        28,
                        29,
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis#MonitoredFunction', None)": [
                        26
                    ]
                }
            },
            "src/test/org/apache/commons/math/analysis/QuinticFunction.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.analysis#QuinticFunction', None)": [
                        28,
                        29,
                        30
                    ],
                    "('org.apache.commons.math.analysis#QuinticFunction', 'derivative')": [
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis#QuinticFunction', None)": [
                        26
                    ]
                }
            },
            "src/test/org/apache/commons/math/analysis/SinFunction.java": {
                "old": {
                    "('org.apache.commons.math.analysis#SinFunction', None)": [
                        33,
                        34,
                        35
                    ],
                    "('org.apache.commons.math.analysis#SinFunction', 'derivative')": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis#SinFunction', None)": [
                        33
                    ]
                }
            },
            "src/test/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        259,
                        260
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', None)": [
                        187,
                        188,
                        189
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testSerialization')": [
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258
                    ]
                }
            },
            "src/test/org/apache/commons/math/analysis/solvers/NewtonSolverTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        183,
                        184
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', None)": [
                        111,
                        112,
                        113
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', 'testSerialization')": [
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/FirstOrderConverterTest.java": {
                "old": {
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', None)": [
                        81,
                        82,
                        83
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', None)": [
                        81
                    ]
                }
            }
        }
    },
    "7f8175d4f690fc249515279acb47ca15a44927b6": {
        "authored_data": "2009 Jun 20 22:17",
        "commit.message": "Fix thread-safety issues\n- code failed to use synch. read\n- code could potentially use two different random Generators if another thread changed it\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@786918 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "f4275f337146fd7e2ffe91d4e788c819b5586e88",
        "changes": {
            "src/java/org/apache/commons/math/genetics/GeneticAlgorithm.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', None)": [
                        77
                    ],
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', 'nextGeneration(Population)')": [
                        142,
                        148
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', None)": [
                        37,
                        78
                    ],
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', 'nextGeneration(Population)')": [
                        138,
                        139,
                        145,
                        151
                    ]
                }
            }
        }
    },
    "f4275f337146fd7e2ffe91d4e788c819b5586e88": {
        "authored_data": "2009 Jun 20 21:35",
        "commit.message": "Made aggregation threadsafe.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@786911 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "aa118ca31c3d2e2b34604c22861db1a26fa2cce0",
        "changes": {
            "src/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#AggregateSummaryStatistics', None)": [
                        52,
                        57,
                        219,
                        241
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#AggregateSummaryStatistics', None)": [
                        52,
                        57,
                        219,
                        241,
                        242
                    ],
                    "(None, None)": [
                        243
                    ]
                }
            }
        }
    }
}