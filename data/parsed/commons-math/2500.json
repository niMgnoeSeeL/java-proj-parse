{
    "185e3033ef43527a729c9dda5d57ed0537921a27": {
        "authored_data": "2013 Jan 04 12:28",
        "commit.message": "MATH-927\nMade \"BitsStreamGenerator\" class \"Serializable\" to allow cloning of\nsubclasses. Added cloning test for all \"RealDistribution\" classes.\nThanks to Dennis Hendriks.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1428822 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "42673df5b72ca93fa4dbac6fdb0dec19e0ed6992",
        "changes": {
            "src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java": {
                "old": {
                    "(None, None)": [
                        23,
                        26
                    ],
                    "('org.apache.commons.math3.random#BitsStreamGenerator', None)": [
                        28,
                        29,
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        25
                    ],
                    "('org.apache.commons.math3.random#BitsStreamGenerator', None)": [
                        29,
                        30,
                        31,
                        32,
                        33,
                        37,
                        38
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java": {
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26,
                        509
                    ],
                    "('org.apache.commons.math3.distribution#RealDistributionAbstractTest', None)": [
                        379,
                        395,
                        396,
                        490,
                        491,
                        492
                    ],
                    "('org.apache.commons.math3.distribution#RealDistributionAbstractTest', 'testDistributionClone')": [
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394
                    ],
                    "('org.apache.commons.math3.distribution#RealDistributionAbstractTest', 'deepClone')": [
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508
                    ]
                }
            }
        }
    },
    "216497d772dd623e4fb28adfc01469ab695c304f": {
        "authored_data": "2013 Jan 01 01:41",
        "commit.message": "MATH-925\nAdded \"final\" keyword.\nRemoved degenerate case (matrix with no data).\nUsed constructor chaining.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1427276 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "a9dfc11f1d41f24d60775e8db37d400e16f673ec",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java": {
                "old": {
                    "('org.apache.commons.math3.linear#DiagonalMatrix', None)": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        67,
                        73,
                        74,
                        75,
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#DiagonalMatrix', None)": [
                        39,
                        62,
                        68,
                        69,
                        70,
                        71,
                        72
                    ]
                }
            }
        }
    },
    "59c8371ba140ea6c4a720d3f18b020a7ed8981c4": {
        "authored_data": "2012 Dec 31 04:43",
        "commit.message": "Dropped extraneous javadoc @param.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1427046 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "8bdb73e3e00abf89d5c5b6a74a657e704b85cb23",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/DiagonalMatrix.java": {
                "old": {
                    "('org.apache.commons.math3.linear#DiagonalMatrix', None)": [
                        50
                    ]
                }
            }
        }
    },
    "8bdb73e3e00abf89d5c5b6a74a657e704b85cb23": {
        "authored_data": "2012 Dec 31 00:30",
        "commit.message": "Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1427025 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "6c8aaf03182d80e4c51e875fd8f737c5fdc6fb3d",
        "changes": {
            "src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java": {
                "new": {
                    "('org.apache.commons.math3.optim#BaseOptimizer', None)": [
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114
                    ]
                }
            }
        }
    },
    "2836a6f9efcd30effe2f1125d47c38f62f96ed09": {
        "authored_data": "2012 Dec 29 13:26",
        "commit.message": "MATH-924\nAvoid memory exhaustion for large number of unclorrelated observations.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1426759 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "b07ecae3d60c4f0233f1a1d97eb35d4a678f39aa",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/Weight.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math3.optimization#Weight', None)": [
                        44,
                        45,
                        46,
                        47,
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math3.optimization#Weight', None)": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizer', 'squareRoot(RealMatrix)')": [
                        561,
                        562
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        572
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizer', 'squareRoot(RealMatrix)')": [
                        562,
                        563,
                        564,
                        565,
                        566,
                        567,
                        568,
                        569,
                        570,
                        571
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java": {
                "new": {
                    "('org.apache.commons.math3.optimization.fitting#PolynomialFitterTest', None)": [
                        226,
                        251,
                        252
                    ],
                    "('org.apache.commons.math3.optimization.fitting#PolynomialFitterTest', 'testLargeSample')": [
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250
                    ]
                }
            }
        }
    },
    "b07ecae3d60c4f0233f1a1d97eb35d4a678f39aa": {
        "authored_data": "2012 Dec 29 13:16",
        "commit.message": "MATH-924\nUsing a diagonal matrix to avoid exhausting memory.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1426758 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "ace42058d67a52fb362543c5cf5aca64cf8de3e8",
        "changes": {
            "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.vector#Weight', None)": [
                        43,
                        44,
                        45,
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.vector#Weight', None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.vector.jacobian#AbstractLeastSquaresOptimizer', 'squareRoot(RealMatrix)')": [
                        266,
                        267
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        277
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.vector.jacobian#AbstractLeastSquaresOptimizer', 'squareRoot(RealMatrix)')": [
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/PolynomialFitterTest.java": {
                "new": {
                    "('org.apache.commons.math3.fitting#PolynomialFitterTest', None)": [
                        223,
                        248,
                        249
                    ],
                    "('org.apache.commons.math3.fitting#PolynomialFitterTest', 'testLargeSample')": [
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247
                    ]
                }
            }
        }
    }
}