{
    "9ab4dbf42d86386cd16460924379aec94293ae93": {
        "authored_data": "2013 Mar 29 15:50",
        "commit.message": "Fixed findbugs warnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1462508 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "ba104a5f1d40c06be78a2f5ffd4dffb356c865b6",
        "changes": {
            "src/main/java/org/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java": {
                "old": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.commons.math3.distribution.fitting#MultivariateNormalMixtureExpectationMaximization', 'estimate(double,int)')": [
                        326,
                        327,
                        329,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        347,
                        356
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.distribution.fitting#MultivariateNormalMixtureExpectationMaximization', 'estimate(double,int)')": [
                        326,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        341,
                        350
                    ],
                    "('org.apache.commons.math3.distribution.fitting#MultivariateNormalMixtureExpectationMaximization', None)": [
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443
                    ]
                }
            }
        }
    },
    "ba104a5f1d40c06be78a2f5ffd4dffb356c865b6": {
        "authored_data": "2013 Mar 29 15:50",
        "commit.message": "Removed unused import.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1462507 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "95cbc13a5a3bab2bedc66aec14df70237928f350",
        "changes": {
            "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ]
                }
            }
        }
    },
    "6500be3b99f32ba5a8d2cd5aa837f52fa363d63f": {
        "authored_data": "2013 Mar 29 15:48",
        "commit.message": "Fixed findbugs warning.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1462504 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "8a25d709f50ce97d50c653dbb5897c01e6b5d9cb",
        "changes": {
            "src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math3.util#ResizableDoubleArray', 'compute(MathArrays)')": [
                        937
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#ResizableDoubleArray', 'compute(MathArrays)')": [
                        937,
                        938,
                        939,
                        940,
                        941,
                        942,
                        943,
                        944,
                        945
                    ]
                }
            }
        }
    },
    "8a25d709f50ce97d50c653dbb5897c01e6b5d9cb": {
        "authored_data": "2013 Mar 29 15:48",
        "commit.message": "Fixed PMD warnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1462503 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "3e1c032c4e8008fc1b81d74a289dd7cfa59d925f",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.differentiation#DSCompiler', 'getCompiler(int,int)')": [
                        196,
                        197,
                        198,
                        199,
                        200
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis.differentiation#DSCompiler', 'getCompiler(int,int)')": [
                        196,
                        197,
                        198,
                        199
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/dfp/DfpMath.java": {
                "old": {
                    "('org.apache.commons.math3.dfp#DfpMath', 'pow(Dfp,Dfp)')": [
                        656,
                        658,
                        659,
                        660
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.dfp#DfpMath', 'pow(Dfp,Dfp)')": [
                        656,
                        658
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/VectorFormat.java": {
                "old": {
                    "('org.apache.commons.math3.geometry#VectorFormat', 'parseCoordinates(int,String,ParsePosition)')": [
                        257,
                        258,
                        259,
                        260
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.geometry#VectorFormat', 'parseCoordinates(int,String,ParsePosition)')": [
                        257,
                        258
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java": {
                "old": {
                    "('org.apache.commons.math3.linear#OpenMapRealVector', 'getLInfDistance(OpenMapRealVector)')": [
                        533,
                        534,
                        535,
                        536
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#OpenMapRealVector', 'getLInfDistance(OpenMapRealVector)')": [
                        533,
                        534
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/SimplePointChecker.java": {
                "old": {
                    "('org.apache.commons.math3.optim#SimplePointChecker', 'converged(int,PAIR,PAIR)')": [
                        116,
                        117,
                        118,
                        119
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim#SimplePointChecker', 'converged(int,PAIR,PAIR)')": [
                        116,
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/SimpleValueChecker.java": {
                "old": {
                    "('org.apache.commons.math3.optim#SimpleValueChecker', 'converged(int,PointValuePair,PointValuePair)')": [
                        115,
                        116,
                        117,
                        118
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim#SimpleValueChecker', 'converged(int,PointValuePair,PointValuePair)')": [
                        115,
                        116
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/SimpleVectorValueChecker.java": {
                "old": {
                    "('org.apache.commons.math3.optim#SimpleVectorValueChecker', 'converged(int,PointVectorValuePair,PointVectorValuePair)')": [
                        117,
                        118,
                        119,
                        120
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim#SimpleVectorValueChecker', 'converged(int,PointVectorValuePair,PointVectorValuePair)')": [
                        117,
                        118
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/linear/SimplexSolver.java": {
                "old": {
                    "('org.apache.commons.math3.optim.linear#SimplexSolver', 'getPivotRow(SimplexTableau,int)')": [
                        203,
                        204,
                        205,
                        206,
                        207
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.linear#SimplexSolver', 'getPivotRow(SimplexTableau,int)')": [
                        203,
                        204,
                        205
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        221,
                        222,
                        223,
                        224,
                        225
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        221,
                        222,
                        223
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#BOBYQAOptimizer', 'altmov(int,double)')": [
                        1391,
                        1392,
                        1393,
                        1394,
                        1395,
                        1396
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#BOBYQAOptimizer', 'prelim(double,double)')": [
                        1716,
                        1717,
                        1718,
                        1719,
                        1720,
                        1721,
                        1722,
                        1723,
                        1724
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#BOBYQAOptimizer', 'trsbox(double,ArrayRealVector,ArrayRealVector,ArrayRealVector,ArrayRealVector,ArrayRealVector)')": [
                        1853,
                        1854,
                        1855,
                        1856
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#BOBYQAOptimizer', None)": [
                        2435,
                        2436,
                        2437,
                        2438,
                        2439,
                        2440,
                        2441,
                        2442,
                        2448,
                        2449
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#BOBYQAOptimizer', 'fillNewArray(int,double)')": [
                        2443,
                        2444,
                        2445,
                        2446,
                        2447
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#BOBYQAOptimizer', 'altmov(int,double)')": [
                        1391,
                        1392,
                        1393,
                        1394
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#BOBYQAOptimizer', 'prelim(double,double)')": [
                        1714,
                        1715,
                        1716,
                        1717,
                        1718,
                        1720,
                        1721
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#BOBYQAOptimizer', 'trsbox(double,ArrayRealVector,ArrayRealVector,ArrayRealVector,ArrayRealVector,ArrayRealVector)')": [
                        1849,
                        1850,
                        1851
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#CMAESOptimizer', 'doOptimize')": [
                        442,
                        443,
                        444,
                        445,
                        446,
                        451,
                        452,
                        453,
                        454
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#CMAESOptimizer', 'doOptimize')": [
                        442,
                        443,
                        444,
                        449,
                        450
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#PowellOptimizer', 'doOptimize')": [
                        224,
                        225,
                        226,
                        227
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#PowellOptimizer', 'doOptimize')": [
                        224,
                        225
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.vector.jacobian#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        489,
                        490,
                        491,
                        492,
                        493,
                        494
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.nonlinear.vector.jacobian#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        489,
                        490,
                        491
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optim.univariate#BrentOptimizer', 'doOptimize')": [
                        241,
                        242,
                        243,
                        244
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.univariate#BrentOptimizer', 'doOptimize')": [
                        241,
                        242
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/univariate/SimpleUnivariateValueChecker.java": {
                "old": {
                    "('org.apache.commons.math3.optim.univariate#SimpleUnivariateValueChecker', 'converged(int,UnivariatePointValuePair,UnivariatePointValuePair)')": [
                        117,
                        118,
                        119,
                        120
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.univariate#SimpleUnivariateValueChecker', 'converged(int,UnivariatePointValuePair,UnivariatePointValuePair)')": [
                        117,
                        118
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/SimplePointChecker.java": {
                "old": {
                    "('org.apache.commons.math3.optimization#SimplePointChecker', 'converged(int,PAIR,PAIR)')": [
                        128,
                        129,
                        130,
                        131
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization#SimplePointChecker', 'converged(int,PAIR,PAIR)')": [
                        128,
                        129
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/SimpleValueChecker.java": {
                "old": {
                    "('org.apache.commons.math3.optimization#SimpleValueChecker', 'converged(int,PointValuePair,PointValuePair)')": [
                        126,
                        127,
                        128,
                        129
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization#SimpleValueChecker', 'converged(int,PointValuePair,PointValuePair)')": [
                        126,
                        127
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/SimpleVectorValueChecker.java": {
                "old": {
                    "('org.apache.commons.math3.optimization#SimpleVectorValueChecker', 'converged(int,PointVectorValuePair,PointVectorValuePair)')": [
                        128,
                        129,
                        130,
                        131
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization#SimpleVectorValueChecker', 'converged(int,PointVectorValuePair,PointVectorValuePair)')": [
                        128,
                        129
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#BOBYQAOptimizer', 'altmov(int,double)')": [
                        1397,
                        1398,
                        1399,
                        1400,
                        1401,
                        1402
                    ],
                    "('org.apache.commons.math3.optimization.direct#BOBYQAOptimizer', 'prelim(double,double)')": [
                        1722,
                        1723,
                        1724,
                        1725,
                        1726,
                        1727,
                        1728,
                        1729,
                        1730
                    ],
                    "('org.apache.commons.math3.optimization.direct#BOBYQAOptimizer', 'trsbox(double,ArrayRealVector,ArrayRealVector,ArrayRealVector,ArrayRealVector,ArrayRealVector)')": [
                        1859,
                        1860,
                        1861,
                        1862
                    ],
                    "('org.apache.commons.math3.optimization.direct#BOBYQAOptimizer', None)": [
                        2441,
                        2442,
                        2443,
                        2444,
                        2445,
                        2446,
                        2447,
                        2448,
                        2454,
                        2455
                    ],
                    "('org.apache.commons.math3.optimization.direct#BOBYQAOptimizer', 'fillNewArray(int,double)')": [
                        2449,
                        2450,
                        2451,
                        2452,
                        2453
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.direct#BOBYQAOptimizer', 'altmov(int,double)')": [
                        1397,
                        1398,
                        1399,
                        1400
                    ],
                    "('org.apache.commons.math3.optimization.direct#BOBYQAOptimizer', 'prelim(double,double)')": [
                        1720,
                        1721,
                        1722,
                        1723,
                        1724,
                        1726,
                        1727
                    ],
                    "('org.apache.commons.math3.optimization.direct#BOBYQAOptimizer', 'trsbox(double,ArrayRealVector,ArrayRealVector,ArrayRealVector,ArrayRealVector,ArrayRealVector)')": [
                        1855,
                        1856,
                        1857
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateSimpleBoundsOptimizer', None)": [
                        67,
                        68,
                        69,
                        72,
                        73,
                        74,
                        75,
                        76,
                        79,
                        80
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateSimpleBoundsOptimizer', 'getLowerBound')": [
                        70,
                        71
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateSimpleBoundsOptimizer', 'getUpperBound')": [
                        77,
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', 'doOptimize')": [
                        568,
                        569,
                        570,
                        571,
                        572,
                        577,
                        578,
                        579,
                        580
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', 'doOptimize')": [
                        568,
                        569,
                        570,
                        575,
                        576
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#PowellOptimizer', 'doOptimize')": [
                        214,
                        215,
                        216,
                        217
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.direct#PowellOptimizer', 'doOptimize')": [
                        214,
                        215
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        483,
                        484,
                        485,
                        486,
                        487
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.general#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        180,
                        181,
                        182,
                        183,
                        184
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.general#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        180,
                        181,
                        182
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.linear#SimplexSolver', 'getPivotRow(SimplexTableau,int)')": [
                        151,
                        152,
                        153,
                        154,
                        155
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.linear#SimplexSolver', 'getPivotRow(SimplexTableau,int)')": [
                        151,
                        152,
                        153
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.univariate#BrentOptimizer', 'doOptimize')": [
                        243,
                        244,
                        245,
                        246
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.univariate#BrentOptimizer', 'doOptimize')": [
                        243,
                        244
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.univariate#SimpleUnivariateValueChecker', 'converged(int,UnivariatePointValuePair,UnivariatePointValuePair)')": [
                        129,
                        130,
                        131,
                        132
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.univariate#SimpleUnivariateValueChecker', 'converged(int,UnivariatePointValuePair,UnivariatePointValuePair)')": [
                        129,
                        130
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/CompositeFormat.java": {
                "old": {
                    "('org.apache.commons.math3.util#CompositeFormat', 'parseNumber(String,double,ParsePosition)')": [
                        121,
                        122,
                        123,
                        124,
                        125
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#CompositeFormat', 'parseNumber(String,double,ParsePosition)')": [
                        121,
                        122,
                        123,
                        124
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/FastMath.java": {
                "old": {
                    "('org.apache.commons.math3.util#FastMath', 'log(double,double)')": [
                        1142,
                        1143,
                        1144,
                        1145,
                        1146,
                        1147,
                        1148,
                        1149,
                        1184,
                        1185,
                        1186,
                        1189,
                        1190,
                        1191,
                        1192,
                        1193,
                        1194,
                        1195,
                        1196,
                        1197,
                        1198,
                        1199,
                        1200,
                        1201,
                        1202,
                        1203,
                        1204,
                        1205,
                        1206,
                        1207,
                        1208,
                        1209,
                        1210,
                        1211,
                        1212,
                        1213,
                        1214,
                        1215,
                        1216,
                        1217,
                        1218,
                        1219,
                        1220,
                        1229,
                        1230
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#FastMath', 'log(double,double)')": [
                        1142,
                        1143,
                        1144,
                        1145,
                        1146,
                        1147,
                        1182,
                        1183,
                        1186,
                        1187,
                        1188,
                        1189,
                        1190,
                        1191,
                        1192,
                        1193,
                        1194,
                        1195,
                        1196,
                        1197,
                        1198,
                        1199,
                        1208,
                        1209,
                        1210,
                        1211,
                        1212,
                        1213,
                        1214,
                        1215,
                        1216,
                        1217,
                        1218,
                        1219,
                        1220,
                        1221,
                        1222,
                        1223,
                        1224,
                        1225,
                        1226
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#BOBYQAOptimizerTest', None)": [
                        238
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#BOBYQAOptimizerTest', None)": [
                        239,
                        240,
                        241
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#BOBYQAOptimizerTest', None)": [
                        237
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.math3.optimization.direct#BOBYQAOptimizerTest', None)": [
                        238,
                        239,
                        240
                    ]
                }
            }
        }
    },
    "3e1c032c4e8008fc1b81d74a289dd7cfa59d925f": {
        "authored_data": "2013 Mar 29 14:56",
        "commit.message": "Small javdoc edits.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1462496 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "eb24b08b5d46ac1730cf95425e3b6291090335a1",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableFunction.java": {
                "old": {
                    "(None, None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction.java": {
                "old": {
                    "(None, None)": [
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction.java": {
                "old": {
                    "(None, None)": [
                        38,
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        38,
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableMatrixFunction.java": {
                "old": {
                    "(None, None)": [
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            }
        }
    },
    "eb24b08b5d46ac1730cf95425e3b6291090335a1": {
        "authored_data": "2013 Mar 29 14:36",
        "commit.message": "Small edits.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1462487 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "c72ea892f6da50d49582a0664ef05e7338cecb5d",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/differentiation/package-info.java": {
                "old": {
                    "(None, None)": [
                        24,
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        32
                    ]
                }
            }
        }
    },
    "c72ea892f6da50d49582a0664ef05e7338cecb5d": {
        "authored_data": "2013 Mar 29 14:36",
        "commit.message": "Fixed javadoc typos.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1462485 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "0dbb8ab724fdba04c766a44035e2ea5736ba12b9",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/MultivariateMatrixFunction.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/MultivariateVectorFunction.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            }
        }
    },
    "0dbb8ab724fdba04c766a44035e2ea5736ba12b9": {
        "authored_data": "2013 Mar 29 14:25",
        "commit.message": "Small edits.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1462484 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "075ce74ab037f6d76b7037e8236ac63eb68a4719",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/package-info.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        26,
                        27,
                        28,
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        25,
                        26,
                        27,
                        28
                    ]
                }
            }
        }
    }
}