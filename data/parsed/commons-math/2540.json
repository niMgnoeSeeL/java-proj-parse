{
    "1a77fde3cd0e4c1ca0e15fc19e4737f06622164f": {
        "authored_data": "2012 Dec 15 18:53",
        "commit.message": "Added missing @since tags.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1422313 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "7fc64f6dcbb57c84255c36d3e6988d1f2be5d8dc",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/MatrixUtils.java": {
                "new": {
                    "('org.apache.commons.math3.linear#MatrixUtils', None)": [
                        423,
                        436
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/RealVector.java": {
                "old": {
                    "('org.apache.commons.math3.linear#RealVector', None)": [
                        892
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#RealVector', None)": [
                        204,
                        901,
                        923,
                        946,
                        965,
                        981,
                        1003,
                        1026,
                        1045
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java": {
                "new": {
                    "('org.apache.commons.math3.linear#RectangularCholeskyDecomposition', None)": [
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java": {
                "new": {
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateOptimizer', None)": [
                        139,
                        189,
                        251,
                        258
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java": {
                "new": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', None)": [
                        402,
                        441
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java": {
                "new": {
                    "('org.apache.commons.math3.optimization.direct#PowellOptimizer', None)": [
                        153
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/fitting/PolynomialFitter.java": {
                "new": {
                    "('org.apache.commons.math3.optimization.fitting#PolynomialFitter', None)": [
                        60,
                        92,
                        107
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "new": {
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        256,
                        324,
                        397,
                        537
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java": {
                "old": {
                    "(None, None)": [
                        109
                    ]
                },
                "new": {
                    "(None, None)": [
                        109
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/special/Gamma.java": {
                "new": {
                    "('org.apache.commons.math3.special#Gamma', None)": [
                        64,
                        510,
                        530,
                        623,
                        646
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/stat/Frequency.java": {
                "new": {
                    "('org.apache.commons.math3.stat#Frequency', None)": [
                        126,
                        210,
                        502,
                        517
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java": {
                "new": {
                    "('org.apache.commons.math3.stat.correlation#SpearmansCorrelation', None)": [
                        63
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/stat/inference/TestUtils.java": {
                "old": {
                    "('org.apache.commons.math3.stat.inference#TestUtils', None)": [
                        425
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.stat.inference#TestUtils', None)": [
                        370,
                        380,
                        390,
                        400,
                        411,
                        421,
                        431,
                        442
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/stat/ranking/NaNStrategy.java": {
                "old": {
                    "(None, None)": [
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        52,
                        53,
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java": {
                "new": {
                    "('org.apache.commons.math3.util#ArithmeticUtils', None)": [
                        970
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/FastMath.java": {
                "new": {
                    "('org.apache.commons.math3.util#FastMath', None)": [
                        1609
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/IterationManager.java": {
                "new": {
                    "('org.apache.commons.math3.util#IterationManager', None)": [
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/MathArrays.java": {
                "new": {
                    "('org.apache.commons.math3.util#MathArrays', None)": [
                        52,
                        81,
                        103,
                        125,
                        147,
                        424,
                        444,
                        460,
                        476
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/Pair.java": {
                "new": {
                    "('org.apache.commons.math3.util#Pair', None)": [
                        81,
                        91
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/Precision.java": {
                "new": {
                    "('org.apache.commons.math3.util#Precision', None)": [
                        285
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/ResizableDoubleArray.java": {
                "new": {
                    "('org.apache.commons.math3.util#ResizableDoubleArray', None)": [
                        148,
                        263,
                        322,
                        547,
                        742,
                        837,
                        931
                    ]
                }
            }
        }
    },
    "0017c178364b80c0debc12e1a961362964c1c417": {
        "authored_data": "2012 Dec 15 12:11",
        "commit.message": "MATH-874\nJavadoc (deprecation tag).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1422230 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "d868dbf47df57efb0a8a39f73639b24f3b282175",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/AbstractConvergenceChecker.java": {
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/BaseMultivariateMultiStartOptimizer.java": {
                "new": {
                    "(None, None)": [
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/BaseMultivariateOptimizer.java": {
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/BaseMultivariateSimpleBoundsOptimizer.java": {
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorMultiStartOptimizer.java": {
                "new": {
                    "(None, None)": [
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorOptimizer.java": {
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/BaseOptimizer.java": {
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/ConvergenceChecker.java": {
                "new": {
                    "(None, None)": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/DifferentiableMultivariateMultiStartOptimizer.java": {
                "old": {
                    "(None, None)": [
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/DifferentiableMultivariateOptimizer.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/DifferentiableMultivariateVectorMultiStartOptimizer.java": {
                "old": {
                    "(None, None)": [
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/GoalType.java": {
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/InitialGuess.java": {
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/LeastSquaresConverter.java": {
                "new": {
                    "(None, None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableMultiStartOptimizer.java": {
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableOptimizer.java": {
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizer.java": {
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer.java": {
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/MultivariateMultiStartOptimizer.java": {
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/MultivariateOptimizer.java": {
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/OptimizationData.java": {
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/PointValuePair.java": {
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/PointVectorValuePair.java": {
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/SimpleBounds.java": {
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/SimplePointChecker.java": {
                "new": {
                    "(None, None)": [
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/SimpleValueChecker.java": {
                "new": {
                    "(None, None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/SimpleVectorValueChecker.java": {
                "new": {
                    "(None, None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/Target.java": {
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/Weight.java": {
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java": {
                "new": {
                    "(None, None)": [
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java": {
                "new": {
                    "(None, None)": [
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java": {
                "new": {
                    "(None, None)": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java": {
                "new": {
                    "(None, None)": [
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java": {
                "new": {
                    "(None, None)": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java": {
                "new": {
                    "(None, None)": [
                        81
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/MultiDirectionalSimplex.java": {
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java": {
                "new": {
                    "(None, None)": [
                        75
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapter.java": {
                "new": {
                    "(None, None)": [
                        62
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/NelderMeadSimplex.java": {
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java": {
                "new": {
                    "(None, None)": [
                        50
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/SimplexOptimizer.java": {
                "new": {
                    "(None, None)": [
                        85
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java": {
                "new": {
                    "(None, None)": [
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java": {
                "new": {
                    "(None, None)": [
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java": {
                "new": {
                    "(None, None)": [
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/fitting/PolynomialFitter.java": {
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/fitting/WeightedObservedPoint.java": {
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/AbstractDifferentiableOptimizer.java": {
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "new": {
                    "(None, None)": [
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/AbstractScalarDifferentiableOptimizer.java": {
                "old": {
                    "(None, None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/ConjugateGradientFormula.java": {
                "new": {
                    "(None, None)": [
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizer.java": {
                "new": {
                    "(None, None)": [
                        45
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java": {
                "new": {
                    "(None, None)": [
                        105
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java": {
                "new": {
                    "(None, None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/Preconditioner.java": {
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java": {
                "new": {
                    "(None, None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java": {
                "new": {
                    "(None, None)": [
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java": {
                "new": {
                    "(None, None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java": {
                "new": {
                    "(None, None)": [
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException.java": {
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/Relationship.java": {
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java": {
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java": {
                "new": {
                    "(None, None)": [
                        63
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/UnboundedSolutionException.java": {
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.java": {
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/BaseUnivariateOptimizer.java": {
                "new": {
                    "(None, None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/BracketFinder.java": {
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java": {
                "new": {
                    "(None, None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java": {
                "new": {
                    "(None, None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizer.java": {
                "new": {
                    "(None, None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateOptimizer.java": {
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair.java": {
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            }
        }
    },
    "d868dbf47df57efb0a8a39f73639b24f3b282175": {
        "authored_data": "2012 Dec 15 11:32",
        "commit.message": "MATH-874\nAdded \"@Deprecated\" annotation.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1422223 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "389aa0081a7a9b1fddd40f32d0a56147cb3b87d3",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/AbstractConvergenceChecker.java": {
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/BaseMultivariateMultiStartOptimizer.java": {
                "new": {
                    "(None, None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/BaseMultivariateOptimizer.java": {
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/BaseMultivariateSimpleBoundsOptimizer.java": {
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorMultiStartOptimizer.java": {
                "new": {
                    "(None, None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/BaseMultivariateVectorOptimizer.java": {
                "new": {
                    "(None, None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/BaseOptimizer.java": {
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/ConvergenceChecker.java": {
                "new": {
                    "(None, None)": [
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/DifferentiableMultivariateMultiStartOptimizer.java": {
                "new": {
                    "(None, None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/GoalType.java": {
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/InitialGuess.java": {
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/LeastSquaresConverter.java": {
                "new": {
                    "(None, None)": [
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableMultiStartOptimizer.java": {
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableOptimizer.java": {
                "new": {
                    "(None, None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorMultiStartOptimizer.java": {
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer.java": {
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/MultivariateMultiStartOptimizer.java": {
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/MultivariateOptimizer.java": {
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/OptimizationData.java": {
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/PointValuePair.java": {
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/PointVectorValuePair.java": {
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/SimpleBounds.java": {
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/SimplePointChecker.java": {
                "new": {
                    "(None, None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/SimpleValueChecker.java": {
                "new": {
                    "(None, None)": [
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/SimpleVectorValueChecker.java": {
                "new": {
                    "(None, None)": [
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/Target.java": {
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/Weight.java": {
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java": {
                "new": {
                    "(None, None)": [
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java": {
                "new": {
                    "(None, None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java": {
                "new": {
                    "(None, None)": [
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java": {
                "new": {
                    "(None, None)": [
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java": {
                "new": {
                    "(None, None)": [
                        84
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/MultiDirectionalSimplex.java": {
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionMappingAdapter.java": {
                "new": {
                    "(None, None)": [
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapter.java": {
                "new": {
                    "(None, None)": [
                        65
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/NelderMeadSimplex.java": {
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java": {
                "new": {
                    "(None, None)": [
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/SimplexOptimizer.java": {
                "new": {
                    "(None, None)": [
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java": {
                "new": {
                    "(None, None)": [
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/fitting/GaussianFitter.java": {
                "new": {
                    "(None, None)": [
                        59
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java": {
                "new": {
                    "(None, None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/fitting/PolynomialFitter.java": {
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/fitting/WeightedObservedPoint.java": {
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/AbstractDifferentiableOptimizer.java": {
                "new": {
                    "(None, None)": [
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "new": {
                    "(None, None)": [
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/ConjugateGradientFormula.java": {
                "new": {
                    "(None, None)": [
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/GaussNewtonOptimizer.java": {
                "new": {
                    "(None, None)": [
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java": {
                "new": {
                    "(None, None)": [
                        108
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer.java": {
                "new": {
                    "(None, None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/Preconditioner.java": {
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java": {
                "new": {
                    "(None, None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java": {
                "new": {
                    "(None, None)": [
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java": {
                "new": {
                    "(None, None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java": {
                "new": {
                    "(None, None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException.java": {
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/Relationship.java": {
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java": {
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/UnboundedSolutionException.java": {
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer.java": {
                "new": {
                    "(None, None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/BaseUnivariateOptimizer.java": {
                "new": {
                    "(None, None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/BracketFinder.java": {
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java": {
                "new": {
                    "(None, None)": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/SimpleUnivariateValueChecker.java": {
                "new": {
                    "(None, None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizer.java": {
                "new": {
                    "(None, None)": [
                        45
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/UnivariateOptimizer.java": {
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair.java": {
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            }
        }
    },
    "23400334eef1408ccdd8e0ebfbae5835ed6129db": {
        "authored_data": "2012 Dec 15 06:45",
        "commit.message": "Added missing @since tags.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1422195 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "fa7a7f017577286a394da259f2383c8d2f1a8b4f",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.polynomials#PolynomialFunctionNewtonForm', None)": [
                        98
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis.polynomials#PolynomialFunctionNewtonForm', None)": [
                        98,
                        99,
                        100,
                        101
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/solvers/LaguerreSolver.java": {
                "new": {
                    "('org.apache.commons.math3.analysis.solvers#LaguerreSolver', None)": [
                        191,
                        221
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/AbstractIntegerDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#AbstractIntegerDistribution', None)": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.distribution#AbstractIntegerDistribution', None)": [
                        41,
                        49,
                        50,
                        51,
                        52,
                        53,
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/AbstractRealDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#AbstractRealDistribution', None)": [
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.distribution#AbstractRealDistribution', None)": [
                        52,
                        53,
                        54,
                        55,
                        56,
                        58,
                        74,
                        284
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java": {
                "new": {
                    "('org.apache.commons.math3.distribution#GammaDistribution', None)": [
                        170,
                        192
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java": {
                "new": {
                    "('org.apache.commons.math3.distribution#LogNormalDistribution', None)": [
                        123
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/exception/NotANumberException.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/ListPopulation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#ListPopulation', None)": [
                        114
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#ListPopulation', None)": [
                        114,
                        115,
                        136
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Interval.java": {
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.oned#Interval', None)": [
                        118
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Line.java": {
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.twod#Line', None)": [
                        273
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java": {
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.twod#PolygonsSet', None)": [
                        131
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Segment.java": {
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.twod#Segment', None)": [
                        81
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java": {
                "new": {
                    "('org.apache.commons.math3.linear#EigenDecomposition', None)": [
                        115,
                        155,
                        372
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/JacobiPreconditioner.java": {
                "new": {
                    "('org.apache.commons.math3.linear#JacobiPreconditioner', None)": [
                        110
                    ]
                }
            }
        }
    },
    "f235e1c1d01d0697f08c911e841d7561ea1452b4": {
        "authored_data": "2012 Dec 14 22:12",
        "commit.message": "Replaced deprecated \"RandomDataImpl\" with \"RandomDataGenerator\".\nAdded private constructor.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1422123 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "1f7c4345216b1927f27003e1ae21ff77ae533fd9",
        "changes": {
            "src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.random#EmpiricalDistribution', None)": [
                        137,
                        138,
                        144,
                        153,
                        165,
                        166,
                        167,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.random#EmpiricalDistribution', None)": [
                        137,
                        138,
                        144,
                        153,
                        165,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215
                    ]
                }
            }
        }
    },
    "1f7c4345216b1927f27003e1ae21ff77ae533fd9": {
        "authored_data": "2012 Dec 14 21:47",
        "commit.message": "Deprecation.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1422107 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "2f332839813214a5ca7d9a606bd9d87fd699ae9c",
        "changes": {
            "src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.random#EmpiricalDistribution', None)": [
                        188,
                        201
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.random#EmpiricalDistribution', None)": [
                        188,
                        189,
                        190,
                        203,
                        204,
                        205
                    ]
                }
            }
        }
    },
    "2f332839813214a5ca7d9a606bd9d87fd699ae9c": {
        "authored_data": "2012 Dec 14 16:28",
        "commit.message": "Reverted incompatible changes made in r1420006.\nFixed javadoc error in EmpiricalDistribution class javadoc.\nDeprecated constructors taking RandomDataImpl instances in EmpiricalDistribution, ValueServer.  These constructors predate RandomGenerator, which should be used directly as the source of random data for these classes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1421968 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "610b5d26c96471469c9b28bbfa5d92dc55552b30",
        "changes": {
            "src/main/java/org/apache/commons/math3/random/EmpiricalDistribution.java": {
                "old": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.math3.random#EmpiricalDistribution', None)": [
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        148,
                        157,
                        165,
                        166,
                        167,
                        168,
                        169,
                        172,
                        173,
                        174,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        291,
                        323,
                        632
                    ],
                    "('org.apache.commons.math3.random#EmpiricalDistribution', 'getNextValue')": [
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534
                    ],
                    "('org.apache.commons.math3.random#EmpiricalDistribution', 'reSeed(long)')": [
                        627,
                        628,
                        629,
                        630,
                        631
                    ],
                    "('org.apache.commons.math3.random#EmpiricalDistribution', 'reseedRandomGenerator(long)')": [
                        822
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.math3.random#EmpiricalDistribution', None)": [
                        137,
                        138,
                        144,
                        153,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        191,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        206,
                        257,
                        289
                    ],
                    "('org.apache.commons.math3.random#EmpiricalDistribution', 'getNextValue')": [
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481
                    ],
                    "('org.apache.commons.math3.random#EmpiricalDistribution', 'reSeed(long)')": [
                        574
                    ],
                    "('org.apache.commons.math3.random#EmpiricalDistribution', 'reseedRandomGenerator(long)')": [
                        764
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/random/ValueServer.java": {
                "old": {
                    "('org.apache.commons.math3.random#ValueServer', None)": [
                        91,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        114,
                        115,
                        116,
                        117,
                        119
                    ],
                    "('org.apache.commons.math3.random#ValueServer', 'resetReplayFile')": [
                        291
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.random#ValueServer', None)": [
                        91,
                        97,
                        98,
                        99,
                        104,
                        105,
                        106,
                        107,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120
                    ],
                    "('org.apache.commons.math3.random#ValueServer', 'resetReplayFile')": [
                        292
                    ]
                }
            }
        }
    }
}