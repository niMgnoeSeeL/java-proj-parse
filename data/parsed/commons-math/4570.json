{
    "2ccb208565923e7fbaa1e9bd864456733732c47f": {
        "authored_data": "2010 Nov 12 12:15",
        "commit.message": "\"Un-deprecated\" method: No equivalent (the suggested replacement is for\nbracketing an optimum).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1034365 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "55243469e02a516b19a2023f10ca7a80b544d928",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        222,
                        223,
                        224
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        222
                    ]
                }
            }
        }
    },
    "374abec6b138520cbb99935ae20732b95a6adf22": {
        "authored_data": "2010 Nov 12 00:13",
        "commit.message": "MATH-438\nRemoved deprecated class \"InvalidMatrixException\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1034220 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "9c804e92f711ae78e8bf9a41725e37bc06b38d71",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/CholeskyDecomposition.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#CholeskyDecompositionImpl', None)": [
                        272,
                        273
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#CholeskyDecompositionImpl', None)": [
                        272,
                        273,
                        274
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/DecompositionSolver.java": {
                "old": {
                    "(None, None)": [
                        43,
                        44,
                        46,
                        47,
                        54,
                        55,
                        57,
                        58,
                        65,
                        66,
                        68,
                        69,
                        73,
                        79,
                        81,
                        82,
                        83
                    ]
                },
                "new": {
                    "(None, None)": [
                        43,
                        44,
                        45,
                        46,
                        48,
                        55,
                        56,
                        57,
                        58,
                        60,
                        67,
                        68,
                        69,
                        70,
                        72,
                        76,
                        82,
                        83,
                        85
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', None)": [
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', None)": [
                        279,
                        280,
                        281,
                        282
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/FieldDecompositionSolver.java": {
                "old": {
                    "(None, None)": [
                        45,
                        46,
                        48,
                        49,
                        56,
                        57,
                        59,
                        60,
                        67,
                        68,
                        70,
                        71,
                        81,
                        83,
                        84,
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        45,
                        46,
                        47,
                        48,
                        50,
                        57,
                        58,
                        59,
                        60,
                        62,
                        69,
                        70,
                        71,
                        72,
                        74,
                        84,
                        85,
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#FieldLUDecompositionImpl', None)": [
                        347,
                        348,
                        410
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#FieldLUDecompositionImpl', None)": [
                        347,
                        348,
                        410
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#LUDecompositionImpl', None)": [
                        57,
                        58,
                        60,
                        61,
                        336,
                        397
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#LUDecompositionImpl', None)": [
                        57,
                        58,
                        60,
                        335,
                        396
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRDecompositionImpl', None)": [
                        334,
                        335
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#QRDecompositionImpl', None)": [
                        334,
                        335
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', None)": [
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        76,
                        77,
                        78
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getU')": [
                        157
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getUT')": [
                        164
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getS')": [
                        176
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getSingularValues')": [
                        188
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getV')": [
                        193
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getVT')": [
                        200
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getNorm')": [
                        243
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getConditionNumber')": [
                        248
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', None)": [
                        69,
                        71
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getU')": [
                        150
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getUT')": [
                        157
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getS')": [
                        169
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getSingularValues')": [
                        181
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getV')": [
                        186
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getVT')": [
                        193
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getNorm')": [
                        236
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getConditionNumber')": [
                        241
                    ]
                }
            }
        }
    },
    "05810bf619f28bb906d99ca583367f428f51deae": {
        "authored_data": "2010 Nov 11 23:36",
        "commit.message": "MATH-438\nRemoved deprecated class. Updated affected files to use the new\n\"NonPositiveDefiniteMatrixException\" defined in package \"exception\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1034209 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "04d6264e2258a953e55ce2098ba2f827cd953093",
        "changes": {
            "src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.random#CorrelatedRandomVectorGenerator', None)": [
                        92,
                        100,
                        123,
                        127,
                        128,
                        129,
                        185
                    ],
                    "('org.apache.commons.math.random#CorrelatedRandomVectorGenerator', 'decompose(RealMatrix,double)')": [
                        188,
                        189,
                        190,
                        227,
                        235
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.random#CorrelatedRandomVectorGenerator', None)": [
                        92,
                        100,
                        123,
                        127,
                        183
                    ],
                    "('org.apache.commons.math.random#CorrelatedRandomVectorGenerator', 'decompose(RealMatrix,double)')": [
                        186,
                        223,
                        231
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/CorrelatedRandomVectorGeneratorTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.random#CorrelatedRandomVectorGeneratorTest', 'testMath226')": [
                        45
                    ],
                    "('org.apache.commons.math.random#CorrelatedRandomVectorGeneratorTest', 'setUp')": [
                        132
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.random#CorrelatedRandomVectorGeneratorTest', 'testMath226')": [
                        45
                    ],
                    "('org.apache.commons.math.random#CorrelatedRandomVectorGeneratorTest', 'setUp')": [
                        132
                    ]
                }
            }
        }
    },
    "d7d6492c1d089bf090c64c9f36b53edfe7cfaf2d": {
        "authored_data": "2010 Nov 11 23:13",
        "commit.message": "MATH-438\nRemoved deprecated class \"MatrixIndexException\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1034193 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "a151bff2f50cb536fb352d2da8165d04f3465245",
        "changes": {
            "src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractRealVectorTest', None)": [
                        56,
                        62,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        143,
                        144,
                        145,
                        146,
                        147,
                        151,
                        171
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#AbstractRealVectorTest', None)": [
                        56,
                        62,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        143,
                        144,
                        145,
                        146,
                        147,
                        151,
                        171
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayFieldVectorTest', None)": [
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        178,
                        186,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#ArrayFieldVectorTest', None)": [
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        178,
                        186,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayRealVectorTest', None)": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        375,
                        383,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        483
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#ArrayRealVectorTest', None)": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        375,
                        383,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        483
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseRealVectorTest', None)": [
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        416,
                        425,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        527,
                        528,
                        529,
                        530,
                        531,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SparseRealVectorTest', None)": [
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        416,
                        425,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        527,
                        528,
                        529,
                        530,
                        531,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541
                    ]
                }
            }
        }
    },
    "a151bff2f50cb536fb352d2da8165d04f3465245": {
        "authored_data": "2010 Nov 11 22:52",
        "commit.message": "MATH-438\nRemoved deprecated methods.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1034190 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "07f166332003e7f0857954ffc5bd3e85ca762f69",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractRealMatrix', None)": [
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        49,
                        50,
                        51,
                        67,
                        543,
                        550,
                        551,
                        552,
                        553,
                        557,
                        558,
                        559,
                        562,
                        563,
                        564,
                        565,
                        846,
                        847,
                        848,
                        849,
                        856,
                        857,
                        858,
                        859,
                        866,
                        867,
                        868,
                        869,
                        870,
                        871,
                        872,
                        873,
                        874,
                        875,
                        876,
                        877,
                        878,
                        879,
                        880,
                        881,
                        882,
                        883,
                        884,
                        885,
                        886,
                        887,
                        892
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setSubMatrix(double,int,int)')": [
                        370,
                        371
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'inverse')": [
                        544,
                        545,
                        546,
                        547,
                        548,
                        549
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'getDeterminant')": [
                        554,
                        555,
                        556
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'isSingular')": [
                        566,
                        567,
                        568,
                        569,
                        570
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'walkInRowOrder(RealMatrixChangingVisitor)')": [
                        701
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'walkInRowOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        734
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'walkInColumnOrder(RealMatrixChangingVisitor)')": [
                        767
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'walkInColumnOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        800
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'solve(double)')": [
                        850,
                        851,
                        852,
                        853,
                        854,
                        855
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'solve(RealMatrix)')": [
                        860,
                        861,
                        862,
                        863,
                        864,
                        865
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'luDecompose')": [
                        888,
                        889,
                        890,
                        891
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#AbstractRealMatrix', None)": [
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealMatrix.java": {
                "old": {
                    "(None, None)": [
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        824,
                        825,
                        826,
                        827,
                        828,
                        829,
                        830,
                        831,
                        832,
                        833,
                        834,
                        835,
                        836,
                        837,
                        838,
                        839,
                        840,
                        841,
                        842,
                        843,
                        844,
                        845,
                        846,
                        847,
                        848,
                        849,
                        850,
                        851
                    ]
                }
            }
        }
    },
    "07f166332003e7f0857954ffc5bd3e85ca762f69": {
        "authored_data": "2010 Nov 10 14:23",
        "commit.message": "MATH-425\nRemoved usage of exceptions defined in the package \"linear\". Added\nreplacements in package \"exception\". Modified tests to catch the\nnew exception type. Deleted the deprecated package \"estimation\" (test\nfailed because of the changes).\nDeprecated \"MaxIterationsExceededException\".\nChanges in package \"optimization.general\" were necessary to comply with\nthe new exceptions and to be consistent in reporting the actual cause\nof failure.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1033486 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "06ec87572a446d19c83a771395b9d6bbaf27f102",
        "changes": {
            "src/main/java/org/apache/commons/math/MaxIterationsExceededException.java": {
                "new": {
                    "(None, None)": [
                        31,
                        32,
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java": {
                "old": {
                    "('org.apache.commons.math.exception#DimensionMismatchException', None)": [
                        28,
                        31,
                        43,
                        44,
                        45,
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.exception#DimensionMismatchException', None)": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java": {
                "old": {
                    "('org.apache.commons.math.exception#MathIllegalNumberException', None)": [
                        43,
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MathIllegalNumberException', None)": [
                        43,
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MaxCountExceededException.java": {
                "old": {
                    "('org.apache.commons.math.exception#MaxCountExceededException', None)": [
                        31,
                        53,
                        54,
                        55,
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MaxCountExceededException', None)": [
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java": {
                "old": {
                    "(None, None)": [
                        279
                    ]
                },
                "new": {
                    "(None, None)": [
                        184,
                        221,
                        281
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'getTrace')": [
                        623,
                        624
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'getTrace')": [
                        624
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'getTrace')": [
                        579,
                        580
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'getTrace')": [
                        580
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        353,
                        354,
                        355
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImpl', None)": [
                        37,
                        38,
                        39,
                        41,
                        42,
                        43,
                        45,
                        48,
                        51,
                        65,
                        66,
                        67,
                        68,
                        73,
                        74,
                        75,
                        87,
                        88,
                        89,
                        90,
                        97,
                        98,
                        99,
                        100,
                        113,
                        124,
                        137,
                        150,
                        151,
                        152,
                        172,
                        192,
                        211,
                        212,
                        213,
                        216,
                        217,
                        218,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        255,
                        256,
                        257,
                        282,
                        290,
                        291,
                        293,
                        294,
                        299,
                        300,
                        301,
                        304,
                        305,
                        306,
                        350
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        330
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImpl', None)": [
                        39,
                        40,
                        41,
                        42,
                        44,
                        45,
                        46,
                        47,
                        66,
                        67,
                        68,
                        69,
                        74,
                        86,
                        87,
                        88,
                        89,
                        96,
                        119,
                        132,
                        145,
                        202,
                        205,
                        230,
                        231,
                        232,
                        233,
                        240,
                        272,
                        273,
                        275,
                        280,
                        283,
                        327
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', None)": [
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        116,
                        117,
                        118,
                        119,
                        122,
                        123,
                        137,
                        138,
                        139,
                        140,
                        286,
                        287,
                        295,
                        296,
                        297,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        328,
                        329,
                        330,
                        337,
                        338,
                        339,
                        353,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        370,
                        371,
                        379,
                        380,
                        381,
                        382,
                        383,
                        422,
                        423,
                        424,
                        426,
                        427,
                        447,
                        448,
                        449,
                        454,
                        455,
                        463,
                        469
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'isSymmetric(RealMatrix)')": [
                        141
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'getV')": [
                        159
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'getD')": [
                        174
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'getVT')": [
                        183
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'getRealEigenvalues')": [
                        199
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'getRealEigenvalue(int)')": [
                        204,
                        205
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'getImagEigenvalues')": [
                        210
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'getImagEigenvalue(int)')": [
                        215,
                        216
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'getEigenvector(int)')": [
                        221,
                        222
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'transformToTridiagonal(RealMatrix)')": [
                        458
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'findEigenVectors(double)')": [
                        472,
                        518,
                        519,
                        520
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', None)": [
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        111,
                        114,
                        115,
                        116,
                        119,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        287,
                        295,
                        318,
                        319,
                        320,
                        321,
                        323,
                        330,
                        352,
                        353,
                        354,
                        355,
                        357,
                        365,
                        404,
                        405,
                        406,
                        408,
                        428,
                        433,
                        434,
                        445,
                        447
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'isSymmetric(RealMatrix,boolean)')": [
                        141,
                        142,
                        152,
                        153,
                        154
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'getV')": [
                        163
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'getD')": [
                        178
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'getVT')": [
                        187
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'getRealEigenvalues')": [
                        203
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'getRealEigenvalue(int)')": [
                        208
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'getImagEigenvalues')": [
                        213
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'getImagEigenvalue(int)')": [
                        218
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'getEigenvector(int)')": [
                        223
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'findEigenVectors(double)')": [
                        495,
                        496,
                        497,
                        498
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        431,
                        432,
                        433
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImpl', None)": [
                        70,
                        72,
                        73,
                        74,
                        76,
                        261,
                        262,
                        263,
                        266,
                        267,
                        268,
                        304,
                        305,
                        312,
                        313,
                        314,
                        354,
                        355,
                        357,
                        358,
                        363,
                        364,
                        365,
                        368,
                        369,
                        370
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        419
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImpl', None)": [
                        71,
                        73,
                        75,
                        76,
                        261,
                        264,
                        300,
                        307,
                        347,
                        348,
                        350,
                        355,
                        358
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/FieldMatrix.java": {
                "old": {
                    "(None, None)": [
                        427
                    ]
                },
                "new": {
                    "(None, None)": [
                        427,
                        428
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        420,
                        421,
                        422
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', None)": [
                        37,
                        40,
                        43,
                        46,
                        49,
                        52,
                        55,
                        58,
                        65,
                        77,
                        79,
                        80,
                        81,
                        83,
                        161,
                        261,
                        262,
                        263,
                        266,
                        267,
                        298,
                        302,
                        303,
                        310,
                        311,
                        342,
                        350,
                        351,
                        353,
                        354,
                        359,
                        360,
                        364,
                        365,
                        366,
                        413
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        400
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', None)": [
                        58,
                        70,
                        72,
                        74,
                        75,
                        252,
                        255,
                        289,
                        296,
                        334,
                        335,
                        336,
                        338,
                        343,
                        347
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java": {
                "new": {
                    "(None, None)": [
                        27,
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/NotPositiveDefiniteMatrixException.java": {
                "new": {
                    "(None, None)": [
                        29,
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/NotSymmetricMatrixException.java": {
                "new": {
                    "(None, None)": [
                        29,
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        450,
                        451,
                        452
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'getR')": [
                        165
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', None)": [
                        170,
                        222,
                        243,
                        284,
                        288,
                        289,
                        290,
                        294,
                        295,
                        296,
                        318,
                        333,
                        337,
                        338,
                        353,
                        354,
                        359,
                        360,
                        361,
                        365,
                        366,
                        367,
                        412,
                        436,
                        437,
                        438,
                        442,
                        446,
                        447
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'getQT')": [
                        183,
                        217
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'getH')": [
                        227,
                        238
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        424
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', None)": [
                        279,
                        283,
                        322,
                        337,
                        342,
                        346,
                        414,
                        421
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealMatrix.java": {
                "old": {
                    "(None, None)": [
                        469,
                        470
                    ]
                },
                "new": {
                    "(None, None)": [
                        469,
                        470,
                        471
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/SingularMatrixException.java": {
                "new": {
                    "(None, None)": [
                        27,
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/TriDiagonalTransformer.java": {
                "old": {
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', None)": [
                        41,
                        44,
                        47,
                        50,
                        53,
                        56,
                        64,
                        65,
                        66,
                        67,
                        68,
                        83,
                        140,
                        167
                    ],
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', 'getQT')": [
                        104,
                        106,
                        135
                    ],
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', 'getT')": [
                        148,
                        150
                    ],
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', 'transform')": [
                        205,
                        263,
                        264,
                        265
                    ],
                    "(None, None)": [
                        269
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', None)": [
                        59,
                        60,
                        61,
                        62,
                        63
                    ],
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', 'transform')": [
                        249
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        25
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        98,
                        99,
                        100,
                        123,
                        124,
                        125,
                        126,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        206,
                        207,
                        212,
                        214,
                        215,
                        216,
                        217,
                        218
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateJacobian')": [
                        101,
                        105,
                        106
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateResidualsAndCost')": [
                        127,
                        130,
                        131
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'getCovariances')": [
                        180,
                        181,
                        182,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'guessParametersErrors')": [
                        219,
                        220,
                        222,
                        223
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        238,
                        239
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        209,
                        210,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateJacobian')": [
                        103,
                        107
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateResidualsAndCost')": [
                        131,
                        134
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'getCovariances')": [
                        184,
                        201,
                        202,
                        203,
                        204
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'guessParametersErrors')": [
                        220,
                        222,
                        223
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        238
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java": {
                "old": {
                    "(None, None)": [
                        24,
                        28
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        123
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        123
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java": {
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java": {
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java": {
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', None)": [
                        61,
                        69,
                        80
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', None)": [
                        57,
                        65,
                        76
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/EigenSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#EigenSolverTest', None)": [
                        45
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.linear#EigenSolverTest', None)": [
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/FieldLUDecompositionImplTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', None)": [
                        80
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', None)": [
                        81
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java": {
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/LUDecompositionImplTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#LUDecompositionImplTest', 'testNonSquare')": [
                        76
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImplTest', None)": [
                        77
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImplTest', 'testNonSquare')": [
                        77
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImplTest', None)": [
                        78
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/LUSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#LUSolverTest', 'testSolveSingularityErrors')": [
                        105,
                        111,
                        117
                    ],
                    "('org.apache.commons.math.linear#LUSolverTest', None)": [
                        123
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.linear#LUSolverTest', 'testSolveSingularityErrors')": [
                        106,
                        112,
                        118
                    ],
                    "('org.apache.commons.math.linear#LUSolverTest', None)": [
                        124
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/QRSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRSolverTest', 'testSolveRankErrors')": [
                        104,
                        110
                    ],
                    "('org.apache.commons.math.linear#QRSolverTest', None)": [
                        116
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.linear#QRSolverTest', 'testSolveRankErrors')": [
                        105,
                        111
                    ],
                    "('org.apache.commons.math.linear#QRSolverTest', None)": [
                        117
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java": {
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java": {
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/TriDiagonalTransformerTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#TriDiagonalTransformerTest', None)": [
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.linear#TriDiagonalTransformerTest', None)": [
                        51
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', None)": [
                        281,
                        365
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', None)": [
                        365
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTrivial')": [
                        110,
                        120
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testQRColumnsPermutation')": [
                        127
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNoDependency')": [
                        144
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testOneSet')": [
                        163
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTwoSets')": [
                        179
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNonInversible')": [
                        203
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', None)": [
                        217,
                        342
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testIllConditioned')": [
                        222
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        255
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        269
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testRedundantEquations')": [
                        289
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentEquations')": [
                        305
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentSizes')": [
                        317
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'checkEstimate(DifferentiableMultivariateVectorialFunction,double,int,double,double,double,boolean)')": [
                        376
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFitting')": [
                        383
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFittingBadInit')": [
                        431
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMath199')": [
                        484
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        33
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTrivial')": [
                        112,
                        122
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testQRColumnsPermutation')": [
                        129
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNoDependency')": [
                        146
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testOneSet')": [
                        165
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTwoSets')": [
                        181
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNonInvertible')": [
                        205
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', None)": [
                        219,
                        344
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testIllConditioned')": [
                        224
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        257
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        271
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testRedundantEquations')": [
                        291
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentEquations')": [
                        307
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentSizes')": [
                        319
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'checkEstimate(DifferentiableMultivariateVectorialFunction,double,int,double,double,double,boolean)')": [
                        378
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFitting')": [
                        385
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFittingBadInit')": [
                        433
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMath199')": [
                        486
                    ]
                }
            }
        }
    }
}