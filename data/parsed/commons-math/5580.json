{
    "46664c3e99a54350929a037f435c6c3119352dca": {
        "authored_data": "2008 Dec 22 10:57",
        "commit.message": "removed a leftover print statement\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@728643 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "4bd8d8bc1386600b43b018be4b7e8f3c6b7c51bc",
        "changes": {
            "src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#EigenDecompositionImplTest', 'testEigenvectors')": [
                        177
                    ]
                }
            }
        }
    },
    "4bd8d8bc1386600b43b018be4b7e8f3c6b7c51bc": {
        "authored_data": "2008 Dec 22 10:34",
        "commit.message": "fixed loop unrolling error\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@728639 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "008807938f612951c7757ab5f6af6edc9f8bca92",
        "changes": {
            "src/java/org/apache/commons/math/linear/DenseRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'operate(double)')": [
                        795,
                        796
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'operate(double)')": [
                        795,
                        796
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#EigenDecompositionImplTest', 'createOrthogonalMatrix(Random,int)')": [
                        369,
                        370
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#EigenDecompositionImplTest', 'testEigenvectors')": [
                        177
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImplTest', 'createOrthogonalMatrix(Random,int)')": [
                        370
                    ]
                }
            }
        }
    },
    "008807938f612951c7757ab5f6af6edc9f8bca92": {
        "authored_data": "2008 Dec 21 22:05",
        "commit.message": "added getSolver() into LUDecomposition\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@728528 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "1f3d5634d5ef19048bbc295a6c90c95cd79c7044",
        "changes": {
            "src/java/org/apache/commons/math/linear/LUDecompositionImpl.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', None)": [
                        36,
                        64,
                        65,
                        71,
                        76,
                        77,
                        85,
                        86,
                        87,
                        88,
                        92,
                        93,
                        94
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'decompose(RealMatrix)')": [
                        89,
                        90,
                        91
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'decompose(RealMatrix,double)')": [
                        95,
                        96
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'getPivot')": [
                        225
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'isSingular')": [
                        234,
                        235,
                        236
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#LUDecompositionImpl', None)": [
                        35,
                        68,
                        80,
                        84,
                        211,
                        212,
                        213,
                        224,
                        225,
                        226,
                        227,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'getPivot')": [
                        210
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'getDeterminant')": [
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'isSingular')": [
                        228,
                        229
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'getSolver')": [
                        238,
                        239
                    ],
                    "(None, None)": [
                        427,
                        428
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/LUSolver.java": {
                "old": {
                    "('org.apache.commons.math.linear#LUSolver', None)": [
                        32,
                        34,
                        35,
                        42,
                        90,
                        139,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        224
                    ],
                    "('org.apache.commons.math.linear#LUSolver', 'solve(double)')": [
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ],
                    "('org.apache.commons.math.linear#LUSolver', 'solve(RealVector)')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138
                    ],
                    "('org.apache.commons.math.linear#LUSolver', 'solve(RealMatrix)')": [
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204
                    ],
                    "('org.apache.commons.math.linear#LUSolver', 'getDeterminant')": [
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223
                    ],
                    "('org.apache.commons.math.linear#LUSolver', 'isNonSingular')": [
                        232
                    ],
                    "('org.apache.commons.math.linear#LUSolver', 'getInverse')": [
                        241,
                        242
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#LUSolver', None)": [
                        32,
                        34,
                        35,
                        36,
                        37,
                        38,
                        45,
                        46,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109
                    ],
                    "('org.apache.commons.math.linear#LUSolver', 'solve(double)')": [
                        59
                    ],
                    "('org.apache.commons.math.linear#LUSolver', 'solve(RealVector)')": [
                        73
                    ],
                    "('org.apache.commons.math.linear#LUSolver', 'solve(RealMatrix)')": [
                        86
                    ],
                    "('org.apache.commons.math.linear#LUSolver', 'isNonSingular')": [
                        94
                    ],
                    "('org.apache.commons.math.linear#LUSolver', 'getInverse')": [
                        103
                    ],
                    "('org.apache.commons.math.linear#LUSolver', 'getDeterminant')": [
                        110,
                        111
                    ]
                }
            }
        }
    },
    "1f3d5634d5ef19048bbc295a6c90c95cd79c7044": {
        "authored_data": "2008 Dec 21 21:54",
        "commit.message": "removed spurious exception clause\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@728526 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "d1fc13cef34e167f7ff721767772f0f476327ae7",
        "changes": {
            "src/java/org/apache/commons/math/linear/QRDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'getR')": [
                        148,
                        149
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'getR')": [
                        148
                    ]
                }
            }
        }
    },
    "d1fc13cef34e167f7ff721767772f0f476327ae7": {
        "authored_data": "2008 Dec 21 21:53",
        "commit.message": "fixed some javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@728523 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "6387a1f0a320525ad56b4db18a9b30708c11b2e2",
        "changes": {
            "src/java/org/apache/commons/math/linear/EigenDecomposition.java": {
                "old": {
                    "(None, None)": [
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/LUDecomposition.java": {
                "old": {
                    "(None, None)": [
                        30,
                        31,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        70,
                        71,
                        73,
                        79,
                        80,
                        82,
                        91,
                        92,
                        95,
                        100,
                        101,
                        104,
                        116
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        32,
                        48,
                        55,
                        66,
                        73,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/QRDecomposition.java": {
                "old": {
                    "(None, None)": [
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        50,
                        51,
                        59,
                        60,
                        62,
                        68,
                        69,
                        71,
                        79,
                        80,
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        51,
                        58,
                        67
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/SingularValueDecomposition.java": {
                "old": {
                    "(None, None)": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        60,
                        61,
                        64,
                        70,
                        71,
                        74,
                        81,
                        82,
                        84,
                        91,
                        92,
                        94,
                        100,
                        101,
                        104,
                        110,
                        111,
                        114,
                        122,
                        123,
                        125,
                        130,
                        131,
                        133,
                        142,
                        143,
                        145
                    ]
                },
                "new": {
                    "(None, None)": [
                        55,
                        63,
                        71,
                        79,
                        87,
                        95,
                        104,
                        110,
                        120
                    ]
                }
            }
        }
    },
    "6387a1f0a320525ad56b4db18a9b30708c11b2e2": {
        "authored_data": "2008 Dec 21 21:23",
        "commit.message": "reverted some changes introduced yesterday, as they lead to unexpected test failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@728507 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "c060390793b574af9a865b26711e73a868eebbfb",
        "changes": {
            "src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java": {
                "old": {
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', 'getQT')": [
                        109,
                        115,
                        118,
                        120,
                        125,
                        128,
                        130,
                        135
                    ],
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', 'getT')": [
                        153,
                        155,
                        157,
                        160,
                        161,
                        162
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', 'getQT')": [
                        109,
                        115,
                        117,
                        119,
                        121,
                        124,
                        127,
                        130,
                        132,
                        137,
                        138,
                        139,
                        140
                    ],
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', 'getT')": [
                        158,
                        160,
                        161,
                        163,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/EigenDecompositionImplTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#EigenDecompositionImplTest', 'createOrthogonalMatrix(Random,int)')": [
                        369
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#EigenDecompositionImplTest', 'createOrthogonalMatrix(Random,int)')": [
                        369,
                        370
                    ]
                }
            }
        }
    },
    "c060390793b574af9a865b26711e73a868eebbfb": {
        "authored_data": "2008 Dec 21 21:04",
        "commit.message": "reverted some changes introduced yesterday, as they lead to unexpected test failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@728500 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "7716a7ac0d918b72b182a3616c3e87b4e3c56b09",
        "changes": {
            "src/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java": {
                "old": {
                    "(None, None)": [
                        19,
                        21,
                        22
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', None)": [
                        36
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'newSampleData(double,int,int)')": [
                        57,
                        58
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'newYSampleData(double)')": [
                        67
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'newXSampleData(double)')": [
                        76
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'estimateRegressionParameters')": [
                        125
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'estimateResiduals')": [
                        132
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'calculateBeta')": [
                        154
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'calculateResiduals')": [
                        181,
                        182
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', None)": [
                        34
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'newSampleData(double,int,int)')": [
                        55,
                        56
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'newYSampleData(double)')": [
                        65
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'newXSampleData(double)')": [
                        74
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'estimateRegressionParameters')": [
                        123,
                        124
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'estimateResiduals')": [
                        131,
                        132,
                        133
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'calculateBeta')": [
                        155
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'calculateResiduals')": [
                        182,
                        183,
                        184
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java": {
                "old": {
                    "(None, None)": [
                        21,
                        23
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'newCovarianceData(double)')": [
                        72
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'calculateBeta')": [
                        95,
                        100
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'calculateYVariance')": [
                        124,
                        125,
                        126
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'newCovarianceData(double)')": [
                        71
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'calculateBeta')": [
                        94,
                        99
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'calculateYVariance')": [
                        123,
                        124,
                        125
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java": {
                "old": {
                    "(None, None)": [
                        19,
                        25,
                        26
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'newXSampleData(double)')": [
                        91
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'calculateBeta')": [
                        100,
                        101
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'calculateYVariance')": [
                        125,
                        126,
                        127
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', None)": [
                        147
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'solveUpperTriangular(RealMatrix,RealVector)')": [
                        150,
                        163,
                        165
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'newXSampleData(double)')": [
                        89
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'calculateBeta')": [
                        98,
                        99
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'calculateYVariance')": [
                        123,
                        124,
                        125
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', None)": [
                        145
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'solveUpperTriangular(RealMatrix,RealMatrix)')": [
                        148,
                        149,
                        153,
                        154,
                        155,
                        156,
                        166,
                        168
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/regression/GLSMultipleLinearRegressionTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegressionTest', None)": [
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegressionTest', None)": [
                        66
                    ]
                }
            }
        }
    },
    "7716a7ac0d918b72b182a3616c3e87b4e3c56b09": {
        "authored_data": "2008 Dec 21 19:48",
        "commit.message": "decomposed fields can be set to final (this may help optimizer)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@728483 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "bf70bae29bcd44c7d9b37c01d9b398d57540672b",
        "changes": {
            "src/java/org/apache/commons/math/linear/QRDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRDecompositionImpl', None)": [
                        265,
                        268
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#QRDecompositionImpl', None)": [
                        265,
                        268
                    ]
                }
            }
        }
    },
    "bf70bae29bcd44c7d9b37c01d9b398d57540672b": {
        "authored_data": "2008 Dec 21 19:35",
        "commit.message": "recover performances lost with changes for r723496\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@728481 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "ed721c48a35b59d19fbef091bf6c33ac6da2072a",
        "changes": {
            "src/java/org/apache/commons/math/linear/QRDecomposition.java": {
                "new": {
                    "(None, None)": [
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/QRDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRDecompositionImpl', None)": [
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#QRDecompositionImpl', None)": [
                        40,
                        249,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'getSolver')": [
                        250,
                        251
                    ],
                    "(None, None)": [
                        425,
                        426,
                        427,
                        428
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/QRSolver.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRSolver', None)": [
                        33,
                        36,
                        43,
                        80,
                        140
                    ],
                    "('org.apache.commons.math.linear#QRSolver', 'solve(double)')": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ],
                    "('org.apache.commons.math.linear#QRSolver', 'solve(RealVector)')": [
                        93
                    ],
                    "('org.apache.commons.math.linear#QRSolver', 'solve(RealMatrix)')": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139
                    ],
                    "('org.apache.commons.math.linear#QRSolver', 'isNonSingular')": [
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155
                    ],
                    "('org.apache.commons.math.linear#QRSolver', 'getInverse')": [
                        164,
                        165,
                        166
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#QRSolver', None)": [
                        33,
                        36,
                        43
                    ],
                    "('org.apache.commons.math.linear#QRSolver', 'solve(double)')": [
                        56
                    ],
                    "('org.apache.commons.math.linear#QRSolver', 'solve(RealVector)')": [
                        69
                    ],
                    "('org.apache.commons.math.linear#QRSolver', 'solve(RealMatrix)')": [
                        82
                    ],
                    "('org.apache.commons.math.linear#QRSolver', 'isNonSingular')": [
                        90
                    ],
                    "('org.apache.commons.math.linear#QRSolver', 'getInverse')": [
                        99
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/QRSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRSolverTest', 'testRank')": [
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#QRSolverTest', 'testRank')": [
                        66
                    ]
                }
            }
        }
    },
    "ed721c48a35b59d19fbef091bf6c33ac6da2072a": {
        "authored_data": "2008 Dec 21 19:02",
        "commit.message": "partially unrolled some computation loops to increase performance\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@728478 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "136ffc1054260445343d57a3acfa2776a97d8c6f",
        "changes": {
            "src/java/org/apache/commons/math/linear/DenseRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#DenseRealMatrix', None)": [
                        44,
                        47
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'multiply(DenseRealMatrix)')": [
                        399,
                        429,
                        430
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'operate(double)')": [
                        775,
                        776
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#DenseRealMatrix', None)": [
                        44,
                        47
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'multiply(DenseRealMatrix)')": [
                        399,
                        415,
                        416,
                        417,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'operate(double)')": [
                        789,
                        790,
                        791,
                        792,
                        793,
                        794,
                        795,
                        796,
                        797,
                        798,
                        799
                    ]
                }
            }
        }
    }
}