{
    "abfacd6d14758ae1e9b1475a7699118bc3e32f0d": {
        "authored_data": "2010 Jun 16 13:53",
        "commit.message": "MATH-376\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@955230 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "e3f28223adf26c639a158662019ca9cf63c90230",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java": {
                "old": {
                    "(None, None)": [
                        64,
                        65,
                        66,
                        67
                    ],
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', 'optimize(MultivariateRealFunction,GoalType,double)')": [
                        270
                    ]
                },
                "new": {
                    "(None, None)": [
                        64,
                        65,
                        66,
                        67
                    ],
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', 'optimize(MultivariateRealFunction,GoalType,double)')": [
                        270,
                        271
                    ]
                }
            }
        }
    },
    "e3f28223adf26c639a158662019ca9cf63c90230": {
        "authored_data": "2010 Jun 16 00:46",
        "commit.message": "Really make poissonConsistencyTest use a fixed seed.  Complete intent of r949613.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@955100 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "4039a1446040821a29d0f267b65d379cd1b782d2",
        "changes": {
            "src/test/java/org/apache/commons/math/random/RandomDataTest.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextPoissonConsistency')": [
                        245
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'checkNextPoissonConsistency(double)')": [
                        271
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextPoissonConsistency')": [
                        240,
                        241,
                        242,
                        243
                    ]
                }
            }
        }
    },
    "4039a1446040821a29d0f267b65d379cd1b782d2": {
        "authored_data": "2010 Jun 09 10:41",
        "commit.message": "Partially fixing MATH-370 (full resolution is delayed to a major release).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@952949 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "6f54422e966a95df227212dee651be837f1a6b56",
        "changes": {
            "src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#AbstractStorelessUnivariateStatistic', 'equals(Object)')": [
                        168,
                        169
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#AbstractStorelessUnivariateStatistic', 'equals(Object)')": [
                        168,
                        169
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'equals(Object)')": [
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'equals(Object)')": [
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummaryValues.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#StatisticalSummaryValues', 'equals(Object)')": [
                        138,
                        139,
                        140,
                        141,
                        142,
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#StatisticalSummaryValues', 'equals(Object)')": [
                        138,
                        139,
                        140,
                        141,
                        142,
                        143
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#SummaryStatistics', 'equals(Object)')": [
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#SummaryStatistics', 'equals(Object)')": [
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        406,
                        407,
                        411,
                        418,
                        419,
                        420,
                        421,
                        422,
                        426,
                        427,
                        431,
                        432,
                        433,
                        434,
                        445,
                        464,
                        465,
                        466,
                        467,
                        468,
                        473,
                        474
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'equals(double,double,double)')": [
                        430
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'equals(double,double,int)')": [
                        448,
                        449,
                        463
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        406,
                        407,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        424,
                        425,
                        429,
                        430,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        460,
                        461,
                        462,
                        463,
                        465,
                        466,
                        467,
                        477,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        523,
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'equalsIncludingNaN(double,double)')": [
                        431,
                        432,
                        556,
                        557,
                        558,
                        559,
                        560,
                        561,
                        562,
                        563,
                        564
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'equals(double,double,double)')": [
                        445
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'equalsIncludingNaN(double,double,double)')": [
                        458,
                        459
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'equals(double,double,int)')": [
                        480,
                        481,
                        495,
                        496,
                        497
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'equalsIncludingNaN(double,double,int)')": [
                        511,
                        512
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'equals(double,double)')": [
                        540,
                        541,
                        542,
                        543
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatisticsTest', 'checkremoval(DescriptiveStatistics,int,double,double,double)')": [
                        213,
                        215,
                        217
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatisticsTest', 'checkremoval(DescriptiveStatistics,int,double,double,double)')": [
                        213,
                        215,
                        217
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/util/MathUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtilsTest', 'testEquals')": [
                        317,
                        327,
                        328,
                        330,
                        331
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testEqualsWithAllowedDelta')": [
                        341
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testEqualsWithAllowedUlps')": [
                        350,
                        351,
                        352,
                        353,
                        354,
                        357,
                        358,
                        359,
                        360,
                        368,
                        369
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtilsTest', 'testEqualsIncludingNaN')": [
                        317,
                        327,
                        328,
                        330,
                        331
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testEqualsWithAllowedDelta')": [
                        341
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testEqualsIncludingNaNWithAllowedDelta')": [
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', None)": [
                        359,
                        360,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        460,
                        461
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testEqualsWithAllowedUlps')": [
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        383,
                        384,
                        385,
                        386,
                        394
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testEqualsIncludingNaNWithAllowedUlps')": [
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testArrayEqualsIncludingNaN')": [
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479
                    ]
                }
            }
        }
    },
    "6f54422e966a95df227212dee651be837f1a6b56": {
        "authored_data": "2010 Jun 06 14:01",
        "commit.message": "Added a setQRRankingThreshold method to Levenberg-Marquardt optimizer to improve robustness of rank determination.\nJIRA: MATH-352\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@951864 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "9fdb08438309b08715112cae8aa2dd4af3d75705",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', None)": [
                        147,
                        148,
                        149,
                        150,
                        151,
                        152
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'qrDecomposition')": [
                        808
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', None)": [
                        144,
                        145,
                        146,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        176,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'setQRRankingThreshold(double)')": [
                        234,
                        235
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'qrDecomposition')": [
                        827
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMath199')": [
                        508,
                        509,
                        510,
                        511
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMath199')": [
                        508,
                        509,
                        510,
                        511,
                        512,
                        513
                    ]
                }
            }
        }
    },
    "9fdb08438309b08715112cae8aa2dd4af3d75705": {
        "authored_data": "2010 Jun 06 13:59",
        "commit.message": "added a test derived from an invalid issue\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@951863 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "49d757a9cb7ef971faaaad477c166fbc4fbd7ab9",
        "changes": {
            "src/test/java/org/apache/commons/math/optimization/fitting/CurveFitterTest.java": {
                "new": {
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', None)": [
                        75,
                        136,
                        137,
                        138
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath372')": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135
                    ]
                }
            }
        }
    },
    "49d757a9cb7ef971faaaad477c166fbc4fbd7ab9": {
        "authored_data": "2010 Jun 02 01:18",
        "commit.message": "Added @since tags.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@950326 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "110f03f59489896a1630ec5300c208cbcbdff25c",
        "changes": {
            "src/main/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "new": {
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        532,
                        547,
                        562,
                        576,
                        591,
                        606,
                        622,
                        637,
                        651,
                        666,
                        681,
                        893,
                        907
                    ]
                }
            }
        }
    },
    "110f03f59489896a1630ec5300c208cbcbdff25c": {
        "authored_data": "2010 Jun 01 06:35",
        "commit.message": "reverting a change introduced by error in r949935\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@949936 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "eb452bcb1dfa621cd91d433725c266a98d975d87",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'qrDecomposition')": [
                        808
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'qrDecomposition')": [
                        808
                    ]
                }
            }
        }
    },
    "eb452bcb1dfa621cd91d433725c266a98d975d87": {
        "authored_data": "2010 Jun 01 06:25",
        "commit.message": "fixed an error message\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@949935 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "4fdbd676776c4831194f2909b102a05923fc429e",
        "changes": {
            "src/main/java/org/apache/commons/math/MessagesResources_fr.java": {
                "old": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        759
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        759
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'qrDecomposition')": [
                        808
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'qrDecomposition')": [
                        808
                    ]
                }
            }
        }
    },
    "4fdbd676776c4831194f2909b102a05923fc429e": {
        "authored_data": "2010 May 31 23:39",
        "commit.message": "Added sampling methods to the distribution classes, based on the random\ndata generation methods in the random package.\nJIRA: MATH-310\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@949895 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "fb7bf199ffc1abe68de5ce0df71fb77a32a32a4f",
        "changes": {
            "src/main/java/org/apache/commons/math/MessagesResources_fr.java": {
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        756,
                        757,
                        758,
                        759
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        105
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        229
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', None)": [
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        145,
                        146,
                        147,
                        148,
                        149,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        186,
                        187,
                        188
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        112
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'reseedRandomGenerator(long)')": [
                        150,
                        151
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'sample')": [
                        163,
                        164
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'sample(int)')": [
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', None)": [
                        212
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', None)": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        219,
                        220,
                        221,
                        222,
                        223,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        260,
                        261,
                        262,
                        263
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'reseedRandomGenerator(long)')": [
                        224,
                        225
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'sample')": [
                        237,
                        238
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'sample(int)')": [
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java": {
                "new": {
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', None)": [
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        193,
                        194,
                        195
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'sample')": [
                        191,
                        192
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java": {
                "new": {
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', None)": [
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        241,
                        242,
                        243
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'sample')": [
                        239,
                        240
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java": {
                "new": {
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', None)": [
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        260,
                        261,
                        262
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'sample')": [
                        258,
                        259
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/TestUtils.java": {
                "old": {
                    "(None, None)": [
                        440
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        514
                    ],
                    "('org.apache.commons.math#TestUtils', None)": [
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491
                    ],
                    "('org.apache.commons.math#TestUtils', 'assertChiSquareAccept(double,long,double)')": [
                        450,
                        451,
                        452,
                        453,
                        454,
                        455
                    ],
                    "('org.apache.commons.math#TestUtils', 'getDistributionQuartiles(ContinuousDistribution)')": [
                        462,
                        463,
                        464,
                        465,
                        466,
                        467
                    ],
                    "('org.apache.commons.math#TestUtils', 'updateCounts(double,long,double)')": [
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482
                    ],
                    "('org.apache.commons.math#TestUtils', 'eliminateZeroMassPoints(int,double)')": [
                        492,
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java": {
                "new": {
                    "('org.apache.commons.math.distribution#ContinuousDistributionAbstractTest', None)": [
                        259,
                        260,
                        261,
                        262,
                        275
                    ],
                    "('org.apache.commons.math.distribution#ContinuousDistributionAbstractTest', 'testSampling')": [
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java": {
                "new": {
                    "(None, None)": [
                        18,
                        19
                    ],
                    "('org.apache.commons.math.distribution#IntegerDistributionAbstractTest', None)": [
                        274,
                        275,
                        276,
                        277,
                        299
                    ],
                    "('org.apache.commons.math.distribution#IntegerDistributionAbstractTest', 'testSampling')": [
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/RandomDataTest.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextBeta')": [
                        818,
                        823,
                        824,
                        825
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextCauchy')": [
                        829,
                        834,
                        835,
                        836
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextChiSquare')": [
                        840,
                        845,
                        846,
                        847
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextF')": [
                        851,
                        856,
                        857,
                        858
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextGamma')": [
                        862,
                        867,
                        868,
                        869
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextT')": [
                        873,
                        878,
                        879,
                        880
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextWeibull')": [
                        884,
                        889,
                        890,
                        891
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', None)": [
                        892,
                        893,
                        894,
                        895,
                        896,
                        897,
                        904,
                        905,
                        906,
                        907,
                        908,
                        909,
                        919,
                        1020,
                        1021,
                        1022,
                        1023,
                        1024,
                        1025
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'getDistributionQuartiles(ContinuousDistribution)')": [
                        898,
                        899,
                        900,
                        901,
                        902,
                        903
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'updateCounts(double,long,double)')": [
                        910,
                        911,
                        912,
                        913,
                        914,
                        915,
                        916,
                        917,
                        918
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextBinomial')": [
                        927
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextHypergeometric')": [
                        952
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextPascal')": [
                        977
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextZipf')": [
                        1001
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'eliminateZeroMassPoints(int,double)')": [
                        1026,
                        1027,
                        1028,
                        1029,
                        1030,
                        1031,
                        1032,
                        1033,
                        1034,
                        1035,
                        1036,
                        1037,
                        1038,
                        1039,
                        1040,
                        1041,
                        1042,
                        1043,
                        1044,
                        1045,
                        1046,
                        1047
                    ],
                    "(None, None)": [
                        1048,
                        1049
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextBeta')": [
                        818,
                        823,
                        824,
                        825
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextCauchy')": [
                        829,
                        834,
                        835,
                        836
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextChiSquare')": [
                        840,
                        845,
                        846,
                        847
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextF')": [
                        851,
                        856,
                        857,
                        858
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextGamma')": [
                        862,
                        867,
                        868,
                        869
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextT')": [
                        873,
                        878,
                        879,
                        880
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextWeibull')": [
                        884,
                        889,
                        890,
                        891
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextBinomial')": [
                        899
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextHypergeometric')": [
                        924
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextPascal')": [
                        949
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextZipf')": [
                        973
                    ]
                }
            }
        }
    }
}