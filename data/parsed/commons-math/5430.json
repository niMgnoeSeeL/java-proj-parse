{
    "17f0dd2da569e02c314862cd6b7e35a05f5f951f": {
        "authored_data": "2009 Mar 28 18:24",
        "commit.message": "Added a BigFraction class that does not overflow when big numerators or denominators are used.\nJira: MATH-251\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@759543 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "e449af6e513b90e33c179c0a74f08ae0fee88d2f",
        "changes": {
            "src/java/org/apache/commons/math/MathRuntimeException.java": {
                "new": {
                    "('org.apache.commons.math#MathRuntimeException', None)": [
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createNullPointerException(String,Object)')": [
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378
                    ]
                }
            },
            "src/java/org/apache/commons/math/MessagesResources_fr.java": {
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102
                    ]
                }
            }
        }
    },
    "e449af6e513b90e33c179c0a74f08ae0fee88d2f": {
        "authored_data": "2009 Mar 27 07:56",
        "commit.message": "fixed an error in Simplex algorithm when several ambiguous solutions exist\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@759045 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "d11d984705af3ec5aadd068ce059a4aaae31dbd8",
        "changes": {
            "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'getDecisionVariableValue(int)')": [
                        330,
                        331
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', None)": [
                        332
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'getDecisionVariableValue(int)')": [
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', None)": [
                        343
                    ]
                }
            },
            "src/test/org/apache/commons/math/optimization/linear/SimplexSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testSomething')": [
                        146
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testLargeModel')": [
                        279
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', None)": [
                        280
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testTrivialModel')": [
                        146
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testLargeModel')": [
                        279
                    ]
                }
            }
        }
    },
    "d11d984705af3ec5aadd068ce059a4aaae31dbd8": {
        "authored_data": "2009 Mar 26 23:39",
        "commit.message": "fixed javadoc error\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@758924 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "7edb7e34f86ed1cf0ae83a9e3d02f57272e2acfa",
        "changes": {
            "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', None)": [
                        395
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', None)": [
                        395
                    ]
                }
            }
        }
    },
    "7edb7e34f86ed1cf0ae83a9e3d02f57272e2acfa": {
        "authored_data": "2009 Mar 26 23:38",
        "commit.message": "removed spurious import clause\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@758923 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "61e775706d77d6ce6385075f5b3385cdb28fed68",
        "changes": {
            "src/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                }
            }
        }
    },
    "61e775706d77d6ce6385075f5b3385cdb28fed68": {
        "authored_data": "2009 Mar 26 23:25",
        "commit.message": "added an implementation of Dantzig's simplex algorithm\nto solve constrained linear optimization problems\nJIRA: MATH-246\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@758920 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "b2db570b31da97121c17880a0f3ac3c5c6fb80cb",
        "changes": {
            "src/java/org/apache/commons/math/MessagesResources_fr.java": {
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/OptimizationException.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', None)": [
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', None)": [
                        56
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        66
                    ]
                }
            }
        }
    },
    "b2db570b31da97121c17880a0f3ac3c5c6fb80cb": {
        "authored_data": "2009 Mar 26 23:00",
        "commit.message": "fixed checkstyle and findbugs errors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@758912 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "5404d5e1a2696fded24d74852a3aa92614c212fe",
        "changes": {
            "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        69
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/RealVector.java": {
                "old": {
                    "(None, None)": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19,
                        44
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/SparseRealVector.java": {
                "new": {
                    "('org.apache.commons.math.linear#SparseRealVector', None)": [
                        30,
                        31,
                        32
                    ]
                }
            }
        }
    },
    "ed8fc4a03a57f6906a74a87387d0c4e80e23623d": {
        "authored_data": "2009 Mar 24 22:15",
        "commit.message": "updated general algorithms with latest interfaces definitions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@758058 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "d99003bc0fb18a7cb45b44e9e1ab2f300efb41e6",
        "changes": {
            "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "(None, None)": [
                        25,
                        29,
                        30,
                        339
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        41,
                        80,
                        88,
                        89,
                        159,
                        180,
                        237,
                        276,
                        333
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateJacobian')": [
                        162,
                        164,
                        166,
                        167
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateResidualsAndCost')": [
                        184,
                        187,
                        189,
                        190
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'getCovariances')": [
                        243
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'guessParametersErrors')": [
                        282
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(VectorialDifferentiableObjectiveFunction,double,double,double)')": [
                        298,
                        301,
                        317,
                        322
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        23,
                        31,
                        344
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        42,
                        81,
                        82,
                        83,
                        84,
                        92,
                        93,
                        163,
                        184,
                        241,
                        280,
                        338
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateJacobian')": [
                        166,
                        168,
                        170,
                        171
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateResidualsAndCost')": [
                        188,
                        191,
                        193,
                        194
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'getCovariances')": [
                        247
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'guessParametersErrors')": [
                        286
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        302,
                        305,
                        319,
                        322,
                        327
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        66,
                        78,
                        117
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        66,
                        78,
                        117
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "(None, None)": [
                        21,
                        30,
                        31
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', None)": [
                        107
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        213,
                        223,
                        258,
                        266,
                        294,
                        308,
                        323,
                        387,
                        396,
                        408
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        30,
                        31
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', None)": [
                        107
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        213,
                        223,
                        258,
                        266,
                        294,
                        308,
                        323,
                        387,
                        396,
                        408
                    ]
                }
            },
            "src/test/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        30,
                        33
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testTrivial')": [
                        105
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testColumnsPermutation')": [
                        118
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testNoDependency')": [
                        138
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testOneSet')": [
                        159
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testTwoSets')": [
                        178
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testIllConditioned')": [
                        225
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testRedundantEquations')": [
                        306
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentEquations')": [
                        325
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentSizes')": [
                        340,
                        369
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFitting')": [
                        399
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFittingBadInit')": [
                        420
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', None)": [
                        480,
                        481,
                        482,
                        490,
                        491,
                        492,
                        493,
                        494,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        526,
                        527,
                        556,
                        557
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testTrivial')": [
                        107
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testColumnsPermutation')": [
                        120
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testNoDependency')": [
                        140
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testOneSet')": [
                        161
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testTwoSets')": [
                        180
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testIllConditioned')": [
                        227
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testRedundantEquations')": [
                        308
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentEquations')": [
                        327
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentSizes')": [
                        342,
                        371
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFitting')": [
                        401
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFittingBadInit')": [
                        422
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', None)": [
                        482,
                        483,
                        484,
                        492,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524,
                        525,
                        526,
                        527,
                        550,
                        579,
                        593,
                        594,
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610,
                        611,
                        612,
                        613,
                        614,
                        615,
                        616,
                        617,
                        618,
                        619,
                        620,
                        621,
                        622,
                        623,
                        624
                    ]
                }
            },
            "src/test/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        31,
                        34
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTrivial')": [
                        106
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testQRColumnsPermutation')": [
                        125
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNoDependency')": [
                        143
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testOneSet')": [
                        162
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTwoSets')": [
                        179
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNonInversible')": [
                        204
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testIllConditioned')": [
                        226
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        260
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        275
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testRedundantEquations')": [
                        296
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentEquations')": [
                        313
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentSizes')": [
                        326,
                        353
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'checkEstimate(VectorialDifferentiableObjectiveFunction,double,int,double,double,double,boolean)')": [
                        375,
                        391
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFitting')": [
                        398
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFittingBadInit')": [
                        448
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMath199')": [
                        501
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', None)": [
                        520,
                        530,
                        531,
                        532,
                        533,
                        534,
                        538,
                        539,
                        540,
                        566,
                        567,
                        570,
                        596,
                        597,
                        611,
                        612,
                        613,
                        614,
                        615,
                        629,
                        639
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        30,
                        31,
                        32
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTrivial')": [
                        108
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testQRColumnsPermutation')": [
                        127
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNoDependency')": [
                        145
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testOneSet')": [
                        164
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTwoSets')": [
                        181
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNonInversible')": [
                        206
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testIllConditioned')": [
                        228
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        262
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        277
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testRedundantEquations')": [
                        298
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentEquations')": [
                        315
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentSizes')": [
                        328,
                        355
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'checkEstimate(DifferentiableMultivariateVectorialFunction,double,int,double,double,double,boolean)')": [
                        377,
                        393
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFitting')": [
                        400
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFittingBadInit')": [
                        450
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMath199')": [
                        503
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', None)": [
                        522,
                        532,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558,
                        559,
                        560,
                        561,
                        562,
                        563,
                        564,
                        565,
                        591,
                        594,
                        620,
                        621,
                        635,
                        636,
                        637,
                        638,
                        639,
                        640,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        656,
                        657,
                        658,
                        659,
                        660,
                        661,
                        662,
                        663,
                        664,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671,
                        685,
                        695,
                        703,
                        704,
                        705,
                        706,
                        707,
                        708,
                        709,
                        710,
                        711,
                        712,
                        713,
                        714,
                        715,
                        716,
                        717,
                        718,
                        719,
                        720,
                        721,
                        722,
                        723,
                        724,
                        725,
                        726,
                        727,
                        728,
                        729,
                        730,
                        731,
                        732,
                        733,
                        734
                    ]
                }
            },
            "src/test/org/apache/commons/math/optimization/general/MinpackTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        24,
                        26,
                        27,
                        28
                    ],
                    "('org.apache.commons.math.optimization.general#MinpackTest', 'minpackTest(MinpackFunction,boolean)')": [
                        523
                    ],
                    "('org.apache.commons.math.optimization.general#MinpackTest', None)": [
                        529,
                        600,
                        601,
                        602,
                        617,
                        629,
                        655,
                        666,
                        690,
                        709,
                        732,
                        737,
                        754,
                        767,
                        801,
                        814,
                        844,
                        852,
                        875,
                        890,
                        928,
                        945,
                        984,
                        999,
                        1031,
                        1063,
                        1103,
                        1118,
                        1145,
                        1156,
                        1181,
                        1199,
                        1237,
                        1266,
                        1310,
                        1343,
                        1372,
                        1389,
                        1425,
                        1461
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29
                    ],
                    "('org.apache.commons.math.optimization.general#MinpackTest', 'minpackTest(MinpackFunction,boolean)')": [
                        526
                    ],
                    "('org.apache.commons.math.optimization.general#MinpackTest', None)": [
                        532,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610,
                        611,
                        612,
                        613,
                        614,
                        615,
                        616,
                        617,
                        618,
                        619,
                        620,
                        621,
                        622,
                        623,
                        624,
                        625,
                        626,
                        627,
                        628,
                        629,
                        630,
                        631,
                        632,
                        633,
                        634,
                        635,
                        636,
                        637,
                        652,
                        664,
                        690,
                        701,
                        725,
                        744,
                        767,
                        772,
                        789,
                        802,
                        836,
                        849,
                        879,
                        887,
                        910,
                        925,
                        963,
                        980,
                        1019,
                        1034,
                        1066,
                        1098,
                        1138,
                        1153,
                        1180,
                        1191,
                        1216,
                        1234,
                        1272,
                        1301,
                        1345,
                        1378,
                        1407,
                        1424,
                        1460,
                        1496
                    ]
                }
            }
        }
    }
}