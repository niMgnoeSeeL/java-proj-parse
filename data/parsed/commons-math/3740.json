{
    "91f737519e7b613d4c4ca3c1f32d4da10e9eac30": {
        "authored_data": "2011 Oct 07 03:18",
        "commit.message": "Javadoc fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1179926 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "23da497319a687fae5622e71d10a82388c81c8ce",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java": {
                "old": {
                    "(None, None)": [
                        32,
                        34,
                        38
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegrator', None)": [
                        234
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        34,
                        38
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegrator', None)": [
                        234
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java": {
                "old": {
                    "(None, None)": [
                        27,
                        32,
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        32,
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegrator', None)": [
                        39,
                        108
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegrator', None)": [
                        39,
                        108
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java": {
                "old": {
                    "(None, None)": [
                        68,
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        68,
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java": {
                "old": {
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', None)": [
                        197,
                        198
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', None)": [
                        197,
                        198
                    ]
                }
            }
        }
    },
    "23da497319a687fae5622e71d10a82388c81c8ce": {
        "authored_data": "2011 Oct 06 15:44",
        "commit.message": "MATH-683     \nNew method \"shift\" to compute coefficients of a polynomial (due to R. di Costanzo).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1179671 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "61018c79977bd1b04c32c031f2327c69980b2182",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java": {
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialsUtils', None)": [
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        240,
                        241,
                        242
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialsUtils', 'shift(double,double)')": [
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtilsTest.java": {
                "new": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialsUtilsTest', None)": [
                        210,
                        237,
                        238,
                        239
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialsUtilsTest', 'testShift')": [
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236
                    ]
                }
            }
        }
    },
    "61018c79977bd1b04c32c031f2327c69980b2182": {
        "authored_data": "2011 Oct 06 02:14",
        "commit.message": "Modifications to the ConjugateGradient class and unit tests\n  - altered the way iterations are counted: Incrementor is incremented prior to any modification to the current state, so that the solver is in a consistent state (accessible residual corresponds to the last estimate of the solution), even in case of MaxCountExceededException occuring.\n  - modified some tests which were not testing anything.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1179488 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "8fcbe82ab69c4d307fe735366baab97e077cbc64",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/ConjugateGradient.java": {
                "old": {
                    "('org.apache.commons.math.linear#ConjugateGradient', 'solveInPlace(RealLinearOperator,InvertibleRealLinearOperator,RealVector,RealVector)')": [
                        183,
                        229,
                        235
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#ConjugateGradient', 'solveInPlace(RealLinearOperator,InvertibleRealLinearOperator,RealVector,RealVector)')": [
                        177,
                        178,
                        185,
                        218,
                        232
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#ConjugateGradientTest', None)": [
                        156,
                        198,
                        334
                    ],
                    "('org.apache.commons.math.linear#ConjugateGradientTest', 'testUnpreconditionedResidual')": [
                        167,
                        175,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197
                    ],
                    "('org.apache.commons.math.linear#ConjugateGradientTest', 'testPreconditionedResidual')": [
                        346,
                        354,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#ConjugateGradientTest', None)": [
                        156,
                        345
                    ],
                    "('org.apache.commons.math.linear#ConjugateGradientTest', 'testUnpreconditionedResidual')": [
                        164,
                        168,
                        176,
                        177,
                        178,
                        179,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209
                    ],
                    "('org.apache.commons.math.linear#ConjugateGradientTest', 'testPreconditionedResidual')": [
                        354,
                        358,
                        366,
                        367,
                        368,
                        369,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400
                    ]
                }
            }
        }
    },
    "8fcbe82ab69c4d307fe735366baab97e077cbc64": {
        "authored_data": "2011 Oct 04 14:14",
        "commit.message": "Fixed test changed by former exceptions modifications.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178808 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "e777a24d2bde6a71d07dd7078a107a5f826d07ed",
        "changes": {
            "src/test/java/org/apache/commons/math/random/ValueServerTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.random#ValueServerTest', None)": [
                        134,
                        147
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('org.apache.commons.math.random#ValueServerTest', None)": [
                        135,
                        148
                    ]
                }
            }
        }
    },
    "e777a24d2bde6a71d07dd7078a107a5f826d07ed": {
        "authored_data": "2011 Oct 04 14:14",
        "commit.message": "Fixed overzealous replacement of equations by expandable ...\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178807 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "2dbc66e4fdcfa51cea40f74db6e97b37a247a815",
        "changes": {
            "src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#AbstractIntegrator', None)": [
                        79,
                        221,
                        223,
                        224,
                        225,
                        231
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        207,
                        215
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#AbstractIntegrator', None)": [
                        79,
                        221,
                        223,
                        224,
                        225,
                        231
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        207,
                        215
                    ]
                }
            }
        }
    },
    "2dbc66e4fdcfa51cea40f74db6e97b37a247a815": {
        "authored_data": "2011 Oct 04 14:14",
        "commit.message": "Replaced obsolete exceptions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178806 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "c733f8c42294f3b7d90469b7bb8a5f8f2531bbf8",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/ZeroException.java": {
                "old": {
                    "('org.apache.commons.math.exception#ZeroException', None)": [
                        45,
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#ZeroException', None)": [
                        44,
                        46,
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/genetics/RandomKeyMutation.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.genetics#RandomKeyMutation', None)": [
                        37
                    ],
                    "('org.apache.commons.math.genetics#RandomKeyMutation', 'mutate(Chromosome)')": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.genetics#RandomKeyMutation', None)": [
                        37
                    ],
                    "('org.apache.commons.math.genetics#RandomKeyMutation', 'mutate(Chromosome)')": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'load(double)')": [
                        179
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'load(URL)')": [
                        200,
                        201
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', None)": [
                        282,
                        430
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'getNextValue')": [
                        435,
                        455
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        33
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'load(double)')": [
                        181
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'load(URL)')": [
                        202
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', None)": [
                        283,
                        431
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'getNextValue')": [
                        436,
                        456
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/ValueServer.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.random#ValueServer', 'getNext')": [
                        123
                    ],
                    "('org.apache.commons.math.random#ValueServer', 'getNextDigest')": [
                        355
                    ],
                    "('org.apache.commons.math.random#ValueServer', 'getNextReplay')": [
                        388,
                        389
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.random#ValueServer', 'getNext')": [
                        123
                    ],
                    "('org.apache.commons.math.random#ValueServer', 'getNextDigest')": [
                        355
                    ],
                    "('org.apache.commons.math.random#ValueServer', 'getNextReplay')": [
                        388,
                        389
                    ]
                }
            }
        }
    },
    "c733f8c42294f3b7d90469b7bb8a5f8f2531bbf8": {
        "authored_data": "2011 Oct 04 14:13",
        "commit.message": "Fixed missing generics.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178805 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "309dd689eb1bdef1dcf3f1e9139979816ab36738",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        147
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        147
                    ]
                }
            }
        }
    },
    "309dd689eb1bdef1dcf3f1e9139979816ab36738": {
        "authored_data": "2011 Oct 04 08:12",
        "commit.message": "Added method multiply(int) to FieldElement, and updated implementing classes and tests accordingly. Solves MATH-684.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178715 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "2898bc6403a9043bb8ea2789c60459ad58ba24c0",
        "changes": {
            "src/main/java/org/apache/commons/math/FieldElement.java": {
                "new": {
                    "(None, None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/complex/Complex.java": {
                "new": {
                    "('org.apache.commons.math.complex#Complex', None)": [
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        444,
                        445,
                        446,
                        447
                    ],
                    "('org.apache.commons.math.complex#Complex', 'multiply(int)')": [
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/BigReal.java": {
                "old": {
                    "(None, None)": [
                        291
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#BigReal', 'multiply(int)')": [
                        250,
                        251
                    ],
                    "('org.apache.commons.math.util#BigReal', None)": [
                        252,
                        253,
                        254
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/complex/ComplexTest.java": {
                "old": {
                    "('org.apache.commons.math.complex#ComplexTest', None)": [
                        132,
                        295,
                        316,
                        317,
                        318,
                        420,
                        448,
                        510
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testScalarAddInf')": [
                        153
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testScalarDivideInf')": [
                        291
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testMultiplyInInf')": [
                        319
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testMultiplyNaNInf')": [
                        343
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testScalarMultiplyInf')": [
                        370
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#ComplexTest', None)": [
                        132,
                        295,
                        318,
                        319,
                        320,
                        425,
                        453,
                        515
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testScalarAddInf')": [
                        153
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testScalarDivideInf')": [
                        291
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testMultiplyNaN')": [
                        316,
                        317
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testMultiplyInfInf')": [
                        321
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testMultiplyNaNInf')": [
                        345
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testScalarMultiply')": [
                        356,
                        357,
                        358
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testScalarMultiplyInf')": [
                        375
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/util/BigRealTest.java": {
                "new": {
                    "('org.apache.commons.math.util#BigRealTest', 'testMultiply')": [
                        90,
                        91
                    ]
                }
            }
        }
    },
    "1d0479bfb397564ad54195bab01ff44eea96ad64": {
        "authored_data": "2011 Oct 03 06:33",
        "commit.message": "- Replaced LinearOperator with Operator in exception names in order to make them shorter (as discussed on the ML).\n- Created IllConditionedOperatorException.\n- Created SingularOperatorException (as discussed on the ML).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178306 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "2568420bf6a022558b0cb7bb837a42659c22de51",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java": {
                "old": {
                    "(None, None)": [
                        191,
                        192,
                        193
                    ]
                },
                "new": {
                    "(None, None)": [
                        113,
                        192,
                        193,
                        194,
                        298
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/ConjugateGradient.java": {
                "old": {
                    "(None, None)": [
                        50
                    ],
                    "('org.apache.commons.math.linear#ConjugateGradient', 'solveInPlace(RealLinearOperator,InvertibleRealLinearOperator,RealVector,RealVector)')": [
                        169,
                        222,
                        223,
                        238,
                        239
                    ]
                },
                "new": {
                    "(None, None)": [
                        50
                    ],
                    "('org.apache.commons.math.linear#ConjugateGradient', 'solveInPlace(RealLinearOperator,InvertibleRealLinearOperator,RealVector,RealVector)')": [
                        169,
                        222,
                        223,
                        238,
                        239
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/IterativeLinearSolver.java": {
                "old": {
                    "('org.apache.commons.math.linear#IterativeLinearSolver', None)": [
                        70,
                        113,
                        138,
                        162
                    ],
                    "('org.apache.commons.math.linear#IterativeLinearSolver', 'checkParameters(RealLinearOperator,RealVector,RealVector)')": [
                        77,
                        83
                    ],
                    "('org.apache.commons.math.linear#IterativeLinearSolver', 'solve(RealLinearOperator,RealVector)')": [
                        121
                    ],
                    "('org.apache.commons.math.linear#IterativeLinearSolver', 'solve(RealLinearOperator,RealVector,RealVector)')": [
                        146
                    ],
                    "(None, None)": [
                        171
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#IterativeLinearSolver', None)": [
                        70,
                        113,
                        138,
                        162
                    ],
                    "('org.apache.commons.math.linear#IterativeLinearSolver', 'checkParameters(RealLinearOperator,RealVector,RealVector)')": [
                        77,
                        83
                    ],
                    "('org.apache.commons.math.linear#IterativeLinearSolver', 'solve(RealLinearOperator,RealVector)')": [
                        121
                    ],
                    "('org.apache.commons.math.linear#IterativeLinearSolver', 'solve(RealLinearOperator,RealVector,RealVector)')": [
                        146
                    ],
                    "(None, None)": [
                        171
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/JacobiPreconditioner.java": {
                "old": {
                    "('org.apache.commons.math.linear#JacobiPreconditioner', None)": [
                        53
                    ],
                    "('org.apache.commons.math.linear#JacobiPreconditioner', 'create(RealLinearOperator)')": [
                        56,
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#JacobiPreconditioner', None)": [
                        53
                    ],
                    "('org.apache.commons.math.linear#JacobiPreconditioner', 'create(RealLinearOperator)')": [
                        56,
                        59
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/PreconditionedIterativeLinearSolver.java": {
                "old": {
                    "('org.apache.commons.math.linear#PreconditionedIterativeLinearSolver', None)": [
                        69,
                        119,
                        152,
                        180,
                        191
                    ],
                    "('org.apache.commons.math.linear#PreconditionedIterativeLinearSolver', 'solve(RealLinearOperator,InvertibleRealLinearOperator,RealVector,RealVector)')": [
                        80
                    ],
                    "('org.apache.commons.math.linear#PreconditionedIterativeLinearSolver', 'solve(RealLinearOperator,RealVector)')": [
                        89
                    ],
                    "('org.apache.commons.math.linear#PreconditionedIterativeLinearSolver', 'solve(RealLinearOperator,RealVector,RealVector)')": [
                        101
                    ],
                    "('org.apache.commons.math.linear#PreconditionedIterativeLinearSolver', 'checkParameters(RealLinearOperator,InvertibleRealLinearOperator,RealVector,RealVector)')": [
                        128,
                        133
                    ],
                    "('org.apache.commons.math.linear#PreconditionedIterativeLinearSolver', 'solve(RealLinearOperator,InvertibleRealLinearOperator,RealVector)')": [
                        162
                    ],
                    "('org.apache.commons.math.linear#PreconditionedIterativeLinearSolver', 'solveInPlace(RealLinearOperator,RealVector,RealVector)')": [
                        198
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#PreconditionedIterativeLinearSolver', None)": [
                        69,
                        119,
                        152,
                        180,
                        191
                    ],
                    "('org.apache.commons.math.linear#PreconditionedIterativeLinearSolver', 'solve(RealLinearOperator,InvertibleRealLinearOperator,RealVector,RealVector)')": [
                        80
                    ],
                    "('org.apache.commons.math.linear#PreconditionedIterativeLinearSolver', 'solve(RealLinearOperator,RealVector)')": [
                        89
                    ],
                    "('org.apache.commons.math.linear#PreconditionedIterativeLinearSolver', 'solve(RealLinearOperator,RealVector,RealVector)')": [
                        101
                    ],
                    "('org.apache.commons.math.linear#PreconditionedIterativeLinearSolver', 'checkParameters(RealLinearOperator,InvertibleRealLinearOperator,RealVector,RealVector)')": [
                        128,
                        133
                    ],
                    "('org.apache.commons.math.linear#PreconditionedIterativeLinearSolver', 'solve(RealLinearOperator,InvertibleRealLinearOperator,RealVector)')": [
                        162
                    ],
                    "('org.apache.commons.math.linear#PreconditionedIterativeLinearSolver', 'solveInPlace(RealLinearOperator,RealVector,RealVector)')": [
                        198
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/ConjugateGradientTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#ConjugateGradientTest', None)": [
                        28,
                        58,
                        202,
                        266
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#ConjugateGradientTest', None)": [
                        28,
                        58,
                        202,
                        266
                    ]
                }
            }
        }
    }
}