{
    "f125ff3ce2e9a3dd7b8eab20d4b1acec6e274ac6": {
        "authored_data": "2008 Sep 10 14:51",
        "commit.message": "fixed typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@693862 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "dc2767c46192c4210f687a3d5cdc54dba3431990",
        "changes": {
            "src/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegrator', None)": [
                        249
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegrator', None)": [
                        249
                    ]
                }
            }
        }
    },
    "e8a6f1a76ce6508fb48eab67034196cb75d8a39e": {
        "authored_data": "2008 Sep 09 20:37",
        "commit.message": "Added probability density functions computation for distributions for which it is feasible\nJIRA: MATH-222\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@693598 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "66759ef52a922738a912769c7b7c01e9a65b91c5",
        "changes": {
            "src/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', None)": [
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', None)": [
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        82,
                        83
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', 'density(Double)')": [
                        80,
                        81
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/ExponentialDistribution.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java": {
                "new": {
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', None)": [
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'density(Double)')": [
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'getInitialDomain(double)')": [
                        173,
                        174
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/GammaDistribution.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', None)": [
                        144
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', None)": [
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        154,
                        155
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'density(Double)')": [
                        151,
                        152,
                        153
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/NormalDistribution.java": {
                "old": {
                    "(None, None)": [
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', None)": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', None)": [
                        43,
                        44,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'density(Double)')": [
                        107,
                        108,
                        109
                    ]
                }
            },
            "src/test/org/apache/commons/math/distribution/ChiSquareDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        102,
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#ChiSquareDistributionTest', None)": [
                        102,
                        103,
                        114,
                        115
                    ],
                    "('org.apache.commons.math.distribution#ChiSquareDistributionTest', 'testDensity')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ],
                    "('org.apache.commons.math.distribution#ChiSquareDistributionTest', 'checkDensity(double,double,double)')": [
                        116,
                        117,
                        118,
                        119
                    ],
                    "(None, None)": [
                        120,
                        121,
                        122
                    ]
                }
            },
            "src/test/org/apache/commons/math/distribution/ExponentialDistributionTest.java": {
                "new": {
                    "(None, None)": [
                        18,
                        19
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionTest', None)": [
                        76,
                        92
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionTest', 'testDensity')": [
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91
                    ]
                }
            },
            "src/test/org/apache/commons/math/distribution/GammaDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#GammaDistributionTest', None)": [
                        36,
                        38,
                        42,
                        43,
                        51,
                        57,
                        85,
                        86,
                        113
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionTest', 'makeCumulativeTestValues')": [
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#GammaDistributionTest', None)": [
                        36,
                        38,
                        42,
                        43,
                        51,
                        57,
                        85,
                        86,
                        113,
                        132,
                        133,
                        138,
                        139,
                        140
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionTest', 'makeCumulativeTestValues')": [
                        55
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionTest', 'testDensity')": [
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionTest', 'checkDensity(double,double,double,double)')": [
                        134,
                        135,
                        136,
                        137
                    ]
                }
            },
            "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#NormalDistributionTest', None)": [
                        123
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#NormalDistributionTest', None)": [
                        123,
                        130,
                        131,
                        136,
                        137,
                        138
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'testDensity')": [
                        124,
                        125,
                        126,
                        127,
                        128,
                        129
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'checkDensity(double,double,double,double)')": [
                        132,
                        133,
                        134,
                        135
                    ]
                }
            }
        }
    },
    "60cd4255569e16feb48bc1f0887bac2450aa4f76": {
        "authored_data": "2008 Sep 01 11:42",
        "commit.message": "typos\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@690941 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "fb171134030a1d75e928c1b03621d650b46e4d9e",
        "changes": {
            "src/java/org/apache/commons/math/linear/LUDecomposition.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/QRDecomposition.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            }
        }
    },
    "fb171134030a1d75e928c1b03621d650b46e4d9e": {
        "authored_data": "2008 Sep 01 10:42",
        "commit.message": "removed spurious throws clause\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@690934 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "481a091105e53ea4afcf9b8373fd75031f90e2fd",
        "changes": {
            "src/java/org/apache/commons/math/linear/QRDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRDecompositionImpl', None)": [
                        76,
                        78,
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#QRDecompositionImpl', None)": [
                        77
                    ]
                }
            }
        }
    },
    "481a091105e53ea4afcf9b8373fd75031f90e2fd": {
        "authored_data": "2008 Aug 31 22:28",
        "commit.message": "added a decompose method to the base DecompositionSolver interface\nto allow a solver to decompose a matrix after construction.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@690803 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "c1f2e60e81b5d7ff81d3753de1eea8b969859075",
        "changes": {
            "src/java/org/apache/commons/math/linear/DecompositionSolver.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        40,
                        43,
                        44,
                        47,
                        50,
                        53,
                        54,
                        57,
                        60,
                        63,
                        64,
                        67
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        51,
                        52,
                        55,
                        56,
                        57,
                        58,
                        61,
                        64,
                        65,
                        68,
                        69,
                        70,
                        71,
                        74,
                        77,
                        78,
                        81,
                        82,
                        83,
                        84,
                        87
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/LUDecomposition.java": {
                "old": {
                    "(None, None)": [
                        27,
                        29,
                        30,
                        44,
                        51,
                        62,
                        69,
                        76,
                        83
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        62,
                        63,
                        65,
                        71,
                        72,
                        74,
                        83,
                        84,
                        87,
                        92,
                        93,
                        96,
                        101,
                        102,
                        105,
                        110,
                        111,
                        114
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/LUDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#LUDecompositionImpl', None)": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        44,
                        47,
                        69,
                        75,
                        80,
                        91,
                        92,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'getL')": [
                        105
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'getU')": [
                        118
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'getP')": [
                        130
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'getPivot')": [
                        142
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'isNonSingular')": [
                        147
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'getDeterminant')": [
                        152
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'solve(double)')": [
                        166,
                        167
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'solve(RealVector)')": [
                        203
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'solve(RealVectorImpl)')": [
                        250
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'solve(RealMatrix)')": [
                        256
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'luDecompose')": [
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389
                    ],
                    "(None, None)": [
                        390
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#LUDecompositionImpl', None)": [
                        35,
                        38,
                        41,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        77,
                        78,
                        84,
                        89,
                        90,
                        98,
                        99,
                        100,
                        101,
                        105,
                        106,
                        107,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        417,
                        418,
                        419,
                        420
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'decompose(RealMatrix)')": [
                        102,
                        103,
                        104
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'decompose(RealMatrix,double)')": [
                        108,
                        109,
                        113,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'getL')": [
                        190,
                        191,
                        192,
                        194
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'getU')": [
                        206,
                        207,
                        208,
                        210
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'getP')": [
                        221,
                        222,
                        223,
                        225
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'getPivot')": [
                        236,
                        237,
                        238
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'isNonSingular')": [
                        243,
                        244,
                        245
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'getDeterminant')": [
                        250,
                        251,
                        252,
                        256
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'solve(double)')": [
                        267,
                        268,
                        269,
                        270
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'solve(RealVector)')": [
                        306,
                        311,
                        312
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'solve(RealVectorImpl)')": [
                        355
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'solve(RealMatrix)')": [
                        361,
                        362,
                        363,
                        364
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'checkDecomposed')": [
                        422,
                        423,
                        424,
                        425
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/QRDecomposition.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24,
                        38,
                        45,
                        54,
                        60
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        42,
                        43,
                        45,
                        51,
                        52,
                        54,
                        62,
                        63,
                        65,
                        70,
                        71,
                        73
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/QRDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRDecompositionImpl', None)": [
                        37,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        62,
                        63,
                        65,
                        68,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'getR')": [
                        150
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'getQ')": [
                        175
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'getH')": [
                        219
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'isFullRank')": [
                        240
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'solve(double)')": [
                        251,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'solve(RealVector)')": [
                        294
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'solve(RealVectorImpl)')": [
                        310
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'solve(RealMatrix)')": [
                        316,
                        317
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#QRDecompositionImpl', None)": [
                        37,
                        45,
                        46,
                        47,
                        48,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        68,
                        69,
                        72,
                        73,
                        74,
                        75,
                        76,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        274,
                        339,
                        340,
                        406,
                        407,
                        408,
                        409,
                        410
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'decompose(RealMatrix)')": [
                        84,
                        85,
                        86
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'getR')": [
                        157,
                        158,
                        162,
                        163,
                        165,
                        166
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'getQ')": [
                        187,
                        188,
                        192,
                        193,
                        195,
                        196
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'getH')": [
                        236,
                        237,
                        238,
                        241,
                        242,
                        243,
                        244
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'isFullRank')": [
                        263,
                        264,
                        265,
                        266,
                        267
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'solve(double)')": [
                        279,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'solve(RealVector)')": [
                        326,
                        330
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'solve(RealVectorImpl)')": [
                        345
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'solve(RealMatrix)')": [
                        351,
                        352,
                        353,
                        354,
                        355,
                        356
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'checkDecomposed')": [
                        411,
                        412,
                        413,
                        414
                    ],
                    "(None, None)": [
                        415,
                        416,
                        417
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/LUDecompositionImplTest.java": {
                "new": {
                    "('org.apache.commons.math.linear#LUDecompositionImplTest', None)": [
                        91,
                        100,
                        101,
                        102,
                        103,
                        112,
                        113
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImplTest', 'testNoDecompose')": [
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImplTest', 'testThreshold')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/QRDecompositionImplTest.java": {
                "new": {
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', None)": [
                        352
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', 'testNoDecompose')": [
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360
                    ],
                    "(None, None)": [
                        361,
                        362,
                        363
                    ]
                }
            }
        }
    },
    "c1f2e60e81b5d7ff81d3753de1eea8b969859075": {
        "authored_data": "2008 Aug 29 16:17",
        "commit.message": "Changed the equals() methods from RealMatrixImpl, RealVectorImpl and Vector3D\nso that they consider +0 and -0 are equal, as required by IEEE-754 standard.\nThese were bugs similar to MATH-221 for Complex.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@690314 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "94cf29c4e3b6a7f37ad9d85ba572409691ed7f23",
        "changes": {
            "src/java/org/apache/commons/math/geometry/Vector3D.java": {
                "old": {
                    "('org.apache.commons.math.geometry#Vector3D', 'equals(Object)')": [
                        406,
                        411,
                        412,
                        413
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry#Vector3D', 'equals(Object)')": [
                        406,
                        411
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/RealMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealMatrixImpl', None)": [
                        1195,
                        1196
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'equals(Object)')": [
                        1217,
                        1218
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#RealMatrixImpl', None)": [
                        1195
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'equals(Object)')": [
                        1216
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/RealVectorImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealVectorImpl', 'equals(Object)')": [
                        1269,
                        1270
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#RealVectorImpl', 'equals(Object)')": [
                        1269
                    ]
                }
            }
        }
    },
    "94cf29c4e3b6a7f37ad9d85ba572409691ed7f23": {
        "authored_data": "2008 Aug 29 15:46",
        "commit.message": "Changed the Complex.equals() method so that it considers +0 and -0 are equal,\nas required by IEEE-754 standard.\nJIRA: MATH-221\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@690308 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "a48a97b37fa591427f95e158beb33031daf06196",
        "changes": {
            "src/java/org/apache/commons/math/complex/Complex.java": {
                "old": {
                    "('org.apache.commons.math.complex#Complex', 'equals(Object)')": [
                        258,
                        259,
                        260,
                        261
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#Complex', 'equals(Object)')": [
                        258
                    ]
                }
            },
            "src/test/org/apache/commons/math/complex/ComplexTest.java": {
                "new": {
                    "('org.apache.commons.math.complex#ComplexTest', None)": [
                        693,
                        694
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testMath221')": [
                        695,
                        696
                    ],
                    "(None, None)": [
                        697,
                        698
                    ]
                }
            }
        }
    }
}