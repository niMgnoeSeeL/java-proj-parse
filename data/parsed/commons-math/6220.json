{
    "86fa786c16d80930fdfd155e6c8b28dcc4afe75e": {
        "authored_data": "2005 Oct 16 03:29",
        "commit.message": "Merging bug fixes in r267517:r321515 from MATH_1_1 branch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@322442 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "d147d1ebddf6ec0a3d16b9de5487c3499fb7eeb0",
        "changes": {
            "src/java/org/apache/commons/math/analysis/BisectionSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis#BisectionSolver', 'solve(double,double)')": [
                        90
                    ]
                }
            },
            "src/java/org/apache/commons/math/complex/Complex.java": {
                "old": {
                    "('org.apache.commons.math.complex#Complex', None)": [
                        36,
                        150,
                        151,
                        152
                    ],
                    "('org.apache.commons.math.complex#Complex', 'equals(Object)')": [
                        167,
                        179
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.complex#Complex', None)": [
                        37,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201
                    ],
                    "('org.apache.commons.math.complex#Complex', 'equals(Object)')": [
                        175,
                        178,
                        179,
                        180,
                        185,
                        191
                    ],
                    "('org.apache.commons.math.complex#Complex', 'hashCode')": [
                        202,
                        203,
                        204,
                        205,
                        206,
                        207
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/RealMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealMatrixImpl', None)": [
                        874
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'equals(Object)')": [
                        894
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#RealMatrixImpl', None)": [
                        874,
                        875
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'equals(Object)')": [
                        895,
                        896
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#Skewness', 'getResult')": [
                        94,
                        96,
                        99,
                        102
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#Skewness', 'getResult')": [
                        95,
                        98
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/rank/Max.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.rank#Max', 'evaluate(double,int,int)')": [
                        115
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.rank#Max', 'evaluate(double,int,int)')": [
                        115,
                        116,
                        117
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/rank/Min.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.rank#Min', 'evaluate(double,int,int)')": [
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.rank#Min', 'evaluate(double,int,int)')": [
                        117,
                        118,
                        119
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.rank#Percentile', 'evaluate(double,int,int,double)')": [
                        190,
                        191,
                        192,
                        193,
                        194,
                        195
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.rank#Percentile', 'evaluate(double,int,int,double)')": [
                        189,
                        190,
                        191,
                        192,
                        193,
                        194
                    ]
                }
            },
            "src/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', 'subAndCheck(int,int)')": [
                        736
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtils', 'subAndCheck(int,int)')": [
                        736
                    ]
                }
            },
            "src/java/org/apache/commons/math/util/ResizableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getElement(int)')": [
                        454,
                        455,
                        462,
                        468
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getElements')": [
                        478
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getInternalLength')": [
                        520
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getNumElements')": [
                        530
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getValues')": [
                        545
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'start')": [
                        686
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getElement(int)')": [
                        454,
                        461
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getElements')": [
                        476
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getInternalLength')": [
                        518
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getNumElements')": [
                        528
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getValues')": [
                        543
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'start')": [
                        684
                    ]
                }
            },
            "src/test/org/apache/commons/math/complex/ComplexTest.java": {
                "new": {
                    "('org.apache.commons.math.complex#ComplexTest', None)": [
                        164,
                        172,
                        173
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testEqualsNaN')": [
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171
                    ],
                    "('org.apache.commons.math.complex#ComplexTest', 'testHashCode')": [
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ],
                    "(None, None)": [
                        184
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/StatUtilsTest.java": {
                "new": {
                    "('org.apache.commons.math.stat#StatUtilsTest', None)": [
                        45
                    ],
                    "('org.apache.commons.math.stat#StatUtilsTest', 'testMax')": [
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315
                    ],
                    "('org.apache.commons.math.stat#StatUtilsTest', 'testMin')": [
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/descriptive/rank/MaxTest.java": {
                "new": {
                    "('org.apache.commons.math.stat.descriptive.rank#MaxTest', 'testNaNs')": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ],
                    "(None, None)": [
                        82,
                        83
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/descriptive/rank/MinTest.java": {
                "new": {
                    "('org.apache.commons.math.stat.descriptive.rank#MinTest', 'testNaNs')": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ],
                    "(None, None)": [
                        82,
                        83
                    ]
                }
            },
            "src/test/org/apache/commons/math/util/MathUtilsTest.java": {
                "new": {
                    "('org.apache.commons.math.util#MathUtilsTest', 'testAddAndCheck')": [
                        49,
                        53
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testMulAndCheck')": [
                        63,
                        67
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testSubAndCheck')": [
                        77,
                        81
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', None)": [
                        83,
                        84,
                        93
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testSubAndCheckErrorMessage')": [
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92
                    ]
                }
            }
        }
    },
    "01dcb65ae51707fb1a5d4d2e87675607f64625dc": {
        "authored_data": "2005 Sep 04 04:59",
        "commit.message": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@278558 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "cab4468cb6380c43948a16aa2ec511c79ad9e4ce",
        "changes": {
            "src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.analysis#DividedDifferenceInterpolator', None)": [
                        79,
                        82
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis#DividedDifferenceInterpolator', None)": [
                        79,
                        80,
                        81,
                        84
                    ]
                }
            }
        }
    },
    "fe3ac4361e2b4ac53af5fb32cb91008a16af22e3": {
        "authored_data": "2005 Sep 04 00:38",
        "commit.message": "Merged changes from MATH_1_1 branch, r240245:r267516\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@267527 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "e1062a38bb85bfcae47b54518dcee9c62ddc592d",
        "changes": {
            "src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', None)": [
                        253,
                        254,
                        319,
                        320
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', None)": [
                        253,
                        318,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        389
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'findBin(double,double,double)')": [
                        385,
                        386,
                        387,
                        388
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/RandomAdaptor.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomAdaptor', None)": [
                        57,
                        58,
                        64,
                        65,
                        71,
                        72,
                        73,
                        78,
                        79,
                        85,
                        86,
                        92,
                        93,
                        99,
                        100,
                        106,
                        107,
                        113,
                        114
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomAdaptor', None)": [
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168
                    ]
                }
            },
            "src/test/org/apache/commons/math/fraction/FractionTest.java": {
                "new": {
                    "('org.apache.commons.math.fraction#FractionTest', None)": [
                        415,
                        428,
                        429
                    ],
                    "('org.apache.commons.math.fraction#FractionTest', 'testEqualsAndHashCode')": [
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427
                    ],
                    "('org.apache.commons.math.fraction#FractionTest', 'testGetReducedFraction')": [
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443
                    ],
                    "(None, None)": [
                        444
                    ]
                }
            },
            "src/test/org/apache/commons/math/random/AbstractRandomGeneratorTest.java": {
                "old": {
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        148
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', None)": [
                        30,
                        31,
                        32,
                        35,
                        43,
                        68,
                        69,
                        101,
                        102,
                        119,
                        120
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', 'testNextInt')": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', 'testNextLong')": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', 'testNextBoolean')": [
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', 'testNextFloat')": [
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147
                    ]
                }
            },
            "src/test/org/apache/commons/math/random/EmpiricalDistributionTest.java": {
                "new": {
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', None)": [
                        163,
                        164,
                        165,
                        169,
                        170
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', 'testBinIndexOverflow')": [
                        166,
                        167,
                        168
                    ]
                }
            },
            "src/test/org/apache/commons/math/random/RandomDataTest.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataTest', None)": [
                        42,
                        43,
                        44,
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataTest', None)": [
                        42,
                        43,
                        44,
                        49
                    ]
                }
            }
        }
    },
    "e1062a38bb85bfcae47b54518dcee9c62ddc592d": {
        "authored_data": "2005 Aug 27 03:31",
        "commit.message": "added test cases to increase test coverage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@240383 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Brent Worden",
        "pcid": "e3ab7379e2f5f3be137a9ee5e3a86085b82ac1eb",
        "changes": {
            "src/test/org/apache/commons/math/fraction/FractionFormatTest.java": {
                "new": {
                    "(None, None)": [
                        19,
                        268
                    ],
                    "('org.apache.commons.math.fraction#FractionFormatTest', 'testParseInteger')": [
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126
                    ],
                    "('org.apache.commons.math.fraction#FractionFormatTest', None)": [
                        127,
                        128,
                        129,
                        142,
                        143,
                        144,
                        145,
                        146,
                        159,
                        160,
                        161,
                        162,
                        163,
                        231,
                        244,
                        245,
                        258,
                        259
                    ],
                    "('org.apache.commons.math.fraction#FractionFormatTest', 'testParseInvalid')": [
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141
                    ],
                    "('org.apache.commons.math.fraction#FractionFormatTest', 'testParseInvalidDenominator')": [
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158
                    ],
                    "('org.apache.commons.math.fraction#FractionFormatTest', 'testNumeratorFormat')": [
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243
                    ],
                    "('org.apache.commons.math.fraction#FractionFormatTest', 'testDenominatorFormat')": [
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257
                    ],
                    "('org.apache.commons.math.fraction#FractionFormatTest', 'testWholeFormat')": [
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267
                    ]
                }
            }
        }
    },
    "e3ab7379e2f5f3be137a9ee5e3a86085b82ac1eb": {
        "authored_data": "2005 Aug 26 14:05",
        "commit.message": "Merged changes in MATH_1_1 branch to trunk.  This includes revision 234481 through revision 240244.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@240245 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Brent Worden",
        "pcid": "154d4c999fd185520df487d4ad69011ead828717",
        "changes": {
            "src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java": {
                "old": {
                    "('org.apache.commons.math.analysis#UnivariateRealSolverImpl', 'isBracketing(double,double,UnivariateRealFunction)')": [
                        268
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis#UnivariateRealSolverImpl', 'isBracketing(double,double,UnivariateRealFunction)')": [
                        268,
                        269,
                        270
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'cumulativeProbability(int)')": [
                        85,
                        86,
                        88
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', None)": [
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        201,
                        202,
                        203,
                        284,
                        306,
                        310
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'lowerCumulativeProbability(int,int,int,int,int)')": [
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'upperCumulativeProbability(int)')": [
                        296,
                        298,
                        299,
                        301
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'upperCumulativeProbability(int,int,int,int,int)')": [
                        318,
                        319,
                        321,
                        322,
                        323
                    ],
                    "(None, None)": [
                        327
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'cumulativeProbability(int)')": [
                        86
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', None)": [
                        260,
                        261,
                        281,
                        285,
                        288,
                        289
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'upperCumulativeProbability(int)')": [
                        273,
                        276
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'innerCumulativeProbability(int,int,int,int,int,int)')": [
                        295,
                        296,
                        298,
                        299,
                        300,
                        301
                    ]
                }
            },
            "src/test/org/apache/commons/math/RetryTestCase.java": {
                "old": {
                    "('org.apache.commons.math#RetryTestCase', None)": [
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.math#RetryTestCase', None)": [
                        32
                    ]
                }
            },
            "src/test/org/apache/commons/math/TestUtils.java": {
                "new": {
                    "('org.apache.commons.math#TestUtils', None)": [
                        130,
                        133,
                        134
                    ],
                    "('org.apache.commons.math#TestUtils', 'assertRelativelyEquals(double,double,double)')": [
                        131,
                        132
                    ],
                    "('org.apache.commons.math#TestUtils', 'assertRelativelyEquals(String,double,double,double)')": [
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146
                    ],
                    "(None, None)": [
                        147,
                        148
                    ]
                }
            },
            "src/test/org/apache/commons/math/distribution/HypergeometricDistributionTest.java": {
                "new": {
                    "(None, None)": [
                        18,
                        19,
                        205
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionTest', None)": [
                        133,
                        160,
                        161,
                        177,
                        178,
                        179
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionTest', 'testLargeValues')": [
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionTest', 'testHypergeometricDistributionProbabilities(int,int,int,double)')": [
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionTest', 'testMoreLargeValues')": [
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/BigMatrixImplTest.java": {
                "new": {
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'testConstructors')": [
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImplTest', None)": [
                        205
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/RealMatrixImplTest.java": {
                "new": {
                    "('org.apache.commons.math.linear#RealMatrixImplTest', 'testSetSubMatrix')": [
                        671,
                        672,
                        673,
                        674,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680,
                        681,
                        682,
                        683
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/FrequencyTest.java": {
                "old": {
                    "('org.apache.commons.math.stat#FrequencyTest', 'testCounts')": [
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat#FrequencyTest', 'testCounts')": [
                        116,
                        131
                    ]
                }
            }
        }
    },
    "154d4c999fd185520df487d4ad69011ead828717": {
        "authored_data": "2005 Aug 24 22:27",
        "commit.message": "Comment changes (#36211)\nContributed by: Xiaogang Zhang\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@239953 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Joerg Pietschmann",
        "pcid": "b494c9f537f62c37d857909deb32cd1d043aa9c5",
        "changes": {
            "src/java/org/apache/commons/math/analysis/RombergIntegrator.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis#RombergIntegrator', None)": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis#RombergIntegrator', None)": [
                        41
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/SimpsonIntegrator.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis#SimpsonIntegrator', None)": [
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis#SimpsonIntegrator', None)": [
                        40
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/TrapezoidIntegrator.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis#TrapezoidIntegrator', None)": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis#TrapezoidIntegrator', None)": [
                        42
                    ]
                }
            }
        }
    }
}