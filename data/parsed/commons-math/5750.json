{
    "57fbcf7362f4afccc3d6f710a54a0ed27c8ddd66": {
        "authored_data": "2008 Jun 16 10:40",
        "commit.message": "fixed javadoc link\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@668105 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "f9b8731e89bc742c350b6d25eb39dc05198db6b3",
        "changes": {
            "src/java/org/apache/commons/math/linear/BigMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', None)": [
                        136
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', None)": [
                        136
                    ]
                }
            }
        }
    },
    "f9b8731e89bc742c350b6d25eb39dc05198db6b3": {
        "authored_data": "2008 Jun 14 20:59",
        "commit.message": "Added another OLS test case.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@667880 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "240749484c4f4faa69221b468e8725f655e87642",
        "changes": {
            "src/test/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegressionTest.java": {
                "new": {
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegressionTest', None)": [
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegressionTest', 'loadModelData(double,double,double,int,int)')": [
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99
                    ],
                    "(None, None)": [
                        100,
                        101,
                        102,
                        103
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testLongly')": [
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112
                    ],
                    "(None, None)": [
                        139,
                        140
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testLongly')": [
                        103,
                        104,
                        105,
                        106,
                        107
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', None)": [
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testSwissFertility')": [
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232
                    ]
                }
            }
        }
    },
    "d056eaadabbf46045841eaf2e9a1d0980af5eee4": {
        "authored_data": "2008 Jun 10 19:32",
        "commit.message": "replaced inefficient use of constructors for Integer, Long, Float and Double\nby the recommended static valueOf methods that cache results\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@666292 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "71174b56028e7fc6e0df61ea8c4018d5871ca568",
        "changes": {
            "src/experimental/org/apache/commons/math/function/DefaultContext.java": {
                "old": {
                    "('org.apache.commons.math.function#DefaultContext', None)": [
                        148,
                        152,
                        156,
                        160
                    ]
                },
                "new": {
                    "('org.apache.commons.math.function#DefaultContext', None)": [
                        148,
                        152,
                        156,
                        160
                    ]
                }
            },
            "src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImpl.java": {
                "old": {
                    "('org.apache.commons.math.stat.univariate#BeanListUnivariateImpl', 'addValue(double)')": [
                        137
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.univariate#BeanListUnivariateImpl', 'addValue(double)')": [
                        137
                    ]
                }
            },
            "src/experimental/org/apache/commons/math/stat/univariate/BeanListUnivariateImplTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.univariate#BeanListUnivariateImplTest', 'setUp')": [
                        63,
                        64,
                        65,
                        69,
                        70,
                        71,
                        75,
                        76,
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.univariate#BeanListUnivariateImplTest', 'setUp')": [
                        63,
                        64,
                        65,
                        69,
                        70,
                        71,
                        75,
                        76,
                        77
                    ]
                }
            },
            "src/java/org/apache/commons/math/ArgumentOutsideDomainException.java": {
                "old": {
                    "('org.apache.commons.math#ArgumentOutsideDomainException', None)": [
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ArgumentOutsideDomainException', None)": [
                        41
                    ]
                }
            },
            "src/java/org/apache/commons/math/DimensionMismatchException.java": {
                "old": {
                    "('org.apache.commons.math#DimensionMismatchException', None)": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.math#DimensionMismatchException', None)": [
                        38
                    ]
                }
            },
            "src/java/org/apache/commons/math/DuplicateSampleAbscissaException.java": {
                "old": {
                    "('org.apache.commons.math#DuplicateSampleAbscissaException', None)": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.math#DuplicateSampleAbscissaException', None)": [
                        38
                    ]
                }
            },
            "src/java/org/apache/commons/math/FunctionEvaluationException.java": {
                "old": {
                    "('org.apache.commons.math#FunctionEvaluationException', None)": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.math#FunctionEvaluationException', None)": [
                        43
                    ]
                }
            },
            "src/java/org/apache/commons/math/MaxIterationsExceededException.java": {
                "old": {
                    "('org.apache.commons.math#MaxIterationsExceededException', None)": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MaxIterationsExceededException', None)": [
                        44
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/UnivariateRealSolverUtils.java": {
                "old": {
                    "('org.apache.commons.math.analysis#UnivariateRealSolverUtils', 'bracket(UnivariateRealFunction,double,double,double,int)')": [
                        202,
                        203,
                        204
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis#UnivariateRealSolverUtils', 'bracket(UnivariateRealFunction,double,double,double,int)')": [
                        202,
                        203,
                        204
                    ]
                }
            },
            "src/java/org/apache/commons/math/complex/ComplexFormat.java": {
                "old": {
                    "('org.apache.commons.math.complex#ComplexFormat', 'parseNumber(String,double,ParsePosition)')": [
                        453
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#ComplexFormat', 'parseNumber(String,double,ParsePosition)')": [
                        453
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/AbstractEstimator.java": {
                "old": {
                    "('org.apache.commons.math.estimation#AbstractEstimator', 'updateResidualsAndCost')": [
                        101
                    ],
                    "('org.apache.commons.math.estimation#AbstractEstimator', 'guessParametersErrors(EstimationProblem)')": [
                        205
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#AbstractEstimator', 'updateResidualsAndCost')": [
                        101
                    ],
                    "('org.apache.commons.math.estimation#AbstractEstimator', 'guessParametersErrors(EstimationProblem)')": [
                        205
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java": {
                "old": {
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'estimate(EstimationProblem)')": [
                        404,
                        409,
                        413
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'qrDecomposition')": [
                        766
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'estimate(EstimationProblem)')": [
                        404,
                        409,
                        413
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'qrDecomposition')": [
                        766
                    ]
                }
            },
            "src/java/org/apache/commons/math/fraction/FractionConversionException.java": {
                "old": {
                    "('org.apache.commons.math.fraction#FractionConversionException', None)": [
                        42,
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#FractionConversionException', None)": [
                        42,
                        54
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#AdaptiveStepsizeIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        201,
                        202,
                        209,
                        210,
                        217,
                        218,
                        225,
                        226,
                        231
                    ],
                    "('org.apache.commons.math.ode#AdaptiveStepsizeIntegrator', 'filterStep(double,boolean)')": [
                        333,
                        334
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#AdaptiveStepsizeIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        201,
                        202,
                        209,
                        210,
                        217,
                        218,
                        225,
                        226,
                        231
                    ],
                    "('org.apache.commons.math.ode#AdaptiveStepsizeIntegrator', 'filterStep(double,boolean)')": [
                        333,
                        334
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#RungeKuttaIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        143,
                        144,
                        151,
                        152,
                        157
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#RungeKuttaIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        143,
                        144,
                        151,
                        152,
                        157
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', None)": [
                        274
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'fillBinStats(Object)')": [
                        337
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', None)": [
                        274
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'fillBinStats(Object)')": [
                        337
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextHexString(int)')": [
                        140
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureHexString(int)')": [
                        239
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextHexString(int)')": [
                        140
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureHexString(int)')": [
                        239
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/Frequency.java": {
                "old": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'addValue(Object)')": [
                        99,
                        104,
                        106
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'addValue(int)')": [
                        120
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'addValue(Integer)')": [
                        129
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'addValue(long)')": [
                        138
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'getCount(int)')": [
                        213
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'getCount(long)')": [
                        223
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'getPct(int)')": [
                        262
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'getPct(long)')": [
                        273
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'getCumFreq(int)')": [
                        348
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'getCumFreq(long)')": [
                        360
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'getCumPct(int)')": [
                        405
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'getCumPct(long)')": [
                        418
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'addValue(Object)')": [
                        99,
                        104,
                        106
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'addValue(int)')": [
                        120
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'addValue(Integer)')": [
                        129
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'addValue(long)')": [
                        138
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'getCount(int)')": [
                        213
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'getCount(long)')": [
                        223
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'getPct(int)')": [
                        262
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'getPct(long)')": [
                        273
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'getCumFreq(int)')": [
                        348
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'getCumFreq(long)')": [
                        360
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'getCumPct(int)')": [
                        405
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'getCumPct(long)')": [
                        418
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'getPercentile(double)')": [
                        356
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'setPercentileImpl(UnivariateStatistic)')": [
                        537
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'getPercentile(double)')": [
                        356
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'setPercentileImpl(UnivariateStatistic)')": [
                        537
                    ]
                }
            },
            "src/java/org/apache/commons/math/util/ContinuedFraction.java": {
                "old": {
                    "('org.apache.commons.math.util#ContinuedFraction', 'evaluate(double,double,int)')": [
                        158,
                        175
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#ContinuedFraction', 'evaluate(double,double,int)')": [
                        158,
                        175
                    ]
                }
            },
            "src/java/org/apache/commons/math/util/DefaultTransformer.java": {
                "old": {
                    "('org.apache.commons.math.util#DefaultTransformer', 'transform(Object)')": [
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#DefaultTransformer', 'transform(Object)')": [
                        55
                    ]
                }
            },
            "src/mantissa/src/org/spaceroots/mantissa/algebra/Polynomial.java": {
                "old": {
                    "('org.spaceroots.mantissa.algebra#Polynomial', None)": [
                        821,
                        848,
                        860,
                        880,
                        907,
                        914,
                        937,
                        943
                    ]
                },
                "new": {
                    "('org.spaceroots.mantissa.algebra#Polynomial', None)": [
                        821,
                        848,
                        860,
                        880,
                        907,
                        914,
                        937,
                        943
                    ]
                }
            },
            "src/test/org/apache/commons/math/ConvergenceExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math#ConvergenceExceptionTest', 'testConstructorPatternArguments')": [
                        39
                    ],
                    "('org.apache.commons.math#ConvergenceExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ConvergenceExceptionTest', 'testConstructorPatternArguments')": [
                        39
                    ],
                    "('org.apache.commons.math#ConvergenceExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        60
                    ]
                }
            },
            "src/test/org/apache/commons/math/FunctionEvaluationExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math#FunctionEvaluationExceptionTest', 'testConstructorPatternArguments')": [
                        39
                    ],
                    "('org.apache.commons.math#FunctionEvaluationExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.math#FunctionEvaluationExceptionTest', 'testConstructorPatternArguments')": [
                        39
                    ],
                    "('org.apache.commons.math#FunctionEvaluationExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        53
                    ]
                }
            },
            "src/test/org/apache/commons/math/MathConfigurationExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math#MathConfigurationExceptionTest', 'testConstructorPatternArguments')": [
                        38
                    ],
                    "('org.apache.commons.math#MathConfigurationExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MathConfigurationExceptionTest', 'testConstructorPatternArguments')": [
                        38
                    ],
                    "('org.apache.commons.math#MathConfigurationExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        59
                    ]
                }
            },
            "src/test/org/apache/commons/math/MathExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math#MathExceptionTest', 'testConstructorPatternArguments')": [
                        41
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MathExceptionTest', 'testConstructorPatternArguments')": [
                        41
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        62
                    ]
                }
            },
            "src/test/org/apache/commons/math/MaxIterationsExceededExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math#MaxIterationsExceededExceptionTest', 'testComplexConstructor')": [
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MaxIterationsExceededExceptionTest', 'testComplexConstructor')": [
                        42
                    ]
                }
            },
            "src/test/org/apache/commons/math/complex/ComplexFormatAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math.complex#ComplexFormatAbstractTest', 'testFormatNumber')": [
                        337
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#ComplexFormatAbstractTest', 'testFormatNumber')": [
                        337
                    ]
                }
            },
            "src/test/org/apache/commons/math/fraction/FractionTest.java": {
                "old": {
                    "('org.apache.commons.math.fraction#FractionTest', 'testEqualsAndHashCode')": [
                        518
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#FractionTest', 'testEqualsAndHashCode')": [
                        518
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/HighamHall54IntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode#HighamHall54IntegratorTest', 'testSwitchingFunctionsError')": [
                        187
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#HighamHall54IntegratorTest', 'testSwitchingFunctionsError')": [
                        187
                    ]
                }
            },
            "src/test/org/apache/commons/math/random/RandomDataTest.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextPoisson')": [
                        205
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextPoisson')": [
                        205
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/FrequencyTest.java": {
                "old": {
                    "('org.apache.commons.math.stat#FrequencyTest', 'testCounts')": [
                        74,
                        95,
                        96,
                        98,
                        100,
                        102
                    ],
                    "('org.apache.commons.math.stat#FrequencyTest', 'testPcts')": [
                        144,
                        149,
                        150
                    ],
                    "('org.apache.commons.math.stat#FrequencyTest', 'testEmptyTable')": [
                        180,
                        184,
                        186
                    ],
                    "('org.apache.commons.math.stat#FrequencyTest', 'testIntegerValues')": [
                        220,
                        221,
                        225,
                        227,
                        228,
                        230,
                        231
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat#FrequencyTest', 'testCounts')": [
                        74,
                        95,
                        96,
                        98,
                        100,
                        102
                    ],
                    "('org.apache.commons.math.stat#FrequencyTest', 'testPcts')": [
                        144,
                        149,
                        150
                    ],
                    "('org.apache.commons.math.stat#FrequencyTest', 'testEmptyTable')": [
                        180,
                        184,
                        186
                    ],
                    "('org.apache.commons.math.stat#FrequencyTest', 'testIntegerValues')": [
                        220,
                        221,
                        225,
                        227,
                        228,
                        230,
                        231
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.data#CertifiedDataAbstractTest', 'loadData')": [
                        81
                    ],
                    "('org.apache.commons.math.stat.data#CertifiedDataAbstractTest', 'getProperty(Object,String)')": [
                        141
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.data#CertifiedDataAbstractTest', 'loadData')": [
                        81
                    ],
                    "('org.apache.commons.math.stat.data#CertifiedDataAbstractTest', 'getProperty(Object,String)')": [
                        141
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/descriptive/ListUnivariateImpl.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#ListUnivariateImpl', 'addValue(double)')": [
                        146
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#ListUnivariateImpl', 'addValue(double)')": [
                        146
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/descriptive/ListUnivariateImplTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#ListUnivariateImplTest', 'testN0andN1Conditions')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#ListUnivariateImplTest', 'testN0andN1Conditions')": [
                        95
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/descriptive/MixedListUnivariateImplTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#MixedListUnivariateImplTest', 'testSkewAndKurtosis')": [
                        126,
                        131,
                        135,
                        141
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#MixedListUnivariateImplTest', 'testSkewAndKurtosis')": [
                        126,
                        131,
                        135,
                        141
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatisticsTest', 'testEqualsAndHashCode')": [
                        220
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatisticsTest', 'testEqualsAndHashCode')": [
                        220
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/descriptive/StatisticalSummaryValuesTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#StatisticalSummaryValuesTest', 'testEqualsAndHashCode')": [
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#StatisticalSummaryValuesTest', 'testEqualsAndHashCode')": [
                        59
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/descriptive/SummaryStatisticsTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#SummaryStatisticsTest', 'testEqualsAndHashCode')": [
                        195
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#SummaryStatisticsTest', 'testEqualsAndHashCode')": [
                        195
                    ]
                }
            },
            "src/test/org/apache/commons/math/util/DefaultTransformerTest.java": {
                "old": {
                    "('org.apache.commons.math.util#DefaultTransformerTest', 'testTransformDouble')": [
                        34
                    ],
                    "('org.apache.commons.math.util#DefaultTransformerTest', 'testTransformInteger')": [
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#DefaultTransformerTest', 'testTransformDouble')": [
                        34
                    ],
                    "('org.apache.commons.math.util#DefaultTransformerTest', 'testTransformInteger')": [
                        57
                    ]
                }
            },
            "src/test/org/apache/commons/math/util/TestBean.java": {
                "old": {
                    "('org.apache.commons.math.util#TestBean', None)": [
                        24
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#TestBean', None)": [
                        24
                    ]
                }
            }
        }
    },
    "71174b56028e7fc6e0df61ea8c4018d5871ca568": {
        "authored_data": "2008 Jun 10 19:21",
        "commit.message": "fixed a type error in array parameter\n(String[] instead of Object[] as in super constructor ... and all other exceptions)\nfixed a typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@666287 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "1786844fd7162f89f8ec31a3a0b1a7bdeacf983d",
        "changes": {
            "src/java/org/apache/commons/math/ode/DerivativeException.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode#DerivativeException', None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode#DerivativeException', None)": [
                        37
                    ]
                }
            }
        }
    },
    "1786844fd7162f89f8ec31a3a0b1a7bdeacf983d": {
        "authored_data": "2008 Jun 09 14:17",
        "commit.message": "Improved usability of the geometry package.\nFrom a developer point of view, all the changes are related.\nFrom a user point of view, they are independent changes.\n\n - added several convenience methods for Vector3D and Rotation\n - replaced public no argument constructors with IDENTITY or ZERO\n   static instances for immutable classes Vector3D and Rotation\n - fixed inconsistencies in the naming scheme for static fields in\n   Vector3D and Rotation with respect to the overall library\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@665700 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "d09e4819beb7819c15a260674f0d5dab587ab011",
        "changes": {
            "src/java/org/apache/commons/math/geometry/Rotation.java": {
                "old": {
                    "('org.apache.commons.math.geometry#Rotation', None)": [
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        1020,
                        1021,
                        1022,
                        1023,
                        1024,
                        1025,
                        1026,
                        1027,
                        1028,
                        1029,
                        1030,
                        1031,
                        1032,
                        1033
                    ],
                    "('org.apache.commons.math.geometry#Rotation', 'getAngles(RotationOrder)')": [
                        595,
                        596,
                        613,
                        614,
                        631,
                        632,
                        649,
                        650,
                        667,
                        668,
                        685,
                        686,
                        703,
                        704,
                        721,
                        722,
                        739,
                        740,
                        757,
                        758,
                        775,
                        776,
                        793,
                        794
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry#Rotation', None)": [
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        1029,
                        1030,
                        1031,
                        1032,
                        1033,
                        1034,
                        1035,
                        1036,
                        1037,
                        1038,
                        1039,
                        1040,
                        1041,
                        1042,
                        1043,
                        1044,
                        1045,
                        1046,
                        1047,
                        1048,
                        1049,
                        1050,
                        1051,
                        1052
                    ],
                    "('org.apache.commons.math.geometry#Rotation', 'getAngles(RotationOrder)')": [
                        604,
                        605,
                        622,
                        623,
                        640,
                        641,
                        658,
                        659,
                        676,
                        677,
                        694,
                        695,
                        712,
                        713,
                        730,
                        731,
                        748,
                        749,
                        766,
                        767,
                        784,
                        785,
                        802,
                        803
                    ],
                    "('org.apache.commons.math.geometry#Rotation', 'distance(Rotation,Rotation)')": [
                        1053,
                        1054
                    ],
                    "(None, None)": [
                        1055
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/RotationOrder.java": {
                "old": {
                    "('org.apache.commons.math.geometry#RotationOrder', None)": [
                        83,
                        90,
                        97,
                        104,
                        111,
                        118,
                        125,
                        132,
                        139,
                        146,
                        153,
                        160
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry#RotationOrder', None)": [
                        83,
                        90,
                        97,
                        104,
                        111,
                        118,
                        125,
                        132,
                        139,
                        146,
                        153,
                        160
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/Vector3D.java": {
                "old": {
                    "('org.apache.commons.math.geometry#Vector3D', None)": [
                        33,
                        36,
                        39,
                        42,
                        45,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360
                    ],
                    "(None, None)": [
                        361
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry#Vector3D', None)": [
                        32,
                        33,
                        34,
                        36,
                        39,
                        42,
                        45,
                        48,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        186,
                        187,
                        188,
                        189,
                        190,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382
                    ],
                    "('org.apache.commons.math.geometry#Vector3D', 'getNormSq')": [
                        191,
                        192
                    ],
                    "('org.apache.commons.math.geometry#Vector3D', 'distance(Vector3D,Vector3D)')": [
                        368,
                        369,
                        370,
                        371,
                        372
                    ],
                    "('org.apache.commons.math.geometry#Vector3D', 'distanceSq(Vector3D,Vector3D)')": [
                        383,
                        384,
                        385,
                        386,
                        387
                    ],
                    "(None, None)": [
                        388
                    ]
                }
            },
            "src/test/org/apache/commons/math/geometry/RotationTest.java": {
                "old": {
                    "('org.apache.commons.math.geometry#RotationTest', 'testIdentity')": [
                        37,
                        38,
                        39,
                        40,
                        44,
                        45,
                        46,
                        50,
                        51,
                        52
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'testAxisAngle')": [
                        60,
                        61,
                        62,
                        75,
                        79,
                        80,
                        83
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'testVectorOnePair')": [
                        106
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'testVectorTwoPairs')": [
                        123,
                        124,
                        128,
                        129,
                        131,
                        136,
                        147
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'testMatrix')": [
                        227,
                        228,
                        229,
                        280,
                        282,
                        284
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'testApplyInverseTo')": [
                        466,
                        477
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'checkAngle(double,double)')": [
                        495,
                        496
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'checkRotation(Rotation,double,double,double,double)')": [
                        500,
                        501
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'testIdentity')": [
                        38,
                        39,
                        40,
                        41,
                        45,
                        46,
                        47,
                        51,
                        52,
                        53
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'testAxisAngle')": [
                        61,
                        62,
                        63,
                        76,
                        80,
                        81,
                        84
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'testVectorOnePair')": [
                        107
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'testVectorTwoPairs')": [
                        124,
                        125,
                        129,
                        130,
                        132,
                        137,
                        148
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'testMatrix')": [
                        228,
                        229,
                        230,
                        281,
                        283,
                        285
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'testApplyInverseTo')": [
                        467,
                        478
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'checkAngle(double,double)')": [
                        496
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'checkRotation(Rotation,double,double,double,double)')": [
                        500
                    ]
                }
            },
            "src/test/org/apache/commons/math/geometry/Vector3DTest.java": {
                "old": {
                    "('org.apache.commons.math.geometry#Vector3DTest', 'testConstructors')": [
                        35,
                        36,
                        38,
                        39,
                        40,
                        42,
                        43,
                        44,
                        45
                    ],
                    "('org.apache.commons.math.geometry#Vector3DTest', 'testNorm')": [
                        57
                    ],
                    "('org.apache.commons.math.geometry#Vector3DTest', 'testAngular')": [
                        110,
                        111,
                        112,
                        113,
                        114,
                        115
                    ],
                    "('org.apache.commons.math.geometry#Vector3DTest', 'testNormalize')": [
                        137
                    ],
                    "('org.apache.commons.math.geometry#Vector3DTest', 'testAngle')": [
                        174
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry#Vector3DTest', 'testConstructors')": [
                        35,
                        36,
                        38,
                        39,
                        40,
                        42,
                        43,
                        44,
                        45
                    ],
                    "('org.apache.commons.math.geometry#Vector3DTest', 'testNorm')": [
                        57
                    ],
                    "('org.apache.commons.math.geometry#Vector3DTest', 'testAngular')": [
                        110,
                        111,
                        112,
                        113,
                        114,
                        115
                    ],
                    "('org.apache.commons.math.geometry#Vector3DTest', 'testNormalize')": [
                        137
                    ],
                    "('org.apache.commons.math.geometry#Vector3DTest', 'testAngle')": [
                        174
                    ]
                }
            }
        }
    },
    "d09e4819beb7819c15a260674f0d5dab587ab011": {
        "authored_data": "2008 Jun 09 01:57",
        "commit.message": "Added some initial tests for regression parameters and residuals.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@664602 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "fb0a36c7abd008d88e9b71a8017b5fa0c80882e1",
        "changes": {
            "src/test/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java": {
                "old": {
                    "(None, None)": [
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        139,
                        140,
                        141
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', None)": [
                        54,
                        55,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testPerfectFit')": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testLongly')": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138
                    ]
                }
            }
        }
    }
}