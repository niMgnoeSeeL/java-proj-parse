{
    "bfbb156dfb67cc4b6ad718151323418a9352ce43": {
        "authored_data": "2012 Sep 29 22:18",
        "commit.message": "MATH-867\nPrevious commit was missing a crucial modification (in the \"repair\" method),\nan inconsistency which entailed the failing of some tests.\nWith that modification (thanks to Nikolaus Hansen), it was established that\nthe \"encode\" and \"decode\" steps were indeed useless. This commit thus removes\nthem, and all the code that was necessary only because of those two methods.\nFinite and infinite can now be freely mixed.\nUnit tests that depended on those limitations were also removed (thus also\nthe one that was added following MATH-865).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1391908 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "329cf9e8e643160e4da6fd8622aa5a3b3905fb69",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', None)": [
                        126,
                        127,
                        131,
                        132,
                        570,
                        922,
                        923,
                        924,
                        925,
                        926,
                        927,
                        928,
                        929,
                        930,
                        931,
                        932,
                        933,
                        934,
                        935,
                        936,
                        937,
                        938,
                        939,
                        940,
                        941,
                        942,
                        943,
                        944,
                        945,
                        946,
                        947,
                        948,
                        949,
                        950,
                        951,
                        952,
                        953,
                        954,
                        955,
                        956,
                        957,
                        958,
                        959,
                        960,
                        961,
                        962,
                        963,
                        969,
                        972,
                        976,
                        986,
                        987,
                        988,
                        989,
                        990,
                        991,
                        992,
                        994,
                        997,
                        1016,
                        1018,
                        1019,
                        1020,
                        1021
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', 'doOptimize')": [
                        360,
                        425
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', 'checkParameters')": [
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        557,
                        567,
                        568,
                        569
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', 'initializeCMA(double)')": [
                        588,
                        589
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', None)": [
                        126,
                        130,
                        877,
                        880,
                        884,
                        895,
                        898,
                        917,
                        919,
                        920,
                        921,
                        922
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', 'doOptimize')": [
                        358,
                        423
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', 'checkParameters')": [
                        507,
                        508,
                        509,
                        510,
                        520,
                        521
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', 'initializeCMA(double)')": [
                        539
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', None)": [
                        85,
                        95,
                        96,
                        97,
                        111,
                        112,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testUnsupportedBoundaries1')": [
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testUnsupportedBoundaries2')": [
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testConstrainedRosen')": [
                        353
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testBoundaryRangeTooLarge')": [
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testCigarWithBoundaries')": [
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', None)": [
                        216,
                        217,
                        218
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testConstrainedRosen')": [
                        340
                    ]
                }
            }
        }
    },
    "329cf9e8e643160e4da6fd8622aa5a3b3905fb69": {
        "authored_data": "2012 Sep 29 16:58",
        "commit.message": "MATH-867\nModified \"encode\" and \"decode\" methods. Unit test \"testFitAccuracyDependsOnBoundary\"\nnow passes and is thus enabled. Unit test \"testConstrainedRosen\" had to be modified\nin order to not fail with the new code (starting point is set closer to the solution).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1391840 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "678377a1e84797e74daf1f5eb835882af9b172dc",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', 'initializeCMA(double)')": [
                        588,
                        589
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', None)": [
                        932,
                        958,
                        990,
                        993
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', 'initializeCMA(double)')": [
                        588,
                        589
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', None)": [
                        932,
                        958,
                        989,
                        990,
                        991,
                        992,
                        994,
                        997
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testConstrainedRosen')": [
                        353,
                        354
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', None)": [
                        430
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testFitAccuracyDependsOnBoundary')": [
                        442
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testConstrainedRosen')": [
                        353,
                        354
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', None)": [
                        430
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testFitAccuracyDependsOnBoundary')": [
                        442
                    ]
                }
            }
        }
    },
    "678377a1e84797e74daf1f5eb835882af9b172dc": {
        "authored_data": "2012 Sep 28 14:06",
        "commit.message": "MATH-867\nUnit test showing the problem. It is disabled (with the \"@Ignore\" annotation)\nbecause it fails with the current code.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1391477 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "6129654bc2ea25e171e8bc1be534046ca35ed572",
        "changes": {
            "src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testConstrainedRosen')": [
                        352,
                        353,
                        354
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testMath864')": [
                        390
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'doTest(MultivariateFunction,double,double,double,GoalType,int,boolean,int,double,double,double,int,PointValuePair)')": [
                        456,
                        457,
                        458,
                        462,
                        463,
                        465,
                        466
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testConstrainedRosen')": [
                        353,
                        354,
                        355
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testMath864')": [
                        391
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', None)": [
                        427,
                        428,
                        429,
                        430,
                        470,
                        471
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testFitAccuracyDependsOnBoundary')": [
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'doTest(MultivariateFunction,double,double,double,GoalType,int,boolean,int,double,double,double,int,PointValuePair)')": [
                        502,
                        503,
                        504,
                        508,
                        509,
                        511
                    ]
                }
            }
        }
    },
    "6129654bc2ea25e171e8bc1be534046ca35ed572": {
        "authored_data": "2012 Sep 28 13:28",
        "commit.message": "Fixed some issues in nth root derivatives at 0.\n\nThe current behavior is correct with respect to infinities and NaN being\nappropriately generated, but in some cases counter-intuitive.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1391451 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "e1ed0b96ba6020f8b817e9117217d1195a657815",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.differentiation#DSCompiler', 'rootN(double,int,int,double,int)')": [
                        955,
                        957,
                        959,
                        963
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis.differentiation#DSCompiler', 'rootN(double,int,int,double,int)')": [
                        955,
                        956,
                        958,
                        959,
                        961,
                        962,
                        966
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.differentiation#DerivativeStructureTest', 'testAtan2')": [
                        665
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis.differentiation#DerivativeStructureTest', 'testRootNSingularity')": [
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392
                    ],
                    "('org.apache.commons.math3.analysis.differentiation#DerivativeStructureTest', None)": [
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403
                    ],
                    "('org.apache.commons.math3.analysis.differentiation#DerivativeStructureTest', 'testAtan2')": [
                        728
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/analysis/function/SqrtTest.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.function#SqrtTest', 'testDerivativesHighOrder')": [
                        68
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis.function#SqrtTest', 'testDerivativesHighOrder')": [
                        68
                    ]
                }
            }
        }
    },
    "9462626718e809e3b92e353fdca80e807b413edb": {
        "authored_data": "2012 Sep 27 18:42",
        "commit.message": "MATH-854: filled the \"throws\" clause of BlockRealMatrix.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1391160 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "2a32964f25171a5776ade829b1c57d16a5832661",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math3.linear#BlockRealMatrix', None)": [
                        90,
                        91,
                        93,
                        119,
                        138,
                        514,
                        515,
                        865,
                        866,
                        947,
                        948
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'toBlocksLayout(double)')": [
                        191
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'createMatrix(int,int)')": [
                        270
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'add(RealMatrix)')": [
                        290
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'add(BlockRealMatrix)')": [
                        335
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'subtract(RealMatrix)')": [
                        356
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'subtract(BlockRealMatrix)')": [
                        401
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'multiply(RealMatrix)')": [
                        457
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'multiply(BlockRealMatrix)')": [
                        517
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'getSubMatrix(int,int,int,int)')": [
                        646
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setSubMatrix(double,int,int)')": [
                        769,
                        770
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'getRowMatrix(int)')": [
                        820
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setRowMatrix(int,RealMatrix)')": [
                        850
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setRowMatrix(int,BlockRealMatrix)')": [
                        870
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'getColumnMatrix(int)')": [
                        904
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setColumnMatrix(int,RealMatrix)')": [
                        932
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setColumnMatrix(int,BlockRealMatrix)')": [
                        952
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'getRowVector(int)')": [
                        984
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setRowVector(int,RealVector)')": [
                        1004
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'getColumnVector(int)')": [
                        1014
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setColumnVector(int,RealVector)')": [
                        1036
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'getRow(int)')": [
                        1046
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setRow(int,double)')": [
                        1066
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'getColumn(int)')": [
                        1087
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setColumn(int,double)')": [
                        1109
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'getEntry(int,int)')": [
                        1132
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setEntry(int,int,double)')": [
                        1143
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'addToEntry(int,int,double)')": [
                        1154
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'multiplyEntry(int,int,double)')": [
                        1165
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'operate(double)')": [
                        1224
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'preMultiply(double)')": [
                        1263
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'walkInRowOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        1357
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'walkInRowOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        1386
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'walkInOptimizedOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        1465
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'walkInOptimizedOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        1494
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        27,
                        28
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', None)": [
                        93,
                        94,
                        96,
                        97,
                        121,
                        122,
                        125,
                        126,
                        140,
                        141,
                        147,
                        148,
                        532,
                        889,
                        973
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'toBlocksLayout(double)')": [
                        201,
                        202
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'createMatrix(int,int)')": [
                        281,
                        282,
                        283
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'add(RealMatrix)')": [
                        303,
                        304
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'add(BlockRealMatrix)')": [
                        349,
                        350
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'subtract(RealMatrix)')": [
                        371,
                        372
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'subtract(BlockRealMatrix)')": [
                        417,
                        418
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'multiply(RealMatrix)')": [
                        474,
                        475
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'multiply(BlockRealMatrix)')": [
                        534,
                        535
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'getSubMatrix(int,int,int,int)')": [
                        664,
                        665,
                        666
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setSubMatrix(double,int,int)')": [
                        789,
                        790,
                        791,
                        792
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'getRowMatrix(int)')": [
                        842,
                        843
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setRowMatrix(int,RealMatrix)')": [
                        873,
                        874
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setRowMatrix(int,BlockRealMatrix)')": [
                        893,
                        894
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'getColumnMatrix(int)')": [
                        928,
                        929
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setColumnMatrix(int,RealMatrix)')": [
                        957,
                        958
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setColumnMatrix(int,BlockRealMatrix)')": [
                        977,
                        978
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'getRowVector(int)')": [
                        1010,
                        1011
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setRowVector(int,RealVector)')": [
                        1031,
                        1032
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'getColumnVector(int)')": [
                        1042,
                        1043
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setColumnVector(int,RealVector)')": [
                        1065,
                        1066
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'getRow(int)')": [
                        1076
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setRow(int,double)')": [
                        1096,
                        1097
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'getColumn(int)')": [
                        1118
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setColumn(int,double)')": [
                        1140,
                        1141
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'getEntry(int,int)')": [
                        1164,
                        1165
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'setEntry(int,int,double)')": [
                        1176,
                        1177
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'addToEntry(int,int,double)')": [
                        1188,
                        1189,
                        1190
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'multiplyEntry(int,int,double)')": [
                        1201,
                        1202,
                        1203
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'operate(double)')": [
                        1262,
                        1263
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'preMultiply(double)')": [
                        1302,
                        1303
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'walkInRowOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        1397,
                        1398
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'walkInRowOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        1427,
                        1428
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'walkInOptimizedOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        1507,
                        1508,
                        1509
                    ],
                    "('org.apache.commons.math3.linear#BlockRealMatrix', 'walkInOptimizedOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        1538,
                        1539,
                        1540
                    ]
                }
            }
        }
    },
    "2a32964f25171a5776ade829b1c57d16a5832661": {
        "authored_data": "2012 Sep 27 05:04",
        "commit.message": "Populated throws clause of OpenMapRealMatrix (MATH-854).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1390842 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "8708ef28f22994b76205d04d8c7e53e92b0a5e8c",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math3.linear#AbstractRealMatrix', 'setEntry(int,int,double)')": [
                        979
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#AbstractRealMatrix', 'setEntry(int,int,double)')": [
                        979
                    ],
                    "(None, None)": [
                        980
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', None)": [
                        53,
                        54,
                        83,
                        84,
                        100,
                        101,
                        102,
                        135,
                        136,
                        137,
                        153,
                        154,
                        185,
                        186,
                        187,
                        188
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'createMatrix(int,int)')": [
                        85
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'add(OpenMapRealMatrix)')": [
                        103,
                        104,
                        105
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'subtract(RealMatrix)')": [
                        122
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'subtract(OpenMapRealMatrix)')": [
                        138,
                        139
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'multiply(RealMatrix)')": [
                        155,
                        160
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'multiply(OpenMapRealMatrix)')": [
                        189
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'getEntry(int,int)')": [
                        221
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'setEntry(int,int,double)')": [
                        235
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'addToEntry(int,int,double)')": [
                        247
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'multiplyEntry(int,int,double)')": [
                        261
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        25
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', None)": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        114,
                        115,
                        116,
                        150,
                        151,
                        152,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        206,
                        207,
                        208,
                        209,
                        210
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'createMatrix(int,int)')": [
                        98,
                        99
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'add(OpenMapRealMatrix)')": [
                        117,
                        118,
                        119
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'subtract(RealMatrix)')": [
                        136,
                        137
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'subtract(OpenMapRealMatrix)')": [
                        153,
                        154
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'multiply(RealMatrix)')": [
                        176,
                        177
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'multiply(OpenMapRealMatrix)')": [
                        211,
                        212
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'getEntry(int,int)')": [
                        244
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'setEntry(int,int,double)')": [
                        258,
                        259
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'addToEntry(int,int,double)')": [
                        271,
                        272
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', 'multiplyEntry(int,int,double)')": [
                        286,
                        287
                    ]
                }
            }
        }
    },
    "8708ef28f22994b76205d04d8c7e53e92b0a5e8c": {
        "authored_data": "2012 Sep 27 03:54",
        "commit.message": "MATH-870: deprecated SparseFieldMatrix.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1390832 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "3a3fec3bb2c7b5a65caac8f8f25e38d3fedcbaba",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/SparseFieldMatrix.java": {
                "new": {
                    "(None, None)": [
                        29,
                        30,
                        31,
                        32,
                        33,
                        35
                    ]
                }
            }
        }
    },
    "3a3fec3bb2c7b5a65caac8f8f25e38d3fedcbaba": {
        "authored_data": "2012 Sep 27 03:52",
        "commit.message": "MATH-870: deprecated SparseRealMatrix and OpenMapRealMatrix.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1390831 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "9cf853b3fcc654c91640a8fdf1a162f903d38ded",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java": {
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        33,
                        34,
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/SparseRealMatrix.java": {
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28,
                        31
                    ]
                }
            }
        }
    }
}