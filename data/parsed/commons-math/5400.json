{
    "5acb8b11b5a11cd51c9dce9d3b10380676daba25": {
        "authored_data": "2009 Apr 05 18:49",
        "commit.message": "added missing javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@762132 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "f6e3a9545fefb4435dc1c74692dd73546ccaecb1",
        "changes": {
            "src/java/org/apache/commons/math/fraction/AbstractFormat.java": {
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31,
                        32
                    ]
                }
            }
        }
    },
    "f6e3a9545fefb4435dc1c74692dd73546ccaecb1": {
        "authored_data": "2009 Apr 05 18:38",
        "commit.message": "Fixed inconsistent access to multidimensional array in FastFourierTransformer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@762131 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "4e5126c676b27bcac127609c794a1d7406225d1a",
        "changes": {
            "src/java/org/apache/commons/math/transform/FastFourierTransformer.java": {
                "old": {
                    "('org.apache.commons.math.transform#FastFourierTransformer', None)": [
                        623,
                        631,
                        632,
                        635,
                        636,
                        637,
                        639,
                        640,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        656,
                        667,
                        668,
                        669,
                        670,
                        671,
                        672,
                        696
                    ]
                },
                "new": {
                    "('org.apache.commons.math.transform#FastFourierTransformer', None)": [
                        623,
                        631,
                        632,
                        634,
                        635,
                        637,
                        638,
                        639,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671,
                        672,
                        673,
                        674,
                        698
                    ]
                }
            }
        }
    },
    "4e5126c676b27bcac127609c794a1d7406225d1a": {
        "authored_data": "2009 Apr 05 17:51",
        "commit.message": "fixed typo in error message\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@762126 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "92ba1a91e1e8587b9cf060f9fec6498b99ba40cf",
        "changes": {
            "src/java/org/apache/commons/math/MessagesResources_fr.java": {
                "old": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        512
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        512
                    ]
                }
            },
            "src/java/org/apache/commons/math/transform/FastFourierTransformer.java": {
                "old": {
                    "('org.apache.commons.math.transform#FastFourierTransformer', None)": [
                        669,
                        674,
                        698,
                        705
                    ]
                },
                "new": {
                    "('org.apache.commons.math.transform#FastFourierTransformer', None)": [
                        669,
                        674,
                        698,
                        705
                    ]
                }
            }
        }
    },
    "92ba1a91e1e8587b9cf060f9fec6498b99ba40cf": {
        "authored_data": "2009 Apr 05 17:21",
        "commit.message": "Cannot be null here\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@762123 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "1dcb72603207cf6c24bc80731487a55adc70e2a8",
        "changes": {
            "src/java/org/apache/commons/math/transform/FastFourierTransformer.java": {
                "old": {
                    "('org.apache.commons.math.transform#FastFourierTransformer', None)": [
                        703
                    ]
                },
                "new": {
                    "('org.apache.commons.math.transform#FastFourierTransformer', None)": [
                        703
                    ]
                }
            }
        }
    },
    "1dcb72603207cf6c24bc80731487a55adc70e2a8": {
        "authored_data": "2009 Apr 05 17:10",
        "commit.message": "Make private static fields final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@762121 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "c2716700dd6c5bbe10eae957bfe774bad9b1b831",
        "changes": {
            "src/java/org/apache/commons/math/special/Gamma.java": {
                "old": {
                    "('org.apache.commons.math.special#Gamma', None)": [
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.math.special#Gamma', None)": [
                        40
                    ]
                }
            },
            "src/test/org/apache/commons/math/util/MathUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtilsTest', None)": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtilsTest', None)": [
                        48
                    ]
                }
            }
        }
    },
    "c2716700dd6c5bbe10eae957bfe774bad9b1b831": {
        "authored_data": "2009 Apr 05 16:57",
        "commit.message": "Remove unnecessary casts and unnecessary semi-colons\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@762119 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "e1abece416ffd482a00b3c2960957a66c5b81418",
        "changes": {
            "src/test/org/apache/commons/math/linear/SparseRealMatrixTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testCopyFunctions')": [
                        135,
                        139
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testAddFail')": [
                        165
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testPlusMinus')": [
                        187
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testMultiply')": [
                        213
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testTrace')": [
                        239
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testOperate')": [
                        262
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testPremultiplyVector')": [
                        301
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testPremultiply')": [
                        326
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testGetVectors')": [
                        338,
                        344
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testSetSubMatrix')": [
                        584,
                        585
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testCopyFunctions')": [
                        135,
                        139
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', None)": [
                        165,
                        187,
                        213,
                        239,
                        262,
                        301,
                        326,
                        344
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testGetVectors')": [
                        338
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testSetSubMatrix')": [
                        584,
                        585
                    ]
                }
            }
        }
    },
    "e1abece416ffd482a00b3c2960957a66c5b81418": {
        "authored_data": "2009 Apr 05 16:55",
        "commit.message": "Remove unnecessary casts, unnecessary throws and unnecessary semi-colons\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@762118 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "a2b1aa1695d7f4d6163d4e86a96f1ce22fea5ebd",
        "changes": {
            "src/test/org/apache/commons/math/distribution/IntegerDistributionAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#IntegerDistributionAbstractTest', 'testFloatingPointArguments')": [
                        199,
                        206,
                        226,
                        227,
                        228
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#IntegerDistributionAbstractTest', 'testFloatingPointArguments')": [
                        199,
                        206,
                        226,
                        227,
                        228
                    ]
                }
            },
            "src/test/org/apache/commons/math/distribution/NormalDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'testExtremeValues')": [
                        152,
                        153
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'testExtremeValues')": [
                        152,
                        153
                    ]
                }
            },
            "src/test/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java": {
                "old": {
                    "('org.apache.commons.math.estimation#GaussNewtonEstimatorTest', 'testNonInversible')": [
                        240
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimatorTest', 'testMoreEstimatedParametersSimple')": [
                        325
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimatorTest', 'testMoreEstimatedParametersUnsorted')": [
                        357
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimatorTest', 'testCircleFittingBadInit')": [
                        519
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimatorTest', None)": [
                        640
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#GaussNewtonEstimatorTest', 'testNonInversible')": [
                        240
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimatorTest', 'testMoreEstimatedParametersSimple')": [
                        325
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimatorTest', 'testMoreEstimatedParametersUnsorted')": [
                        357
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimatorTest', 'testCircleFittingBadInit')": [
                        519
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimatorTest', None)": [
                        640
                    ]
                }
            },
            "src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java": {
                "old": {
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimatorTest', 'testControlParameters')": [
                        460
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimatorTest', None)": [
                        623,
                        685
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimatorTest', 'testControlParameters')": [
                        460
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimatorTest', None)": [
                        623,
                        685
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/BigMatrixImplTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'testAddFail')": [
                        239
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'testPlusMinus')": [
                        261
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'testMultiply')": [
                        285
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'testSolve')": [
                        353,
                        360,
                        366,
                        372,
                        378
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'testDeterminant')": [
                        399
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'testTrace')": [
                        412
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'testOperate')": [
                        433
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'testPremultiplyVector')": [
                        470
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'testPremultiply')": [
                        496
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'testGetVectors')": [
                        508,
                        514
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'testLUDecomposition')": [
                        521,
                        525
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BigMatrixImplTest', None)": [
                        239,
                        261,
                        285,
                        378,
                        399,
                        412,
                        433,
                        470,
                        496,
                        514
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'testSolve')": [
                        353,
                        360,
                        366,
                        372
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'testGetVectors')": [
                        508
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'testLUDecomposition')": [
                        521,
                        525
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/MatrixUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#MatrixUtilsTest', 'testCreateRowBigMatrix')": [
                        135,
                        137,
                        139
                    ],
                    "('org.apache.commons.math.linear#MatrixUtilsTest', 'testCreateColumnBigMatrix')": [
                        173,
                        175,
                        177
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#MatrixUtilsTest', 'testCreateRowBigMatrix')": [
                        135,
                        137,
                        139
                    ],
                    "('org.apache.commons.math.linear#MatrixUtilsTest', 'testCreateColumnBigMatrix')": [
                        173,
                        175,
                        177
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'testInterpolationAtBounds')": [
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'testInterpolationAtBounds')": [
                        66
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/TestProblem1.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#TestProblem1', None)": [
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#TestProblem1', None)": [
                        62
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/TestProblem2.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#TestProblem2', None)": [
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#TestProblem2', None)": [
                        63
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/TestProblem3.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#TestProblem3', None)": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#TestProblem3', None)": [
                        78
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/TestProblem4.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#TestProblem4', None)": [
                        68
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#TestProblem4', None)": [
                        68
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/TestProblemAbstract.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#TestProblemAbstract', None)": [
                        74,
                        79
                    ],
                    "('org.apache.commons.math.ode.nonstiff#TestProblemAbstract', 'setInitialConditions(double,double)')": [
                        100
                    ],
                    "('org.apache.commons.math.ode.nonstiff#TestProblemAbstract', 'setErrorScale(double)')": [
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#TestProblemAbstract', None)": [
                        74,
                        79
                    ],
                    "('org.apache.commons.math.ode.nonstiff#TestProblemAbstract', 'setInitialConditions(double,double)')": [
                        100
                    ],
                    "('org.apache.commons.math.ode.nonstiff#TestProblemAbstract', 'setErrorScale(double)')": [
                        116
                    ]
                }
            },
            "src/test/org/apache/commons/math/random/RandomDataTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextInt')": [
                        75
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextLong')": [
                        102
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextSecureLong')": [
                        129
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextSecureInt')": [
                        156
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextPoisson')": [
                        188,
                        208,
                        214
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextHex')": [
                        225,
                        231,
                        245,
                        263
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextSecureHex')": [
                        279,
                        285,
                        299,
                        317
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextUniform')": [
                        333,
                        339
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextGaussian')": [
                        379,
                        387
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextExponential')": [
                        400
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testConfig')": [
                        419,
                        420
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextSample')": [
                        524,
                        533
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextPermutation')": [
                        580,
                        588,
                        596
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextInt')": [
                        73
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextLong')": [
                        100
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextSecureLong')": [
                        127
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextSecureInt')": [
                        154
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextPoisson')": [
                        186,
                        206
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', None)": [
                        212,
                        530,
                        593
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextHex')": [
                        223,
                        229,
                        243,
                        261
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextSecureHex')": [
                        277,
                        283,
                        297,
                        315
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextUniform')": [
                        331,
                        337
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextGaussian')": [
                        377,
                        385
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextExponential')": [
                        398
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testConfig')": [
                        417
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextSample')": [
                        521
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextPermutation')": [
                        577,
                        585
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/data/CertifiedDataAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.data#CertifiedDataAbstractTest', 'testCertifiedValues')": [
                        115
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.data#CertifiedDataAbstractTest', 'testCertifiedValues')": [
                        115
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#StorelessUnivariateStatisticAbstractTest', 'testCopyConsistency')": [
                        186,
                        190
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#StorelessUnivariateStatisticAbstractTest', 'testCopyConsistency')": [
                        186,
                        190
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/descriptive/moment/StandardDeviationTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#StandardDeviationTest', 'populationStandardDeviation(double)')": [
                        104
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#StandardDeviationTest', 'populationStandardDeviation(double)')": [
                        104
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/descriptive/moment/VarianceTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#VarianceTest', 'populationVariance(double)')": [
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#VarianceTest', 'populationVariance(double)')": [
                        103
                    ]
                }
            },
            "src/test/org/apache/commons/math/transform/FastFourierTransformerTest.java": {
                "old": {
                    "('org.apache.commons.math.transform#FastFourierTransformerTest', 'testAdHocData')": [
                        37
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformerTest', 'test2DData')": [
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.math.transform#FastFourierTransformerTest', 'testAdHocData')": [
                        37
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformerTest', 'test2DData')": [
                        81
                    ]
                }
            },
            "src/test/org/apache/commons/math/transform/FastHadamardTransformerTest.java": {
                "old": {
                    "('org.apache.commons.math.transform#FastHadamardTransformerTest', 'checkDoubleTransform(int,int)')": [
                        80
                    ],
                    "('org.apache.commons.math.transform#FastHadamardTransformerTest', 'checkInverseDoubleTransform(int,int)')": [
                        109
                    ]
                },
                "new": {
                    "('org.apache.commons.math.transform#FastHadamardTransformerTest', 'checkDoubleTransform(int,int)')": [
                        80
                    ],
                    "('org.apache.commons.math.transform#FastHadamardTransformerTest', 'checkInverseDoubleTransform(int,int)')": [
                        109
                    ]
                }
            },
            "src/test/org/apache/commons/math/util/MathUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtilsTest', 'testBinomialCoefficient')": [
                        173,
                        174,
                        184
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testBinomialCoefficientFail')": [
                        256,
                        263,
                        270,
                        277,
                        283,
                        289,
                        296,
                        302
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testFactorial')": [
                        381,
                        382
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testFactorialFail')": [
                        395,
                        401,
                        407,
                        413
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testPermutedArrayHash')": [
                        518
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testIndicatorInt')": [
                        559,
                        560,
                        561
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testSignInt')": [
                        1002,
                        1003,
                        1004
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtilsTest', 'testBinomialCoefficient')": [
                        173,
                        174,
                        184
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testBinomialCoefficientFail')": [
                        256,
                        263,
                        270,
                        277,
                        283,
                        289,
                        296,
                        302
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testFactorial')": [
                        381,
                        382
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testFactorialFail')": [
                        395,
                        401,
                        407,
                        413
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testPermutedArrayHash')": [
                        518
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testIndicatorInt')": [
                        559,
                        560,
                        561
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testSignInt')": [
                        1002,
                        1003,
                        1004
                    ]
                }
            }
        }
    },
    "a2b1aa1695d7f4d6163d4e86a96f1ce22fea5ebd": {
        "authored_data": "2009 Apr 05 16:53",
        "commit.message": "Greatly improved multiplication speed for sparse matrices\nJira: MATH-248\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@762117 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "7dcc9d15c50787683570b1f8051618a87d22ff95",
        "changes": {
            "src/java/org/apache/commons/math/linear/SparseRealMatrix.java": {
                "new": {
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'multiply(RealMatrix)')": [
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrix', None)": [
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        219,
                        220,
                        221,
                        222,
                        223
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'multiply(SparseRealMatrix)')": [
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/SparseRealMatrixTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testMultiply')": [
                        199,
                        200
                    ]
                }
            }
        }
    },
    "7dcc9d15c50787683570b1f8051618a87d22ff95": {
        "authored_data": "2009 Apr 05 16:48",
        "commit.message": "Remove unnecessary casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@762116 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "7822849ae5d6f780483b1987220eb96a4e3f852a",
        "changes": {
            "src/java/org/apache/commons/math/MessagesResources_fr.java": {
                "old": {
                    "('org.apache.commons.math#MessagesResources_fr', 'getContents')": [
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', 'getContents')": [
                        42
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java": {
                "old": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', 'differentiate(double)')": [
                        237
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', 'differentiate(double)')": [
                        237
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(Complex,Complex)')": [
                        306,
                        307
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(Complex,Complex)')": [
                        306,
                        307
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java": {
                "old": {
                    "('org.apache.commons.math.estimation#SimpleEstimationProblem', 'getAllParameters')": [
                        60
                    ],
                    "('org.apache.commons.math.estimation#SimpleEstimationProblem', 'getUnboundParameters')": [
                        78
                    ],
                    "('org.apache.commons.math.estimation#SimpleEstimationProblem', 'getMeasurements')": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#SimpleEstimationProblem', 'getAllParameters')": [
                        60
                    ],
                    "('org.apache.commons.math.estimation#SimpleEstimationProblem', 'getUnboundParameters')": [
                        78
                    ],
                    "('org.apache.commons.math.estimation#SimpleEstimationProblem', 'getMeasurements')": [
                        87
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ContinuousOutputModel.java": {
                "old": {
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'append(ContinuousOutputModel)')": [
                        125,
                        141
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'append(ContinuousOutputModel)')": [
                        125,
                        141
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolator', None)": [
                        74,
                        75,
                        76,
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolator', None)": [
                        74,
                        75,
                        76,
                        77
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', None)": [
                        145,
                        146,
                        147
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', None)": [
                        145,
                        146,
                        147
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizer', 'getOptima')": [
                        122
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizer', 'getOptima')": [
                        122
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizer', 'getOptima')": [
                        123
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizer', 'getOptima')": [
                        123
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizer', 'getOptima')": [
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizer', 'getOptima')": [
                        116
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#CorrelatedRandomVectorGenerator', None)": [
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#CorrelatedRandomVectorGenerator', None)": [
                        93
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#UncorrelatedRandomVectorGenerator', None)": [
                        51,
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#UncorrelatedRandomVectorGenerator', None)": [
                        51,
                        52
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/StatUtils.java": {
                "old": {
                    "('org.apache.commons.math.stat#StatUtils', 'meanDifference(double,double)')": [
                        589
                    ],
                    "('org.apache.commons.math.stat#StatUtils', 'varianceDifference(double,double,double)')": [
                        618
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat#StatUtils', 'meanDifference(double,double)')": [
                        589
                    ],
                    "('org.apache.commons.math.stat#StatUtils', 'varianceDifference(double,double,double)')": [
                        618
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'getSumImpl')": [
                        428
                    ],
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'getSumsqImpl')": [
                        455
                    ],
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'getMinImpl')": [
                        482
                    ],
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'getMaxImpl')": [
                        509
                    ],
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'getSumLogImpl')": [
                        536
                    ],
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'getGeoMeanImpl')": [
                        563
                    ],
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'getMeanImpl')": [
                        590
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'getSumImpl')": [
                        428
                    ],
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'getSumsqImpl')": [
                        455
                    ],
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'getMinImpl')": [
                        482
                    ],
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'getMaxImpl')": [
                        509
                    ],
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'getSumLogImpl')": [
                        536
                    ],
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'getGeoMeanImpl')": [
                        563
                    ],
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'getMeanImpl')": [
                        590
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#FirstMoment', 'increment(double)')": [
                        102
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#FirstMoment', 'increment(double)')": [
                        102
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/FourthMoment.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#FourthMoment', 'increment(double)')": [
                        97
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#FourthMoment', 'increment(double)')": [
                        97
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#GeometricMean', 'getResult')": [
                        106
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#GeometricMean', 'evaluate(double,int,int)')": [
                        140
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#GeometricMean', 'copy(GeometricMean,GeometricMean)')": [
                        185
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#GeometricMean', 'getResult')": [
                        106
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#GeometricMean', 'evaluate(double,int,int)')": [
                        140
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#GeometricMean', 'copy(GeometricMean,GeometricMean)')": [
                        185
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#Kurtosis', 'getResult')": [
                        107,
                        111
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Kurtosis', 'copy(Kurtosis,Kurtosis)')": [
                        213
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#Kurtosis', 'getResult')": [
                        107,
                        111
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Kurtosis', 'copy(Kurtosis,Kurtosis)')": [
                        213
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#Mean', 'evaluate(double,int,int)')": [
                        156
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Mean', 'copy(Mean,Mean)')": [
                        192
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#Mean', 'evaluate(double,int,int)')": [
                        156
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Mean', 'copy(Mean,Mean)')": [
                        192
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#Skewness', 'getResult')": [
                        106,
                        110
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Skewness', 'evaluate(double,int,int)')": [
                        170,
                        171
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Skewness', 'copy(Skewness,Skewness)')": [
                        207
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#Skewness', 'getResult')": [
                        106,
                        110
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Skewness', 'evaluate(double,int,int)')": [
                        170,
                        171
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Skewness', 'copy(Skewness,Skewness)')": [
                        207
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/StandardDeviation.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#StandardDeviation', 'copy(StandardDeviation,StandardDeviation)')": [
                        266
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#StandardDeviation', 'copy(StandardDeviation,StandardDeviation)')": [
                        266
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/ThirdMoment.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#ThirdMoment', 'increment(double)')": [
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#ThirdMoment', 'increment(double)')": [
                        93
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#Variance', 'getResult')": [
                        171,
                        173
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Variance', 'evaluate(double,double,int,int)')": [
                        300
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Variance', 'copy(Variance,Variance)')": [
                        374
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#Variance', 'getResult')": [
                        171,
                        173
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Variance', 'evaluate(double,double,int,int)')": [
                        300
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Variance', 'copy(Variance,Variance)')": [
                        374
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.rank#Percentile', 'evaluate(double,int,int,double)')": [
                        207
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.rank#Percentile', 'evaluate(double,int,int,double)')": [
                        207
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java": {
                "old": {
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquare(double,long)')": [
                        89,
                        92
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquare(long)')": [
                        158,
                        159,
                        160,
                        170,
                        171
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareDataSetsComparison(long,long)')": [
                        256,
                        257
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquare(double,long)')": [
                        89,
                        92
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquare(long)')": [
                        158,
                        159,
                        160,
                        170,
                        171
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareDataSetsComparison(long,long)')": [
                        256,
                        257
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/inference/TTestImpl.java": {
                "old": {
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'pairedT(double,double)')": [
                        85
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'pairedTTest(double,double)')": [
                        126
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticT(double,double)')": [
                        259
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 't(double,double)')": [
                        298
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 't(StatisticalSummary,StatisticalSummary)')": [
                        342
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticT(StatisticalSummary,StatisticalSummary)')": [
                        390
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(double,double)')": [
                        597
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticTTest(double,double)')": [
                        641,
                        642
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(StatisticalSummary,StatisticalSummary)')": [
                        807,
                        808
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticTTest(StatisticalSummary,StatisticalSummary)')": [
                        853,
                        854
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticTTest(double,double,double,double,double,double)')": [
                        1046
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'pairedT(double,double)')": [
                        85
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'pairedTTest(double,double)')": [
                        126
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticT(double,double)')": [
                        259
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 't(double,double)')": [
                        298
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 't(StatisticalSummary,StatisticalSummary)')": [
                        342
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticT(StatisticalSummary,StatisticalSummary)')": [
                        390
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(double,double)')": [
                        597
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticTTest(double,double)')": [
                        641,
                        642
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(StatisticalSummary,StatisticalSummary)')": [
                        807,
                        808
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticTTest(StatisticalSummary,StatisticalSummary)')": [
                        853,
                        854
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticTTest(double,double,double,double,double,double)')": [
                        1046
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'addData(double,double)')": [
                        127,
                        128,
                        129,
                        130,
                        131
                    ],
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'removeData(double,double)')": [
                        160,
                        161,
                        162,
                        163,
                        164
                    ],
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'getMeanSquareError')": [
                        413
                    ],
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'getInterceptStdErr')": [
                        471
                    ],
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'getIntercept(double)')": [
                        592
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'addData(double,double)')": [
                        127,
                        128,
                        129,
                        130,
                        131
                    ],
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'removeData(double,double)')": [
                        160,
                        161,
                        162,
                        163,
                        164
                    ],
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'getMeanSquareError')": [
                        413
                    ],
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'getInterceptStdErr')": [
                        471
                    ],
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'getIntercept(double)')": [
                        592
                    ]
                }
            },
            "src/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', 'binomialCoefficientLog(int,int)')": [
                        310,
                        340,
                        345
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'factorialLog(int)')": [
                        526
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtils', 'binomialCoefficientLog(int,int)')": [
                        310,
                        340,
                        345
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'factorialLog(int)')": [
                        526
                    ]
                }
            },
            "src/java/org/apache/commons/math/util/TransformerMap.java": {
                "old": {
                    "('org.apache.commons.math.util#TransformerMap', 'getTransformer(Class)')": [
                        82
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#TransformerMap', 'getTransformer(Class)')": [
                        82
                    ]
                }
            }
        }
    },
    "7822849ae5d6f780483b1987220eb96a4e3f852a": {
        "authored_data": "2009 Apr 05 15:33",
        "commit.message": "Fixed threading issues with MathException and MathRuntimeException\nJira: MATH-253\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@762107 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "48fcbcf982e2046395d4f9f0615538b7c13d1a86",
        "changes": {
            "src/java/org/apache/commons/math/MathException.java": {
                "old": {
                    "('org.apache.commons.math#MathException', None)": [
                        39,
                        41,
                        42,
                        43
                    ],
                    "('org.apache.commons.math#MathException', 'translate(String,Locale)')": [
                        63,
                        64,
                        65,
                        67,
                        68,
                        69,
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MathException', None)": [
                        39
                    ],
                    "('org.apache.commons.math#MathException', 'translate(String,Locale)')": [
                        60,
                        62,
                        64
                    ]
                }
            },
            "src/java/org/apache/commons/math/MathRuntimeException.java": {
                "old": {
                    "('org.apache.commons.math#MathRuntimeException', None)": [
                        40,
                        41,
                        42,
                        43,
                        44
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'translate(String,Locale)')": [
                        64,
                        65,
                        66,
                        68,
                        69,
                        70,
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MathRuntimeException', None)": [
                        40,
                        41
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'translate(String,Locale)')": [
                        61,
                        63,
                        65
                    ]
                }
            }
        }
    }
}