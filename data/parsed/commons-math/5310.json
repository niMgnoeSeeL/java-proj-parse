{
    "7ad5c8196b1221e2d820b4fdf52124543f7d1f5c": {
        "authored_data": "2009 May 19 22:08",
        "commit.message": "improved hints for deprecated methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@776488 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "c6002f4cd18deb79c89829528a132238c819703a",
        "changes": {
            "src/java/org/apache/commons/math/linear/RealMatrix.java": {
                "old": {
                    "(None, None)": [
                        448,
                        457,
                        466
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        449,
                        450,
                        451,
                        452,
                        453,
                        462,
                        463,
                        464,
                        465,
                        474,
                        475,
                        476,
                        477
                    ]
                }
            }
        }
    },
    "c6002f4cd18deb79c89829528a132238c819703a": {
        "authored_data": "2009 May 19 18:44",
        "commit.message": "typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@776410 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "3352617df16de33db442d5c485dd470a9d4ec37b",
        "changes": {
            "src/java/org/apache/commons/math/stat/ranking/NaturalRanking.java": {
                "old": {
                    "('org.apache.commons.math.stat.ranking#NaturalRanking', None)": [
                        309
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.ranking#NaturalRanking', None)": [
                        309
                    ]
                }
            }
        }
    },
    "3352617df16de33db442d5c485dd470a9d4ec37b": {
        "authored_data": "2009 May 19 18:43",
        "commit.message": "added missing @Override\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@776409 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "bcccc34cbab6d4ee6c6c7894ec1f7af5a3c64f99",
        "changes": {
            "src/test/org/apache/commons/math/stat/ranking/NaturalRankingTest.java": {
                "new": {
                    "('org.apache.commons.math.stat.ranking#NaturalRankingTest', None)": [
                        33,
                        38
                    ]
                }
            }
        }
    },
    "e52b2a3ecf837af6a42e72cd50ecc7126cea2dbe": {
        "authored_data": "2009 May 18 18:35",
        "commit.message": "removed unneeded import\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@776048 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "a41365938b5733f8496979edf65dd9d946535a5d",
        "changes": {
            "src/test/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/test/org/apache/commons/math/optimization/general/MinpackTest.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                }
            }
        }
    },
    "a41365938b5733f8496979edf65dd9d946535a5d": {
        "authored_data": "2009 May 18 18:34",
        "commit.message": "removed unneeded import\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@776045 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "f3f0fcc1e47b7decf0a8645822338c624486b17a",
        "changes": {
            "src/test/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                }
            }
        }
    },
    "f3f0fcc1e47b7decf0a8645822338c624486b17a": {
        "authored_data": "2009 May 18 01:05",
        "commit.message": "Ok, so laking add/subtract tests now.  I'll try to add later, but checking in the existing tests so that [math] will at least build.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@775787 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "William Barker",
        "pcid": "5ce6c814900633620d7436ebbefe4081a9bea355",
        "changes": {
            "src/test/org/apache/commons/math/linear/SparseRealMatrixTest.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testDimensions')": [
                        120,
                        121
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testCopyFunctions')": [
                        132,
                        134,
                        136,
                        138
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testAdd')": [
                        144,
                        145,
                        146
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testAddFail')": [
                        159,
                        160
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testNorm')": [
                        171,
                        172
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testPlusMinus')": [
                        179,
                        180
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testMultiply')": [
                        193,
                        194,
                        195,
                        196
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testPremultiply')": [
                        311,
                        312,
                        313
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testEqualsAndHashCode')": [
                        545,
                        546,
                        547
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testToString')": [
                        558,
                        559,
                        561,
                        562
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testSetSubMatrix')": [
                        566,
                        583,
                        620
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'createSparseMatrix(double)')": [
                        664,
                        665
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testDimensions')": [
                        120,
                        121
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testCopyFunctions')": [
                        132,
                        134,
                        136,
                        138
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testAdd')": [
                        144,
                        145,
                        146
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testAddFail')": [
                        159,
                        160
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testNorm')": [
                        171,
                        172
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testPlusMinus')": [
                        179,
                        180
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testMultiply')": [
                        193,
                        194,
                        195,
                        196
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testPremultiply')": [
                        311,
                        312,
                        313
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testEqualsAndHashCode')": [
                        545,
                        546,
                        547
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testToString')": [
                        558,
                        559,
                        561,
                        562
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testSetSubMatrix')": [
                        566,
                        583,
                        620
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'createSparseMatrix(double)')": [
                        664,
                        665
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/SparseRealVectorTest.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', None)": [
                        104
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testConstructors')": [
                        469,
                        472,
                        476,
                        492,
                        496,
                        500,
                        506,
                        510
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testDataInOut')": [
                        518,
                        519,
                        520,
                        551,
                        563,
                        576,
                        589
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testMapFunctions')": [
                        606,
                        786,
                        833,
                        858,
                        872
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testBasicFunctions')": [
                        934,
                        935,
                        936,
                        973,
                        983,
                        1036
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testMisc')": [
                        1059
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testPredicates')": [
                        1077,
                        1090,
                        1091,
                        1092
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', None)": [
                        104
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testConstructors')": [
                        469,
                        472,
                        476,
                        492,
                        496,
                        500,
                        506,
                        510
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testDataInOut')": [
                        518,
                        519,
                        520,
                        551,
                        563,
                        576,
                        589
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testMapFunctions')": [
                        606,
                        786,
                        833,
                        858,
                        872
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testBasicFunctions')": [
                        934,
                        935,
                        936,
                        973,
                        983,
                        1036
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testMisc')": [
                        1059
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testPredicates')": [
                        1077,
                        1090,
                        1091,
                        1092
                    ]
                }
            }
        }
    },
    "5ce6c814900633620d7436ebbefe4081a9bea355": {
        "authored_data": "2009 May 18 00:42",
        "commit.message": "Sparse Matrix/Vector refactoring with mostly return types changed.\n\nThought that getSparcity was meaninful for SparseRealVector, and added a marker for SparseRealMatrix shape.  Feel free to -1 either ;).\n\nI found an error in the unit tests, so will commit the changes there shortly, after a review.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@775784 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "William Barker",
        "pcid": "7a096e97123873a1b743787841833455993c0302",
        "changes": {
            "src/java/org/apache/commons/math/linear/OpenMapRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', None)": [
                        28
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'copy')": [
                        66
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'createMatrix(int,int)')": [
                        72
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'add(RealMatrix)')": [
                        85,
                        90
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'add(OpenMapRealMatrix)')": [
                        101,
                        106
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'subtract(RealMatrix)')": [
                        120,
                        125
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'subtract(OpenMapRealMatrix)')": [
                        136,
                        141
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', None)": [
                        28,
                        289
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'copy')": [
                        66
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'createMatrix(int,int)')": [
                        72
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'add(RealMatrix)')": [
                        85,
                        90
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'add(OpenMapRealMatrix)')": [
                        101,
                        106
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'subtract(RealMatrix)')": [
                        120,
                        125
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'subtract(OpenMapRealMatrix)')": [
                        136,
                        141
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'getShape')": [
                        290,
                        291
                    ],
                    "(None, None)": [
                        292,
                        293
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/OpenMapRealVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#OpenMapRealVector', None)": [
                        28,
                        49,
                        232,
                        264,
                        1131
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'add(RealVector)')": [
                        223
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'add(double)')": [
                        254
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'append(RealVector)')": [
                        279
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'append(double)')": [
                        287,
                        288,
                        294,
                        295
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'copy')": [
                        303
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'ebeDivide(RealVector)')": [
                        336
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'ebeDivide(double)')": [
                        348
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'ebeMultiply(RealVector)')": [
                        360
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'ebeMultiply(double)')": [
                        372
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'getSubVector(int,int)')": [
                        384
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAbs')": [
                        631
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAbsToSelf')": [
                        636
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAcos')": [
                        646
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAcosToSelf')": [
                        651
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAdd(double)')": [
                        659
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAddToSelf(double)')": [
                        664
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAsin')": [
                        672
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAsinToSelf')": [
                        677
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAtan')": [
                        687
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAtanToSelf')": [
                        692
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapCbrt')": [
                        702
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapCbrtToSelf')": [
                        707
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapCeil')": [
                        717
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapCeilToSelf')": [
                        722
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapCos')": [
                        732
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapCosToSelf')": [
                        737
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapCosh')": [
                        745
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapCoshToSelf')": [
                        750
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapDivide(double)')": [
                        758
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapDivideToSelf(double)')": [
                        763
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapExp')": [
                        773
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapExpToSelf')": [
                        778
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapExpm1')": [
                        786
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapExpm1ToSelf')": [
                        791
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapFloor')": [
                        801
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapFloorToSelf')": [
                        806
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapInv')": [
                        816
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapInvToSelf')": [
                        821
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapLog')": [
                        829
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapLog10')": [
                        834
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapLog10ToSelf')": [
                        839
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapLog1p')": [
                        847
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapLog1pToSelf')": [
                        852
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapLogToSelf')": [
                        862
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapMultiply(double)')": [
                        870
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapMultiplyToSelf(double)')": [
                        875
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapPow(double)')": [
                        884
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapPowToSelf(double)')": [
                        889
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapRint')": [
                        899
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapRintToSelf')": [
                        904
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSignum')": [
                        914
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSignumToSelf')": [
                        919
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSin')": [
                        929
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSinToSelf')": [
                        934
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSinh')": [
                        944
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSinhToSelf')": [
                        949
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSqrt')": [
                        960
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSqrtToSelf')": [
                        965
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSubtract(double)')": [
                        975
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSubtractToSelf(double)')": [
                        980
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapTan')": [
                        985
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapTanToSelf')": [
                        990
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapTanh')": [
                        1000
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapTanhToSelf')": [
                        1005
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapUlp')": [
                        1015
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapUlpToSelf')": [
                        1020
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'projection(double)')": [
                        1092,
                        1094
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'subtract(RealVector)')": [
                        1153
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'subtract(double)')": [
                        1162
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'unitVector')": [
                        1177,
                        1178
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#OpenMapRealVector', None)": [
                        28,
                        49,
                        232,
                        264,
                        1131,
                        1300
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'add(RealVector)')": [
                        223
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'add(double)')": [
                        254
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'append(RealVector)')": [
                        279
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'append(double)')": [
                        287,
                        288,
                        294,
                        295
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'copy')": [
                        303
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'ebeDivide(RealVector)')": [
                        336
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'ebeDivide(double)')": [
                        348
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'ebeMultiply(RealVector)')": [
                        360
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'ebeMultiply(double)')": [
                        372
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'getSubVector(int,int)')": [
                        384
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAbs')": [
                        631
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAbsToSelf')": [
                        636
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAcos')": [
                        646
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAcosToSelf')": [
                        651
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAdd(double)')": [
                        659
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAddToSelf(double)')": [
                        664
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAsin')": [
                        672
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAsinToSelf')": [
                        677
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAtan')": [
                        687
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapAtanToSelf')": [
                        692
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapCbrt')": [
                        702
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapCbrtToSelf')": [
                        707
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapCeil')": [
                        717
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapCeilToSelf')": [
                        722
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapCos')": [
                        732
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapCosToSelf')": [
                        737
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapCosh')": [
                        745
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapCoshToSelf')": [
                        750
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapDivide(double)')": [
                        758
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapDivideToSelf(double)')": [
                        763
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapExp')": [
                        773
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapExpToSelf')": [
                        778
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapExpm1')": [
                        786
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapExpm1ToSelf')": [
                        791
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapFloor')": [
                        801
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapFloorToSelf')": [
                        806
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapInv')": [
                        816
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapInvToSelf')": [
                        821
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapLog')": [
                        829
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapLog10')": [
                        834
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapLog10ToSelf')": [
                        839
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapLog1p')": [
                        847
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapLog1pToSelf')": [
                        852
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapLogToSelf')": [
                        862
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapMultiply(double)')": [
                        870
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapMultiplyToSelf(double)')": [
                        875
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapPow(double)')": [
                        884
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapPowToSelf(double)')": [
                        889
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapRint')": [
                        899
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapRintToSelf')": [
                        904
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSignum')": [
                        914
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSignumToSelf')": [
                        919
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSin')": [
                        929
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSinToSelf')": [
                        934
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSinh')": [
                        944
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSinhToSelf')": [
                        949
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSqrt')": [
                        960
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSqrtToSelf')": [
                        965
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSubtract(double)')": [
                        975
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapSubtractToSelf(double)')": [
                        980
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapTan')": [
                        985
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapTanToSelf')": [
                        990
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapTanh')": [
                        1000
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapTanhToSelf')": [
                        1005
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapUlp')": [
                        1015
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'mapUlpToSelf')": [
                        1020
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'projection(double)')": [
                        1092,
                        1094
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'subtract(RealVector)')": [
                        1153
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'subtract(double)')": [
                        1162
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'unitVector')": [
                        1177,
                        1178
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'getSparcity')": [
                        1301,
                        1302
                    ],
                    "(None, None)": [
                        1303,
                        1304
                    ]
                }
            }
        }
    },
    "4d3b3886f91bd60929462db558f158366d12e9f0": {
        "authored_data": "2009 May 17 20:19",
        "commit.message": "simplified DifferentiableMultivariateVectorialFunction\nthe gradient and partial derivaritves can be retrieved from the jacobian\nand adding them at the interface level was cumbersome for implementing\noptimization problems.\nNow users need to provide only the jacobian method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@775751 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "acd879648cc47f2fedd6c1e419157bb8f51244c0",
        "changes": {
            "src/java/org/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction.java": {
                "old": {
                    "(None, None)": [
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69
                    ]
                }
            },
            "src/test/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', None)": [
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        593,
                        594,
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610,
                        611,
                        612,
                        613,
                        614,
                        615
                    ]
                }
            },
            "src/test/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', None)": [
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        635,
                        636,
                        637,
                        638,
                        639,
                        640,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        656,
                        657,
                        703,
                        704,
                        705,
                        706,
                        707,
                        708,
                        709,
                        710,
                        711,
                        712,
                        713,
                        714,
                        715,
                        716,
                        717,
                        718,
                        719,
                        720,
                        721,
                        722,
                        723,
                        724,
                        725
                    ]
                }
            },
            "src/test/org/apache/commons/math/optimization/general/MinpackTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#MinpackTest', None)": [
                        585,
                        586,
                        587,
                        588,
                        589,
                        590,
                        591,
                        592,
                        593,
                        594,
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        607
                    ]
                }
            }
        }
    }
}