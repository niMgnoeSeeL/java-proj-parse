{
    "05c6b8ad5aba47d3507c0408c5ac1b2cc1bcb78e": {
        "authored_data": "2008 Nov 22 20:25",
        "commit.message": "Replace hashcode functions with JDK 1.5+ provided impls. Deprecate?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@719909 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "444d2311ea9cb28282e334298f8b4250413a7211",
        "changes": {
            "src/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', 'hash(double)')": [
                        468,
                        469,
                        480,
                        481,
                        482,
                        483,
                        484,
                        485,
                        486,
                        487
                    ],
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        470,
                        471,
                        472,
                        473
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'hash(double)')": [
                        469,
                        480
                    ],
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        470,
                        471,
                        472,
                        473
                    ]
                }
            }
        }
    },
    "444d2311ea9cb28282e334298f8b4250413a7211": {
        "authored_data": "2008 Nov 22 20:16",
        "commit.message": "Javadoc only.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@719907 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "dd1a6bf954116fd4d17161fe25e7d1918bb08aad",
        "changes": {
            "src/java/org/apache/commons/math/util/ResizableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', None)": [
                        805
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', None)": [
                        255,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        410,
                        427,
                        452,
                        780,
                        781,
                        782,
                        783,
                        808,
                        823,
                        851
                    ]
                }
            }
        }
    },
    "dd1a6bf954116fd4d17161fe25e7d1918bb08aad": {
        "authored_data": "2008 Nov 22 18:41",
        "commit.message": "Added the following methods to ResizableDoubleArray to support MATH-212 \nchanges to stats classes:\ncopy constructor\nstatic copy(-,-)\ninstance copy()\nequals and hashcode\n\nJIRA: MATH-212\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@719894 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "2ef1c3b7d054523e8e84b6848a35acc5db7c544f",
        "changes": {
            "src/java/org/apache/commons/math/util/ResizableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', None)": [
                        297,
                        309,
                        310,
                        317,
                        390,
                        406,
                        407,
                        408,
                        537
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'substituteMostRecentElement(double)')": [
                        300,
                        301,
                        306,
                        307,
                        308
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'discardFrontElements(int)')": [
                        389
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'discardMostRecentElements(int)')": [
                        405
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'expand')": [
                        456
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setNumElements(int)')": [
                        707
                    ],
                    "(None, None)": [
                        742
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        844,
                        845
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', None)": [
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        310,
                        322,
                        323,
                        324,
                        331,
                        404,
                        420,
                        421,
                        422,
                        551,
                        756,
                        757,
                        758,
                        759,
                        760,
                        761,
                        762,
                        763,
                        764,
                        765,
                        766,
                        767,
                        768,
                        781,
                        782,
                        783,
                        784,
                        785,
                        786,
                        787,
                        788,
                        789,
                        790,
                        791,
                        796,
                        797,
                        798,
                        799,
                        800,
                        801,
                        802,
                        803,
                        804,
                        805,
                        806,
                        826,
                        827,
                        828,
                        829,
                        830,
                        831,
                        832,
                        833
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'substituteMostRecentElement(double)')": [
                        313,
                        314,
                        319,
                        320,
                        321
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'discardFrontElements(int)')": [
                        403
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'discardMostRecentElements(int)')": [
                        419
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'expand')": [
                        470
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setNumElements(int)')": [
                        721
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'copy(ResizableDoubleArray,ResizableDoubleArray)')": [
                        769,
                        770,
                        771,
                        772,
                        773,
                        774,
                        775,
                        776,
                        777,
                        778,
                        779,
                        780
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'copy')": [
                        792,
                        793,
                        794,
                        795
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'equals(Object)')": [
                        807,
                        808,
                        809,
                        810,
                        811,
                        812,
                        813,
                        814,
                        815,
                        816,
                        817,
                        818,
                        819,
                        820,
                        821,
                        822,
                        823,
                        824,
                        825
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'hashCode')": [
                        834,
                        835,
                        836,
                        837,
                        838,
                        839,
                        840,
                        841,
                        842,
                        843
                    ]
                }
            },
            "src/test/org/apache/commons/math/util/ResizableDoubleArrayTest.java": {
                "new": {
                    "('org.apache.commons.math.util#ResizableDoubleArrayTest', 'testConstructors')": [
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArrayTest', None)": [
                        413,
                        487,
                        488,
                        489,
                        494,
                        495
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArrayTest', 'testEqualsAndHashCode')": [
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        483,
                        484,
                        485,
                        486
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArrayTest', 'verifyEquality(ResizableDoubleArray,ResizableDoubleArray)')": [
                        490,
                        491,
                        492,
                        493
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArrayTest', 'verifyInequality(ResizableDoubleArray,ResizableDoubleArray)')": [
                        496,
                        497,
                        498,
                        499
                    ],
                    "(None, None)": [
                        500,
                        501
                    ]
                }
            }
        }
    },
    "2ef1c3b7d054523e8e84b6848a35acc5db7c544f": {
        "authored_data": "2008 Nov 11 17:50",
        "commit.message": "applied Cyril Briquet's patch adding an observations removal feature to descriptive statistics\nJIRA: MATH-229\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@713093 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "4ae0245ff6872dda0bbda33b6d296cd7c3ea1bc2",
        "changes": {
            "src/java/org/apache/commons/math/MessagesResources_fr.java": {
                "old": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        177,
                        178
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        175,
                        176,
                        241,
                        242
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java": {
                "new": {
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', None)": [
                        141,
                        142,
                        143,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        157,
                        158
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'removeMostRecentValue')": [
                        144,
                        145
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'replaceMostRecentValue(double)')": [
                        155,
                        156
                    ]
                }
            },
            "src/java/org/apache/commons/math/util/ResizableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'discardFrontElements(int)')": [
                        385
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'substituteMostRecentElement(double)')": [
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', None)": [
                        309,
                        310,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'discardFrontElements(int)')": [
                        388,
                        389
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'discardMostRecentElements(int)')": [
                        403,
                        404,
                        405
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'discardExtremeElements(int,boolean)')": [
                        427,
                        438
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java": {
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatisticsTest', None)": [
                        77,
                        87,
                        88,
                        89,
                        105
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatisticsTest', 'testRemoval')": [
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatisticsTest', 'checkremoval(DescriptiveStatistics,int,double,double,double)')": [
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104
                    ]
                }
            },
            "src/test/org/apache/commons/math/util/ResizableDoubleArrayTest.java": {
                "old": {
                    "('org.apache.commons.math.util#ResizableDoubleArrayTest', 'testDiscard')": [
                        322
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#ResizableDoubleArrayTest', 'testDiscard')": [
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        343,
                        344,
                        345,
                        346
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArrayTest', None)": [
                        347,
                        348,
                        349,
                        350,
                        351,
                        380
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArrayTest', 'testSubstitute')": [
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379
                    ]
                }
            }
        }
    },
    "4ae0245ff6872dda0bbda33b6d296cd7c3ea1bc2": {
        "authored_data": "2008 Nov 11 17:24",
        "commit.message": "fixed typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@713088 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "6b07dd2122f954a4ff864fc6db8468d3d51aca78",
        "changes": {
            "src/java/org/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic.java": {
                "old": {
                    "(None, None)": [
                        41,
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        41,
                        52
                    ]
                }
            }
        }
    },
    "6b07dd2122f954a4ff864fc6db8468d3d51aca78": {
        "authored_data": "2008 Nov 08 20:42",
        "commit.message": "improved error messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@712430 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "d00137cca7a690546f1299662a949a36b04dad36",
        "changes": {
            "src/java/org/apache/commons/math/MessagesResources_fr.java": {
                "old": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        259,
                        263
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        177,
                        178,
                        261,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/UnivariateRealIntegratorImpl.java": {
                "old": {
                    "('org.apache.commons.math.analysis#UnivariateRealIntegratorImpl', 'getResult')": [
                        102
                    ],
                    "('org.apache.commons.math.analysis#UnivariateRealIntegratorImpl', 'getIterationCount')": [
                        116
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.analysis#UnivariateRealIntegratorImpl', 'getResult')": [
                        104
                    ],
                    "('org.apache.commons.math.analysis#UnivariateRealIntegratorImpl', 'getIterationCount')": [
                        118
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/UnivariateRealSolverImpl.java": {
                "old": {
                    "('org.apache.commons.math.analysis#UnivariateRealSolverImpl', 'getResult')": [
                        114
                    ],
                    "('org.apache.commons.math.analysis#UnivariateRealSolverImpl', 'getIterationCount')": [
                        129
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis#UnivariateRealSolverImpl', 'getResult')": [
                        115
                    ],
                    "('org.apache.commons.math.analysis#UnivariateRealSolverImpl', 'getIterationCount')": [
                        130
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/BigMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'setSubMatrix(BigDecimal,int,int)')": [
                        700,
                        701
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'setSubMatrix(BigDecimal,int,int)')": [
                        702,
                        703,
                        704,
                        705,
                        706,
                        707,
                        708
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/LUDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'checkDecomposed')": [
                        434
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', 'checkDecomposed')": [
                        436
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/QRDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'checkDecomposed')": [
                        446
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', 'checkDecomposed')": [
                        448
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/RealMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'setSubMatrix(double,int,int)')": [
                        491,
                        492
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'setSubMatrix(double,int,int)')": [
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        499
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'getNextValue')": [
                        416
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'getNextValue')": [
                        416,
                        417
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/ValueServer.java": {
                "old": {
                    "('org.apache.commons.math.random#ValueServer', 'getNext')": [
                        109,
                        110
                    ],
                    "('org.apache.commons.math.random#ValueServer', 'getNextDigest')": [
                        299
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#ValueServer', 'getNext')": [
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119
                    ],
                    "('org.apache.commons.math.random#ValueServer', None)": [
                        120
                    ],
                    "('org.apache.commons.math.random#ValueServer', 'getNextDigest')": [
                        309
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'checkEmpty')": [
                        612,
                        613
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'checkEmpty')": [
                        613,
                        614
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#SummaryStatistics', 'checkEmpty')": [
                        602
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.stat.descriptive#SummaryStatistics', 'checkEmpty')": [
                        603,
                        604
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#GeometricMean', 'checkEmpty')": [
                        155,
                        156
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#GeometricMean', 'checkEmpty')": [
                        156,
                        157
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#Kurtosis', 'increment(double)')": [
                        82,
                        83
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Kurtosis', 'clear')": [
                        114,
                        115
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Kurtosis', 'increment(double)')": [
                        83,
                        84,
                        85
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Kurtosis', 'clear')": [
                        116,
                        117,
                        118
                    ]
                }
            }
        }
    },
    "d00137cca7a690546f1299662a949a36b04dad36": {
        "authored_data": "2008 Nov 07 16:31",
        "commit.message": "allow chained IOExceptions even before Java 6\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@712187 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "448759e46e4b2102d1fded445f5182c6564c418b",
        "changes": {
            "src/java/org/apache/commons/math/MathRuntimeException.java": {
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math#MathRuntimeException', None)": [
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        266,
                        267,
                        268
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createIOException(Throwable)')": [
                        262,
                        263,
                        264,
                        265
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'writeExternal(ObjectOutput)')": [
                        253
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'writeExternal(ObjectOutput)')": [
                        254
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'readExternal(ObjectInput)')": [
                        395
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'readExternal(ObjectInput)')": [
                        396
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/nonstiff/MultistepStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#MultistepStepInterpolator', 'readExternal(ObjectInput)')": [
                        160
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MultistepStepInterpolator', 'readExternal(ObjectInput)')": [
                        161
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaStepInterpolator', 'readExternal(ObjectInput)')": [
                        168
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaStepInterpolator', 'readExternal(ObjectInput)')": [
                        169
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'writeBaseExternal(ObjectOutput)')": [
                        372
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'writeBaseExternal(ObjectOutput)')": [
                        373
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolator', 'readExternal(ObjectInput)')": [
                        122
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolator', 'readExternal(ObjectInput)')": [
                        123
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'load(URL)')": [
                        139
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'load(File)')": [
                        178
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'fillBinStats(Object)')": [
                        379
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'load(URL)')": [
                        139
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'load(File)')": [
                        178
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'fillBinStats(Object)')": [
                        379
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', 'testImpossibleSerialization')": [
                        123
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', 'testSerializationError')": [
                        169
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', 'testImpossibleSerialization')": [
                        123
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', 'testSerializationError')": [
                        169
                    ]
                }
            }
        }
    },
    "448759e46e4b2102d1fded445f5182c6564c418b": {
        "authored_data": "2008 Nov 07 16:05",
        "commit.message": "fixed a forgotten possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@712178 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "0c7099ab354b91cb9b981419533fead5935f9042",
        "changes": {
            "src/java/org/apache/commons/math/MathException.java": {
                "old": {
                    "('org.apache.commons.math#MathException', None)": [
                        102
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MathException', None)": [
                        102
                    ]
                }
            }
        }
    },
    "0c7099ab354b91cb9b981419533fead5935f9042": {
        "authored_data": "2008 Nov 07 14:55",
        "commit.message": "improved error messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@712144 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "b1592908df84ddbea649933024af8d44b2b0644f",
        "changes": {
            "src/java/org/apache/commons/math/MessagesResources_fr.java": {
                "old": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        209
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java": {
                "old": {
                    "('org.apache.commons.math.analysis#PolynomialFunctionLagrangeForm', 'computeCoefficients')": [
                        256,
                        257
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis#PolynomialFunctionLagrangeForm', 'computeCoefficients')": [
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264
                    ]
                }
            },
            "src/java/org/apache/commons/math/complex/ComplexFormat.java": {
                "old": {
                    "('org.apache.commons.math.complex#ComplexFormat', 'parse(String)')": [
                        253,
                        254
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'parse(String)')": [
                        254,
                        255,
                        256
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/AbstractEstimator.java": {
                "old": {
                    "('org.apache.commons.math.estimation#AbstractEstimator', 'getCovariances(EstimationProblem)')": [
                        185
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#AbstractEstimator', 'getCovariances(EstimationProblem)')": [
                        185
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java": {
                "old": {
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', 'estimate(EstimationProblem)')": [
                        164
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', 'estimate(EstimationProblem)')": [
                        164
                    ]
                }
            },
            "src/java/org/apache/commons/math/fraction/Fraction.java": {
                "old": {
                    "('org.apache.commons.math.fraction#Fraction', None)": [
                        203,
                        206,
                        207,
                        208
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'negate')": [
                        364
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'addSub(Fraction,boolean)')": [
                        454,
                        455
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'divide(Fraction)')": [
                        503
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'getReducedFraction(int,int)')": [
                        521,
                        533
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.fraction#Fraction', None)": [
                        205,
                        206,
                        209,
                        210,
                        211
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'negate')": [
                        367,
                        368
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'addSub(Fraction,boolean)')": [
                        458,
                        459
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'divide(Fraction)')": [
                        507,
                        508
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'getReducedFraction(int,int)')": [
                        526,
                        527,
                        539,
                        540
                    ]
                }
            },
            "src/java/org/apache/commons/math/fraction/FractionFormat.java": {
                "old": {
                    "('org.apache.commons.math.fraction#FractionFormat', 'parse(String)')": [
                        247,
                        248
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.fraction#FractionFormat', 'parse(String)')": [
                        248,
                        249,
                        250
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/Rotation.java": {
                "old": {
                    "('org.apache.commons.math.geometry#Rotation', None)": [
                        157
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.geometry#Rotation', None)": [
                        159,
                        160
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/Vector3D.java": {
                "old": {
                    "('org.apache.commons.math.geometry#Vector3D', 'normalize')": [
                        269
                    ],
                    "('org.apache.commons.math.geometry#Vector3D', 'orthogonal')": [
                        293
                    ],
                    "('org.apache.commons.math.geometry#Vector3D', 'angle(Vector3D,Vector3D)')": [
                        323
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.geometry#Vector3D', 'normalize')": [
                        270,
                        271
                    ],
                    "('org.apache.commons.math.geometry#Vector3D', 'orthogonal')": [
                        295
                    ],
                    "('org.apache.commons.math.geometry#Vector3D', 'angle(Vector3D,Vector3D)')": [
                        325
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/Vector3DFormat.java": {
                "old": {
                    "('org.apache.commons.math.geometry#Vector3DFormat', 'parse(String)')": [
                        257,
                        258
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.geometry#Vector3DFormat', 'parse(String)')": [
                        258,
                        259,
                        260
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/BigMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getSubMatrix(int,int)')": [
                        625,
                        626,
                        627
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getSubMatrix(int,int)')": [
                        625,
                        626,
                        627
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/RealMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'getSubMatrix(int,int)')": [
                        416,
                        417,
                        418
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'getSubMatrix(int,int)')": [
                        416,
                        417,
                        418
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/RealVectorFormat.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealVectorFormat', 'parse(String)')": [
                        261,
                        262
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math.linear#RealVectorFormat', 'parse(String)')": [
                        262,
                        263,
                        264
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/RealVectorImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealVectorImpl', 'unitVector')": [
                        1071
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'unitize')": [
                        1080
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'unitVector')": [
                        1072
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'unitize')": [
                        1081,
                        1082
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ContinuousOutputModel.java": {
                "old": {
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'setInterpolatedTime(double)')": [
                        318
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'setInterpolatedTime(double)')": [
                        318
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/DirectSearchOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#DirectSearchOptimizer', 'minimize(CostFunction,int,ConvergenceChecker,double,int,long)')": [
                        273
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#DirectSearchOptimizer', 'minimize(CostFunction,int,ConvergenceChecker,double,int,long)')": [
                        273
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'load(URL)')": [
                        137
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'fillBinStats(Object)')": [
                        361,
                        362,
                        363,
                        364,
                        365
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'getNextValue')": [
                        422
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'load(URL)')": [
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        142,
                        143
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'load(File)')": [
                        171,
                        172,
                        173,
                        174,
                        175,
                        176
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'fillBinStats(Object)')": [
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        379
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'getNextValue')": [
                        436
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/ValueServer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22,
                        24
                    ],
                    "('org.apache.commons.math.random#ValueServer', 'getNextReplay')": [
                        331
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        24,
                        25
                    ],
                    "('org.apache.commons.math.random#ValueServer', 'getNextReplay')": [
                        332,
                        333
                    ]
                }
            },
            "src/java/org/apache/commons/math/util/DefaultTransformer.java": {
                "old": {
                    "('org.apache.commons.math.util#DefaultTransformer', 'transform(Object)')": [
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#DefaultTransformer', 'transform(Object)')": [
                        47
                    ]
                }
            },
            "src/java/org/apache/commons/math/util/ResizableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getElement(int)')": [
                        457,
                        458,
                        459,
                        460,
                        464,
                        465,
                        466
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setElement(int,double)')": [
                        573,
                        574
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getElement(int)')": [
                        459,
                        460,
                        464,
                        465
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setElement(int,double)')": [
                        572,
                        573
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/BigMatrixImplTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'splitLU(BigMatrix,BigDecimal,BigDecimal)')": [
                        786
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BigMatrixImplTest', 'splitLU(BigMatrix,BigDecimal,BigDecimal)')": [
                        786
                    ]
                }
            },
            "src/test/org/apache/commons/math/util/TestBean.java": {
                "old": {
                    "('org.apache.commons.math.util#TestBean', 'getZ')": [
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#TestBean', 'getZ')": [
                        62
                    ]
                }
            }
        }
    },
    "b1592908df84ddbea649933024af8d44b2b0644f": {
        "authored_data": "2008 Nov 07 14:48",
        "commit.message": "leverage null pointer handling,\nexception classes can be built using null arguments arrays which\nare automatically converted to zero-sized arrays to prevent null pointer exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@712142 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "234e529e7044da53aa535d23813defff95f1b24c",
        "changes": {
            "src/java/org/apache/commons/math/ConvergenceException.java": {
                "old": {
                    "('org.apache.commons.math#ConvergenceException', None)": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ConvergenceException', None)": [
                        34
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java": {
                "old": {
                    "('org.apache.commons.math.geometry#CardanEulerSingularityException', None)": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry#CardanEulerSingularityException', None)": [
                        38
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/RankDeficientMatrixException.java": {
                "old": {
                    "('org.apache.commons.math.linear#RankDeficientMatrixException', None)": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#RankDeficientMatrixException', None)": [
                        34
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/SingularMatrixException.java": {
                "old": {
                    "('org.apache.commons.math.linear#SingularMatrixException', None)": [
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SingularMatrixException', None)": [
                        34
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/NotPositiveDefiniteMatrixException.java": {
                "old": {
                    "('org.apache.commons.math.random#NotPositiveDefiniteMatrixException', None)": [
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#NotPositiveDefiniteMatrixException', None)": [
                        39
                    ]
                }
            },
            "src/test/org/apache/commons/math/MathConfigurationExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math#MathConfigurationExceptionTest', 'testConstructor')": [
                        33
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MathConfigurationExceptionTest', 'testConstructor')": [
                        33
                    ]
                }
            },
            "src/test/org/apache/commons/math/MathExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math#MathExceptionTest', 'testConstructor')": [
                        36
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testPrintStackTrace')": [
                        82,
                        83
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testSerialization')": [
                        107,
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MathExceptionTest', 'testConstructor')": [
                        36
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testPrintStackTrace')": [
                        82,
                        83
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testSerialization')": [
                        107,
                        108
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/InvalidMatrixExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#InvalidMatrixExceptionTest', 'testConstructorMessage')": [
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#InvalidMatrixExceptionTest', 'testConstructorMessage')": [
                        32
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/MatrixIndexExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#MatrixIndexExceptionTest', 'testConstructorMessage')": [
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#MatrixIndexExceptionTest', 'testConstructorMessage')": [
                        32
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/RealMatrixImplTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealMatrixImplTest', 'splitLU(RealMatrix,double,double)')": [
                        662
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#RealMatrixImplTest', 'splitLU(RealMatrix,double,double)')": [
                        662
                    ]
                }
            }
        }
    }
}