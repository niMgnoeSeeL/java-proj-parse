{
    "04b34cc1a560fd334c5602c62fc6efdcb8f90581": {
        "authored_data": "2012 Sep 05 06:53",
        "commit.message": "Added density - cdf consistency test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1381029 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "8a0fef0fb7044d77024699de0448497467b756b5",
        "changes": {
            "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java": {
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        25,
                        26,
                        27
                    ],
                    "('org.apache.commons.math3.distribution#RealDistributionAbstractTest', None)": [
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        339,
                        340
                    ],
                    "('org.apache.commons.math3.distribution#RealDistributionAbstractTest', 'testDensityIntegrals')": [
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338
                    ]
                }
            }
        }
    },
    "8a0fef0fb7044d77024699de0448497467b756b5": {
        "authored_data": "2012 Sep 04 04:10",
        "commit.message": "MATH-854: fill the throws clause of all methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1380444 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "4e7d797b1c33397378de21f83a132ecbf1305b10",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java": {
                "old": {
                    "('org.apache.commons.math3.linear#ArrayRealVector', None)": [
                        103,
                        120,
                        153,
                        172,
                        188,
                        692,
                        693,
                        694
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'add(RealVector)')": [
                        291
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'subtract(RealVector)')": [
                        316
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'ebeMultiply(RealVector)')": [
                        392
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'ebeDivide(RealVector)')": [
                        415
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'dotProduct(RealVector)')": [
                        448
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'getDistance(RealVector)')": [
                        493
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'getL1Distance(RealVector)')": [
                        516
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'getLInfDistance(RealVector)')": [
                        539
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'getEntry(int)')": [
                        589
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'getSubVector(int,int)')": [
                        635
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'setEntry(int,double)')": [
                        651
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'addToEntry(int,double)')": [
                        661
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'setSubVector(int,RealVector)')": [
                        672
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'setSubVector(int,double)')": [
                        695
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'checkVectorDimensions(RealVector)')": [
                        730
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'checkVectorDimensions(int)')": [
                        742
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'combine(double,double,RealVector)')": [
                        827
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'combineToSelf(double,double,RealVector)')": [
                        833
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'walkInDefaultOrder(RealVectorPreservingVisitor,int,int)')": [
                        862
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'walkInOptimizedOrder(RealVectorPreservingVisitor,int,int)')": [
                        888
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'walkInDefaultOrder(RealVectorChangingVisitor,int,int)')": [
                        905
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'walkInOptimizedOrder(RealVectorChangingVisitor,int,int)')": [
                        931
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', None)": [
                        104,
                        105,
                        122,
                        123,
                        156,
                        157,
                        176,
                        192,
                        705,
                        706,
                        707
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'add(RealVector)')": [
                        295,
                        296
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'subtract(RealVector)')": [
                        321,
                        322
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'ebeMultiply(RealVector)')": [
                        398,
                        399
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'ebeDivide(RealVector)')": [
                        422,
                        423
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'dotProduct(RealVector)')": [
                        456
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'getDistance(RealVector)')": [
                        501
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'getL1Distance(RealVector)')": [
                        524,
                        525
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'getLInfDistance(RealVector)')": [
                        548,
                        549
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'getEntry(int)')": [
                        599
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'getSubVector(int,int)')": [
                        645,
                        646
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'setEntry(int,double)')": [
                        662
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'addToEntry(int,double)')": [
                        672,
                        673
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'setSubVector(int,RealVector)')": [
                        684,
                        685
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'setSubVector(int,double)')": [
                        708,
                        709
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'checkVectorDimensions(RealVector)')": [
                        744,
                        745
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'checkVectorDimensions(int)')": [
                        757,
                        758
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'combine(double,double,RealVector)')": [
                        843,
                        844
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'combineToSelf(double,double,RealVector)')": [
                        850,
                        851
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'walkInDefaultOrder(RealVectorPreservingVisitor,int,int)')": [
                        880,
                        881
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'walkInOptimizedOrder(RealVectorPreservingVisitor,int,int)')": [
                        907,
                        908
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'walkInDefaultOrder(RealVectorChangingVisitor,int,int)')": [
                        925,
                        926
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'walkInOptimizedOrder(RealVectorChangingVisitor,int,int)')": [
                        952,
                        953
                    ]
                }
            }
        }
    },
    "4e7d797b1c33397378de21f83a132ecbf1305b10": {
        "authored_data": "2012 Sep 04 03:08",
        "commit.message": "MATH-854: fill the throws clause of all methods.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1380440 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "56a22909a1ef737952329dce5149a5b21fc4c2d7",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/RealVector.java": {
                "old": {
                    "('org.apache.commons.math3.linear#RealVector', None)": [
                        72,
                        73,
                        83,
                        84,
                        94,
                        95,
                        124,
                        125,
                        126,
                        127,
                        128,
                        136,
                        137,
                        138,
                        227,
                        228,
                        229,
                        248,
                        249,
                        250,
                        300,
                        301,
                        302,
                        340,
                        341,
                        360,
                        361,
                        383,
                        384,
                        470,
                        471,
                        472,
                        492,
                        493,
                        667,
                        668,
                        669,
                        670,
                        844,
                        845,
                        846,
                        860,
                        861,
                        862,
                        901,
                        902,
                        940,
                        941,
                        975,
                        976,
                        1014,
                        1015
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'getEntry(int)')": [
                        76
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'setEntry(int,double)')": [
                        87
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'addToEntry(int,double)')": [
                        98
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'getSubVector(int,int)')": [
                        129
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'setSubVector(int,RealVector)')": [
                        139
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'checkVectorDimensions(RealVector)')": [
                        164
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'checkVectorDimensions(int)')": [
                        175
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'checkIndex(int)')": [
                        188
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'checkIndices(int,int)')": [
                        204
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'add(RealVector)')": [
                        230
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'subtract(RealVector)')": [
                        251
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'dotProduct(RealVector)')": [
                        303
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'cosine(RealVector)')": [
                        324
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'ebeDivide(RealVector)')": [
                        353
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'ebeMultiply(RealVector)')": [
                        373
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'getDistance(RealVector)')": [
                        389
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'getL1Distance(RealVector)')": [
                        473
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'getLInfDistance(RealVector)')": [
                        498
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'projection(RealVector)')": [
                        671
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'combine(double,double,RealVector)')": [
                        847
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'combineToSelf(double,double,RealVector)')": [
                        863
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'walkInDefaultOrder(RealVectorPreservingVisitor,int,int)')": [
                        905
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'walkInOptimizedOrder(RealVectorPreservingVisitor,int,int)')": [
                        944
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'walkInDefaultOrder(RealVectorChangingVisitor,int,int)')": [
                        979
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'walkInOptimizedOrder(RealVectorChangingVisitor,int,int)')": [
                        1018
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'equals(Object)')": [
                        1091
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'hashCode')": [
                        1100
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'unmodifiableRealVector(RealVector)')": [
                        1275,
                        1281,
                        1335,
                        1341,
                        1347,
                        1353,
                        1377,
                        1383,
                        1389,
                        1413,
                        1449,
                        1485,
                        1499,
                        1505
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math3.linear#RealVector', None)": [
                        73,
                        83,
                        87,
                        94,
                        124,
                        125,
                        126,
                        128,
                        135,
                        136,
                        138,
                        229,
                        230,
                        231,
                        250,
                        251,
                        252,
                        302,
                        303,
                        304,
                        343,
                        344,
                        357,
                        364,
                        365,
                        378,
                        388,
                        389,
                        475,
                        476,
                        477,
                        498,
                        499,
                        673,
                        674,
                        676,
                        677,
                        852,
                        853,
                        854,
                        869,
                        870,
                        871,
                        911,
                        912,
                        951,
                        952,
                        987,
                        988,
                        1027,
                        1028
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'getEntry(int)')": [
                        76
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'setEntry(int,double)')": [
                        86
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'addToEntry(int,double)')": [
                        97,
                        98
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'getSubVector(int,int)')": [
                        127
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'setSubVector(int,RealVector)')": [
                        137
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'checkVectorDimensions(RealVector)')": [
                        163,
                        164
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'checkVectorDimensions(int)')": [
                        175,
                        176
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'checkIndex(int)')": [
                        189
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'checkIndices(int,int)')": [
                        205,
                        206
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'add(RealVector)')": [
                        232
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'subtract(RealVector)')": [
                        253
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'dotProduct(RealVector)')": [
                        305
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'cosine(RealVector)')": [
                        326,
                        327
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'ebeDivide(RealVector)')": [
                        356
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'ebeMultiply(RealVector)')": [
                        377
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'getDistance(RealVector)')": [
                        394
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'getL1Distance(RealVector)')": [
                        478,
                        479
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'getLInfDistance(RealVector)')": [
                        504,
                        505
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'projection(RealVector)')": [
                        678,
                        679
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'combine(double,double,RealVector)')": [
                        855,
                        856
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'combineToSelf(double,double,RealVector)')": [
                        872,
                        873
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'walkInDefaultOrder(RealVectorPreservingVisitor,int,int)')": [
                        915,
                        916
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'walkInOptimizedOrder(RealVectorPreservingVisitor,int,int)')": [
                        955,
                        956
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'walkInDefaultOrder(RealVectorChangingVisitor,int,int)')": [
                        991,
                        992
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'walkInOptimizedOrder(RealVectorChangingVisitor,int,int)')": [
                        1031,
                        1032
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'equals(Object)')": [
                        1105
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'hashCode')": [
                        1114
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'unmodifiableRealVector(RealVector)')": [
                        1289,
                        1290,
                        1296,
                        1297,
                        1351,
                        1352,
                        1358,
                        1359,
                        1365,
                        1366,
                        1372,
                        1373,
                        1397,
                        1398,
                        1404,
                        1405,
                        1411,
                        1412,
                        1436,
                        1472,
                        1473,
                        1509,
                        1510,
                        1524,
                        1530
                    ]
                }
            }
        }
    },
    "56a22909a1ef737952329dce5149a5b21fc4c2d7": {
        "authored_data": "2012 Sep 03 03:54",
        "commit.message": "MATH-854: populate the throws clause in package o.a.c.m.linear.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1380122 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "9e933debcb82fa645c66d561d2dc4c179390b4e6",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/AbstractFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', None)": [
                        75,
                        447
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'extractField(T)')": [
                        96,
                        117
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'add(FieldMatrix)')": [
                        180
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'subtract(FieldMatrix)')": [
                        197
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'multiply(FieldMatrix)')": [
                        243
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'preMultiply(FieldMatrix)')": [
                        265
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'power(int)')": [
                        270,
                        272
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'getSubMatrix(int,int,int,int)')": [
                        343
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'getSubMatrix(int,int)')": [
                        360
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'copySubMatrix(int,int,int,int,T)')": [
                        385
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'copySubMatrix(int,int,T)')": [
                        426
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'setSubMatrix(T,int,int)')": [
                        448
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'getRowMatrix(int)')": [
                        481
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'setRowMatrix(int,FieldMatrix)')": [
                        494
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'getColumnMatrix(int)')": [
                        510
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'setColumnMatrix(int,FieldMatrix)')": [
                        524
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'setRowVector(int,FieldVector)')": [
                        545
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'setColumnVector(int,FieldVector)')": [
                        564
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'getRow(int)')": [
                        578
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'setRow(int,T)')": [
                        591
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'getColumn(int)')": [
                        604
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'setColumn(int,T)')": [
                        617
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'getTrace')": [
                        668
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'operate(T)')": [
                        682
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'operate(FieldVector)')": [
                        703
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'preMultiply(T)')": [
                        727
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'preMultiply(FieldVector)')": [
                        748
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'walkInColumnOrder(FieldMatrixChangingVisitor,int,int,int,int)')": [
                        862
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'walkInColumnOrder(FieldMatrixPreservingVisitor,int,int,int,int)')": [
                        879
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'checkRowIndex(int)')": [
                        1004
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'checkColumnIndex(int)')": [
                        1017
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'checkSubMatrixIndex(int,int,int,int)')": [
                        1037
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'checkSubMatrixIndex(int,int)')": [
                        1063
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'checkAdditionCompatible(FieldMatrix)')": [
                        1088
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'checkSubtractionCompatible(FieldMatrix)')": [
                        1103
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'checkMultiplicationCompatible(FieldMatrix)')": [
                        1118
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', None)": [
                        76,
                        77,
                        462,
                        463,
                        464,
                        465
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'extractField(T)')": [
                        98,
                        99,
                        120,
                        121
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'add(FieldMatrix)')": [
                        184,
                        185
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'subtract(FieldMatrix)')": [
                        202,
                        203
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'multiply(FieldMatrix)')": [
                        249,
                        250
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'preMultiply(FieldMatrix)')": [
                        272,
                        273
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'power(int)')": [
                        278,
                        279,
                        281
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'getSubMatrix(int,int,int,int)')": [
                        352,
                        353
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'getSubMatrix(int,int)')": [
                        370,
                        371
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'copySubMatrix(int,int,int,int,T)')": [
                        396,
                        397,
                        398
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'copySubMatrix(int,int,T)')": [
                        439,
                        440,
                        441
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'setSubMatrix(T,int,int)')": [
                        466,
                        467,
                        468
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'getRowMatrix(int)')": [
                        501
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'setRowMatrix(int,FieldMatrix)')": [
                        514,
                        515
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'getColumnMatrix(int)')": [
                        531,
                        532
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'setColumnMatrix(int,FieldMatrix)')": [
                        546,
                        547
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'setRowVector(int,FieldVector)')": [
                        568,
                        569
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'setColumnVector(int,FieldVector)')": [
                        588,
                        589,
                        590
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'getRow(int)')": [
                        604
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'setRow(int,T)')": [
                        617
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'getColumn(int)')": [
                        630
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'setColumn(int,T)')": [
                        643,
                        644
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'getTrace')": [
                        695
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'operate(T)')": [
                        709
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'operate(FieldVector)')": [
                        730,
                        731
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'preMultiply(T)')": [
                        755
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'preMultiply(FieldVector)')": [
                        776,
                        777
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'walkInColumnOrder(FieldMatrixChangingVisitor,int,int,int,int)')": [
                        891,
                        892
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'walkInColumnOrder(FieldMatrixPreservingVisitor,int,int,int,int)')": [
                        909,
                        910
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'checkRowIndex(int)')": [
                        1035
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'checkColumnIndex(int)')": [
                        1048,
                        1049
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'checkSubMatrixIndex(int,int,int,int)')": [
                        1069,
                        1070
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'checkSubMatrixIndex(int,int)')": [
                        1096,
                        1097
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'checkAdditionCompatible(FieldMatrix)')": [
                        1122,
                        1123
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'checkSubtractionCompatible(FieldMatrix)')": [
                        1138,
                        1139
                    ],
                    "('org.apache.commons.math3.linear#AbstractFieldMatrix', 'checkMultiplicationCompatible(FieldMatrix)')": [
                        1154,
                        1155
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/ConjugateGradient.java": {
                "old": {
                    "('org.apache.commons.math3.linear#ConjugateGradient', None)": [
                        123,
                        139
                    ],
                    "('org.apache.commons.math3.linear#ConjugateGradient', 'solveInPlace(RealLinearOperator,RealLinearOperator,RealVector,RealVector)')": [
                        142,
                        143,
                        144
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#ConjugateGradient', None)": [
                        121,
                        124,
                        125,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146
                    ],
                    "('org.apache.commons.math3.linear#ConjugateGradient', 'solveInPlace(RealLinearOperator,RealLinearOperator,RealVector,RealVector)')": [
                        149,
                        150,
                        151,
                        152,
                        153,
                        154
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java": {
                "old": {
                    "('org.apache.commons.math3.linear#EigenDecomposition', None)": [
                        114,
                        135
                    ],
                    "('org.apache.commons.math3.linear#EigenDecomposition', 'findEigenVectorsFromSchur(SchurTransformer)')": [
                        764
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#EigenDecomposition', None)": [
                        114,
                        115,
                        131,
                        132,
                        138,
                        139
                    ],
                    "('org.apache.commons.math3.linear#EigenDecomposition', 'findEigenVectorsFromSchur(SchurTransformer)')": [
                        768,
                        769
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/FieldMatrix.java": {
                "old": {
                    "(None, None)": [
                        48,
                        49,
                        52,
                        66,
                        67,
                        68,
                        69,
                        76,
                        77,
                        78,
                        79,
                        102,
                        103,
                        104,
                        105,
                        112,
                        113,
                        114,
                        115,
                        116,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        159,
                        160,
                        161,
                        162,
                        174,
                        175,
                        178,
                        179,
                        189,
                        190,
                        191,
                        193,
                        227,
                        235,
                        236,
                        237,
                        238,
                        247,
                        248,
                        252,
                        260,
                        261,
                        262,
                        263,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        285,
                        286,
                        287,
                        288,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        310,
                        311,
                        312,
                        313,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        334,
                        335,
                        336,
                        337,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        358,
                        359,
                        360,
                        361,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        382,
                        383,
                        384,
                        385,
                        393,
                        394,
                        397,
                        406,
                        407,
                        410,
                        419,
                        420,
                        423,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        473,
                        474,
                        475,
                        476,
                        532,
                        533,
                        549,
                        561,
                        562,
                        578,
                        634,
                        635,
                        651,
                        663,
                        664,
                        680,
                        733,
                        734,
                        750,
                        761,
                        762,
                        778
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        56,
                        57,
                        60,
                        61,
                        75,
                        76,
                        77,
                        78,
                        85,
                        86,
                        87,
                        88,
                        111,
                        112,
                        113,
                        114,
                        115,
                        122,
                        123,
                        124,
                        125,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        190,
                        191,
                        192,
                        193,
                        194,
                        197,
                        198,
                        199,
                        200,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        218,
                        219,
                        220,
                        254,
                        255,
                        256,
                        264,
                        265,
                        266,
                        275,
                        279,
                        280,
                        288,
                        289,
                        290,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        312,
                        313,
                        314,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        336,
                        337,
                        338,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        359,
                        360,
                        361,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        382,
                        383,
                        384,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        405,
                        406,
                        407,
                        415,
                        418,
                        427,
                        430,
                        439,
                        442,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        496,
                        497,
                        498,
                        499,
                        500,
                        556,
                        572,
                        573,
                        585,
                        601,
                        602,
                        658,
                        659,
                        660,
                        676,
                        677,
                        689,
                        690,
                        691,
                        707,
                        708,
                        761,
                        762,
                        763,
                        779,
                        780,
                        791,
                        792,
                        793,
                        809,
                        810
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/MatrixUtils.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'createRealMatrix(double)')": [
                        127
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'createFieldMatrix(T)')": [
                        155
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'createRealVector(double)')": [
                        247
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'createFieldVector(T)')": [
                        264
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'createRowRealMatrix(double)')": [
                        283
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'createRowFieldMatrix(T)')": [
                        306
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'createColumnRealMatrix(double)')": [
                        330
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'createColumnFieldMatrix(T)')": [
                        353
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkMatrixIndex(AnyMatrix,int,int)')": [
                        378
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkRowIndex(AnyMatrix,int)')": [
                        390
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkColumnIndex(AnyMatrix,int)')": [
                        405
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkSubMatrixIndex(AnyMatrix,int,int,int,int)')": [
                        427
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkSubMatrixIndex(AnyMatrix,int,int)')": [
                        460
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', None)": [
                        487,
                        488,
                        502,
                        503,
                        517,
                        518,
                        835,
                        836,
                        837,
                        875,
                        876,
                        877
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkAdditionCompatible(AnyMatrix,AnyMatrix)')": [
                        489
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkSubtractionCompatible(AnyMatrix,AnyMatrix)')": [
                        504
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkMultiplicationCompatible(AnyMatrix,AnyMatrix)')": [
                        519
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'solveLowerTriangularSystem(RealMatrix,RealVector)')": [
                        838,
                        840,
                        845,
                        846,
                        847
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'solveUpperTriangularSystem(RealMatrix,RealVector)')": [
                        878,
                        880,
                        885,
                        886,
                        887
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#MatrixUtils', None)": [
                        124,
                        501,
                        502,
                        503,
                        518,
                        519,
                        520,
                        535,
                        536,
                        537,
                        856,
                        857,
                        858,
                        859,
                        860,
                        861,
                        900,
                        901,
                        902,
                        903,
                        904,
                        905,
                        906
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'createRealMatrix(double)')": [
                        127,
                        128,
                        129
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'createFieldMatrix(T)')": [
                        157,
                        158
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'createRealVector(double)')": [
                        250,
                        251
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'createFieldVector(T)')": [
                        268,
                        269
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'createRowRealMatrix(double)')": [
                        288,
                        289
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'createRowFieldMatrix(T)')": [
                        312,
                        313
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'createColumnRealMatrix(double)')": [
                        337,
                        338
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'createColumnFieldMatrix(T)')": [
                        361,
                        362
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkMatrixIndex(AnyMatrix,int,int)')": [
                        387,
                        388
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkRowIndex(AnyMatrix,int)')": [
                        400,
                        401
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkColumnIndex(AnyMatrix,int)')": [
                        416,
                        417
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkSubMatrixIndex(AnyMatrix,int,int,int,int)')": [
                        439,
                        440
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkSubMatrixIndex(AnyMatrix,int,int)')": [
                        473,
                        474
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkAdditionCompatible(AnyMatrix,AnyMatrix)')": [
                        504,
                        505
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkSubtractionCompatible(AnyMatrix,AnyMatrix)')": [
                        521,
                        522
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkMultiplicationCompatible(AnyMatrix,AnyMatrix)')": [
                        538,
                        539,
                        540
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'solveLowerTriangularSystem(RealMatrix,RealVector)')": [
                        862,
                        863,
                        864,
                        866,
                        871,
                        872
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'solveUpperTriangularSystem(RealMatrix,RealVector)')": [
                        907,
                        908,
                        909,
                        911,
                        916,
                        917
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java": {
                "old": {
                    "('org.apache.commons.math3.linear#OpenMapRealVector', 'unitVector')": [
                        643
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealVector', 'unitize')": [
                        651
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#OpenMapRealVector', 'unitVector')": [
                        643
                    ],
                    "('org.apache.commons.math3.linear#OpenMapRealVector', 'unitize')": [
                        651
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/RealVector.java": {
                "old": {
                    "('org.apache.commons.math3.linear#RealVector', 'cosine(RealVector)')": [
                        324
                    ],
                    "('org.apache.commons.math3.linear#RealVector', None)": [
                        667,
                        668,
                        669,
                        670,
                        713,
                        714,
                        727,
                        728,
                        729
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'projection(RealVector)')": [
                        671
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'unitVector')": [
                        715
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'unitize')": [
                        730
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'unmodifiableRealVector(RealVector)')": [
                        1354,
                        1396
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#RealVector', 'cosine(RealVector)')": [
                        324
                    ],
                    "('org.apache.commons.math3.linear#RealVector', None)": [
                        667,
                        668,
                        669,
                        670,
                        713,
                        714,
                        727,
                        728
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'projection(RealVector)')": [
                        671
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'unitVector')": [
                        715
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'unitize')": [
                        729
                    ],
                    "('org.apache.commons.math3.linear#RealVector', 'unmodifiableRealVector(RealVector)')": [
                        1353,
                        1395
                    ]
                }
            }
        }
    },
    "9e933debcb82fa645c66d561d2dc4c179390b4e6": {
        "authored_data": "2012 Sep 02 14:22",
        "commit.message": "Populate throws declarations for geometry package.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1379977 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "e8e94f59360f776d638bc31abed86cc06a1d17a2",
        "changes": {
            "src/main/java/org/apache/commons/math3/geometry/Space.java": {
                "old": {
                    "(None, None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        38,
                        39,
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/Vector.java": {
                "old": {
                    "(None, None)": [
                        94,
                        96
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        96,
                        98
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1D.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.oned#Vector1D', 'normalize')": [
                        186
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.oned#Vector1D', 'normalize')": [
                        186
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.oned#Vector1DFormat', 'parse(String)')": [
                        112
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.oned#Vector1DFormat', 'parse(String)')": [
                        112
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#Line', None)": [
                        54
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Line', 'reset(Vector3D,Vector3D)')": [
                        73
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Line', 'revert')": [
                        87
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Line', 'isSimilarTo(Line)')": [
                        145,
                        146
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        21
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Line', None)": [
                        56,
                        94,
                        158
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Line', 'reset(Vector3D,Vector3D)')": [
                        75
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Line', 'revert')": [
                        89,
                        90,
                        91,
                        92,
                        93
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Line', 'isSimilarTo(Line)')": [
                        152,
                        153,
                        154,
                        155,
                        156,
                        157
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Plane.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Plane', None)": [
                        55,
                        66,
                        80,
                        111
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Plane', 'reset(Vector3D,Vector3D)')": [
                        112
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Plane', 'setNormal(Vector3D)')": [
                        136
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Plane', 'setFrame')": [
                        147,
                        148,
                        149
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Plane', 'isSimilarTo(Plane)')": [
                        258,
                        259,
                        260
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Plane', 'rotate(Vector3D,Rotation)')": [
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Plane', 'translate(Vector3D)')": [
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Plane', 'intersection(Plane)')": [
                        322,
                        323,
                        324,
                        325,
                        326,
                        327
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        26
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Plane', None)": [
                        57,
                        68,
                        82,
                        83,
                        114,
                        115,
                        158,
                        274,
                        298,
                        320,
                        359
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Plane', 'reset(Vector3D,Vector3D)')": [
                        116
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Plane', 'setNormal(Vector3D)')": [
                        140
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Plane', 'setFrame')": [
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Plane', 'isSimilarTo(Plane)')": [
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Plane', 'rotate(Vector3D,Rotation)')": [
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Plane', 'translate(Vector3D)')": [
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Plane', 'intersection(Plane)')": [
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#PolyhedronsSet', None)": [
                        94,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        348,
                        349,
                        350,
                        357,
                        417,
                        418
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PolyhedronsSet', None)": [
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        129,
                        373,
                        374,
                        375,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PolyhedronsSet', 'buildBoundary(double,double,double,double,double,double)')": [
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#Rotation', None)": [
                        174,
                        269,
                        273,
                        325,
                        326,
                        327,
                        331,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        24
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Rotation', None)": [
                        176,
                        271,
                        275,
                        327,
                        328,
                        329,
                        333,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLine', None)": [
                        52,
                        59
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLine', 'buildIntervalSet(Vector3D,Vector3D)')": [
                        130
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLine', None)": [
                        52,
                        54,
                        55,
                        61,
                        63,
                        133
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLine', 'buildIntervalSet(Vector3D,Vector3D)')": [
                        135,
                        136
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3D.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3D', 'normalize')": [
                        296
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3D', 'orthogonal')": [
                        319
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3D', 'angle(Vector3D,Vector3D)')": [
                        349
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3D', 'normalize')": [
                        296
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3D', 'orthogonal')": [
                        319
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3D', 'angle(Vector3D,Vector3D)')": [
                        349
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormat', 'parse(String)')": [
                        127
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormat', 'parse(String)')": [
                        127
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2D.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.twod#Vector2D', 'normalize')": [
                        224
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.twod#Vector2D', 'normalize')": [
                        224
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.twod#Vector2DFormat', 'parse(String)')": [
                        115
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.twod#Vector2DFormat', 'parse(String)')": [
                        115
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/geometry/euclidean/threed/LineTest.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#LineTest', 'testContains')": [
                        28
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#LineTest', 'testSimilar')": [
                        42
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#LineTest', 'testPointDistance')": [
                        52
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#LineTest', 'testLineDistance')": [
                        59
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#LineTest', 'testClosest')": [
                        85
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#LineTest', 'testIntersection')": [
                        111
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#LineTest', 'testContains')": [
                        30
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#LineTest', 'testSimilar')": [
                        44
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#LineTest', 'testPointDistance')": [
                        54
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#LineTest', 'testLineDistance')": [
                        61
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#LineTest', 'testClosest')": [
                        87
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#LineTest', 'testIntersection')": [
                        113
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PlaneTest.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testContains')": [
                        29
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testOffset')": [
                        37
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testPoint')": [
                        51
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testThreePoints')": [
                        57
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testRotate')": [
                        68
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testTranslate')": [
                        93
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testIntersection')": [
                        117
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testIntersection2')": [
                        128
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testIntersection3')": [
                        140
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testSimilar')": [
                        152
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testContains')": [
                        31
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testOffset')": [
                        39
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testPoint')": [
                        53
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testThreePoints')": [
                        59
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testRotate')": [
                        70
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testTranslate')": [
                        95
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testIntersection')": [
                        119
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testIntersection2')": [
                        130
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testIntersection3')": [
                        142
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PlaneTest', 'testSimilar')": [
                        154
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSetTest.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#PolyhedronsSetTest', 'testTetrahedron')": [
                        77
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PolyhedronsSetTest', 'testIsometry')": [
                        112
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PolyhedronsSetTest', 'testIssue780')": [
                        237
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PolyhedronsSetTest', 'testTetrahedron')": [
                        79
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PolyhedronsSetTest', 'testIsometry')": [
                        114
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PolyhedronsSetTest', 'testIssue780')": [
                        239
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/geometry/euclidean/threed/RotationTest.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testAxisAngle')": [
                        54
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testVectorOnePair')": [
                        93
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', None)": [
                        105
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testVectorTwoPairs')": [
                        112
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testQuaternion')": [
                        385
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testCompose')": [
                        407
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testComposeInverse')": [
                        425
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testArray')": [
                        443
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testApplyInverseTo')": [
                        468
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testIssue639')": [
                        507
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testIssue801')": [
                        522
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testAxisAngle')": [
                        54
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testVectorOnePair')": [
                        93
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', None)": [
                        105
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testVectorTwoPairs')": [
                        112
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testQuaternion')": [
                        385
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testCompose')": [
                        407
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testComposeInverse')": [
                        425
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testArray')": [
                        443
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testApplyInverseTo')": [
                        468
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testIssue639')": [
                        507
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#RotationTest', 'testIssue801')": [
                        522
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/geometry/euclidean/threed/SubLineTest.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testEndPoints')": [
                        30
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testNoEndPoints')": [
                        42
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testNoSegments')": [
                        61
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testSeveralSegments')": [
                        69
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testHalfInfiniteNeg')": [
                        78
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testHalfInfinitePos')": [
                        93
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testIntersectionInsideInside')": [
                        108
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testIntersectionInsideBoundary')": [
                        116
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testIntersectionInsideOutside')": [
                        124
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testIntersectionBoundaryBoundary')": [
                        132
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testIntersectionBoundaryOutside')": [
                        140
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testIntersectionOutsideOutside')": [
                        148
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testEndPoints')": [
                        31
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testNoEndPoints')": [
                        43
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testNoSegments')": [
                        62
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testSeveralSegments')": [
                        70
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testHalfInfiniteNeg')": [
                        79
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testHalfInfinitePos')": [
                        94
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testIntersectionInsideInside')": [
                        109
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testIntersectionInsideBoundary')": [
                        117
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testIntersectionInsideOutside')": [
                        125
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testIntersectionBoundaryBoundary')": [
                        133
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testIntersectionBoundaryOutside')": [
                        141
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#SubLineTest', 'testIntersectionOutsideOutside')": [
                        149
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DFormatAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseSimpleNoDecimals')": [
                        163
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseSimpleWithDecimals')": [
                        184
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseSimpleWithDecimalsTrunc')": [
                        196
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseNegativeX')": [
                        208
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseNegativeY')": [
                        220
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseNegativeZ')": [
                        232
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseNegativeAll')": [
                        244
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseZeroX')": [
                        256
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseNonDefaultSetting')": [
                        268
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseNan')": [
                        280
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParsePositiveInfinity')": [
                        287
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseNegativeInfinity')": [
                        294
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseSimpleNoDecimals')": [
                        164
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseSimpleWithDecimals')": [
                        185
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseSimpleWithDecimalsTrunc')": [
                        197
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseNegativeX')": [
                        209
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseNegativeY')": [
                        221
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseNegativeZ')": [
                        233
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseNegativeAll')": [
                        245
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseZeroX')": [
                        257
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseNonDefaultSetting')": [
                        269
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseNan')": [
                        281
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParsePositiveInfinity')": [
                        288
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DFormatAbstractTest', 'testParseNegativeInfinity')": [
                        295
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/geometry/euclidean/threed/Vector3DTest.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DTest', 'testConstructors')": [
                        29
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DTest', 'testWrongDimension')": [
                        50
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DTest', 'testAngularSeparation')": [
                        194
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DTest', 'testNormalize')": [
                        205
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DTest', 'testOrthogonal')": [
                        216
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DTest', 'testAngle')": [
                        232
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DTest', 'testConstructors')": [
                        29
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DTest', 'testWrongDimension')": [
                        50
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DTest', 'testAngularSeparation')": [
                        194
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DTest', 'testNormalize')": [
                        205
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DTest', 'testOrthogonal')": [
                        216
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#Vector3DTest', 'testAngle')": [
                        232
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/geometry/euclidean/twod/LineTest.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.twod#LineTest', 'testTransform')": [
                        101
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.twod#LineTest', 'testTransform')": [
                        102
                    ]
                }
            }
        }
    },
    "e8e94f59360f776d638bc31abed86cc06a1d17a2": {
        "authored_data": "2012 Sep 02 14:21",
        "commit.message": "populate throws declaration for ODE package\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1379975 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "46d95b23ff8852c34e66d057387ef7b3b212cec6",
        "changes": {
            "src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java": {
                "old": {
                    "(None, None)": [
                        32,
                        33
                    ],
                    "('org.apache.commons.math3.ode#AbstractIntegrator', 'addEventHandler(EventHandler,double,double,int)')": [
                        128,
                        129,
                        130
                    ],
                    "('org.apache.commons.math3.ode#AbstractIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        213
                    ],
                    "('org.apache.commons.math3.ode#AbstractIntegrator', None)": [
                        249,
                        250,
                        251,
                        254,
                        286
                    ],
                    "('org.apache.commons.math3.ode#AbstractIntegrator', 'computeDerivatives(double,double,double)')": [
                        263
                    ],
                    "('org.apache.commons.math3.ode#AbstractIntegrator', 'acceptStep(AbstractStepInterpolator,double,double,double)')": [
                        291
                    ],
                    "('org.apache.commons.math3.ode#AbstractIntegrator', 'sanityChecks(ExpandableStatefulODE,double)')": [
                        402
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        34
                    ],
                    "('org.apache.commons.math3.ode#AbstractIntegrator', 'addEventHandler(EventHandler,double,double,int)')": [
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134
                    ],
                    "('org.apache.commons.math3.ode#AbstractIntegrator', None)": [
                        135,
                        255,
                        256,
                        257,
                        258,
                        259,
                        262,
                        263,
                        270,
                        296,
                        297,
                        298,
                        299,
                        413,
                        414
                    ],
                    "('org.apache.commons.math3.ode#AbstractIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        218,
                        219
                    ],
                    "('org.apache.commons.math3.ode#AbstractIntegrator', 'computeDerivatives(double,double,double)')": [
                        273
                    ],
                    "('org.apache.commons.math3.ode#AbstractIntegrator', 'acceptStep(AbstractStepInterpolator,double,double,double)')": [
                        304
                    ],
                    "('org.apache.commons.math3.ode#AbstractIntegrator', 'sanityChecks(ExpandableStatefulODE,double)')": [
                        417
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/AbstractParameterizable.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math3.ode#AbstractParameterizable', None)": [
                        71
                    ],
                    "('org.apache.commons.math3.ode#AbstractParameterizable', 'complainIfNotSupported(String)')": [
                        75,
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.ode#AbstractParameterizable', None)": [
                        68
                    ],
                    "('org.apache.commons.math3.ode#AbstractParameterizable', 'complainIfNotSupported(String)')": [
                        72,
                        74
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/ContinuousOutputModel.java": {
                "old": {
                    "('org.apache.commons.math3.ode#ContinuousOutputModel', 'append(ContinuousOutputModel)')": [
                        128
                    ],
                    "('org.apache.commons.math3.ode#ContinuousOutputModel', None)": [
                        183,
                        329
                    ],
                    "('org.apache.commons.math3.ode#ContinuousOutputModel', 'handleStep(StepInterpolator,boolean)')": [
                        184
                    ],
                    "('org.apache.commons.math3.ode#ContinuousOutputModel', 'getInterpolatedState')": [
                        330
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math3.ode#ContinuousOutputModel', None)": [
                        127,
                        128,
                        186,
                        187,
                        188,
                        335,
                        336
                    ],
                    "('org.apache.commons.math3.ode#ContinuousOutputModel', 'append(ContinuousOutputModel)')": [
                        131
                    ],
                    "('org.apache.commons.math3.ode#ContinuousOutputModel', 'handleStep(StepInterpolator,boolean)')": [
                        189,
                        190
                    ],
                    "('org.apache.commons.math3.ode#ContinuousOutputModel', 'getInterpolatedState')": [
                        337
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/ExpandableStatefulODE.java": {
                "old": {
                    "('org.apache.commons.math3.ode#ExpandableStatefulODE', None)": [
                        110
                    ],
                    "('org.apache.commons.math3.ode#ExpandableStatefulODE', 'computeDerivatives(double,double,double)')": [
                        111
                    ],
                    "('org.apache.commons.math3.ode#ExpandableStatefulODE', 'getCompleteState')": [
                        282
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math3.ode#ExpandableStatefulODE', None)": [
                        111,
                        112,
                        113
                    ],
                    "('org.apache.commons.math3.ode#ExpandableStatefulODE', 'computeDerivatives(double,double,double)')": [
                        114,
                        115
                    ],
                    "('org.apache.commons.math3.ode#ExpandableStatefulODE', 'getCompleteState')": [
                        286
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/FirstOrderDifferentialEquations.java": {
                "old": {
                    "(None, None)": [
                        61
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        63,
                        64,
                        66,
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/FirstOrderIntegrator.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        55,
                        56,
                        57,
                        61
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        57,
                        58,
                        59,
                        60,
                        64,
                        65
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java": {
                "old": {
                    "('org.apache.commons.math3.ode#JacobianMatrices', None)": [
                        99,
                        100,
                        104,
                        119,
                        122,
                        123,
                        158,
                        186,
                        209,
                        210,
                        260,
                        349,
                        385,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        399,
                        400,
                        401,
                        402,
                        407,
                        408,
                        433,
                        444,
                        449,
                        450
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatrices', 'registerVariationalEquations(ExpandableStatefulODE)')": [
                        163,
                        170
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatrices', 'setParameterStep(String,double)')": [
                        211,
                        221
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatrices', 'setInitialParameterJacobian(String,double)')": [
                        263,
                        281
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        26,
                        27,
                        492,
                        493,
                        494,
                        495
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatrices', None)": [
                        102,
                        103,
                        107,
                        124,
                        159,
                        160,
                        161,
                        189,
                        212,
                        213,
                        264,
                        265,
                        354,
                        355,
                        391,
                        392,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        409,
                        411,
                        415,
                        417,
                        439,
                        440,
                        443,
                        444,
                        447,
                        448,
                        449,
                        458,
                        459,
                        464,
                        465,
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatrices', 'registerVariationalEquations(ExpandableStatefulODE)')": [
                        166,
                        173
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatrices', 'setParameterStep(String,double)')": [
                        214,
                        215,
                        225
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatrices', 'setInitialParameterJacobian(String,double)')": [
                        268,
                        286
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/MainStateJacobianProvider.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        36,
                        37,
                        39,
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math3.ode#MultistepIntegrator', None)": [
                        112,
                        116,
                        117,
                        119,
                        207,
                        338,
                        419
                    ],
                    "('org.apache.commons.math3.ode#MultistepIntegrator', 'start(double,double,double)')": [
                        210
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math3.ode#MultistepIntegrator', None)": [
                        109,
                        115,
                        116,
                        120,
                        121,
                        123,
                        211,
                        212,
                        213,
                        214,
                        346,
                        347,
                        428,
                        429
                    ],
                    "('org.apache.commons.math3.ode#MultistepIntegrator', 'start(double,double,double)')": [
                        217,
                        218
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/ParameterJacobianProvider.java": {
                "old": {
                    "(None, None)": [
                        19,
                        30,
                        38,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        31,
                        32,
                        33,
                        41,
                        42,
                        43,
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/ParameterJacobianWrapper.java": {
                "old": {
                    "('org.apache.commons.math3.ode#ParameterJacobianWrapper', 'computeParameterJacobian(double,double,double,String,double)')": [
                        74,
                        77,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        87
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        23,
                        24,
                        25,
                        26,
                        27
                    ],
                    "('org.apache.commons.math3.ode#ParameterJacobianWrapper', 'computeParameterJacobian(double,double,double,String,double)')": [
                        80,
                        81,
                        84,
                        85,
                        86,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/ParameterizedODE.java": {
                "old": {
                    "(None, None)": [
                        31,
                        33,
                        38,
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        32,
                        34,
                        39,
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/ParameterizedWrapper.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.math3.ode#ParameterizedWrapper', 'computeDerivatives(double,double,double)')": [
                        55
                    ],
                    "('org.apache.commons.math3.ode#ParameterizedWrapper', 'getParameter(String)')": [
                        71,
                        73
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.math3.ode#ParameterizedWrapper', None)": [
                        54,
                        55
                    ],
                    "('org.apache.commons.math3.ode#ParameterizedWrapper', 'computeDerivatives(double,double,double)')": [
                        57,
                        58
                    ],
                    "('org.apache.commons.math3.ode#ParameterizedWrapper', 'getParameter(String)')": [
                        74,
                        76
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/SecondaryEquations.java": {
                "old": {
                    "(None, None)": [
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        55,
                        56,
                        59,
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/events/EventState.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27
                    ],
                    "('org.apache.commons.math3.ode.events#EventState', None)": [
                        151,
                        185
                    ],
                    "('org.apache.commons.math3.ode.events#EventState', 'reinitializeBegin(StepInterpolator)')": [
                        152
                    ],
                    "('org.apache.commons.math3.ode.events#EventState', 'evaluateStep(StepInterpolator)')": [
                        188,
                        189,
                        201,
                        202,
                        203
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        379,
                        380,
                        381,
                        382
                    ],
                    "('org.apache.commons.math3.ode.events#EventState', None)": [
                        151,
                        152,
                        153,
                        188,
                        189,
                        190,
                        290,
                        291,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378
                    ],
                    "('org.apache.commons.math3.ode.events#EventState', 'reinitializeBegin(StepInterpolator)')": [
                        154,
                        155
                    ],
                    "('org.apache.commons.math3.ode.events#EventState', 'evaluateStep(StepInterpolator)')": [
                        193,
                        194,
                        195,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        288,
                        289
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsBashforthIntegrator', None)": [
                        156,
                        162
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsBashforthIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        192
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsBashforthIntegrator', None)": [
                        158,
                        164
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsBashforthIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        194,
                        195
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsIntegrator.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsIntegrator', None)": [
                        50,
                        56,
                        90
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsIntegrator', None)": [
                        52,
                        58,
                        92,
                        93
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsMoultonIntegrator', None)": [
                        172,
                        178
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsMoultonIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        209
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsMoultonIntegrator', None)": [
                        174,
                        180
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsMoultonIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        211,
                        212
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/nonstiff/AdaptiveStepsizeIntegrator.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdaptiveStepsizeIntegrator', 'initializeStep(boolean,int,double,double,double,double,double,double)')": [
                        248
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdaptiveStepsizeIntegrator', None)": [
                        344
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdaptiveStepsizeIntegrator', None)": [
                        245,
                        246,
                        347,
                        348
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdaptiveStepsizeIntegrator', 'initializeStep(boolean,int,double,double,double,double,double,double)')": [
                        250,
                        251
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853StepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        316
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853StepInterpolator', 'doFinalize')": [
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853StepInterpolator', 'writeExternal(ObjectOutput)')": [
                        452,
                        453
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853StepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        319,
                        320
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853StepInterpolator', 'doFinalize')": [
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853StepInterpolator', None)": [
                        451
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853StepInterpolator', 'writeExternal(ObjectOutput)')": [
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EmbeddedRungeKuttaIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        192
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EmbeddedRungeKuttaIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        194,
                        195
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegrator', 'tryStep(double,double,double,int,double,double,double,double,double)')": [
                        457
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        545
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegrator', None)": [
                        455,
                        456
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegrator', 'tryStep(double,double,double,int,double,double,double,double,double)')": [
                        461,
                        462
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        550,
                        551
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#RungeKuttaIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        94
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#RungeKuttaIntegrator', 'integrate(ExpandableStatefulODE,double)')": [
                        96,
                        97
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'copy')": [
                        265
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        396
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', None)": [
                        399,
                        480,
                        491
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'evaluateCompleteInterpolatedState')": [
                        400
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'getInterpolatedState')": [
                        411,
                        413,
                        414
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'getInterpolatedDerivatives')": [
                        419,
                        421,
                        422
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'getInterpolatedSecondaryState(int)')": [
                        427,
                        429,
                        430
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'getInterpolatedSecondaryDerivatives(int)')": [
                        435,
                        437,
                        438
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'finalizeStep')": [
                        481
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'doFinalize')": [
                        492
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'writeBaseExternal(ObjectOutput)')": [
                        540,
                        541
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'copy')": [
                        268
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', None)": [
                        397,
                        401,
                        404,
                        405,
                        507,
                        508,
                        509,
                        520,
                        521,
                        577
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        400
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'evaluateCompleteInterpolatedState')": [
                        406,
                        407
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'getInterpolatedState')": [
                        418,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'getInterpolatedDerivatives')": [
                        431,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'getInterpolatedSecondaryState(int)')": [
                        444,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'getInterpolatedSecondaryDerivatives(int)')": [
                        457,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'finalizeStep')": [
                        510
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'doFinalize')": [
                        522
                    ],
                    "('org.apache.commons.math3.ode.sampling#AbstractStepInterpolator', 'writeBaseExternal(ObjectOutput)')": [
                        570,
                        571,
                        572,
                        573,
                        574,
                        575,
                        576
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/sampling/NordsieckStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math3.ode.sampling#NordsieckStepInterpolator', None)": [
                        178
                    ],
                    "('org.apache.commons.math3.ode.sampling#NordsieckStepInterpolator', 'getInterpolatedStateVariation')": [
                        179
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math3.ode.sampling#NordsieckStepInterpolator', None)": [
                        179,
                        180
                    ],
                    "('org.apache.commons.math3.ode.sampling#NordsieckStepInterpolator', 'getInterpolatedStateVariation')": [
                        181
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/sampling/StepHandler.java": {
                "old": {
                    "(None, None)": [
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        70,
                        71,
                        73,
                        74
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/sampling/StepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        91,
                        102,
                        119,
                        136,
                        156
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        92,
                        94,
                        104,
                        106,
                        122,
                        124,
                        140,
                        142,
                        161,
                        162,
                        164
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java": {
                "old": {
                    "('org.apache.commons.math3.ode.sampling#StepNormalizer', None)": [
                        199,
                        285
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizer', 'handleStep(StepInterpolator,boolean)')": [
                        200
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizer', 'storeStep(StepInterpolator,double)')": [
                        286
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizer', None)": [
                        200,
                        201,
                        202,
                        289,
                        290,
                        291
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizer', 'handleStep(StepInterpolator,boolean)')": [
                        203,
                        204
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizer', 'storeStep(StepInterpolator,double)')": [
                        292,
                        293
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/ContinuousOutputModelTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode#ContinuousOutputModelTest', 'testBoundaries')": [
                        40
                    ],
                    "('org.apache.commons.math3.ode#ContinuousOutputModelTest', 'testRandomAccess')": [
                        52
                    ],
                    "('org.apache.commons.math3.ode#ContinuousOutputModelTest', 'testModelsMerging')": [
                        81
                    ],
                    "('org.apache.commons.math3.ode#ContinuousOutputModelTest', 'testErrorConditions')": [
                        131
                    ],
                    "('org.apache.commons.math3.ode#ContinuousOutputModelTest', 'checkAppendError(ContinuousOutputModel,double,double,double)')": [
                        151
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26
                    ],
                    "('org.apache.commons.math3.ode#ContinuousOutputModelTest', 'testBoundaries')": [
                        45
                    ],
                    "('org.apache.commons.math3.ode#ContinuousOutputModelTest', 'testRandomAccess')": [
                        57
                    ],
                    "('org.apache.commons.math3.ode#ContinuousOutputModelTest', 'testModelsMerging')": [
                        86
                    ],
                    "('org.apache.commons.math3.ode#ContinuousOutputModelTest', 'testErrorConditions')": [
                        136
                    ],
                    "('org.apache.commons.math3.ode#ContinuousOutputModelTest', 'checkAppendError(ContinuousOutputModel,double,double,double)')": [
                        156,
                        157
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/FirstOrderConverterTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math3.ode#FirstOrderConverterTest', 'testDecreasingSteps')": [
                        40
                    ],
                    "('org.apache.commons.math3.ode#FirstOrderConverterTest', 'testSmallStep')": [
                        57
                    ],
                    "('org.apache.commons.math3.ode#FirstOrderConverterTest', 'testBigStep')": [
                        64
                    ],
                    "('org.apache.commons.math3.ode#FirstOrderConverterTest', 'integrateWithSpecifiedStep(double,double,double,double)')": [
                        97,
                        98
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math3.ode#FirstOrderConverterTest', 'testDecreasingSteps')": [
                        42,
                        43
                    ],
                    "('org.apache.commons.math3.ode#FirstOrderConverterTest', 'testSmallStep')": [
                        60,
                        61
                    ],
                    "('org.apache.commons.math3.ode#FirstOrderConverterTest', 'testBigStep')": [
                        68,
                        69
                    ],
                    "('org.apache.commons.math3.ode#FirstOrderConverterTest', 'integrateWithSpecifiedStep(double,double,double,double)')": [
                        102
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/JacobianMatricesTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode#JacobianMatricesTest', 'testLowAccuracyExternalDifferentiation')": [
                        29,
                        30
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatricesTest', 'testHighAccuracyExternalDifferentiation')": [
                        60
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatricesTest', 'testInternalDifferentiation')": [
                        87
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatricesTest', 'testAnalyticalDifferentiation')": [
                        129
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatricesTest', 'testFinalResult')": [
                        166
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatricesTest', 'testParameterizable')": [
                        219,
                        225,
                        226,
                        227,
                        233,
                        234,
                        236,
                        238,
                        239,
                        240,
                        265,
                        271
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatricesTest', None)": [
                        311,
                        312,
                        313,
                        344,
                        351,
                        411,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        513,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        553,
                        554,
                        555,
                        559,
                        564,
                        565,
                        570
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatricesTest', 'testLowAccuracyExternalDifferentiation')": [
                        34,
                        35,
                        36,
                        37
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatricesTest', 'testHighAccuracyExternalDifferentiation')": [
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatricesTest', 'testInternalDifferentiation')": [
                        96,
                        97,
                        98,
                        99
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatricesTest', 'testAnalyticalDifferentiation')": [
                        141,
                        142,
                        143,
                        144
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatricesTest', 'testFinalResult')": [
                        181,
                        182,
                        183,
                        184
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatricesTest', 'testParameterizable')": [
                        237,
                        238,
                        239,
                        240,
                        251,
                        252,
                        254,
                        255,
                        256,
                        258,
                        259,
                        260,
                        285,
                        291
                    ],
                    "('org.apache.commons.math3.ode#JacobianMatricesTest', None)": [
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        368,
                        375,
                        435,
                        436,
                        494,
                        523,
                        524,
                        525,
                        526,
                        527,
                        531,
                        536,
                        537,
                        538,
                        539,
                        544
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/TestProblemHandler.java": {
                "old": {
                    "('org.apache.commons.math3.ode#TestProblemHandler', 'handleStep(StepInterpolator,boolean)')": [
                        71
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math3.ode#TestProblemHandler', 'handleStep(StepInterpolator,boolean)')": [
                        72
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/events/EventStateTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.events#EventStateTest', 'closeEvents')": [
                        33
                    ],
                    "('org.apache.commons.math3.ode.events#EventStateTest', 'testIssue695')": [
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25
                    ],
                    "('org.apache.commons.math3.ode.events#EventStateTest', 'closeEvents')": [
                        37
                    ],
                    "('org.apache.commons.math3.ode.events#EventStateTest', 'testIssue695')": [
                        86,
                        87,
                        88
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/events/OverlappingEventsTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.events#OverlappingEventsTest', 'testOverlappingEvents0')": [
                        51
                    ],
                    "('org.apache.commons.math3.ode.events#OverlappingEventsTest', 'testOverlappingEvents1')": [
                        61
                    ],
                    "('org.apache.commons.math3.ode.events#OverlappingEventsTest', 'test(int)')": [
                        71
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27
                    ],
                    "('org.apache.commons.math3.ode.events#OverlappingEventsTest', 'testOverlappingEvents0')": [
                        55,
                        56,
                        57
                    ],
                    "('org.apache.commons.math3.ode.events#OverlappingEventsTest', 'testOverlappingEvents1')": [
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.math3.ode.events#OverlappingEventsTest', 'test(int)')": [
                        79,
                        80,
                        81
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/events/ReappearingEventTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.events#ReappearingEventTest', 'testDormandPrince')": [
                        33
                    ],
                    "('org.apache.commons.math3.ode.events#ReappearingEventTest', 'testGragg')": [
                        39
                    ],
                    "('org.apache.commons.math3.ode.events#ReappearingEventTest', 'test(int)')": [
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27
                    ],
                    "('org.apache.commons.math3.ode.events#ReappearingEventTest', 'testDormandPrince')": [
                        37,
                        38,
                        39
                    ],
                    "('org.apache.commons.math3.ode.events#ReappearingEventTest', 'testGragg')": [
                        45,
                        46,
                        47
                    ],
                    "('org.apache.commons.math3.ode.events#ReappearingEventTest', 'test(int)')": [
                        52,
                        53,
                        54
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#AdamsBashforthIntegratorTest', 'dimensionCheck')": [
                        36
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsBashforthIntegratorTest', 'testMinStep')": [
                        46
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsBashforthIntegratorTest', 'testIncreasingTolerance')": [
                        66
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsBashforthIntegratorTest', 'exceedMaxEvaluations')": [
                        103
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsBashforthIntegratorTest', 'backward')": [
                        119
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsBashforthIntegratorTest', 'polynomial')": [
                        137
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsBashforthIntegratorTest', 'dimensionCheck')": [
                        37
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsBashforthIntegratorTest', 'testMinStep')": [
                        47
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsBashforthIntegratorTest', 'testIncreasingTolerance')": [
                        67
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsBashforthIntegratorTest', 'exceedMaxEvaluations')": [
                        104
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsBashforthIntegratorTest', 'backward')": [
                        120
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsBashforthIntegratorTest', 'polynomial')": [
                        138
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#AdamsMoultonIntegratorTest', 'dimensionCheck')": [
                        36
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsMoultonIntegratorTest', 'testMinStep')": [
                        46
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsMoultonIntegratorTest', 'testIncreasingTolerance')": [
                        67
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsMoultonIntegratorTest', 'exceedMaxEvaluations')": [
                        103
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsMoultonIntegratorTest', 'backward')": [
                        119
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsMoultonIntegratorTest', 'polynomial')": [
                        137
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsMoultonIntegratorTest', 'dimensionCheck')": [
                        37,
                        38,
                        39
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsMoultonIntegratorTest', 'testMinStep')": [
                        49,
                        50,
                        51
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsMoultonIntegratorTest', 'testIncreasingTolerance')": [
                        72,
                        73
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsMoultonIntegratorTest', 'exceedMaxEvaluations')": [
                        109,
                        110,
                        111
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsMoultonIntegratorTest', 'backward')": [
                        127,
                        128,
                        129
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#AdamsMoultonIntegratorTest', 'polynomial')": [
                        147,
                        148,
                        149
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testMissedEndEvent')": [
                        41
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testSanityChecks')": [
                        98
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testDecreasingSteps')": [
                        127
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testSmallStep')": [
                        176
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testBigStep')": [
                        195
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testBackward')": [
                        214
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testKepler')": [
                        233
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', None)": [
                        253
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testStepSize')": [
                        276
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testMissedEndEvent')": [
                        43,
                        44,
                        45
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testSanityChecks')": [
                        102,
                        103,
                        104
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testDecreasingSteps')": [
                        133,
                        134
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testSmallStep')": [
                        183,
                        184
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testBigStep')": [
                        203,
                        204
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testBackward')": [
                        223,
                        224
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testKepler')": [
                        243,
                        244
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', None)": [
                        264,
                        265
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testStepSize')": [
                        288,
                        289
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'derivativesConsistency')": [
                        39
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'serialization')": [
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'derivativesConsistency')": [
                        43,
                        44
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'serialization')": [
                        53,
                        54,
                        55
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54IntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', 'testDimensionCheck')": [
                        40
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', 'testMinStep')": [
                        50
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', 'testSmallLastStep')": [
                        72
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', 'testBackward')": [
                        98
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', 'testIncreasingTolerance')": [
                        149
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', 'testEvents')": [
                        191
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', 'testKepler')": [
                        225
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', 'testVariableSteps')": [
                        248
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', None)": [
                        273
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', 'testDimensionCheck')": [
                        42,
                        43,
                        44
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', 'testMinStep')": [
                        54,
                        55,
                        56
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', 'testSmallLastStep')": [
                        78,
                        79
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', 'testBackward')": [
                        105,
                        106
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', 'testIncreasingTolerance')": [
                        157,
                        158
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', 'testEvents')": [
                        200,
                        201
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', 'testKepler')": [
                        235,
                        236
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', 'testVariableSteps')": [
                        259,
                        260
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54IntegratorTest', None)": [
                        285,
                        286
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince54StepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'derivativesConsistency')": [
                        41
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'serialization')": [
                        55
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'checkClone')": [
                        105,
                        115
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'derivativesConsistency')": [
                        45,
                        46
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'serialization')": [
                        60,
                        61,
                        62
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'checkClone')": [
                        112,
                        113,
                        123,
                        124
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853IntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testMissedEndEvent')": [
                        40
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testDimensionCheck')": [
                        100
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testNullIntervalCheck')": [
                        111
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testMinStep')": [
                        122
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testIncreasingTolerance')": [
                        144
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testTooLargeFirstStep')": [
                        180
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testBackward')": [
                        207
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testEvents')": [
                        231
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testKepler')": [
                        264
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testVariableSteps')": [
                        287
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testUnstableDerivative')": [
                        308
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', None)": [
                        326
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testMissedEndEvent')": [
                        42,
                        43,
                        44
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testDimensionCheck')": [
                        104,
                        105,
                        106
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testNullIntervalCheck')": [
                        117,
                        118,
                        119
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testMinStep')": [
                        130,
                        131,
                        132
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testIncreasingTolerance')": [
                        154,
                        155
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testTooLargeFirstStep')": [
                        191,
                        192,
                        193
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testBackward')": [
                        220,
                        221
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testEvents')": [
                        245,
                        246
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testKepler')": [
                        279,
                        280
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testVariableSteps')": [
                        303,
                        304
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', 'testUnstableDerivative')": [
                        325,
                        326
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853IntegratorTest', None)": [
                        344,
                        345
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'derivativesConsistency')": [
                        41
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'serialization')": [
                        55
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'checklone')": [
                        105,
                        115
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'derivativesConsistency')": [
                        45,
                        46
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'serialization')": [
                        60,
                        61,
                        62
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'checklone')": [
                        112,
                        113,
                        123,
                        124
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/EulerIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#EulerIntegratorTest', 'testDimensionCheck')": [
                        39
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerIntegratorTest', 'testDecreasingSteps')": [
                        49
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerIntegratorTest', 'testSmallStep')": [
                        95
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerIntegratorTest', 'testBigStep')": [
                        116
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerIntegratorTest', 'testBackward')": [
                        136
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerIntegratorTest', 'testStepSize')": [
                        155
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerIntegratorTest', 'testDimensionCheck')": [
                        42,
                        43,
                        44
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerIntegratorTest', 'testDecreasingSteps')": [
                        54,
                        55
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerIntegratorTest', 'testSmallStep')": [
                        101,
                        102
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerIntegratorTest', 'testBigStep')": [
                        123,
                        124
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerIntegratorTest', 'testBackward')": [
                        144,
                        145
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerIntegratorTest', 'testStepSize')": [
                        164,
                        165
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/EulerStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#EulerStepInterpolatorTest', 'noReset')": [
                        41
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerStepInterpolatorTest', 'interpolationAtBounds')": [
                        61
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerStepInterpolatorTest', 'interpolationInside')": [
                        99
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerStepInterpolatorTest', 'derivativesConsistency')": [
                        130
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerStepInterpolatorTest', 'serialization')": [
                        139
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerStepInterpolatorTest', 'noReset')": [
                        45
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerStepInterpolatorTest', 'interpolationAtBounds')": [
                        65
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerStepInterpolatorTest', 'interpolationInside')": [
                        103
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerStepInterpolatorTest', 'derivativesConsistency')": [
                        134,
                        135
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#EulerStepInterpolatorTest', 'serialization')": [
                        144,
                        145,
                        146
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/GillIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', 'testDimensionCheck')": [
                        40
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', 'testDecreasingSteps')": [
                        50
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', 'testSmallStep')": [
                        96
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', 'testBigStep')": [
                        116
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', 'testBackward')": [
                        135
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', 'testKepler')": [
                        154
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', 'testUnstableDerivative')": [
                        168
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', None)": [
                        184
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', 'testStepSize')": [
                        207
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', 'testDimensionCheck')": [
                        43,
                        44,
                        45
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', 'testDecreasingSteps')": [
                        55,
                        56
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', 'testSmallStep')": [
                        102,
                        103
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', 'testBigStep')": [
                        123,
                        124
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', 'testBackward')": [
                        143,
                        144
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', 'testKepler')": [
                        163,
                        164
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', 'testUnstableDerivative')": [
                        178,
                        179
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', None)": [
                        195,
                        196
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillIntegratorTest', 'testStepSize')": [
                        219,
                        220
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/GillStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#GillStepInterpolatorTest', 'testDerivativesConsistency')": [
                        39
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillStepInterpolatorTest', 'serialization')": [
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillStepInterpolatorTest', 'testDerivativesConsistency')": [
                        43,
                        44
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GillStepInterpolatorTest', 'serialization')": [
                        53,
                        54,
                        55
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testDimensionCheck')": [
                        41
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testNullIntervalCheck')": [
                        51
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testMinStep')": [
                        61
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testBackward')": [
                        82
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIncreasingTolerance')": [
                        106
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIntegratorControls')": [
                        144
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'getMaxError(FirstOrderIntegrator,TestProblemAbstract)')": [
                        173
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testEvents')": [
                        184
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testKepler')": [
                        217
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testVariableSteps')": [
                        240
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testTooLargeFirstStep')": [
                        259
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testUnstableDerivative')": [
                        285
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIssue596')": [
                        296,
                        303
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', None)": [
                        335
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testDimensionCheck')": [
                        43,
                        44,
                        45
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testNullIntervalCheck')": [
                        55,
                        56,
                        57
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testMinStep')": [
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testBackward')": [
                        90,
                        91
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIncreasingTolerance')": [
                        115,
                        116
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIntegratorControls')": [
                        154,
                        155
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'getMaxError(FirstOrderIntegrator,TestProblemAbstract)')": [
                        184,
                        185
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testEvents')": [
                        196,
                        197
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testKepler')": [
                        230,
                        231
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testVariableSteps')": [
                        254,
                        255
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testTooLargeFirstStep')": [
                        274,
                        275,
                        276
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testUnstableDerivative')": [
                        302,
                        303,
                        304
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIssue596')": [
                        315,
                        316,
                        317,
                        324,
                        325
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerIntegratorTest', None)": [
                        357,
                        358
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'derivativesConsistency')": [
                        41
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'serialization')": [
                        56
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'checklone')": [
                        107,
                        117
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'derivativesConsistency')": [
                        45,
                        46
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'serialization')": [
                        61,
                        62,
                        63
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'checklone')": [
                        114,
                        115,
                        125,
                        126
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54IntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        25
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testWrongDerivative')": [
                        41,
                        48
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testMinStep')": [
                        75
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testIncreasingTolerance')": [
                        97
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testBackward')": [
                        133
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testEvents')": [
                        157
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testEventsErrors')": [
                        190,
                        214
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', None)": [
                        228,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testEventsNoConvergence')": [
                        236
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testSanityChecks')": [
                        277
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testKepler')": [
                        336
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testWrongDerivative')": [
                        41,
                        42,
                        43,
                        50
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testMinStep')": [
                        77,
                        78,
                        79
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testIncreasingTolerance')": [
                        101,
                        102
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testBackward')": [
                        138,
                        139
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testEvents')": [
                        163,
                        164
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testEventsErrors')": [
                        197,
                        198,
                        199,
                        223
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', None)": [
                        237,
                        239,
                        240,
                        241
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testEventsNoConvergence')": [
                        242,
                        243,
                        244
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testSanityChecks')": [
                        285,
                        286,
                        287
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54IntegratorTest', 'testKepler')": [
                        346,
                        347
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/HighamHall54StepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54StepInterpolatorTest', 'derivativesConsistency')": [
                        41
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54StepInterpolatorTest', 'serialization')": [
                        55
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54StepInterpolatorTest', 'checkClone')": [
                        105,
                        115
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54StepInterpolatorTest', 'derivativesConsistency')": [
                        45,
                        46
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54StepInterpolatorTest', 'serialization')": [
                        60,
                        61,
                        62
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#HighamHall54StepInterpolatorTest', 'checkClone')": [
                        112,
                        113,
                        123,
                        124
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/MidpointIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#MidpointIntegratorTest', 'testDimensionCheck')": [
                        39
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#MidpointIntegratorTest', 'testDecreasingSteps')": [
                        49
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#MidpointIntegratorTest', 'testSmallStep')": [
                        95
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#MidpointIntegratorTest', 'testBigStep')": [
                        116
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#MidpointIntegratorTest', 'testBackward')": [
                        136
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#MidpointIntegratorTest', 'testStepSize')": [
                        155
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#MidpointIntegratorTest', 'testDimensionCheck')": [
                        42,
                        43,
                        44
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#MidpointIntegratorTest', 'testDecreasingSteps')": [
                        54,
                        55
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#MidpointIntegratorTest', 'testSmallStep')": [
                        101,
                        102
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#MidpointIntegratorTest', 'testBigStep')": [
                        123,
                        124
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#MidpointIntegratorTest', 'testBackward')": [
                        144,
                        145
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#MidpointIntegratorTest', 'testStepSize')": [
                        164,
                        165
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/MidpointStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#MidpointStepInterpolatorTest', 'testDerivativesConsistency')": [
                        40
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#MidpointStepInterpolatorTest', 'serialization')": [
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#MidpointStepInterpolatorTest', 'testDerivativesConsistency')": [
                        44,
                        45
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#MidpointStepInterpolatorTest', 'serialization')": [
                        54,
                        55,
                        56
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesIntegratorTest', 'testDimensionCheck')": [
                        40
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesIntegratorTest', 'testDecreasingSteps')": [
                        50
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesIntegratorTest', 'testSmallStep')": [
                        96
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesIntegratorTest', 'testBigStep')": [
                        116
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesIntegratorTest', 'testBackward')": [
                        135
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesIntegratorTest', 'testKepler')": [
                        154
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesIntegratorTest', None)": [
                        177
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesIntegratorTest', 'testStepSize')": [
                        202
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesIntegratorTest', 'testDimensionCheck')": [
                        43,
                        44,
                        45
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesIntegratorTest', 'testDecreasingSteps')": [
                        55,
                        56
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesIntegratorTest', 'testSmallStep')": [
                        102,
                        103
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesIntegratorTest', 'testBigStep')": [
                        123,
                        124
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesIntegratorTest', 'testBackward')": [
                        143,
                        144
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesIntegratorTest', 'testKepler')": [
                        163,
                        164
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesIntegratorTest', None)": [
                        187,
                        188
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesIntegratorTest', 'testStepSize')": [
                        213,
                        214
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'derivativesConsistency')": [
                        39
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'serialization')": [
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'derivativesConsistency')": [
                        43,
                        44
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'serialization')": [
                        53,
                        54,
                        55
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/sampling/DummyStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28
                    ],
                    "('org.apache.commons.math3.ode.sampling#DummyStepInterpolatorTest', 'testNoReset')": [
                        36
                    ],
                    "('org.apache.commons.math3.ode.sampling#DummyStepInterpolatorTest', 'testFixedState')": [
                        52
                    ],
                    "('org.apache.commons.math3.ode.sampling#DummyStepInterpolatorTest', 'testSerialization')": [
                        76
                    ],
                    "('org.apache.commons.math3.ode.sampling#DummyStepInterpolatorTest', 'testImpossibleSerialization')": [
                        118,
                        120
                    ],
                    "('org.apache.commons.math3.ode.sampling#DummyStepInterpolatorTest', None)": [
                        133
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        137,
                        138
                    ],
                    "('org.apache.commons.math3.ode.sampling#DummyStepInterpolatorTest', 'testNoReset')": [
                        35
                    ],
                    "('org.apache.commons.math3.ode.sampling#DummyStepInterpolatorTest', 'testFixedState')": [
                        51
                    ],
                    "('org.apache.commons.math3.ode.sampling#DummyStepInterpolatorTest', 'testSerialization')": [
                        75
                    ],
                    "('org.apache.commons.math3.ode.sampling#DummyStepInterpolatorTest', None)": [
                        117,
                        131,
                        134,
                        135,
                        136
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/sampling/NordsieckStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.sampling#NordsieckStepInterpolatorTest', 'derivativesConsistency')": [
                        38
                    ],
                    "('org.apache.commons.math3.ode.sampling#NordsieckStepInterpolatorTest', 'serialization')": [
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math3.ode.sampling#NordsieckStepInterpolatorTest', 'derivativesConsistency')": [
                        42,
                        43,
                        44
                    ],
                    "('org.apache.commons.math3.ode.sampling#NordsieckStepInterpolatorTest', 'serialization')": [
                        52,
                        53,
                        54
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/sampling/StepInterpolatorTestUtils.java": {
                "old": {
                    "('org.apache.commons.math3.ode.sampling#StepInterpolatorTestUtils', 'checkDerivativesConsistency(FirstOrderIntegrator,TestProblemAbstract,double)')": [
                        29,
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepInterpolatorTestUtils', 'checkDerivativesConsistency(FirstOrderIntegrator,TestProblemAbstract,double)')": [
                        33,
                        34,
                        35,
                        38,
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerOutputTestBase.java": {
                "old": {
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testIncNeither')": [
                        99
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testIncNeitherRev')": [
                        105
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testIncFirst')": [
                        111
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testIncFirstRev')": [
                        117
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testIncLast')": [
                        123
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testIncLastRev')": [
                        129
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testIncBoth')": [
                        135
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testIncBothRev')": [
                        141
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testMulNeither')": [
                        147
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testMulNeitherRev')": [
                        153
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testMulFirst')": [
                        159
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testMulFirstRev')": [
                        165
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testMulLast')": [
                        171
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testMulLastRev')": [
                        177
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testMulBoth')": [
                        183
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testMulBothRev')": [
                        189
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'doTest(StepNormalizerMode,StepNormalizerBounds,double,boolean)')": [
                        204
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testIncNeither')": [
                        103,
                        104,
                        105
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testIncNeitherRev')": [
                        111,
                        112,
                        113
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testIncFirst')": [
                        119,
                        120,
                        121
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testIncFirstRev')": [
                        127,
                        128,
                        129
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testIncLast')": [
                        135,
                        136,
                        137
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testIncLastRev')": [
                        143,
                        144,
                        145
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testIncBoth')": [
                        151,
                        152,
                        153
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testIncBothRev')": [
                        159,
                        160,
                        161
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testMulNeither')": [
                        167,
                        168,
                        169
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testMulNeitherRev')": [
                        175,
                        176,
                        177
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testMulFirst')": [
                        183,
                        184,
                        185
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testMulFirstRev')": [
                        191,
                        192,
                        193
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testMulLast')": [
                        199,
                        200,
                        201
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testMulLastRev')": [
                        207,
                        208,
                        209
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testMulBoth')": [
                        215,
                        216,
                        217
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'testMulBothRev')": [
                        223,
                        224,
                        225
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', None)": [
                        238,
                        239,
                        240,
                        241
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerOutputTestBase', 'doTest(StepNormalizerMode,StepNormalizerBounds,double,boolean)')": [
                        244,
                        245,
                        246
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/sampling/StepNormalizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerTest', 'testBoundaries')": [
                        39
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerTest', 'testBeforeEnd')": [
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerTest', 'testBoundaries')": [
                        43,
                        44
                    ],
                    "('org.apache.commons.math3.ode.sampling#StepNormalizerTest', 'testBeforeEnd')": [
                        74,
                        75
                    ]
                }
            }
        }
    },
    "46d95b23ff8852c34e66d057387ef7b3b212cec6": {
        "authored_data": "2012 Sep 02 14:19",
        "commit.message": "Updated error message with new parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1379974 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "449f2d4f79fb975c27c4ca96f9452534ecd7f611",
        "changes": {
            "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java": {
                "old": {
                    "(None, None)": [
                        136
                    ]
                },
                "new": {
                    "(None, None)": [
                        136
                    ]
                }
            }
        }
    },
    "449f2d4f79fb975c27c4ca96f9452534ecd7f611": {
        "authored_data": "2012 Sep 02 14:19",
        "commit.message": "Javadoc formatting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1379973 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "98e56e813d50092e0f909daaadf4267dc4e4df81",
        "changes": {
            "src/main/java/org/apache/commons/math3/ode/ParameterConfiguration.java": {
                "old": {
                    "('org.apache.commons.math3.ode#ParameterConfiguration', None)": [
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.ode#ParameterConfiguration', None)": [
                        40,
                        41
                    ]
                }
            }
        }
    },
    "98e56e813d50092e0f909daaadf4267dc4e4df81": {
        "authored_data": "2012 Sep 01 23:56",
        "commit.message": "\"final\" keyword.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1379905 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "aa79abed6da00ed31cc208f1e5392b869901033b",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.interpolation#SplineInterpolator', None)": [
                        54
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#SplineInterpolator', 'interpolate(double,double)')": [
                        81,
                        86,
                        91,
                        92,
                        104,
                        105,
                        106,
                        117,
                        118
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis.interpolation#SplineInterpolator', 'interpolate(double,double)')": [
                        80,
                        85,
                        90,
                        91,
                        103,
                        104,
                        105,
                        116,
                        117
                    ]
                }
            }
        }
    },
    "aa79abed6da00ed31cc208f1e5392b869901033b": {
        "authored_data": "2012 Sep 01 23:54",
        "commit.message": "MATH-854\nPopulate \"throws\" clause.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1379904 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "0af91ecfbe4deec846cd30fb32145d82b920a4ff",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', None)": [
                        87,
                        88,
                        97,
                        179,
                        188,
                        197,
                        206,
                        214,
                        224,
                        270
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', 'value(double,double)')": [
                        158
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', 'partialDerivativeX(double,double)')": [
                        180
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', 'partialDerivativeY(double,double)')": [
                        189
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', 'partialDerivativeXX(double,double)')": [
                        198
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', 'partialDerivativeYY(double,double)')": [
                        207
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', 'partialDerivativeXY(double,double)')": [
                        215
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', 'partialDerivative(int,double,double)')": [
                        225
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', None)": [
                        88,
                        89,
                        98,
                        99,
                        100,
                        183,
                        184,
                        185,
                        186,
                        196,
                        197,
                        198,
                        199,
                        209,
                        210,
                        211,
                        212,
                        222,
                        223,
                        224,
                        225,
                        234,
                        235,
                        236,
                        237,
                        248,
                        249,
                        250,
                        251,
                        298
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', 'value(double,double)')": [
                        161,
                        162
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', 'partialDerivativeX(double,double)')": [
                        187,
                        188
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', 'partialDerivativeY(double,double)')": [
                        200,
                        201
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', 'partialDerivativeXX(double,double)')": [
                        213,
                        214
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', 'partialDerivativeYY(double,double)')": [
                        226,
                        227
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', 'partialDerivativeXY(double,double)')": [
                        238,
                        239
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', 'partialDerivative(int,double,double)')": [
                        252,
                        253
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolator.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolator', 'interpolate(double,double,double)')": [
                        38
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolator', None)": [
                        121,
                        122,
                        124,
                        125,
                        126,
                        133,
                        134,
                        136,
                        137
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolator', 'interpolate(double,double,double)')": [
                        40,
                        41,
                        42,
                        43
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolator', None)": [
                        126,
                        127,
                        129,
                        130,
                        131,
                        138,
                        139,
                        140,
                        142,
                        143
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/interpolation/BivariateGridInterpolator.java": {
                "old": {
                    "(None, None)": [
                        38,
                        39,
                        40,
                        41,
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        40,
                        41,
                        44,
                        45,
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/interpolation/DividedDifferenceInterpolator.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.interpolation#DividedDifferenceInterpolator', None)": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        90,
                        91,
                        92,
                        93,
                        94
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#DividedDifferenceInterpolator', 'interpolate(double,double)')": [
                        54
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#DividedDifferenceInterpolator', 'computeDividedDifference(double,double)')": [
                        97
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#DividedDifferenceInterpolator', None)": [
                        51,
                        52,
                        53,
                        54,
                        95,
                        96,
                        97
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#DividedDifferenceInterpolator', 'interpolate(double,double)')": [
                        56,
                        57,
                        58,
                        59
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#DividedDifferenceInterpolator', 'computeDividedDifference(double,double)')": [
                        100,
                        101,
                        102,
                        103
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/interpolation/LinearInterpolator.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#LinearInterpolator', None)": [
                        39,
                        40
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#LinearInterpolator', 'interpolate(double,double)')": [
                        44,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#LinearInterpolator', None)": [
                        35,
                        41,
                        42
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#LinearInterpolator', 'interpolate(double,double)')": [
                        46,
                        47,
                        48,
                        49,
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/interpolation/LoessInterpolator.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.interpolation#LoessInterpolator', None)": [
                        50,
                        146,
                        169,
                        170,
                        174,
                        175,
                        192,
                        193,
                        197,
                        198,
                        356,
                        357,
                        361,
                        362
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#LoessInterpolator', 'interpolate(double,double)')": [
                        180
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#LoessInterpolator', 'smooth(double,double,double)')": [
                        205
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#LoessInterpolator', 'smooth(double,double)')": [
                        367
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#LoessInterpolator', None)": [
                        52,
                        148,
                        149,
                        150,
                        173,
                        174,
                        178,
                        179,
                        202,
                        203,
                        207,
                        208,
                        371,
                        372,
                        376,
                        377
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#LoessInterpolator', 'interpolate(double,double)')": [
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#LoessInterpolator', 'smooth(double,double,double)')": [
                        215,
                        216,
                        217,
                        218,
                        219,
                        220
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#LoessInterpolator', 'smooth(double,double)')": [
                        382,
                        383,
                        384,
                        385,
                        386,
                        387
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolatingFunction.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.interpolation#MicrosphereInterpolatingFunction', None)": [
                        128,
                        134,
                        150
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis.interpolation#MicrosphereInterpolatingFunction', None)": [
                        128,
                        134,
                        150,
                        151,
                        152,
                        153
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/interpolation/MicrosphereInterpolator.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.interpolation#MicrosphereInterpolator', None)": [
                        71
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#MicrosphereInterpolator', 'interpolate(double,double)')": [
                        87
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#MicrosphereInterpolator', None)": [
                        74,
                        75,
                        76
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#MicrosphereInterpolator', 'interpolate(double,double)')": [
                        92,
                        93,
                        94,
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/interpolation/NevilleInterpolator.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.interpolation#NevilleInterpolator', None)": [
                        44,
                        45,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#NevilleInterpolator', 'interpolate(double,double)')": [
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#NevilleInterpolator', None)": [
                        47,
                        48,
                        50,
                        51,
                        52,
                        53
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#NevilleInterpolator', 'interpolate(double,double)')": [
                        55,
                        56,
                        57,
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.interpolation#SmoothingPolynomialBicubicSplineInterpolator', 'interpolate(double,double,double)')": [
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis.interpolation#SmoothingPolynomialBicubicSplineInterpolator', 'interpolate(double,double,double)')": [
                        73,
                        74,
                        75
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/interpolation/SplineInterpolator.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.interpolation#SplineInterpolator', None)": [
                        61,
                        62
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#SplineInterpolator', 'interpolate(double,double)')": [
                        66
                    ],
                    "(None, None)": [
                        125
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#SplineInterpolator', None)": [
                        62,
                        63
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#SplineInterpolator', 'interpolate(double,double)')": [
                        67,
                        68,
                        69,
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.interpolation#TricubicSplineInterpolatingFunction', None)": [
                        142,
                        155,
                        308
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#TricubicSplineInterpolatingFunction', 'value(double,double,double)')": [
                        309
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#TricubicSplineFunction', None)": [
                        448
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#TricubicSplineFunction', 'value(double,double,double)')": [
                        449
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#TricubicSplineInterpolatingFunction', None)": [
                        143,
                        156,
                        157,
                        158,
                        159,
                        312,
                        313,
                        314,
                        315
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#TricubicSplineInterpolatingFunction', 'value(double,double,double)')": [
                        316,
                        317
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#TricubicSplineFunction', None)": [
                        456,
                        457,
                        458
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#TricubicSplineFunction', 'value(double,double,double)')": [
                        459,
                        460
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolator.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.interpolation#TricubicSplineInterpolator', 'interpolate(double,double,double,double)')": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#TricubicSplineInterpolator', 'interpolate(double,double,double,double)')": [
                        38,
                        39,
                        40,
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/interpolation/TrivariateGridInterpolator.java": {
                "old": {
                    "(None, None)": [
                        41,
                        42,
                        43,
                        44,
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        43,
                        44,
                        47,
                        48,
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.interpolation#UnivariatePeriodicInterpolator', None)": [
                        57,
                        58,
                        73
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#UnivariatePeriodicInterpolator', 'interpolate(double,double)')": [
                        84
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis.interpolation#UnivariatePeriodicInterpolator', None)": [
                        57,
                        58,
                        73
                    ],
                    "('org.apache.commons.math3.analysis.interpolation#UnivariatePeriodicInterpolator', 'interpolate(double,double)')": [
                        84,
                        85
                    ]
                }
            }
        }
    }
}