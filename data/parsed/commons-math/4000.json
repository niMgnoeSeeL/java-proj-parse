{
    "32bbe0ed8e5dd208500c653e070bfcf6b02a737a": {
        "authored_data": "2011 Jul 31 23:31",
        "commit.message": "Made RandomGenerator configurable and reseedable.  JIRA: MATH-634.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1152662 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "7b4c168854a87dc0e8f2b7d886f2baf179e5ada1",
        "changes": {
            "src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', None)": [
                        95,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'getNextValue')": [
                        388
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', None)": [
                        95,
                        101,
                        102,
                        103,
                        104,
                        105,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        123,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'getNextValue')": [
                        400
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'reSeed(long)')": [
                        507,
                        508
                    ],
                    "(None, None)": [
                        509
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', None)": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', None)": [
                        44,
                        217,
                        218,
                        233,
                        234,
                        235,
                        246,
                        247
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', 'testGeneratorConfig')": [
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', 'testReSeed')": [
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245
                    ]
                }
            }
        }
    },
    "7b4c168854a87dc0e8f2b7d886f2baf179e5ada1": {
        "authored_data": "2011 Jul 31 22:51",
        "commit.message": "Made ConstantGenerator public and constant value configurable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1152659 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "1bc6cbd731e74291012048960289c8ecb3488cda",
        "changes": {
            "src/test/java/org/apache/commons/math/random/RandomAdaptorTest.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomAdaptorTest', None)": [
                        61,
                        71,
                        75,
                        79,
                        83,
                        87,
                        91
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomAdaptorTest', None)": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        81,
                        85,
                        89,
                        93,
                        97,
                        101
                    ]
                }
            }
        }
    },
    "1bc6cbd731e74291012048960289c8ecb3488cda": {
        "authored_data": "2011 Jul 31 22:49",
        "commit.message": "Clarified null contract.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1152658 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "a7c7172b3f5d48e43e1abb286dcd24dc9476b21b",
        "changes": {
            "src/main/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        170,
                        171
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        170,
                        171
                    ]
                }
            }
        }
    },
    "a7c7172b3f5d48e43e1abb286dcd24dc9476b21b": {
        "authored_data": "2011 Jul 31 21:27",
        "commit.message": "MATH-599\nRenamed \"AllowedSolutions\" to \"AllowedSolution\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1152644 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "20b4584303eaac45903205159647db367f2a4e7c",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolver', None)": [
                        56,
                        69,
                        84,
                        101
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolver', 'solve(int,UnivariateRealFunction,double,double,AllowedSolutions)')": [
                        108,
                        109
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolver', 'solve(int,UnivariateRealFunction,double,double,double,AllowedSolutions)')": [
                        115,
                        116
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolver', 'solve(int,UnivariateRealFunction,double,double,double)')": [
                        124
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolver', None)": [
                        56,
                        69,
                        84,
                        101
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolver', 'solve(int,UnivariateRealFunction,double,double,AllowedSolution)')": [
                        108,
                        109
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolver', 'solve(int,UnivariateRealFunction,double,double,double,AllowedSolution)')": [
                        115,
                        116
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolver', 'solve(int,UnivariateRealFunction,double,double,double)')": [
                        124
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/BracketedUnivariateRealSolver.java": {
                "old": {
                    "(None, None)": [
                        33,
                        39,
                        43,
                        60,
                        69,
                        82,
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        39,
                        43,
                        60,
                        69,
                        82,
                        91
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java": {
                "old": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.commons.math.analysis.solvers#BracketingNthOrderBrentSolver', None)": [
                        63,
                        87,
                        107,
                        129
                    ],
                    "('org.apache.commons.math.analysis.solvers#BracketingNthOrderBrentSolver', 'solve(int,UnivariateRealFunction,double,double,AllowedSolutions)')": [
                        384,
                        385
                    ],
                    "('org.apache.commons.math.analysis.solvers#BracketingNthOrderBrentSolver', 'solve(int,UnivariateRealFunction,double,double,double,AllowedSolutions)')": [
                        392,
                        393
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.commons.math.analysis.solvers#BracketingNthOrderBrentSolver', None)": [
                        63,
                        87,
                        107,
                        129
                    ],
                    "('org.apache.commons.math.analysis.solvers#BracketingNthOrderBrentSolver', 'solve(int,UnivariateRealFunction,double,double,AllowedSolution)')": [
                        384,
                        385
                    ],
                    "('org.apache.commons.math.analysis.solvers#BracketingNthOrderBrentSolver', 'solve(int,UnivariateRealFunction,double,double,double,AllowedSolution)')": [
                        392,
                        393
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', None)": [
                        90
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'forceSide(int,UnivariateRealFunction,BracketedUnivariateRealSolver,double,double,double,AllowedSolutions)')": [
                        97,
                        98,
                        99,
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', None)": [
                        90
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'forceSide(int,UnivariateRealFunction,BracketedUnivariateRealSolver,double,double,double,AllowedSolution)')": [
                        97,
                        98,
                        99,
                        116
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/dfp/BracketingNthOrderBrentSolverDFP.java": {
                "old": {
                    "(None, None)": [
                        20,
                        34
                    ],
                    "('org.apache.commons.math.dfp#BracketingNthOrderBrentSolverDFP', None)": [
                        148,
                        172
                    ],
                    "('org.apache.commons.math.dfp#BracketingNthOrderBrentSolverDFP', 'solve(int,UnivariateDfpFunction,Dfp,Dfp,AllowedSolutions)')": [
                        157,
                        158
                    ],
                    "('org.apache.commons.math.dfp#BracketingNthOrderBrentSolverDFP', 'solve(int,UnivariateDfpFunction,Dfp,Dfp,Dfp,AllowedSolutions)')": [
                        182,
                        269
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        34
                    ],
                    "('org.apache.commons.math.dfp#BracketingNthOrderBrentSolverDFP', None)": [
                        148,
                        172
                    ],
                    "('org.apache.commons.math.dfp#BracketingNthOrderBrentSolverDFP', 'solve(int,UnivariateDfpFunction,Dfp,Dfp,AllowedSolution)')": [
                        157,
                        158
                    ],
                    "('org.apache.commons.math.dfp#BracketingNthOrderBrentSolverDFP', 'solve(int,UnivariateDfpFunction,Dfp,Dfp,Dfp,AllowedSolution)')": [
                        182,
                        269
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/events/EventState.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'evaluateStep(StepInterpolator)')": [
                        247,
                        248,
                        258,
                        260
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'evaluateStep(StepInterpolator)')": [
                        247,
                        248,
                        258,
                        260
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/BaseSecantSolverAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolverAbstractTest', 'testSolutionLeftSide')": [
                        169
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolverAbstractTest', 'testSolutionRightSide')": [
                        188
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolverAbstractTest', 'testSolutionBelowSide')": [
                        206
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolverAbstractTest', 'testSolutionAboveSide')": [
                        225
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolverAbstractTest', 'getSolution(UnivariateRealSolver,int,UnivariateRealFunction,double,double,AllowedSolutions)')": [
                        237,
                        242,
                        254
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolverAbstractTest', 'testSolutionLeftSide')": [
                        169
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolverAbstractTest', 'testSolutionRightSide')": [
                        188
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolverAbstractTest', 'testSolutionBelowSide')": [
                        206
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolverAbstractTest', 'testSolutionAboveSide')": [
                        225
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolverAbstractTest', 'getSolution(UnivariateRealSolver,int,UnivariateRealFunction,double,double,AllowedSolution)')": [
                        237,
                        242,
                        254
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BracketingNthOrderBrentSolverTest', 'testConvergenceOnFunctionAccuracy')": [
                        72,
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#BracketingNthOrderBrentSolverTest', 'testConvergenceOnFunctionAccuracy')": [
                        72,
                        76
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/dfp/BracketingNthOrderBrentSolverDFPTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.dfp#BracketingNthOrderBrentSolverDFPTest', 'testConvergenceOnFunctionAccuracy')": [
                        66,
                        71
                    ],
                    "('org.apache.commons.math.dfp#BracketingNthOrderBrentSolverDFPTest', 'testNeta')": [
                        84
                    ],
                    "('org.apache.commons.math.dfp#BracketingNthOrderBrentSolverDFPTest', 'check(UnivariateDfpFunction,int,double,double,AllowedSolutions)')": [
                        125,
                        130,
                        132
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.dfp#BracketingNthOrderBrentSolverDFPTest', 'testConvergenceOnFunctionAccuracy')": [
                        66,
                        71
                    ],
                    "('org.apache.commons.math.dfp#BracketingNthOrderBrentSolverDFPTest', 'testNeta')": [
                        84
                    ],
                    "('org.apache.commons.math.dfp#BracketingNthOrderBrentSolverDFPTest', 'check(UnivariateDfpFunction,int,double,double,AllowedSolution)')": [
                        125,
                        130,
                        132
                    ]
                }
            }
        }
    },
    "20b4584303eaac45903205159647db367f2a4e7c": {
        "authored_data": "2011 Jul 31 15:57",
        "commit.message": "Corrected observed/expected value label error.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1152585 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "06ddf2d772d3d7d679f0c4e7598f545016b693b7",
        "changes": {
            "src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', 'tstGen(double)')": [
                        236,
                        237
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', 'tstDoubleGen(double)')": [
                        246,
                        247
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', 'tstGen(double)')": [
                        236,
                        237
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', 'tstDoubleGen(double)')": [
                        246,
                        247
                    ]
                }
            }
        }
    },
    "06ddf2d772d3d7d679f0c4e7598f545016b693b7": {
        "authored_data": "2011 Jul 31 14:04",
        "commit.message": "MATH-637\nReplaced \"DescriptiveStatistics\" by \"StatisticalSummary\", as suggested\nby Phil.\nAdded some \"randomness\" so that the timed code has a side-effect that\ncannot be optimized away by the JIT compiler.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1152584 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "48e54b0a557b8de7a563b580e274105e56acf054",
        "changes": {
            "src/test/java/org/apache/commons/math/PerfTestUtils.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math#PerfTestUtils', None)": [
                        43,
                        44,
                        45,
                        46,
                        47
                    ],
                    "('org.apache.commons.math#PerfTestUtils', 'time(int,int,boolean,Callable)')": [
                        48,
                        49,
                        50,
                        51,
                        58,
                        60,
                        64
                    ],
                    "('org.apache.commons.math#PerfTestUtils', 'timesAndResults(int,int,boolean,Callable)')": [
                        107,
                        112,
                        116,
                        118
                    ],
                    "('org.apache.commons.math#PerfTestUtils', 'timeAndReport(String,int,int,boolean,RunTest)')": [
                        152,
                        153,
                        154,
                        155,
                        156,
                        158,
                        162,
                        166,
                        168
                    ],
                    "('org.apache.commons.math#PerfTestUtils', 'timeAndReport(String,RunTest)')": [
                        190,
                        191
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        21,
                        22
                    ],
                    "('org.apache.commons.math#PerfTestUtils', None)": [
                        35,
                        36,
                        47,
                        48,
                        49,
                        50,
                        51,
                        144,
                        145
                    ],
                    "('org.apache.commons.math#PerfTestUtils', 'time(int,int,boolean,Callable)')": [
                        52,
                        53,
                        54,
                        55,
                        62,
                        64,
                        68
                    ],
                    "('org.apache.commons.math#PerfTestUtils', 'timesAndResults(int,int,boolean,Callable)')": [
                        111,
                        116,
                        120,
                        122,
                        123
                    ],
                    "('org.apache.commons.math#PerfTestUtils', 'timeAndReport(String,int,int,boolean,RunTest)')": [
                        159,
                        160,
                        161,
                        162,
                        163,
                        165,
                        169,
                        173,
                        174,
                        175,
                        176,
                        178
                    ],
                    "('org.apache.commons.math#PerfTestUtils', 'timeAndReport(String,RunTest)')": [
                        200,
                        201
                    ]
                }
            }
        }
    },
    "48e54b0a557b8de7a563b580e274105e56acf054": {
        "authored_data": "2011 Jul 30 21:59",
        "commit.message": "MATH-637\nSeveral modifications to avoid some potential pitfalls of micro-benchmarking:\nAttempt to run GC preemptively, keep track of the computation result, output\nvariance of the run times.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1152524 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "89bf9e4d9a2103a775798ee9df654b7f097af2c6",
        "changes": {
            "src/test/java/org/apache/commons/math/PerfTestUtils.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21
                    ],
                    "('org.apache.commons.math#PerfTestUtils', None)": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        66,
                        67,
                        68,
                        69,
                        74,
                        75,
                        76,
                        77,
                        78,
                        95,
                        113
                    ],
                    "('org.apache.commons.math#PerfTestUtils', 'time(int,int,Runnable)')": [
                        40,
                        41,
                        42,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        53,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        62,
                        63,
                        64,
                        65
                    ],
                    "('org.apache.commons.math#PerfTestUtils', 'timeAndReport(String,int,int,RunTest)')": [
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21
                    ],
                    "('org.apache.commons.math#PerfTestUtils', None)": [
                        29,
                        30,
                        31,
                        32,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        134,
                        135,
                        136,
                        137,
                        138,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        197,
                        198,
                        199,
                        202,
                        220
                    ],
                    "('org.apache.commons.math#PerfTestUtils', 'time(int,int,boolean,Callable)')": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67
                    ],
                    "('org.apache.commons.math#PerfTestUtils', 'timesAndResults(int,int,boolean,Callable)')": [
                        91,
                        92,
                        93,
                        94,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133
                    ],
                    "('org.apache.commons.math#PerfTestUtils', 'timeAndReport(String,int,int,boolean,RunTest)')": [
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172
                    ],
                    "('org.apache.commons.math#PerfTestUtils', 'timeAndReport(String,RunTest)')": [
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196
                    ]
                }
            }
        }
    },
    "89bf9e4d9a2103a775798ee9df654b7f097af2c6": {
        "authored_data": "2011 Jul 30 13:50",
        "commit.message": "MATH-638\nFixed Findbugs and CheckStyle warnings.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1152462 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "efbad3aa60518f5f7403bedb1c0f821aafc79916",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', None)": [
                        127,
                        142,
                        167,
                        243,
                        265
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', None)": [
                        127,
                        142,
                        167,
                        243,
                        265,
                        266
                    ]
                }
            }
        }
    },
    "efbad3aa60518f5f7403bedb1c0f821aafc79916": {
        "authored_data": "2011 Jul 30 00:38",
        "commit.message": "Junit4 package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1152408 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "9879b8baa84206b4161eec37e5b411eb9f660381",
        "changes": {
            "src/test/java/org/apache/commons/math/util/FastMathTestPerformance.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            }
        }
    }
}