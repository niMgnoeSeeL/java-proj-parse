{
    "de75806149238269ea9ea02788eb117c92446f7e": {
        "authored_data": "2011 Sep 02 16:46",
        "commit.message": "In all unit-tests of DecompositionSolver implementations: removed calls to DecompositionSolver.solve(double[]) (MATH-653)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1164622 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "118387e2729745f97822f7621b437b324de21b5b",
        "changes": {
            "src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#CholeskySolverTest', 'testSolveDimensionErrors')": [
                        48
                    ],
                    "('org.apache.commons.math.linear#CholeskySolverTest', 'testSolve')": [
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#CholeskySolverTest', 'testSolveDimensionErrors')": [
                        48
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/EigenSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#EigenSolverTest', 'testSolveDimensionErrors')": [
                        77
                    ],
                    "('org.apache.commons.math.linear#EigenSolverTest', 'testSolve')": [
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        141
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#EigenSolverTest', 'testSolveDimensionErrors')": [
                        77
                    ],
                    "('org.apache.commons.math.linear#EigenSolverTest', 'testSolve')": [
                        127,
                        134
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/LUSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#LUSolverTest', 'testSolveDimensionErrors')": [
                        86
                    ],
                    "('org.apache.commons.math.linear#LUSolverTest', 'testSolveSingularityErrors')": [
                        107,
                        108,
                        109,
                        110,
                        111,
                        112
                    ],
                    "('org.apache.commons.math.linear#LUSolverTest', 'testSolve')": [
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#LUSolverTest', 'testSolveDimensionErrors')": [
                        86
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/QRSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRSolverTest', 'testSolveDimensionErrors')": [
                        85,
                        86,
                        87,
                        88,
                        89,
                        90
                    ],
                    "('org.apache.commons.math.linear#QRSolverTest', 'testSolveRankErrors')": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ],
                    "('org.apache.commons.math.linear#QRSolverTest', 'testSolve')": [
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#SingularValueSolverTest', 'testSolveDimensionErrors')": [
                        47
                    ],
                    "('org.apache.commons.math.linear#SingularValueSolverTest', 'testLeastSquareSolve')": [
                        77,
                        78,
                        79
                    ],
                    "('org.apache.commons.math.linear#SingularValueSolverTest', 'testSolve')": [
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        121
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SingularValueSolverTest', 'testSolveDimensionErrors')": [
                        47
                    ],
                    "('org.apache.commons.math.linear#SingularValueSolverTest', 'testSolve')": [
                        104,
                        111
                    ]
                }
            }
        }
    },
    "118387e2729745f97822f7621b437b324de21b5b": {
        "authored_data": "2011 Sep 02 16:40",
        "commit.message": "Units tests of RealMatrix implementations: replaced reference to DecompositionSolver.solve(double[]) by DecompositionSolver.solve(RealVector) (see MATH-653)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1164618 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "c76d918c77f21176df0acd613d936aa3f3866acb",
        "changes": {
            "src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#Array2DRowRealMatrixTest', 'testPower')": [
                        233,
                        235,
                        237,
                        240,
                        242,
                        244,
                        246,
                        247,
                        251,
                        256,
                        258,
                        260,
                        262,
                        263,
                        264,
                        272
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrixTest', None)": [
                        280,
                        445
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrixTest', 'testExamples')": [
                        440,
                        441,
                        442,
                        443,
                        444
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#Array2DRowRealMatrixTest', 'testPower')": [
                        233,
                        235,
                        237,
                        240,
                        242,
                        244,
                        246,
                        247,
                        251,
                        256,
                        258,
                        260,
                        262,
                        263,
                        264,
                        272
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrixTest', None)": [
                        280
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrixTest', 'testExamples')": [
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#BlockRealMatrixTest', 'testExamples')": [
                        485,
                        486,
                        487,
                        488,
                        489
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrixTest', None)": [
                        490
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BlockRealMatrixTest', 'testExamples')": [
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testExamples')": [
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testExamples')": [
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400
                    ]
                }
            }
        }
    },
    "c76d918c77f21176df0acd613d936aa3f3866acb": {
        "authored_data": "2011 Sep 02 16:34",
        "commit.message": "Replaced reference to DecompositionSolver.solve(double[]) by DecompositionSolver.solve(RealVector) (see MATH-653)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1164615 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "c9943deeb977259e44313f611ce271288f0ca282",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java": {
                "old": {
                    "(None, None)": [
                        21,
                        29
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        149,
                        150
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        23,
                        29,
                        33
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157
                    ]
                }
            }
        }
    },
    "c9943deeb977259e44313f611ce271288f0ca282": {
        "authored_data": "2011 Sep 02 15:11",
        "commit.message": "Use the refactored exceptions framework for ODE.\n\nThe IntegratorException and EvenException classes have been removed. The\nuses of the checked ConvergenceException have been replaced by the\nunchecked one from the exception package. Sanity checks now use\nthe nes DimensionMismatchException. Step size underflows now trigger\nNumberIsTooSmallException.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1164573 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "8b24302b3ddaa6c2bc90f61b3b65270846d0fba3",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java": {
                "old": {
                    "(None, None)": [
                        154
                    ]
                },
                "new": {
                    "(None, None)": [
                        154
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java": {
                "old": {
                    "(None, None)": [
                        29,
                        35
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', None)": [
                        229,
                        340,
                        350
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'acceptStep(AbstractStepInterpolator,double,double,double)')": [
                        234,
                        235,
                        236,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        355,
                        358,
                        359,
                        363,
                        364,
                        368,
                        369,
                        370
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        33,
                        35
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', None)": [
                        230,
                        341,
                        342
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'acceptStep(AbstractStepInterpolator,double,double,double)')": [
                        235,
                        236
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        347,
                        350,
                        354,
                        358,
                        359,
                        360,
                        361
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java": {
                "old": {
                    "(None, None)": [
                        20,
                        54,
                        55,
                        56,
                        59,
                        60
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        55,
                        56,
                        57,
                        60,
                        61
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#MultistepIntegrator', None)": [
                        207,
                        208,
                        209
                    ],
                    "('org.apache.commons.math.ode#MultistepIntegrator', 'start(double,double,double)')": [
                        212
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode#MultistepIntegrator', None)": [
                        208
                    ],
                    "('org.apache.commons.math.ode#MultistepIntegrator', 'start(double,double,double)')": [
                        211
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java": {
                "old": {
                    "(None, None)": [
                        20,
                        51,
                        52,
                        53,
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        52,
                        53,
                        54,
                        59
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/events/EventHandler.java": {
                "old": {
                    "(None, None)": [
                        97,
                        99,
                        161,
                        163,
                        179,
                        181
                    ]
                },
                "new": {
                    "(None, None)": [
                        98,
                        161,
                        178
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/events/EventState.java": {
                "old": {
                    "(None, None)": [
                        20,
                        27,
                        392,
                        393,
                        394,
                        395
                    ],
                    "('org.apache.commons.math.ode.events#EventState', None)": [
                        151,
                        152,
                        153,
                        192,
                        193,
                        194,
                        195,
                        297,
                        298,
                        316,
                        317,
                        318,
                        350,
                        351,
                        352,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'reinitializeBegin(StepInterpolator)')": [
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'evaluateStep(StepInterpolator)')": [
                        199,
                        200,
                        201,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        295,
                        296
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'stepAccepted(double,double)')": [
                        319,
                        320
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'reset(double,double)')": [
                        353,
                        354
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.ode.events#EventState', None)": [
                        150,
                        177,
                        294,
                        325
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'reinitializeBegin(StepInterpolator)')": [
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        176
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'evaluateStep(StepInterpolator)')": [
                        187,
                        201,
                        202
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'stepAccepted(double,double)')": [
                        295
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'reset(double,double)')": [
                        326
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java": {
                "old": {
                    "(None, None)": [
                        20,
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        195
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        195
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java": {
                "old": {
                    "(None, None)": [
                        20,
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsIntegrator', None)": [
                        92
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsIntegrator', None)": [
                        92
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java": {
                "old": {
                    "(None, None)": [
                        22,
                        26
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        212
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        212
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', None)": [
                        221,
                        335,
                        365
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        227,
                        238,
                        239,
                        243,
                        244
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'filterStep(double,boolean,boolean)')": [
                        338,
                        345,
                        346,
                        347
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', None)": [
                        224,
                        225,
                        337,
                        366
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        231,
                        242,
                        246
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'filterStep(double,boolean,boolean)')": [
                        340,
                        347,
                        348
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EmbeddedRungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        195
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EmbeddedRungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        195
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        549
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        550
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java": {
                "old": {
                    "(None, None)": [
                        21,
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        96
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        96
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24,
                        25
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'testBoundaries')": [
                        44,
                        45
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'testRandomAccess')": [
                        57,
                        58
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'testModelsMerging')": [
                        87,
                        88
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'testBoundaries')": [
                        41
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'testRandomAccess')": [
                        53
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'testModelsMerging')": [
                        82
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', 'testDecreasingSteps')": [
                        42,
                        43
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', 'testSmallStep')": [
                        60,
                        61
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', 'testBigStep')": [
                        68,
                        69
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', 'integrateWithSpecifiedStep(double,double,double,double)')": [
                        103
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', 'testDecreasingSteps')": [
                        40
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', 'testSmallStep')": [
                        57
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', 'testBigStep')": [
                        64
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', 'integrateWithSpecifiedStep(double,double,double,double)')": [
                        98
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/events/EventStateTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        23
                    ],
                    "('org.apache.commons.math.ode.events#EventStateTest', 'closeEvents')": [
                        33,
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.events#EventStateTest', 'closeEvents')": [
                        31
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/events/OverlappingEventsTest.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.ode.events#OverlappingEventsTest', None)": [
                        51,
                        52,
                        53,
                        64,
                        65,
                        66,
                        78,
                        79,
                        80,
                        150,
                        156,
                        161
                    ],
                    "('org.apache.commons.math.ode.events#OverlappingEventsTest', 'testOverlappingEvents0')": [
                        56
                    ],
                    "('org.apache.commons.math.ode.events#OverlappingEventsTest', 'testOverlappingEvents1')": [
                        69
                    ],
                    "('org.apache.commons.math.ode.events#OverlappingEventsTest', 'test(int)')": [
                        82
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.events#OverlappingEventsTest', 'testOverlappingEvents0')": [
                        52
                    ],
                    "('org.apache.commons.math.ode.events#OverlappingEventsTest', 'testOverlappingEvents1')": [
                        62
                    ],
                    "('org.apache.commons.math.ode.events#OverlappingEventsTest', 'test(int)')": [
                        72
                    ],
                    "('org.apache.commons.math.ode.events#OverlappingEventsTest', None)": [
                        140,
                        146,
                        151
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', None)": [
                        34,
                        44
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'dimensionCheck')": [
                        35
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'testMinStep')": [
                        45
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'testIncreasingTolerance')": [
                        66
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'exceedMaxEvaluations')": [
                        102
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'backward')": [
                        118
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'polynomial')": [
                        136
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', None)": [
                        35,
                        45
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'dimensionCheck')": [
                        36
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'testMinStep')": [
                        46
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'testIncreasingTolerance')": [
                        67
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'exceedMaxEvaluations')": [
                        103
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'backward')": [
                        119
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'polynomial')": [
                        137
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', None)": [
                        34,
                        44
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'dimensionCheck')": [
                        35
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'testMinStep')": [
                        45
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'testIncreasingTolerance')": [
                        66
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'exceedMaxEvaluations')": [
                        102
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'backward')": [
                        118
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'polynomial')": [
                        136
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', None)": [
                        35,
                        45
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'dimensionCheck')": [
                        36
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'testMinStep')": [
                        46
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'testIncreasingTolerance')": [
                        67
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'exceedMaxEvaluations')": [
                        103
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'backward')": [
                        119
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'polynomial')": [
                        137
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        24,
                        32
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testMissedEndEvent')": [
                        42
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testSanityChecks')": [
                        103,
                        104,
                        105,
                        113,
                        114,
                        115,
                        123,
                        124
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', None)": [
                        125
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testDecreasingSteps')": [
                        131
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testSmallStep')": [
                        180
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testBigStep')": [
                        199
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testBackward')": [
                        218
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testKepler')": [
                        237
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testStepSize')": [
                        281
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testMissedEndEvent')": [
                        42
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testSanityChecks')": [
                        103,
                        111
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', None)": [
                        119
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testDecreasingSteps')": [
                        125
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testSmallStep')": [
                        174
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testBigStep')": [
                        193
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testBackward')": [
                        212
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testKepler')": [
                        231
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testStepSize')": [
                        275
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        28,
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'derivativesConsistency')": [
                        41
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'serialization')": [
                        50,
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'derivativesConsistency')": [
                        39
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'serialization')": [
                        48
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        30,
                        31
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', None)": [
                        41,
                        53,
                        54,
                        55,
                        56,
                        57,
                        78,
                        79
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testDimensionCheck')": [
                        43,
                        50,
                        51,
                        52
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testMinStep')": [
                        60,
                        76,
                        77
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testSmallLastStep')": [
                        85
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testBackward')": [
                        111
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testIncreasingTolerance')": [
                        162
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testEvents')": [
                        204
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testKepler')": [
                        238
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testVariableSteps')": [
                        261
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', None)": [
                        40,
                        48,
                        49,
                        50
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testSmallLastStep')": [
                        73
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testBackward')": [
                        99
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testIncreasingTolerance')": [
                        150
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testEvents')": [
                        192
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testKepler')": [
                        226
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testVariableSteps')": [
                        249
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'derivativesConsistency')": [
                        43
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'serialization')": [
                        57,
                        58
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'checkClone')": [
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'derivativesConsistency')": [
                        42
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'serialization')": [
                        56
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'checkClone')": [
                        106
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testMissedEndEvent')": [
                        40
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', None)": [
                        96,
                        108,
                        109,
                        110,
                        111,
                        112,
                        124,
                        125,
                        126,
                        127,
                        128,
                        149,
                        150
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testDimensionCheck')": [
                        98,
                        106,
                        107
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testNullIntervalCheck')": [
                        114,
                        122,
                        123
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testMinStep')": [
                        131,
                        147,
                        148
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testIncreasingTolerance')": [
                        156
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testBackward')": [
                        193
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testEvents')": [
                        217
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testKepler')": [
                        250
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testVariableSteps')": [
                        273
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testUnstableDerivative')": [
                        294
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testMissedEndEvent')": [
                        41
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', None)": [
                        97,
                        106,
                        107,
                        108,
                        117,
                        118,
                        119
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testIncreasingTolerance')": [
                        142
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testBackward')": [
                        179
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testEvents')": [
                        203
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testKepler')": [
                        236
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testVariableSteps')": [
                        259
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testUnstableDerivative')": [
                        280
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'derivativesConsistency')": [
                        43
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'serialization')": [
                        57,
                        58
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'checklone')": [
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'derivativesConsistency')": [
                        42
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'serialization')": [
                        56
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'checklone')": [
                        106
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        24,
                        31
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', None)": [
                        40,
                        50,
                        51
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testDimensionCheck')": [
                        42,
                        48,
                        49
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testDecreasingSteps')": [
                        56
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testSmallStep')": [
                        102
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testBigStep')": [
                        123
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testBackward')": [
                        143
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testStepSize')": [
                        162
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', None)": [
                        38
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testDecreasingSteps')": [
                        49
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testSmallStep')": [
                        95
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testBigStep')": [
                        116
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testBackward')": [
                        136
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testStepSize')": [
                        155
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'noReset')": [
                        42
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'derivativesConsistency')": [
                        124
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'serialization')": [
                        133,
                        134
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'noReset')": [
                        41
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'derivativesConsistency')": [
                        123
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'serialization')": [
                        132
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        24,
                        32
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', None)": [
                        41,
                        51,
                        52
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testDimensionCheck')": [
                        43,
                        49,
                        50
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testDecreasingSteps')": [
                        57
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testSmallStep')": [
                        103
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testBigStep')": [
                        123
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testBackward')": [
                        142
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testKepler')": [
                        161
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testUnstableDerivative')": [
                        175
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testStepSize')": [
                        216
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', None)": [
                        40
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testDecreasingSteps')": [
                        51
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testSmallStep')": [
                        97
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testBigStep')": [
                        117
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testBackward')": [
                        136
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testKepler')": [
                        155
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testUnstableDerivative')": [
                        169
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testStepSize')": [
                        210
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26,
                        28,
                        30,
                        32
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', 'testDerivativesConsistency')": [
                        42
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', 'serialization')": [
                        51,
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        25
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', 'testDerivativesConsistency')": [
                        39
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', 'serialization')": [
                        48
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        23,
                        31
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', None)": [
                        41,
                        53,
                        54,
                        55,
                        56,
                        57,
                        69,
                        70,
                        71,
                        72,
                        73,
                        94,
                        95
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testDimensionCheck')": [
                        43,
                        50,
                        51,
                        52
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testNullIntervalCheck')": [
                        59,
                        66,
                        67,
                        68
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testMinStep')": [
                        76,
                        91,
                        92,
                        93
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testBackward')": [
                        101
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIncreasingTolerance')": [
                        125
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIntegratorControls')": [
                        163
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'getMaxError(FirstOrderIntegrator,TestProblemAbstract)')": [
                        192
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testEvents')": [
                        203
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testKepler')": [
                        236
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testVariableSteps')": [
                        259
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testUnstableDerivative')": [
                        279
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIssue596')": [
                        290
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', None)": [
                        41,
                        49,
                        50,
                        51,
                        59,
                        60,
                        61
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testBackward')": [
                        83
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIncreasingTolerance')": [
                        107
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIntegratorControls')": [
                        145
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'getMaxError(FirstOrderIntegrator,TestProblemAbstract)')": [
                        174
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testEvents')": [
                        185
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testKepler')": [
                        218
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testVariableSteps')": [
                        241
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testUnstableDerivative')": [
                        261
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIssue596')": [
                        272
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'derivativesConsistency')": [
                        43
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'serialization')": [
                        58,
                        59
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'checklone')": [
                        110
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'derivativesConsistency')": [
                        42
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'serialization')": [
                        57
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'checklone')": [
                        108
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        26,
                        32
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', None)": [
                        75,
                        96,
                        97,
                        231,
                        328
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testMinStep')": [
                        78,
                        94,
                        95
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testIncreasingTolerance')": [
                        103
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testBackward')": [
                        139
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testEvents')": [
                        163
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testEventsErrors')": [
                        214,
                        218
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testSanityChecks')": [
                        288,
                        298,
                        308,
                        318
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testKepler')": [
                        336
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', None)": [
                        75,
                        226,
                        323
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testIncreasingTolerance')": [
                        98
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testBackward')": [
                        134
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testEvents')": [
                        158
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testEventsErrors')": [
                        209,
                        213
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testSanityChecks')": [
                        283,
                        293,
                        303,
                        313
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testKepler')": [
                        331
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'derivativesConsistency')": [
                        43
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'serialization')": [
                        57,
                        58
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'checkClone')": [
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'derivativesConsistency')": [
                        42
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'serialization')": [
                        56
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'checkClone')": [
                        106
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        24,
                        31
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', None)": [
                        40,
                        50,
                        51
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testDimensionCheck')": [
                        42,
                        48,
                        49
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testDecreasingSteps')": [
                        56
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testSmallStep')": [
                        102
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testBigStep')": [
                        123
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testBackward')": [
                        143
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testStepSize')": [
                        162
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', None)": [
                        38
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testDecreasingSteps')": [
                        49
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testSmallStep')": [
                        95
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testBigStep')": [
                        116
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testBackward')": [
                        136
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testStepSize')": [
                        155
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        28,
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', 'testDerivativesConsistency')": [
                        42
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', 'serialization')": [
                        51,
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', 'testDerivativesConsistency')": [
                        40
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', 'serialization')": [
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        24,
                        32
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', None)": [
                        41,
                        51,
                        52
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testDimensionCheck')": [
                        43,
                        49,
                        50
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testDecreasingSteps')": [
                        57
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testSmallStep')": [
                        103
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testBigStep')": [
                        123
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testBackward')": [
                        142
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testKepler')": [
                        161
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testStepSize')": [
                        210
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', None)": [
                        40
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testDecreasingSteps')": [
                        51
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testSmallStep')": [
                        97
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testBigStep')": [
                        117
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testBackward')": [
                        136
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testKepler')": [
                        155
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testStepSize')": [
                        204
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        28,
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'derivativesConsistency')": [
                        41
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'serialization')": [
                        50,
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'derivativesConsistency')": [
                        39
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'serialization')": [
                        48
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        28,
                        30
                    ],
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolatorTest', 'derivativesConsistency')": [
                        40,
                        41
                    ],
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolatorTest', 'serialization')": [
                        49,
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolatorTest', 'derivativesConsistency')": [
                        38
                    ],
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolatorTest', 'serialization')": [
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/sampling/StepInterpolatorTestUtils.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.sampling#StepInterpolatorTestUtils', 'checkDerivativesConsistency(FirstOrderIntegrator,TestProblemAbstract,double)')": [
                        31,
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.sampling#StepInterpolatorTestUtils', 'checkDerivativesConsistency(FirstOrderIntegrator,TestProblemAbstract,double)')": [
                        30
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerOutputTestBase.java": {
                "old": {
                    "(None, None)": [
                        11
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testIncNeither')": [
                        84
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testIncNeitherRev')": [
                        90
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testIncFirst')": [
                        96
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testIncFirstRev')": [
                        102
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testIncLast')": [
                        108
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testIncLastRev')": [
                        114
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testIncBoth')": [
                        120
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testIncBothRev')": [
                        126
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testMulNeither')": [
                        132
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testMulNeitherRev')": [
                        138
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testMulFirst')": [
                        144
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testMulFirstRev')": [
                        150
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testMulLast')": [
                        156
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testMulLastRev')": [
                        162
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testMulBoth')": [
                        168
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testMulBothRev')": [
                        174
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'doTest(StepNormalizerMode,StepNormalizerBounds,double,boolean)')": [
                        189,
                        190,
                        191
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testIncNeither')": [
                        83
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testIncNeitherRev')": [
                        89
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testIncFirst')": [
                        95
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testIncFirstRev')": [
                        101
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testIncLast')": [
                        107
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testIncLastRev')": [
                        113
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testIncBoth')": [
                        119
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testIncBothRev')": [
                        125
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testMulNeither')": [
                        131
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testMulNeitherRev')": [
                        137
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testMulFirst')": [
                        143
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testMulFirstRev')": [
                        149
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testMulLast')": [
                        155
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testMulLastRev')": [
                        161
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testMulBoth')": [
                        167
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'testMulBothRev')": [
                        173
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerOutputTestBase', 'doTest(StepNormalizerMode,StepNormalizerBounds,double,boolean)')": [
                        188
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22,
                        25,
                        26
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerTest', 'testBoundaries')": [
                        43
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerTest', 'testBeforeEnd')": [
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.sampling#StepNormalizerTest', 'testBoundaries')": [
                        39
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerTest', 'testBeforeEnd')": [
                        67
                    ]
                }
            }
        }
    },
    "8b24302b3ddaa6c2bc90f61b3b65270846d0fba3": {
        "authored_data": "2011 Sep 02 15:07",
        "commit.message": "Added a getter to allow retrieving the exception related to an\nexception context provider.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1164570 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "c0b4954297ce01b64487c09a1dcfcc0124f7053b",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/MathArithmeticException.java": {
                "new": {
                    "('org.apache.commons.math.exception#MathArithmeticException', 'getException')": [
                        65,
                        66
                    ],
                    "('org.apache.commons.math.exception#MathArithmeticException', None)": [
                        67,
                        68,
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java": {
                "new": {
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', 'getException')": [
                        54,
                        55
                    ],
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', None)": [
                        56,
                        57,
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java": {
                "new": {
                    "('org.apache.commons.math.exception#MathIllegalStateException', 'getException')": [
                        76,
                        77
                    ],
                    "('org.apache.commons.math.exception#MathIllegalStateException', None)": [
                        78,
                        79,
                        80
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java": {
                "new": {
                    "('org.apache.commons.math.exception#MathUnsupportedOperationException', 'getException')": [
                        62,
                        63
                    ],
                    "('org.apache.commons.math.exception#MathUnsupportedOperationException', None)": [
                        64,
                        65,
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathUserException.java": {
                "new": {
                    "('org.apache.commons.math.exception#MathUserException', 'getException')": [
                        89,
                        90
                    ],
                    "('org.apache.commons.math.exception#MathUserException', None)": [
                        91,
                        92,
                        93
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/util/ExceptionContextProvider.java": {
                "new": {
                    "(None, None)": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38
                    ]
                }
            }
        }
    },
    "c0b4954297ce01b64487c09a1dcfcc0124f7053b": {
        "authored_data": "2011 Sep 02 11:09",
        "commit.message": "MATH-631\nEarly detection of \"Regula Falsi\" algorithm being stuck due to finite\nprecision.\nJavadoc makes it clear that either the Pegasus or the Illinois solver should\nbe preferred over the Regula Falsi one (due to D. Hendriks).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1164474 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "f78206e0658d13a73f6776779139b3ee5bd62528",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolver', None)": [
                        64,
                        65,
                        76,
                        77,
                        78
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolver', 'doSolve')": [
                        186
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolver', None)": [
                        65,
                        66,
                        77,
                        78,
                        79
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolver', 'doSolve')": [
                        187,
                        188,
                        189,
                        190,
                        191
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java": {
                "old": {
                    "(None, None)": [
                        29,
                        81
                    ],
                    "('org.apache.commons.math.analysis.solvers#IllinoisSolver', None)": [
                        52,
                        61,
                        62,
                        72,
                        73
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math.analysis.solvers#IllinoisSolver', None)": [
                        54,
                        63,
                        64,
                        74,
                        75
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30,
                        82
                    ],
                    "('org.apache.commons.math.analysis.solvers#PegasusSolver', None)": [
                        53,
                        62,
                        63,
                        73,
                        74
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33
                    ],
                    "('org.apache.commons.math.analysis.solvers#PegasusSolver', None)": [
                        56,
                        65,
                        66,
                        76,
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java": {
                "old": {
                    "(None, None)": [
                        20,
                        24,
                        25,
                        26
                    ],
                    "('org.apache.commons.math.analysis.solvers#RegulaFalsiSolver', None)": [
                        49,
                        58,
                        59,
                        69,
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43
                    ],
                    "('org.apache.commons.math.analysis.solvers#RegulaFalsiSolver', None)": [
                        66,
                        75,
                        76,
                        86,
                        87
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.analysis.solvers#RegulaFalsiSolverTest', None)": [
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.analysis.solvers#RegulaFalsiSolverTest', None)": [
                        44
                    ]
                }
            }
        }
    },
    "f78206e0658d13a73f6776779139b3ee5bd62528": {
        "authored_data": "2011 Sep 02 00:07",
        "commit.message": "MATH-413\nOptional, user-defined, convergence checker passed in the constructor.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1164303 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "681943d4f2fac25a5c0bce2f2f7c34171b162471",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java": {
                "old": {
                    "(None, None)": [
                        42,
                        43,
                        44
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', None)": [
                        70,
                        71,
                        79
                    ]
                },
                "new": {
                    "(None, None)": [
                        42,
                        43
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', None)": [
                        69,
                        70,
                        71,
                        75,
                        80,
                        81,
                        82,
                        83,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112
                    ]
                }
            }
        }
    },
    "681943d4f2fac25a5c0bce2f2f7c34171b162471": {
        "authored_data": "2011 Sep 01 23:37",
        "commit.message": "MATH-413\nConvergence checker passed in the constructor.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1164300 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "1ef23c7fb55f7eafcf2593070a82887d0bce586e",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java": {
                "old": {
                    "(None, None)": [
                        66,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizer', None)": [
                        86,
                        89,
                        97
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizer', None)": [
                        82,
                        83,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        101
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testMinimizeMaximize')": [
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        60,
                        61,
                        62,
                        63,
                        64,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testMinimize1')": [
                        30,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', None)": [
                        42,
                        43,
                        44,
                        57,
                        58,
                        59,
                        72,
                        73,
                        74,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testMinimize2')": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testMaximize1')": [
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testMaximize2')": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testMinimizeMaximize')": [
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testMinimize1')": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', None)": [
                        47,
                        48,
                        49,
                        62,
                        63,
                        64,
                        77,
                        78,
                        79,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testMinimize2')": [
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testMaximize1')": [
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testMaximize2')": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ]
                }
            }
        }
    },
    "1ef23c7fb55f7eafcf2593070a82887d0bce586e": {
        "authored_data": "2011 Sep 01 12:30",
        "commit.message": "MATH-413\nRemoved setters; convergence checker, line search solver and preconditioner\nset in contructor.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1164044 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "39cf1b2db08bc45ca66863f6e62d6307e35b0e0c",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        46,
                        48,
                        55,
                        56,
                        57,
                        61,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        233
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'setPreconditioner(Preconditioner)')": [
                        75
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'setLineSearchSolver(UnivariateRealSolver)')": [
                        85,
                        86
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        146
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        48,
                        50,
                        57,
                        58,
                        59,
                        63,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        121,
                        123,
                        264
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        147,
                        177
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTrivial')": [
                        103,
                        104
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testColumnsPermutation')": [
                        118,
                        119
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNoDependency')": [
                        139,
                        140
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testOneSet')": [
                        156,
                        157
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTwoSets')": [
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNonInversible')": [
                        213,
                        214
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testIllConditioned')": [
                        229,
                        230,
                        231,
                        232
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        264,
                        265
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        282,
                        283
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testRedundantEquations')": [
                        298,
                        299
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testInconsistentEquations')": [
                        316,
                        317
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testCircleFitting')": [
                        333,
                        334,
                        335,
                        336
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTrivial')": [
                        103,
                        104
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testColumnsPermutation')": [
                        118,
                        119
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNoDependency')": [
                        139,
                        140
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testOneSet')": [
                        156,
                        157
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTwoSets')": [
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNonInversible')": [
                        217,
                        218
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testIllConditioned')": [
                        233,
                        234,
                        235
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        267,
                        268
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        285,
                        286
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testRedundantEquations')": [
                        301,
                        302
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testInconsistentEquations')": [
                        319,
                        320
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testCircleFitting')": [
                        336,
                        337,
                        338
                    ]
                }
            }
        }
    },
    "39cf1b2db08bc45ca66863f6e62d6307e35b0e0c": {
        "authored_data": "2011 Sep 01 11:35",
        "commit.message": "Javadoc: indicated the assumed layout of the Jacobian matrix.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1164022 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "79b2462cb86c9b0b672c52beea1cff3ee12209e6",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "(None, None)": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46
                    ]
                }
            }
        }
    }
}