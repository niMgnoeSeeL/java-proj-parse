{
    "e5413fd48333983347b051db16fde5569799505b": {
        "authored_data": "2010 Nov 15 19:39",
        "commit.message": "added new constructors to MathUserException to provide more control to user\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1035419 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "0d52bf6394ad08107d964add56576821e31493f5",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/MathUserException.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.exception#MathUserException', None)": [
                        39,
                        41,
                        48,
                        51,
                        55,
                        56,
                        58,
                        59,
                        60,
                        64,
                        65,
                        66,
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.math.exception#MathUserException', 'getMessage(Locale)')": [
                        82,
                        83,
                        84,
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.exception#MathUserException', None)": [
                        39,
                        41,
                        42,
                        43,
                        44,
                        45,
                        52,
                        55,
                        59,
                        60,
                        62,
                        63,
                        67,
                        68,
                        69,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116
                    ],
                    "('org.apache.commons.math.exception#MathUserException', 'getMessage(Locale)')": [
                        126
                    ]
                }
            }
        }
    },
    "0d52bf6394ad08107d964add56576821e31493f5": {
        "authored_data": "2010 Nov 15 12:22",
        "commit.message": "MATH-441\nImplemented proposed solution (rethrow last exception if no optimum were found).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1035245 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "65e95d022448285c6547d90d5d9100715bbe0be5",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', None)": [
                        92,
                        98
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', 'optimize(FUNC,GoalType,double)')": [
                        138,
                        139,
                        144,
                        148,
                        149,
                        150,
                        162,
                        163
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', None)": [
                        92,
                        98,
                        99
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', 'optimize(FUNC,GoalType,double)')": [
                        139,
                        140,
                        142,
                        149,
                        150,
                        162
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        23,
                        26
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', None)": [
                        124,
                        125,
                        126,
                        127,
                        131
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', 'optimize(FUNC,GoalType,double,double)')": [
                        143,
                        144
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', 'optimize(FUNC,GoalType,double,double,double)')": [
                        151,
                        152,
                        161,
                        162,
                        163,
                        175,
                        176
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', None)": [
                        123,
                        124,
                        125,
                        126,
                        130,
                        131
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', 'optimize(FUNC,GoalType,double,double)')": [
                        143
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', 'optimize(FUNC,GoalType,double,double,double)')": [
                        150,
                        151,
                        160,
                        161,
                        173
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testSinMin')": [
                        35
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testQuinticMin')": [
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        99
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testSinMin')": [
                        35
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testQuinticMin')": [
                        56
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', None)": [
                        79,
                        80
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testBadFunction')": [
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98
                    ]
                }
            }
        }
    },
    "65e95d022448285c6547d90d5d9100715bbe0be5": {
        "authored_data": "2010 Nov 14 21:32",
        "commit.message": "reverting change introduced in 1035003:\nit was the javadoc that did not correspond to the intended behavior, not the code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1035072 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "318d66e1b170a3b57d54d7175cfb3e495f6d7fda",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/util/MessageFactory.java": {
                "old": {
                    "('org.apache.commons.math.exception.util#MessageFactory', None)": [
                        55,
                        56,
                        57
                    ],
                    "('org.apache.commons.math.exception.util#MessageFactory', 'buildMessage(Locale,Localizable,Localizable,Object)')": [
                        64,
                        66,
                        67,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        89,
                        90
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception.util#MessageFactory', None)": [
                        55,
                        56
                    ],
                    "('org.apache.commons.math.exception.util#MessageFactory', 'buildMessage(Locale,Localizable,Localizable,Object)')": [
                        64,
                        65,
                        66,
                        67,
                        69,
                        72,
                        73
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java": {
                "old": {
                    "('org.apache.commons.math.exception.util#MessageFactoryTest', 'testSpecificGeneral')": [
                        32
                    ],
                    "('org.apache.commons.math.exception.util#MessageFactoryTest', 'testNullSpecific')": [
                        39,
                        40
                    ],
                    "('org.apache.commons.math.exception.util#MessageFactoryTest', 'testNullGeneral')": [
                        47
                    ],
                    "('org.apache.commons.math.exception.util#MessageFactoryTest', None)": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception.util#MessageFactoryTest', 'testSpecificGeneral')": [
                        32
                    ],
                    "('org.apache.commons.math.exception.util#MessageFactoryTest', 'testNullSpecific')": [
                        39,
                        40
                    ],
                    "('org.apache.commons.math.exception.util#MessageFactoryTest', 'testNullGeneral')": [
                        47
                    ]
                }
            }
        }
    },
    "318d66e1b170a3b57d54d7175cfb3e495f6d7fda": {
        "authored_data": "2010 Nov 14 15:32",
        "commit.message": "allow either specific or generic formats to be null\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1035009 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "183ad3388d0d80bb144ce6cab79e0080d785eee6",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/util/MessageFactory.java": {
                "old": {
                    "('org.apache.commons.math.exception.util#MessageFactory', None)": [
                        53,
                        54
                    ],
                    "('org.apache.commons.math.exception.util#MessageFactory', 'buildMessage(Locale,Localizable,Localizable,Object)')": [
                        66,
                        83,
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception.util#MessageFactory', None)": [
                        53,
                        54
                    ],
                    "('org.apache.commons.math.exception.util#MessageFactory', 'buildMessage(Locale,Localizable,Localizable,Object)')": [
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/exception/util/MessageFactoryTest.java": {
                "old": {
                    "('org.apache.commons.math.exception.util#MessageFactoryTest', 'testSpecificGeneric')": [
                        27
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception.util#MessageFactoryTest', 'testSpecificGeneral')": [
                        27
                    ],
                    "('org.apache.commons.math.exception.util#MessageFactoryTest', None)": [
                        35,
                        41,
                        42,
                        43,
                        49,
                        50,
                        51,
                        52
                    ],
                    "('org.apache.commons.math.exception.util#MessageFactoryTest', 'testNullSpecific')": [
                        36,
                        37,
                        38,
                        39,
                        40
                    ],
                    "('org.apache.commons.math.exception.util#MessageFactoryTest', 'testNullGeneral')": [
                        44,
                        45,
                        46,
                        47,
                        48
                    ],
                    "('org.apache.commons.math.exception.util#MessageFactoryTest', 'testNull')": [
                        53,
                        54,
                        55
                    ],
                    "(None, None)": [
                        56,
                        57
                    ]
                }
            }
        }
    },
    "183ad3388d0d80bb144ce6cab79e0080d785eee6": {
        "authored_data": "2010 Nov 14 15:06",
        "commit.message": "fixed message building so the behavior matches the existing javadoc:\ngeneral arguments are the ones remaining after the specific ones have been handled\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1035003 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "07cd6619e0910812b65e1b36181175f20faf3f83",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/util/MessageFactory.java": {
                "old": {
                    "('org.apache.commons.math.exception.util#MessageFactory', 'buildMessage(Locale,Localizable,Localizable,Object)')": [
                        65,
                        66,
                        67,
                        70,
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception.util#MessageFactory', 'buildMessage(Locale,Localizable,Localizable,Object)')": [
                        64,
                        66,
                        67,
                        68,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        84,
                        86,
                        87
                    ]
                }
            }
        }
    },
    "07cd6619e0910812b65e1b36181175f20faf3f83": {
        "authored_data": "2010 Nov 14 15:04",
        "commit.message": "typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1035002 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "3f353cbde4f98c6a8158d4e597bc211bd050790a",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/util/ArgUtils.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            }
        }
    },
    "3f353cbde4f98c6a8158d4e597bc211bd050790a": {
        "authored_data": "2010 Nov 14 13:41",
        "commit.message": "MATH-441\nRemoved occurences of \"FunctionEvaluationException\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1034996 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "77c4e2f0c63bb018d31228831384871efdfe4947",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        48,
                        49,
                        57,
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        50,
                        51,
                        60,
                        61
                    ]
                },
                "new": {
                    "(None, None)": [
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        190,
                        192
                    ],
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', None)": [
                        102,
                        103,
                        108,
                        109,
                        116,
                        117,
                        118,
                        135,
                        141,
                        142,
                        146,
                        147,
                        149,
                        150,
                        151
                    ],
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', 'value(double)')": [
                        160,
                        161,
                        165,
                        166
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', None)": [
                        101,
                        102,
                        107,
                        108,
                        115,
                        132,
                        138,
                        139,
                        143,
                        145
                    ],
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', 'value(double)')": [
                        154,
                        158
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization.direct#AbstractSimplex', None)": [
                        203,
                        204,
                        210,
                        244
                    ],
                    "('org.apache.commons.math.optimization.direct#AbstractSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        209
                    ],
                    "('org.apache.commons.math.optimization.direct#AbstractSimplex', 'evaluate(MultivariateRealFunction,Comparator)')": [
                        249,
                        250,
                        251
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#AbstractSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        206
                    ],
                    "('org.apache.commons.math.optimization.direct#AbstractSimplex', 'evaluate(MultivariateRealFunction,Comparator)')": [
                        244
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        167
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', None)": [
                        103,
                        162,
                        163,
                        164
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'computeObjectiveValue(double)')": [
                        107,
                        108
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'optimize(FUNC,GoalType,double)')": [
                        120,
                        121
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'doOptimize')": [
                        166
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'computeObjectiveValue(double)')": [
                        105
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'optimize(FUNC,GoalType,double)')": [
                        117
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', None)": [
                        158
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'doOptimize')": [
                        160
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', None)": [
                        105,
                        165,
                        166,
                        169
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'computeObjectiveValue(double)')": [
                        109,
                        110
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'optimize(FUNC,double,double,double)')": [
                        122,
                        123
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'doOptimize')": [
                        168
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'computeObjectiveValue(double)')": [
                        107
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'optimize(FUNC,double,double,double)')": [
                        119
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'doOptimize')": [
                        162
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        157,
                        158
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalSimplex', None)": [
                        193,
                        194
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalSimplex', 'evaluateNewSimplex(MultivariateRealFunction,RealPointValuePair,double,Comparator)')": [
                        201,
                        202
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        156
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalSimplex', 'evaluateNewSimplex(MultivariateRealFunction,RealPointValuePair,double,Comparator)')": [
                        197
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.direct#NelderMeadSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        189,
                        190,
                        191
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#NelderMeadSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        188
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', 'doOptimize')": [
                        111,
                        112
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', None)": [
                        257,
                        258,
                        263,
                        264,
                        265,
                        268,
                        269
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', 'doOptimize')": [
                        110
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', None)": [
                        259,
                        262
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizer', 'doOptimize')": [
                        111,
                        112,
                        121,
                        122
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizer', 'doOptimize')": [
                        110,
                        119
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java": {
                "old": {
                    "(None, None)": [
                        23,
                        194,
                        196,
                        198
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitter', None)": [
                        60,
                        120,
                        121,
                        152,
                        166,
                        167,
                        168,
                        177,
                        183,
                        184,
                        185
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitter', 'fit(ParametricRealFunction,double)')": [
                        128,
                        129,
                        130
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.fitting#CurveFitter', None)": [
                        59,
                        160,
                        174
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitter', 'fit(ParametricRealFunction,double)')": [
                        125
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/GaussianDerivativeFunction.java": {
                "old": {
                    "(None, None)": [
                        22,
                        32,
                        36,
                        37,
                        104
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianDerivativeFunction', None)": [
                        44,
                        47,
                        50,
                        53,
                        60,
                        61,
                        62,
                        78,
                        79,
                        80,
                        81,
                        82
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianDerivativeFunction', 'value(double)')": [
                        100
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        35,
                        36
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianDerivativeFunction', None)": [
                        55,
                        56,
                        57,
                        73,
                        74,
                        75,
                        76,
                        77
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianDerivativeFunction', 'value(double)')": [
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java": {
                "old": {
                    "(None, None)": [
                        20,
                        45
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitter', None)": [
                        53,
                        67,
                        68,
                        70,
                        71,
                        78,
                        79,
                        81,
                        82,
                        83,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        109,
                        113,
                        114,
                        115
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitter', 'addObservedPoint(double,double)')": [
                        74
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitter', 'fit')": [
                        102,
                        103
                    ]
                },
                "new": {
                    "(None, None)": [
                        44
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitter', None)": [
                        65,
                        66,
                        68,
                        69,
                        76,
                        77,
                        79,
                        80,
                        81,
                        89,
                        91,
                        100,
                        104,
                        105
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitter', 'addObservedPoint(double,double)')": [
                        72
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitter', 'fit')": [
                        94
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/GaussianFunction.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFunction', 'value(double)')": [
                        120
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.fitting#GaussianFunction', 'value(double)')": [
                        119
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.optimization.fitting#HarmonicFitter', None)": [
                        75,
                        76,
                        77,
                        78,
                        107
                    ],
                    "('org.apache.commons.math.optimization.fitting#HarmonicFitter', 'fit')": [
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        101,
                        102,
                        104,
                        105,
                        106
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.fitting#HarmonicFitter', None)": [
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ],
                    "('org.apache.commons.math.optimization.fitting#HarmonicFitter', 'fit')": [
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        99,
                        100
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java": {
                "old": {
                    "(None, None)": [
                        22,
                        32,
                        36,
                        37,
                        38,
                        39,
                        43,
                        44,
                        45,
                        46,
                        165
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunction', None)": [
                        58,
                        63,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        96,
                        97,
                        98,
                        99,
                        101,
                        102,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        138,
                        143,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunction', 'value(double,double)')": [
                        84
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunction', 'gradient(double,double)')": [
                        125,
                        126
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunction', 'validateParameters(double)')": [
                        154,
                        161
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        35,
                        36,
                        37,
                        38,
                        42,
                        43,
                        44,
                        45
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunction', None)": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        84,
                        85,
                        86,
                        87,
                        89,
                        90,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        126,
                        128,
                        129,
                        130,
                        131,
                        132
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunction', 'value(double,double)')": [
                        72
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunction', 'gradient(double,double)')": [
                        110
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunction', 'validateParameters(double)')": [
                        134,
                        141
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/ParametricRealFunction.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        29,
                        32,
                        33,
                        34,
                        35,
                        37,
                        38,
                        42,
                        43,
                        44,
                        45,
                        47,
                        48,
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        30,
                        31,
                        32,
                        34,
                        38,
                        39,
                        40,
                        41,
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/PolynomialFitter.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.optimization.fitting#PolynomialFitter', 'fit')": [
                        79,
                        80,
                        81,
                        82,
                        83
                    ],
                    "('org.apache.commons.math.optimization.fitting#PolynomialFitter', None)": [
                        84,
                        93,
                        94
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.fitting#PolynomialFitter', 'fit')": [
                        77
                    ],
                    "('org.apache.commons.math.optimization.fitting#PolynomialFitter', None)": [
                        86
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        98,
                        99,
                        124,
                        125,
                        179,
                        180,
                        212,
                        213
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', None)": [
                        66,
                        67
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'computeObjectiveGradient(double)')": [
                        71,
                        72
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'optimize(DifferentiableMultivariateRealFunction,GoalType,double)')": [
                        80,
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'computeObjectiveGradient(double)')": [
                        68
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'optimize(DifferentiableMultivariateRealFunction,GoalType,double)')": [
                        76
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        65,
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        64
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        218,
                        219
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        217
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        112,
                        113
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        269
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'findUpperBound(UnivariateRealFunction,double,double)')": [
                        224,
                        225
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        111
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        266
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'findUpperBound(UnivariateRealFunction,double,double)')": [
                        222
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/Preconditioner.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        29,
                        46,
                        47,
                        49,
                        50,
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        172
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', None)": [
                        98,
                        99,
                        168,
                        169
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'computeObjectiveValue(double)')": [
                        103,
                        104
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'optimize(UnivariateRealFunction,GoalType,double,double,double)')": [
                        117,
                        118
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'optimize(UnivariateRealFunction,GoalType,double,double)')": [
                        142,
                        143
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'doOptimize')": [
                        171
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'computeObjectiveValue(double)')": [
                        100
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'optimize(UnivariateRealFunction,GoalType,double,double,double)')": [
                        113
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'optimize(UnivariateRealFunction,GoalType,double,double)')": [
                        137
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'doOptimize')": [
                        163
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        55,
                        56,
                        61,
                        62,
                        79,
                        80,
                        88,
                        89
                    ]
                },
                "new": {
                    "(None, None)": [
                        58,
                        82
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/BracketFinder.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', None)": [
                        112,
                        113,
                        283
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', 'search(UnivariateRealFunction,GoalType,double,double)')": [
                        118,
                        119
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', 'eval(UnivariateRealFunction,double)')": [
                        288,
                        289
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', 'search(UnivariateRealFunction,GoalType,double,double)')": [
                        115
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', 'eval(UnivariateRealFunction,double)')": [
                        283
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizer', 'doOptimize')": [
                        89,
                        90
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizer', 'doOptimize')": [
                        88
                    ]
                }
            }
        }
    },
    "77c4e2f0c63bb018d31228831384871efdfe4947": {
        "authored_data": "2010 Nov 14 13:33",
        "commit.message": "MATH-440\nDeprecation.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1034995 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "6a50b4cebc27c40f21eb4ae31a0959e7b32b6b85",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/FunctionEvaluationException.java": {
                "new": {
                    "(None, None)": [
                        32,
                        34
                    ]
                }
            }
        }
    },
    "6a50b4cebc27c40f21eb4ae31a0959e7b32b6b85": {
        "authored_data": "2010 Nov 13 22:27",
        "commit.message": "MATH-438\nRemoved deprecated methods.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1034896 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "09e1c64fe93063b522e75e61162fc2445ac3450f",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BisectionSolver', None)": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        54,
                        55,
                        56,
                        57,
                        61,
                        62,
                        63,
                        64
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolver', 'solve(double,double,double)')": [
                        58,
                        59,
                        60
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolver', 'solve(double,double)')": [
                        65,
                        66,
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', None)": [
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        91,
                        92,
                        93,
                        94,
                        98,
                        99,
                        100,
                        101
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(double,double)')": [
                        95,
                        96,
                        97
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(double,double,double)')": [
                        102,
                        103,
                        104
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', None)": [
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        87,
                        88,
                        89,
                        90,
                        94,
                        95,
                        96,
                        97
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'getPolynomialFunction')": [
                        85,
                        86
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(double,double)')": [
                        91,
                        92,
                        93
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(double,double,double)')": [
                        98,
                        99,
                        100
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', None)": [
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        60,
                        61,
                        62,
                        63,
                        67,
                        68,
                        69,
                        70,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', 'solve(double,double)')": [
                        64,
                        65,
                        66
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', 'solve(double,double,double)')": [
                        71,
                        72,
                        73
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', 'solve2(double,double)')": [
                        248,
                        249,
                        250
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', None)": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        56,
                        57,
                        58,
                        59,
                        64,
                        65,
                        66,
                        67
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', 'solve(double,double)')": [
                        60,
                        61,
                        62,
                        63
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', 'solve(double,double,double)')": [
                        68,
                        69,
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/RiddersSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        59,
                        60,
                        61,
                        62,
                        66,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', 'solve(double,double)')": [
                        63,
                        64,
                        65
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', 'solve(double,double,double)')": [
                        70,
                        71,
                        72
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', None)": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        64,
                        65,
                        66,
                        67,
                        71,
                        72,
                        73,
                        74
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', 'solve(double,double)')": [
                        68,
                        69,
                        70
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', 'solve(double,double,double)')": [
                        75,
                        76,
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java": {
                "old": {
                    "(None, None)": [
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', None)": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', None)": [
                        31,
                        32,
                        43
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testDeprecated')": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', None)": [
                        43,
                        44,
                        45
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testDeprecated')": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', None)": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        57
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testDeprecated')": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', None)": [
                        44,
                        45,
                        46,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        91,
                        92,
                        93
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testDeprecated')": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testDeprecated2')": [
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/NewtonSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', None)": [
                        33,
                        50,
                        51,
                        65,
                        66,
                        67
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', 'testDeprecated')": [
                        34,
                        38,
                        39,
                        42
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', 'testSinZero')": [
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', None)": [
                        33,
                        34,
                        35
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', 'testSinZero')": [
                        36,
                        40,
                        41,
                        44
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', None)": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        61
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testDeprecated')": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60
                    ]
                }
            }
        }
    },
    "09e1c64fe93063b522e75e61162fc2445ac3450f": {
        "authored_data": "2010 Nov 13 20:58",
        "commit.message": "MATH-441\nRemoved uses of \"FunctionEvaluationException\" and \"MathRuntimeException\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1034870 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "92569b044121bd6f01492e76fabc22368c24c51d",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonForm', None)": [
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        87,
                        88,
                        89,
                        90,
                        91,
                        123,
                        136,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        204
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonForm', 'value(double)')": [
                        92
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonForm', 'evaluate(double,double,double)')": [
                        159,
                        160,
                        161,
                        164,
                        166
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonForm', 'verifyInputArray(double,double)')": [
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        216,
                        217,
                        218
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonForm', None)": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        90,
                        91,
                        92,
                        124,
                        137,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        205,
                        206,
                        207,
                        208
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonForm', 'value(double)')": [
                        93
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonForm', 'evaluate(double,double,double)')": [
                        162,
                        165,
                        167
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonForm', 'verifyInputArray(double,double)')": [
                        212,
                        213,
                        214,
                        215,
                        218,
                        219
                    ]
                }
            }
        }
    }
}