{
    "ca9d46257a9d4026d790adec555096d453e3f629": {
        "authored_data": "2009 Jun 02 18:53",
        "commit.message": "merged the decomposition package back to the linear package.\nThis will allow later improvements as decomposition algorithms\nwill be able to see implementation details when more efficient\nmatrices implementations (for example based on blas) are added\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@781122 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "2e4082e52f45bd423df6c47fa19b6c5da8b9c009",
        "changes": {
            "src/java/org/apache/commons/math/estimation/AbstractEstimator.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/AbstractFieldMatrix.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/AbstractRealMatrix.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/BigMatrixImpl.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/FieldMatrix.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/RealMatrix.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java": {
                "old": {
                    "(None, None)": [
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        24,
                        25
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/BigMatrixImplTest.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/DenseFieldMatrixTest.java": {
                "old": {
                    "(None, None)": [
                        29,
                        30
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/DenseRealMatrixTest.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/FieldMatrixImplTest.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/RealMatrixImplTest.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/SparseFieldMatrixTest.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/SparseRealMatrixTest.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/AdamsIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsIntegratorTest', 'decreasingStepsBashforth')": [
                        50
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsIntegratorTest', 'polynomialBashforth')": [
                        147
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsIntegratorTest', 'polynomialMoulton')": [
                        302
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        34,
                        360,
                        361,
                        362
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsIntegratorTest', None)": [
                        40,
                        87,
                        108,
                        128,
                        147,
                        170,
                        197,
                        207,
                        247,
                        269,
                        288,
                        308,
                        327,
                        328
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsIntegratorTest', 'decreasingStepsBashforth')": [
                        52
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsIntegratorTest', 'polynomialBashforth')": [
                        153
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsIntegratorTest', 'polynomialMoulton')": [
                        315
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsIntegratorTest', 'comparison')": [
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359
                    ]
                }
            },
            "src/test/org/apache/commons/math/random/CorrelatedRandomVectorGeneratorTest.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            }
        }
    },
    "2e4082e52f45bd423df6c47fa19b6c5da8b9c009": {
        "authored_data": "2009 Jun 02 09:06",
        "commit.message": "fixed serialization problems\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@780976 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "86b19c0e8e24d73610928a25e238e13bde12c88e",
        "changes": {
            "src/java/org/apache/commons/math/optimization/linear/LinearConstraint.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#LinearConstraint', None)": [
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        25,
                        240,
                        241
                    ],
                    "('org.apache.commons.math.optimization.linear#LinearConstraint', None)": [
                        57,
                        187,
                        188,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235
                    ],
                    "('org.apache.commons.math.optimization.linear#LinearConstraint', 'equals(Object)')": [
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208
                    ],
                    "('org.apache.commons.math.optimization.linear#LinearConstraint', 'hashCode')": [
                        215,
                        216,
                        217,
                        218
                    ],
                    "('org.apache.commons.math.optimization.linear#LinearConstraint', 'writeObject(ObjectOutputStream)')": [
                        225,
                        226,
                        227,
                        228
                    ],
                    "('org.apache.commons.math.optimization.linear#LinearConstraint', 'readObject(ObjectInputStream)')": [
                        236,
                        237,
                        238,
                        239
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#LinearObjectiveFunction', None)": [
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        25,
                        153,
                        154
                    ],
                    "('org.apache.commons.math.optimization.linear#LinearObjectiveFunction', None)": [
                        48,
                        104,
                        105,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148
                    ],
                    "('org.apache.commons.math.optimization.linear#LinearObjectiveFunction', 'equals(Object)')": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123
                    ],
                    "('org.apache.commons.math.optimization.linear#LinearObjectiveFunction', 'hashCode')": [
                        130,
                        131
                    ],
                    "('org.apache.commons.math.optimization.linear#LinearObjectiveFunction', 'writeObject(ObjectOutputStream)')": [
                        138,
                        139,
                        140,
                        141
                    ],
                    "('org.apache.commons.math.optimization.linear#LinearObjectiveFunction', 'readObject(ObjectInputStream)')": [
                        149,
                        150,
                        151,
                        152
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', None)": [
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        28,
                        558
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', None)": [
                        76,
                        495,
                        496,
                        522,
                        523,
                        524,
                        525,
                        526,
                        527,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'equals(Object)')": [
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'hashCode')": [
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'writeObject(ObjectOutputStream)')": [
                        543,
                        544,
                        545,
                        546
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'readObject(ObjectInputStream)')": [
                        554,
                        555,
                        556,
                        557
                    ]
                }
            }
        }
    },
    "86b19c0e8e24d73610928a25e238e13bde12c88e": {
        "authored_data": "2009 Jun 02 09:05",
        "commit.message": "removed unneeded import statements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@780975 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "aa9e72afa84db37f5bd17bb38fe932324c28991f",
        "changes": {
            "src/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/RandomData.java": {
                "old": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/RandomGenerator.java": {
                "old": {
                    "(None, None)": [
                        19
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/RandomVectorGenerator.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/java/org/apache/commons/math/special/Gamma.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ]
                }
            }
        }
    },
    "aa9e72afa84db37f5bd17bb38fe932324c28991f": {
        "authored_data": "2009 Jun 02 09:03",
        "commit.message": "added utility methods to help serialize/deserialize classes that\nhave RealVector/RealMatrix fields (possibly final) since the\ntop level interfaces are not serializable anymore\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@780974 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "d9a1181fad2e0e77ef061a76e830de61e86c1ccb",
        "changes": {
            "src/java/org/apache/commons/math/linear/MatrixUtils.java": {
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        929,
                        930,
                        931,
                        932
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', None)": [
                        723,
                        724,
                        725,
                        726,
                        727,
                        728,
                        729,
                        730,
                        731,
                        732,
                        733,
                        734,
                        735,
                        736,
                        737,
                        738,
                        739,
                        740,
                        741,
                        742,
                        743,
                        744,
                        745,
                        746,
                        747,
                        748,
                        749,
                        750,
                        751,
                        752,
                        753,
                        754,
                        755,
                        756,
                        757,
                        758,
                        759,
                        760,
                        761,
                        762,
                        770,
                        771,
                        772,
                        773,
                        774,
                        775,
                        776,
                        777,
                        778,
                        779,
                        780,
                        781,
                        782,
                        783,
                        784,
                        785,
                        786,
                        787,
                        788,
                        789,
                        820,
                        821,
                        822,
                        823,
                        824,
                        825,
                        826,
                        827,
                        828,
                        829,
                        830,
                        831,
                        832,
                        833,
                        834,
                        835,
                        836,
                        837,
                        838,
                        839,
                        840,
                        841,
                        842,
                        843,
                        844,
                        845,
                        846,
                        847,
                        848,
                        849,
                        850,
                        851,
                        852,
                        853,
                        854,
                        855,
                        856,
                        857,
                        858,
                        859,
                        860,
                        861,
                        862,
                        863,
                        874,
                        875,
                        876,
                        877,
                        878,
                        879,
                        880,
                        881,
                        882,
                        883,
                        884,
                        885,
                        886,
                        887,
                        888,
                        889,
                        890,
                        891,
                        892,
                        893,
                        894
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'serializeRealVector(RealVector,ObjectOutputStream)')": [
                        763,
                        764,
                        765,
                        766,
                        767,
                        768,
                        769
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'deserializeRealVector(Object,String,ObjectInputStream)')": [
                        790,
                        791,
                        792,
                        793,
                        794,
                        795,
                        796,
                        797,
                        798,
                        799,
                        800,
                        801,
                        802,
                        803,
                        804,
                        805,
                        806,
                        807,
                        808,
                        809,
                        810,
                        811,
                        812,
                        813,
                        814,
                        815,
                        816,
                        817,
                        818,
                        819
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'serializeRealMatrix(RealMatrix,ObjectOutputStream)')": [
                        864,
                        865,
                        866,
                        867,
                        868,
                        869,
                        870,
                        871,
                        872,
                        873
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'deserializeRealMatrix(Object,String,ObjectInputStream)')": [
                        895,
                        896,
                        897,
                        898,
                        899,
                        900,
                        901,
                        902,
                        903,
                        904,
                        905,
                        906,
                        907,
                        908,
                        909,
                        910,
                        911,
                        912,
                        913,
                        914,
                        915,
                        916,
                        917,
                        918,
                        919,
                        920,
                        921,
                        922,
                        923,
                        924,
                        925,
                        926,
                        927,
                        928
                    ]
                }
            }
        }
    },
    "d9a1181fad2e0e77ef061a76e830de61e86c1ccb": {
        "authored_data": "2009 Jun 02 09:01",
        "commit.message": "fixed javadoc copy/paste error\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@780973 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "83dd172df83275d8050287a4e51337af00ab4858",
        "changes": {
            "src/java/org/apache/commons/math/linear/RealVectorImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealVectorImpl', None)": [
                        1343,
                        1344,
                        1345
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#RealVectorImpl', None)": [
                        1343,
                        1344,
                        1345
                    ]
                }
            }
        }
    },
    "83dd172df83275d8050287a4e51337af00ab4858": {
        "authored_data": "2009 Jun 02 04:39",
        "commit.message": "More serialization changes.\n\nNot clear what I should do with RandomAdaptor.  So I've let it remained broken (no public no-opt construtor, but Serializable).\n\nFeel free to -1 anything that I've stripped Serializable from and you care about, but I think I've been pretty conservative.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@780933 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "William Barker",
        "pcid": "b507b231f06fc00631677e15e2e0c9ec76114d39",
        "changes": {
            "src/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#AbstractLinearOptimizer', None)": [
                        36,
                        37,
                        38
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java": {
                "old": {
                    "(None, None)": [
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        54
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/linear/SimplexSolver.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', None)": [
                        31,
                        32,
                        33
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/AbstractRandomGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#AbstractRandomGenerator', None)": [
                        37,
                        38,
                        39
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#CorrelatedRandomVectorGenerator', None)": [
                        65,
                        66,
                        67
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/GaussianRandomGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#GaussianRandomGenerator', None)": [
                        30,
                        31,
                        32
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/NormalizedRandomGenerator.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/RandomData.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/RandomGenerator.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/RandomVectorGenerator.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#UncorrelatedRandomVectorGenerator', None)": [
                        35,
                        36,
                        37
                    ]
                }
            },
            "src/java/org/apache/commons/math/special/Beta.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.special#Beta', None)": [
                        30,
                        31,
                        32,
                        33
                    ]
                },
                "new": {
                    "('org.apache.commons.math.special#Beta', None)": [
                        28
                    ]
                }
            },
            "src/java/org/apache/commons/math/special/Erf.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.special#Erf', None)": [
                        29,
                        30,
                        31,
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.math.special#Erf', None)": [
                        27
                    ]
                }
            },
            "src/java/org/apache/commons/math/special/Gamma.java": {
                "old": {
                    "('org.apache.commons.math.special#Gamma', None)": [
                        31,
                        33,
                        34,
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.math.special#Gamma', None)": [
                        31
                    ]
                }
            },
            "src/test/org/apache/commons/math/optimization/linear/SimplexTableauTest.java": {
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableauTest', 'testSerial')": [
                        77,
                        78,
                        79,
                        80,
                        81,
                        82
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableauTest', None)": [
                        83
                    ]
                }
            },
            "src/test/org/apache/commons/math/random/RandomAdaptorTest.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomAdaptorTest', None)": [
                        70,
                        71
                    ]
                }
            },
            "src/test/org/apache/commons/math/random/RandomDataTest.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataTest', None)": [
                        609
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataTest', None)": [
                        609,
                        610
                    ]
                }
            },
            "src/test/org/apache/commons/math/random/TestRandomGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#TestRandomGenerator', None)": [
                        29
                    ]
                }
            },
            "src/test/org/apache/commons/math/random/UniformRandomGeneratorTest.java": {
                "old": {
                    "('org.apache.commons.math.random#UniformRandomGeneratorTest', None)": [
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#UniformRandomGeneratorTest', None)": [
                        42,
                        43
                    ]
                }
            }
        }
    },
    "b507b231f06fc00631677e15e2e0c9ec76114d39": {
        "authored_data": "2009 Jun 01 15:10",
        "commit.message": "fixed javadoc warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@780674 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "f930f13e4eddc79e017295059f7d7b702188ec52",
        "changes": {
            "src/java/org/apache/commons/math/MathException.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/java/org/apache/commons/math/fraction/AbstractFormat.java": {
                "old": {
                    "('org.apache.commons.math.fraction#AbstractFormat', None)": [
                        188,
                        205
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#AbstractFormat', None)": [
                        188,
                        205
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/DenseFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#DenseFieldMatrix', None)": [
                        125,
                        144,
                        145,
                        197,
                        205,
                        257,
                        264,
                        265
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#DenseFieldMatrix', None)": [
                        125,
                        144,
                        145,
                        197,
                        198,
                        206,
                        258,
                        259,
                        266,
                        267
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/FieldMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#FieldMatrixImpl', None)": [
                        73,
                        80,
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#FieldMatrixImpl', None)": [
                        73,
                        80,
                        101
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/FieldVector.java": {
                "old": {
                    "(None, None)": [
                        332
                    ]
                },
                "new": {
                    "(None, None)": [
                        332
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/FieldVectorImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#FieldVectorImpl', None)": [
                        58,
                        59,
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#FieldVectorImpl', None)": [
                        58,
                        59,
                        116
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/SparseFieldVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseFieldVector', None)": [
                        50,
                        51,
                        52,
                        53,
                        167
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SparseFieldVector', None)": [
                        50,
                        51,
                        52,
                        53,
                        167,
                        168,
                        169,
                        170,
                        171
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer.java": {
                "old": {
                    "(None, None)": [
                        56,
                        57,
                        66,
                        67
                    ]
                },
                "new": {
                    "(None, None)": [
                        56,
                        57,
                        58,
                        67,
                        68,
                        69
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/LeastSquaresConverter.java": {
                "old": {
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', None)": [
                        109,
                        142
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', None)": [
                        109,
                        142
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizer', None)": [
                        93,
                        95,
                        96,
                        99,
                        100,
                        109,
                        115
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizer', None)": [
                        92,
                        93,
                        95,
                        96,
                        99,
                        100,
                        109,
                        115
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizer', None)": [
                        94,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        110,
                        111,
                        116,
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizer', None)": [
                        93,
                        94,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        110,
                        111,
                        116,
                        117
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.optimization#MultiStartUnivariateRealOptimizer', None)": [
                        143,
                        145,
                        146,
                        149,
                        159,
                        160,
                        165,
                        166
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartUnivariateRealOptimizer', None)": [
                        142,
                        144,
                        145,
                        148,
                        158,
                        159,
                        164,
                        165
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/VectorialConvergenceChecker.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', None)": [
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', None)": [
                        56
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        67,
                        68,
                        70,
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        67,
                        68,
                        70,
                        71
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/linear/LinearOptimizer.java": {
                "old": {
                    "(None, None)": [
                        23,
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        69
                    ]
                }
            },
            "src/java/org/apache/commons/math/util/DefaultTransformer.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.util#DefaultTransformer', None)": [
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.util#DefaultTransformer', None)": [
                        44
                    ]
                }
            }
        }
    },
    "f930f13e4eddc79e017295059f7d7b702188ec52": {
        "authored_data": "2009 Jun 01 13:24",
        "commit.message": "fixed javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@780645 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "419531014acc9c937b3579e213d2a57a8f608e7a",
        "changes": {
            "src/java/org/apache/commons/math/linear/SparseFieldMatrix.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27,
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27,
                        28,
                        29
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/SparseFieldVector.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', None)": [
                        62,
                        86,
                        98
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        32
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', None)": [
                        54,
                        63,
                        86,
                        99,
                        134
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/Frequency.java": {
                "old": {
                    "('org.apache.commons.math.stat#Frequency', None)": [
                        502,
                        503,
                        504,
                        514,
                        515,
                        516
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'hashCode')": [
                        509,
                        510
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat#Frequency', None)": [
                        502,
                        512
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'hashCode')": [
                        507,
                        508
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#VectorialCovariance', None)": [
                        121,
                        133
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#VectorialCovariance', None)": [
                        121,
                        133
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#VectorialMean', None)": [
                        81,
                        90
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#VectorialMean', None)": [
                        81,
                        90
                    ]
                }
            }
        }
    },
    "419531014acc9c937b3579e213d2a57a8f608e7a": {
        "authored_data": "2009 Jun 01 13:23",
        "commit.message": "remove impossible serialization\n(function is no more serializable)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@780644 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "3442dcd54aa2cc94ab6bb079a8ab5e7c65bd6f25",
        "changes": {
            "src/java/org/apache/commons/math/optimization/LeastSquaresConverter.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', None)": [
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', None)": [
                        57
                    ]
                }
            }
        }
    }
}