{
    "ed78ce27aab2214bd433fd7b43c84fc72d146455": {
        "authored_data": "2016 May 11 13:56",
        "commit.message": "Unused \"import\".\n",
        "commit.author.name": "Gilles",
        "pcid": "829a4e9ce35d43670a7061b957ac951901c31ad3",
        "changes": {
            "src/test/java/org/apache/commons/math4/distribution/BetaDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ]
                }
            }
        }
    },
    "829a4e9ce35d43670a7061b957ac951901c31ad3": {
        "authored_data": "2016 May 11 13:03",
        "commit.message": "MATH-1335\n\nUse new RNG API.\n",
        "commit.author.name": "Gilles",
        "pcid": "63a9488f2910434851e98a8fc0ec8c053b24083b",
        "changes": {
            "src/main/java/org/apache/commons/math4/random/UnitSphereRandomVectorGenerator.java": {
                "old": {
                    "('org.apache.commons.math4.random#UnitSphereRandomVectorGenerator', None)": [
                        31,
                        33,
                        41,
                        44,
                        46,
                        55
                    ],
                    "('org.apache.commons.math4.random#UnitSphereRandomVectorGenerator', 'nextVector')": [
                        68
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math4.random#UnitSphereRandomVectorGenerator', None)": [
                        35,
                        37,
                        45,
                        48,
                        50,
                        59
                    ],
                    "('org.apache.commons.math4.random#UnitSphereRandomVectorGenerator', 'nextVector')": [
                        72
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/enclosing/WelzlEncloser3DTest.java": {
                "old": {
                    "(None, None)": [
                        29,
                        31
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser3DTest', 'testLargeSamples')": [
                        107
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser3DTest', 'testLargeSamples')": [
                        107,
                        108
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/threed/FieldRotationDSTest.java": {
                "old": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testDoubleVectors')": [
                        962,
                        963
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testDoubleRotations')": [
                        997,
                        998
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        34
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testDoubleVectors')": [
                        963,
                        964
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testDoubleRotations')": [
                        998,
                        999
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/threed/FieldRotationDfpTest.java": {
                "old": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testDoubleVectors')": [
                        803,
                        804
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testDoubleRotations')": [
                        838,
                        840
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        33
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testDoubleVectors')": [
                        804,
                        805
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testDoubleRotations')": [
                        839,
                        840
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/threed/SphereGeneratorTest.java": {
                "old": {
                    "(None, None)": [
                        27,
                        29
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#SphereGeneratorTest', 'testRandom')": [
                        140
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#SphereGeneratorTest', None)": [
                        154
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#SphereGeneratorTest', 'testRandom')": [
                        140,
                        141
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/twod/DiskGeneratorTest.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#DiskGeneratorTest', 'testRandom')": [
                        105
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        30
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#DiskGeneratorTest', 'testRandom')": [
                        106,
                        107
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/spherical/twod/CircleTest.java": {
                "old": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#CircleTest', 'testInsideArc')": [
                        138,
                        139
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#CircleTest', 'testTransform')": [
                        161
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        34
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#CircleTest', 'testInsideArc')": [
                        139,
                        140
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#CircleTest', 'testTransform')": [
                        162,
                        163
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/spherical/twod/SphericalPolygonsSetTest.java": {
                "old": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testFullSphere')": [
                        50
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testEmpty')": [
                        67
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testSouthHemisphere')": [
                        85
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testPositiveOctantByIntersection')": [
                        120
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testPositiveOctantByVertices')": [
                        184
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testNonConvex')": [
                        209
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testSeveralParts')": [
                        342
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testFullSphere')": [
                        50,
                        51
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testEmpty')": [
                        68,
                        69
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testSouthHemisphere')": [
                        87,
                        88
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testPositiveOctantByIntersection')": [
                        123,
                        124
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testPositiveOctantByVertices')": [
                        188,
                        189
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testNonConvex')": [
                        214,
                        215
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testSeveralParts')": [
                        348,
                        349
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/random/UnitSphereRandomVectorGeneratorTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math4.random#UnitSphereRandomVectorGeneratorTest', 'test2DDistribution')": [
                        34,
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math4.random#UnitSphereRandomVectorGeneratorTest', 'test2DDistribution')": [
                        34
                    ]
                }
            }
        }
    },
    "63a9488f2910434851e98a8fc0ec8c053b24083b": {
        "authored_data": "2016 May 11 12:25",
        "commit.message": "MATH-1335\n\nUse new RNG API.\n\nUnrelated code comments removed in unit test.\n",
        "commit.author.name": "Gilles",
        "pcid": "11409e628b0461be3c268f81642ce36bc4b0bf84",
        "changes": {
            "src/main/java/org/apache/commons/math4/optim/univariate/MultiStartUnivariateOptimizer.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math4.optim.univariate#MultiStartUnivariateOptimizer', None)": [
                        50,
                        78
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math4.optim.univariate#MultiStartUnivariateOptimizer', None)": [
                        50,
                        78
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/univariate/MultiStartUnivariateOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        31,
                        138
                    ],
                    "('org.apache.commons.math4.optim.univariate#MultiStartUnivariateOptimizerTest', 'testMissingMaxEval')": [
                        40,
                        41
                    ],
                    "('org.apache.commons.math4.optim.univariate#MultiStartUnivariateOptimizerTest', 'testMissingSearchInterval')": [
                        50,
                        51
                    ],
                    "('org.apache.commons.math4.optim.univariate#MultiStartUnivariateOptimizerTest', 'testSinMin')": [
                        62,
                        63
                    ],
                    "('org.apache.commons.math4.optim.univariate#MultiStartUnivariateOptimizerTest', 'testQuinticMin')": [
                        82,
                        83,
                        86,
                        87,
                        95
                    ],
                    "('org.apache.commons.math4.optim.univariate#MultiStartUnivariateOptimizerTest', 'testBadFunction')": [
                        117,
                        118
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32
                    ],
                    "('org.apache.commons.math4.optim.univariate#MultiStartUnivariateOptimizerTest', 'testMissingMaxEval')": [
                        41
                    ],
                    "('org.apache.commons.math4.optim.univariate#MultiStartUnivariateOptimizerTest', 'testMissingSearchInterval')": [
                        50
                    ],
                    "('org.apache.commons.math4.optim.univariate#MultiStartUnivariateOptimizerTest', 'testSinMin')": [
                        61
                    ],
                    "('org.apache.commons.math4.optim.univariate#MultiStartUnivariateOptimizerTest', 'testQuinticMin')": [
                        82,
                        90
                    ],
                    "('org.apache.commons.math4.optim.univariate#MultiStartUnivariateOptimizerTest', 'testBadFunction')": [
                        112
                    ]
                }
            }
        }
    },
    "11409e628b0461be3c268f81642ce36bc4b0bf84": {
        "authored_data": "2016 May 11 12:06",
        "commit.message": "MATH-1335\n\nUse new RNG API.\n",
        "commit.author.name": "Gilles",
        "pcid": "0c9af5f450ce73da9b791051f861cb9a6420e0f1",
        "changes": {
            "src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java": {
                "old": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizer', None)": [
                        198,
                        199,
                        219,
                        230,
                        239
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizer', 'randn(int)')": [
                        1338
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizer', 'randn1(int,int)')": [
                        1352
                    ]
                },
                "new": {
                    "(None, None)": [
                        38,
                        39,
                        40
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizer', None)": [
                        200,
                        201,
                        221,
                        232,
                        241
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizer', 'randn(int)')": [
                        1340
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizer', 'randn1(int,int)')": [
                        1354
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        37
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', 'testMath864')": [
                        371
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', 'testFitAccuracyDependsOnBoundary')": [
                        402
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', 'doTest(MultivariateFunction,double,double,double,GoalType,int,boolean,int,double,double,double,int,PointValuePair)')": [
                        489
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', 'testMath864')": [
                        371
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', 'testFitAccuracyDependsOnBoundary')": [
                        402
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', 'doTest(MultivariateFunction,double,double,double,GoalType,int,boolean,int,double,double,double,int,PointValuePair)')": [
                        489
                    ]
                }
            }
        }
    },
    "0c9af5f450ce73da9b791051f861cb9a6420e0f1": {
        "authored_data": "2016 May 11 11:54",
        "commit.message": "MATH-1335\n\nUse new RNG API.\n",
        "commit.author.name": "Gilles",
        "pcid": "6fc152e4177e0482450b13eb7fe496de677ce5b6",
        "changes": {
            "src/main/java/org/apache/commons/math4/genetics/GeneticAlgorithm.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math4.genetics#GeneticAlgorithm', None)": [
                        33,
                        34,
                        35,
                        38
                    ],
                    "('org.apache.commons.math4.genetics#GeneticAlgorithm', 'setRandomGenerator(RandomGenerator)')": [
                        93
                    ],
                    "('org.apache.commons.math4.genetics#GeneticAlgorithm', 'getRandomGenerator')": [
                        102
                    ],
                    "('org.apache.commons.math4.genetics#GeneticAlgorithm', 'nextGeneration(Population)')": [
                        151
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math4.genetics#GeneticAlgorithm', None)": [
                        33,
                        34,
                        35,
                        38
                    ],
                    "('org.apache.commons.math4.genetics#GeneticAlgorithm', 'setRandomGenerator(UniformRandomProvider)')": [
                        93
                    ],
                    "('org.apache.commons.math4.genetics#GeneticAlgorithm', 'getRandomGenerator')": [
                        102
                    ],
                    "('org.apache.commons.math4.genetics#GeneticAlgorithm', 'nextGeneration(Population)')": [
                        151
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/genetics/NPointCrossover.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math4.genetics#NPointCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        145
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math4.genetics#NPointCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        145
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/genetics/OrderedCrossover.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math4.genetics#OrderedCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        106
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math4.genetics#OrderedCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        106
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/genetics/UniformCrossover.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math4.genetics#UniformCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        118
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math4.genetics#UniformCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        118
                    ]
                }
            }
        }
    },
    "6fc152e4177e0482450b13eb7fe496de677ce5b6": {
        "authored_data": "2016 May 11 11:38",
        "commit.message": "MATH-1335\n\nUse new RNG API.\n",
        "commit.author.name": "Gilles",
        "pcid": "f81e0465460ff9abd450eda836bbb4f9b13837c7",
        "changes": {
            "src/main/java/org/apache/commons/math4/util/RandomPivotingStrategy.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math4.util#RandomPivotingStrategy', None)": [
                        35,
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math4.util#RandomPivotingStrategy', None)": [
                        35,
                        40
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/stat/descriptive/rank/PercentileTest.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math4.stat.descriptive.rank#PercentileTest', 'testAllTechniquesPercentileUsingRandomPivoting')": [
                        320
                    ],
                    "('org.apache.commons.math4.stat.descriptive.rank#PercentileTest', 'testAllEstimationTechniquesOnlyForAllPivotingStrategies')": [
                        699
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.descriptive.rank#PercentileTest', 'testAllTechniquesPercentileUsingRandomPivoting')": [
                        319
                    ],
                    "('org.apache.commons.math4.stat.descriptive.rank#PercentileTest', 'testAllEstimationTechniquesOnlyForAllPivotingStrategies')": [
                        698
                    ]
                }
            }
        }
    },
    "f81e0465460ff9abd450eda836bbb4f9b13837c7": {
        "authored_data": "2016 May 11 11:25",
        "commit.message": "MATH-1335\n\nUse new RNG API.\n",
        "commit.author.name": "Gilles",
        "pcid": "57e01f404ecf77b31d301231bf09184ee87e69f7",
        "changes": {
            "src/main/java/org/apache/commons/math4/ml/clustering/FuzzyKMeansClusterer.java": {
                "old": {
                    "(None, None)": [
                        31,
                        32
                    ],
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClusterer', None)": [
                        86,
                        123,
                        140
                    ],
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClusterer', 'getRandomGenerator')": [
                        195
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32
                    ],
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClusterer', None)": [
                        86,
                        123,
                        140
                    ],
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClusterer', 'getRandomGenerator')": [
                        195
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/clustering/KMeansPlusPlusClusterer.java": {
                "old": {
                    "(None, None)": [
                        31,
                        32
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClusterer', None)": [
                        68,
                        112,
                        128,
                        144
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClusterer', 'getRandomGenerator')": [
                        173
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClusterer', None)": [
                        68,
                        112,
                        128,
                        144
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClusterer', 'getRandomGenerator')": [
                        173
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/clustering/FuzzyKMeansClustererTest.java": {
                "old": {
                    "(None, None)": [
                        31,
                        32
                    ],
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClustererTest', 'testGetters')": [
                        100
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32
                    ],
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClustererTest', 'testGetters')": [
                        100
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/clustering/KMeansPlusPlusClustererTest.java": {
                "old": {
                    "(None, None)": [
                        31,
                        32
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClustererTest', None)": [
                        39
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClustererTest', 'setUp')": [
                        43,
                        44
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClustererTest', 'testSmallDistances')": [
                        155,
                        158
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClustererTest', None)": [
                        39
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClustererTest', 'setUp')": [
                        43
                    ]
                }
            }
        }
    },
    "085816b7cf48c7eb30bfed2c6197730552a1d55e": {
        "authored_data": "2016 May 17 11:09",
        "commit.message": "Javadoc.\n",
        "commit.author.name": "Gilles",
        "pcid": "bc93a9f76a9ffca55fec5b5ccba49505fd22f0ff",
        "changes": {
            "src/main/java/org/apache/commons/math4/special/Gamma.java": {
                "old": {
                    "('org.apache.commons.math4.special#Gamma', None)": [
                        217,
                        222,
                        240,
                        269,
                        270,
                        271,
                        273,
                        281,
                        299,
                        300,
                        305,
                        350,
                        351,
                        352,
                        353,
                        354,
                        362,
                        377,
                        378,
                        383,
                        426,
                        480,
                        481,
                        482,
                        483,
                        484,
                        485,
                        489,
                        516,
                        520,
                        521,
                        543,
                        546,
                        547,
                        548,
                        636,
                        639,
                        640,
                        641,
                        661,
                        664,
                        665,
                        666
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.special#Gamma', None)": [
                        217,
                        222,
                        229,
                        241,
                        270,
                        271,
                        272,
                        274,
                        282,
                        300,
                        301,
                        306,
                        351,
                        352,
                        353,
                        354,
                        355,
                        363,
                        378,
                        379,
                        384,
                        427,
                        428,
                        429,
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        493,
                        519,
                        520,
                        525,
                        526,
                        533,
                        538,
                        550,
                        551,
                        554,
                        555,
                        556,
                        557,
                        560,
                        646,
                        647,
                        650,
                        651,
                        652,
                        653,
                        673,
                        674,
                        677,
                        678,
                        679,
                        680,
                        681
                    ]
                }
            }
        }
    },
    "bc93a9f76a9ffca55fec5b5ccba49505fd22f0ff": {
        "authored_data": "2016 May 17 11:08",
        "commit.message": "Javadoc.\n",
        "commit.author.name": "Gilles",
        "pcid": "d731d1645ab34c597d66b9195a58b6c66c98ed68",
        "changes": {
            "src/main/java/org/apache/commons/math4/util/IntegerSequence.java": {
                "old": {
                    "('org.apache.commons.math4.util#IntegerSequence', None)": [
                        51,
                        52,
                        53,
                        81,
                        82,
                        83
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.util#IntegerSequence', None)": [
                        51,
                        52,
                        53,
                        54,
                        82,
                        83,
                        84,
                        85
                    ]
                }
            }
        }
    }
}