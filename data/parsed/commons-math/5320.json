{
    "acd879648cc47f2fedd6c1e419157bb8f51244c0": {
        "authored_data": "2009 May 16 14:29",
        "commit.message": "Javadoc fix.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@775470 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "ebf43bf12c27ae370ec0c60518e11308cbefed74",
        "changes": {
            "src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java": {
                "old": {
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', None)": [
                        351,
                        354,
                        356
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', None)": [
                        351,
                        355
                    ]
                }
            }
        }
    },
    "ebf43bf12c27ae370ec0c60518e11308cbefed74": {
        "authored_data": "2009 May 09 15:29",
        "commit.message": "suppressed two warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@773236 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "6a24e9d8a5e9a524fb02390b934f82aac4eff205",
        "changes": {
            "src/test/org/apache/commons/math/stat/FrequencyTest.java": {
                "old": {
                    "('org.apache.commons.math.stat#FrequencyTest', 'testIntegerValues')": [
                        251
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat#FrequencyTest', None)": [
                        193
                    ],
                    "('org.apache.commons.math.stat#FrequencyTest', 'testIntegerValues')": [
                        252
                    ]
                }
            }
        }
    },
    "6a24e9d8a5e9a524fb02390b934f82aac4eff205": {
        "authored_data": "2009 May 09 15:05",
        "commit.message": "check computed variances in test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@773230 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "2ba5fd1cbc6c5dbb0eb4a83550f0fbfd69adeb4a",
        "changes": {
            "src/test/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testPerfectFit')": [
                        85,
                        86,
                        89,
                        90
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', None)": [
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        24,
                        26
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testPerfectFit')": [
                        88,
                        89,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ]
                }
            }
        }
    },
    "2ba5fd1cbc6c5dbb0eb4a83550f0fbfd69adeb4a": {
        "authored_data": "2009 May 09 09:57",
        "commit.message": "completed internationalization of all error messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@773189 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "f4dbd2ecf5ac84904d23ea3f5e1768de5cf241c2",
        "changes": {
            "src/java/org/apache/commons/math/MessagesResources_fr.java": {
                "old": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        639,
                        640
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        94,
                        95,
                        338,
                        388,
                        389,
                        390,
                        391,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        656,
                        657,
                        658,
                        659,
                        660,
                        661,
                        662,
                        663,
                        664,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671,
                        672,
                        673,
                        674,
                        675,
                        676,
                        677,
                        678,
                        679,
                        681,
                        682,
                        683,
                        684,
                        685,
                        686
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java": {
                "old": {
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquare(double,long)')": [
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTest(double,long,double)')": [
                        135,
                        136
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTest(long,double)')": [
                        202
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareDataSetsComparison(long,long)')": [
                        218,
                        219,
                        220,
                        221,
                        223,
                        224,
                        225,
                        226,
                        237,
                        238,
                        239,
                        253,
                        254
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTestDataSetsComparison(long,long,double)')": [
                        297,
                        298
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'checkArray(long)')": [
                        314,
                        318,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', None)": [
                        327,
                        348,
                        349,
                        350,
                        351,
                        352,
                        355,
                        356,
                        357,
                        365,
                        366,
                        367,
                        368,
                        369,
                        372,
                        373,
                        374,
                        382,
                        383,
                        384,
                        385,
                        386,
                        389,
                        390,
                        391
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'isRectangular(long)')": [
                        341,
                        344,
                        347
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'isPositive(double)')": [
                        358,
                        359,
                        361,
                        362,
                        363,
                        364
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'isNonNegative(long)')": [
                        375,
                        376,
                        378,
                        379,
                        380,
                        381,
                        392,
                        396,
                        400
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquare(double,long)')": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTest(double,long,double)')": [
                        139,
                        140,
                        141
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTest(long,double)')": [
                        207,
                        208,
                        209
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareDataSetsComparison(long,long)')": [
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        237,
                        238,
                        239,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        270,
                        271
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTestDataSetsComparison(long,long,double)')": [
                        314,
                        315,
                        316
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'checkArray(long)')": [
                        332,
                        333,
                        334,
                        338,
                        339,
                        340,
                        343,
                        344
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'checkRectangular(long)')": [
                        358,
                        361,
                        362,
                        363
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', None)": [
                        366,
                        367,
                        368,
                        369,
                        372,
                        373,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        388,
                        389,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        404,
                        405
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'checkPositive(double)')": [
                        374,
                        375,
                        377,
                        378,
                        379
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'checkNonNegative(long)')": [
                        390,
                        391,
                        393,
                        394,
                        395,
                        406,
                        410,
                        411,
                        412
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java": {
                "old": {
                    "('org.apache.commons.math.stat.inference#OneWayAnovaImpl', 'anovaTest(Collection,double)')": [
                        103
                    ],
                    "('org.apache.commons.math.stat.inference#OneWayAnovaImpl', 'anovaStats(Collection)')": [
                        124,
                        125,
                        131,
                        132
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.stat.inference#OneWayAnovaImpl', 'anovaTest(Collection,double)')": [
                        104,
                        105,
                        106
                    ],
                    "('org.apache.commons.math.stat.inference#OneWayAnovaImpl', 'anovaStats(Collection)')": [
                        127,
                        128,
                        129,
                        135,
                        136,
                        137
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/inference/TTestImpl.java": {
                "old": {
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'pairedT(double,double)')": [
                        78,
                        79,
                        80,
                        81
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'pairedTTest(double,double,double)')": [
                        163,
                        164,
                        165
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 't(double,double)')": [
                        186,
                        187,
                        188,
                        292,
                        293,
                        294,
                        295
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 't(double,StatisticalSummary)')": [
                        211,
                        212,
                        213
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticT(double,double)')": [
                        253,
                        254,
                        255,
                        256
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 't(StatisticalSummary,StatisticalSummary)')": [
                        333,
                        335,
                        336,
                        337,
                        338,
                        339
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticT(StatisticalSummary,StatisticalSummary)')": [
                        383,
                        384,
                        385,
                        386,
                        387
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(double,double)')": [
                        421,
                        422,
                        423,
                        591,
                        592,
                        593,
                        594
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(double,double,double)')": [
                        465,
                        466,
                        467,
                        700,
                        701,
                        702
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(double,StatisticalSummary)')": [
                        501,
                        502,
                        503
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(double,StatisticalSummary,double)')": [
                        547,
                        548,
                        549
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticTTest(double,double)')": [
                        635,
                        636,
                        637,
                        638
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticTTest(double,double,double)')": [
                        760,
                        761,
                        762
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(StatisticalSummary,StatisticalSummary)')": [
                        802,
                        803,
                        804,
                        805
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticTTest(StatisticalSummary,StatisticalSummary)')": [
                        845,
                        847,
                        848,
                        849,
                        850
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(StatisticalSummary,StatisticalSummary,double)')": [
                        913,
                        914,
                        915
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        1057,
                        1058,
                        1059
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'pairedT(double,double)')": [
                        79,
                        80
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'pairedTTest(double,double,double)')": [
                        162
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 't(double,double)')": [
                        183,
                        283,
                        284
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 't(double,StatisticalSummary)')": [
                        206
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticT(double,double)')": [
                        246,
                        247
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 't(StatisticalSummary,StatisticalSummary)')": [
                        322,
                        324,
                        325
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticT(StatisticalSummary,StatisticalSummary)')": [
                        369,
                        370
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(double,double)')": [
                        404,
                        566,
                        567
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(double,double,double)')": [
                        446,
                        671
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(double,StatisticalSummary)')": [
                        480
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(double,StatisticalSummary,double)')": [
                        524
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticTTest(double,double)')": [
                        608,
                        609
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticTTest(double,double,double)')": [
                        729
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(StatisticalSummary,StatisticalSummary)')": [
                        769,
                        770
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticTTest(StatisticalSummary,StatisticalSummary)')": [
                        810,
                        812,
                        813
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(StatisticalSummary,StatisticalSummary,double)')": [
                        876
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', None)": [
                        1020,
                        1021,
                        1022,
                        1023,
                        1024,
                        1031,
                        1032,
                        1033,
                        1034,
                        1035,
                        1036,
                        1037,
                        1044,
                        1045,
                        1046,
                        1047,
                        1048,
                        1049,
                        1050
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'checkSignificanceLevel(double)')": [
                        1025,
                        1026,
                        1027,
                        1028,
                        1029,
                        1030
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'checkSampleData(double)')": [
                        1038,
                        1039,
                        1040,
                        1041,
                        1042,
                        1043
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'checkSampleData(StatisticalSummary)')": [
                        1051,
                        1052,
                        1053,
                        1054,
                        1055,
                        1056
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'validateSampleData(double,double)')": [
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'validateCovarianceData(double,double)')": [
                        109,
                        110,
                        111,
                        113,
                        114,
                        117
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'validateSampleData(double,double)')": [
                        89,
                        90,
                        91,
                        92,
                        93
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'validateCovarianceData(double,double)')": [
                        107,
                        108,
                        111,
                        112,
                        113
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'solveUpperTriangular(RealMatrix,RealVector)')": [
                        202,
                        203,
                        204,
                        205
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', None)": [
                        220,
                        228,
                        229,
                        230
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'isUpperTriangular(RealMatrix,double)')": [
                        231,
                        238,
                        242
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'solveUpperTriangular(RealMatrix,RealVector)')": [
                        203
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', None)": [
                        218,
                        226,
                        227
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'checkUpperTriangular(RealMatrix,double)')": [
                        228,
                        235,
                        236,
                        237
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'getSlopeConfidenceInterval(double)')": [
                        551,
                        552
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'getSlopeConfidenceInterval(double)')": [
                        551,
                        552
                    ]
                }
            }
        }
    },
    "f4dbd2ecf5ac84904d23ea3f5e1768de5cf241c2": {
        "authored_data": "2009 May 06 09:43",
        "commit.message": "improved error messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@772119 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "6c64326a1757e5ab237089116ff4bebc858e7f38",
        "changes": {
            "src/java/org/apache/commons/math/MathRuntimeException.java": {
                "new": {
                    "('org.apache.commons.math#MathRuntimeException', None)": [
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        307,
                        308,
                        309
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createIllegalArgumentException(Throwable)')": [
                        303,
                        304,
                        305,
                        306
                    ]
                }
            },
            "src/java/org/apache/commons/math/MessagesResources_fr.java": {
                "old": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        52,
                        53,
                        281,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        352,
                        353,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        518,
                        527,
                        533,
                        537,
                        539,
                        553
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        92,
                        93,
                        282,
                        283,
                        284,
                        285,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        298,
                        299,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        332,
                        333,
                        387,
                        388,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        435,
                        436,
                        441,
                        442,
                        543,
                        544,
                        549,
                        550,
                        569,
                        570,
                        571,
                        572,
                        573,
                        574,
                        575,
                        576,
                        577,
                        578,
                        579,
                        580,
                        585,
                        586,
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610,
                        611,
                        612,
                        613,
                        614,
                        615,
                        616,
                        617,
                        618,
                        619,
                        620,
                        621,
                        627,
                        628,
                        632,
                        633,
                        635,
                        636,
                        637,
                        638,
                        639,
                        640,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        656,
                        657,
                        658,
                        659,
                        660,
                        661,
                        662,
                        663,
                        664,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671,
                        672,
                        673,
                        674,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680,
                        681,
                        682,
                        683,
                        684,
                        685,
                        686,
                        687,
                        688,
                        689,
                        690,
                        691,
                        692,
                        693,
                        694,
                        695,
                        696,
                        697,
                        698,
                        699,
                        700,
                        701,
                        702,
                        703,
                        704,
                        705,
                        706,
                        707,
                        708,
                        709,
                        710,
                        711,
                        712,
                        713,
                        714,
                        715,
                        729,
                        730
                    ]
                }
            },
            "src/java/org/apache/commons/math/complex/ComplexFormat.java": {
                "old": {
                    "('org.apache.commons.math.complex#ComplexFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        195
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'setImaginaryCharacter(String)')": [
                        350,
                        351
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'setImaginaryFormat(NumberFormat)')": [
                        364,
                        365
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'setRealFormat(NumberFormat)')": [
                        378,
                        379
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#ComplexFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        195,
                        196,
                        197
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'setImaginaryCharacter(String)')": [
                        352,
                        353
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'setImaginaryFormat(NumberFormat)')": [
                        366,
                        367
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'setRealFormat(NumberFormat)')": [
                        380,
                        381
                    ]
                }
            },
            "src/java/org/apache/commons/math/complex/ComplexUtils.java": {
                "old": {
                    "('org.apache.commons.math.complex#ComplexUtils', 'polar2Complex(double,double)')": [
                        62,
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.complex#ComplexUtils', 'polar2Complex(double,double)')": [
                        64,
                        65
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        62
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        63,
                        64
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/AbstractDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractDistribution', 'cumulativeProbability(double,double)')": [
                        61,
                        62
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#AbstractDistribution', 'cumulativeProbability(double,double)')": [
                        62,
                        63,
                        64
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(double,double)')": [
                        80,
                        81
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(int,int)')": [
                        137,
                        138
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'inverseCumulativeProbability(double)')": [
                        156,
                        157
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(double,double)')": [
                        81,
                        82,
                        83
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(int,int)')": [
                        139,
                        140,
                        141
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'inverseCumulativeProbability(double)')": [
                        159,
                        160
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'setNumberOfTrials(int)')": [
                        79
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'setProbabilityOfSuccess(double)')": [
                        92
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'setNumberOfTrials(int)')": [
                        80,
                        81
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'setProbabilityOfSuccess(double)')": [
                        94,
                        95
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        101,
                        102
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'setScale(double)')": [
                        128,
                        129
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        103,
                        104
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'setScale(double)')": [
                        130,
                        131
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'setMean(double)')": [
                        53
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        121,
                        122
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'setMean(double)')": [
                        54,
                        55
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        123,
                        124
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/FDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'setNumeratorDegreesOfFreedom(double)')": [
                        165,
                        166
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'setDenominatorDegreesOfFreedom(double)')": [
                        187,
                        188
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'setNumeratorDegreesOfFreedom(double)')": [
                        166,
                        167,
                        168
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'setDenominatorDegreesOfFreedom(double)')": [
                        189,
                        190,
                        191
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'setAlpha(double)')": [
                        113
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'setBeta(double)')": [
                        133
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'setAlpha(double)')": [
                        114,
                        115,
                        116
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'setBeta(double)')": [
                        136,
                        137,
                        138
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', None)": [
                        56,
                        57,
                        58,
                        61,
                        62
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setNumberOfSuccesses(int)')": [
                        229,
                        230
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setPopulationSize(int)')": [
                        242,
                        243
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setSampleSize(int)')": [
                        255,
                        256
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', None)": [
                        57,
                        58,
                        59,
                        62,
                        63,
                        64
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setNumberOfSuccesses(int)')": [
                        231,
                        232,
                        233
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setPopulationSize(int)')": [
                        245,
                        246,
                        247
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setSampleSize(int)')": [
                        259,
                        260,
                        261
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'setStandardDeviation(double)')": [
                        97,
                        98
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'setStandardDeviation(double)')": [
                        98,
                        99,
                        100
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/PascalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'setNumberOfSuccesses(int)')": [
                        78,
                        79
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'setProbabilityOfSuccess(double)')": [
                        92,
                        93
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'setNumberOfSuccesses(int)')": [
                        79,
                        80,
                        81
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'setProbabilityOfSuccess(double)')": [
                        94,
                        95
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'setMean(double)')": [
                        91,
                        92
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'setMean(double)')": [
                        92,
                        93,
                        94
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/TDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#TDistributionImpl', 'setDegreesOfFreedom(double)')": [
                        55
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#TDistributionImpl', 'setDegreesOfFreedom(double)')": [
                        56,
                        57,
                        58
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        100,
                        101
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'setShape(double)')": [
                        118,
                        119
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'setScale(double)')": [
                        130,
                        131
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        102,
                        103
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'setShape(double)')": [
                        120,
                        121,
                        122
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'setScale(double)')": [
                        133,
                        134,
                        135
                    ]
                }
            },
            "src/java/org/apache/commons/math/fraction/Fraction.java": {
                "old": {
                    "('org.apache.commons.math.fraction#Fraction', 'addSub(Fraction,boolean)')": [
                        479
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'multiply(Fraction)')": [
                        536
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'divide(Fraction)')": [
                        571
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#Fraction', 'addSub(Fraction,boolean)')": [
                        479
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'multiply(Fraction)')": [
                        536
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'divide(Fraction)')": [
                        571
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/Rotation.java": {
                "old": {
                    "('org.apache.commons.math.geometry#Rotation', None)": [
                        303,
                        434
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry#Rotation', None)": [
                        303,
                        434
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/Vector3DFormat.java": {
                "old": {
                    "('org.apache.commons.math.geometry#Vector3DFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        244
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry#Vector3DFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        244,
                        245
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/AbstractRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'add(RealMatrix)')": [
                        88
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'subtract(RealMatrix)')": [
                        107
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'multiply(RealMatrix)')": [
                        159
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'getSubMatrix(int,int,int,int)')": [
                        278
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'getSubMatrix(int,int)')": [
                        297
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'copySubMatrix(int,int,int,int,double)')": [
                        326
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'copySubMatrix(int,int,double)')": [
                        372
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setSubMatrix(double,int,int)')": [
                        413,
                        414,
                        415,
                        416
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'getRowMatrix(int)')": [
                        432
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setRowMatrix(int,RealMatrix)')": [
                        447
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'getColumnMatrix(int)')": [
                        465
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setColumnMatrix(int,RealMatrix)')": [
                        480
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setRowVector(int,RealVector)')": [
                        504
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setColumnVector(int,RealVector)')": [
                        527
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'getRow(int)')": [
                        544
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setRow(int,double)')": [
                        559
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'getColumn(int)')": [
                        576
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setColumn(int,double)')": [
                        591
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'walkInRowOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        837
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'walkInRowOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        856
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'walkInColumnOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        903
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'walkInColumnOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        922
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', None)": [
                        1093,
                        1094,
                        1095,
                        1096,
                        1097,
                        1102,
                        1103,
                        1104,
                        1105,
                        1106,
                        1107,
                        1108,
                        1109,
                        1115,
                        1116,
                        1117,
                        1118,
                        1119,
                        1120,
                        1121,
                        1122,
                        1123,
                        1124,
                        1125,
                        1126,
                        1127,
                        1142,
                        1143,
                        1144,
                        1145,
                        1146,
                        1147,
                        1148,
                        1149,
                        1150,
                        1151,
                        1152,
                        1153,
                        1154,
                        1168,
                        1169,
                        1170,
                        1171,
                        1172,
                        1173,
                        1174,
                        1175,
                        1183,
                        1184,
                        1185,
                        1186,
                        1187,
                        1188,
                        1189,
                        1190,
                        1198,
                        1199,
                        1200,
                        1201,
                        1202,
                        1203,
                        1204,
                        1205
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'checkRowIndex(int)')": [
                        1098,
                        1099,
                        1100,
                        1101
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'checkColumnIndex(int)')": [
                        1110,
                        1111,
                        1112,
                        1113,
                        1114
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'checkSubMatrixIndex(int,int,int,int)')": [
                        1128,
                        1129,
                        1130,
                        1131,
                        1132,
                        1133,
                        1134,
                        1135,
                        1136,
                        1137,
                        1138,
                        1139,
                        1140,
                        1141
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'checkSubMatrixIndex(int,int)')": [
                        1155,
                        1156,
                        1157,
                        1158,
                        1159,
                        1160,
                        1161,
                        1162,
                        1163,
                        1164,
                        1165,
                        1166,
                        1167
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'checkAdditionCompatible(RealMatrix)')": [
                        1176,
                        1177,
                        1178,
                        1179,
                        1180,
                        1181,
                        1182
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'checkSubtractionCompatible(RealMatrix)')": [
                        1191,
                        1192,
                        1193,
                        1194,
                        1195,
                        1196,
                        1197
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'checkMultiplicationCompatible(RealMatrix)')": [
                        1206,
                        1207,
                        1208,
                        1209,
                        1210,
                        1211
                    ],
                    "(None, None)": [
                        1212,
                        1213,
                        1214
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'add(RealMatrix)')": [
                        88
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'subtract(RealMatrix)')": [
                        107
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'multiply(RealMatrix)')": [
                        159
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'getSubMatrix(int,int,int,int)')": [
                        278
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'getSubMatrix(int,int)')": [
                        297
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'copySubMatrix(int,int,int,int,double)')": [
                        326
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'copySubMatrix(int,int,double)')": [
                        372
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setSubMatrix(double,int,int)')": [
                        413,
                        414,
                        415,
                        416
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'getRowMatrix(int)')": [
                        432
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setRowMatrix(int,RealMatrix)')": [
                        447
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'getColumnMatrix(int)')": [
                        465
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setColumnMatrix(int,RealMatrix)')": [
                        480
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setRowVector(int,RealVector)')": [
                        504
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setColumnVector(int,RealVector)')": [
                        527
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'getRow(int)')": [
                        544
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setRow(int,double)')": [
                        559
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'getColumn(int)')": [
                        576
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setColumn(int,double)')": [
                        591
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'walkInRowOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        837
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'walkInRowOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        856
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'walkInColumnOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        903
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'walkInColumnOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        922
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/BigMatrix.java": {
                "old": {
                    "(None, None)": [
                        34,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/BigMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', None)": [
                        105,
                        106,
                        107,
                        154,
                        155,
                        158,
                        162,
                        184,
                        185,
                        186,
                        189,
                        190,
                        194,
                        195,
                        214,
                        215,
                        216,
                        219,
                        220,
                        224,
                        225,
                        1490,
                        1491,
                        1492,
                        1493,
                        1494,
                        1500,
                        1501,
                        1502,
                        1503,
                        1504,
                        1505,
                        1506,
                        1507
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'add(BigMatrix)')": [
                        271,
                        272,
                        273
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'add(BigMatrixImpl)')": [
                        296,
                        297,
                        298
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'subtract(BigMatrix)')": [
                        324,
                        325,
                        326
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'subtract(BigMatrixImpl)')": [
                        349,
                        350,
                        351
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'multiply(BigMatrix)')": [
                        414,
                        415,
                        416
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'multiply(BigMatrixImpl)')": [
                        444,
                        445,
                        446
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getSubMatrix(int,int,int,int)')": [
                        590,
                        591,
                        597,
                        598
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getSubMatrix(int,int)')": [
                        651,
                        654
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'setSubMatrix(BigDecimal,int,int)')": [
                        692,
                        693,
                        694,
                        695,
                        697,
                        702,
                        720,
                        721,
                        722,
                        723
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getRowMatrix(int)')": [
                        742
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getColumnMatrix(int)')": [
                        758
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getRow(int)')": [
                        778
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getRowAsDoubleArray(int)')": [
                        797
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getColumn(int)')": [
                        817
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getColumnAsDoubleArray(int)')": [
                        838
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'checkRowIndex(int)')": [
                        1495,
                        1496,
                        1497,
                        1498,
                        1499
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'checkColumnIndex(int)')": [
                        1508,
                        1509,
                        1510,
                        1511,
                        1512,
                        1513
                    ],
                    "(None, None)": [
                        1514,
                        1515,
                        1516
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', None)": [
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        160,
                        161,
                        162,
                        165,
                        169,
                        170,
                        171,
                        193,
                        194,
                        195,
                        198,
                        202,
                        203,
                        204,
                        223,
                        224,
                        225,
                        228,
                        232,
                        233,
                        234
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'add(BigMatrix)')": [
                        278,
                        279,
                        280,
                        281
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'add(BigMatrixImpl)')": [
                        304,
                        305,
                        306,
                        307
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'subtract(BigMatrix)')": [
                        333,
                        334,
                        335,
                        336
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'subtract(BigMatrixImpl)')": [
                        359,
                        360,
                        361,
                        362
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'multiply(BigMatrix)')": [
                        427,
                        428,
                        429,
                        430
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'multiply(BigMatrixImpl)')": [
                        458,
                        459,
                        460,
                        461
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getSubMatrix(int,int,int,int)')": [
                        605,
                        606,
                        612,
                        613
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getSubMatrix(int,int)')": [
                        666,
                        669
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'setSubMatrix(BigDecimal,int,int)')": [
                        706,
                        707,
                        708,
                        709,
                        712,
                        717,
                        718,
                        719,
                        737,
                        738,
                        739,
                        740
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getRowMatrix(int)')": [
                        759
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getColumnMatrix(int)')": [
                        775
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getRow(int)')": [
                        795
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getRowAsDoubleArray(int)')": [
                        814
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getColumn(int)')": [
                        834
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getColumnAsDoubleArray(int)')": [
                        855
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/DenseRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'add(RealMatrix)')": [
                        314
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'add(DenseRealMatrix)')": [
                        358
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'subtract(RealMatrix)')": [
                        385
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'subtract(DenseRealMatrix)')": [
                        429
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'multiply(RealMatrix)')": [
                        496
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'multiply(DenseRealMatrix)')": [
                        555
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'getSubMatrix(int,int,int,int)')": [
                        689
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'setSubMatrix(double,int,int)')": [
                        818
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'getRowMatrix(int)')": [
                        864
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'setRowMatrix(int,DenseRealMatrix)')": [
                        917
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'getColumnMatrix(int)')": [
                        955
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'setColumnMatrix(int,DenseRealMatrix)')": [
                        1006
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'getRowVector(int)')": [
                        1042
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'getColumnVector(int)')": [
                        1076
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'getRow(int)')": [
                        1112
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'setRow(int,double)')": [
                        1135
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'getColumn(int)')": [
                        1161
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'setColumn(int,double)')": [
                        1186
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'walkInRowOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        1470
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'walkInRowOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        1498
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'walkInOptimizedOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        1570
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'walkInOptimizedOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        1598
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'add(RealMatrix)')": [
                        314
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'add(DenseRealMatrix)')": [
                        358
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'subtract(RealMatrix)')": [
                        385
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'subtract(DenseRealMatrix)')": [
                        429
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'multiply(RealMatrix)')": [
                        496
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'multiply(DenseRealMatrix)')": [
                        555
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'getSubMatrix(int,int,int,int)')": [
                        689
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'setSubMatrix(double,int,int)')": [
                        818
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'getRowMatrix(int)')": [
                        864
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'setRowMatrix(int,DenseRealMatrix)')": [
                        917
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'getColumnMatrix(int)')": [
                        955
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'setColumnMatrix(int,DenseRealMatrix)')": [
                        1006
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'getRowVector(int)')": [
                        1042
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'getColumnVector(int)')": [
                        1076
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'getRow(int)')": [
                        1112
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'setRow(int,double)')": [
                        1135
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'getColumn(int)')": [
                        1161
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'setColumn(int,double)')": [
                        1186
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'walkInRowOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        1470
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'walkInRowOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        1498
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'walkInOptimizedOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        1570
                    ],
                    "('org.apache.commons.math.linear#DenseRealMatrix', 'walkInOptimizedOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        1598
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/FieldMatrix.java": {
                "old": {
                    "(None, None)": [
                        35,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/MatrixUtils.java": {
                "old": {
                    "(None, None)": [
                        494,
                        496
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#MatrixUtils', None)": [
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558,
                        559,
                        560,
                        561,
                        577,
                        578,
                        579,
                        580,
                        581,
                        582,
                        583,
                        584,
                        585,
                        594,
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        611,
                        612,
                        613,
                        614,
                        615,
                        616,
                        617,
                        618,
                        619
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkRowIndex(AnyMatrix,int)')": [
                        501,
                        502,
                        503,
                        504
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkColumnIndex(AnyMatrix,int)')": [
                        514,
                        515,
                        516,
                        517,
                        518
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkSubMatrixIndex(AnyMatrix,int,int,int,int)')": [
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkSubMatrixIndex(AnyMatrix,int,int)')": [
                        562,
                        563,
                        564,
                        565,
                        566,
                        567,
                        568,
                        569,
                        570,
                        571,
                        572,
                        573,
                        574,
                        575,
                        576
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkAdditionCompatible(AnyMatrix,AnyMatrix)')": [
                        586,
                        587,
                        588,
                        589,
                        590,
                        591,
                        592,
                        593
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkSubtractionCompatible(AnyMatrix,AnyMatrix)')": [
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkMultiplicationCompatible(AnyMatrix,AnyMatrix)')": [
                        620,
                        621,
                        622,
                        623,
                        624,
                        625,
                        626
                    ],
                    "(None, None)": [
                        627,
                        628,
                        629
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/RealMatrix.java": {
                "old": {
                    "(None, None)": [
                        34,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/RealMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'add(RealMatrixImpl)')": [
                        191
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'subtract(RealMatrixImpl)')": [
                        231
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'multiply(RealMatrixImpl)')": [
                        271
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'walkInRowOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        500
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'walkInRowOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        518
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'walkInColumnOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        567
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'walkInColumnOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        585
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'add(RealMatrixImpl)')": [
                        191
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'subtract(RealMatrixImpl)')": [
                        231
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'multiply(RealMatrixImpl)')": [
                        271
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'walkInRowOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        500
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'walkInRowOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        518
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'walkInColumnOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        567
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'walkInColumnOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        585
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/RealVectorFormat.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealVectorFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        248
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#RealVectorFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        248,
                        249,
                        250
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/SparseRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'add(SparseRealMatrix)')": [
                        104
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'subtract(SparseRealMatrix)')": [
                        139
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'multiply(RealMatrix)')": [
                        162
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'multiply(SparseRealMatrix)')": [
                        193
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'getEntry(int,int)')": [
                        225,
                        226
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'setEntry(int,int,double)')": [
                        240,
                        241
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'addToEntry(int,int,double)')": [
                        253,
                        254
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'multiplyEntry(int,int,double)')": [
                        268,
                        269
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'add(SparseRealMatrix)')": [
                        104
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'subtract(SparseRealMatrix)')": [
                        139
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'multiply(RealMatrix)')": [
                        162
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'multiply(SparseRealMatrix)')": [
                        193
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'getEntry(int,int)')": [
                        225,
                        226
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'setEntry(int,int,double)')": [
                        240,
                        241
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'addToEntry(int,int,double)')": [
                        253,
                        254
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrix', 'multiplyEntry(int,int,double)')": [
                        268,
                        269
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ContinuousOutputModel.java": {
                "old": {
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'append(ContinuousOutputModel)')": [
                        118,
                        122,
                        131
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'append(ContinuousOutputModel)')": [
                        118,
                        119,
                        120,
                        124,
                        125,
                        134,
                        135
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/NordsieckTransformer.java": {
                "old": {
                    "(None, None)": [
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        56,
                        57,
                        58,
                        86
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/AbstractRandomGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#AbstractRandomGenerator', 'nextInt(int)')": [
                        141
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGenerator', 'nextInt(int)')": [
                        143,
                        144
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', None)": [
                        231,
                        232
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', None)": [
                        231,
                        232,
                        233,
                        234,
                        235
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextHexString(int)')": [
                        135
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextInt(int,int)')": [
                        180,
                        181
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextLong(long,long)')": [
                        200,
                        201
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureHexString(int)')": [
                        230
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureInt(int,int)')": [
                        289,
                        290
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureLong(long,long)')": [
                        309,
                        310
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPoisson(double)')": [
                        347
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextGaussian(double,double)')": [
                        449
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextExponential(double)')": [
                        471
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextUniform(double,double)')": [
                        499,
                        500
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPermutation(int,int)')": [
                        658,
                        661
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSample(Collection,int)')": [
                        693,
                        694,
                        695,
                        696,
                        697
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        762
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextHexString(int)')": [
                        136,
                        137
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextInt(int,int)')": [
                        182,
                        183,
                        184
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextLong(long,long)')": [
                        203,
                        204,
                        205
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureHexString(int)')": [
                        234,
                        235
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureInt(int,int)')": [
                        294,
                        295,
                        296
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureLong(long,long)')": [
                        315,
                        316,
                        317
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPoisson(double)')": [
                        354,
                        355
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextGaussian(double,double)')": [
                        457,
                        458
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextExponential(double)')": [
                        480,
                        481
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextUniform(double,double)')": [
                        509,
                        510,
                        511
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPermutation(int,int)')": [
                        669,
                        670,
                        673,
                        674
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSample(Collection,int)')": [
                        706,
                        707,
                        708,
                        709,
                        710,
                        711
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#UncorrelatedRandomVectorGenerator', None)": [
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.random#UncorrelatedRandomVectorGenerator', None)": [
                        51,
                        52,
                        53
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/Frequency.java": {
                "old": {
                    "('org.apache.commons.math.stat#Frequency', 'addValue(Object)')": [
                        113
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'addValue(Comparable)')": [
                        141
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'addValue(Object)')": [
                        115,
                        116,
                        117
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'addValue(Comparable)')": [
                        145,
                        146,
                        147
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/StatUtils.java": {
                "old": {
                    "('org.apache.commons.math.stat#StatUtils', 'sumDifference(double,double)')": [
                        566,
                        567,
                        568
                    ],
                    "('org.apache.commons.math.stat#StatUtils', 'varianceDifference(double,double,double)')": [
                        611
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.stat#StatUtils', 'sumDifference(double,double)')": [
                        567,
                        568,
                        569,
                        570
                    ],
                    "('org.apache.commons.math.stat#StatUtils', 'varianceDifference(double,double,double)')": [
                        613,
                        614,
                        615
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#AbstractStorelessUnivariateStatistic', 'evaluate(double)')": [
                        61
                    ],
                    "('org.apache.commons.math.stat.descriptive#AbstractStorelessUnivariateStatistic', 'incrementAll(double)')": [
                        129
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.stat.descriptive#AbstractStorelessUnivariateStatistic', 'evaluate(double)')": [
                        62
                    ],
                    "('org.apache.commons.math.stat.descriptive#AbstractStorelessUnivariateStatistic', 'incrementAll(double)')": [
                        130
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#AbstractUnivariateStatistic', 'test(double,int,int)')": [
                        83,
                        87,
                        91,
                        95,
                        96
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.stat.descriptive#AbstractUnivariateStatistic', 'test(double,int,int)')": [
                        85,
                        89,
                        90,
                        94,
                        95,
                        99,
                        100
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'setWindowSize(int)')": [
                        304
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'getPercentile(double)')": [
                        382,
                        383,
                        385,
                        386,
                        388,
                        389
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'setPercentileImpl(UnivariateStatistic)')": [
                        564,
                        565,
                        567,
                        568,
                        570,
                        571
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'setWindowSize(int)')": [
                        305,
                        306
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'getPercentile(double)')": [
                        384,
                        385,
                        386,
                        388,
                        389,
                        390,
                        392
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'setPercentileImpl(UnivariateStatistic)')": [
                        567,
                        568,
                        569,
                        571,
                        572,
                        573,
                        575
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#Variance', 'evaluate(double)')": [
                        214
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Variance', 'evaluate(double)')": [
                        215
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.rank#Percentile', 'evaluate(double,int,int,double)')": [
                        199
                    ],
                    "('org.apache.commons.math.stat.descriptive.rank#Percentile', 'setQuantile(double)')": [
                        247
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.stat.descriptive.rank#Percentile', 'evaluate(double,int,int,double)')": [
                        201,
                        202
                    ],
                    "('org.apache.commons.math.stat.descriptive.rank#Percentile', 'setQuantile(double)')": [
                        250,
                        251
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', None)": [
                        34,
                        42
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'newSampleData(double,int,int)')": [
                        56
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'newYSampleData(double)')": [
                        65
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'estimateRegressionParameters')": [
                        123,
                        124
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'estimateResiduals')": [
                        131,
                        132,
                        133
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'calculateBeta')": [
                        169
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'calculateResiduals')": [
                        196,
                        197,
                        198
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', None)": [
                        36,
                        44
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'newSampleData(double,int,int)')": [
                        58
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'newYSampleData(double)')": [
                        67
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'estimateRegressionParameters')": [
                        125,
                        126
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'estimateResiduals')": [
                        133,
                        134,
                        135
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'calculateBeta')": [
                        171
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'calculateResiduals')": [
                        198,
                        199,
                        200
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'getSlopeConfidenceInterval(double)')": [
                        549
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'getSlopeConfidenceInterval(double)')": [
                        550,
                        551,
                        552
                    ]
                }
            },
            "src/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', 'binomialCoefficient(int,int)')": [
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'binomialCoefficientDouble(int,int)')": [
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'binomialCoefficientLog(int,int)')": [
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'factorial(int)')": [
                        504
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'factorialDouble(int)')": [
                        535
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'factorialLog(int)')": [
                        558
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'roundUnscaled(double,double,int)')": [
                        1135
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtils', 'binomialCoefficient(int,int)')": [
                        179
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'binomialCoefficientDouble(int,int)')": [
                        249
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'binomialCoefficientLog(int,int)')": [
                        290
                    ],
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        353
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'checkBinomial(int,int)')": [
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'factorial(int)')": [
                        503,
                        504,
                        505
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'factorialDouble(int)')": [
                        536,
                        537,
                        538
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'factorialLog(int)')": [
                        561,
                        562,
                        563
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'roundUnscaled(double,double,int)')": [
                        1140,
                        1141,
                        1142,
                        1143,
                        1144,
                        1145,
                        1146,
                        1147,
                        1148,
                        1149,
                        1150,
                        1151
                    ]
                }
            }
        }
    },
    "6c64326a1757e5ab237089116ff4bebc858e7f38": {
        "authored_data": "2009 May 06 09:40",
        "commit.message": "replaced matrix by vector where possible\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@772114 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "659d3c4a98e34c8b0be9f216f7d6efec2026401a",
        "changes": {
            "src/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'calculateBeta')": [
                        94,
                        99
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'calculateYVariance')": [
                        125,
                        126,
                        127
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'calculateBeta')": [
                        95,
                        100
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'calculateYVariance')": [
                        126,
                        127,
                        128
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'calculateBeta')": [
                        140,
                        141
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'calculateYVariance')": [
                        173,
                        174,
                        175
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', None)": [
                        194,
                        195,
                        196,
                        197
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'solveUpperTriangular(RealMatrix,RealMatrix)')": [
                        198,
                        199,
                        203,
                        204,
                        205,
                        206,
                        216,
                        218
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'calculateBeta')": [
                        142,
                        143
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'calculateYVariance')": [
                        175,
                        176,
                        177
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', None)": [
                        196,
                        197,
                        198,
                        199
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'solveUpperTriangular(RealMatrix,RealVector)')": [
                        200,
                        201,
                        214,
                        216
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testLongly')": [
                        142
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testHat')": [
                        335
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testLongly')": [
                        142
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegressionTest', 'testHat')": [
                        335
                    ]
                }
            }
        }
    },
    "51cf37b6312fd45dffc08f06ecb5b1c4f248e63b": {
        "authored_data": "2009 May 04 10:42",
        "commit.message": "minor style fixes (braces, javadoc ...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@771266 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "b5dd7a9c36bfbaa1c6dc34a532cabfc97312ff66",
        "changes": {
            "src/java/org/apache/commons/math/linear/SparseFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseFieldMatrix', None)": [
                        47,
                        66,
                        75,
                        78,
                        86,
                        94,
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SparseFieldMatrix', None)": [
                        47,
                        66,
                        75,
                        78,
                        86,
                        94,
                        95
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/SparseFieldVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseFieldVector', None)": [
                        46,
                        90,
                        130,
                        133,
                        180,
                        393
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', 'append(FieldVector)')": [
                        176,
                        177,
                        178
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', 'ebeDivide(FieldVector)')": [
                        234
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', 'add(FieldVector)')": [
                        567,
                        569
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', 'equals(Object)')": [
                        603,
                        605,
                        607,
                        611,
                        613,
                        615
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SparseFieldVector', None)": [
                        46,
                        90,
                        130,
                        133,
                        180,
                        393,
                        439,
                        572,
                        603
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', 'append(FieldVector)')": [
                        176,
                        177,
                        178
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', 'ebeDivide(FieldVector)')": [
                        234
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', 'add(FieldVector)')": [
                        568,
                        570
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', 'equals(Object)')": [
                        606,
                        607,
                        609,
                        610,
                        611,
                        613,
                        614,
                        615,
                        617,
                        618,
                        621,
                        623,
                        624,
                        626,
                        627,
                        629,
                        630
                    ]
                }
            }
        }
    },
    "e96ec32bb53509addc99229b9d21c042dbaa93ae": {
        "authored_data": "2009 May 04 02:55",
        "commit.message": "Adding equals and hashCode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@771164 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "William Barker",
        "pcid": "f479cc70b81b8cb939a0a22afc10f2f979167cef",
        "changes": {
            "src/java/org/apache/commons/math/linear/SparseFieldVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseFieldVector', None)": [
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SparseFieldVector', None)": [
                        583,
                        584,
                        597,
                        598,
                        599,
                        600,
                        601
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', 'hashCode')": [
                        585,
                        586,
                        587,
                        588,
                        589,
                        590,
                        591,
                        592,
                        593,
                        594,
                        595,
                        596
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', 'equals(Object)')": [
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610,
                        611,
                        612,
                        613,
                        614,
                        615,
                        616,
                        617,
                        618,
                        619,
                        620,
                        621,
                        622,
                        623,
                        624,
                        625,
                        626,
                        627,
                        628,
                        629,
                        630,
                        631,
                        632,
                        633
                    ],
                    "(None, None)": [
                        634,
                        635,
                        636
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/SparseRealVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseRealVector', 'equals(Object)')": [
                        1293
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SparseRealVector', 'equals(Object)')": [
                        1293
                    ]
                }
            }
        }
    }
}