{
    "d06270236608331e08889000c8f0ead0d5f60698": {
        "authored_data": "2005 Jun 26 01:19",
        "commit.message": "Changed lcm to throw ArithmeticException (instead of returning bogus\nvalue) if the result is too large to store as an integer.\nPR # 35431\nSubmitted by: J\u00f6rg Weimar\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@201810 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "e34b56db3fcc99bda0f098da458040b68d1fa250",
        "changes": {
            "src/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', 'lcm(int,int)')": [
                        539
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        533,
                        537
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'lcm(int,int)')": [
                        541
                    ]
                }
            },
            "src/test/org/apache/commons/math/util/MathUtilsTest.java": {
                "new": {
                    "('org.apache.commons.math.util#MathUtilsTest', 'testLcm')": [
                        466,
                        467,
                        468,
                        469
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', None)": [
                        470,
                        471,
                        472
                    ]
                }
            }
        }
    },
    "e34b56db3fcc99bda0f098da458040b68d1fa250": {
        "authored_data": "2005 Jun 05 15:49",
        "commit.message": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@180103 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "99b1bf42ea4724eb6f27153cd22dffc581a8c300",
        "changes": {
            "src/java/org/apache/commons/math/random/RandomAdaptor.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomAdaptor', None)": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomAdaptor', None)": [
                        50
                    ]
                }
            }
        }
    },
    "99b1bf42ea4724eb6f27153cd22dffc581a8c300": {
        "authored_data": "2005 Jun 05 15:48",
        "commit.message": "Formatting to make checkstyle happy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@180102 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "cd4c28ecca7a2fee24d968c85ad79316da58571f",
        "changes": {
            "src/java/org/apache/commons/math/linear/BigMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'setSubMatrix(BigDecimal,int,int)')": [
                        544,
                        545
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'setSubMatrix(BigDecimal,int,int)')": [
                        544,
                        545
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/RealMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'setSubMatrix(double,int,int)')": [
                        413,
                        414
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'setSubMatrix(double,int,int)')": [
                        413,
                        414
                    ]
                }
            }
        }
    },
    "cd4c28ecca7a2fee24d968c85ad79316da58571f": {
        "authored_data": "2005 Jun 05 04:16",
        "commit.message": "Revert inadvertent change from last commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@180066 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "6ed937e73321c9705cfe15308598926512416730",
        "changes": {
            "src/java/org/apache/commons/math/distribution/DistributionFactory.java": {
                "old": {
                    "('org.apache.commons.math.distribution#DistributionFactory', 'newInstance')": [
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#DistributionFactory', 'newInstance')": [
                        65
                    ]
                }
            }
        }
    },
    "6ed937e73321c9705cfe15308598926512416730": {
        "authored_data": "2005 Jun 05 03:58",
        "commit.message": "Added factory for TTest, ChiSquareTest and TestUtils class with\nstatic methods to create instances and execute tests.\nPR #32663\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@180065 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "59c267c22de306e078dc959000c39ead9c411dfd",
        "changes": {
            "src/java/org/apache/commons/math/distribution/DistributionFactory.java": {
                "old": {
                    "('org.apache.commons.math.distribution#DistributionFactory', 'newInstance')": [
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#DistributionFactory', 'newInstance')": [
                        65
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/inference/ChiSquareTestTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.inference#ChiSquareTestTest', None)": [
                        28,
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.inference#ChiSquareTestTest', None)": [
                        28,
                        30
                    ]
                }
            },
            "src/test/org/apache/commons/math/stat/inference/TTestTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.inference#TTestTest', None)": [
                        29,
                        30,
                        31
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.inference#TTestTest', None)": [
                        29,
                        30,
                        31
                    ]
                }
            }
        }
    },
    "24d837eafd724642faed1b80856a353f73e993c5": {
        "authored_data": "2005 Jun 04 05:36",
        "commit.message": "Eliminated redundant endpoint function evaluations in BrentSolver, SecantSolver. BZ #35042.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@179958 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "9271b906e1c314986382cb4abd35dbd433268ea8",
        "changes": {
            "src/java/org/apache/commons/math/analysis/BrentSolver.java": {
                "old": {
                    "(None, None)": [
                        2
                    ],
                    "('org.apache.commons.math.analysis#BrentSolver', 'solve(double,double)')": [
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        2
                    ],
                    "('org.apache.commons.math.analysis#BrentSolver', 'solve(double,double)')": [
                        85,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/SecantSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis#SecantSolver', 'solve(double,double)')": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis#SecantSolver', 'solve(double,double)')": [
                        87,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106
                    ]
                }
            },
            "src/test/org/apache/commons/math/analysis/BrentSolverTest.java": {
                "new": {
                    "('org.apache.commons.math.analysis#BrentSolverTest', None)": [
                        269
                    ],
                    "('org.apache.commons.math.analysis#BrentSolverTest', 'testBadEndpoints')": [
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281
                    ],
                    "(None, None)": [
                        282,
                        283,
                        284,
                        285
                    ]
                }
            }
        }
    }
}