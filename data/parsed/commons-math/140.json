{
    "569e35ddbe98ed5dc74c74dbc2129d9178b818a1": {
        "authored_data": "2021 Aug 21 09:04",
        "commit.message": "Add variance tests for zero weights\n\nUpdate javadoc for the behaviour when input weights are zero.\n\nThis issue was found when checking the sonar report for the variance\nclass which has a potential divide by zero if the weights sum to zero.\n",
        "commit.author.name": "Alex Herbert",
        "pcid": "a2efd4fad5498b2f8b42b75c07f5bd96caba0b66",
        "changes": {
            "commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/stat/descriptive/moment/Variance.java": {
                "old": {
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Variance', 'evaluate(double,double,int,int)')": [
                        321
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Variance', None)": [
                        300,
                        360,
                        493,
                        576
                    ],
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Variance', 'evaluate(double,double,int,int)')": [
                        322
                    ],
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Variance', 'evaluate(double,double,double,int,int)')": [
                        533,
                        534,
                        535,
                        536
                    ]
                }
            },
            "commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/stat/descriptive/moment/VarianceTest.java": {
                "new": {
                    "(None, None)": [
                        22,
                        25,
                        142,
                        143
                    ],
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#VarianceTest', None)": [
                        119
                    ],
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#VarianceTest', 'testZeroWeights')": [
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141
                    ]
                }
            }
        }
    },
    "a2efd4fad5498b2f8b42b75c07f5bd96caba0b66": {
        "authored_data": "2021 Aug 21 08:58",
        "commit.message": "Correct verification of zero length values and weights\n\nThis bug was found when checking the sonar report for the variance class\nwhich uses MathArrays.verifyValues.\n",
        "commit.author.name": "Alex Herbert",
        "pcid": "3f7de0eb1e50546144004e3449be0978b68a2a5d",
        "changes": {
            "commons-math-legacy-core/src/main/java/org/apache/commons/math4/legacy/core/MathArrays.java": {
                "old": {
                    "('org.apache.commons.math4.legacy.core#MathArrays', 'verifyValues(double,double,int,int,boolean)')": [
                        1034,
                        1035,
                        1036,
                        1037,
                        1038,
                        1039,
                        1040,
                        1041,
                        1042,
                        1043,
                        1044,
                        1045,
                        1046,
                        1047,
                        1048,
                        1049,
                        1050,
                        1051,
                        1052,
                        1053,
                        1054
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.legacy.core#MathArrays', None)": [
                        971,
                        1008
                    ],
                    "('org.apache.commons.math4.legacy.core#MathArrays', 'verifyValues(double,double,int,int,boolean)')": [
                        1036,
                        1037,
                        1038,
                        1039,
                        1040,
                        1041,
                        1042,
                        1043,
                        1044,
                        1045,
                        1046,
                        1047,
                        1048,
                        1049,
                        1050,
                        1051,
                        1052,
                        1053,
                        1054,
                        1055,
                        1056,
                        1057,
                        1058
                    ]
                }
            },
            "commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core/MathArraysTest.java": {
                "new": {
                    "('org.apache.commons.math4.legacy.core#MathArraysTest', 'testVerifyValuesNegative')": [
                        638,
                        639,
                        640,
                        685,
                        686,
                        687,
                        688,
                        689,
                        690
                    ]
                }
            }
        }
    },
    "3f7de0eb1e50546144004e3449be0978b68a2a5d": {
        "authored_data": "2021 Aug 21 08:11",
        "commit.message": "sonar fix: Handle variance=0 in skewness computation for input array",
        "commit.author.name": "Alex Herbert",
        "pcid": "1fdd55981d4445103ce37be16fbb440eaca0928e",
        "changes": {
            "commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/stat/descriptive/moment/Skewness.java": {
                "old": {
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Skewness', 'getResult')": [
                        118
                    ],
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Skewness', 'evaluate(double,int,int)')": [
                        183,
                        184,
                        185,
                        186,
                        187,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Skewness', None)": [
                        52,
                        53,
                        54
                    ],
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Skewness', 'getResult')": [
                        121
                    ],
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Skewness', 'evaluate(double,int,int)')": [
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200
                    ]
                }
            },
            "commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/stat/descriptive/moment/SkewnessTest.java": {
                "new": {
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#SkewnessTest', None)": [
                        63
                    ],
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#SkewnessTest', 'testZeroSkewness')": [
                        64,
                        65,
                        66
                    ],
                    "(None, None)": [
                        67
                    ]
                }
            }
        }
    },
    "1fdd55981d4445103ce37be16fbb440eaca0928e": {
        "authored_data": "2021 Aug 21 07:16",
        "commit.message": "sonar fix: Ensure checkFeasableCount is not negative.\n\nChange loop condition to 'i <= checkFeasableCount' from 'i <\ncheckFeasableCount + 1'\n\nThis ensures the loop to identify a new feasible column (RealMatrix\narxk) always executes at least once even with checkFeasibleCount at the\nlimit of 0 or Integer.MAX_VALUE.\n",
        "commit.author.name": "Alex Herbert",
        "pcid": "69bab476a5cd7e0e5a90e3f13e34de72accf9586",
        "changes": {
            "commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java": {
                "old": {
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#CMAESOptimizer', None)": [
                        239
                    ],
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#CMAESOptimizer', 'doOptimize')": [
                        401
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#CMAESOptimizer', None)": [
                        239
                    ],
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#CMAESOptimizer', 'doOptimize')": [
                        401
                    ]
                }
            }
        }
    },
    "69bab476a5cd7e0e5a90e3f13e34de72accf9586": {
        "authored_data": "2021 Aug 20 21:23",
        "commit.message": "Javadoc typo",
        "commit.author.name": "Alex Herbert",
        "pcid": "5201f2c5fab763e063fe536101cad031418738d3",
        "changes": {
            "commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/ode/package-info.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            }
        }
    },
    "5201f2c5fab763e063fe536101cad031418738d3": {
        "authored_data": "2021 Aug 20 20:19",
        "commit.message": "Only restore interrupted state if necessary",
        "commit.author.name": "Alex Herbert",
        "pcid": "7ee70ef4748507a3f8dd67dc57c775f87732a87c",
        "changes": {
            "commons-math-examples/examples-sofm/tsp/src/main/java/org/apache/commons/math4/examples/sofm/tsp/TravellingSalesmanSolver.java": {
                "old": {
                    "('org.apache.commons.math4.examples.sofm.tsp#TravellingSalesmanSolver', 'solve(City,double,long,int,UniformRandomProvider)')": [
                        127,
                        128
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.examples.sofm.tsp#TravellingSalesmanSolver', 'solve(City,double,long,int,UniformRandomProvider)')": [
                        127,
                        128,
                        129,
                        130
                    ]
                }
            }
        }
    },
    "7ee70ef4748507a3f8dd67dc57c775f87732a87c": {
        "authored_data": "2021 Aug 20 12:43",
        "commit.message": "Javadoc typo",
        "commit.author.name": "Alex Herbert",
        "pcid": "09dd29e56d8ca8f508a29006be5523794ea6c4e9",
        "changes": {
            "commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/analysis/interpolation/InterpolatingMicrosphere.java": {
                "old": {
                    "('org.apache.commons.math4.legacy.analysis.interpolation#InterpolatingMicrosphere', None)": [
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.legacy.analysis.interpolation#InterpolatingMicrosphere', None)": [
                        54
                    ]
                }
            }
        }
    },
    "09dd29e56d8ca8f508a29006be5523794ea6c4e9": {
        "authored_data": "2021 Aug 20 12:38",
        "commit.message": "Sonar fix: restore thread interrupted state",
        "commit.author.name": "Alex Herbert",
        "pcid": "7813ecb115eae3c43973056d9155c1c5c98eabce",
        "changes": {
            "commons-math-examples/examples-sofm/tsp/src/main/java/org/apache/commons/math4/examples/sofm/tsp/TravellingSalesmanSolver.java": {
                "new": {
                    "('org.apache.commons.math4.examples.sofm.tsp#TravellingSalesmanSolver', 'solve(City,double,long,int,UniformRandomProvider)')": [
                        127,
                        128
                    ]
                }
            }
        }
    }
}