{
    "098eaa3a781932dca0f42e1bcf791b629383b5b3": {
        "authored_data": "2008 Oct 16 11:34",
        "commit.message": "replaced calls to deprecated methods from linear algebra package\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@705211 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "c376e656d73afab00dc526f4f3fc7307d91452e7",
        "changes": {
            "src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java": {
                "old": {
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', 'estimate(EstimationProblem)')": [
                        109,
                        110,
                        120,
                        131,
                        153,
                        157
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        26,
                        27
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', 'estimate(EstimationProblem)')": [
                        112,
                        113,
                        123,
                        134,
                        156,
                        160
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'calculateBeta')": [
                        72,
                        75
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'calculateBetaVariance')": [
                        86,
                        87
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'calculateYVariance')": [
                        99
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', None)": [
                        48,
                        49,
                        50,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'newCovarianceData(double)')": [
                        66
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'getOmegaInverse')": [
                        74,
                        75,
                        76,
                        77,
                        78
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'calculateBeta')": [
                        89,
                        92
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'calculateBetaVariance')": [
                        103,
                        104,
                        105
                    ],
                    "('org.apache.commons.math.stat.regression#GLSMultipleLinearRegression', 'calculateYVariance')": [
                        117
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/regression/OLSMultipleLinearRegression.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'calculateBetaVariance')": [
                        110
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.stat.regression#OLSMultipleLinearRegression', 'calculateBetaVariance')": [
                        111
                    ]
                }
            }
        }
    },
    "c376e656d73afab00dc526f4f3fc7307d91452e7": {
        "authored_data": "2008 Oct 16 11:33",
        "commit.message": "removed unneeded import statements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@705210 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "ab5b3d3944cb089b300ac0d4b57110e55d2bd4d0",
        "changes": {
            "src/test/org/apache/commons/math/stat/regression/OLSMultipleLinearRegressionTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ]
                }
            }
        }
    },
    "ab5b3d3944cb089b300ac0d4b57110e55d2bd4d0": {
        "authored_data": "2008 Oct 12 13:50",
        "commit.message": "Fixed error in javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@703818 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "924041770d52c54d3a63fcd2999902e73ee7605f",
        "changes": {
            "src/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#VectorialCovariance', None)": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#VectorialCovariance', None)": [
                        48
                    ]
                }
            }
        }
    },
    "924041770d52c54d3a63fcd2999902e73ee7605f": {
        "authored_data": "2008 Oct 05 22:38",
        "commit.message": "added a first version of eigen decomposition implementation\nthis version is not finished yet, but it does work when\neigenvalues are well separated and is faster than JAMA for\ndimensions above 100.\nIt still needs work as the MRRR algorithm is not implemented\nyet (only the basic parts with twisted factorization is there).\nI continue working on this, but wanted to have a first version\ncommitted to let people play with it and as a basis for comparison.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@701897 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "dc4f70a7774aaac3c5e16e2a62bdd11e797fb241",
        "changes": {
            "src/java/org/apache/commons/math/linear/EigenDecomposition.java": {
                "old": {
                    "(None, None)": [
                        38,
                        79,
                        82,
                        83,
                        88
                    ]
                },
                "new": {
                    "(None, None)": [
                        38,
                        39,
                        40,
                        41,
                        42,
                        83,
                        86,
                        87,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120
                    ]
                }
            }
        }
    },
    "dc4f70a7774aaac3c5e16e2a62bdd11e797fb241": {
        "authored_data": "2008 Oct 05 20:37",
        "commit.message": "added methods to operate directly on double arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@701883 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "ca2d12971ff1f0cda94f967ebb905beab38588e4",
        "changes": {
            "src/java/org/apache/commons/math/linear/RealVector.java": {
                "new": {
                    "(None, None)": [
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        495,
                        496,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        570,
                        571,
                        572,
                        573,
                        574,
                        575,
                        576,
                        577,
                        578,
                        579,
                        580,
                        581,
                        582,
                        583,
                        584,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610,
                        628,
                        629,
                        630,
                        631,
                        632,
                        633,
                        634,
                        635,
                        636,
                        637,
                        638,
                        639,
                        640,
                        641,
                        642,
                        664,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671,
                        679,
                        680,
                        681,
                        682,
                        683,
                        684,
                        685,
                        686,
                        687,
                        762,
                        763,
                        764,
                        765,
                        766,
                        767,
                        768,
                        769,
                        770,
                        771
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/RealVectorImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealVectorImpl', None)": [
                        32,
                        882,
                        1011,
                        1149
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'add(RealVectorImpl)')": [
                        217,
                        218,
                        219,
                        220,
                        221,
                        222
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'subtract(RealVectorImpl)')": [
                        248,
                        249,
                        250,
                        251,
                        252,
                        253
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'ebeMultiply(RealVectorImpl)')": [
                        755,
                        756,
                        757,
                        758,
                        759,
                        760
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'ebeDivide(RealVectorImpl)')": [
                        786,
                        787,
                        788,
                        789,
                        790,
                        791
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'dotProduct(RealVectorImpl)')": [
                        831,
                        832,
                        833,
                        834,
                        835,
                        836
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'getDistance(RealVectorImpl)')": [
                        897,
                        898,
                        899,
                        900,
                        901,
                        902,
                        903
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'getL1Distance(RealVectorImpl)')": [
                        937,
                        938,
                        939,
                        940,
                        941,
                        942,
                        943
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'getLInfDistance(RealVectorImpl)')": [
                        977,
                        978,
                        979,
                        980,
                        981,
                        982,
                        983
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'outerProduct(RealVectorImpl)')": [
                        1045,
                        1046,
                        1047,
                        1048,
                        1049,
                        1050,
                        1051,
                        1052
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'append(double)')": [
                        1093,
                        1094,
                        1095,
                        1096
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'set(int,RealVectorImpl)')": [
                        1145,
                        1146,
                        1147,
                        1148
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#RealVectorImpl', None)": [
                        32,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        242,
                        251,
                        252,
                        279,
                        288,
                        289,
                        792,
                        801,
                        802,
                        829,
                        838,
                        839,
                        880,
                        889,
                        890,
                        945,
                        955,
                        956,
                        957,
                        989,
                        990,
                        991,
                        1035,
                        1036,
                        1037,
                        1092,
                        1095,
                        1096,
                        1097,
                        1123,
                        1134,
                        1135,
                        1224,
                        1230,
                        1231,
                        1232
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'add(double)')": [
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'add(RealVectorImpl)')": [
                        261
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'subtract(double)')": [
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'subtract(RealVectorImpl)')": [
                        298
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'ebeMultiply(double)')": [
                        793,
                        794,
                        795,
                        796,
                        797,
                        798,
                        799,
                        800
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'ebeMultiply(RealVectorImpl)')": [
                        811
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'ebeDivide(double)')": [
                        830,
                        831,
                        832,
                        833,
                        834,
                        835,
                        836,
                        837
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'ebeDivide(RealVectorImpl)')": [
                        848
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'dotProduct(double)')": [
                        881,
                        882,
                        883,
                        884,
                        885,
                        886,
                        887,
                        888
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'dotProduct(RealVectorImpl)')": [
                        899
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'getDistance(double)')": [
                        946,
                        947,
                        948,
                        949,
                        950,
                        951,
                        952,
                        953,
                        954
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'getDistance(RealVectorImpl)')": [
                        972
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'getL1Distance(double)')": [
                        992,
                        993,
                        994,
                        995,
                        996,
                        997,
                        998,
                        999,
                        1000
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'getL1Distance(RealVectorImpl)')": [
                        1018
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'getLInfDistance(double)')": [
                        1038,
                        1039,
                        1040,
                        1041,
                        1042,
                        1043,
                        1044,
                        1045,
                        1046
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'getLInfDistance(RealVectorImpl)')": [
                        1064
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'projection(double)')": [
                        1093,
                        1094
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'outerProduct(double)')": [
                        1124,
                        1125,
                        1126,
                        1127,
                        1128,
                        1129,
                        1130,
                        1131,
                        1132,
                        1133
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'outerProduct(RealVectorImpl)')": [
                        1144
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'append(double)')": [
                        1185
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'set(int,double)')": [
                        1225,
                        1226,
                        1227,
                        1228,
                        1229
                    ],
                    "('org.apache.commons.math.linear#RealVectorImpl', 'set(int,RealVectorImpl)')": [
                        1243
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/RealVectorImplTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealVectorImplTest', None)": [
                        50,
                        316,
                        317
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#RealVectorImplTest', None)": [
                        50,
                        71,
                        72,
                        73,
                        74,
                        76,
                        77,
                        78,
                        79,
                        315,
                        316,
                        317,
                        318,
                        320,
                        321,
                        322,
                        323,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        363,
                        364,
                        365,
                        366,
                        371,
                        372,
                        373,
                        374,
                        379,
                        380,
                        381,
                        382,
                        395,
                        396,
                        397,
                        398,
                        400,
                        401,
                        402,
                        403,
                        436,
                        437,
                        438,
                        439
                    ]
                }
            }
        }
    },
    "ca2d12971ff1f0cda94f967ebb905beab38588e4": {
        "authored_data": "2008 Oct 05 19:16",
        "commit.message": "removed unneeded multiplications by zero by separating\nthe first iteration from the following ones in a loop\n(once again ...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@701857 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "3a751b5acf6e19f13dc2a7dd3c4d2184dc0b12d3",
        "changes": {
            "src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java": {
                "old": {
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', 'getQT')": [
                        126,
                        130,
                        131
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', 'getQT')": [
                        126,
                        130,
                        131
                    ]
                }
            }
        }
    },
    "3a751b5acf6e19f13dc2a7dd3c4d2184dc0b12d3": {
        "authored_data": "2008 Oct 05 19:12",
        "commit.message": "removed unneeded multiplications by zero by separating\nthe first iteration from the following ones in a loop\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@701852 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "f0aeb29d169cb3114bb1dca904b2f22962900760",
        "changes": {
            "src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java": {
                "old": {
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', 'getQT')": [
                        117,
                        119
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', 'getQT')": [
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        125
                    ]
                }
            }
        }
    },
    "f0aeb29d169cb3114bb1dca904b2f22962900760": {
        "authored_data": "2008 Oct 05 18:53",
        "commit.message": "replaced an intermediate variable by its opposite for easier to read expression\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@701846 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "fcb63bbdac3cdf69acabd276b8a938a0952a2ca7",
        "changes": {
            "src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java": {
                "old": {
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', 'getQT')": [
                        121,
                        126
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', 'getQT')": [
                        121,
                        126
                    ]
                }
            }
        }
    },
    "fcb63bbdac3cdf69acabd276b8a938a0952a2ca7": {
        "authored_data": "2008 Oct 05 15:37",
        "commit.message": "added a test ensuring the part of the symmetric matrix below the diagonal is never used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@701810 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "50f694b7a070631660ad35f7f46faf9c535480de",
        "changes": {
            "src/test/org/apache/commons/math/linear/TriDiagonalTransformerTest.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.linear#TriDiagonalTransformerTest', 'checkAEqualQTQt(RealMatrix)')": [
                        68
                    ],
                    "('org.apache.commons.math.linear#TriDiagonalTransformerTest', None)": [
                        69,
                        70,
                        74,
                        75
                    ],
                    "('org.apache.commons.math.linear#TriDiagonalTransformerTest', 'testNoAccessBelowDiagonal')": [
                        71,
                        72,
                        73
                    ],
                    "('org.apache.commons.math.linear#TriDiagonalTransformerTest', 'checkNoAccessBelowDiagonal(double)')": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87
                    ]
                }
            }
        }
    },
    "50f694b7a070631660ad35f7f46faf9c535480de": {
        "authored_data": "2008 Oct 05 15:36",
        "commit.message": "improved javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/branches/MATH_2_0@701809 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "4f7ede19741621b323128504c06bfe2358990a14",
        "changes": {
            "src/java/org/apache/commons/math/linear/TriDiagonalTransformer.java": {
                "old": {
                    "(None, None)": [
                        24,
                        27,
                        28,
                        30,
                        31,
                        32,
                        33
                    ],
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', None)": [
                        61,
                        70,
                        143,
                        204
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        27,
                        28,
                        29,
                        30,
                        32,
                        33,
                        34
                    ],
                    "('org.apache.commons.math.linear#TriDiagonalTransformer', None)": [
                        62,
                        71,
                        144,
                        205
                    ]
                }
            }
        }
    }
}