{
    "18360735db122d48bcd40d8eb18a03598e2873c4": {
        "authored_data": "2012 Oct 31 10:45",
        "commit.message": "Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1404085 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "d4b31ce8ffdac9f3d3e9e55795c3be55e515e7ef",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java": {
                "old": {
                    "(None, None)": [
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        40
                    ]
                }
            }
        }
    },
    "d4b31ce8ffdac9f3d3e9e55795c3be55e515e7ef": {
        "authored_data": "2012 Oct 30 09:52",
        "commit.message": "streamlined deserialization of DerivativeStructure\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1403648 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "ea8e5c488d36b6781a5f343150a48d6672ab4e67",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.differentiation#DerivativeStructure', None)": [
                        890,
                        891,
                        892
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis.differentiation#DerivativeStructure', None)": [
                        890
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructureTest.java": {
                "new": {
                    "('org.apache.commons.math3.analysis.differentiation#DerivativeStructureTest', None)": [
                        1131,
                        1138,
                        1139
                    ],
                    "('org.apache.commons.math3.analysis.differentiation#DerivativeStructureTest', 'testSerialization')": [
                        1132,
                        1133,
                        1134,
                        1135,
                        1136,
                        1137
                    ]
                }
            }
        }
    },
    "ea8e5c488d36b6781a5f343150a48d6672ab4e67": {
        "authored_data": "2012 Oct 30 00:38",
        "commit.message": "Use the \"isSymmetric\" utility method from \"MatrixUtils\" (copied from\n\"EigenDecomposition\" in MATH-884).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1403591 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "06c63da6c713adc0b17e7f7e0daa71b1079fd84a",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java": {
                "old": {
                    "('org.apache.commons.math3.linear#EigenDecomposition', None)": [
                        118,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193
                    ],
                    "('org.apache.commons.math3.linear#EigenDecomposition', 'isSymmetric(RealMatrix,boolean)')": [
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#EigenDecomposition', None)": [
                        118,
                        119
                    ]
                }
            }
        }
    },
    "06c63da6c713adc0b17e7f7e0daa71b1079fd84a": {
        "authored_data": "2012 Oct 30 00:29",
        "commit.message": "MATH-883\nAdded \"getSquareRoot()\" method. Implementation only supports symmetric,\ndiagonalizable matrices.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1403590 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "4d12f0ca684540cef88eb929ecb47f207db231b3",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java": {
                "old": {
                    "('org.apache.commons.math3.linear#EigenDecomposition', None)": [
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#EigenDecomposition', None)": [
                        103,
                        104,
                        118,
                        119,
                        155,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400
                    ],
                    "('org.apache.commons.math3.linear#EigenDecomposition', 'getSquareRoot')": [
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java": {
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math3.linear#EigenDecompositionTest', None)": [
                        338,
                        339,
                        340,
                        359,
                        360,
                        361,
                        362,
                        363,
                        373,
                        374,
                        375
                    ],
                    "('org.apache.commons.math3.linear#EigenDecompositionTest', 'testSquareRoot')": [
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358
                    ],
                    "('org.apache.commons.math3.linear#EigenDecompositionTest', 'testSquareRootNonSymmetric')": [
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372
                    ],
                    "('org.apache.commons.math3.linear#EigenDecompositionTest', 'testSquareRootNonPositiveDefinite')": [
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384
                    ]
                }
            }
        }
    },
    "4d12f0ca684540cef88eb929ecb47f207db231b3": {
        "authored_data": "2012 Oct 30 00:21",
        "commit.message": "MATH-884\nAdded methods \"isSymmetric\" and \"checkSymmetric\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1403587 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "e0f7ce9c7c1db05e4c9c41b2e2bc3ba53eabad29",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/MatrixUtils.java": {
                "new": {
                    "('org.apache.commons.math3.linear#MatrixUtils', None)": [
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'isSymmetricInternal(RealMatrix,double,boolean)')": [
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'checkSymmetric(RealMatrix,double)')": [
                        424,
                        425,
                        426
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'isSymmetric(RealMatrix,double)')": [
                        436,
                        437,
                        438
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java": {
                "new": {
                    "('org.apache.commons.math3.linear#MatrixUtilsTest', None)": [
                        366,
                        367,
                        384,
                        385,
                        386,
                        415,
                        416,
                        417,
                        425,
                        426,
                        427
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtilsTest', 'testIsSymmetric')": [
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtilsTest', 'testIsSymmetricTolerance')": [
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtilsTest', 'testCheckSymmetric1')": [
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtilsTest', 'testCheckSymmetric2')": [
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434
                    ],
                    "(None, None)": [
                        435
                    ]
                }
            }
        }
    },
    "e0f7ce9c7c1db05e4c9c41b2e2bc3ba53eabad29": {
        "authored_data": "2012 Oct 29 04:06",
        "commit.message": "Moved array argument validation methods from ChiSquareTest to MathArrays. JIRA: MATH-885.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1403169 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "6f50c9e55d08684b2f8f34f164defdda86be213b",
        "changes": {
            "src/main/java/org/apache/commons/math3/stat/inference/ChiSquareTest.java": {
                "old": {
                    "(None, None)": [
                        29,
                        672,
                        673,
                        674
                    ],
                    "('org.apache.commons.math3.stat.inference#ChiSquareTest', 'chiSquare(double,long)')": [
                        89,
                        90
                    ],
                    "('org.apache.commons.math3.stat.inference#ChiSquareTest', None)": [
                        161,
                        599,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610,
                        620,
                        621,
                        622,
                        623,
                        624,
                        625,
                        626,
                        627,
                        628,
                        629,
                        630,
                        637,
                        638,
                        639,
                        640,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        654,
                        655,
                        656,
                        657,
                        658,
                        659,
                        660,
                        661,
                        662,
                        663,
                        664
                    ],
                    "('org.apache.commons.math3.stat.inference#ChiSquareTest', 'chiSquareDataSetsComparison(long,long)')": [
                        423,
                        424
                    ],
                    "('org.apache.commons.math3.stat.inference#ChiSquareTest', 'checkArray(long)')": [
                        597,
                        598
                    ],
                    "('org.apache.commons.math3.stat.inference#ChiSquareTest', 'checkRectangular(long)')": [
                        611,
                        612,
                        613,
                        614,
                        615,
                        616,
                        617,
                        618,
                        619
                    ],
                    "('org.apache.commons.math3.stat.inference#ChiSquareTest', 'checkPositive(double)')": [
                        631,
                        632,
                        633,
                        634,
                        635,
                        636
                    ],
                    "('org.apache.commons.math3.stat.inference#ChiSquareTest', 'checkNonNegative(long)')": [
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math3.stat.inference#ChiSquareTest', 'chiSquare(double,long)')": [
                        89,
                        90
                    ],
                    "('org.apache.commons.math3.stat.inference#ChiSquareTest', 'chiSquareDataSetsComparison(long,long)')": [
                        422,
                        423
                    ],
                    "('org.apache.commons.math3.stat.inference#ChiSquareTest', 'checkArray(long)')": [
                        596,
                        597
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/MathArrays.java": {
                "new": {
                    "(None, None)": [
                        28,
                        29
                    ],
                    "('org.apache.commons.math3.util#MathArrays', None)": [
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        368,
                        369,
                        370
                    ],
                    "('org.apache.commons.math3.util#MathArrays', 'checkRectangular(long)')": [
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320
                    ],
                    "('org.apache.commons.math3.util#MathArrays', 'checkPositive(double)')": [
                        332,
                        333,
                        334,
                        335,
                        336
                    ],
                    "('org.apache.commons.math3.util#MathArrays', 'checkNonNegative(long)')": [
                        347,
                        348,
                        349,
                        350,
                        351,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/util/MathArraysTest.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math3.util#MathArraysTest', None)": [
                        201,
                        202,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        285,
                        286,
                        287,
                        288
                    ],
                    "('org.apache.commons.math3.util#MathArraysTest', 'testCheckRectangular')": [
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218
                    ],
                    "('org.apache.commons.math3.util#MathArraysTest', 'testCheckPositive')": [
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240
                    ],
                    "('org.apache.commons.math3.util#MathArraysTest', 'testCheckNonNegative')": [
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262
                    ],
                    "('org.apache.commons.math3.util#MathArraysTest', 'testCheckNonNegative2D')": [
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284
                    ]
                }
            }
        }
    },
    "6f50c9e55d08684b2f8f34f164defdda86be213b": {
        "authored_data": "2012 Oct 27 14:31",
        "commit.message": "Completed javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1402800 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "41aa1c40fd8fe92f80c0513ead4a56c84a8ae02d",
        "changes": {
            "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.twod#PolygonsSet', None)": [
                        405
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.twod#PolygonsSet', None)": [
                        170,
                        406
                    ]
                }
            }
        }
    },
    "41aa1c40fd8fe92f80c0513ead4a56c84a8ae02d": {
        "authored_data": "2012 Oct 26 23:37",
        "commit.message": "Removed quasi-duplicate code.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1402716 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "4fe86d82eb16f68d31907bfd5a0f685a016d476c",
        "changes": {
            "src/test/java/org/apache/commons/math3/linear/EigenDecompositionTest.java": {
                "old": {
                    "('org.apache.commons.math3.linear#EigenDecompositionTest', 'testDiagonal')": [
                        491
                    ],
                    "('org.apache.commons.math3.linear#EigenDecompositionTest', 'createTestMatrix(Random,double)')": [
                        643
                    ],
                    "('org.apache.commons.math3.linear#EigenDecompositionTest', None)": [
                        689
                    ],
                    "('org.apache.commons.math3.linear#EigenDecompositionTest', 'createDiagonalMatrix(double,int,int)')": [
                        690,
                        691,
                        692,
                        693,
                        694,
                        695,
                        696
                    ],
                    "(None, None)": [
                        697,
                        698
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#EigenDecompositionTest', 'testDiagonal')": [
                        491
                    ],
                    "('org.apache.commons.math3.linear#EigenDecompositionTest', 'createTestMatrix(Random,double)')": [
                        643
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/linear/SingularValueDecompositionTest.java": {
                "old": {
                    "('org.apache.commons.math3.linear#SingularValueDecompositionTest', 'createTestMatrix(Random,int,int,double)')": [
                        310,
                        311,
                        312,
                        313,
                        314,
                        315
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#SingularValueDecompositionTest', 'createTestMatrix(Random,int,int,double)')": [
                        310,
                        311,
                        312,
                        313
                    ]
                }
            }
        }
    },
    "d0d4760c97ac6e725a37758743199d3c35c85559": {
        "authored_data": "2012 Oct 26 18:19",
        "commit.message": "MATH-874\nFirst steps to upgrade the API of the classes in \"o.a.c.m.optimization.general\".\nPlease note the introduction of a \"Weight\" matrix (whereas the current code\nassumes that the weights are given as an array).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1402607 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "2796e77e2ead81b58b387dfff1be1e5e45e9290d",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', None)": [
                        49,
                        54,
                        104,
                        129,
                        162,
                        163,
                        164,
                        165,
                        182,
                        188
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', 'optimizeInternal(int,MultivariateVectorFunction,double,double,double)')": [
                        130,
                        150,
                        153,
                        154,
                        156,
                        157,
                        158,
                        159
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        28,
                        29,
                        34,
                        397,
                        398
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', None)": [
                        54,
                        55,
                        56,
                        57,
                        58,
                        63,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        172,
                        173,
                        174,
                        175,
                        176,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        240,
                        241,
                        242,
                        243,
                        244,
                        252,
                        253,
                        254,
                        255,
                        256,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        311,
                        312,
                        313,
                        323,
                        324,
                        325,
                        331,
                        332,
                        333,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', 'optimize(int,FUNC,OptimizationData)')": [
                        145,
                        146,
                        147,
                        148,
                        149,
                        150
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', 'optimizeInternal(int,FUNC,double,double,double)')": [
                        177,
                        197,
                        198,
                        199,
                        200
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', 'optimizeInternal(int,FUNC,OptimizationData)')": [
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', 'getWeight')": [
                        257,
                        258
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', 'getTarget')": [
                        267,
                        268
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', 'computeResidual(double)')": [
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', 'getObjectiveFunction')": [
                        309,
                        310
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', 'setUp')": [
                        348,
                        349,
                        350,
                        351,
                        352,
                        353
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', 'parseOptimizationData(OptimizationData)')": [
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', 'checkParameters')": [
                        393,
                        394,
                        395,
                        396
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        311,
                        312,
                        343
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(int,DifferentiableMultivariateVectorFunction,double,double,double)')": [
                        320,
                        321
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(int,MultivariateDifferentiableVectorFunction,double,double,double)')": [
                        353,
                        356,
                        357,
                        364,
                        365
                    ],
                    "(None, None)": [
                        366,
                        367
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32,
                        33,
                        34,
                        425
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        315,
                        316,
                        317,
                        318,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        398,
                        399,
                        400,
                        401
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(int,DifferentiableMultivariateVectorFunction,double,double,double)')": [
                        326,
                        327,
                        328,
                        329,
                        330
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(int,MultivariateDifferentiableVectorFunction,double,double,double)')": [
                        362,
                        363,
                        364,
                        365
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizer', 'optimizeInternal(int,MultivariateDifferentiableVectorFunction,OptimizationData)')": [
                        392,
                        393,
                        394,
                        395,
                        396,
                        397
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizer', 'setUp')": [
                        402,
                        403,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        417,
                        418
                    ]
                }
            }
        }
    }
}