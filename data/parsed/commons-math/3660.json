{
    "984ff74f4b30aae5c549cd17ddb04a16c33c31d0": {
        "authored_data": "2011 Nov 03 04:02",
        "commit.message": "Fixed Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1196935 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "10013c4eea06afc5f730e54aacaeb7ed832438ef",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', None)": [
                        180,
                        182,
                        225,
                        227
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', None)": [
                        180,
                        182,
                        225,
                        227
                    ]
                }
            }
        }
    },
    "10013c4eea06afc5f730e54aacaeb7ed832438ef": {
        "authored_data": "2011 Nov 02 12:07",
        "commit.message": "Naming of variable.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1196553 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "9824f20965e3aebb9abc9de9ea0d0c16ef29c968",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', None)": [
                        86,
                        151,
                        292
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'doOptimize')": [
                        410,
                        411
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', None)": [
                        86,
                        151,
                        292
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'doOptimize')": [
                        410,
                        411
                    ]
                }
            }
        }
    },
    "9824f20965e3aebb9abc9de9ea0d0c16ef29c968": {
        "authored_data": "2011 Nov 02 09:36",
        "commit.message": "Fixed a typo in variable name leading it to be ignored.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1196521 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "5771d382007de425201322987cd654986b2f9074",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', None)": [
                        292
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', None)": [
                        292
                    ]
                }
            }
        }
    },
    "5771d382007de425201322987cd654986b2f9074": {
        "authored_data": "2011 Oct 29 19:35",
        "commit.message": "MATH-698\nBounds passed as arguments in \"optimize\" method.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1194989 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "3ea635a01c8e4cfe058e3604232be87467615849",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', None)": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        157,
                        160,
                        168,
                        172,
                        226,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        258,
                        259,
                        262,
                        263,
                        314,
                        315,
                        400,
                        401,
                        1607,
                        2400,
                        2401,
                        2402
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', 'doOptimize')": [
                        273,
                        278
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', 'bobyqa')": [
                        316,
                        362
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', 'bobyqb')": [
                        402,
                        434
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', 'prelim')": [
                        1608
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', 'setup')": [
                        2403,
                        2423,
                        2424,
                        2425,
                        2426,
                        2427,
                        2428,
                        2429,
                        2430,
                        2431,
                        2432,
                        2433,
                        2434,
                        2435,
                        2436,
                        2437,
                        2438,
                        2439,
                        2440,
                        2441,
                        2442,
                        2443,
                        2444,
                        2450
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', None)": [
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        144,
                        147,
                        155,
                        159,
                        213,
                        214,
                        215,
                        282,
                        283,
                        284,
                        285,
                        286,
                        372,
                        373,
                        374,
                        375,
                        1582,
                        1583,
                        1584,
                        2378,
                        2379,
                        2380,
                        2381,
                        2382
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', 'doOptimize')": [
                        237,
                        238,
                        239,
                        241,
                        246
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', 'bobyqa(double,double)')": [
                        287,
                        288,
                        334
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', 'bobyqb(double,double)')": [
                        376,
                        377,
                        409
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', 'prelim(double,double)')": [
                        1585,
                        1586
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', 'setup(double,double)')": [
                        2383,
                        2384,
                        2409
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizerTest', None)": [
                        42
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizerTest', 'doTest(MultivariateRealFunction,double,double,GoalType,double,double,int,RealPointValuePair)')": [
                        265,
                        266,
                        267
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizerTest', None)": [
                        42
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizerTest', 'doTest(MultivariateRealFunction,double,double,GoalType,double,double,int,RealPointValuePair)')": [
                        265,
                        266
                    ]
                }
            }
        }
    },
    "3ea635a01c8e4cfe058e3604232be87467615849": {
        "authored_data": "2011 Oct 29 18:30",
        "commit.message": "Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1194966 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "d8e1809529ef78737dbbe4080622330970866793",
        "changes": {
            "src/main/java/org/apache/commons/math/util/MathArrays.java": {
                "old": {
                    "('org.apache.commons.math.util#MathArrays', None)": [
                        440,
                        441,
                        442
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathArrays', None)": [
                        440,
                        441,
                        442,
                        443
                    ]
                }
            }
        }
    },
    "d8e1809529ef78737dbbe4080622330970866793": {
        "authored_data": "2011 Oct 29 11:19",
        "commit.message": "MATH-697\nFixed bug in check that the initial value is within bounds.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1194874 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "aecf3993c4c4008ae4a9f024434f2b4538aa3796",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        76,
                        77
                    ]
                },
                "new": {
                    "(None, None)": [
                        76,
                        77,
                        78,
                        79
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'optimize(int,FUNC,GoalType,double,double,double)')": [
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'optimize(int,FUNC,GoalType,double,double,double)')": [
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150
                    ]
                }
            }
        }
    },
    "aecf3993c4c4008ae4a9f024434f2b4538aa3796": {
        "authored_data": "2011 Oct 28 23:54",
        "commit.message": "MATH-697\nCheck that the given starting point is within the bounds.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1190686 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "ae42622ff090712ae04edeaab09c523b5b1a0470",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java": {
                "new": {
                    "(None, None)": [
                        76,
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java": {
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'optimize(int,FUNC,GoalType,double,double,double)')": [
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144
                    ]
                }
            }
        }
    },
    "ae42622ff090712ae04edeaab09c523b5b1a0470": {
        "authored_data": "2011 Oct 28 23:12",
        "commit.message": "MATH-697\nAdded consistency check on array sizes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1190665 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "eb3e19b46070af80b8cec680a5bc352251a0ca30",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'optimize(int,FUNC,GoalType,double,double,double)')": [
                        134
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'optimize(int,FUNC,GoalType,double,double,double)')": [
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        144
                    ]
                }
            }
        }
    },
    "eb3e19b46070af80b8cec680a5bc352251a0ca30": {
        "authored_data": "2011 Oct 28 23:03",
        "commit.message": "Javadoc and code formatting.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1190657 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "481e8c1729fcf3f39f86cc5c926a39a602ebd477",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', None)": [
                        81,
                        82,
                        83,
                        84,
                        241,
                        242,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        260,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        292,
                        293,
                        294,
                        545,
                        546,
                        547,
                        548,
                        618,
                        620,
                        621,
                        622,
                        623,
                        624,
                        625,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        676,
                        678,
                        679,
                        680,
                        681,
                        682,
                        683,
                        684,
                        685,
                        686,
                        687,
                        688,
                        689,
                        760,
                        762,
                        763,
                        799,
                        800,
                        801,
                        802,
                        814,
                        815,
                        816,
                        836,
                        843,
                        844,
                        845,
                        846,
                        889,
                        906,
                        907,
                        908,
                        923,
                        924,
                        925,
                        940,
                        941,
                        942,
                        959,
                        960,
                        961,
                        979,
                        980,
                        987,
                        988,
                        989,
                        1006,
                        1007,
                        1008,
                        1009,
                        1025,
                        1026,
                        1027,
                        1042,
                        1056,
                        1070,
                        1071,
                        1072,
                        1073,
                        1074,
                        1087,
                        1088,
                        1089,
                        1090,
                        1091,
                        1120,
                        1134,
                        1135,
                        1151,
                        1152,
                        1153,
                        1154,
                        1175,
                        1176,
                        1177,
                        1178,
                        1179,
                        1180,
                        1181,
                        1182,
                        1191,
                        1192,
                        1193,
                        1194,
                        1195,
                        1206,
                        1207,
                        1208,
                        1209,
                        1210,
                        1223,
                        1224,
                        1225,
                        1226,
                        1227,
                        1234,
                        1235,
                        1236,
                        1237,
                        1238,
                        1239,
                        1240,
                        1255,
                        1256,
                        1257,
                        1258,
                        1259,
                        1260,
                        1261,
                        1275,
                        1276,
                        1277,
                        1293,
                        1294,
                        1295,
                        1311,
                        1312,
                        1313,
                        1326,
                        1327,
                        1328,
                        1341,
                        1342,
                        1343,
                        1354,
                        1355,
                        1356,
                        1367,
                        1368,
                        1369,
                        1380,
                        1381,
                        1382,
                        1383,
                        1384
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'updateCovarianceDiagonalOnly(boolean,RealMatrix,RealMatrix)')": [
                        654,
                        655
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'times(RealMatrix,RealMatrix)')": [
                        1080
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'divide(RealMatrix,RealMatrix)')": [
                        1097
                    ],
                    "(None, None)": [
                        1396
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', None)": [
                        81,
                        82,
                        83,
                        240,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        254,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        276,
                        277,
                        278,
                        529,
                        530,
                        600,
                        602,
                        603,
                        604,
                        605,
                        626,
                        627,
                        628,
                        629,
                        630,
                        654,
                        656,
                        657,
                        658,
                        659,
                        660,
                        661,
                        662,
                        733,
                        735,
                        771,
                        772,
                        784,
                        785,
                        811,
                        812,
                        871,
                        872,
                        887,
                        888,
                        903,
                        904,
                        921,
                        922,
                        940,
                        947,
                        948,
                        965,
                        966,
                        982,
                        983,
                        998,
                        1012,
                        1026,
                        1027,
                        1028,
                        1041,
                        1042,
                        1043,
                        1072,
                        1086,
                        1102,
                        1103,
                        1104,
                        1125,
                        1126,
                        1127,
                        1128,
                        1137,
                        1138,
                        1139,
                        1150,
                        1151,
                        1152,
                        1165,
                        1166,
                        1167,
                        1174,
                        1175,
                        1176,
                        1177,
                        1192,
                        1193,
                        1194,
                        1195,
                        1209,
                        1210,
                        1226,
                        1227,
                        1243,
                        1244,
                        1257,
                        1258,
                        1271,
                        1272,
                        1283,
                        1284,
                        1295,
                        1296,
                        1307,
                        1308,
                        1309
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'updateCovarianceDiagonalOnly(boolean,RealMatrix,RealMatrix)')": [
                        631,
                        632,
                        633
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'times(RealMatrix,RealMatrix)')": [
                        1034
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'divide(RealMatrix,RealMatrix)')": [
                        1049
                    ]
                }
            }
        }
    },
    "481e8c1729fcf3f39f86cc5c926a39a602ebd477": {
        "authored_data": "2011 Oct 28 20:44",
        "commit.message": "MATH-697\nAdded \"optimize\" method to allow passing simple bounds.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1190556 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "f7be1dc6ace53b3d3bd27f617a68c71161d9c6ed",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', 'optimize(int,FUNC,GoalType,double)')": [
                        150
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', 'optimize(int,FUNC,GoalType,double)')": [
                        140
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', None)": [
                        141,
                        142,
                        143,
                        144,
                        145
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', 'optimize(int,FUNC,GoalType,double,double,double)')": [
                        146,
                        147,
                        148,
                        149,
                        160,
                        161
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java": {
                "new": {
                    "(None, None)": [
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java": {
                "new": {
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', None)": [
                        51,
                        52,
                        53,
                        54,
                        109,
                        110,
                        111,
                        171,
                        172,
                        175,
                        176,
                        177,
                        178,
                        179,
                        182,
                        183,
                        184
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'optimize(int,FUNC,GoalType,double)')": [
                        108
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'optimize(int,FUNC,GoalType,double,double,double)')": [
                        112,
                        113,
                        114,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'getLowerBound')": [
                        173,
                        174
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'getUpperBound')": [
                        180,
                        181
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'optimize(int,DifferentiableMultivariateRealFunction,GoalType,double)')": [
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'optimize(int,DifferentiableMultivariateRealFunction,GoalType,double)')": [
                        76
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', None)": [
                        77,
                        78,
                        79,
                        80
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'optimize(int,DifferentiableMultivariateRealFunction,GoalType,double,double,double)')": [
                        81,
                        82,
                        83,
                        84,
                        85,
                        89,
                        90,
                        91
                    ]
                }
            }
        }
    }
}