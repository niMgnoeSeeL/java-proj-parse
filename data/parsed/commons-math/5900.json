{
    "09e2f3940c9f2a31627cee0dfece24ea6895c55a": {
        "authored_data": "2008 Jan 22 20:58",
        "commit.message": "added Niall's patch for improved double constructor test\nadded test for construction failure (golden-ratio)\nJIRA: MATH-179\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@614320 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "db70272e682c05fa7e2f2fabb7f2595b3be7ef10",
        "changes": {
            "src/test/org/apache/commons/math/fraction/FractionTest.java": {
                "old": {
                    "('org.apache.commons.math.fraction#FractionTest', None)": [
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#FractionTest', None)": [
                        66,
                        76,
                        77,
                        78,
                        79,
                        122,
                        123
                    ],
                    "('org.apache.commons.math.fraction#FractionTest', 'testGoldenRatio')": [
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75
                    ],
                    "('org.apache.commons.math.fraction#FractionTest', 'testDoubleConstructor')": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121
                    ]
                }
            }
        }
    },
    "a6a8cd68abd4a538d7ae02651d4cf3184b4ec653": {
        "authored_data": "2008 Jan 20 21:08",
        "commit.message": "added missing javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@613677 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "36bf638c500d4b901f5040f604654c5181979b35",
        "changes": {
            "src/java/org/apache/commons/math/ArgumentOutsideDomainException.java": {
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24
                    ]
                }
            },
            "src/java/org/apache/commons/math/MathException.java": {
                "new": {
                    "('org.apache.commons.math#MathException', None)": [
                        57
                    ]
                }
            },
            "src/java/org/apache/commons/math/MaxIterationsExceededException.java": {
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26,
                        27
                    ]
                }
            },
            "src/java/org/apache/commons/math/MessagesResources_fr.java": {
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        33,
                        34,
                        35,
                        40
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', None)": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', None)": [
                        35,
                        36
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/AbstractEstimator.java": {
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math.estimation#AbstractEstimator', None)": [
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/EstimatedParameter.java": {
                "new": {
                    "('org.apache.commons.math.estimation#EstimatedParameter', None)": [
                        120
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java": {
                "old": {
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', None)": [
                        176
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', None)": [
                        173,
                        175,
                        176,
                        179,
                        180
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java": {
                "new": {
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', None)": [
                        862
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java": {
                "new": {
                    "('org.apache.commons.math.estimation#SimpleEstimationProblem', None)": [
                        51,
                        52,
                        53,
                        54,
                        59,
                        60,
                        61,
                        62,
                        79,
                        80,
                        81,
                        82,
                        87,
                        88,
                        89
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/WeightedMeasurement.java": {
                "new": {
                    "('org.apache.commons.math.estimation#WeightedMeasurement', None)": [
                        157,
                        159,
                        160,
                        162,
                        163
                    ]
                }
            },
            "src/java/org/apache/commons/math/fraction/FractionConversionException.java": {
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26,
                        27
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry#CardanEulerSingularityException', None)": [
                        40
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/NotARotationMatrixException.java": {
                "new": {
                    "('org.apache.commons.math.geometry#NotARotationMatrixException', None)": [
                        41
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/Rotation.java": {
                "new": {
                    "('org.apache.commons.math.geometry#Rotation', None)": [
                        1031
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/Vector3D.java": {
                "new": {
                    "('org.apache.commons.math.geometry#Vector3D', None)": [
                        357
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/BigMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', None)": [
                        1098,
                        1099
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', None)": [
                        1098,
                        1099
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/RealMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealMatrixImpl', None)": [
                        849,
                        850
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#RealMatrixImpl', None)": [
                        849,
                        850
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#AbstractStepInterpolator', None)": [
                        357,
                        358,
                        359,
                        360,
                        364,
                        365,
                        366,
                        367
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java": {
                "new": {
                    "('org.apache.commons.math.ode#AdaptiveStepsizeIntegrator', None)": [
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ClassicalRungeKuttaIntegrator.java": {
                "new": {
                    "('org.apache.commons.math.ode#ClassicalRungeKuttaIntegrator', None)": [
                        49,
                        52,
                        57,
                        64
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ClassicalRungeKuttaStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#ClassicalRungeKuttaStepInterpolator', None)": [
                        107
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ContinuousOutputModel.java": {
                "new": {
                    "('org.apache.commons.math.ode#ContinuousOutputModel', None)": [
                        374
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DerivativeException.java": {
                "new": {
                    "('org.apache.commons.math.ode#DerivativeException', None)": [
                        47
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java": {
                "new": {
                    "('org.apache.commons.math.ode#DormandPrince54Integrator', None)": [
                        49,
                        52,
                        57,
                        67,
                        72,
                        74,
                        75,
                        76,
                        77,
                        79,
                        80,
                        82,
                        83,
                        85,
                        86,
                        88,
                        89
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode#DormandPrince54StepInterpolator', None)": [
                        175,
                        182
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#DormandPrince54StepInterpolator', None)": [
                        175,
                        177,
                        178,
                        179,
                        180,
                        182,
                        183,
                        185,
                        186,
                        188,
                        189,
                        192,
                        194,
                        195,
                        196,
                        197,
                        199,
                        200,
                        202,
                        203,
                        205,
                        206,
                        208,
                        209,
                        212
                    ],
                    "(None, None)": [
                        214
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#DormandPrince853Integrator', None)": [
                        59,
                        60,
                        62,
                        63,
                        70,
                        73,
                        76,
                        79,
                        80,
                        83,
                        86,
                        87,
                        90,
                        91,
                        95,
                        96,
                        102,
                        103,
                        109,
                        110,
                        117,
                        118
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#DormandPrince853Integrator', None)": [
                        57,
                        60,
                        62,
                        63,
                        67,
                        71,
                        74,
                        77,
                        80,
                        81,
                        84,
                        87,
                        88,
                        91,
                        92,
                        96,
                        97,
                        103,
                        104,
                        110,
                        111,
                        118,
                        119,
                        134,
                        151,
                        153,
                        154,
                        155,
                        156,
                        158,
                        159,
                        161,
                        162,
                        164,
                        165,
                        167,
                        168,
                        170,
                        171,
                        173,
                        174,
                        177,
                        178,
                        180,
                        181,
                        182,
                        183,
                        185,
                        186,
                        188,
                        189,
                        191,
                        192,
                        194,
                        195,
                        197,
                        198,
                        200,
                        201
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode#DormandPrince853StepInterpolator', None)": [
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#DormandPrince853StepInterpolator', None)": [
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        481
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DummyStepHandler.java": {
                "new": {
                    "('org.apache.commons.math.ode#DummyStepHandler', None)": [
                        90
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DummyStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#DummyStepInterpolator', None)": [
                        95,
                        96,
                        97,
                        98,
                        105,
                        106,
                        107,
                        108,
                        124
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#EmbeddedRungeKuttaIntegrator', None)": [
                        64,
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#EmbeddedRungeKuttaIntegrator', None)": [
                        64,
                        101,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/EulerIntegrator.java": {
                "new": {
                    "('org.apache.commons.math.ode#EulerIntegrator', None)": [
                        52,
                        55,
                        59,
                        63
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/EulerStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#EulerStepInterpolator', None)": [
                        92
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/FirstOrderConverter.java": {
                "new": {
                    "('org.apache.commons.math.ode#FirstOrderConverter', None)": [
                        72,
                        73,
                        74,
                        75,
                        76,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/GillIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#GillIntegrator', None)": [
                        50,
                        51,
                        58,
                        59,
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#GillIntegrator', None)": [
                        48,
                        51,
                        56,
                        59,
                        60,
                        63,
                        65
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/GillStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#GillStepInterpolator', None)": [
                        114
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java": {
                "new": {
                    "('org.apache.commons.math.ode#GraggBulirschStoerIntegrator', None)": [
                        90,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#GraggBulirschStoerStepInterpolator', None)": [
                        396
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/HighamHall54Integrator.java": {
                "new": {
                    "('org.apache.commons.math.ode#HighamHall54Integrator', None)": [
                        37,
                        40,
                        45,
                        55,
                        60
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/HighamHall54StepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#HighamHall54StepInterpolator', None)": [
                        91
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/IntegratorException.java": {
                "new": {
                    "('org.apache.commons.math.ode#IntegratorException', None)": [
                        47
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/MidpointIntegrator.java": {
                "new": {
                    "('org.apache.commons.math.ode#MidpointIntegrator', None)": [
                        45,
                        48,
                        53,
                        58
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/MidpointStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#MidpointStepInterpolator', None)": [
                        98
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#RungeKuttaIntegrator', None)": [
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#RungeKuttaIntegrator', None)": [
                        54,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ThreeEighthesIntegrator.java": {
                "new": {
                    "('org.apache.commons.math.ode#ThreeEighthesIntegrator', None)": [
                        48,
                        51,
                        56,
                        63
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ThreeEighthesStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#ThreeEighthesStepInterpolator', None)": [
                        108
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/UniformRandomGenerator.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.random#UniformRandomGenerator', None)": [
                        51
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/Frequency.java": {
                "new": {
                    "('org.apache.commons.math.stat#Frequency', None)": [
                        439,
                        440
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', None)": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', None)": [
                        69,
                        71,
                        72,
                        74,
                        75,
                        77,
                        78,
                        80,
                        81,
                        83,
                        84,
                        86,
                        87,
                        89,
                        90,
                        92,
                        93,
                        95,
                        96
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#SummaryStatistics', None)": [
                        131
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#SummaryStatistics', None)": [
                        131,
                        133,
                        134,
                        136,
                        137,
                        139,
                        140,
                        142,
                        143,
                        145,
                        146,
                        148,
                        149,
                        151,
                        152
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/SummaryStatisticsImpl.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#SummaryStatisticsImpl', None)": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#SummaryStatisticsImpl', None)": [
                        38,
                        39
                    ]
                }
            },
            "src/java/org/apache/commons/math/util/TransformerMap.java": {
                "new": {
                    "('org.apache.commons.math.util#TransformerMap', None)": [
                        135,
                        136,
                        137
                    ]
                }
            }
        }
    },
    "8247ce625c028f0892501017dd28c8737ccbf13d": {
        "authored_data": "2008 Jan 20 18:04",
        "commit.message": "fixed missing javadoc tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@613637 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "f1f1c1c97925fc0faa415c4121a47be54ef0f7d3",
        "changes": {
            "src/java/org/apache/commons/math/analysis/DividedDifferenceInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.analysis#DividedDifferenceInterpolator', None)": [
                        89,
                        90
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/PolynomialFunctionLagrangeForm.java": {
                "new": {
                    "('org.apache.commons.math.analysis#PolynomialFunctionLagrangeForm', None)": [
                        279,
                        280
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/PolynomialFunctionNewtonForm.java": {
                "new": {
                    "('org.apache.commons.math.analysis#PolynomialFunctionNewtonForm', None)": [
                        199,
                        200
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/Vector3D.java": {
                "new": {
                    "('org.apache.commons.math.geometry#Vector3D', None)": [
                        287
                    ]
                }
            },
            "src/java/org/apache/commons/math/linear/BigMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', None)": [
                        384,
                        403
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', None)": [
                        384,
                        403
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#AbstractStepInterpolator', None)": [
                        189
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ClassicalRungeKuttaStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#ClassicalRungeKuttaStepInterpolator', None)": [
                        72
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#DormandPrince54StepInterpolator', None)": [
                        81
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#DormandPrince853StepInterpolator', None)": [
                        92
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DummyStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#DummyStepInterpolator', None)": [
                        74
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/EulerStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#EulerStepInterpolator', None)": [
                        65
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/GillStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#GillStepInterpolator', None)": [
                        70
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#GraggBulirschStoerStepInterpolator', None)": [
                        223
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/HighamHall54StepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#HighamHall54StepInterpolator', None)": [
                        56
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/MidpointStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#MidpointStepInterpolator', None)": [
                        67
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ThreeEighthesStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.ode#ThreeEighthesStepInterpolator', None)": [
                        72
                    ]
                }
            }
        }
    },
    "81e5bb6166b49527137d028940188a1905ce986e": {
        "authored_data": "2008 Jan 20 17:30",
        "commit.message": "changed public fields to private and added accessors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@613633 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "c645488d321bf47d648805edefaf6771e219e63d",
        "changes": {
            "src/java/org/apache/commons/math/optimization/DirectSearchOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#DirectSearchOptimizer', 'evaluateSimplex')": [
                        546,
                        547
                    ],
                    "('org.apache.commons.math.optimization#DirectSearchOptimizer', 'replaceWorstPoint(PointCostPair)')": [
                        562
                    ],
                    "('org.apache.commons.math.optimization#DirectSearchOptimizer', None)": [
                        579,
                        580
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#DirectSearchOptimizer', 'evaluateSimplex')": [
                        546,
                        547
                    ],
                    "('org.apache.commons.math.optimization#DirectSearchOptimizer', 'replaceWorstPoint(PointCostPair)')": [
                        562
                    ],
                    "('org.apache.commons.math.optimization#DirectSearchOptimizer', None)": [
                        579,
                        580
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/MultiDirectional.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiDirectional', 'iterateSimplex')": [
                        58
                    ],
                    "('org.apache.commons.math.optimization#MultiDirectional', 'evaluateNewSimplex(PointCostPair,double)')": [
                        97,
                        104,
                        114
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiDirectional', 'iterateSimplex')": [
                        58
                    ],
                    "('org.apache.commons.math.optimization#MultiDirectional', 'evaluateNewSimplex(PointCostPair,double)')": [
                        97,
                        104,
                        114
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/NelderMead.java": {
                "old": {
                    "('org.apache.commons.math.optimization#NelderMead', 'iterateSimplex')": [
                        65,
                        66,
                        67,
                        68,
                        74,
                        148,
                        150
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#NelderMead', 'iterateSimplex')": [
                        65,
                        66,
                        67,
                        68,
                        74,
                        148,
                        150
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/PointCostPair.java": {
                "old": {
                    "('org.apache.commons.math.optimization#PointCostPair', None)": [
                        37,
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#PointCostPair', None)": [
                        36,
                        37,
                        38,
                        41,
                        42,
                        43,
                        44,
                        45,
                        48,
                        49,
                        51,
                        54
                    ],
                    "('org.apache.commons.math.optimization#PointCostPair', 'getPoint')": [
                        39,
                        40
                    ],
                    "('org.apache.commons.math.optimization#PointCostPair', 'getCost')": [
                        46,
                        47
                    ]
                }
            },
            "src/test/org/apache/commons/math/optimization/MultiDirectionalTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiDirectionalTest', 'testRosenbrock')": [
                        92
                    ],
                    "('org.apache.commons.math.optimization#MultiDirectionalTest', 'testPowell')": [
                        117
                    ],
                    "('org.apache.commons.math.optimization#MultiDirectionalTest', None)": [
                        130
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiDirectionalTest', 'testRosenbrock')": [
                        92
                    ],
                    "('org.apache.commons.math.optimization#MultiDirectionalTest', 'testPowell')": [
                        117
                    ],
                    "('org.apache.commons.math.optimization#MultiDirectionalTest', None)": [
                        130
                    ]
                }
            },
            "src/test/org/apache/commons/math/optimization/NelderMeadTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization#NelderMeadTest', 'testRosenbrock')": [
                        113,
                        114,
                        115,
                        128,
                        141,
                        144
                    ],
                    "('org.apache.commons.math.optimization#NelderMeadTest', 'testPowell')": [
                        171,
                        172,
                        173,
                        174,
                        175
                    ],
                    "('org.apache.commons.math.optimization#NelderMeadTest', None)": [
                        188
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#NelderMeadTest', 'testRosenbrock')": [
                        113,
                        114,
                        115,
                        128,
                        141,
                        144
                    ],
                    "('org.apache.commons.math.optimization#NelderMeadTest', 'testPowell')": [
                        171,
                        172,
                        173,
                        174,
                        175
                    ],
                    "('org.apache.commons.math.optimization#NelderMeadTest', None)": [
                        188
                    ]
                }
            }
        }
    }
}