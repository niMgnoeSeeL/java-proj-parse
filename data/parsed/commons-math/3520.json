{
    "69992a098ebb0094f081801d1d376e553e7ee0f7": {
        "authored_data": "2011 Dec 12 06:46",
        "commit.message": "Improvements to the Javadoc of transform.RealTransformer (MATH-677).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1213151 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "fe1b30b58958ff95d01bc56e64c0f81294c36ac8",
        "changes": {
            "src/main/java/org/apache/commons/math/transform/RealTransformer.java": {
                "old": {
                    "(None, None)": [
                        22,
                        27,
                        28,
                        29,
                        36,
                        45,
                        47,
                        48,
                        57,
                        58,
                        59,
                        66,
                        68,
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        28,
                        29,
                        30,
                        37,
                        38,
                        47,
                        48,
                        49,
                        51,
                        52,
                        61,
                        62,
                        63,
                        64,
                        71,
                        72,
                        73,
                        75,
                        76
                    ]
                }
            }
        }
    },
    "fe1b30b58958ff95d01bc56e64c0f81294c36ac8": {
        "authored_data": "2011 Dec 12 01:31",
        "commit.message": "Made RandomDataImpl consistently use a Well generator as the default random generator. This completes the fix for JIRA: MATH-701.  The inconsistency was reported by Dennis Hendriks in JIRA: MATH-720.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1213130 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "1352a70f26cc1aafa29258f28ad4167392b97bd8",
        "changes": {
            "src/main/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        160,
                        170,
                        908,
                        909
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'getRan')": [
                        839
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'reSeed(long)')": [
                        872
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'reSeed')": [
                        913,
                        914,
                        915
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        175,
                        847,
                        848,
                        849,
                        850,
                        851,
                        852,
                        921,
                        922
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'getRan')": [
                        844
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'initRan')": [
                        853,
                        854
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'reSeed(long)')": [
                        885
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'reSeed')": [
                        926,
                        927,
                        928
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/RandomDataTest.java": {
                "new": {
                    "('org.apache.commons.math.random#RandomDataTest', None)": [
                        1059,
                        1060,
                        1061,
                        1062,
                        1063
                    ],
                    "('org.apache.commons.math.random#RandomDataTest', 'testReseed')": [
                        1064,
                        1065,
                        1066,
                        1067,
                        1068,
                        1069,
                        1070
                    ],
                    "(None, None)": [
                        1071
                    ]
                }
            }
        }
    },
    "1352a70f26cc1aafa29258f28ad4167392b97bd8": {
        "authored_data": "2011 Dec 11 21:58",
        "commit.message": "Made ISAACRandom clear its normal deviate cache on reseed. JIRA: MATH-723.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1213087 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "cc7d2ff3ca952bc3489a0ff0fad04f5a1543ae20",
        "changes": {
            "src/main/java/org/apache/commons/math/random/ISAACRandom.java": {
                "new": {
                    "('org.apache.commons.math.random#ISAACRandom', 'initState')": [
                        238
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/ISAACTest.java": {
                "old": {
                    "('org.apache.commons.math.random#ISAACTest', None)": [
                        23
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#ISAACTest', None)": [
                        23,
                        24,
                        25,
                        28
                    ],
                    "('org.apache.commons.math.random#ISAACTest', 'makeGenerator')": [
                        26,
                        27
                    ]
                }
            }
        }
    },
    "cc7d2ff3ca952bc3489a0ff0fad04f5a1543ae20": {
        "authored_data": "2011 Dec 11 21:33",
        "commit.message": "Modified setSeed methods in Bitstream generators (MersenneTwister and Well\ngenerators) to clear the cache of normal deviates used by nextGaussian.\n\nJIRA: MATH-723\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1213081 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "a51152cc9eeeb36e7efcaa126edb50f59058c845",
        "changes": {
            "src/main/java/org/apache/commons/math/random/AbstractWell.java": {
                "old": {
                    "('org.apache.commons.math.random#AbstractWell', 'setSeed(int)')": [
                        154
                    ],
                    "('org.apache.commons.math.random#AbstractWell', None)": [
                        170
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#AbstractWell', 'setSeed(int)')": [
                        169
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/BitsStreamGenerator.java": {
                "new": {
                    "('org.apache.commons.math.random#BitsStreamGenerator', None)": [
                        160,
                        161,
                        162,
                        163
                    ],
                    "('org.apache.commons.math.random#BitsStreamGenerator', 'clear')": [
                        164,
                        165
                    ],
                    "(None, None)": [
                        166,
                        167
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/MersenneTwister.java": {
                "new": {
                    "('org.apache.commons.math.random#MersenneTwister', 'setSeed(int)')": [
                        153,
                        154,
                        205
                    ],
                    "('org.apache.commons.math.random#MersenneTwister', None)": [
                        206
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/BitsStreamGeneratorTest.java": {
                "old": {
                    "('org.apache.commons.math.random#BitsStreamGeneratorTest', None)": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#BitsStreamGeneratorTest', None)": [
                        49,
                        50
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/RandomGeneratorAbstractTest.java": {
                "new": {
                    "('org.apache.commons.math.random#RandomGeneratorAbstractTest', None)": [
                        338,
                        339,
                        351,
                        352
                    ],
                    "('org.apache.commons.math.random#RandomGeneratorAbstractTest', 'testSeeding')": [
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350
                    ],
                    "('org.apache.commons.math.random#RandomGeneratorAbstractTest', 'checkSameSequence(RandomGenerator,RandomGenerator)')": [
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404
                    ],
                    "(None, None)": [
                        405
                    ]
                }
            }
        }
    },
    "a51152cc9eeeb36e7efcaa126edb50f59058c845": {
        "authored_data": "2011 Dec 09 13:00",
        "commit.message": "MATH-707\nClass name change:\n  \"AbstractUnivariateRealOptimizer\" -> \"BaseAbstractUnivariateOptimizer\"\n  \"MultiStartUnivariateRealOptimizer\" -> \"UnivariateMultiStartOptimizer\"\n  \"BaseUnivariateRealOptimizer\" -> \"BaseUnivariateOptimizer\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1212385 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "e71093b8df5770f59dbb84c2540602f0a98b4253",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizer', None)": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizer', None)": [
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/UnivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            }
        }
    },
    "e71093b8df5770f59dbb84c2540602f0a98b4253": {
        "authored_data": "2011 Dec 09 12:42",
        "commit.message": "MATH-707\nClass name change:\n  \"MultivariateRealOptimizer\" -> \"MultivariateOptimizer\"\n  \"DifferentiableMultivariateRealOptimizer\" -> \"DifferentiableMultivariateOptimizer\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1212377 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "5fef93ec7dc49901eb45edd69b3cba563c02b49d",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/BaseMultivariateOptimizer.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultivariateSimpleBoundsOptimizer.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateMultiStartOptimizer.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization#DifferentiableMultivariateMultiStartOptimizer', None)": [
                        36,
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization#DifferentiableMultivariateMultiStartOptimizer', None)": [
                        36,
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/MultivariateMultiStartOptimizer.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization#MultivariateMultiStartOptimizer', None)": [
                        36,
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization#MultivariateMultiStartOptimizer', None)": [
                        36,
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java": {
                "old": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', None)": [
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', None)": [
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java": {
                "old": {
                    "(None, None)": [
                        36
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', None)": [
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', None)": [
                        85
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', None)": [
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', None)": [
                        50
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java": {
                "old": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizer', None)": [
                        88
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizer', None)": [
                        88
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', None)": [
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', None)": [
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/package-info.java": {
                "old": {
                    "(None, None)": [
                        38,
                        39,
                        41,
                        42,
                        60
                    ]
                },
                "new": {
                    "(None, None)": [
                        38,
                        39,
                        41,
                        42,
                        60
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization#BatteryNISTTest', 'run(MultivariateRealOptimizer,DifferentiableMultivariateFunction,double)')": [
                        795
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#BatteryNISTTest', 'run(MultivariateOptimizer,DifferentiableMultivariateFunction,double)')": [
                        795
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizerTest', 'doTest(MultivariateFunction,double,double,GoalType,double,double,int,RealPointValuePair)')": [
                        256
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizerTest', 'doTest(MultivariateFunction,double,double,GoalType,double,double,int,RealPointValuePair)')": [
                        256
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'doTest(MultivariateFunction,double,double,double,GoalType,int,boolean,int,double,double,double,int,RealPointValuePair)')": [
                        378
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'doTest(MultivariateFunction,double,double,double,GoalType,int,boolean,int,double,double,double,int,RealPointValuePair)')": [
                        378
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizerTest', 'doTest(MultivariateFunction,double,double,GoalType,double,double)')": [
                        134
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizerTest', 'doTest(MultivariateFunction,double,double,GoalType,double,double)')": [
                        134
                    ]
                }
            }
        }
    },
    "5fef93ec7dc49901eb45edd69b3cba563c02b49d": {
        "authored_data": "2011 Dec 09 12:35",
        "commit.message": "MATH-707\nClass name change:\n  \"BaseMultivariateRealOptimizer\" -> \"BaseMultivariateOptimizer\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1212373 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "86dcb3c6cea54d5375a3f6df20a67c26e09cf964",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/BaseMultivariateMultiStartOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#BaseMultivariateMultiStartOptimizer', None)": [
                        44,
                        46,
                        70
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#BaseMultivariateMultiStartOptimizer', None)": [
                        44,
                        46,
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultivariateSimpleBoundsOptimizer.java": {
                "old": {
                    "(None, None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/MultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateOptimizer.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractMultivariateOptimizer', None)": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractMultivariateOptimizer', None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractMultivariateSimpleBoundsOptimizer.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractMultivariateSimpleBoundsOptimizer', None)": [
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractMultivariateSimpleBoundsOptimizer', None)": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/MultivariateFunctionMappingAdapter.java": {
                "old": {
                    "(None, None)": [
                        57
                    ]
                },
                "new": {
                    "(None, None)": [
                        57
                    ]
                }
            }
        }
    },
    "86dcb3c6cea54d5375a3f6df20a67c26e09cf964": {
        "authored_data": "2011 Dec 09 12:28",
        "commit.message": "MATH-707\nClass name change:\n  \"BaseAbstractVectorialOptimizer\" -> \"BaseAbstractMultivariateVectorOptimizer\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1212371 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "497d025e1e0478be7056c4eb2149fd815dbf9fad",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        52
                    ]
                }
            }
        }
    },
    "497d025e1e0478be7056c4eb2149fd815dbf9fad": {
        "authored_data": "2011 Dec 09 12:22",
        "commit.message": "MATH-707\nClass name change:\n  \"MultiStartDifferentiableMultivariateVectorialOptimizer\" -> \"DifferentiableMultivariateVectorMultiStartOptimizer\"\n  \"DifferentiableMultivariateVectorialOptimizer\" -> \"DifferentiableMultivariateVectorOptimizer\"\n  \"BaseMultiStartMultivariateVectorialOptimizer\" -> \"BaseMultivariateVectorMultiStartOptimizer\"\n  \"BaseMultivariateVectorialOptimizer\" -> \"BaseMultivariateVectorOptimizer\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1212361 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "bb322e8ffb16e5b681ec5232878896536d464be2",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/MultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/VectorialConvergenceChecker.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', None)": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitter', None)": [
                        44,
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitter', None)": [
                        44,
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitter', None)": [
                        67
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitter', None)": [
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.fitting#HarmonicFitter', None)": [
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.fitting#HarmonicFitter', None)": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/PolynomialFitter.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.fitting#PolynomialFitter', None)": [
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.fitting#PolynomialFitter', None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/package-info.java": {
                "old": {
                    "(None, None)": [
                        45,
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        45,
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/fitting/PolynomialFitterTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization.fitting#PolynomialFitterTest', 'testRedundantUnsolvable')": [
                        92
                    ],
                    "('org.apache.commons.math.optimization.fitting#PolynomialFitterTest', 'checkUnsolvableProblem(DifferentiableMultivariateVectorialOptimizer,boolean)')": [
                        97
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization.fitting#PolynomialFitterTest', 'testRedundantUnsolvable')": [
                        92
                    ],
                    "('org.apache.commons.math.optimization.fitting#PolynomialFitterTest', 'checkUnsolvableProblem(DifferentiableMultivariateVectorOptimizer,boolean)')": [
                        97
                    ]
                }
            }
        }
    }
}