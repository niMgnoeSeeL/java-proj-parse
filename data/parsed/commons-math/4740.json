{
    "f6fd0430728b75fce8afc3d369c49a57ac84015a": {
        "authored_data": "2010 Jun 28 12:01",
        "commit.message": "MATH-361.\nAdded a check to avoid triggering a \"NullPointerException\" if the argument\nlist is \"null\".\nAdded unit tests.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@958551 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "4102ba5dfb2bd58d49c4a60687c65bd2919af597",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java": {
                "old": {
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', 'flatten(Object)')": [
                        75,
                        76,
                        77,
                        78,
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', 'flatten(Object)')": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ]
                }
            }
        }
    },
    "4102ba5dfb2bd58d49c4a60687c65bd2919af597": {
        "authored_data": "2010 Jun 25 13:00",
        "commit.message": "MATH-361\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@957930 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "66df76d89ae9a7d5059d7a06ebbdfa199134ab46",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/DimensionMismatchException.java": {
                "old": {
                    "('org.apache.commons.math.exception#DimensionMismatchException', None)": [
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        37,
                        38,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        49,
                        53,
                        54,
                        55,
                        56
                    ],
                    "('org.apache.commons.math.exception#DimensionMismatchException', 'getDimension1')": [
                        51,
                        52
                    ],
                    "('org.apache.commons.math.exception#DimensionMismatchException', 'getDimension2')": [
                        57,
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#DimensionMismatchException', None)": [
                        27,
                        28,
                        29,
                        34,
                        35,
                        37,
                        38,
                        39,
                        40,
                        44
                    ],
                    "('org.apache.commons.math.exception#DimensionMismatchException', 'getDimension')": [
                        46,
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27
                    ],
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', None)": [
                        44,
                        47,
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        26,
                        27,
                        28,
                        29,
                        83
                    ],
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', None)": [
                        46,
                        49,
                        51,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', 'flatten(Object)')": [
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MessageFactory.java": {
                "old": {
                    "('org.apache.commons.math.exception#MessageFactory', 'buildMessage(Locale,Localizable,Object)')": [
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MessageFactory', 'buildMessage(Locale,Localizable,Object)')": [
                        47,
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/OutOfRangeException.java": {
                "old": {
                    "('org.apache.commons.math.exception#OutOfRangeException', None)": [
                        27,
                        32,
                        33,
                        38,
                        42,
                        45,
                        46,
                        47,
                        50,
                        51,
                        52,
                        53,
                        54
                    ],
                    "('org.apache.commons.math.exception#OutOfRangeException', 'getRequested')": [
                        55,
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#OutOfRangeException', None)": [
                        27,
                        36,
                        40,
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/LocalizedFormats.java": {
                "old": {
                    "(None, None)": [
                        83,
                        225
                    ]
                },
                "new": {
                    "(None, None)": [
                        83,
                        167,
                        168,
                        227
                    ]
                }
            }
        }
    },
    "434de1dd39f9ff05cb0770fdf4b2fa5d81674597": {
        "authored_data": "2010 Jun 22 15:05",
        "commit.message": "MATH-378\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@956914 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "3f15fc7c1a583f6201bb11b4f70e403711e5411c",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolator', 'interpolate(double,double)')": [
                        74
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolator', 'interpolate(double,double)')": [
                        74
                    ]
                }
            }
        }
    },
    "f73730ec17a83b6d6c5e0befa9b0ae2991543b0f": {
        "authored_data": "2010 Jun 17 19:07",
        "commit.message": "replaced forgotten calls to deprecated exception constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@955710 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "ed1647b61af0a6d679ffebc0ac69a51be61e337f",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegrator', None)": [
                        148,
                        149
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegrator', None)": [
                        149
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java": {
                "old": {
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', 'verifyInterval(double,double)')": [
                        162
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', 'verifyInterval(double,double)')": [
                        162
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java": {
                "old": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeForm', 'computeCoefficients')": [
                        259,
                        260
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeForm', 'computeCoefficients')": [
                        259,
                        260,
                        261
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', 'verifyInterval(double,double)')": [
                        211
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', 'verifyInterval(double,double)')": [
                        211
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/complex/ComplexFormat.java": {
                "old": {
                    "('org.apache.commons.math.complex#ComplexFormat', 'parse(String)')": [
                        259
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#ComplexFormat', 'parse(String)')": [
                        259
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#BetaDistributionImpl', 'density(double)')": [
                        148,
                        154
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.distribution#BetaDistributionImpl', 'density(double)')": [
                        149,
                        155
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java": {
                "old": {
                    "('org.apache.commons.math.fraction#BigFractionFormat', 'parse(String)')": [
                        198
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#BigFractionFormat', 'parse(String)')": [
                        198
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/FractionFormat.java": {
                "old": {
                    "('org.apache.commons.math.fraction#FractionFormat', 'parse(String)')": [
                        209
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#FractionFormat', 'parse(String)')": [
                        209
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/genetics/RandomKeyMutation.java": {
                "old": {
                    "('org.apache.commons.math.genetics#RandomKeyMutation', 'mutate(Chromosome)')": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.genetics#RandomKeyMutation', 'mutate(Chromosome)')": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/Vector3DFormat.java": {
                "old": {
                    "('org.apache.commons.math.geometry#Vector3DFormat', 'parse(String)')": [
                        263
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry#Vector3DFormat', 'parse(String)')": [
                        263
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#BlockFieldMatrix', None)": [
                        174
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BlockFieldMatrix', None)": [
                        174
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealVectorFormat', 'parse(String)')": [
                        268
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#RealVectorFormat', 'parse(String)')": [
                        268
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', None)": [
                        223,
                        224
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', None)": [
                        223
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/ValueServer.java": {
                "old": {
                    "('org.apache.commons.math.random#ValueServer', 'getNext')": [
                        123,
                        124
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#ValueServer', 'getNext')": [
                        123
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#AbstractUnivariateStatistic', 'test(double,double,int,int)')": [
                        143,
                        148,
                        155,
                        159,
                        163,
                        172
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#AbstractUnivariateStatistic', 'test(double,double,int,int)')": [
                        143,
                        148,
                        155,
                        159,
                        163,
                        172
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'setPercentileImpl(UnivariateStatistic)')": [
                        572,
                        573
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'setPercentileImpl(UnivariateStatistic)')": [
                        572,
                        573
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java": {
                "old": {
                    "('org.apache.commons.math.transform#FastFourierTransformer', None)": [
                        52,
                        53,
                        54,
                        55,
                        886,
                        908
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'verifyInterval(double,double)')": [
                        531
                    ]
                },
                "new": {
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'verifyInterval(double,double)')": [
                        527
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', None)": [
                        882,
                        904
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/LocalizedFormats.java": {
                "old": {
                    "(None, None)": [
                        206
                    ]
                },
                "new": {
                    "(None, None)": [
                        46,
                        55,
                        56,
                        141,
                        210,
                        234,
                        271
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', 'normalizeArray(double,double)')": [
                        1252,
                        1253
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'roundUnscaled(double,double,int)')": [
                        1415,
                        1416
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtils', 'normalizeArray(double,double)')": [
                        1252
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'roundUnscaled(double,double,int)')": [
                        1414
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'checkContractExpand(float,float)')": [
                        349,
                        350,
                        351,
                        357,
                        358,
                        359
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'checkContractExpand(float,float)')": [
                        349,
                        355
                    ]
                }
            }
        }
    },
    "ed1647b61af0a6d679ffebc0ac69a51be61e337f": {
        "authored_data": "2010 Jun 17 18:15",
        "commit.message": "added missing @since and @deprecated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@955693 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "1ede487865dda276c06eb6ef94931c1ff37996e4",
        "changes": {
            "src/main/java/org/apache/commons/math/MathException.java": {
                "old": {
                    "('org.apache.commons.math#MathException', None)": [
                        124
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MathException', None)": [
                        81,
                        125
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/MathRuntimeException.java": {
                "old": {
                    "('org.apache.commons.math#MathRuntimeException', None)": [
                        220,
                        262,
                        304,
                        362,
                        417,
                        459,
                        501,
                        543,
                        587
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MathRuntimeException', None)": [
                        220,
                        221,
                        222,
                        264,
                        265,
                        266,
                        308,
                        309,
                        310,
                        322,
                        369,
                        370,
                        371,
                        426,
                        427,
                        428,
                        470,
                        471,
                        472,
                        514,
                        515,
                        516,
                        558,
                        559,
                        560,
                        604,
                        605,
                        606
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/estimation/EstimationException.java": {
                "new": {
                    "('org.apache.commons.math.estimation#EstimationException', None)": [
                        55
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/DerivativeException.java": {
                "new": {
                    "('org.apache.commons.math.ode#DerivativeException', None)": [
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/IntegratorException.java": {
                "new": {
                    "('org.apache.commons.math.ode#IntegratorException', None)": [
                        50
                    ]
                }
            }
        }
    },
    "92a9c20dc56dddc8710226d40c079fc13ab5331d": {
        "authored_data": "2010 Jun 16 23:03",
        "commit.message": "changed the localization mechanism for error messages. The new system is based on an enum rather than on duplicated string literals.\nJIRA: MATH-361\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@955423 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "abfacd6d14758ae1e9b1475a7699118bc3e32f0d",
        "changes": {
            "src/main/java/org/apache/commons/math/ConvergenceException.java": {
                "old": {
                    "('org.apache.commons.math#ConvergenceException', None)": [
                        28,
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22
                    ],
                    "('org.apache.commons.math#ConvergenceException', None)": [
                        32,
                        38,
                        47,
                        49,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        80,
                        82,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/DimensionMismatchException.java": {
                "old": {
                    "('org.apache.commons.math#DimensionMismatchException', None)": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19
                    ],
                    "('org.apache.commons.math#DimensionMismatchException', None)": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/DuplicateSampleAbscissaException.java": {
                "old": {
                    "('org.apache.commons.math#DuplicateSampleAbscissaException', None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19
                    ],
                    "('org.apache.commons.math#DuplicateSampleAbscissaException', None)": [
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/FunctionEvaluationException.java": {
                "old": {
                    "('org.apache.commons.math#FunctionEvaluationException', None)": [
                        32,
                        33,
                        34,
                        35,
                        36,
                        48,
                        60
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ],
                    "('org.apache.commons.math#FunctionEvaluationException', None)": [
                        35,
                        47,
                        59,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/MathConfigurationException.java": {
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ],
                    "('org.apache.commons.math#MathConfigurationException', None)": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/MathException.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('org.apache.commons.math#MathException', None)": [
                        39,
                        44,
                        56,
                        57,
                        66,
                        81,
                        82,
                        94,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        124,
                        125,
                        126,
                        131
                    ],
                    "('org.apache.commons.math#MathException', 'translate(String,Locale)')": [
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123
                    ],
                    "('org.apache.commons.math#MathException', 'getMessage(Locale)')": [
                        153
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26
                    ],
                    "('org.apache.commons.math#MathException', None)": [
                        41,
                        46,
                        58,
                        59,
                        68,
                        69,
                        70,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        96,
                        97,
                        109,
                        110,
                        111,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        136,
                        137,
                        138,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.math#MathException', 'getPattern')": [
                        140
                    ],
                    "('org.apache.commons.math#MathException', 'getLocalizablePattern')": [
                        148
                    ],
                    "('org.apache.commons.math#MathException', 'getMessage(Locale)')": [
                        169,
                        170,
                        171,
                        172
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/MathRuntimeException.java": {
                "old": {
                    "(None, None)": [
                        27,
                        29
                    ],
                    "('org.apache.commons.math#MathRuntimeException', None)": [
                        40,
                        45,
                        58,
                        73,
                        74,
                        85,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        116,
                        117,
                        118,
                        119,
                        125,
                        133,
                        134
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'translate(String,Locale)')": [
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'buildMessage(Locale,String,Object)')": [
                        126,
                        128
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'getPattern')": [
                        135
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'getMessage(Locale)')": [
                        154
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createArithmeticException(String,Object)')": [
                        204
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createArrayIndexOutOfBoundsException(String,Object)')": [
                        233
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createEOFException(String,Object)')": [
                        262
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createIllegalArgumentException(String,Object)')": [
                        308
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createIllegalStateException(String,Object)')": [
                        350
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createConcurrentModificationException(String,Object)')": [
                        379
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createNoSuchElementException(String,Object)')": [
                        408
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createNullPointerException(String,Object)')": [
                        437
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createParseException(int,String,Object)')": [
                        469
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createInternalError(Throwable)')": [
                        492,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math#MathRuntimeException', None)": [
                        42,
                        47,
                        60,
                        61,
                        62,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        89,
                        90,
                        101,
                        102,
                        103,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        132,
                        133,
                        140,
                        141,
                        142,
                        143,
                        144,
                        147,
                        148,
                        149,
                        151,
                        152,
                        153,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        592,
                        593,
                        594,
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        603
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'buildMessage(Locale,Localizable,Object)')": [
                        134,
                        136
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'getPattern')": [
                        145,
                        146
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'getLocalizablePattern')": [
                        154
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'getMessage(Locale)')": [
                        173,
                        174,
                        175,
                        176
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createArithmeticException(String,Object)')": [
                        223
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createArithmeticException(Localizable,Object)')": [
                        234,
                        235,
                        239
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createArrayIndexOutOfBoundsException(String,Object)')": [
                        265
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createArrayIndexOutOfBoundsException(Localizable,Object)')": [
                        276,
                        277,
                        281
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createEOFException(String,Object)')": [
                        307
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createEOFException(Localizable,Object)')": [
                        317,
                        318,
                        322
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createIllegalArgumentException(String,Object)')": [
                        365
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createIllegalArgumentException(Localizable,Object)')": [
                        376,
                        377,
                        381
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createIllegalStateException(String,Object)')": [
                        420
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createIllegalStateException(Localizable,Object)')": [
                        431,
                        432,
                        436
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createConcurrentModificationException(String,Object)')": [
                        462
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createConcurrentModificationException(Localizable,Object)')": [
                        473,
                        474,
                        478
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createNoSuchElementException(String,Object)')": [
                        504
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createNoSuchElementException(Localizable,Object)')": [
                        515,
                        516,
                        520
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createNullPointerException(String,Object)')": [
                        546
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createNullPointerException(Localizable,Object)')": [
                        557,
                        558,
                        562
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createParseException(int,String,Object)')": [
                        591
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createParseException(int,Localizable,Object)')": [
                        604,
                        605,
                        606,
                        610
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'createInternalError(Throwable)')": [
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/MaxEvaluationsExceededException.java": {
                "old": {
                    "('org.apache.commons.math#MaxEvaluationsExceededException', None)": [
                        38,
                        39,
                        43,
                        55
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math#MaxEvaluationsExceededException', None)": [
                        41,
                        45,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        72
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/MaxIterationsExceededException.java": {
                "old": {
                    "('org.apache.commons.math#MaxIterationsExceededException', None)": [
                        38,
                        39,
                        43,
                        55
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math#MaxIterationsExceededException', None)": [
                        41,
                        45,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        72
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.integration#RombergIntegrator', 'verifyIterationCount')": [
                        116
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis.integration#RombergIntegrator', 'verifyIterationCount')": [
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.integration#SimpsonIntegrator', 'verifyIterationCount')": [
                        107
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis.integration#SimpsonIntegrator', 'verifyIterationCount')": [
                        108
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegrator', 'verifyIterationCount')": [
                        138
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegrator', 'verifyIterationCount')": [
                        139
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java": {
                "old": {
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', None)": [
                        69
                    ],
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', 'getResult')": [
                        111
                    ],
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', 'verifyIterationCount')": [
                        174
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', None)": [
                        70
                    ],
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', 'getResult')": [
                        112
                    ],
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', 'verifyIterationCount')": [
                        175
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolatingFunction', None)": [
                        101
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolatingFunction', 'value(double,double)')": [
                        160,
                        161,
                        165,
                        166
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolatingFunction', 'partialDerivative(int,double,double)')": [
                        233,
                        238
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineFunction', 'value(double,double)')": [
                        376,
                        380
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolatingFunction', None)": [
                        102
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolatingFunction', 'value(double,double)')": [
                        161,
                        162,
                        163,
                        167,
                        168,
                        169
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolatingFunction', 'partialDerivative(int,double,double)')": [
                        236,
                        241
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineFunction', 'value(double,double)')": [
                        379,
                        383
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolator', 'interpolate(double,double,double)')": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolator', 'interpolate(double,double,double)')": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#LoessInterpolator', None)": [
                        148,
                        153,
                        154,
                        155
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LoessInterpolator', 'smooth(double,double,double)')": [
                        201,
                        202,
                        203,
                        204,
                        205,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LoessInterpolator', 'smooth(double,double)')": [
                        368,
                        369,
                        370,
                        371,
                        372
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LoessInterpolator', 'checkAllFiniteReal(double,String)')": [
                        445
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LoessInterpolator', 'checkStrictlyIncreasing(double)')": [
                        467,
                        468,
                        469,
                        470,
                        471
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LoessInterpolator', None)": [
                        150,
                        155
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LoessInterpolator', 'smooth(double,double,double)')": [
                        201,
                        202,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        228,
                        229
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LoessInterpolator', 'smooth(double,double)')": [
                        361,
                        362
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LoessInterpolator', 'checkAllFiniteReal(double,Localizable)')": [
                        435
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LoessInterpolator', 'checkStrictlyIncreasing(double)')": [
                        457,
                        458
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolatingFunction', None)": [
                        153
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolatingFunction', None)": [
                        154
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolator', 'setBrightnessExponent(int)')": [
                        103
                    ],
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolator', 'setMicropshereElements(int)')": [
                        117
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolator', 'setBrightnessExponent(int)')": [
                        104
                    ],
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolator', 'setMicropshereElements(int)')": [
                        118
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingBicubicSplineInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#SmoothingBicubicSplineInterpolator', 'interpolate(double,double,double)')": [
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SmoothingBicubicSplineInterpolator', 'interpolate(double,double,double)')": [
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#SmoothingPolynomialBicubicSplineInterpolator', 'interpolate(double,double,double)')": [
                        74
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SmoothingPolynomialBicubicSplineInterpolator', 'interpolate(double,double,double)')": [
                        75
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolator', 'interpolate(double,double)')": [
                        61,
                        66,
                        75
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolator', 'interpolate(double,double)')": [
                        62,
                        67,
                        76
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolatingFunction', None)": [
                        159
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolatingFunction', 'value(double,double,double)')": [
                        310,
                        311,
                        315,
                        316,
                        320,
                        321
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineFunction', 'value(double,double,double)')": [
                        452,
                        456,
                        460
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolatingFunction', None)": [
                        160
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolatingFunction', 'value(double,double,double)')": [
                        311,
                        312,
                        313,
                        317,
                        318,
                        319,
                        323,
                        324,
                        325
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineFunction', 'value(double,double,double)')": [
                        456,
                        460,
                        464
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolator', 'interpolate(double,double,double,double)')": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolator', 'interpolate(double,double,double,double)')": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java": {
                "old": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', None)": [
                        36,
                        37,
                        38,
                        39,
                        69
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', 'evaluate(double,double)')": [
                        129
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', 'differentiate(double)')": [
                        238
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', None)": [
                        66
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', 'evaluate(double,double)')": [
                        126
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', 'differentiate(double)')": [
                        235
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java": {
                "old": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeForm', 'value(double)')": [
                        93
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeForm', 'verifyInterpolationArray(double,double)')": [
                        300,
                        305
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeForm', 'value(double)')": [
                        94
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeForm', 'verifyInterpolationArray(double,double)')": [
                        301,
                        306
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java": {
                "old": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonForm', 'verifyInputArray(double,double)')": [
                        212,
                        216
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonForm', 'verifyInputArray(double,double)')": [
                        213,
                        217
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java": {
                "old": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialSplineFunction', None)": [
                        100,
                        105,
                        110
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialSplineFunction', None)": [
                        101,
                        106,
                        111
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', None)": [
                        45,
                        46,
                        47,
                        48,
                        49
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        137,
                        173
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        220
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        133,
                        169
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        216
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        72
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        175
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solveAll(Complex,Complex)')": [
                        268
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(Complex,Complex)')": [
                        316
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', None)": [
                        65
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        168
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solveAll(Complex,Complex)')": [
                        261
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(Complex,Complex)')": [
                        309
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        132
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        133
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        130,
                        131,
                        132
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        131
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', None)": [
                        76
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', 'checkResultComputed')": [
                        103
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', 'verifySequence(double,double,double)')": [
                        227
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', 'verifyBracketing(double,double,UnivariateRealFunction)')": [
                        250,
                        251
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', None)": [
                        77
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', 'checkResultComputed')": [
                        104
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', 'verifySequence(double,double,double)')": [
                        228
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', 'verifyBracketing(double,double,UnivariateRealFunction)')": [
                        251
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', None)": [
                        30,
                        31,
                        32,
                        33
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'bracket(UnivariateRealFunction,double,double,double,int)')": [
                        176,
                        180,
                        184,
                        205,
                        206,
                        207
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'setup(UnivariateRealFunction)')": [
                        233
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'bracket(UnivariateRealFunction,double,double,double,int)')": [
                        173,
                        177,
                        181,
                        202
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'setup(UnivariateRealFunction)')": [
                        228
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/complex/Complex.java": {
                "old": {
                    "('org.apache.commons.math.complex#Complex', 'nthRoot(int)')": [
                        944
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.complex#Complex', 'nthRoot(int)')": [
                        945
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/complex/ComplexFormat.java": {
                "old": {
                    "('org.apache.commons.math.complex#ComplexFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        195
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'setImaginaryCharacter(String)')": [
                        352
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'setImaginaryFormat(NumberFormat)')": [
                        366
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'setRealFormat(NumberFormat)')": [
                        380
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        196
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'setImaginaryCharacter(String)')": [
                        353
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'setImaginaryFormat(NumberFormat)')": [
                        367
                    ],
                    "('org.apache.commons.math.complex#ComplexFormat', 'setRealFormat(NumberFormat)')": [
                        381
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/complex/ComplexUtils.java": {
                "old": {
                    "('org.apache.commons.math.complex#ComplexUtils', 'polar2Complex(double,double)')": [
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.complex#ComplexUtils', 'polar2Complex(double,double)')": [
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'density(double)')": [
                        72
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        90,
                        102,
                        106
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'sample(int)')": [
                        179
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'density(double)')": [
                        73
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        91,
                        103,
                        107
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'sample(int)')": [
                        180
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractDistribution', 'cumulativeProbability(double,double)')": [
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.distribution#AbstractDistribution', 'cumulativeProbability(double,double)')": [
                        64
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', None)": [
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(double,double)')": [
                        98
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(int,int)')": [
                        155
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'inverseCumulativeProbability(double)')": [
                        174
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'sample(int)')": [
                        253
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'checkedCumulativeProbability(int)')": [
                        277,
                        281
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', None)": [
                        38
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(double,double)')": [
                        91
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(int,int)')": [
                        148
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'inverseCumulativeProbability(double)')": [
                        167
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'sample(int)')": [
                        246
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'checkedCumulativeProbability(int)')": [
                        270,
                        274
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'setNumberOfTrialsInternal(int)')": [
                        95
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'setProbabilityOfSuccessInternal(double)')": [
                        122
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'setNumberOfTrialsInternal(int)')": [
                        96
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'setProbabilityOfSuccessInternal(double)')": [
                        123
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        139
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'setScaleInternal(double)')": [
                        185
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        140
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'setScaleInternal(double)')": [
                        186
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'setMeanInternal(double)')": [
                        86
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        168
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'setMeanInternal(double)')": [
                        87
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        169
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#FDistributionImpl', None)": [
                        41,
                        42,
                        43,
                        44
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'setNumeratorDegreesOfFreedomInternal(double)')": [
                        225
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'setDenominatorDegreesOfFreedomInternal(double)')": [
                        259
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'setNumeratorDegreesOfFreedomInternal(double)')": [
                        222
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'setDenominatorDegreesOfFreedomInternal(double)')": [
                        256
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'setAlphaInternal(double)')": [
                        148
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'setBetaInternal(double)')": [
                        181
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'setAlphaInternal(double)')": [
                        149
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'setBetaInternal(double)')": [
                        182
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', None)": [
                        59,
                        65
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setNumberOfSuccessesInternal(int)')": [
                        252
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setPopulationSizeInternal(int)')": [
                        277
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setSampleSizeInternal(int)')": [
                        302
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', None)": [
                        60,
                        66
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setNumberOfSuccessesInternal(int)')": [
                        253
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setPopulationSizeInternal(int)')": [
                        278
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setSampleSizeInternal(int)')": [
                        303
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'setStandardDeviationInternal(double)')": [
                        141
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'setStandardDeviationInternal(double)')": [
                        142
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'setNumberOfSuccessesInternal(int)')": [
                        91
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'setProbabilityOfSuccessInternal(double)')": [
                        117
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'setNumberOfSuccessesInternal(int)')": [
                        92
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'setProbabilityOfSuccessInternal(double)')": [
                        118
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'setNormalAndMeanInternal(NormalDistribution,double)')": [
                        171
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'setNormalAndMeanInternal(NormalDistribution,double)')": [
                        172
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#TDistributionImpl', 'setDegreesOfFreedomInternal(double)')": [
                        90
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.distribution#TDistributionImpl', 'setDegreesOfFreedomInternal(double)')": [
                        91
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        152
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'setShapeInternal(double)')": [
                        179
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'setScaleInternal(double)')": [
                        201
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        153
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'setShapeInternal(double)')": [
                        180
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'setScaleInternal(double)')": [
                        202
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'setNumberOfElementsInternal(int)')": [
                        90,
                        91
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'setExponentInternal(double)')": [
                        130
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'setNumberOfElementsInternal(int)')": [
                        91
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'setExponentInternal(double)')": [
                        130
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java": {
                "old": {
                    "('org.apache.commons.math.estimation#AbstractEstimator', 'updateResidualsAndCost')": [
                        153
                    ],
                    "('org.apache.commons.math.estimation#AbstractEstimator', 'getCovariances(EstimationProblem)')": [
                        240
                    ],
                    "('org.apache.commons.math.estimation#AbstractEstimator', 'guessParametersErrors(EstimationProblem)')": [
                        260
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.estimation#AbstractEstimator', 'updateResidualsAndCost')": [
                        154
                    ],
                    "('org.apache.commons.math.estimation#AbstractEstimator', 'getCovariances(EstimationProblem)')": [
                        241
                    ],
                    "('org.apache.commons.math.estimation#AbstractEstimator', 'guessParametersErrors(EstimationProblem)')": [
                        261
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/estimation/EstimationException.java": {
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.estimation#EstimationException', None)": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java": {
                "old": {
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', 'estimate(EstimationProblem)')": [
                        216
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', 'estimate(EstimationProblem)')": [
                        217
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java": {
                "old": {
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'qrDecomposition')": [
                        824
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'qrDecomposition')": [
                        826
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/AbstractFormat.java": {
                "old": {
                    "('org.apache.commons.math.fraction#AbstractFormat', 'setDenominatorFormat(NumberFormat)')": [
                        122
                    ],
                    "('org.apache.commons.math.fraction#AbstractFormat', 'setNumeratorFormat(NumberFormat)')": [
                        136
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.fraction#AbstractFormat', 'setDenominatorFormat(NumberFormat)')": [
                        123
                    ],
                    "('org.apache.commons.math.fraction#AbstractFormat', 'setNumeratorFormat(NumberFormat)')": [
                        137
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/BigFraction.java": {
                "old": {
                    "('org.apache.commons.math.fraction#BigFraction', None)": [
                        83,
                        84,
                        85,
                        86,
                        126,
                        129,
                        132,
                        182,
                        185
                    ],
                    "('org.apache.commons.math.fraction#BigFraction', 'divide(BigInteger)')": [
                        622
                    ],
                    "('org.apache.commons.math.fraction#BigFraction', 'divide(BigFraction)')": [
                        675
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.fraction#BigFraction', None)": [
                        123,
                        126,
                        129,
                        179,
                        182
                    ],
                    "('org.apache.commons.math.fraction#BigFraction', 'divide(BigInteger)')": [
                        619
                    ],
                    "('org.apache.commons.math.fraction#BigFraction', 'divide(BigFraction)')": [
                        672
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/BigFractionFormat.java": {
                "old": {
                    "('org.apache.commons.math.fraction#BigFractionFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        177
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.fraction#BigFractionFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        178
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/Fraction.java": {
                "old": {
                    "('org.apache.commons.math.fraction#Fraction', None)": [
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        268,
                        273
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'negate')": [
                        416
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'addSub(Fraction,boolean)')": [
                        487,
                        524
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'multiply(Fraction)')": [
                        544
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'divide(Fraction)')": [
                        579,
                        583
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'getReducedFraction(int,int)')": [
                        612,
                        625
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.fraction#Fraction', None)": [
                        257,
                        262
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'negate')": [
                        405
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'addSub(Fraction,boolean)')": [
                        476,
                        513
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'multiply(Fraction)')": [
                        533
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'divide(Fraction)')": [
                        568,
                        572
                    ],
                    "('org.apache.commons.math.fraction#Fraction', 'getReducedFraction(int,int)')": [
                        601,
                        614
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/FractionConversionException.java": {
                "old": {
                    "('org.apache.commons.math.fraction#FractionConversionException', None)": [
                        41,
                        52
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.fraction#FractionConversionException', None)": [
                        42,
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/FractionFormat.java": {
                "old": {
                    "('org.apache.commons.math.fraction#FractionFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        183,
                        188
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math.fraction#FractionFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        184,
                        189
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/ProperBigFractionFormat.java": {
                "old": {
                    "('org.apache.commons.math.fraction#ProperBigFractionFormat', 'setWholeFormat(NumberFormat)')": [
                        236
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.fraction#ProperBigFractionFormat', 'setWholeFormat(NumberFormat)')": [
                        237
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/ProperFractionFormat.java": {
                "old": {
                    "('org.apache.commons.math.fraction#ProperFractionFormat', 'setWholeFormat(NumberFormat)')": [
                        229
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.fraction#ProperFractionFormat', 'setWholeFormat(NumberFormat)')": [
                        230
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java": {
                "old": {
                    "('org.apache.commons.math.geometry#CardanEulerSingularityException', None)": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.geometry#CardanEulerSingularityException', None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java": {
                "new": {
                    "(None, None)": [
                        21,
                        58,
                        59
                    ],
                    "('org.apache.commons.math.geometry#NotARotationMatrixException', None)": [
                        42,
                        44,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/Rotation.java": {
                "old": {
                    "('org.apache.commons.math.geometry#Rotation', None)": [
                        175,
                        225,
                        238,
                        319,
                        450
                    ],
                    "('org.apache.commons.math.geometry#Rotation', 'orthogonalizeMatrix(double,double)')": [
                        1038
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.geometry#Rotation', None)": [
                        176,
                        226,
                        239,
                        320,
                        451
                    ],
                    "('org.apache.commons.math.geometry#Rotation', 'orthogonalizeMatrix(double,double)')": [
                        1039
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/Vector3D.java": {
                "old": {
                    "('org.apache.commons.math.geometry#Vector3D', 'normalize')": [
                        286
                    ],
                    "('org.apache.commons.math.geometry#Vector3D', 'orthogonal')": [
                        310
                    ],
                    "('org.apache.commons.math.geometry#Vector3D', 'angle(Vector3D,Vector3D)')": [
                        340
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.geometry#Vector3D', 'normalize')": [
                        287
                    ],
                    "('org.apache.commons.math.geometry#Vector3D', 'orthogonal')": [
                        311
                    ],
                    "('org.apache.commons.math.geometry#Vector3D', 'angle(Vector3D,Vector3D)')": [
                        341
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/Vector3DFormat.java": {
                "old": {
                    "('org.apache.commons.math.geometry#Vector3DFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        244
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math.geometry#Vector3DFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        245
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', None)": [
                        67,
                        69,
                        70,
                        71,
                        72,
                        74,
                        75
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'extractField(T)')": [
                        90,
                        93,
                        108
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'copySubMatrix(int,int,int,int,T)')": [
                        341
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'copySubMatrix(int,int,T)')": [
                        383
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'setSubMatrix(T,int,int)')": [
                        404,
                        409,
                        415
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'setRowMatrix(int,FieldMatrix)')": [
                        457
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'setColumnMatrix(int,FieldMatrix)')": [
                        490
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'setRowVector(int,FieldVector)')": [
                        513
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'setColumnVector(int,FieldVector)')": [
                        536
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'setRow(int,T)')": [
                        568
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'setColumn(int,T)')": [
                        600
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'operate(T)')": [
                        679
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'operate(FieldVector)')": [
                        706
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'preMultiply(T)')": [
                        731
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'preMultiply(FieldVector)')": [
                        759
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'checkSubMatrixIndex(int,int,int,int)')": [
                        1057,
                        1064
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'checkSubMatrixIndex(int,int)')": [
                        1082,
                        1083,
                        1084
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'checkAdditionCompatible(FieldMatrix)')": [
                        1104
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'checkSubtractionCompatible(FieldMatrix)')": [
                        1119
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'checkMultiplicationCompatible(FieldMatrix)')": [
                        1133
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', None)": [
                        68,
                        70,
                        71,
                        72,
                        74
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'extractField(T)')": [
                        89,
                        92,
                        107
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'copySubMatrix(int,int,int,int,T)')": [
                        340
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'copySubMatrix(int,int,T)')": [
                        382
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'setSubMatrix(T,int,int)')": [
                        403,
                        408,
                        414
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'setRowMatrix(int,FieldMatrix)')": [
                        456
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'setColumnMatrix(int,FieldMatrix)')": [
                        489
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'setRowVector(int,FieldVector)')": [
                        512
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'setColumnVector(int,FieldVector)')": [
                        535
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'setRow(int,T)')": [
                        567
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'setColumn(int,T)')": [
                        599
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'operate(T)')": [
                        678
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'operate(FieldVector)')": [
                        705
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'preMultiply(T)')": [
                        730
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'preMultiply(FieldVector)')": [
                        758
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'checkSubMatrixIndex(int,int,int,int)')": [
                        1056,
                        1063
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'checkSubMatrixIndex(int,int)')": [
                        1081,
                        1082,
                        1083
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'checkAdditionCompatible(FieldMatrix)')": [
                        1103
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'checkSubtractionCompatible(FieldMatrix)')": [
                        1118
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'checkMultiplicationCompatible(FieldMatrix)')": [
                        1132
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractRealMatrix', None)": [
                        56,
                        58,
                        59,
                        63,
                        64
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'copySubMatrix(int,int,int,int,double)')": [
                        314
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'copySubMatrix(int,int,double)')": [
                        356
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setSubMatrix(double,int,int)')": [
                        377,
                        382,
                        388
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setRowMatrix(int,RealMatrix)')": [
                        432
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setColumnMatrix(int,RealMatrix)')": [
                        465
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setRowVector(int,RealVector)')": [
                        488
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setColumnVector(int,RealVector)')": [
                        511
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setRow(int,double)')": [
                        543
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setColumn(int,double)')": [
                        575
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'operate(double)')": [
                        680
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'operate(RealVector)')": [
                        707
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'preMultiply(double)')": [
                        732
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'preMultiply(RealVector)')": [
                        760
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', None)": [
                        57,
                        59,
                        63
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'copySubMatrix(int,int,int,int,double)')": [
                        313
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'copySubMatrix(int,int,double)')": [
                        355
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setSubMatrix(double,int,int)')": [
                        376,
                        381,
                        387
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setRowMatrix(int,RealMatrix)')": [
                        431
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setColumnMatrix(int,RealMatrix)')": [
                        464
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setRowVector(int,RealVector)')": [
                        487
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setColumnVector(int,RealVector)')": [
                        510
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setRow(int,double)')": [
                        542
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'setColumn(int,double)')": [
                        574
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'operate(double)')": [
                        679
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'operate(RealVector)')": [
                        706
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'preMultiply(double)')": [
                        731
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'preMultiply(RealVector)')": [
                        759
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractRealVector', 'checkVectorDimensions(int)')": [
                        59,
                        60
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'checkVectorDimensions(int)')": [
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        135,
                        140,
                        145
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'setSubMatrix(T,int,int)')": [
                        330,
                        334,
                        339,
                        345,
                        351
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'getEntry(int,int)')": [
                        369
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'setEntry(int,int,T)')": [
                        381
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'addToEntry(int,int,T)')": [
                        393
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'multiplyEntry(int,int,T)')": [
                        405
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'operate(T)')": [
                        429
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'preMultiply(T)')": [
                        452
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', None)": [
                        116,
                        121,
                        126
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'setSubMatrix(T,int,int)')": [
                        311,
                        315,
                        320,
                        326,
                        332
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'getEntry(int,int)')": [
                        350
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'setEntry(int,int,T)')": [
                        362
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'addToEntry(int,int,T)')": [
                        374
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'multiplyEntry(int,int,T)')": [
                        386
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'operate(T)')": [
                        410
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'preMultiply(T)')": [
                        433
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', None)": [
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        144,
                        149,
                        154
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', 'setSubMatrix(double,int,int)')": [
                        338,
                        342,
                        347,
                        353,
                        359
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', 'getEntry(int,int)')": [
                        377
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', 'setEntry(int,int,double)')": [
                        389
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', 'addToEntry(int,int,double)')": [
                        401
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', 'multiplyEntry(int,int,double)')": [
                        413
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', 'operate(double)')": [
                        437
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', 'preMultiply(double)')": [
                        460
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', None)": [
                        125,
                        130,
                        135
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', 'setSubMatrix(double,int,int)')": [
                        319,
                        323,
                        328,
                        334,
                        340
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', 'getEntry(int,int)')": [
                        358
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', 'setEntry(int,int,double)')": [
                        370
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', 'addToEntry(int,int,double)')": [
                        382
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', 'multiplyEntry(int,int,double)')": [
                        394
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', 'operate(double)')": [
                        418
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', 'preMultiply(double)')": [
                        441
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayFieldVector', None)": [
                        91,
                        116,
                        129,
                        218
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'checkVectorDimensions(int)')": [
                        718
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', None)": [
                        92,
                        117,
                        130,
                        219
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'checkVectorDimensions(int)')": [
                        719
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/ArrayRealVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayRealVector', None)": [
                        32,
                        33,
                        34,
                        35,
                        106,
                        120,
                        146
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'unitVector')": [
                        913
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'unitize')": [
                        923
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'checkVectorDimensions(int)')": [
                        1138
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', None)": [
                        103,
                        117,
                        143
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'unitVector')": [
                        910
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'unitize')": [
                        920
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'checkVectorDimensions(int)')": [
                        1135
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', None)": [
                        104,
                        106,
                        107,
                        108,
                        109,
                        111,
                        112,
                        159,
                        164,
                        169,
                        192,
                        197,
                        202,
                        222,
                        227,
                        232
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getSubMatrix(int,int,int,int)')": [
                        607,
                        614
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getSubMatrix(int,int)')": [
                        646,
                        647,
                        648
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'setSubMatrix(BigDecimal,int,int)')": [
                        706,
                        711,
                        717,
                        725,
                        730
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getEntry(int,int)')": [
                        884
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'operate(BigDecimal)')": [
                        1030
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'preMultiply(BigDecimal)')": [
                        1072
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'solve(BigDecimal)')": [
                        1102
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'solve(BigMatrix)')": [
                        1147
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', None)": [
                        105,
                        107,
                        108,
                        109,
                        111,
                        158,
                        163,
                        168,
                        191,
                        196,
                        201,
                        221,
                        226,
                        231
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getSubMatrix(int,int,int,int)')": [
                        606,
                        613
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getSubMatrix(int,int)')": [
                        645,
                        646,
                        647
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'setSubMatrix(BigDecimal,int,int)')": [
                        705,
                        710,
                        716,
                        724,
                        729
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getEntry(int,int)')": [
                        883
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'operate(BigDecimal)')": [
                        1029
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'preMultiply(BigDecimal)')": [
                        1071
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'solve(BigDecimal)')": [
                        1101
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'solve(BigMatrix)')": [
                        1146
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'toBlocksLayout(T)')": [
                        221
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'setSubMatrix(T,int,int)')": [
                        812,
                        820
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'setRowMatrix(int,BlockFieldMatrix)')": [
                        920
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'setColumnMatrix(int,BlockFieldMatrix)')": [
                        1009
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'setRow(int,T)')": [
                        1137
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'setColumn(int,T)')": [
                        1188
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'getEntry(int,int)')": [
                        1219
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'setEntry(int,int,T)')": [
                        1236
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'addToEntry(int,int,T)')": [
                        1254
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'multiplyEntry(int,int,T)')": [
                        1272
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'operate(T)')": [
                        1337
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'preMultiply(T)')": [
                        1383
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'toBlocksLayout(T)')": [
                        222
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'setSubMatrix(T,int,int)')": [
                        813,
                        821
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'setRowMatrix(int,BlockFieldMatrix)')": [
                        921
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'setColumnMatrix(int,BlockFieldMatrix)')": [
                        1010
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'setRow(int,T)')": [
                        1138
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'setColumn(int,T)')": [
                        1189
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'getEntry(int,int)')": [
                        1220
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'setEntry(int,int,T)')": [
                        1237
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'addToEntry(int,int,T)')": [
                        1255
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'multiplyEntry(int,int,T)')": [
                        1273
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'operate(T)')": [
                        1338
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'preMultiply(T)')": [
                        1384
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#BlockRealMatrix', None)": [
                        170
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'toBlocksLayout(double)')": [
                        216
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'setSubMatrix(double,int,int)')": [
                        838,
                        846
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'setRowMatrix(int,BlockRealMatrix)')": [
                        946
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'setColumnMatrix(int,BlockRealMatrix)')": [
                        1035
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'setRow(int,double)')": [
                        1163
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'setColumn(int,double)')": [
                        1214
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'getEntry(int,int)')": [
                        1245
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'setEntry(int,int,double)')": [
                        1262
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'addToEntry(int,int,double)')": [
                        1279
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'multiplyEntry(int,int,double)')": [
                        1296
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'operate(double)')": [
                        1361
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'preMultiply(double)')": [
                        1405
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', None)": [
                        171
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'toBlocksLayout(double)')": [
                        217
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'setSubMatrix(double,int,int)')": [
                        839,
                        847
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'setRowMatrix(int,BlockRealMatrix)')": [
                        947
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'setColumnMatrix(int,BlockRealMatrix)')": [
                        1036
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'setRow(int,double)')": [
                        1164
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'setColumn(int,double)')": [
                        1215
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'getEntry(int,int)')": [
                        1246
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'setEntry(int,int,double)')": [
                        1263
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'addToEntry(int,int,double)')": [
                        1280
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'multiplyEntry(int,int,double)')": [
                        1297
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'operate(double)')": [
                        1362
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrix', 'preMultiply(double)')": [
                        1406
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/CholeskyDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#CholeskyDecompositionImpl', None)": [
                        215,
                        254,
                        303
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImpl', None)": [
                        216,
                        255,
                        304
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', None)": [
                        105,
                        294,
                        336,
                        379
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', None)": [
                        106,
                        295,
                        337,
                        380
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#FieldLUDecompositionImpl', None)": [
                        266,
                        312,
                        368
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImpl', None)": [
                        267,
                        313,
                        369
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/InvalidMatrixException.java": {
                "old": {
                    "('org.apache.commons.math.linear#InvalidMatrixException', None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.linear#InvalidMatrixException', None)": [
                        33,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#LUDecompositionImpl', None)": [
                        39,
                        40,
                        41,
                        42,
                        269,
                        313,
                        367
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.linear#LUDecompositionImpl', None)": [
                        266,
                        310,
                        364
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/MatrixIndexException.java": {
                "old": {
                    "('org.apache.commons.math.linear#MatrixIndexException', None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.linear#MatrixIndexException', None)": [
                        32,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/MatrixUtils.java": {
                "old": {
                    "('org.apache.commons.math.linear#MatrixUtils', 'createRowFieldMatrix(T)')": [
                        355
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'createColumnFieldMatrix(T)')": [
                        454
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkSubMatrixIndex(AnyMatrix,int,int,int,int)')": [
                        567,
                        574
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkSubMatrixIndex(AnyMatrix,int,int)')": [
                        595,
                        597
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkAdditionCompatible(AnyMatrix,AnyMatrix)')": [
                        619
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkSubtractionCompatible(AnyMatrix,AnyMatrix)')": [
                        636
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkMultiplicationCompatible(AnyMatrix,AnyMatrix)')": [
                        652
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'createRowFieldMatrix(T)')": [
                        356
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'createColumnFieldMatrix(T)')": [
                        455
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkSubMatrixIndex(AnyMatrix,int,int,int,int)')": [
                        568,
                        575
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkSubMatrixIndex(AnyMatrix,int,int)')": [
                        596,
                        598
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkAdditionCompatible(AnyMatrix,AnyMatrix)')": [
                        620
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkSubtractionCompatible(AnyMatrix,AnyMatrix)')": [
                        637
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkMultiplicationCompatible(AnyMatrix,AnyMatrix)')": [
                        653
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/MatrixVisitorException.java": {
                "new": {
                    "(None, None)": [
                        21,
                        51,
                        52
                    ],
                    "('org.apache.commons.math.linear#MatrixVisitorException', None)": [
                        36,
                        38,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java": {
                "old": {
                    "('org.apache.commons.math.linear#NonSquareMatrixException', None)": [
                        37,
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.linear#NonSquareMatrixException', None)": [
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/NotPositiveDefiniteMatrixException.java": {
                "old": {
                    "('org.apache.commons.math.linear#NotPositiveDefiniteMatrixException', None)": [
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.linear#NotPositiveDefiniteMatrixException', None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/NotSymmetricMatrixException.java": {
                "old": {
                    "('org.apache.commons.math.linear#NotSymmetricMatrixException', None)": [
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.linear#NotSymmetricMatrixException', None)": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'unitize')": [
                        735
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealVector', 'unitize')": [
                        736
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/QRDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRDecompositionImpl', None)": [
                        293,
                        364
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImpl', None)": [
                        294,
                        365
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealMatrixImpl', None)": [
                        125,
                        129,
                        134
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'setSubMatrix(double,int,int)')": [
                        319,
                        324,
                        329,
                        334,
                        340
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'getEntry(int,int)')": [
                        359
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'setEntry(int,int,double)')": [
                        372
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'addToEntry(int,int,double)')": [
                        385
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'multiplyEntry(int,int,double)')": [
                        398
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'operate(double)')": [
                        423
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'preMultiply(double)')": [
                        447
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', None)": [
                        126,
                        130,
                        135
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'setSubMatrix(double,int,int)')": [
                        320,
                        325,
                        330,
                        335,
                        341
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'getEntry(int,int)')": [
                        360
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'setEntry(int,int,double)')": [
                        373
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'addToEntry(int,int,double)')": [
                        386
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'multiplyEntry(int,int,double)')": [
                        399
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'operate(double)')": [
                        424
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', 'preMultiply(double)')": [
                        448
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealVectorFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        249
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.linear#RealVectorFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        250
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/SingularMatrixException.java": {
                "old": {
                    "('org.apache.commons.math.linear#SingularMatrixException', None)": [
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.linear#SingularMatrixException', None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getCovariance(double)')": [
                        222
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getCovariance(double)')": [
                        223
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/SparseFieldVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseFieldVector', 'checkVectorDimensions(int)')": [
                        568
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', 'checkVectorDimensions(int)')": [
                        569
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        200,
                        201,
                        202,
                        207,
                        208,
                        209,
                        214
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        201,
                        206,
                        211
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java": {
                "old": {
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'append(ContinuousOutputModel)')": [
                        137,
                        143,
                        153
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'append(ContinuousOutputModel)')": [
                        138,
                        144,
                        154
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/DerivativeException.java": {
                "old": {
                    "('org.apache.commons.math.ode#DerivativeException', None)": [
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.ode#DerivativeException', None)": [
                        41,
                        43,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/IntegratorException.java": {
                "old": {
                    "('org.apache.commons.math.ode#IntegratorException', None)": [
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode#IntegratorException', None)": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#MultistepIntegrator', None)": [
                        116
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.ode#MultistepIntegrator', None)": [
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/events/EventException.java": {
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode.events#EventException', None)": [
                        38,
                        40,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java": {
                "old": {
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobians', 'checkDimension(int,Object)')": [
                        351
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobians', 'checkDimension(int,Object)')": [
                        352
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        175,
                        176,
                        177,
                        182,
                        183,
                        184
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'filterStep(double,boolean,boolean)')": [
                        286
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        176,
                        181
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'filterStep(double,boolean,boolean)')": [
                        283
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java": {
                "old": {
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', None)": [
                        116,
                        149
                    ],
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', 'value(double)')": [
                        164
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', None)": [
                        117,
                        150
                    ],
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', 'value(double)')": [
                        165
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizer', 'getOptima')": [
                        120
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizer', 'optimize(DifferentiableMultivariateRealFunction,GoalType,double)')": [
                        218
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizer', 'getOptima')": [
                        121
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizer', 'optimize(DifferentiableMultivariateRealFunction,GoalType,double)')": [
                        219
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizer', 'getOptima')": [
                        124
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        228
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizer', 'getOptima')": [
                        125
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        229
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizer', 'getOptima')": [
                        115
                    ],
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizer', 'optimize(MultivariateRealFunction,GoalType,double)')": [
                        206
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizer', 'getOptima')": [
                        116
                    ],
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizer', 'optimize(MultivariateRealFunction,GoalType,double)')": [
                        207
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiStartUnivariateRealOptimizer', 'getOptima')": [
                        193
                    ],
                    "('org.apache.commons.math.optimization#MultiStartUnivariateRealOptimizer', 'getOptimaValues')": [
                        219
                    ],
                    "('org.apache.commons.math.optimization#MultiStartUnivariateRealOptimizer', 'optimize(UnivariateRealFunction,GoalType,double,double)')": [
                        302
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.optimization#MultiStartUnivariateRealOptimizer', 'getOptima')": [
                        194
                    ],
                    "('org.apache.commons.math.optimization#MultiStartUnivariateRealOptimizer', 'getOptimaValues')": [
                        220
                    ],
                    "('org.apache.commons.math.optimization#MultiStartUnivariateRealOptimizer', 'optimize(UnivariateRealFunction,GoalType,double,double)')": [
                        303
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/OptimizationException.java": {
                "old": {
                    "('org.apache.commons.math.optimization#OptimizationException', None)": [
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.optimization#OptimizationException', None)": [
                        35,
                        42,
                        44,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', None)": [
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96
                    ],
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', 'setStartConfiguration(double)')": [
                        157,
                        181,
                        194,
                        207
                    ],
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', 'buildSimplex(double)')": [
                        369
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', 'setStartConfiguration(double)')": [
                        150,
                        174,
                        187,
                        200
                    ],
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', 'buildSimplex(double)')": [
                        362
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicCoefficientsGuesser.java": {
                "old": {
                    "('org.apache.commons.math.optimization.fitting#HarmonicCoefficientsGuesser', 'guessAOmega')": [
                        241
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.fitting#HarmonicCoefficientsGuesser', 'guessAOmega')": [
                        242
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java": {
                "old": {
                    "('org.apache.commons.math.optimization.fitting#HarmonicFitter', 'fit')": [
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization.fitting#HarmonicFitter', 'fit')": [
                        86
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateJacobian')": [
                        186
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateResidualsAndCost')": [
                        213
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'getCovariances')": [
                        293
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'guessParametersErrors')": [
                        311
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        330
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateJacobian')": [
                        187
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateResidualsAndCost')": [
                        214
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'getCovariances')": [
                        294
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'guessParametersErrors')": [
                        312
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        331
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        119
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        120
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        454,
                        455,
                        456,
                        459,
                        460,
                        461,
                        464,
                        465
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'qrDecomposition')": [
                        818,
                        819
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        455,
                        458,
                        461
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'qrDecomposition')": [
                        814
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'findUpperBound(UnivariateRealFunction,double,double)')": [
                        236
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'findUpperBound(UnivariateRealFunction,double,double)')": [
                        237
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/NoFeasibleSolutionException.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#NoFeasibleSolutionException', None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.linear#NoFeasibleSolutionException', None)": [
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/UnboundedSolutionException.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#UnboundedSolutionException', None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.linear#UnboundedSolutionException', None)": [
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'checkResultComputed')": [
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'checkResultComputed')": [
                        73
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#AbstractRandomGenerator', 'nextInt(int)')": [
                        158
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGenerator', 'nextInt(int)')": [
                        159
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/BitsStreamGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#BitsStreamGenerator', 'nextInt(int)')": [
                        126
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.random#BitsStreamGenerator', 'nextInt(int)')": [
                        127
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/EmpiricalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'load(URL)')": [
                        141
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'getNextValue')": [
                        373,
                        393
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'load(URL)')": [
                        142
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionImpl', 'getNextValue')": [
                        374,
                        394
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextHexString(int)')": [
                        151
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextInt(int,int)')": [
                        197
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextLong(long,long)')": [
                        217
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureHexString(int)')": [
                        247
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureInt(int,int)')": [
                        308
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureLong(long,long)')": [
                        329
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPoisson(double)')": [
                        355
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextGaussian(double,double)')": [
                        459
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextExponential(double)')": [
                        480
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextUniform(double,double)')": [
                        509
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPermutation(int,int)')": [
                        833,
                        837
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSample(Collection,int)')": [
                        870,
                        874
                    ]
                },
                "new": {
                    "(None, None)": [
                        42
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextHexString(int)')": [
                        152
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextInt(int,int)')": [
                        198
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextLong(long,long)')": [
                        218
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureHexString(int)')": [
                        248
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureInt(int,int)')": [
                        309
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureLong(long,long)')": [
                        330
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPoisson(double)')": [
                        356
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextGaussian(double,double)')": [
                        460
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextExponential(double)')": [
                        481
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextUniform(double,double)')": [
                        510
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPermutation(int,int)')": [
                        834,
                        838
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSample(Collection,int)')": [
                        871,
                        875
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#UncorrelatedRandomVectorGenerator', None)": [
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.random#UncorrelatedRandomVectorGenerator', None)": [
                        59
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/ValueServer.java": {
                "old": {
                    "('org.apache.commons.math.random#ValueServer', 'getNextDigest')": [
                        316
                    ],
                    "('org.apache.commons.math.random#ValueServer', 'getNextReplay')": [
                        349
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.random#ValueServer', 'getNextDigest')": [
                        317
                    ],
                    "('org.apache.commons.math.random#ValueServer', 'getNextReplay')": [
                        350
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/Frequency.java": {
                "old": {
                    "('org.apache.commons.math.stat#Frequency', 'addValue(Object)')": [
                        117
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'addValue(Comparable)')": [
                        147
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'addValue(Object)')": [
                        118
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'addValue(Comparable)')": [
                        148
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/StatUtils.java": {
                "old": {
                    "('org.apache.commons.math.stat#StatUtils', 'sumDifference(double,double)')": [
                        567,
                        569,
                        570
                    ],
                    "('org.apache.commons.math.stat#StatUtils', 'varianceDifference(double,double,double)')": [
                        612,
                        614,
                        615
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.math.stat#StatUtils', 'sumDifference(double,double)')": [
                        568,
                        570,
                        571,
                        572,
                        573,
                        574
                    ],
                    "('org.apache.commons.math.stat#StatUtils', 'varianceDifference(double,double,double)')": [
                        616,
                        618,
                        619,
                        620,
                        621,
                        622
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/correlation/Covariance.java": {
                "old": {
                    "('org.apache.commons.math.stat.correlation#Covariance', 'covariance(double,double,boolean)')": [
                        224,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238
                    ],
                    "('org.apache.commons.math.stat.correlation#Covariance', 'checkSufficientData(RealMatrix)')": [
                        269
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.stat.correlation#Covariance', 'covariance(double,double,boolean)')": [
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231
                    ],
                    "('org.apache.commons.math.stat.correlation#Covariance', 'checkSufficientData(RealMatrix)')": [
                        270
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation.java": {
                "old": {
                    "('org.apache.commons.math.stat.correlation#PearsonsCorrelation', None)": [
                        94
                    ],
                    "('org.apache.commons.math.stat.correlation#PearsonsCorrelation', 'correlation(double,double)')": [
                        226,
                        231,
                        232,
                        233,
                        234,
                        235
                    ],
                    "('org.apache.commons.math.stat.correlation#PearsonsCorrelation', 'checkSufficientData(RealMatrix)')": [
                        277
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.stat.correlation#PearsonsCorrelation', None)": [
                        95
                    ],
                    "('org.apache.commons.math.stat.correlation#PearsonsCorrelation', 'correlation(double,double)')": [
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233
                    ],
                    "('org.apache.commons.math.stat.correlation#PearsonsCorrelation', 'checkSufficientData(RealMatrix)')": [
                        279
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/correlation/SpearmansCorrelation.java": {
                "old": {
                    "('org.apache.commons.math.stat.correlation#SpearmansCorrelation', 'correlation(double,double)')": [
                        148,
                        151,
                        152,
                        153,
                        154,
                        155
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.stat.correlation#SpearmansCorrelation', 'correlation(double,double)')": [
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#AbstractStorelessUnivariateStatistic', 'evaluate(double)')": [
                        58
                    ],
                    "('org.apache.commons.math.stat.descriptive#AbstractStorelessUnivariateStatistic', 'incrementAll(double)')": [
                        126
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.stat.descriptive#AbstractStorelessUnivariateStatistic', 'evaluate(double)')": [
                        59
                    ],
                    "('org.apache.commons.math.stat.descriptive#AbstractStorelessUnivariateStatistic', 'incrementAll(double)')": [
                        127
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/AbstractUnivariateStatistic.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#AbstractUnivariateStatistic', 'test(double,int,int)')": [
                        80,
                        85,
                        90,
                        95
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.stat.descriptive#AbstractUnivariateStatistic', 'test(double,int,int)')": [
                        81,
                        86,
                        91,
                        96
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', None)": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'setWindowSize(int)')": [
                        317
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'getPercentile(double)')": [
                        396,
                        400
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'setPercentileImpl(UnivariateStatistic)')": [
                        583
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'setWindowSize(int)')": [
                        310
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'getPercentile(double)')": [
                        389,
                        393
                    ],
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'setPercentileImpl(UnivariateStatistic)')": [
                        576
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'checkEmpty')": [
                        616
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'checkEmpty')": [
                        617
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#SummaryStatistics', 'checkEmpty')": [
                        631
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.math.stat.descriptive#SummaryStatistics', 'checkEmpty')": [
                        632
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#GeometricMean', 'checkEmpty')": [
                        197
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#GeometricMean', 'checkEmpty')": [
                        198
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#Kurtosis', 'increment(double)')": [
                        98
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Kurtosis', 'clear')": [
                        132
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Kurtosis', 'increment(double)')": [
                        99
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Kurtosis', 'clear')": [
                        133
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/SemiVariance.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#SemiVariance', 'evaluate(double)')": [
                        178
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#SemiVariance', 'evaluate(double)')": [
                        179
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#Variance', 'evaluate(double)')": [
                        216
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#Variance', 'evaluate(double)')": [
                        217
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/rank/Percentile.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.rank#Percentile', 'evaluate(double,int,int,double)')": [
                        202
                    ],
                    "('org.apache.commons.math.stat.descriptive.rank#Percentile', 'setQuantile(double)')": [
                        251
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.stat.descriptive.rank#Percentile', 'evaluate(double,int,int,double)')": [
                        203
                    ],
                    "('org.apache.commons.math.stat.descriptive.rank#Percentile', 'setQuantile(double)')": [
                        252
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java": {
                "old": {
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquare(double,long)')": [
                        68,
                        69,
                        73
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTest(double,long,double)')": [
                        139
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTest(long,double)')": [
                        207
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareDataSetsComparison(long,long)')": [
                        226,
                        227,
                        231,
                        251,
                        255,
                        270
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTestDataSetsComparison(long,long,double)')": [
                        314
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'checkArray(long)')": [
                        332,
                        333,
                        338,
                        339
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'checkRectangular(long)')": [
                        360
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'checkPositive(double)')": [
                        376
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'checkNonNegative(long)')": [
                        392,
                        409
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquare(double,long)')": [
                        69,
                        73
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTest(double,long,double)')": [
                        139
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTest(long,double)')": [
                        207
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareDataSetsComparison(long,long)')": [
                        226,
                        230,
                        250,
                        254,
                        269
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTestDataSetsComparison(long,long,double)')": [
                        313
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'checkArray(long)')": [
                        331,
                        336
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'checkRectangular(long)')": [
                        357
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'checkPositive(double)')": [
                        373
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'checkNonNegative(long)')": [
                        389,
                        406
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java": {
                "old": {
                    "('org.apache.commons.math.stat.inference#OneWayAnovaImpl', 'anovaTest(Collection,double)')": [
                        105
                    ],
                    "('org.apache.commons.math.stat.inference#OneWayAnovaImpl', 'anovaStats(Collection)')": [
                        128,
                        136
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.stat.inference#OneWayAnovaImpl', 'anovaTest(Collection,double)')": [
                        106
                    ],
                    "('org.apache.commons.math.stat.inference#OneWayAnovaImpl', 'anovaStats(Collection)')": [
                        129,
                        137
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java": {
                "old": {
                    "('org.apache.commons.math.stat.inference#TTestImpl', None)": [
                        35,
                        36,
                        37,
                        38
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'checkSignificanceLevel(double)')": [
                        1033
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'checkSampleData(double)')": [
                        1046
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'checkSampleData(StatisticalSummary)')": [
                        1059
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'checkSignificanceLevel(double)')": [
                        1030
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'checkSampleData(double)')": [
                        1043
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'checkSampleData(StatisticalSummary)')": [
                        1056
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/regression/AbstractMultipleLinearRegression.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'validateSampleData(double,double)')": [
                        91,
                        96
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'validateCovarianceData(double,double)')": [
                        112,
                        116
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'validateSampleData(double,double)')": [
                        92,
                        97
                    ],
                    "('org.apache.commons.math.stat.regression#AbstractMultipleLinearRegression', 'validateCovarianceData(double,double)')": [
                        113,
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'getSlopeConfidenceInterval(double)')": [
                        551
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'getSlopeConfidenceInterval(double)')": [
                        552
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java": {
                "old": {
                    "('org.apache.commons.math.transform#FastCosineTransformer', 'fct(double)')": [
                        226
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.transform#FastCosineTransformer', 'fct(double)')": [
                        227
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java": {
                "old": {
                    "('org.apache.commons.math.transform#FastFourierTransformer', None)": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        680,
                        686,
                        709,
                        715,
                        830,
                        831,
                        850,
                        894,
                        895,
                        917,
                        918
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'sample(UnivariateRealFunction,double,double,int)')": [
                        451
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'verifyDataSet(double)')": [
                        513
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'verifyDataSet(Object)')": [
                        526
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'sample(UnivariateRealFunction,double,double,int)')": [
                        440
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'verifyDataSet(double)')": [
                        502
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'verifyDataSet(Object)')": [
                        515
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', None)": [
                        669,
                        675,
                        698,
                        704,
                        819,
                        838,
                        882,
                        904
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java": {
                "old": {
                    "('org.apache.commons.math.transform#FastHadamardTransformer', 'fht(double)')": [
                        163
                    ],
                    "('org.apache.commons.math.transform#FastHadamardTransformer', 'fht(int)')": [
                        214
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.transform#FastHadamardTransformer', 'fht(double)')": [
                        164
                    ],
                    "('org.apache.commons.math.transform#FastHadamardTransformer', 'fht(int)')": [
                        215
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/FastSineTransformer.java": {
                "old": {
                    "('org.apache.commons.math.transform#FastSineTransformer', 'fst(double)')": [
                        220
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.transform#FastSineTransformer', 'fst(double)')": [
                        221
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/ContinuedFraction.java": {
                "old": {
                    "('org.apache.commons.math.util#ContinuedFraction', 'evaluate(double,double,int)')": [
                        154,
                        178,
                        186,
                        201
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#ContinuedFraction', 'evaluate(double,double,int)')": [
                        154,
                        178,
                        186,
                        201
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/DefaultTransformer.java": {
                "old": {
                    "('org.apache.commons.math.util#DefaultTransformer', 'transform(Object)')": [
                        47,
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#DefaultTransformer', 'transform(Object)')": [
                        47,
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', 'checkBinomial(int,int)')": [
                        365,
                        370
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'factorial(int)')": [
                        596
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'factorialDouble(int)')": [
                        629
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'factorialLog(int)')": [
                        654
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'gcd(int,int)')": [
                        702,
                        728
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'gcd(long,long)')": [
                        791,
                        817
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'lcm(int,int)')": [
                        967
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'lcm(long,long)')": [
                        1002
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'normalizeArray(double,double)')": [
                        1233,
                        1237,
                        1245
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'pow(int,int)')": [
                        1591
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'pow(int,long)')": [
                        1621
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'pow(long,int)')": [
                        1651
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'pow(long,long)')": [
                        1681
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'pow(BigInteger,int)')": [
                        1711
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'pow(BigInteger,long)')": [
                        1731
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'pow(BigInteger,BigInteger)')": [
                        1761
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'checkOrder(double,int,boolean)')": [
                        1887,
                        1892,
                        1899,
                        1904
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtils', 'checkBinomial(int,int)')": [
                        365,
                        370
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'factorial(int)')": [
                        596
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'factorialDouble(int)')": [
                        629
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'factorialLog(int)')": [
                        654
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'gcd(int,int)')": [
                        702,
                        728
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'gcd(long,long)')": [
                        791,
                        817
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'lcm(int,int)')": [
                        967
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'lcm(long,long)')": [
                        1002
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'normalizeArray(double,double)')": [
                        1233,
                        1237,
                        1245
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'pow(int,int)')": [
                        1591
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'pow(int,long)')": [
                        1621
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'pow(long,int)')": [
                        1651
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'pow(long,long)')": [
                        1681
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'pow(BigInteger,int)')": [
                        1711
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'pow(BigInteger,long)')": [
                        1731
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'pow(BigInteger,BigInteger)')": [
                        1761
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'checkOrder(double,int,boolean)')": [
                        1887,
                        1892,
                        1899,
                        1904
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java": {
                "old": {
                    "('org.apache.commons.math.util#OpenIntToDoubleHashMap', None)": [
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        537,
                        538,
                        541,
                        555,
                        556,
                        559,
                        573,
                        574,
                        588
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#OpenIntToDoubleHashMap', None)": [
                        529,
                        532,
                        546,
                        549,
                        563,
                        577
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java": {
                "old": {
                    "('org.apache.commons.math.util#OpenIntToFieldHashMap', None)": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        549,
                        550,
                        553,
                        567,
                        568,
                        571,
                        585,
                        586,
                        600
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#OpenIntToFieldHashMap', None)": [
                        541,
                        544,
                        558,
                        561,
                        575,
                        589
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'substituteMostRecentElement(double)')": [
                        324
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'checkContractExpand(float,float)')": [
                        365
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'discardExtremeElements(int,boolean)')": [
                        452,
                        456
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getElement(int)')": [
                        536,
                        542
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setElement(int,double)')": [
                        671
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setExpansionMode(int)')": [
                        713
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setInitialCapacity(int)')": [
                        736
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setNumElements(int)')": [
                        754
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'substituteMostRecentElement(double)')": [
                        324
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'checkContractExpand(float,float)')": [
                        365
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'discardExtremeElements(int,boolean)')": [
                        452,
                        456
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getElement(int)')": [
                        536,
                        542
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setElement(int,double)')": [
                        671
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setExpansionMode(int)')": [
                        713
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setInitialCapacity(int)')": [
                        736
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setNumElements(int)')": [
                        754
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math#ConvergenceExceptionTest', 'testConstructorPatternArguments')": [
                        38,
                        42
                    ],
                    "('org.apache.commons.math#ConvergenceExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        59,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.commons.math#ConvergenceExceptionTest', 'testConstructorPatternArguments')": [
                        40,
                        44
                    ],
                    "('org.apache.commons.math#ConvergenceExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        61,
                        67
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/FunctionEvaluationExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math#FunctionEvaluationExceptionTest', 'testConstructorPatternArguments')": [
                        49,
                        53
                    ],
                    "('org.apache.commons.math#FunctionEvaluationExceptionTest', 'testConstructorArrayPatternArguments')": [
                        63,
                        68
                    ],
                    "('org.apache.commons.math#FunctionEvaluationExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        81,
                        87
                    ],
                    "('org.apache.commons.math#FunctionEvaluationExceptionTest', 'testConstructorArrayPatternArgumentsCause')": [
                        97,
                        104
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math#FunctionEvaluationExceptionTest', 'testConstructorPatternArguments')": [
                        51,
                        55
                    ],
                    "('org.apache.commons.math#FunctionEvaluationExceptionTest', 'testConstructorArrayPatternArguments')": [
                        65,
                        70
                    ],
                    "('org.apache.commons.math#FunctionEvaluationExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        83,
                        89
                    ],
                    "('org.apache.commons.math#FunctionEvaluationExceptionTest', 'testConstructorArrayPatternArgumentsCause')": [
                        99,
                        106
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math#MathConfigurationExceptionTest', 'testConstructorPatternArguments')": [
                        37,
                        41
                    ],
                    "('org.apache.commons.math#MathConfigurationExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        58,
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.commons.math#MathConfigurationExceptionTest', 'testConstructorPatternArguments')": [
                        39,
                        43
                    ],
                    "('org.apache.commons.math#MathConfigurationExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        60,
                        66
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/MathExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math#MathExceptionTest', 'testConstructorPatternArguments')": [
                        40,
                        44
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        61,
                        67
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testPrintStackTrace')": [
                        80,
                        81
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testSerialization')": [
                        105,
                        106,
                        134
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testConstructorPatternArguments')": [
                        44,
                        48
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        65,
                        71
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testPrintStackTrace')": [
                        84,
                        85
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testSerialization')": [
                        109,
                        110,
                        138
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/MaxIterationsExceededExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math#MaxIterationsExceededExceptionTest', 'testComplexConstructor')": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.math#MaxIterationsExceededExceptionTest', 'testComplexConstructor')": [
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testWrongDerivative')": [
                        54
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testEventsErrors')": [
                        220
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testWrongDerivative')": [
                        55
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testEventsErrors')": [
                        221
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/util/TestBean.java": {
                "old": {
                    "('org.apache.commons.math.util#TestBean', 'getZ')": [
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#TestBean', 'getZ')": [
                        62
                    ]
                }
            }
        }
    }
}