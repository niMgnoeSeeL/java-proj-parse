{
    "6844aba987aaf32c85a4eb3fba3f6ccf9d7c8db6": {
        "authored_data": "2012 Nov 26 23:02",
        "commit.message": "MATH-904.\nFixed wrong assumption in \"pow\" method.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1413916 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "4673043763616457113c70219e1950818ced847b",
        "changes": {
            "src/main/java/org/apache/commons/math3/util/FastMath.java": {
                "old": {
                    "('org.apache.commons.math3.util#FastMath', 'pow(double,double)')": [
                        1540
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#FastMath', None)": [
                        312,
                        313
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'pow(double,double)')": [
                        1542
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/util/FastMathTest.java": {
                "new": {
                    "('org.apache.commons.math3.util#FastMathTest', 'testMath904')": [
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167
                    ],
                    "('org.apache.commons.math3.util#FastMathTest', None)": [
                        168,
                        169,
                        170
                    ]
                }
            }
        }
    },
    "4673043763616457113c70219e1950818ced847b": {
        "authored_data": "2012 Nov 26 19:55",
        "commit.message": "In classes o.a.c.m3.special.Gamma and o.a.c.m3.special.Beta, made some\nauxiliary functions package private. It is very unlikely that these functions\nshould be used outside this package, and if necessary, it will always be\npossible to increase their visibility (while the reverse would break\ncompatibility).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1413807 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "fec77409580f1f1608b881a5add07ca16d081de0",
        "changes": {
            "src/main/java/org/apache/commons/math3/special/Beta.java": {
                "old": {
                    "('org.apache.commons.math3.special#Beta', 'bcorr(double,double)')": [
                        285
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.special#Beta', 'bcorr(double,double)')": [
                        285
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/special/Gamma.java": {
                "old": {
                    "('org.apache.commons.math3.special#Gamma', 'logGammaSum(double,double)')": [
                        782
                    ],
                    "('org.apache.commons.math3.special#Gamma', 'logGammaMinusLogGammaSum(double,double)')": [
                        812,
                        813
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.special#Gamma', 'logGammaSum(double,double)')": [
                        782
                    ],
                    "('org.apache.commons.math3.special#Gamma', 'logGammaMinusLogGammaSum(double,double)')": [
                        812,
                        813
                    ]
                }
            }
        }
    },
    "fec77409580f1f1608b881a5add07ca16d081de0": {
        "authored_data": "2012 Nov 26 19:45",
        "commit.message": "MATH-849: Gamma.gamma(double) returns NaN if called on negative integer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1413802 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "f348a29e5fed2b02acc4c0686ef711e26a7dbcbc",
        "changes": {
            "src/main/java/org/apache/commons/math3/special/Gamma.java": {
                "old": {
                    "('org.apache.commons.math3.special#Gamma', 'gamma(double)')": [
                        709
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.special#Gamma', 'gamma(double)')": [
                        709,
                        710,
                        711
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/special/GammaTest.java": {
                "new": {
                    "('org.apache.commons.math3.special#GammaTest', None)": [
                        957,
                        962,
                        963,
                        964
                    ],
                    "('org.apache.commons.math3.special#GammaTest', 'testGammaNegativeInteger')": [
                        958,
                        959,
                        960,
                        961
                    ]
                }
            }
        }
    },
    "46ed0af1c2d274d273b1b3ac89e61e62ba98cefa": {
        "authored_data": "2012 Nov 26 13:25",
        "commit.message": "MATH-905\nAvoid overflow on the whole range covered by the equivalent functions in\nthe standard \"Math\" class.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1413600 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "9e75d6faa92de5d0046f8b5957f9f0bee57e8e3f",
        "changes": {
            "src/main/java/org/apache/commons/math3/util/FastMath.java": {
                "old": {
                    "('org.apache.commons.math3.util#FastMath', 'cosh(double)')": [
                        392,
                        393,
                        396,
                        397,
                        398,
                        399,
                        400
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'sinh(double)')": [
                        452,
                        453,
                        454,
                        455,
                        456,
                        457
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#FastMath', None)": [
                        81,
                        82
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'cosh(double)')": [
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        412
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'sinh(double)')": [
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/util/FastMathTest.java": {
                "new": {
                    "('org.apache.commons.math3.util#FastMathTest', 'testMath905LargePositive')": [
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179
                    ],
                    "('org.apache.commons.math3.util#FastMathTest', None)": [
                        180,
                        181,
                        182,
                        202,
                        203,
                        204
                    ],
                    "('org.apache.commons.math3.util#FastMathTest', 'testMath905LargeNegative')": [
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201
                    ]
                }
            }
        }
    },
    "9e75d6faa92de5d0046f8b5957f9f0bee57e8e3f": {
        "authored_data": "2012 Nov 26 13:16",
        "commit.message": "MATH-908\nAdded constructor.\nJavadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1413594 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "4d035b59a19415ec5fbd8ee5c2f7f53d9b59fa82",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/direct/PowellOptimizer.java": {
                "new": {
                    "(None, None)": [
                        45,
                        46,
                        47
                    ],
                    "('org.apache.commons.math3.optimization.direct#PowellOptimizer', None)": [
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/direct/PowellOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#PowellOptimizerTest', 'doTest(MultivariateFunction,double,double,GoalType,double,double,double)')": [
                        227
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.direct#PowellOptimizerTest', 'doTest(MultivariateFunction,double,double,GoalType,double,double,double)')": [
                        227
                    ]
                }
            }
        }
    },
    "4d035b59a19415ec5fbd8ee5c2f7f53d9b59fa82": {
        "authored_data": "2012 Nov 26 11:22",
        "commit.message": "In class Beta, wrote DEFAULT_EPSILON in a less error-prone way (1E-14 instead\nof 10e-15).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1413555 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "71e11fc375eed7f4e6cecf436e422848e2ccc99a",
        "changes": {
            "src/main/java/org/apache/commons/math3/special/Beta.java": {
                "old": {
                    "('org.apache.commons.math3.special#Beta', None)": [
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.special#Beta', None)": [
                        56
                    ]
                }
            }
        }
    },
    "71e11fc375eed7f4e6cecf436e422848e2ccc99a": {
        "authored_data": "2012 Nov 25 21:23",
        "commit.message": "Simplify hashCode/equals/toString methods by using appropriate methods from java.util.Arrays, similar to EuclideanDoublePoint.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1413424 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "17c50866e06d627387a472693bc475b34770c66b",
        "changes": {
            "src/main/java/org/apache/commons/math3/stat/clustering/EuclideanIntegerPoint.java": {
                "old": {
                    "('org.apache.commons.math3.stat.clustering#EuclideanIntegerPoint', 'equals(Object)')": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ],
                    "('org.apache.commons.math3.stat.clustering#EuclideanIntegerPoint', 'hashCode')": [
                        95,
                        96,
                        97,
                        98,
                        99
                    ],
                    "('org.apache.commons.math3.stat.clustering#EuclideanIntegerPoint', 'toString')": [
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math3.stat.clustering#EuclideanIntegerPoint', 'equals(Object)')": [
                        81
                    ],
                    "('org.apache.commons.math3.stat.clustering#EuclideanIntegerPoint', 'hashCode')": [
                        87
                    ],
                    "('org.apache.commons.math3.stat.clustering#EuclideanIntegerPoint', 'toString')": [
                        96
                    ]
                }
            }
        }
    },
    "17c50866e06d627387a472693bc475b34770c66b": {
        "authored_data": "2012 Nov 25 16:44",
        "commit.message": "MATH-738: implementation of Beta.bcorr(double, double), an auxiliary function\nfor the computation of Beta.beta(double, double).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1413369 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "e6dc431a6a5135dd64dcb766984074ecfe20abbb",
        "changes": {
            "src/main/java/org/apache/commons/math3/special/Beta.java": {
                "new": {
                    "(None, None)": [
                        19,
                        24,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        328
                    ],
                    "('org.apache.commons.math3.special#Beta', None)": [
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284
                    ],
                    "('org.apache.commons.math3.special#Beta', 'bcorr(double,double)')": [
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/special/BetaTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        277
                    ],
                    "('org.apache.commons.math3.special#BetaTest', None)": [
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        264,
                        265,
                        266,
                        267,
                        271,
                        272,
                        273
                    ],
                    "('org.apache.commons.math3.special#BetaTest', 'testBcorr')": [
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263
                    ],
                    "('org.apache.commons.math3.special#BetaTest', 'testBcorrPrecondition1')": [
                        268,
                        269,
                        270
                    ],
                    "('org.apache.commons.math3.special#BetaTest', 'testBcorrPrecondition2')": [
                        274,
                        275,
                        276
                    ]
                }
            }
        }
    }
}