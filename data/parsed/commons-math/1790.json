{
    "2a6c6409a919c1091ef3af778cc9738c57d67575": {
        "authored_data": "2014 Apr 26 17:36",
        "commit.message": "Build empty polyhedrons set when given equal min/max boundaries.\n\nAlso explained better in the javadoc about some wrong usage of\nPolyhedronsSet constructor.\n\nJIRA: MATH-1115\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1590254 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "f4c926ea82771de22a32150a8b0b1a502faf34b2",
        "changes": {
            "src/main/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet.java": {
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#PolyhedronsSet', None)": [
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PolyhedronsSet', 'buildBoundary(double,double,double,double,double,double,double)')": [
                        203,
                        204,
                        205,
                        206
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSetTest.java": {
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.threed#PolyhedronsSetTest', None)": [
                        288,
                        293,
                        294,
                        295,
                        305,
                        306,
                        307,
                        308,
                        309
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PolyhedronsSetTest', 'testTooThinBox')": [
                        289,
                        290,
                        291,
                        292
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.threed#PolyhedronsSetTest', 'testWrongUsage')": [
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304
                    ]
                }
            }
        }
    },
    "f4c926ea82771de22a32150a8b0b1a502faf34b2": {
        "authored_data": "2014 Apr 26 16:55",
        "commit.message": "Build properly empty polygons for equal min/max box.\n\nJIRA: MATH-1117\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1590251 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "cbc32459f8f36e5c57a9db74709e813e5f77bb5e",
        "changes": {
            "src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java": {
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.twod#PolygonsSet', None)": [
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.twod#PolygonsSet', 'boxBoundary(double,double,double,double,double)')": [
                        232,
                        233,
                        234,
                        235
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java": {
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.twod#PolygonsSetTest', None)": [
                        1069,
                        1074,
                        1075,
                        1076,
                        1086,
                        1087,
                        1088,
                        1089,
                        1090
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.twod#PolygonsSetTest', 'testTooThinBox')": [
                        1070,
                        1071,
                        1072,
                        1073
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.twod#PolygonsSetTest', 'testWrongUsage')": [
                        1077,
                        1078,
                        1079,
                        1080,
                        1081,
                        1082,
                        1083,
                        1084,
                        1085
                    ]
                }
            }
        }
    },
    "cbc32459f8f36e5c57a9db74709e813e5f77bb5e": {
        "authored_data": "2014 Apr 20 14:29",
        "commit.message": "Added a fast single-step method for fixed-step Runge-Kutta integrators.\n\nJIRA: MATH-1119\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1588769 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "2985728c00f3be75f87da1fa16a5f7e2704818c7",
        "changes": {
            "src/main/java/org/apache/commons/math3/ode/nonstiff/RungeKuttaIntegrator.java": {
                "new": {
                    "(None, None)": [
                        27,
                        255,
                        256,
                        257
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#RungeKuttaIntegrator', None)": [
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#RungeKuttaIntegrator', 'singleStep(FirstOrderDifferentialEquations,double,double,double)')": [
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ode/nonstiff/LutherIntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math3.ode.nonstiff#LutherIntegratorTest', None)": [
                        309
                    ],
                    "('org.apache.commons.math3.ode.nonstiff#LutherIntegratorTest', 'testSingleStep')": [
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326
                    ],
                    "(None, None)": [
                        327,
                        328
                    ]
                }
            }
        }
    },
    "2985728c00f3be75f87da1fa16a5f7e2704818c7": {
        "authored_data": "2014 Apr 20 13:30",
        "commit.message": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1588755 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "931a67ff52aeebb5950d28b7ba9c2ad1c0bc80be",
        "changes": {
            "src/main/java/org/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaIntegrator.java": {
                "new": {
                    "(None, None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/nonstiff/EulerIntegrator.java": {
                "new": {
                    "(None, None)": [
                        45
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/nonstiff/GillIntegrator.java": {
                "new": {
                    "(None, None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/nonstiff/MidpointIntegrator.java": {
                "new": {
                    "(None, None)": [
                        38,
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/nonstiff/ThreeEighthesIntegrator.java": {
                "new": {
                    "(None, None)": [
                        41
                    ]
                }
            }
        }
    },
    "931a67ff52aeebb5950d28b7ba9c2ad1c0bc80be": {
        "authored_data": "2014 Apr 20 13:25",
        "commit.message": "Math.nextUp is not available before Java 1.6.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1588754 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "7f162008a2eea123a43f241e5e214dadf6b9e88e",
        "changes": {
            "src/test/java/org/apache/commons/math3/complex/ComplexTest.java": {
                "old": {
                    "('org.apache.commons.math3.complex#ComplexTest', 'testFloatingPointEquals')": [
                        534,
                        535,
                        540,
                        541
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.complex#ComplexTest', 'testFloatingPointEquals')": [
                        534,
                        535,
                        540,
                        541
                    ]
                }
            }
        }
    },
    "7f162008a2eea123a43f241e5e214dadf6b9e88e": {
        "authored_data": "2014 Apr 20 13:25",
        "commit.message": "Added an order 6 fixed-step ODE integrator.\n\nThe integrator was designed by H. A. Luther in 1968. We have added a\ncorresponding step interpolator by solving the order conditions provided\nby the rkcheck tool.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1588753 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "4b724bdc2ee2f5b89009e3ba70b6306741f0ab8d",
        "changes": {
            "src/main/java/org/apache/commons/math3/ode/package-info.java": {
                "new": {
                    "(None, None)": [
                        139
                    ]
                }
            }
        }
    },
    "4b724bdc2ee2f5b89009e3ba70b6306741f0ab8d": {
        "authored_data": "2014 Apr 19 01:27",
        "commit.message": "Removed deprecations of test(.) methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1588601 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "57247cd3dd0f2f7441278f37e40bc025f39b392e",
        "changes": {
            "src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java": {
                "old": {
                    "('org.apache.commons.math3.stat.descriptive#AbstractUnivariateStatistic', None)": [
                        154,
                        155,
                        156,
                        184,
                        185,
                        186,
                        220,
                        221,
                        222,
                        263,
                        264,
                        265
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.stat.descriptive#AbstractUnivariateStatistic', None)": [
                        154,
                        182,
                        216,
                        257
                    ]
                }
            }
        }
    },
    "57247cd3dd0f2f7441278f37e40bc025f39b392e": {
        "authored_data": "2014 Apr 19 01:24",
        "commit.message": "Advertise the right exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1588600 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "7f31bc04bdf8821cf24754bfdc9bd4c0e8660228",
        "changes": {
            "src/main/java/org/apache/commons/math3/util/CombinatoricsUtils.java": {
                "old": {
                    "('org.apache.commons.math3.util#CombinatoricsUtils', None)": [
                        64
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#CombinatoricsUtils', None)": [
                        64
                    ]
                }
            }
        }
    },
    "7f31bc04bdf8821cf24754bfdc9bd4c0e8660228": {
        "authored_data": "2014 Apr 18 15:58",
        "commit.message": "MATH-1118\nFixed compatibility of \"equals(Object)\" with \"hashCode()\" (\"Complex\" will\nbehave as JDK's \"Double\"). Added new methods for testing floating-point\nequality.\nThanks to Cyrille Artho for reporting the issue.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1588500 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "baf9888f8f88af5b07b8d7d0ac650b8635d8c350",
        "changes": {
            "src/main/java/org/apache/commons/math3/complex/Complex.java": {
                "old": {
                    "('org.apache.commons.math3.complex#Complex', None)": [
                        324,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336
                    ],
                    "('org.apache.commons.math3.complex#Complex', 'equals(Object)')": [
                        344,
                        348
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math3.complex#Complex', None)": [
                        325,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435
                    ],
                    "('org.apache.commons.math3.complex#Complex', 'equals(Object)')": [
                        354,
                        358,
                        359
                    ],
                    "('org.apache.commons.math3.complex#Complex', 'equals(Complex,Complex,int)')": [
                        382,
                        383,
                        384
                    ],
                    "('org.apache.commons.math3.complex#Complex', 'equals(Complex,Complex)')": [
                        397,
                        398
                    ],
                    "('org.apache.commons.math3.complex#Complex', 'equals(Complex,Complex,double)')": [
                        416,
                        417,
                        418
                    ],
                    "('org.apache.commons.math3.complex#Complex', 'equalsWithRelativeTolerance(Complex,Complex,double)')": [
                        436,
                        437,
                        438,
                        439
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/complex/ComplexTest.java": {
                "old": {
                    "('org.apache.commons.math3.complex#ComplexTest', 'testReciprocalReal')": [
                        314
                    ],
                    "('org.apache.commons.math3.complex#ComplexTest', 'testMath221')": [
                        1070
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.complex#ComplexTest', 'testReciprocalReal')": [
                        314
                    ],
                    "('org.apache.commons.math3.complex#ComplexTest', None)": [
                        500,
                        503,
                        504,
                        507,
                        508,
                        519,
                        520,
                        521,
                        544,
                        545,
                        546,
                        553,
                        554,
                        555,
                        566,
                        567,
                        568
                    ],
                    "('org.apache.commons.math3.complex#ComplexTest', 'testFloatingPointEqualsPrecondition1')": [
                        501,
                        502
                    ],
                    "('org.apache.commons.math3.complex#ComplexTest', 'testFloatingPointEqualsPrecondition2')": [
                        505,
                        506
                    ],
                    "('org.apache.commons.math3.complex#ComplexTest', 'testFloatingPointEquals')": [
                        522,
                        523,
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543
                    ],
                    "('org.apache.commons.math3.complex#ComplexTest', 'testFloatingPointEqualsNaN')": [
                        547,
                        548,
                        549,
                        550,
                        551,
                        552
                    ],
                    "('org.apache.commons.math3.complex#ComplexTest', 'testFloatingPointEqualsWithAllowedDelta')": [
                        556,
                        557,
                        558,
                        559,
                        560,
                        561,
                        562,
                        563,
                        564,
                        565
                    ],
                    "('org.apache.commons.math3.complex#ComplexTest', 'testFloatingPointEqualsWithRelativeTolerance')": [
                        569,
                        570,
                        571,
                        572,
                        573,
                        574,
                        575,
                        576,
                        577
                    ],
                    "('org.apache.commons.math3.complex#ComplexTest', 'testHashCode')": [
                        622,
                        623,
                        624,
                        625,
                        626,
                        627,
                        628,
                        629,
                        630,
                        631,
                        632,
                        633,
                        634,
                        635,
                        636
                    ],
                    "('org.apache.commons.math3.complex#ComplexTest', 'testMath221')": [
                        1153,
                        1154
                    ]
                }
            }
        }
    },
    "baf9888f8f88af5b07b8d7d0ac650b8635d8c350": {
        "authored_data": "2014 Apr 17 09:14",
        "commit.message": "Typo.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1588182 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "70101ee3ca37b56a471b3731667c75c447da90cb",
        "changes": {
            "src/main/java/org/apache/commons/math3/util/Precision.java": {
                "old": {
                    "('org.apache.commons.math3.util#Precision', None)": [
                        279
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#Precision', None)": [
                        279
                    ]
                }
            }
        }
    }
}