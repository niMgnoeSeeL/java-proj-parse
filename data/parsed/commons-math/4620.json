{
    "33c7928ebdfaac1a66e8a94d0c7753d7d91e7592": {
        "authored_data": "2010 Oct 01 13:09",
        "commit.message": "Java 1.5 does not support Arrays.copyOf()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003526 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "9714ffac6dbb6b478bfa777375100e32f05d284b",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', 'doOptimize')": [
                        141
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', 'doOptimize')": [
                        139
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', None)": [
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', 'copyOf(double,int)')": [
                        293,
                        294,
                        295,
                        296
                    ],
                    "(None, None)": [
                        297,
                        298
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.util#MultidimensionalCounter', None)": [
                        132,
                        167
                    ],
                    "('org.apache.commons.math.util#MultidimensionalCounter', 'getSizes')": [
                        289
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MultidimensionalCounter', None)": [
                        131,
                        166,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309
                    ],
                    "('org.apache.commons.math.util#MultidimensionalCounter', 'getSizes')": [
                        288
                    ],
                    "('org.apache.commons.math.util#MultidimensionalCounter', 'copyOf(int,int)')": [
                        310,
                        311,
                        312,
                        313
                    ],
                    "(None, None)": [
                        314,
                        315
                    ]
                }
            }
        }
    },
    "9714ffac6dbb6b478bfa777375100e32f05d284b": {
        "authored_data": "2010 Oct 01 12:56",
        "commit.message": "MATH-422\nMade \"MicrosphereInterpolator\" immutable.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003521 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "de001e7bcf9acb761047bdcf40f48244f8b63642",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java": {
                "old": {
                    "(None, None)": [
                        243
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolator', None)": [
                        35,
                        40,
                        45,
                        49,
                        50,
                        55,
                        57,
                        58,
                        61,
                        68,
                        69,
                        70,
                        71,
                        72,
                        74,
                        75,
                        76,
                        77,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ],
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolator', 'setBrightnessExponent(int)')": [
                        100,
                        101,
                        102,
                        103,
                        104
                    ],
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolator', 'setMicropshereElements(int)')": [
                        112,
                        113,
                        114,
                        115,
                        116
                    ],
                    "(None, None)": [
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolator', None)": [
                        46,
                        51,
                        53,
                        54,
                        55,
                        58,
                        65,
                        66,
                        67,
                        68,
                        69,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ]
                }
            }
        }
    },
    "de001e7bcf9acb761047bdcf40f48244f8b63642": {
        "authored_data": "2010 Oct 01 12:46",
        "commit.message": "Removed deprecated code in implementations of \"IntegerDistribution\".\nAdded \"final\" keyword.\nAdded \"sample\" methods to \"IntegerDistribution\" and \"ContinuousDistribution\"\ninterfaces.\nCleaned up Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003512 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "5321415bc5e6fe2fc3b6a68f53447a72050d407f",
        "changes": {
            "src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', None)": [
                        38,
                        41,
                        42,
                        43,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        75,
                        76,
                        77,
                        78,
                        79,
                        81,
                        85,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        112,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        136,
                        137,
                        138,
                        139,
                        140,
                        143,
                        144,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        162,
                        163,
                        213,
                        214,
                        215,
                        216,
                        225,
                        226,
                        227,
                        229,
                        236,
                        237,
                        238,
                        239,
                        241,
                        242,
                        243,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        281,
                        285,
                        286,
                        287,
                        292,
                        296,
                        297,
                        298
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(double,double)')": [
                        90,
                        91,
                        92
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(int,int)')": [
                        147,
                        148,
                        149
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'inverseCumulativeProbability(double)')": [
                        166,
                        167,
                        168
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'sample(int)')": [
                        247
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'checkedCumulativeProbability(int)')": [
                        266
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', None)": [
                        42,
                        43,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        79,
                        83,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        110,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        134,
                        135,
                        136,
                        137,
                        138,
                        141,
                        142,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        160,
                        161,
                        210,
                        219,
                        220,
                        221,
                        222,
                        223,
                        225,
                        232,
                        233,
                        234,
                        235,
                        236,
                        238,
                        239,
                        240,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        284,
                        288,
                        289,
                        294,
                        298,
                        299
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(double,double)')": [
                        88,
                        89,
                        90
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(int,int)')": [
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'inverseCumulativeProbability(double)')": [
                        164,
                        165
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'sample(int)')": [
                        244,
                        245
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'checkedCumulativeProbability(int)')": [
                        268,
                        269
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#BetaDistributionImpl', None)": [
                        40,
                        42,
                        46,
                        49,
                        51,
                        52,
                        54,
                        55,
                        60,
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#BetaDistributionImpl', None)": [
                        41,
                        48,
                        50,
                        55
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/BinomialDistribution.java": {
                "old": {
                    "(None, None)": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', None)": [
                        34,
                        35,
                        37,
                        39,
                        40,
                        42,
                        48,
                        49,
                        52,
                        53,
                        54,
                        58,
                        59,
                        60,
                        67,
                        68,
                        69,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        127,
                        128,
                        129,
                        130,
                        133,
                        134,
                        135,
                        143,
                        146,
                        147,
                        148,
                        156,
                        158,
                        161,
                        178,
                        180,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        203,
                        204,
                        206,
                        207
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'setNumberOfTrials(int)')": [
                        84,
                        85
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'setNumberOfTrialsInternal(int)')": [
                        94,
                        95,
                        96,
                        97,
                        98,
                        99
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'setProbabilityOfSuccess(double)')": [
                        111,
                        112
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'setProbabilityOfSuccessInternal(double)')": [
                        121,
                        122,
                        123,
                        124,
                        125,
                        126
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', None)": [
                        35,
                        38,
                        40,
                        46,
                        47,
                        48,
                        49,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        65,
                        72,
                        79,
                        82,
                        83,
                        91,
                        94,
                        95,
                        103,
                        105,
                        108,
                        125,
                        127,
                        143,
                        144,
                        145,
                        147,
                        148,
                        150,
                        151
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', None)": [
                        35,
                        36,
                        37,
                        44,
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', None)": [
                        35,
                        36,
                        37,
                        44,
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', None)": [
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', None)": [
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ContinuousDistribution.java": {
                "new": {
                    "(None, None)": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', None)": [
                        35,
                        42,
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', None)": [
                        35,
                        42,
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#FDistributionImpl', None)": [
                        38,
                        42,
                        44,
                        45,
                        46,
                        47,
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#FDistributionImpl', None)": [
                        38,
                        42,
                        44,
                        45,
                        46,
                        47,
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', None)": [
                        34,
                        35,
                        36,
                        40,
                        41,
                        43,
                        45,
                        46,
                        48,
                        49,
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', None)": [
                        34,
                        35,
                        39,
                        42,
                        44,
                        45
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java": {
                "old": {
                    "(None, None)": [
                        34,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        43,
                        50
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', None)": [
                        33,
                        34,
                        35,
                        37,
                        39,
                        40,
                        42,
                        43,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        56,
                        57,
                        59,
                        60,
                        61,
                        62,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        102,
                        103,
                        104,
                        106,
                        113,
                        116,
                        117,
                        118,
                        126,
                        129,
                        130,
                        131,
                        142,
                        143,
                        144,
                        152,
                        153,
                        154,
                        161,
                        162,
                        163,
                        170,
                        171,
                        172,
                        182,
                        183,
                        191,
                        192,
                        193,
                        219,
                        220,
                        221,
                        225,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        343,
                        344
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setNumberOfSuccesses(int)')": [
                        242,
                        243
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setNumberOfSuccessesInternal(int)')": [
                        251,
                        252,
                        253,
                        254,
                        255,
                        256
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setPopulationSize(int)')": [
                        267,
                        268
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setPopulationSizeInternal(int)')": [
                        276,
                        277,
                        278,
                        279,
                        280,
                        281
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setSampleSize(int)')": [
                        292,
                        293
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setSampleSizeInternal(int)')": [
                        301,
                        302,
                        303,
                        304,
                        305,
                        306
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'upperCumulativeProbability(int)')": [
                        325,
                        326,
                        327,
                        328
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'innerCumulativeProbability(int,int,int,int,int,int)')": [
                        345,
                        346
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', None)": [
                        35,
                        36,
                        39,
                        41,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        76,
                        77,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        115,
                        116,
                        117,
                        119,
                        126,
                        129,
                        130,
                        138,
                        141,
                        142,
                        153,
                        154,
                        155,
                        163,
                        170,
                        177,
                        187,
                        188,
                        196,
                        197,
                        198,
                        224,
                        225,
                        226,
                        227,
                        240,
                        241,
                        242,
                        243,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        276,
                        277
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'upperCumulativeProbability(int)')": [
                        255,
                        256,
                        257,
                        258,
                        259
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'innerCumulativeProbability(int,int,int,int,int,int)')": [
                        278,
                        279
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java": {
                "old": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        32,
                        33,
                        38,
                        39,
                        40,
                        41,
                        43,
                        45,
                        46,
                        51,
                        56,
                        57,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        77,
                        78,
                        79,
                        80,
                        81
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31,
                        33,
                        34,
                        39,
                        40,
                        41,
                        42,
                        44,
                        46,
                        47,
                        52,
                        53,
                        54,
                        59,
                        60,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', None)": [
                        38,
                        47,
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', None)": [
                        38,
                        47,
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PascalDistribution.java": {
                "old": {
                    "(None, None)": [
                        45,
                        52,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        45,
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', None)": [
                        35,
                        36,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        48,
                        49,
                        52,
                        53,
                        54,
                        58,
                        59,
                        66,
                        67,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        122,
                        123,
                        124,
                        125,
                        127,
                        128,
                        129,
                        137,
                        139,
                        140,
                        141,
                        150,
                        151,
                        152,
                        154,
                        169,
                        170,
                        171,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        195,
                        196
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'setNumberOfSuccesses(int)')": [
                        81,
                        82
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'setNumberOfSuccessesInternal(int)')": [
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'setProbabilityOfSuccess(double)')": [
                        107,
                        108
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'setProbabilityOfSuccessInternal(double)')": [
                        116,
                        117,
                        118,
                        119,
                        120,
                        121
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', None)": [
                        36,
                        38,
                        39,
                        40,
                        41,
                        46,
                        47,
                        48,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        64,
                        71,
                        78,
                        80,
                        81,
                        82,
                        90,
                        92,
                        93,
                        94,
                        103,
                        104,
                        105,
                        106,
                        108,
                        123,
                        124,
                        125,
                        126,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        149,
                        150
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', None)": [
                        34,
                        35,
                        41,
                        46,
                        47,
                        48,
                        50,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        65,
                        66,
                        70,
                        77,
                        87,
                        88,
                        89,
                        105,
                        106,
                        116,
                        117,
                        125,
                        126,
                        127,
                        134,
                        135,
                        136,
                        137,
                        138,
                        155,
                        158,
                        159,
                        160,
                        161,
                        176,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        185,
                        187,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        209,
                        217,
                        221,
                        222,
                        230,
                        234,
                        235
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', None)": [
                        34,
                        44,
                        45,
                        48,
                        49,
                        50,
                        57,
                        61,
                        68,
                        78,
                        79,
                        80,
                        81,
                        97,
                        98,
                        108,
                        109,
                        117,
                        124,
                        125,
                        126,
                        127,
                        144,
                        147,
                        148,
                        149,
                        150,
                        165,
                        167,
                        168,
                        169,
                        170,
                        172,
                        174,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        201,
                        209,
                        213,
                        214,
                        222,
                        226,
                        227
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#TDistributionImpl', None)": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#TDistributionImpl', None)": [
                        45
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', None)": [
                        35,
                        36,
                        37,
                        41,
                        44,
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', None)": [
                        35,
                        36,
                        37,
                        41,
                        44,
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ZipfDistribution.java": {
                "old": {
                    "(None, None)": [
                        33,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        22,
                        213
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', None)": [
                        33,
                        36,
                        38,
                        39,
                        41,
                        45,
                        46,
                        48,
                        49,
                        50,
                        52,
                        53,
                        54,
                        55,
                        59,
                        60,
                        61,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        107,
                        108,
                        109,
                        111,
                        112,
                        113,
                        114,
                        115,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        149,
                        153,
                        155,
                        156,
                        167,
                        171,
                        174,
                        175,
                        176,
                        184,
                        187,
                        188,
                        189,
                        196,
                        202,
                        203,
                        204
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'setNumberOfElements(int)')": [
                        77,
                        78
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'setNumberOfElementsInternal(int)')": [
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'setExponent(double)')": [
                        116,
                        117
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'setExponentInternal(double)')": [
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', None)": [
                        36,
                        38,
                        42,
                        44,
                        45,
                        46,
                        47,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        65,
                        72,
                        79,
                        81,
                        82,
                        93,
                        94,
                        96,
                        97,
                        111,
                        114,
                        115,
                        123,
                        126,
                        127,
                        139,
                        140,
                        141
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java": {
                "new": {
                    "(None, None)": [
                        122,
                        154,
                        156,
                        184,
                        195
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#HypergeometricDistributionTest', 'testPopulationSize')": [
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionTest', 'testPreconditions')": [
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionTest', None)": [
                        162,
                        163,
                        164,
                        165,
                        166
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionTest', 'testAccessors')": [
                        167,
                        168,
                        169,
                        170,
                        171
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/ZipfDistributionTest.java": {
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionTest', None)": [
                        32,
                        33,
                        45,
                        46,
                        47
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionTest', 'testPreconditions')": [
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44
                    ]
                }
            }
        }
    },
    "5321415bc5e6fe2fc3b6a68f53447a72050d407f": {
        "authored_data": "2010 Oct 01 02:03",
        "commit.message": "Unthrown Exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003355 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "2d1d3187ecdeda8e9c4a0c7bf4fd2cdd2a5a68c2",
        "changes": {
            "src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolatingFunctionTest', 'testPreconditions')": [
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolatingFunctionTest', 'testPreconditions')": [
                        36
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/BetaDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#BetaDistributionTest', 'testDensity')": [
                        153
                    ],
                    "('org.apache.commons.math.distribution#BetaDistributionTest', 'checkDensity(double,double,double,double)')": [
                        283
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#BetaDistributionTest', 'testDensity')": [
                        153
                    ],
                    "('org.apache.commons.math.distribution#BetaDistributionTest', 'checkDensity(double,double,double,double)')": [
                        283
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testTrivial')": [
                        104
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testNoOptimum')": [
                        142
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testTrivial')": [
                        104
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testNoOptimum')": [
                        142
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizerTest', 'testRosenbrock')": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizerTest', 'testRosenbrock')": [
                        36
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/MultiDirectionalTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        24
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalTest', 'testMinimizeMaximize')": [
                        72
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalTest', 'testRosenbrock')": [
                        133
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalTest', 'testPowell')": [
                        165
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalTest', 'testMath283')": [
                        195
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalTest', 'testMinimizeMaximize')": [
                        70
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalTest', 'testRosenbrock')": [
                        131
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalTest', 'testPowell')": [
                        163
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalTest', 'testMath283')": [
                        193
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/fitting/CurveFitterTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath303')": [
                        31
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath304')": [
                        55
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath372')": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath303')": [
                        30
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath304')": [
                        54
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath372')": [
                        77
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        34
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTrivial')": [
                        107
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testColumnsPermutation')": [
                        120
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNoDependency')": [
                        138
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testOneSet')": [
                        158
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTwoSets')": [
                        177
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNonInversible')": [
                        216
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testIllConditioned')": [
                        232
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        270
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        289
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testRedundantEquations')": [
                        306
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testInconsistentEquations')": [
                        324
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testCircleFitting')": [
                        341
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTrivial')": [
                        106
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testColumnsPermutation')": [
                        119
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNoDependency')": [
                        137
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testOneSet')": [
                        157
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTwoSets')": [
                        176
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNonInversible')": [
                        215
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testIllConditioned')": [
                        231
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        269
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        288
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testRedundantEquations')": [
                        305
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testInconsistentEquations')": [
                        323
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testCircleFitting')": [
                        340
                    ]
                }
            }
        }
    },
    "2d1d3187ecdeda8e9c4a0c7bf4fd2cdd2a5a68c2": {
        "authored_data": "2010 Oct 01 01:57",
        "commit.message": "Unused imports\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003354 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "948d7b2b3a7ffcdee99879d2d2dac624a05d97c8",
        "changes": {
            "src/test/java/org/apache/commons/math/optimization/direct/NelderMeadTest.java": {
                "old": {
                    "(None, None)": [
                        35
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23
                    ]
                }
            }
        }
    },
    "948d7b2b3a7ffcdee99879d2d2dac624a05d97c8": {
        "authored_data": "2010 Oct 01 01:56",
        "commit.message": "Unused imports\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003353 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "84e3a4787c87a62351a68fa2dc6b1b624ccd20ab",
        "changes": {
            "src/test/java/org/apache/commons/math/distribution/CauchyDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/WeibullDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                }
            }
        }
    },
    "84e3a4787c87a62351a68fa2dc6b1b624ccd20ab": {
        "authored_data": "2010 Oct 01 01:55",
        "commit.message": "Javadoc fixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003352 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "5fb05a5e37da0113df6ccd046f581b261abd1282",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', None)": [
                        77,
                        79,
                        83,
                        91,
                        98
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', None)": [
                        77,
                        79,
                        83,
                        91,
                        98
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateVectorialOptimizer', None)": [
                        76,
                        78,
                        82,
                        91,
                        98
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateVectorialOptimizer', None)": [
                        76,
                        78,
                        82,
                        91,
                        98
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', None)": [
                        109,
                        111,
                        114,
                        124,
                        131
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', None)": [
                        109,
                        111,
                        114,
                        124,
                        131
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java": {
                "old": {
                    "('org.apache.commons.math.util#MultidimensionalCounter', None)": [
                        151
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MultidimensionalCounter', None)": [
                        151
                    ]
                }
            }
        }
    },
    "5fb05a5e37da0113df6ccd046f581b261abd1282": {
        "authored_data": "2010 Oct 01 01:50",
        "commit.message": "Add missing @Override marker\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003351 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "93cbe581569afa5d18974ad5e7838bc6dfe19b7e",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java": {
                "new": {
                    "('org.apache.commons.math.analysis.interpolation#SmoothingPolynomialBicubicSplineInterpolator', None)": [
                        73
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/dfp/DfpDec.java": {
                "new": {
                    "('org.apache.commons.math.dfp#DfpDec', None)": [
                        97,
                        103,
                        109,
                        115,
                        121,
                        127,
                        143,
                        149,
                        164,
                        292
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/util/DummyLocalizable.java": {
                "new": {
                    "('org.apache.commons.math.exception.util#DummyLocalizable', None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/SimpleRealPointChecker.java": {
                "new": {
                    "('org.apache.commons.math.optimization#SimpleRealPointChecker', None)": [
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java": {
                "new": {
                    "('org.apache.commons.math.optimization#SimpleScalarValueChecker', None)": [
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/SimpleVectorialPointChecker.java": {
                "new": {
                    "('org.apache.commons.math.optimization#SimpleVectorialPointChecker', None)": [
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/SimpleVectorialValueChecker.java": {
                "new": {
                    "('org.apache.commons.math.optimization#SimpleVectorialValueChecker', None)": [
                        72
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java": {
                "new": {
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', None)": [
                        194
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "new": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        235
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java": {
                "new": {
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', None)": [
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java": {
                "new": {
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizer', None)": [
                        88
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/AbstractWell.java": {
                "new": {
                    "('org.apache.commons.math.random#AbstractWell', None)": [
                        140,
                        151,
                        177,
                        183
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/Well1024a.java": {
                "new": {
                    "('org.apache.commons.math.random#Well1024a', None)": [
                        83
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/Well19937a.java": {
                "new": {
                    "('org.apache.commons.math.random#Well19937a', None)": [
                        83
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/Well19937c.java": {
                "new": {
                    "('org.apache.commons.math.random#Well19937c', None)": [
                        83
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/Well44497a.java": {
                "new": {
                    "('org.apache.commons.math.random#Well44497a', None)": [
                        83
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/Well44497b.java": {
                "new": {
                    "('org.apache.commons.math.random#Well44497b', None)": [
                        83
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/Well512a.java": {
                "new": {
                    "('org.apache.commons.math.random#Well512a', None)": [
                        83
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java": {
                "new": {
                    "('org.apache.commons.math.util#MultidimensionalCounter', None)": [
                        295
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/dfp/Decimal10.java": {
                "new": {
                    "('org.apache.commons.math.dfp#Decimal10', None)": [
                        54,
                        59,
                        64,
                        69,
                        74,
                        79,
                        84,
                        89,
                        94
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/stat/descriptive/summary/ProductTest.java": {
                "new": {
                    "('org.apache.commons.math.stat.descriptive.summary#ProductTest', None)": [
                        88
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/stat/descriptive/summary/SumLogTest.java": {
                "new": {
                    "('org.apache.commons.math.stat.descriptive.summary#SumLogTest', None)": [
                        84
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/stat/descriptive/summary/SumSqTest.java": {
                "new": {
                    "('org.apache.commons.math.stat.descriptive.summary#SumSqTest', None)": [
                        70
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/stat/descriptive/summary/SumTest.java": {
                "new": {
                    "('org.apache.commons.math.stat.descriptive.summary#SumTest', None)": [
                        78
                    ]
                }
            }
        }
    },
    "93cbe581569afa5d18974ad5e7838bc6dfe19b7e": {
        "authored_data": "2010 Oct 01 01:46",
        "commit.message": "Unnecessary to cast byte into byte\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003350 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "60c7078ca3457664a2eae739288ce0d1b3ae6e1b",
        "changes": {
            "src/test/java/org/apache/commons/math/dfp/DfpTest.java": {
                "old": {
                    "('org.apache.commons.math.dfp#DfpTest', 'testToString')": [
                        1174,
                        1175
                    ],
                    "('org.apache.commons.math.dfp#DfpTest', 'testSqrt')": [
                        1498,
                        1502
                    ]
                },
                "new": {
                    "('org.apache.commons.math.dfp#DfpTest', 'testToString')": [
                        1174,
                        1175
                    ],
                    "('org.apache.commons.math.dfp#DfpTest', 'testSqrt')": [
                        1498,
                        1502
                    ]
                }
            }
        }
    },
    "60c7078ca3457664a2eae739288ce0d1b3ae6e1b": {
        "authored_data": "2010 Oct 01 01:40",
        "commit.message": "Unnecessary to cast byte into byte\nAdd missing @Override marker\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003349 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "955b3692b7c82103230e591f6521dc5c0690842a",
        "changes": {
            "src/main/java/org/apache/commons/math/dfp/Dfp.java": {
                "old": {
                    "('org.apache.commons.math.dfp#Dfp', None)": [
                        347,
                        353,
                        359
                    ]
                },
                "new": {
                    "('org.apache.commons.math.dfp#Dfp', None)": [
                        347,
                        353,
                        359,
                        1952
                    ]
                }
            }
        }
    }
}