{
    "1607b9c7ed42e72f3a5877842deee7d2ae88051e": {
        "authored_data": "2011 Sep 08 09:56",
        "commit.message": "Wrong place-holder.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1166594 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "c004c9daea8983fd92df9cea63be08b03251e966",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java": {
                "old": {
                    "(None, None)": [
                        189
                    ]
                },
                "new": {
                    "(None, None)": [
                        189
                    ]
                }
            }
        }
    },
    "c004c9daea8983fd92df9cea63be08b03251e966": {
        "authored_data": "2011 Sep 08 05:59",
        "commit.message": "Removed call to double[][] solve(double[][]) from initializeHighOrderDerivatives.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1166533 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "5ec76b26fab897bc78a499f5cf2f448faa4328cb",
        "changes": {
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdamsNordsieckTransformer.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsNordsieckTransformer', 'initializeHighOrderDerivatives(double,double,double,double)')": [
                        292
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsNordsieckTransformer', None)": [
                        293
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsNordsieckTransformer', 'initializeHighOrderDerivatives(double,double,double,double)')": [
                        293,
                        294
                    ]
                }
            }
        }
    },
    "5ec76b26fab897bc78a499f5cf2f448faa4328cb": {
        "authored_data": "2011 Sep 08 03:24",
        "commit.message": "Removed call to double[][] solve(double[][]) from interface DecompositionSolver.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1166516 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "102473af94e01de80846557cbac8330b9fdb5a75",
        "changes": {
            "src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#SingularValueSolverTest', 'testSolve')": [
                        101,
                        102,
                        103
                    ]
                }
            }
        }
    },
    "102473af94e01de80846557cbac8330b9fdb5a75": {
        "authored_data": "2011 Sep 08 03:24",
        "commit.message": "Removed call to double[][] solve(double[][]) from interface DecompositionSolver.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1166515 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "0eac3c014cc04cb49bd3cc99002576c8583474bd",
        "changes": {
            "src/test/java/org/apache/commons/math/linear/QRSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRSolverTest', 'testSolve')": [
                        127,
                        128,
                        129
                    ]
                }
            }
        }
    },
    "0eac3c014cc04cb49bd3cc99002576c8583474bd": {
        "authored_data": "2011 Sep 08 03:23",
        "commit.message": "Removed call to double[][] solve(double[][]) from interface DecompositionSolver.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1166514 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "0cf42e9ae0b40ccc43990cab0b8e87aeff82db34",
        "changes": {
            "src/test/java/org/apache/commons/math/linear/LUSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#LUSolverTest', 'testSolve')": [
                        140,
                        141,
                        142
                    ]
                }
            }
        }
    },
    "0cf42e9ae0b40ccc43990cab0b8e87aeff82db34": {
        "authored_data": "2011 Sep 08 03:23",
        "commit.message": "Removed call to double[][] solve(double[][]) from interface DecompositionSolver.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1166513 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "a2f25ddb6e5c509b7d6e47be7c143958c4a4ad8a",
        "changes": {
            "src/test/java/org/apache/commons/math/linear/EigenSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#EigenSolverTest', 'testSolve')": [
                        123,
                        124,
                        125,
                        126
                    ]
                }
            }
        }
    },
    "a2f25ddb6e5c509b7d6e47be7c143958c4a4ad8a": {
        "authored_data": "2011 Sep 08 03:22",
        "commit.message": "Removed call to double[][] solve(double[][]) from interface DecompositionSolver.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1166512 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "aeb0f8329e0949de7efa169c644d8389ab59d299",
        "changes": {
            "src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#CholeskySolverTest', 'testSolve')": [
                        84,
                        85,
                        86
                    ]
                }
            }
        }
    },
    "aeb0f8329e0949de7efa169c644d8389ab59d299": {
        "authored_data": "2011 Sep 07 22:05",
        "commit.message": "MATH 650 FastMath has static code which slows the first access to FastMath\nEnclose each large data table in nested static class so it's only loaded on first access\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1166437 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "4107ac1db878bcf7f952e17beed187c54430f7ad",
        "changes": {
            "src/main/java/org/apache/commons/math/util/FastMath.java": {
                "old": {
                    "('org.apache.commons.math.util#FastMath', None)": [
                        6465,
                        6466,
                        6471,
                        6472,
                        6477,
                        6479,
                        6480,
                        6484,
                        6486
                    ],
                    "('org.apache.commons.math.util#FastMath', 'main(String)')": [
                        6496,
                        6497,
                        6498,
                        6499,
                        6500
                    ],
                    "('org.apache.commons.math.util#FastMath', 'exp(double,double,double)')": [
                        7060,
                        7061,
                        7075,
                        7076,
                        7084,
                        7085
                    ],
                    "('org.apache.commons.math.util#FastMath', 'expm1(double,double)')": [
                        7180,
                        7181
                    ],
                    "('org.apache.commons.math.util#FastMath', 'log(double,double)')": [
                        7648
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#FastMath', None)": [
                        79,
                        80,
                        81,
                        3096,
                        3100,
                        3101,
                        3102,
                        5168,
                        5199,
                        5200,
                        5201,
                        6230,
                        6477,
                        6478,
                        6483,
                        6484,
                        6489,
                        6491,
                        6492,
                        6496,
                        6498
                    ],
                    "('org.apache.commons.math.util#FastMath', 'main(String)')": [
                        6508,
                        6509,
                        6510,
                        6511,
                        6512
                    ],
                    "('org.apache.commons.math.util#FastMath', 'exp(double,double,double)')": [
                        7072,
                        7073,
                        7087,
                        7088,
                        7096,
                        7097
                    ],
                    "('org.apache.commons.math.util#FastMath', 'expm1(double,double)')": [
                        7192,
                        7193
                    ],
                    "('org.apache.commons.math.util#FastMath', 'log(double,double)')": [
                        7660
                    ]
                }
            }
        }
    },
    "4107ac1db878bcf7f952e17beed187c54430f7ad": {
        "authored_data": "2011 Sep 07 18:48",
        "commit.message": "Removed completely MathUserException.\n\nJIRA: MATH-195\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1166311 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "22072e006056afc56bb524b5352511949cc4ca82",
        "changes": {
            "src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        87,
                        92,
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        78,
                        79,
                        88,
                        93,
                        96,
                        132,
                        133,
                        134
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', None)": [
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        23,
                        26,
                        27
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', None)": [
                        104
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', 'optimize(int,FUNC,GoalType,double)')": [
                        147,
                        156
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        25
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', None)": [
                        103
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', 'optimize(int,FUNC,GoalType,double)')": [
                        146,
                        155
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        27,
                        28
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateVectorialOptimizer', 'optimize(int,FUNC,double,double,double)')": [
                        148,
                        158,
                        160,
                        161
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        26
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateVectorialOptimizer', 'optimize(int,FUNC,double,double,double)')": [
                        147,
                        157,
                        158,
                        159
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        54,
                        55
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java": {
                "old": {
                    "(None, None)": [
                        56,
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', 'value(double)')": [
                        153
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', 'value(double)')": [
                        152
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization.direct#AbstractSimplex', None)": [
                        205,
                        209,
                        245
                    ],
                    "('org.apache.commons.math.optimization.direct#AbstractSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        208
                    ],
                    "('org.apache.commons.math.optimization.direct#AbstractSimplex', 'evaluate(MultivariateRealFunction,Comparator)')": [
                        248,
                        249
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#AbstractSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        206
                    ],
                    "('org.apache.commons.math.optimization.direct#AbstractSimplex', 'evaluate(MultivariateRealFunction,Comparator)')": [
                        244
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', None)": [
                        96,
                        97,
                        154,
                        155
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', None)": [
                        98,
                        99,
                        156,
                        157
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        157,
                        158
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalSimplex', None)": [
                        195
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalSimplex', 'evaluateNewSimplex(MultivariateRealFunction,RealPointValuePair,double,Comparator)')": [
                        200,
                        201
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        156
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalSimplex', 'evaluateNewSimplex(MultivariateRealFunction,RealPointValuePair,double,Comparator)')": [
                        197
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization.direct#NelderMeadSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        189,
                        190
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#NelderMeadSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        188
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', None)": [
                        264,
                        265
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizer', 'doOptimize')": [
                        115,
                        124
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizer', 'doOptimize')": [
                        114,
                        123
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java": {
                "old": {
                    "('org.apache.commons.math.optimization.fitting#CurveFitter', None)": [
                        122,
                        123,
                        144,
                        145
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        106,
                        107,
                        183,
                        184,
                        219,
                        220
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', None)": [
                        66
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'computeObjectiveGradient(double)')": [
                        68,
                        69
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'optimize(int,DifferentiableMultivariateRealFunction,GoalType,double)')": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'computeObjectiveGradient(double)')": [
                        66
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'optimize(int,DifferentiableMultivariateRealFunction,GoalType,double)')": [
                        75
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java": {
                "old": {
                    "(None, None)": [
                        21,
                        29
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        100
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        98
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        273
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        272
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        246,
                        247
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', None)": [
                        94,
                        95,
                        161,
                        162
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        57,
                        58,
                        83,
                        84
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/BracketFinder.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', None)": [
                        112,
                        113,
                        281,
                        282
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', 'search(UnivariateRealFunction,GoalType,double,double)')": [
                        114,
                        115
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', 'eval(UnivariateRealFunction,double)')": [
                        283
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', None)": [
                        111,
                        278
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', 'search(UnivariateRealFunction,GoalType,double,double)')": [
                        112
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', 'eval(UnivariateRealFunction,double)')": [
                        279
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizer', 'doOptimize')": [
                        89
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizer', 'doOptimize')": [
                        88
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', None)": [
                        131
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', 'optimize(int,FUNC,GoalType,double,double,double)')": [
                        159,
                        168
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', None)": [
                        130
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', 'optimize(int,FUNC,GoalType,double,double,double)')": [
                        158,
                        167
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', None)": [
                        136
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testNoOptimum')": [
                        153
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', None)": [
                        135,
                        155,
                        156,
                        157,
                        158
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testNoOptimum')": [
                        152
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        24
                    ],
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizerTest', 'testRosenbrock')": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizerTest', 'testRosenbrock')": [
                        33
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/fitting/CurveFitterTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath303')": [
                        30,
                        31
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath304')": [
                        54,
                        55
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath372')": [
                        77,
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath303')": [
                        29
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath304')": [
                        52
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath372')": [
                        74
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        25,
                        33
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testTrivial')": [
                        105
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testColumnsPermutation')": [
                        120
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testNoDependency')": [
                        141
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testOneSet')": [
                        164
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testTwoSets')": [
                        185
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testIllConditioned')": [
                        228
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testRedundantEquations')": [
                        299
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentEquations')": [
                        318
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentSizes1')": [
                        334
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentSizes2')": [
                        353
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFitting')": [
                        389
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFittingBadInit')": [
                        412
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFittingGoodInit')": [
                        430
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testTrivial')": [
                        103
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testColumnsPermutation')": [
                        118
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testNoDependency')": [
                        139
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testOneSet')": [
                        162
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testTwoSets')": [
                        183
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testIllConditioned')": [
                        226
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testRedundantEquations')": [
                        297
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentEquations')": [
                        316
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentSizes1')": [
                        332
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentSizes2')": [
                        351
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFitting')": [
                        387
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFittingBadInit')": [
                        410
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFittingGoodInit')": [
                        428
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization.general#MinpackTest', 'minpackTest(MinpackFunction,boolean)')": [
                        522,
                        523
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testBadFunction')": [
                        82,
                        96
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testBadFunction')": [
                        81,
                        95
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', None)": [
                        102,
                        103,
                        104
                    ],
                    "(None, None)": [
                        105,
                        106
                    ]
                }
            }
        }
    },
    "22072e006056afc56bb524b5352511949cc4ca82": {
        "authored_data": "2011 Sep 07 10:34",
        "commit.message": "Added \"final\".\nMoved declaration of \"sum\" where it is used.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1166099 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "687cc21cb48a39514bc61a71927b9470060aab36",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#LUDecompositionImpl', None)": [
                        39,
                        41,
                        95,
                        96,
                        100,
                        112
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#LUDecompositionImpl', None)": [
                        39,
                        41,
                        98,
                        110
                    ]
                }
            }
        }
    }
}