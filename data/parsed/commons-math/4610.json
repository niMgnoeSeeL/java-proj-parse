{
    "08c4e822e575ed419d5b16e3a1ad364946fdd30d": {
        "authored_data": "2010 Oct 01 15:59",
        "commit.message": "Fix test failure\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003569 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "bba2526326133d771b6c0b1810af06d459ff2533",
        "changes": {
            "src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveBadEndpoints')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveBadEndpoints')": [
                        45
                    ]
                }
            }
        }
    },
    "bba2526326133d771b6c0b1810af06d459ff2533": {
        "authored_data": "2010 Oct 01 15:48",
        "commit.message": "Don't catch Exception and fail(); let JUnit handle it\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003567 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "9ceae1f8f198a736dd63ead16f9533efa5dc37c4",
        "changes": {
            "src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testInitialGuess')": [
                        366,
                        367
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/estimation/GaussNewtonEstimatorTest.java": {
                "old": {
                    "('org.apache.commons.math.estimation#GaussNewtonEstimatorTest', 'testNonInversible')": [
                        266,
                        267
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimatorTest', 'testMoreEstimatedParametersSimple')": [
                        351,
                        352
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimatorTest', 'testMoreEstimatedParametersUnsorted')": [
                        390,
                        391
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimatorTest', 'testMaxIterations')": [
                        498,
                        499
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimatorTest', 'testCircleFittingBadInit')": [
                        561,
                        562
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java": {
                "old": {
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimatorTest', 'testTrivial')": [
                        113,
                        114
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimatorTest', 'testNonInversible')": [
                        278,
                        279
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimatorTest', 'checkEstimate(EstimationProblem,double,int,double,double,double,boolean)')": [
                        489,
                        490
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/fraction/BigFractionTest.java": {
                "old": {
                    "('org.apache.commons.math.fraction#BigFractionTest', 'testGoldenRatio')": [
                        101,
                        102
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/fraction/FractionTest.java": {
                "old": {
                    "('org.apache.commons.math.fraction#FractionTest', 'testGoldenRatio')": [
                        76,
                        77
                    ],
                    "('org.apache.commons.math.fraction#FractionTest', 'checkIntegerOverflow(double)')": [
                        149,
                        150
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/geometry/RotationTest.java": {
                "old": {
                    "('org.apache.commons.math.geometry#RotationTest', 'testAxisAngle')": [
                        73,
                        74
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'testVectorOnePair')": [
                        110,
                        112,
                        113
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'testVectorTwoPairs')": [
                        153,
                        154
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'testMatrix')": [
                        170,
                        171,
                        183,
                        184,
                        196,
                        197,
                        306,
                        307
                    ],
                    "('org.apache.commons.math.geometry#RotationTest', 'testSingularities')": [
                        372,
                        373,
                        392,
                        393
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry#RotationTest', None)": [
                        108
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/geometry/Vector3DTest.java": {
                "old": {
                    "('org.apache.commons.math.geometry#Vector3DTest', 'testNormalize')": [
                        184,
                        185
                    ],
                    "('org.apache.commons.math.geometry#Vector3DTest', 'testOrthogonal')": [
                        201,
                        202
                    ],
                    "('org.apache.commons.math.geometry#Vector3DTest', 'testAngle')": [
                        221,
                        222
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayFieldVectorTest', 'testConstructors')": [
                        280,
                        281,
                        300,
                        301
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVectorTest', 'testDataInOut')": [
                        375,
                        376,
                        387,
                        388,
                        400,
                        401,
                        413,
                        414,
                        426,
                        427
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVectorTest', 'testMisc')": [
                        584,
                        585,
                        593,
                        594,
                        602,
                        603
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayRealVectorTest', 'testConstructors')": [
                        541,
                        542,
                        561,
                        562,
                        619,
                        620,
                        628,
                        629
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVectorTest', 'testDataInOut')": [
                        683,
                        684,
                        695,
                        696,
                        708,
                        709,
                        721,
                        722,
                        734,
                        735
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVectorTest', 'testBasicFunctions')": [
                        1199,
                        1200,
                        1211,
                        1212
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVectorTest', 'testMisc')": [
                        1246,
                        1247,
                        1255,
                        1256,
                        1264,
                        1265
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#CholeskySolverTest', 'testSolveDimensionErrors')": [
                        48,
                        49,
                        56,
                        57,
                        64,
                        65
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/EigenSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#EigenSolverTest', 'testNonInvertible')": [
                        47,
                        48
                    ],
                    "('org.apache.commons.math.linear#EigenSolverTest', 'testSolveDimensionErrors')": [
                        74,
                        75,
                        82,
                        83,
                        90,
                        91
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/FieldLUDecompositionImplTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testNonSquare')": [
                        82,
                        83
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/LUDecompositionImplTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#LUDecompositionImplTest', 'testNonSquare')": [
                        79,
                        80
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/LUSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#LUSolverTest', 'testSolveDimensionErrors')": [
                        82,
                        83,
                        90,
                        91,
                        98,
                        99
                    ],
                    "('org.apache.commons.math.linear#LUSolverTest', 'testSolveSingularityErrors')": [
                        113,
                        114,
                        121,
                        122,
                        129,
                        130,
                        137,
                        138
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/QRSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRSolverTest', 'testSolveDimensionErrors')": [
                        81,
                        82,
                        89,
                        90,
                        97,
                        98
                    ],
                    "('org.apache.commons.math.linear#QRSolverTest', 'testSolveRankErrors')": [
                        112,
                        113,
                        120,
                        121,
                        128,
                        129
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealVectorFormatAbstractTest', 'testParseNoComponents')": [
                        339,
                        340
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/SingularValueSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#SingularValueSolverTest', 'testSolveDimensionErrors')": [
                        43,
                        44,
                        51,
                        52,
                        59,
                        60
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/SparseFieldVectorTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseFieldVectorTest', 'testMisc')": [
                        181,
                        182
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testConstructors')": [
                        585,
                        586
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testDataInOut')": [
                        644,
                        645,
                        656,
                        657,
                        669,
                        670,
                        682,
                        683,
                        695,
                        696
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testBasicFunctions')": [
                        1132,
                        1133,
                        1144,
                        1145
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testMisc')": [
                        1168,
                        1169
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/TriDiagonalTransformerTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#TriDiagonalTransformerTest', 'testNonSquare')": [
                        52,
                        53
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testWrongDerivative')": [
                        46,
                        47,
                        80,
                        81
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', None)": [
                        82,
                        240,
                        241,
                        242,
                        243,
                        344
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testEventsErrors')": [
                        200,
                        238,
                        239
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testEventsNoConvergence')": [
                        244,
                        280,
                        281
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testSanityChecks')": [
                        286,
                        287,
                        342,
                        343
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testWrongDerivative')": [
                        46
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testEventsErrors')": [
                        196
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', None)": [
                        234,
                        235,
                        236,
                        237
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testEventsNoConvergence')": [
                        238
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testSanityChecks')": [
                        278
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', 'testImpossibleSerialization')": [
                        125,
                        126
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/MultiDirectionalTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalTest', 'testFunctionEvaluationExceptions')": [
                        53,
                        54,
                        63,
                        64
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/NelderMeadTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#NelderMeadTest', 'testFunctionEvaluationExceptions')": [
                        61,
                        62,
                        71,
                        72
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testNonInversible')": [
                        209,
                        224,
                        225
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        265,
                        282,
                        283
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', None)": [
                        284,
                        285,
                        286,
                        287,
                        377,
                        378,
                        379,
                        380
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        288,
                        305,
                        306
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentSizes')": [
                        364,
                        365,
                        375,
                        376
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testMaxEvaluations')": [
                        381,
                        398,
                        399
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFittingBadInit')": [
                        472,
                        473
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testNonInversible')": [
                        209
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        263
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', None)": [
                        280,
                        281,
                        282,
                        283,
                        367,
                        368,
                        369,
                        370
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        284
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testMaxEvaluations')": [
                        371
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTrivial')": [
                        122,
                        123
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNonInversible')": [
                        221,
                        222
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentSizes')": [
                        339,
                        340,
                        350,
                        351
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'checkEstimate(DifferentiableMultivariateVectorialFunction,double,int,double,double,double,boolean)')": [
                        388,
                        389
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testSinMin')": [
                        54,
                        55
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testQuinticMax')": [
                        116,
                        117
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', 'testNexFail')": [
                        138,
                        139
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', 'testLoadNullDoubleArray')": [
                        191,
                        192
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', 'testLoadNullURL')": [
                        203,
                        204
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', 'testLoadNullFile')": [
                        215,
                        216
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/RandomDataTest.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextPoisson')": [
                        212,
                        213,
                        214,
                        215,
                        216
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextPoisson')": [
                        212
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/ValueServerTest.java": {
                "old": {
                    "('org.apache.commons.math.random#ValueServerTest', 'setUp')": [
                        42,
                        43,
                        44,
                        45,
                        46
                    ],
                    "('org.apache.commons.math.random#ValueServerTest', None)": [
                        47
                    ],
                    "('org.apache.commons.math.random#ValueServerTest', 'testEmptyReplayFile')": [
                        95,
                        104,
                        105
                    ],
                    "('org.apache.commons.math.random#ValueServerTest', 'testEmptyDigestFile')": [
                        109,
                        118,
                        119
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#ValueServerTest', 'setUp')": [
                        42,
                        43
                    ],
                    "('org.apache.commons.math.random#ValueServerTest', 'testEmptyReplayFile')": [
                        91
                    ],
                    "('org.apache.commons.math.random#ValueServerTest', 'testEmptyDigestFile')": [
                        103
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/stat/descriptive/DescriptiveStatisticsTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatisticsTest', 'testWindowSize')": [
                        75,
                        76
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatisticsTest', 'testDimension')": [
                        179,
                        180
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovarianceTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#VectorialCovarianceTest', 'testMismatch')": [
                        41,
                        42
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/stat/descriptive/moment/VectorialMeanTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#VectorialMeanTest', 'testMismatch')": [
                        40,
                        41
                    ]
                }
            }
        }
    },
    "9ceae1f8f198a736dd63ead16f9533efa5dc37c4": {
        "authored_data": "2010 Oct 01 15:41",
        "commit.message": "Narrow expected exception\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003566 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "5ca553511dea61641f248f71be203b91f1682e95",
        "changes": {
            "src/test/java/org/apache/commons/math/stat/StatUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math.stat#StatUtilsTest', 'testArrayIndexConditions')": [
                        100,
                        101,
                        102,
                        107,
                        108,
                        109
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat#StatUtilsTest', 'testArrayIndexConditions')": [
                        100,
                        101,
                        102,
                        107
                    ],
                    "('org.apache.commons.math.stat#StatUtilsTest', None)": [
                        108,
                        109
                    ]
                }
            }
        }
    },
    "5ca553511dea61641f248f71be203b91f1682e95": {
        "authored_data": "2010 Oct 01 14:54",
        "commit.message": "Split multiple tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003549 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "82cbcdc3a0ae55f80ae8950c5353cd9f020921af",
        "changes": {
            "src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveBadParameters')": [
                        43
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBadParameters')": [
                        102
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveBadEndpoints')": [
                        43
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', None)": [
                        50,
                        51,
                        112,
                        113,
                        121,
                        122,
                        130,
                        131
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveBadAccuracy')": [
                        52
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testNullFunction')": [
                        105
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBadInitial')": [
                        114
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBadEndpoints')": [
                        123
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBadMaximumIterations')": [
                        132
                    ]
                }
            }
        }
    },
    "82cbcdc3a0ae55f80ae8950c5353cd9f020921af": {
        "authored_data": "2010 Oct 01 14:35",
        "commit.message": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003547 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "cb1c8dc9862aba08edcc97de7765a70b021567f9",
        "changes": {
            "src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', None)": [
                        51,
                        211
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', None)": [
                        51,
                        211
                    ]
                }
            }
        }
    },
    "cb1c8dc9862aba08edcc97de7765a70b021567f9": {
        "authored_data": "2010 Oct 01 14:28",
        "commit.message": "Oops, should not have added fail here\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003545 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "5e5ba778cbf359e965f3c5a5c37093a63868fc18",
        "changes": {
            "src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java": {
                "old": {
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'checkAppendError(ContinuousOutputModel,double,double,double)')": [
                        162,
                        164,
                        165,
                        167
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'checkAppendError(ContinuousOutputModel,double,double,double)')": [
                        163,
                        165
                    ]
                }
            }
        }
    },
    "5e5ba778cbf359e965f3c5a5c37093a63868fc18": {
        "authored_data": "2010 Oct 01 14:08",
        "commit.message": "Add missing fail() calls for expected exceptions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003543 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "ab3b8618d6eac716d7f38b9ace101fefe2c3d6d8",
        "changes": {
            "src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java": {
                "new": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveBadParameters')": [
                        46,
                        52
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/fraction/BigFractionTest.java": {
                "old": {
                    "('org.apache.commons.math.fraction#BigFractionTest', 'testConstructorDouble')": [
                        235
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#BigFractionTest', 'testConstructor')": [
                        69,
                        75,
                        81,
                        87
                    ],
                    "('org.apache.commons.math.fraction#BigFractionTest', 'testConstructorDouble')": [
                        239
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/geometry/RotationTest.java": {
                "new": {
                    "('org.apache.commons.math.geometry#RotationTest', 'testMatrix')": [
                        167,
                        180,
                        193
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/LUDecompositionImplTest.java": {
                "new": {
                    "('org.apache.commons.math.linear#LUDecompositionImplTest', 'testNonSquare')": [
                        76
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java": {
                "new": {
                    "('org.apache.commons.math.linear#MatrixUtilsTest', 'testCreateIdentityMatrix')": [
                        288
                    ],
                    "('org.apache.commons.math.linear#MatrixUtilsTest', 'testcreateFieldIdentityMatrix')": [
                        315
                    ],
                    "('org.apache.commons.math.linear#MatrixUtilsTest', 'testCreateBigIdentityMatrix')": [
                        397
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java": {
                "new": {
                    "('org.apache.commons.math.linear#RealVectorFormatAbstractTest', 'testParseNoComponents')": [
                        336
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java": {
                "new": {
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'checkAppendError(ContinuousOutputModel,double,double,double)')": [
                        162
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatisticsTest.java": {
                "new": {
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatisticsTest', 'testDimension')": [
                        176
                    ]
                }
            }
        }
    },
    "ab3b8618d6eac716d7f38b9ace101fefe2c3d6d8": {
        "authored_data": "2010 Oct 01 13:42",
        "commit.message": "Remove unread variable\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003536 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "4ed729fc5945ce4dccbc7da01c748f3e7310a878",
        "changes": {
            "src/test/java/org/apache/commons/math/distribution/CauchyDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#CauchyDistributionTest', 'testPreconditions')": [
                        97,
                        99,
                        105
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#CauchyDistributionTest', 'testPreconditions')": [
                        98,
                        104
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/FDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#FDistributionTest', 'testPreconditions')": [
                        95,
                        97,
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#FDistributionTest', 'testPreconditions')": [
                        96,
                        102
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/GammaDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#GammaDistributionTest', 'testPreconditions')": [
                        84,
                        90
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#GammaDistributionTest', 'testPreconditions')": [
                        84,
                        90
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#HypergeometricDistributionTest', 'testPreconditions')": [
                        134,
                        135,
                        136,
                        142,
                        148,
                        154,
                        160
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#HypergeometricDistributionTest', 'testPreconditions')": [
                        134,
                        135,
                        141,
                        147,
                        153,
                        159
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/TDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#TDistributionTest', 'testPreconditions')": [
                        115
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#TDistributionTest', 'testPreconditions')": [
                        115
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/ZipfDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ZipfDistributionTest', 'testPreconditions')": [
                        35,
                        37,
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#ZipfDistributionTest', 'testPreconditions')": [
                        36,
                        42
                    ]
                }
            }
        }
    },
    "4ed729fc5945ce4dccbc7da01c748f3e7310a878": {
        "authored_data": "2010 Oct 01 13:42",
        "commit.message": "Need to call fail() if we don't generate an Exception\nRemove unread variable\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003534 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "9dd76438e28bd74f5bde028b1ca2979be13903d7",
        "changes": {
            "src/test/java/org/apache/commons/math/distribution/ExponentialDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ExponentialDistributionTest', 'testPreconditions')": [
                        119
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#ExponentialDistributionTest', 'testPreconditions')": [
                        119,
                        120
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'testPreconditions')": [
                        131
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'testPreconditions')": [
                        131,
                        132
                    ]
                }
            }
        }
    },
    "9dd76438e28bd74f5bde028b1ca2979be13903d7": {
        "authored_data": "2010 Oct 01 13:35",
        "commit.message": "Unnecessary cast\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1003533 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "33c7928ebdfaac1a66e8a94d0c7753d7d91e7592",
        "changes": {
            "src/test/java/org/apache/commons/math/stat/regression/MultipleLinearRegressionAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#MultipleLinearRegressionAbstractTest', 'testNewSample')": [
                        88
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.regression#MultipleLinearRegressionAbstractTest', 'testNewSample')": [
                        88
                    ]
                }
            }
        }
    }
}