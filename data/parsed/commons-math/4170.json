{
    "e401d4ac0696c2dc62aa960044d9fd07bfc01ef9": {
        "authored_data": "2011 May 15 15:00",
        "commit.message": "add a retry feature for randomly failing CMA-ES optimizer test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1103418 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "e12caa8de164261e29b4d0c045e6aad6cf28a0e6",
        "changes": {
            "src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java": {
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        37,
                        42
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', None)": [
                        137
                    ]
                }
            }
        }
    },
    "e12caa8de164261e29b4d0c045e6aad6cf28a0e6": {
        "authored_data": "2011 May 15 13:16",
        "commit.message": "specify the field to use for field vectors and field matrices when possible\nJIRA: MATH-573\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1103370 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "026fb14740430eb2249959134764b8a8ba8c54e8",
        "changes": {
            "src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#KolmogorovSmirnovDistributionImpl', 'createH(double)')": [
                        362
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.distribution#KolmogorovSmirnovDistributionImpl', 'createH(double)')": [
                        363
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'getRowVector(int)')": [
                        541
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'getColumnVector(int)')": [
                        560
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'operate(FieldVector)')": [
                        705,
                        722
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'preMultiply(FieldVector)')": [
                        750,
                        767
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'getRowVector(int)')": [
                        541
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'getColumnVector(int)')": [
                        560
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'operate(FieldVector)')": [
                        705,
                        722
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'preMultiply(FieldVector)')": [
                        750,
                        767
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'subtract(Array2DRowFieldMatrix)')": [
                        263
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'multiply(Array2DRowFieldMatrix)')": [
                        295
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'subtract(Array2DRowFieldMatrix)')": [
                        263
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'multiply(Array2DRowFieldMatrix)')": [
                        295
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'projection(T)')": [
                        654
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#ArrayFieldVector', None)": [
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'projection(T)')": [
                        677
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'getRowVector(int)')": [
                        988
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'getColumnVector(int)')": [
                        1020
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'getRowVector(int)')": [
                        988
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'getColumnVector(int)')": [
                        1020
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/FieldLUDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#FieldLUDecompositionImpl', None)": [
                        336,
                        349,
                        403
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#FieldLUDecompositionImpl', None)": [
                        336,
                        349,
                        403
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/MatrixUtils.java": {
                "old": {
                    "('org.apache.commons.math.linear#MatrixUtils', 'createFieldIdentityMatrix(Field,int)')": [
                        184
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'createFieldVector(T)')": [
                        250
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'createFieldIdentityMatrix(Field,int)')": [
                        185
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', None)": [
                        246
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'createFieldVector(T)')": [
                        252,
                        253,
                        254,
                        255
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayFieldVectorTest', 'testConstructors')": [
                        271,
                        275
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#ArrayFieldVectorTest', 'testConstructors')": [
                        271,
                        275
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/FieldLUDecompositionImplTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testDimensions')": [
                        59
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testPAEqualLU')": [
                        88,
                        95,
                        112,
                        119
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testLLowerTriangular')": [
                        131
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testUUpperTriangular')": [
                        144
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testPPermutation')": [
                        156
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testSingular')": [
                        213,
                        215,
                        217
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testMatricesValues1')": [
                        225,
                        226,
                        231,
                        236
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testMatricesValues2')": [
                        266,
                        267,
                        272,
                        277
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testDimensions')": [
                        59,
                        60
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testNonSquare')": [
                        75
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testPAEqualLU')": [
                        90,
                        97,
                        114,
                        121
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testLLowerTriangular')": [
                        133
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testUUpperTriangular')": [
                        146
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testPPermutation')": [
                        158
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testSingular')": [
                        215,
                        217,
                        219
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testMatricesValues1')": [
                        227,
                        228,
                        233,
                        238
                    ],
                    "('org.apache.commons.math.linear#FieldLUDecompositionImplTest', 'testMatricesValues2')": [
                        268,
                        269,
                        274,
                        279
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/MatrixUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#MatrixUtilsTest', 'testcreateFieldMatrix')": [
                        96
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#MatrixUtilsTest', 'testcreateFieldMatrix')": [
                        96
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/SparseFieldMatrixTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseFieldMatrixTest', 'testMultiply')": [
                        207
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SparseFieldMatrixTest', 'testMultiply')": [
                        207
                    ]
                }
            }
        }
    },
    "026fb14740430eb2249959134764b8a8ba8c54e8": {
        "authored_data": "2011 May 14 18:51",
        "commit.message": "Improved javadoc and added infinite/NaN argument tests for reduce.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1103182 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "3424131d52ca1ce4441ed7a390eb55ccb00c9321",
        "changes": {
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        1285,
                        1290
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        1285,
                        1286,
                        1287,
                        1288,
                        1289,
                        1290,
                        1291,
                        1292,
                        1297
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/util/MathUtilsTest.java": {
                "new": {
                    "('org.apache.commons.math.util#MathUtilsTest', 'testReduce')": [
                        1089,
                        1090,
                        1091,
                        1092,
                        1093,
                        1094,
                        1095,
                        1096,
                        1097,
                        1098,
                        1099,
                        1100,
                        1101,
                        1102,
                        1103,
                        1104,
                        1105,
                        1106
                    ]
                }
            }
        }
    },
    "3424131d52ca1ce4441ed7a390eb55ccb00c9321": {
        "authored_data": "2011 May 14 16:04",
        "commit.message": "Fixed javadoc typo.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1103142 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "ee37a5197c91aab79f4310ee9938ae46c717bafa",
        "changes": {
            "src/main/java/org/apache/commons/math/genetics/ListPopulation.java": {
                "old": {
                    "('org.apache.commons.math.genetics#ListPopulation', None)": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.math.genetics#ListPopulation', None)": [
                        38
                    ]
                }
            }
        }
    },
    "ee37a5197c91aab79f4310ee9938ae46c717bafa": {
        "authored_data": "2011 May 13 13:03",
        "commit.message": "MATH-574\nAllow outer product of vectors of different sizes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1102704 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "b8243cc1663e3d5bbda35eba3a322dc3dddf30f9",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'outerProduct(FieldVector)')": [
                        671,
                        673,
                        674,
                        675
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'outerProduct(T)')": [
                        695,
                        697,
                        698,
                        699
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'outerProduct(FieldVector)')": [
                        672,
                        673,
                        674,
                        675
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'outerProduct(T)')": [
                        696,
                        697,
                        698,
                        699
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/ArrayFieldVectorTest.java": {
                "new": {
                    "('org.apache.commons.math.linear#ArrayFieldVectorTest', None)": [
                        631,
                        652,
                        653
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVectorTest', 'testOuterProduct')": [
                        632,
                        633,
                        634,
                        635,
                        636,
                        637,
                        638,
                        639,
                        640,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651
                    ]
                }
            }
        }
    },
    "b8243cc1663e3d5bbda35eba3a322dc3dddf30f9": {
        "authored_data": "2011 May 12 15:49",
        "commit.message": "MATH-574\nAllow outer product for vectors of different sizes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1102356 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "716a7bb2dffbdc8f5d56d07435442cd8b011e4d4",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/ArrayRealVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayRealVector', 'outerProduct(RealVector)')": [
                        766,
                        768,
                        769,
                        770
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'outerProduct(double)')": [
                        792,
                        794,
                        795,
                        796
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#ArrayRealVector', 'outerProduct(RealVector)')": [
                        767,
                        768,
                        769,
                        770
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'outerProduct(double)')": [
                        793,
                        794,
                        795,
                        796
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java": {
                "new": {
                    "('org.apache.commons.math.linear#ArrayRealVectorTest', None)": [
                        1193,
                        1207,
                        1208
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVectorTest', 'testOuterProduct')": [
                        1194,
                        1195,
                        1196,
                        1197,
                        1198,
                        1199,
                        1200,
                        1201,
                        1202,
                        1203,
                        1204,
                        1205,
                        1206
                    ]
                }
            }
        }
    },
    "716a7bb2dffbdc8f5d56d07435442cd8b011e4d4": {
        "authored_data": "2011 May 12 10:07",
        "commit.message": "Class \"RandomAdaptorTest\" needlessly inherited from \"RandomDataTest\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1102229 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "45ec0d393fc2c7ad316ea2d264873a5f4e7e420e",
        "changes": {
            "src/test/java/org/apache/commons/math/random/RandomAdaptorTest.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomAdaptorTest', None)": [
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomAdaptorTest', None)": [
                        30
                    ]
                }
            }
        }
    },
    "45ec0d393fc2c7ad316ea2d264873a5f4e7e420e": {
        "authored_data": "2011 May 11 19:57",
        "commit.message": "Added field parameter on various constructors in Array2DRowFieldMatrix.\nJIRA: MATH-573\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1102057 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "35d78323b248501dd90bc40c4512a9b879c513c2",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', None)": [
                        87,
                        108,
                        140
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'copy')": [
                        157
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'add(Array2DRowFieldMatrix)')": [
                        184
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', None)": [
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'copy')": [
                        209
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'add(Array2DRowFieldMatrix)')": [
                        236
                    ]
                }
            }
        }
    },
    "35d78323b248501dd90bc40c4512a9b879c513c2": {
        "authored_data": "2011 May 11 06:57",
        "commit.message": "Avoid some remaining array copying in ArrayFieldVector, AbstractFieldMAtrix and AbstractRealMatrix.\nJIRA: MATH-573\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1101763 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "8ef3dd026948f251afb1b734b965c62d03d913ff",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'preMultiply(FieldVector)')": [
                        767
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'preMultiply(FieldVector)')": [
                        767
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'preMultiply(RealVector)')": [
                        696
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'preMultiply(RealVector)')": [
                        696
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'mapAdd(T)')": [
                        450
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'mapSubtract(T)')": [
                        467
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'mapMultiply(T)')": [
                        484
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'mapDivide(T)')": [
                        501
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'mapInv')": [
                        519
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'ebeMultiply(FieldVector)')": [
                        541
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'ebeMultiply(T)')": [
                        552
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'ebeDivide(FieldVector)')": [
                        575
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'ebeDivide(T)')": [
                        586
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'append(T)')": [
                        739
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'mapAdd(T)')": [
                        450
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'mapSubtract(T)')": [
                        467
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'mapMultiply(T)')": [
                        484
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'mapDivide(T)')": [
                        501
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'mapInv')": [
                        519
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'ebeMultiply(FieldVector)')": [
                        541
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'ebeMultiply(T)')": [
                        552
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'ebeDivide(FieldVector)')": [
                        575
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'ebeDivide(T)')": [
                        586
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'append(T)')": [
                        739
                    ]
                }
            }
        }
    },
    "8ef3dd026948f251afb1b734b965c62d03d913ff": {
        "authored_data": "2011 May 10 18:19",
        "commit.message": "Avoid some array copying in add and subtract ArrayFieldVector.\nJIRA: MATH-573\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1101579 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "d84695d151239d1425883c43364bc7c8170c29c0",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'add(FieldVector)')": [
                        386
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'add(T)')": [
                        397
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'subtract(FieldVector)')": [
                        420
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'subtract(T)')": [
                        431
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'add(FieldVector)')": [
                        386
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'add(T)')": [
                        397
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'subtract(FieldVector)')": [
                        420
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'subtract(T)')": [
                        431
                    ]
                }
            }
        }
    }
}