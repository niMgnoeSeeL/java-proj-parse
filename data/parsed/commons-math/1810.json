{
    "c5ae09d77e8756ab73e1c39f77f1b303aa4ba384": {
        "authored_data": "2014 Mar 17 15:14",
        "commit.message": "Improved brackting utility for univariate solvers.\n\nBracketing utility for univariate root solvers now returns a tighter\ninterval than before. It also allows choosing the search interval\nexpansion rate, supporting both linear and asymptotically exponential\nrates.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1578428 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "5929846a208518582a7783d8715c401ea1e2acf2",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtils.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.solvers#UnivariateSolverUtils', None)": [
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        198,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239
                    ],
                    "('org.apache.commons.math3.analysis.solvers#UnivariateSolverUtils', 'bracket(UnivariateFunction,double,double,double)')": [
                        218
                    ],
                    "('org.apache.commons.math3.analysis.solvers#UnivariateSolverUtils', 'bracket(UnivariateFunction,double,double,double,int)')": [
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis.solvers#UnivariateSolverUtils', None)": [
                        174,
                        175,
                        176,
                        182,
                        183,
                        207,
                        208,
                        209,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        355
                    ],
                    "('org.apache.commons.math3.analysis.solvers#UnivariateSolverUtils', 'bracket(UnivariateFunction,double,double,double)')": [
                        203
                    ],
                    "('org.apache.commons.math3.analysis.solvers#UnivariateSolverUtils', 'bracket(UnivariateFunction,double,double,double,int)')": [
                        230
                    ],
                    "('org.apache.commons.math3.analysis.solvers#UnivariateSolverUtils', 'bracket(UnivariateFunction,double,double,double,double,double,int)')": [
                        294,
                        295,
                        296,
                        297,
                        298,
                        302,
                        303,
                        304,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/analysis/solvers/UnivariateSolverUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.solvers#UnivariateSolverUtilsTest', None)": [
                        100,
                        105,
                        111
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math3.analysis.solvers#UnivariateSolverUtilsTest', 'testBracketCentered')": [
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97
                    ],
                    "('org.apache.commons.math3.analysis.solvers#UnivariateSolverUtilsTest', None)": [
                        98,
                        99,
                        100,
                        108,
                        109,
                        110,
                        118,
                        119,
                        120,
                        127,
                        128,
                        129,
                        138,
                        139,
                        140,
                        151,
                        156,
                        157,
                        160,
                        161,
                        162,
                        165,
                        166,
                        172
                    ],
                    "('org.apache.commons.math3.analysis.solvers#UnivariateSolverUtilsTest', 'testBracketLow')": [
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107
                    ],
                    "('org.apache.commons.math3.analysis.solvers#UnivariateSolverUtilsTest', 'testBracketHigh')": [
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117
                    ],
                    "('org.apache.commons.math3.analysis.solvers#UnivariateSolverUtilsTest', 'testBracketLinear')": [
                        121,
                        122,
                        123,
                        124,
                        125,
                        126
                    ],
                    "('org.apache.commons.math3.analysis.solvers#UnivariateSolverUtilsTest', 'testBracketExponential')": [
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137
                    ],
                    "('org.apache.commons.math3.analysis.solvers#UnivariateSolverUtilsTest', 'testBadAdditive')": [
                        158,
                        159
                    ],
                    "('org.apache.commons.math3.analysis.solvers#UnivariateSolverUtilsTest', 'testIterationExceeded')": [
                        163,
                        164
                    ]
                }
            }
        }
    },
    "5929846a208518582a7783d8715c401ea1e2acf2": {
        "authored_data": "2014 Mar 03 11:11",
        "commit.message": "Fixed failing test.\n\nAs functions evaluations were not counted properly, which has been fixed\na few days ago, the multi-start test in fact did not performed all\nexpected restarts. This commit fixes this (by increasing the max\nevaluations), and fixes the result checks accordingly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1573523 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "3f0a000feff036509963ff93d59fe3e084611c08",
        "changes": {
            "src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar#MultiStartMultivariateOptimizerTest', 'testCircleFitting')": [
                        58,
                        60,
                        65,
                        69,
                        70,
                        71,
                        72,
                        75,
                        76
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar#MultiStartMultivariateOptimizerTest', 'testRosenbrock')": [
                        96,
                        107
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar#MultiStartMultivariateOptimizerTest', 'testCircleFitting')": [
                        57,
                        59,
                        61,
                        66,
                        68,
                        70,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        80,
                        81
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar#MultiStartMultivariateOptimizerTest', 'testRosenbrock')": [
                        100,
                        102,
                        109,
                        114
                    ]
                }
            }
        }
    },
    "3f0a000feff036509963ff93d59fe3e084611c08": {
        "authored_data": "2014 Mar 03 09:58",
        "commit.message": "Prevent penalties to grow multiplicatively in CMAES.\n\nPatch provided by Bruce A Johnson.\n\nJIRA: MATH-1107\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1573506 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "007a701755f318562b0cbf2005d84299733d9b45",
        "changes": {
            "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#CMAESOptimizer', 'doOptimize')": [
                        380,
                        417,
                        506
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#CMAESOptimizer', None)": [
                        878,
                        879,
                        882,
                        883,
                        893,
                        901,
                        905,
                        906,
                        910,
                        930,
                        931,
                        932,
                        933,
                        934,
                        935,
                        936,
                        969
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#CMAESOptimizer', 'doOptimize')": [
                        380,
                        381,
                        398,
                        419,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#CMAESOptimizer', None)": [
                        836,
                        837,
                        838,
                        839,
                        840,
                        841,
                        854,
                        902,
                        903,
                        904,
                        905,
                        906,
                        907,
                        908,
                        909,
                        910,
                        911,
                        912,
                        913,
                        914,
                        915,
                        916,
                        917,
                        918,
                        919,
                        920,
                        924,
                        943,
                        945,
                        948,
                        949,
                        953,
                        954,
                        955,
                        1007
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#CMAESOptimizer', 'valueRange(ValuePenaltyPair)')": [
                        842,
                        843,
                        844,
                        845,
                        846,
                        847,
                        848,
                        849,
                        850,
                        851,
                        852,
                        853
                    ]
                }
            }
        }
    },
    "007a701755f318562b0cbf2005d84299733d9b45": {
        "authored_data": "2014 Mar 02 19:54",
        "commit.message": "Add SVD to GaussNewtonOptimizer\n\nAllow using the SVD decomposition which has excellent stability and can\nprovide a \"solution\" for singular problems.\n\nFigured out why one of the least squares tests did not check two of the\nstates. There was only one equation for the two states. The test now\nverifies the states satisfy the constraint.\n\nPatch provided by Evan Ward.\n\nJIRA: MATH-1104\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1573351 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "8068e84a33a5bbc5103f6541ae23e77d302842f9",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java": {
                "old": {
                    "(None, None)": [
                        37,
                        39,
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        38,
                        39,
                        41,
                        42,
                        43,
                        44
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', None)": [
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testMoreEstimatedParametersUnsorted')": [
                        306,
                        307
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testMoreEstimatedParametersUnsorted')": [
                        306,
                        307,
                        308,
                        309,
                        310,
                        311
                    ]
                }
            }
        }
    },
    "8068e84a33a5bbc5103f6541ae23e77d302842f9": {
        "authored_data": "2014 Mar 02 19:38",
        "commit.message": "MATH-1092\nJavadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1573341 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "b95cfc9b579e91a456847b2369295dfae7da8bc6",
        "changes": {
            "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/LineSearch.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar#LineSearch', None)": [
                        72,
                        73,
                        81,
                        83
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar#LineSearch', None)": [
                        72,
                        73,
                        81,
                        83
                    ]
                }
            }
        }
    },
    "b95cfc9b579e91a456847b2369295dfae7da8bc6": {
        "authored_data": "2014 Mar 02 14:54",
        "commit.message": "MATH-1092\nAdded parameter in \"LineSearch\" and \"NonLinearConjugateGradientOptimizer\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1573316 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "e2dc384d7bbe3414047049a67ca48b4885eba493",
        "changes": {
            "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/LineSearch.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar#LineSearch', None)": [
                        73,
                        75,
                        76,
                        80,
                        89
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar#LineSearch', 'search(double,double)')": [
                        112
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar#LineSearch', None)": [
                        58,
                        59,
                        60,
                        61,
                        62,
                        78,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        92,
                        93,
                        99,
                        103,
                        104
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar#LineSearch', 'search(double,double)')": [
                        127
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizer', None)": [
                        89,
                        140,
                        161,
                        162,
                        167,
                        183,
                        205,
                        206,
                        219
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizer', None)": [
                        89,
                        90,
                        91,
                        130,
                        143,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        174,
                        175,
                        180,
                        192,
                        203,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        226,
                        234,
                        235
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#PowellOptimizer', None)": [
                        130
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#PowellOptimizer', None)": [
                        130,
                        131
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/univariate/BracketFinder.java": {
                "old": {
                    "('org.apache.commons.math3.optim.univariate#BracketFinder', 'search(UnivariateFunction,GoalType,double,double)')": [
                        113
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.univariate#BracketFinder', 'search(UnivariateFunction,GoalType,double,double)')": [
                        113,
                        114,
                        115,
                        116
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testBoundsUnsupported')": [
                        108
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testTrivial')": [
                        125
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testColumnsPermutation')": [
                        148
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testNoDependency')": [
                        174
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testOneSet')": [
                        196
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testTwoSets')": [
                        238
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testNonInversible')": [
                        270
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testIllConditioned')": [
                        291
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        336
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        359
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testRedundantEquations')": [
                        380
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testInconsistentEquations')": [
                        403
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testCircleFitting')": [
                        425
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testBoundsUnsupported')": [
                        108
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testTrivial')": [
                        125
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testColumnsPermutation')": [
                        148
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testNoDependency')": [
                        174
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testOneSet')": [
                        196
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testTwoSets')": [
                        238
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testNonInversible')": [
                        270
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testIllConditioned')": [
                        291
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        336
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        359
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testRedundantEquations')": [
                        380
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testInconsistentEquations')": [
                        403
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testCircleFitting')": [
                        425
                    ]
                }
            }
        }
    },
    "e2dc384d7bbe3414047049a67ca48b4885eba493": {
        "authored_data": "2014 Mar 02 14:02",
        "commit.message": "Fix switched iterations and evaluations\n\nIn LevenbergMarquardtOptimizer the number of iterations and evaluations\nwas switched in two of the return statements.\n\nPatch provided by Evan Ward.\n\nJIRA: MATH-1106\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1573308 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "a6f963066692aabd04aad9114e6ea1ccb32cbb5c",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'optimize(LeastSquaresProblem)')": [
                        509,
                        530
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'optimize(LeastSquaresProblem)')": [
                        509,
                        530
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java": {
                "new": {
                    "(None, None)": [
                        25,
                        31,
                        39,
                        40
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizerTest', None)": [
                        271,
                        290,
                        291
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizerTest', 'testEvaluationCount')": [
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289
                    ]
                }
            }
        }
    },
    "a6f963066692aabd04aad9114e6ea1ccb32cbb5c": {
        "authored_data": "2014 Mar 02 14:02",
        "commit.message": "Fix checker seeing not old point\n\nConvergenceCheckers always saw previous.getPoint() to equal\ncurrent.getPoint() because the optimizers used the same array and did\nnot make a copy of the previous point. Fixed by using a new array for\neach model evaluation and LSP.evaluate() now makes its own copy of the\nstate vector as well.\n\nPath provided by Evan Ward.\n\nJIRA: MATH-1103\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1573307 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "5a8eff6985f294b5af93d7cee829b5cb4d7ad9dc",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'optimize(LeastSquaresProblem)')": [
                        200,
                        201,
                        202,
                        230,
                        231
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', None)": [
                        232
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'optimize(LeastSquaresProblem)')": [
                        200,
                        228
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', None)": [
                        335
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', None)": [
                        335,
                        336
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'optimize(LeastSquaresProblem)')": [
                        331,
                        448
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'optimize(LeastSquaresProblem)')": [
                        331,
                        448
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java": {
                "new": {
                    "(None, None)": [
                        24,
                        32,
                        41,
                        42,
                        43,
                        44
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', None)": [
                        534,
                        559,
                        560
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testPointCopy')": [
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTest.java": {
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTest', None)": [
                        202,
                        203
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTest', 'testEvaluateCopiesPoint')": [
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217
                    ],
                    "(None, None)": [
                        218,
                        219
                    ]
                }
            }
        }
    },
    "5a8eff6985f294b5af93d7cee829b5cb4d7ad9dc": {
        "authored_data": "2014 Mar 02 08:31",
        "commit.message": "Fix typo.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1573271 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "f0ae42aa934c10686c613277bd7a0837f6a1602d",
        "changes": {
            "src/main/java/org/apache/commons/math3/RealFieldElement.java": {
                "old": {
                    "(None, None)": [
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        54
                    ]
                }
            }
        }
    },
    "f0ae42aa934c10686c613277bd7a0837f6a1602d": {
        "authored_data": "2014 Feb 28 16:23",
        "commit.message": "MATH-1092\n\nExtracted class \"LineSearch\" from \"PowellOptimizer\".\nMade method \"computeObjectiveValue\" public in \"MultivariateOptimizer\".\nModified \"PowellOptimizer\" to use the now public class.\n\"NonLinearConjugateGradientOptimizer\" uses the new \"LineSearch\".\nAdded constructors to set the line search tolerances and deprecated\nobsolete contructors and inner classes (\"BracketingStep\" and\n\"LineSearchFunction\".\nRemoved method \"findUpperBound\".\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1572988 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "ba70cfc5c909cfb43890cc4ec3dff637491cedec",
        "changes": {
            "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar#MultivariateOptimizer', 'computeObjectiveValue(double)')": [
                        114
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar#MultivariateOptimizer', 'computeObjectiveValue(double)')": [
                        114
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        24,
                        33
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizer', None)": [
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        110,
                        140,
                        157,
                        165,
                        167,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        214,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizer', 'parseOptimizationData(OptimizationData)')": [
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizer', 'findUpperBound(UnivariateFunction,double,double)')": [
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizer', None)": [
                        53,
                        54,
                        89,
                        90,
                        91,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        139,
                        140,
                        141,
                        142,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        182,
                        183,
                        184,
                        185,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        217,
                        218,
                        219,
                        322,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        267
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer.java": {
                "old": {
                    "(None, None)": [
                        21,
                        27,
                        31,
                        32,
                        34,
                        35,
                        36
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#PowellOptimizer', None)": [
                        134,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#PowellOptimizer', None)": [
                        128,
                        129
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar#MultiStartMultivariateOptimizerTest', 'testCircleFitting')": [
                        69,
                        70,
                        71,
                        73,
                        74
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar#MultiStartMultivariateOptimizerTest', 'testCircleFitting')": [
                        69,
                        70,
                        71,
                        72,
                        74,
                        75,
                        76,
                        77
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testBoundsUnsupported')": [
                        107
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testTrivial')": [
                        123
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testColumnsPermutation')": [
                        145
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testNoDependency')": [
                        170
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testOneSet')": [
                        191
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testTwoSets')": [
                        233,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testNonInversible')": [
                        260
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testIllConditioned')": [
                        281,
                        289,
                        305,
                        306,
                        307,
                        308
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', None)": [
                        309
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        322
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        344
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testRedundantEquations')": [
                        364
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testInconsistentEquations')": [
                        386
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testCircleFitting')": [
                        408,
                        417,
                        418
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testBoundsUnsupported')": [
                        107,
                        108
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testTrivial')": [
                        124,
                        125
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testColumnsPermutation')": [
                        147,
                        148
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testNoDependency')": [
                        173,
                        174
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testOneSet')": [
                        195,
                        196
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testTwoSets')": [
                        238,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testNonInversible')": [
                        269,
                        270
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testIllConditioned')": [
                        291,
                        299,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        335,
                        336
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        358,
                        359
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testRedundantEquations')": [
                        379,
                        380
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testInconsistentEquations')": [
                        402,
                        403
                    ],
                    "('org.apache.commons.math3.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testCircleFitting')": [
                        425,
                        434,
                        435
                    ]
                }
            }
        }
    }
}