{
    "27f90d65a5f7ff141915c66af3ecd564cdfcb361": {
        "authored_data": "2012 Apr 26 01:03",
        "commit.message": "Javadoc: @value only works for compile-time constants\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1330616 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "58a204274e8010cb535b385a9cfebf0cc283aba5",
        "changes": {
            "src/main/java/org/apache/commons/math3/util/Precision.java": {
                "old": {
                    "('org.apache.commons.math3.util#Precision', None)": [
                        39,
                        40,
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#Precision', None)": [
                        39,
                        40,
                        41,
                        49,
                        51
                    ]
                }
            }
        }
    },
    "58a204274e8010cb535b385a9cfebf0cc283aba5": {
        "authored_data": "2012 Apr 25 14:49",
        "commit.message": "MATH-782\nMoved incorrectly placed block of code (user-defined stopping criterion).\nAdded unit test.\nNew utility class for simple stopping criterion based on (univariate)\nfunction values.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1330321 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "460839bd6110248e85a1a8927a0a060977b05e0b",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.univariate#BrentOptimizer', 'doOptimize')": [
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.univariate#BrentOptimizer', 'doOptimize')": [
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/univariate/BrentOptimizerTest.java": {
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math3.optimization.univariate#BrentOptimizerTest', None)": [
                        53,
                        54,
                        55
                    ],
                    "('org.apache.commons.math3.optimization.univariate#BrentOptimizerTest', 'testSinMinWithValueChecker')": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ]
                }
            }
        }
    },
    "460839bd6110248e85a1a8927a0a060977b05e0b": {
        "authored_data": "2012 Apr 23 12:10",
        "commit.message": "Formatting.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1329197 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "2f6a4f8456d4043e5492cf3e6c5c7dbb6606c102",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.univariate#UnivariatePointValuePair', None)": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.univariate#UnivariatePointValuePair', None)": [
                        45
                    ]
                }
            }
        }
    },
    "2f6a4f8456d4043e5492cf3e6c5c7dbb6606c102": {
        "authored_data": "2012 Apr 23 09:27",
        "commit.message": "Formatting.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1329144 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "ac8ff245097c97c79fcfd4792ee8a56797c5a2ef",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/SimpleValueChecker.java": {
                "old": {
                    "('org.apache.commons.math3.optimization#SimpleValueChecker', None)": [
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization#SimpleValueChecker', None)": [
                        51
                    ]
                }
            }
        }
    },
    "ac8ff245097c97c79fcfd4792ee8a56797c5a2ef": {
        "authored_data": "2012 Apr 22 20:01",
        "commit.message": "avoid division by zero when dealing with single-point intervals sets\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1328959 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "cdb5e8964b264480e4db984a23c85047bf820244",
        "changes": {
            "src/main/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSet.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.oned#IntervalsSet', 'buildTree(double,double)')": [
                        111,
                        112,
                        113,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.oned#IntervalsSet', 'computeGeometricalProperties')": [
                        149
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.oned#IntervalsSet', 'buildTree(double,double)')": [
                        112,
                        113,
                        114,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.oned#IntervalsSet', 'computeGeometricalProperties')": [
                        150,
                        151,
                        152,
                        153,
                        154,
                        155
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.oned#IntervalsSet', None)": [
                        156
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/geometry/euclidean/oned/IntervalsSetTest.java": {
                "new": {
                    "(None, None)": [
                        27,
                        104,
                        105
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.oned#IntervalsSetTest', None)": [
                        99
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.oned#IntervalsSetTest', 'testSinglePoint')": [
                        100,
                        101,
                        102,
                        103
                    ]
                }
            }
        }
    },
    "cdb5e8964b264480e4db984a23c85047bf820244": {
        "authored_data": "2012 Apr 22 20:00",
        "commit.message": "improved javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1328958 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "23a6ba5cee8df10197a2a783d8a55a15bf0d4c86",
        "changes": {
            "src/main/java/org/apache/commons/math3/geometry/euclidean/oned/OrientedPoint.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.oned#OrientedPoint', None)": [
                        66,
                        67,
                        68,
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.oned#OrientedPoint', None)": [
                        66,
                        67,
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/partitioning/SubHyperplane.java": {
                "old": {
                    "(None, None)": [
                        39,
                        65,
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        39,
                        65,
                        82
                    ]
                }
            }
        }
    },
    "23a6ba5cee8df10197a2a783d8a55a15bf0d4c86": {
        "authored_data": "2012 Apr 20 21:08",
        "commit.message": "Document why we are not using the simpler Hex constants\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1328501 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "5e7c71932287090e41bd5cfd250dd945d7242cc7",
        "changes": {
            "src/main/java/org/apache/commons/math3/util/Precision.java": {
                "new": {
                    "('org.apache.commons.math3.util#Precision', None)": [
                        43,
                        44,
                        45,
                        52,
                        53
                    ]
                }
            }
        }
    },
    "de12e28789bd8bc2e213530150cdec6fa41410ef": {
        "authored_data": "2012 Apr 20 20:15",
        "commit.message": "Added a workaround for an OpenJDK issue on sparc solaris.\n\nThe compiler has issues with very small double constants, despite they\nare perfectly legal Java and representable in IEEE754.\n\nJIRA: MATH-721\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1328492 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "b0146fbe53a7c9726ef0e428e3589320791535ce",
        "changes": {
            "src/main/java/org/apache/commons/math3/util/Precision.java": {
                "old": {
                    "('org.apache.commons.math3.util#Precision', None)": [
                        36,
                        37,
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#Precision', None)": [
                        33,
                        34,
                        35,
                        36,
                        40,
                        41,
                        42,
                        48,
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/util/PrecisionTest.java": {
                "old": {
                    "('org.apache.commons.math3.util#PrecisionTest', 'testRepresentableDelta')": [
                        471
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#PrecisionTest', 'testIssue721')": [
                        470,
                        471,
                        472
                    ],
                    "('org.apache.commons.math3.util#PrecisionTest', None)": [
                        473,
                        474,
                        475,
                        476
                    ]
                }
            }
        }
    },
    "b0146fbe53a7c9726ef0e428e3589320791535ce": {
        "authored_data": "2012 Apr 18 14:42",
        "commit.message": "Added a unit test.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1327526 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "ebadb558aaac32dd82e1355a915d42c521a3e740",
        "changes": {
            "src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java": {
                "new": {
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizerTest', None)": [
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        589,
                        590,
                        591,
                        592,
                        658,
                        659,
                        660,
                        661,
                        662,
                        663,
                        664,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671,
                        672,
                        673,
                        674,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680,
                        681,
                        682,
                        683,
                        684,
                        685,
                        686,
                        687,
                        688,
                        689,
                        690,
                        691,
                        692,
                        693,
                        694,
                        695,
                        696,
                        697,
                        698,
                        699,
                        700,
                        701,
                        702,
                        703,
                        704,
                        705,
                        706,
                        707
                    ],
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizerTest', 'testBevington')": [
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558,
                        559,
                        560,
                        561,
                        562,
                        563,
                        564,
                        565,
                        566,
                        567,
                        568,
                        569,
                        570,
                        571,
                        572,
                        573,
                        574,
                        575,
                        576,
                        577,
                        578,
                        579,
                        580,
                        581,
                        582,
                        583,
                        584,
                        585,
                        586,
                        587,
                        588
                    ],
                    "(None, None)": [
                        708,
                        709,
                        710,
                        711
                    ]
                }
            }
        }
    }
}