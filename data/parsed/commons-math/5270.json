{
    "273892eeca02f0e10f775625ba4964227e874d98": {
        "authored_data": "2009 May 31 22:01",
        "commit.message": "updated tests to take into account serialization changes and the new\nderivatives consistency check\nthese tests have been converted to Junit4\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@780512 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "5c8715be36de620b6477050cceb7ed2bf3163058",
        "changes": {
            "src/test/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        97,
                        98
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', None)": [
                        35,
                        36,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'testDerivativesConsistency')": [
                        42,
                        47
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'testSerialization')": [
                        50
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'suite')": [
                        95,
                        96
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        33,
                        34
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', None)": [
                        36,
                        38,
                        47
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'derivativesConsistency')": [
                        39,
                        44
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'serialization')": [
                        48
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22,
                        23,
                        24,
                        25,
                        26,
                        31,
                        152,
                        153
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', None)": [
                        35,
                        36,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'testDerivativesConsistency')": [
                        42,
                        52
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'testSerialization')": [
                        55
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'testClone')": [
                        105
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'suite')": [
                        150,
                        151
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        35,
                        36
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', None)": [
                        38,
                        40,
                        54,
                        105
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'derivativesConsistency')": [
                        41,
                        51
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'serialization')": [
                        55
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'checkClone')": [
                        106
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22,
                        23,
                        24,
                        25,
                        26,
                        31,
                        152,
                        153
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', None)": [
                        35,
                        36,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'testDerivativesConsistency')": [
                        42,
                        52
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'testSerialization')": [
                        55
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'testClone')": [
                        105
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'suite')": [
                        150,
                        151
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        35,
                        36
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', None)": [
                        38,
                        40,
                        54,
                        105
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'derivativesConsistency')": [
                        41,
                        51
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'serialization')": [
                        55
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'checklone')": [
                        106
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        186,
                        187
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', None)": [
                        36,
                        37,
                        39,
                        40,
                        41,
                        42
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'testNoReset')": [
                        43
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'testInterpolationAtBounds')": [
                        60
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'testInterpolationInside')": [
                        96
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'testDerivativesConsistency')": [
                        121,
                        126
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'testSerialization')": [
                        129
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'suite')": [
                        184,
                        185
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        34,
                        35
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', None)": [
                        37,
                        39,
                        57,
                        94,
                        120,
                        129
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'noReset')": [
                        40
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'interpolationAtBounds')": [
                        58
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'interpolationInside')": [
                        95
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'derivativesConsistency')": [
                        121,
                        126
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'serialization')": [
                        130
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        96,
                        97
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', None)": [
                        34,
                        35,
                        37,
                        38,
                        39,
                        40
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', 'testDerivativesConsistency')": [
                        46
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', 'testSerialization')": [
                        49
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', 'suite')": [
                        94,
                        95
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        34,
                        35
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', None)": [
                        37,
                        39,
                        48
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', 'testDerivativesConsistency')": [
                        45
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', 'serialization')": [
                        49
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22,
                        23,
                        24,
                        25,
                        26,
                        31,
                        154,
                        155
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', None)": [
                        35,
                        36,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'testDerivativesConsistency')": [
                        42,
                        53
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'testSerialization')": [
                        56
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'testClone')": [
                        107
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'suite')": [
                        152,
                        153
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        35,
                        36
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', None)": [
                        38,
                        40,
                        55,
                        107
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'derivativesConsistency')": [
                        41,
                        52
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'serialization')": [
                        56
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'checklone')": [
                        108
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22,
                        23,
                        24,
                        25,
                        26,
                        31,
                        152,
                        153
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', None)": [
                        35,
                        36,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'testDerivativesConsistency')": [
                        42,
                        52
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'testSerialization')": [
                        55
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'testClone')": [
                        105
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'suite')": [
                        150,
                        151
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        35,
                        36
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', None)": [
                        38,
                        40,
                        54,
                        105
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'derivativesConsistency')": [
                        41,
                        51
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'serialization')": [
                        55
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'checkClone')": [
                        106
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        97,
                        98
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', None)": [
                        35,
                        36,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', 'testDerivativesConsistency')": [
                        47
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', 'testSerialization')": [
                        50
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', 'suite')": [
                        95,
                        96
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        33,
                        34
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', None)": [
                        36,
                        38,
                        47
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', 'testDerivativesConsistency')": [
                        44
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', 'serialization')": [
                        48
                    ]
                }
            },
            "src/test/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        97,
                        98
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', None)": [
                        35,
                        36,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'testDerivativesConsistency')": [
                        42,
                        47
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'testSerialization')": [
                        50
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'suite')": [
                        95,
                        96
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        33,
                        34
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', None)": [
                        36,
                        38,
                        47
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'derivativesConsistency')": [
                        39,
                        44
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'serialization')": [
                        48
                    ]
                }
            }
        }
    },
    "542632042db6dc26305f3d9d772bf658b912c280": {
        "authored_data": "2009 May 31 21:56",
        "commit.message": "added a new test problem with polynomial behavior\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@780510 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "1745726d15a5998f7ff8b3d642befc1571860820",
        "changes": {
            "src/test/org/apache/commons/math/ode/nonstiff/TestProblemFactory.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#TestProblemFactory', None)": [
                        31
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#TestProblemFactory', None)": [
                        31,
                        32
                    ]
                }
            }
        }
    },
    "1745726d15a5998f7ff8b3d642befc1571860820": {
        "authored_data": "2009 May 31 21:56",
        "commit.message": "fixed serialization of step interpolators to allow processing them\nbefore the associated integrator update their internal state\n(i.e. when currentState is still null)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@780509 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "65472945b639e80581cfda1370f2491ab2657524",
        "changes": {
            "src/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'writeExternal(ObjectOutput)')": [
                        262,
                        263
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'readExternal(ObjectInput)')": [
                        282,
                        283,
                        284
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'writeExternal(ObjectOutput)')": [
                        262,
                        263,
                        264
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'readExternal(ObjectInput)')": [
                        283,
                        284,
                        285
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'writeExternal(ObjectOutput)')": [
                        361
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'readExternal(ObjectInput)')": [
                        383
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'writeExternal(ObjectOutput)')": [
                        361
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'readExternal(ObjectInput)')": [
                        383
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaStepInterpolator', 'writeExternal(ObjectOutput)')": [
                        136,
                        137,
                        138
                    ],
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaStepInterpolator', 'readExternal(ObjectInput)')": [
                        157,
                        159,
                        160,
                        167,
                        168,
                        169,
                        170,
                        171
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaStepInterpolator', 'writeExternal(ObjectOutput)')": [
                        136,
                        137,
                        138,
                        139,
                        140
                    ],
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaStepInterpolator', 'readExternal(ObjectInput)')": [
                        158,
                        160,
                        162,
                        163,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'writeBaseExternal(ObjectOutput)')": [
                        354,
                        360,
                        361
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'readBaseExternal(ObjectInput)')": [
                        396,
                        397,
                        398,
                        403,
                        404
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'writeBaseExternal(ObjectOutput)')": [
                        354,
                        355,
                        356,
                        357,
                        358,
                        364,
                        365,
                        366,
                        367
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'readBaseExternal(ObjectInput)')": [
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        413,
                        414
                    ]
                }
            }
        }
    },
    "65472945b639e80581cfda1370f2491ab2657524": {
        "authored_data": "2009 May 31 21:53",
        "commit.message": "added a missing @since\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@780508 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "4cc4579d3994659759f7425c772d69213f91f053",
        "changes": {
            "src/java/org/apache/commons/math/ode/sampling/StepInterpolator.java": {
                "new": {
                    "(None, None)": [
                        108
                    ]
                }
            }
        }
    },
    "4cc4579d3994659759f7425c772d69213f91f053": {
        "authored_data": "2009 May 30 18:38",
        "commit.message": "use the conversion functions from MatrixUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@780309 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "aea0ab12424c527cdc167fd9d4db3bb3d9dfe338",
        "changes": {
            "src/java/org/apache/commons/math/ode/NordsieckTransformer.java": {
                "old": {
                    "(None, None)": [
                        24,
                        29
                    ],
                    "('org.apache.commons.math.ode#NordsieckTransformer', None)": [
                        119,
                        120,
                        121,
                        126,
                        127,
                        128,
                        129,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.ode#NordsieckTransformer', None)": [
                        118,
                        123
                    ]
                }
            }
        }
    },
    "aea0ab12424c527cdc167fd9d4db3bb3d9dfe338": {
        "authored_data": "2009 May 30 18:36",
        "commit.message": "added conversion utility functions for\n  FieldMatrix<Fraction> to RealMatrix\n  FieldMatrix<BigFraction> to RealMatrix\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@780308 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "525418ab1ce7a1d981a8af7117d2f59b8e1470c0",
        "changes": {
            "src/java/org/apache/commons/math/linear/MatrixUtils.java": {
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        716,
                        717,
                        718,
                        719
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', None)": [
                        632,
                        633,
                        634,
                        635,
                        636,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        656,
                        657,
                        658,
                        659,
                        660,
                        661,
                        662,
                        663,
                        664,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671,
                        672,
                        673,
                        674,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680,
                        685,
                        686,
                        687,
                        688,
                        689,
                        690,
                        691,
                        692,
                        693,
                        694,
                        695,
                        696,
                        697,
                        698,
                        699,
                        700,
                        701,
                        702,
                        703,
                        704,
                        705,
                        706,
                        707,
                        708,
                        709,
                        710,
                        711,
                        712,
                        713,
                        714,
                        715
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'fractionMatrixToRealMatrix(FieldMatrix)')": [
                        637,
                        638,
                        639,
                        640
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'bigFractionMatrixToRealMatrix(FieldMatrix)')": [
                        681,
                        682,
                        683,
                        684
                    ]
                }
            },
            "src/test/org/apache/commons/math/linear/MatrixUtilsTest.java": {
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.linear#MatrixUtilsTest', 'testBigFractionConverter')": [
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335
                    ],
                    "('org.apache.commons.math.linear#MatrixUtilsTest', None)": [
                        336,
                        337,
                        348,
                        349
                    ],
                    "('org.apache.commons.math.linear#MatrixUtilsTest', 'testFractionConverter')": [
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347
                    ]
                }
            }
        }
    },
    "525418ab1ce7a1d981a8af7117d2f59b8e1470c0": {
        "authored_data": "2009 May 27 19:47",
        "commit.message": "Added a way to retrieve the limited the number of functions evaluations in optimizers\n(the limited number of iterations could already be retrieved)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@779284 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "4a97160c1f0f6ead3908cabcd7c453e3ca549f3b",
        "changes": {
            "src/java/org/apache/commons/math/optimization/MultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        40,
                        41,
                        42,
                        43,
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', 'getMaxIterations')": [
                        235,
                        236
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', 'getMaxIterations')": [
                        230,
                        231
                    ],
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', None)": [
                        232,
                        233,
                        234
                    ],
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', 'getMaxEvaluations')": [
                        240,
                        241
                    ]
                }
            }
        }
    },
    "4a97160c1f0f6ead3908cabcd7c453e3ca549f3b": {
        "authored_data": "2009 May 27 18:54",
        "commit.message": "Added a way to limit the number of functions evaluations in optimizers\n(the number of iterations could already be limited)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@779273 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "cf1e7774953cdbd4db6005c7130c3ada423c4cd3",
        "changes": {
            "src/java/org/apache/commons/math/MessagesResources_fr.java": {
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        85,
                        86,
                        87,
                        88
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizer.java": {
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizer', None)": [
                        53,
                        54,
                        55,
                        138,
                        139,
                        140,
                        143,
                        144,
                        145
                    ],
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizer', 'setMaxEvaluations(int)')": [
                        136,
                        137
                    ],
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizer', 'getMaxEvaluations')": [
                        141,
                        142
                    ],
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizer', 'optimize(MultivariateRealFunction,GoalType,double)')": [
                        180
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/MultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        39,
                        40,
                        41,
                        42,
                        43
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/direct/DirectSearchOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', 'evaluate(double)')": [
                        334,
                        335
                    ],
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', 'evaluateSimplex(Comparator)')": [
                        375
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', None)": [
                        108,
                        109,
                        110,
                        125,
                        232,
                        233,
                        234,
                        342,
                        386
                    ],
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', 'setMaxEvaluations(int)')": [
                        230,
                        231
                    ],
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', 'evaluate(double)')": [
                        345,
                        346,
                        347,
                        348
                    ],
                    "('org.apache.commons.math.optimization.direct#DirectSearchOptimizer', 'evaluateSimplex(Comparator)')": [
                        389
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/direct/MultiDirectional.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#MultiDirectional', 'evaluateNewSimplex(RealPointValuePair,double,Comparator)')": [
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#MultiDirectional', None)": [
                        113
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectional', 'evaluateNewSimplex(RealPointValuePair,double,Comparator)')": [
                        118
                    ]
                }
            },
            "src/test/org/apache/commons/math/optimization/direct/NelderMeadTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        30
                    ],
                    "('org.apache.commons.math.optimization.direct#NelderMeadTest', None)": [
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        190,
                        191,
                        192,
                        195,
                        196,
                        197
                    ],
                    "('org.apache.commons.math.optimization.direct#NelderMeadTest', 'testRosenbrock')": [
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        157
                    ],
                    "('org.apache.commons.math.optimization.direct#NelderMeadTest', 'testPowell')": [
                        167,
                        168,
                        169,
                        170,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189
                    ],
                    "('org.apache.commons.math.optimization.direct#NelderMeadTest', 'suite')": [
                        193,
                        194
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        28,
                        29,
                        30,
                        33,
                        36,
                        37,
                        247,
                        248,
                        249
                    ],
                    "('org.apache.commons.math.optimization.direct#NelderMeadTest', None)": [
                        38,
                        39,
                        40,
                        77,
                        137,
                        158,
                        172,
                        173,
                        174,
                        175,
                        188,
                        189,
                        190,
                        191,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        243,
                        244,
                        245,
                        246
                    ],
                    "('org.apache.commons.math.optimization.direct#NelderMeadTest', 'testRosenbrock')": [
                        141,
                        151
                    ],
                    "('org.apache.commons.math.optimization.direct#NelderMeadTest', 'testPowell')": [
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171
                    ],
                    "('org.apache.commons.math.optimization.direct#NelderMeadTest', 'testMaxIterations')": [
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187
                    ],
                    "('org.apache.commons.math.optimization.direct#NelderMeadTest', 'testMaxEvaluations')": [
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203
                    ]
                }
            }
        }
    }
}