{
    "75fe8b8b99ce0ef9c682f5b2d90727bab498e17a": {
        "authored_data": "2012 Sep 16 16:19",
        "commit.message": "Javadoc cleanup of linear optimization package.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1385307 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "0a900fa6921fa13d40f546017ac02c8dc395b856",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/linear/AbstractLinearOptimizer.java": {
                "old": {
                    "(None, None)": [
                        30,
                        31,
                        34,
                        157
                    ],
                    "('org.apache.commons.math3.optimization.linear#AbstractLinearOptimizer', None)": [
                        71,
                        121,
                        122,
                        123,
                        151
                    ],
                    "('org.apache.commons.math3.optimization.linear#AbstractLinearOptimizer', 'optimize(LinearObjectiveFunction,Collection,GoalType,boolean)')": [
                        134,
                        135,
                        136
                    ],
                    "('org.apache.commons.math3.optimization.linear#AbstractLinearOptimizer', 'doOptimize')": [
                        156
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        33
                    ],
                    "('org.apache.commons.math3.optimization.linear#AbstractLinearOptimizer', None)": [
                        72,
                        73,
                        123,
                        124,
                        125,
                        153,
                        154
                    ],
                    "('org.apache.commons.math3.optimization.linear#AbstractLinearOptimizer', 'optimize(LinearObjectiveFunction,Collection,GoalType,boolean)')": [
                        136,
                        137,
                        138
                    ],
                    "('org.apache.commons.math3.optimization.linear#AbstractLinearOptimizer', 'doOptimize')": [
                        159
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/LinearConstraint.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.linear#LinearConstraint', None)": [
                        187,
                        204,
                        212,
                        222
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.linear#LinearConstraint', None)": [
                        210,
                        211,
                        221,
                        222
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/LinearObjectiveFunction.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.linear#LinearObjectiveFunction', None)": [
                        104,
                        120,
                        126,
                        136
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.linear#LinearObjectiveFunction', None)": [
                        124,
                        125,
                        135,
                        136
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/LinearOptimizer.java": {
                "old": {
                    "(None, None)": [
                        55,
                        60,
                        65,
                        75,
                        78,
                        79,
                        83,
                        86,
                        87
                    ]
                },
                "new": {
                    "(None, None)": [
                        55,
                        56,
                        61,
                        62,
                        67,
                        68,
                        78,
                        79,
                        82,
                        86,
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/NoFeasibleSolutionException.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/Relationship.java": {
                "old": {
                    "(None, None)": [
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java": {
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.linear#SimplexTableau', None)": [
                        113,
                        114,
                        129,
                        130,
                        400,
                        440,
                        441,
                        455,
                        456,
                        489,
                        498,
                        535,
                        536,
                        537,
                        538,
                        579,
                        602,
                        616,
                        626
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.linear#SimplexTableau', None)": [
                        113,
                        128,
                        437,
                        438,
                        452,
                        453,
                        486,
                        487,
                        496,
                        497,
                        534,
                        535,
                        536,
                        612,
                        613,
                        623,
                        624
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/linear/UnboundedSolutionException.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25
                    ]
                }
            }
        }
    },
    "0a900fa6921fa13d40f546017ac02c8dc395b856": {
        "authored_data": "2012 Sep 16 16:11",
        "commit.message": "Javadoc fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1385301 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "9ad58f46b091ef6ca47d8a3219f1036cf2cf0d24",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', None)": [
                        117,
                        118
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', None)": [
                        117,
                        118
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/stat/descriptive/rank/Median.java": {
                "old": {
                    "('org.apache.commons.math3.stat.descriptive.rank#Median', None)": [
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.stat.descriptive.rank#Median', None)": [
                        53
                    ]
                }
            }
        }
    },
    "9ad58f46b091ef6ca47d8a3219f1036cf2cf0d24": {
        "authored_data": "2012 Sep 16 16:09",
        "commit.message": "Replace deprecated method call.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1385299 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "497fe1c79bac4550a56f58084bdcd37e4a7aded3",
        "changes": {
            "src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#ChiSquaredDistribution', 'getDegreesOfFreedom')": [
                        92
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.distribution#ChiSquaredDistribution', 'getDegreesOfFreedom')": [
                        92
                    ]
                }
            }
        }
    },
    "497fe1c79bac4550a56f58084bdcd37e4a7aded3": {
        "authored_data": "2012 Sep 16 16:09",
        "commit.message": "Remove trailing spaces in javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1385298 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "1a9e32ab8f63ab40517a9e3837ca8c5dce52f20d",
        "changes": {
            "src/main/java/org/apache/commons/math3/distribution/RealDistribution.java": {
                "old": {
                    "(None, None)": [
                        145,
                        157
                    ]
                },
                "new": {
                    "(None, None)": [
                        145,
                        157
                    ]
                }
            }
        }
    },
    "1a9e32ab8f63ab40517a9e3837ca8c5dce52f20d": {
        "authored_data": "2012 Sep 16 16:05",
        "commit.message": "[MATH-854] fill throws clause for genetics package.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1385297 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "ef8beb8b2b4847aa99c7d94618860c374995c1b5",
        "changes": {
            "src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#AbstractListChromosome', None)": [
                        41,
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#AbstractListChromosome', None)": [
                        41,
                        49,
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#BinaryChromosome', None)": [
                        37,
                        46,
                        78,
                        79,
                        80
                    ],
                    "('org.apache.commons.math3.genetics#BinaryChromosome', 'checkValidity(List)')": [
                        54,
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#BinaryChromosome', None)": [
                        37,
                        46
                    ],
                    "('org.apache.commons.math3.genetics#BinaryChromosome', 'checkValidity(List)')": [
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/BinaryMutation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#BinaryMutation', 'mutate(Chromosome)')": [
                        40
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#BinaryMutation', 'mutate(Chromosome)')": [
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/CrossoverPolicy.java": {
                "old": {
                    "(None, None)": [
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        36,
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/CycleCrossover.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#CycleCrossover', 'crossover(Chromosome,Chromosome)')": [
                        100
                    ],
                    "('org.apache.commons.math3.genetics#CycleCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        115
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#CycleCrossover', None)": [
                        98,
                        99,
                        100
                    ],
                    "('org.apache.commons.math3.genetics#CycleCrossover', 'crossover(Chromosome,Chromosome)')": [
                        103,
                        104,
                        105
                    ],
                    "('org.apache.commons.math3.genetics#CycleCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        120,
                        121,
                        122
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', None)": [
                        46,
                        47,
                        48,
                        60
                    ],
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', 'setElitismRate(double)')": [
                        93
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', None)": [
                        47,
                        48,
                        49,
                        52,
                        53,
                        54,
                        55,
                        58,
                        66,
                        69,
                        70,
                        71,
                        74
                    ],
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', 'setElitismRate(double)')": [
                        105
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#FixedElapsedTime', None)": [
                        46,
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#FixedElapsedTime', None)": [
                        46,
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#FixedGenerationCount', None)": [
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#FixedGenerationCount', None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#GeneticAlgorithm', None)": [
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#GeneticAlgorithm', None)": [
                        72
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/ListPopulation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#ListPopulation', None)": [
                        51,
                        66,
                        110,
                        111
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'setChromosomes(List)')": [
                        94
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'addChromosomes(Collection)')": [
                        112
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'addChromosome(Chromosome)')": [
                        143
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'setPopulationLimit(int)')": [
                        182
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#ListPopulation', None)": [
                        51,
                        66,
                        67,
                        68,
                        114,
                        115
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'setChromosomes(List)')": [
                        96,
                        97,
                        98
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'addChromosomes(Collection)')": [
                        116
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'addChromosome(Chromosome)')": [
                        147
                    ],
                    "('org.apache.commons.math3.genetics#ListPopulation', 'setPopulationLimit(int)')": [
                        186
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/MutationPolicy.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        33,
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#NPointCrossover', None)": [
                        67
                    ],
                    "('org.apache.commons.math3.genetics#NPointCrossover', 'crossover(Chromosome,Chromosome)')": [
                        108
                    ],
                    "('org.apache.commons.math3.genetics#NPointCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        125
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#NPointCrossover', None)": [
                        67
                    ],
                    "('org.apache.commons.math3.genetics#NPointCrossover', 'crossover(Chromosome,Chromosome)')": [
                        108,
                        109,
                        110
                    ],
                    "('org.apache.commons.math3.genetics#NPointCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        127,
                        128,
                        129
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#OnePointCrossover', 'crossover(Chromosome,Chromosome)')": [
                        79
                    ],
                    "('org.apache.commons.math3.genetics#OnePointCrossover', 'crossover(AbstractListChromosome,AbstractListChromosome)')": [
                        96
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#OnePointCrossover', 'crossover(Chromosome,Chromosome)')": [
                        79,
                        80,
                        81
                    ],
                    "('org.apache.commons.math3.genetics#OnePointCrossover', 'crossover(AbstractListChromosome,AbstractListChromosome)')": [
                        98
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/OrderedCrossover.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#OrderedCrossover', 'crossover(Chromosome,Chromosome)')": [
                        67
                    ],
                    "('org.apache.commons.math3.genetics#OrderedCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        82
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#OrderedCrossover', None)": [
                        65,
                        66,
                        67,
                        68
                    ],
                    "('org.apache.commons.math3.genetics#OrderedCrossover', 'crossover(Chromosome,Chromosome)')": [
                        71,
                        72,
                        73
                    ],
                    "('org.apache.commons.math3.genetics#OrderedCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        88,
                        89,
                        90
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/Population.java": {
                "old": {
                    "(None, None)": [
                        48,
                        49,
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19,
                        50,
                        51,
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/RandomKey.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#RandomKey', None)": [
                        71,
                        72,
                        73,
                        74,
                        90,
                        91
                    ],
                    "('org.apache.commons.math3.genetics#RandomKey', 'decodeGeneric(List,List,List)')": [
                        115
                    ],
                    "('org.apache.commons.math3.genetics#RandomKey', 'comparatorPermutation(List,Comparator)')": [
                        233
                    ],
                    "('org.apache.commons.math3.genetics#RandomKey', 'inducedPermutation(List,List)')": [
                        257
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#RandomKey', None)": [
                        71,
                        72,
                        73,
                        89,
                        90,
                        91
                    ],
                    "('org.apache.commons.math3.genetics#RandomKey', 'decodeGeneric(List,List,List)')": [
                        115,
                        116,
                        117
                    ],
                    "('org.apache.commons.math3.genetics#RandomKey', 'comparatorPermutation(List,Comparator)')": [
                        235
                    ],
                    "('org.apache.commons.math3.genetics#RandomKey', 'inducedPermutation(List,List)')": [
                        259,
                        260
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/RandomKeyMutation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#RandomKeyMutation', 'mutate(Chromosome)')": [
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#RandomKeyMutation', 'mutate(Chromosome)')": [
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/SelectionPolicy.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        32,
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#TournamentSelection', 'select(Population)')": [
                        57
                    ],
                    "('org.apache.commons.math3.genetics#TournamentSelection', 'tournament(ListPopulation)')": [
                        70
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#TournamentSelection', None)": [
                        56
                    ],
                    "('org.apache.commons.math3.genetics#TournamentSelection', 'select(Population)')": [
                        58
                    ],
                    "('org.apache.commons.math3.genetics#TournamentSelection', 'tournament(ListPopulation)')": [
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#UniformCrossover', None)": [
                        63
                    ],
                    "('org.apache.commons.math3.genetics#UniformCrossover', 'crossover(Chromosome,Chromosome)')": [
                        83
                    ],
                    "('org.apache.commons.math3.genetics#UniformCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        99
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#UniformCrossover', None)": [
                        63,
                        81,
                        82,
                        83,
                        84
                    ],
                    "('org.apache.commons.math3.genetics#UniformCrossover', 'crossover(Chromosome,Chromosome)')": [
                        87,
                        88,
                        89
                    ],
                    "('org.apache.commons.math3.genetics#UniformCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        105
                    ]
                }
            }
        }
    },
    "ef8beb8b2b4847aa99c7d94618860c374995c1b5": {
        "authored_data": "2012 Sep 16 15:19",
        "commit.message": "Javadoc cleanup of genetics package.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1385284 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "6709b11f9ee42044984464bbcc7f44cafe32dd07",
        "changes": {
            "src/main/java/org/apache/commons/math3/genetics/AbstractListChromosome.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#AbstractListChromosome', None)": [
                        39,
                        40,
                        57,
                        59,
                        60,
                        81,
                        82,
                        83,
                        84,
                        85,
                        88,
                        89,
                        90,
                        91,
                        95,
                        96,
                        97
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#AbstractListChromosome', None)": [
                        39,
                        55,
                        58,
                        79,
                        80,
                        81,
                        82,
                        85,
                        86
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/BinaryChromosome.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#BinaryChromosome', None)": [
                        35,
                        36,
                        45,
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#BinaryChromosome', None)": [
                        35,
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/BinaryMutation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#BinaryMutation', None)": [
                        37,
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#BinaryMutation', None)": [
                        35,
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/Chromosome.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math3.genetics#Chromosome', None)": [
                        36,
                        37,
                        39,
                        40,
                        41,
                        42,
                        53,
                        54,
                        59,
                        60,
                        61,
                        69,
                        70,
                        71,
                        80,
                        81,
                        82,
                        85,
                        86,
                        98,
                        99
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math3.genetics#Chromosome', None)": [
                        36,
                        37,
                        38,
                        40,
                        51,
                        56,
                        57,
                        58,
                        66,
                        67,
                        68,
                        77,
                        78,
                        81,
                        93,
                        94
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/ChromosomePair.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#ChromosomePair', None)": [
                        62,
                        63,
                        64
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/CrossoverPolicy.java": {
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', None)": [
                        43,
                        44,
                        55,
                        56,
                        59,
                        60,
                        91,
                        92,
                        94,
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#ElitisticListPopulation', None)": [
                        43,
                        54,
                        57,
                        88,
                        90
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/Fitness.java": {
                "old": {
                    "(None, None)": [
                        28,
                        29,
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/FixedElapsedTime.java": {
                "old": {
                    "(None, None)": [
                        25,
                        27,
                        28,
                        29,
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/FixedGenerationCount.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26
                    ],
                    "('org.apache.commons.math3.genetics#FixedGenerationCount', None)": [
                        52,
                        53,
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.genetics#FixedGenerationCount', None)": [
                        50,
                        51,
                        65
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/GeneticAlgorithm.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#GeneticAlgorithm', None)": [
                        34,
                        35,
                        36,
                        37,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        225,
                        226
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#GeneticAlgorithm', None)": [
                        34,
                        35,
                        36,
                        60,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        225
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/ListPopulation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#ListPopulation', None)": [
                        57,
                        82,
                        83,
                        136,
                        175
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#ListPopulation', None)": [
                        57,
                        58,
                        59,
                        84,
                        85,
                        86,
                        87,
                        138,
                        141,
                        180
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/NPointCrossover.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#NPointCrossover', None)": [
                        60,
                        61,
                        63,
                        66,
                        67,
                        106,
                        124,
                        125
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#NPointCrossover', None)": [
                        60,
                        61,
                        65,
                        104,
                        122
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/OnePointCrossover.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#OnePointCrossover', None)": [
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#OnePointCrossover', None)": [
                        75
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/OrderedCrossover.java": {
                "old": {
                    "(None, None)": [
                        43,
                        44,
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        43,
                        50
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/PermutationChromosome.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/Population.java": {
                "old": {
                    "(None, None)": [
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/RandomKey.java": {
                "old": {
                    "(None, None)": [
                        30,
                        34,
                        35,
                        40,
                        41,
                        45,
                        46,
                        50,
                        51,
                        55,
                        56,
                        57,
                        58,
                        59,
                        61,
                        63,
                        64
                    ],
                    "('org.apache.commons.math3.genetics#RandomKey', None)": [
                        83,
                        123,
                        261,
                        263,
                        265,
                        289,
                        290,
                        291
                    ]
                },
                "new": {
                    "(None, None)": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        53
                    ],
                    "('org.apache.commons.math3.genetics#RandomKey', None)": [
                        72,
                        112,
                        250,
                        252,
                        254
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/RandomKeyMutation.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#RandomKeyMutation', None)": [
                        37,
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#RandomKeyMutation', None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/StoppingCondition.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        31,
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        30,
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/TournamentSelection.java": {
                "old": {
                    "('org.apache.commons.math3.genetics#TournamentSelection', None)": [
                        63,
                        64,
                        65,
                        69,
                        70
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.genetics#TournamentSelection', None)": [
                        63,
                        64,
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/UniformCrossover.java": {
                "old": {
                    "(None, None)": [
                        35,
                        36,
                        40,
                        41,
                        42,
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        36,
                        40,
                        41,
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/genetics/package-info.java": {
                "old": {
                    "(None, None)": [
                        18,
                        19,
                        21,
                        22
                    ]
                }
            }
        }
    },
    "6709b11f9ee42044984464bbcc7f44cafe32dd07": {
        "authored_data": "2012 Sep 16 15:06",
        "commit.message": "Javadoc fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1385279 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "51f446bf0c09a0d051341ccec6ae50a0daa1728b",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/differentiation/DerivativeStructure.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.differentiation#DerivativeStructure', None)": [
                        82,
                        183
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis.differentiation#DerivativeStructure', None)": [
                        182
                    ]
                }
            }
        }
    },
    "51f446bf0c09a0d051341ccec6ae50a0daa1728b": {
        "authored_data": "2012 Sep 14 21:55",
        "commit.message": "[MATH-789] Fixed rank calculation in case of dependant columns, added additional constructor that repaces small parameter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1384945 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "c8b8e612430cdc2f54d0bbb3f25f1c956963d99b",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition.java": {
                "old": {
                    "('org.apache.commons.math3.linear#RectangularCholeskyDecomposition', None)": [
                        57,
                        100,
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#RectangularCholeskyDecomposition', None)": [
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        119
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/linear/RectangularCholeskyDecompositionTest.java": {
                "old": {
                    "('org.apache.commons.math3.linear#RectangularCholeskyDecompositionTest', 'testMath789')": [
                        84,
                        85,
                        86,
                        95,
                        96,
                        97,
                        106,
                        107,
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#RectangularCholeskyDecompositionTest', 'testMath789')": [
                        84,
                        93,
                        102
                    ],
                    "('org.apache.commons.math3.linear#RectangularCholeskyDecompositionTest', None)": [
                        104,
                        105
                    ],
                    "('org.apache.commons.math3.linear#RectangularCholeskyDecompositionTest', 'composeAndTest(RealMatrix,int)')": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/random/CorrelatedRandomVectorGeneratorTest.java": {
                "old": {
                    "('org.apache.commons.math3.random#CorrelatedRandomVectorGeneratorTest', 'testRank')": [
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.random#CorrelatedRandomVectorGeneratorTest', 'testRank')": [
                        71
                    ]
                }
            }
        }
    },
    "c8b8e612430cdc2f54d0bbb3f25f1c956963d99b": {
        "authored_data": "2012 Sep 14 20:17",
        "commit.message": "Use the new differentiation framework in optimization package.\n\nAs a temporary hack for backward compatibility, some optimizers do\nprovide \"optimize\" methods which accept the new functions signatures\n(i.e. MultivariateDifferentiableXxxFunction), but they do *not*\nadvertise it in their \"implements\" clause. The reason for that is that\nJava forbid implementing a parameterized interface with two different\nparameters. These optimizers already implement the interface with the\nolder functions signatures, and this cannot be removed as of 3.1.\n\nWhen 4.0 will be started, the old signatures will be removed, and the\n\"implements\" declarations will be updated.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1384907 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "8bac3361f2aaab7f2086e04f8ae03a973d521915",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/DifferentiableMultivariateFunction.java": {
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/BaseMultivariateOptimizer.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/BaseMultivariateSimpleBoundsOptimizer.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/BaseOptimizer.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/DifferentiableMultivariateMultiStartOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization#DifferentiableMultivariateMultiStartOptimizer', None)": [
                        47,
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.math3.optimization#DifferentiableMultivariateMultiStartOptimizer', None)": [
                        48,
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/DifferentiableMultivariateOptimizer.java": {
                "new": {
                    "(None, None)": [
                        34,
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/DifferentiableMultivariateVectorMultiStartOptimizer.java": {
                "new": {
                    "(None, None)": [
                        33,
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer.java": {
                "new": {
                    "(None, None)": [
                        29,
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/MultivariateOptimizer.java": {
                "old": {
                    "(None, None)": [
                        28,
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateOptimizer.java": {
                "new": {
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateOptimizer', 'optimize(int,FUNC,GoalType,double)')": [
                        105
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateOptimizer', None)": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateOptimizer', 'optimizeInternal(int,MultivariateFunction,GoalType,double)')": [
                        125,
                        126
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', 'optimize(int,FUNC,double,double,double)')": [
                        106
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', 'optimize(int,FUNC,double,double,double)')": [
                        106,
                        107
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', None)": [
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        162
                    ],
                    "('org.apache.commons.math3.optimization.direct#BaseAbstractMultivariateVectorOptimizer', 'optimizeInternal(int,MultivariateVectorFunction,double,double,double)')": [
                        130,
                        131,
                        132
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/fitting/CurveFitter.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math3.optimization.fitting#CurveFitter', None)": [
                        48,
                        56,
                        57,
                        170,
                        178
                    ],
                    "('org.apache.commons.math3.optimization.fitting#CurveFitter', 'fit(int,T,double)')": [
                        161,
                        162,
                        163
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        26,
                        27,
                        29,
                        292,
                        293,
                        294,
                        295
                    ],
                    "('org.apache.commons.math3.optimization.fitting#CurveFitter', None)": [
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        58,
                        59,
                        65,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        199,
                        200,
                        208,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291
                    ],
                    "('org.apache.commons.math3.optimization.fitting#CurveFitter', 'fit(int,T,double)')": [
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "(None, None)": [
                        39,
                        40,
                        41,
                        43,
                        318
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        295
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(int,DifferentiableMultivariateVectorFunction,double,double,double)')": [
                        317
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        41,
                        42,
                        44,
                        367,
                        368
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        296,
                        297,
                        298,
                        299,
                        301,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(int,DifferentiableMultivariateVectorFunction,double,double,double)')": [
                        322
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(int,MultivariateDifferentiableVectorFunction,double,double,double)')": [
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/AbstractScalarDifferentiableOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.general#AbstractScalarDifferentiableOptimizer', 'optimize(int,DifferentiableMultivariateFunction,GoalType,double)')": [
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        37,
                        39
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractScalarDifferentiableOptimizer', 'optimize(int,DifferentiableMultivariateFunction,GoalType,double)')": [
                        86
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractScalarDifferentiableOptimizer', None)": [
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractScalarDifferentiableOptimizer', 'optimize(int,MultivariateDifferentiableFunction,GoalType,double)')": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/package-info.java": {
                "old": {
                    "(None, None)": [
                        41,
                        42,
                        43,
                        45,
                        46,
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        41,
                        42,
                        43,
                        45,
                        46,
                        47
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerAbstractTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        24,
                        25,
                        526,
                        527
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizerAbstractTest', 'testCircleFitting')": [
                        363,
                        365,
                        366,
                        379
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizerAbstractTest', 'testCircleFittingBadInit')": [
                        410,
                        415,
                        416
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizerAbstractTest', 'doTestStRD(StatisticalReferenceDataset,double,double)')": [
                        478
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizerAbstractTest', None)": [
                        507,
                        521,
                        522,
                        523,
                        524
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        28,
                        531,
                        532
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizerAbstractTest', 'testCircleFitting')": [
                        363,
                        365,
                        366,
                        379
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizerAbstractTest', 'testCircleFittingBadInit')": [
                        410,
                        415,
                        416
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizerAbstractTest', 'doTestStRD(StatisticalReferenceDataset,double,double)')": [
                        478
                    ],
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizerAbstractTest', None)": [
                        507,
                        521,
                        522,
                        523,
                        524,
                        525,
                        526,
                        528,
                        529,
                        530
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizerTest', 'testGetSigma')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.general#AbstractLeastSquaresOptimizerTest', 'testGetSigma')": [
                        95
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/general/CircleProblem.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        171
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleProblem', None)": [
                        40,
                        42,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        72,
                        149,
                        150
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleProblem', 'addPoint(double,double)')": [
                        75,
                        76
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleProblem', 'target')": [
                        82,
                        84,
                        85
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleProblem', 'value(double)')": [
                        111,
                        113,
                        114,
                        115,
                        117,
                        118,
                        119,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleProblem', 'jacobian')": [
                        145,
                        146,
                        147,
                        148
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleProblem', 'jacobian(double)')": [
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        135
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleProblem', None)": [
                        41,
                        43,
                        55,
                        56,
                        57
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleProblem', 'addPoint(Vector2D)')": [
                        60,
                        61
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleProblem', 'target')": [
                        67,
                        69,
                        70
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleProblem', 'value(double)')": [
                        97,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleProblem', 'value(DerivativeStructure)')": [
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/general/CircleScalar.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22,
                        23,
                        24,
                        92,
                        93,
                        94
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleScalar', None)": [
                        29,
                        30,
                        33,
                        84,
                        85
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleScalar', 'addPoint(double,double)')": [
                        37
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleScalar', 'getRadius(Point2D)')": [
                        40,
                        42
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleScalar', 'gradient(double)')": [
                        48,
                        49,
                        50,
                        51,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        61,
                        62,
                        63,
                        64
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleScalar', 'value(double)')": [
                        68,
                        72
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleScalar', 'gradient')": [
                        80,
                        81,
                        82,
                        83
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleScalar', 'partialDerivative(int)')": [
                        88,
                        89,
                        90,
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleScalar', None)": [
                        29,
                        30,
                        33,
                        53
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleScalar', 'addPoint(double,double)')": [
                        37
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleScalar', 'getRadius(Vector2D)')": [
                        40,
                        42
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleScalar', 'distance(Vector2D,DerivativeStructure,DerivativeStructure)')": [
                        48,
                        49,
                        50,
                        51,
                        52
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleScalar', 'getRadius(DerivativeStructure,DerivativeStructure)')": [
                        55,
                        56,
                        57,
                        58,
                        60
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleScalar', 'value(double)')": [
                        64,
                        68
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleScalar', 'value(DerivativeStructure)')": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/general/CircleVectorial.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22,
                        23,
                        94,
                        95
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleVectorial', None)": [
                        28,
                        29,
                        32
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleVectorial', 'addPoint(double,double)')": [
                        36
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleVectorial', 'getRadius(Point2D)')": [
                        43,
                        45
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleVectorial', 'jacobian(double)')": [
                        51,
                        52,
                        53,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleVectorial', 'value(double)')": [
                        79
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleVectorial', 'jacobian')": [
                        90,
                        91,
                        92,
                        93
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        89
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleVectorial', None)": [
                        29,
                        30,
                        33,
                        57
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleVectorial', 'addPoint(double,double)')": [
                        37
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleVectorial', 'getRadius(Vector2D)')": [
                        44,
                        46
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleVectorial', 'distance(Vector2D,DerivativeStructure,DerivativeStructure)')": [
                        52,
                        53,
                        54,
                        55,
                        56
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleVectorial', 'getRadius(DerivativeStructure,DerivativeStructure)')": [
                        59,
                        60,
                        61,
                        62,
                        64
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleVectorial', 'value(double)')": [
                        68
                    ],
                    "('org.apache.commons.math3.optimization.general#CircleVectorial', 'value(DerivativeStructure)')": [
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        25,
                        26,
                        404,
                        405,
                        406
                    ],
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizerTest', 'testNonInvertible')": [
                        123
                    ],
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizerTest', 'checkEstimate(DifferentiableMultivariateVectorFunction,double,int,double,double,double,boolean)')": [
                        141
                    ],
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizerTest', 'testBevington')": [
                        228
                    ],
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFitting2')": [
                        277,
                        278
                    ],
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizerTest', None)": [
                        312,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        356,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        400,
                        401,
                        402,
                        403
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        29,
                        380,
                        381
                    ],
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizerTest', 'testNonInvertible')": [
                        123
                    ],
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizerTest', 'checkEstimate(MultivariateDifferentiableVectorFunction,double,int,double,double,double,boolean)')": [
                        141
                    ],
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFitting2')": [
                        276,
                        277
                    ],
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizerTest', None)": [
                        311,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        346,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/general/MinpackTest.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26
                    ],
                    "('org.apache.commons.math3.optimization.general#MinpackTest', None)": [
                        525,
                        593,
                        594,
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        603,
                        619,
                        620,
                        621,
                        622,
                        623,
                        624,
                        625,
                        626,
                        627,
                        628,
                        629,
                        630,
                        631,
                        632,
                        633,
                        635,
                        636,
                        637,
                        638,
                        640,
                        641,
                        642,
                        659,
                        660,
                        661,
                        662,
                        663,
                        664,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671,
                        672,
                        673,
                        674,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680,
                        696,
                        697,
                        698,
                        699,
                        700,
                        701,
                        702,
                        703,
                        704,
                        705,
                        706,
                        707,
                        708,
                        709,
                        710,
                        711,
                        712,
                        713,
                        714,
                        715,
                        716,
                        717,
                        718,
                        720,
                        723,
                        724,
                        725,
                        740,
                        741,
                        742,
                        743,
                        744,
                        745,
                        746,
                        747,
                        748,
                        749,
                        764,
                        765,
                        766,
                        767,
                        768,
                        769,
                        770,
                        771,
                        772,
                        773,
                        774,
                        775,
                        776,
                        777,
                        778,
                        779,
                        780,
                        781,
                        782,
                        783,
                        784,
                        785,
                        786,
                        787,
                        788,
                        790,
                        791,
                        792,
                        793,
                        794,
                        795,
                        796,
                        813,
                        814,
                        815,
                        816,
                        817,
                        818,
                        819,
                        820,
                        821,
                        822,
                        823,
                        824,
                        825,
                        826,
                        827,
                        828,
                        829,
                        830,
                        831,
                        832,
                        833,
                        834,
                        835,
                        836,
                        858,
                        859,
                        860,
                        861,
                        862,
                        863,
                        864,
                        865,
                        866,
                        867,
                        868,
                        869,
                        870,
                        871,
                        872,
                        873,
                        891,
                        892,
                        893,
                        894,
                        895,
                        896,
                        897,
                        898,
                        899,
                        900,
                        901,
                        902,
                        903,
                        904,
                        905,
                        906,
                        907,
                        908,
                        909,
                        910,
                        911,
                        916,
                        946,
                        947,
                        948,
                        949,
                        950,
                        951,
                        952,
                        953,
                        954,
                        955,
                        956,
                        957,
                        958,
                        959,
                        960,
                        961,
                        962,
                        963,
                        964,
                        965,
                        966,
                        967,
                        968,
                        969,
                        970,
                        971,
                        972,
                        973,
                        1004,
                        1005,
                        1006,
                        1007,
                        1008,
                        1010,
                        1011,
                        1012,
                        1013,
                        1014,
                        1015,
                        1016,
                        1017,
                        1018,
                        1019,
                        1020,
                        1021,
                        1022,
                        1023,
                        1024,
                        1025,
                        1026,
                        1053,
                        1054,
                        1055,
                        1056,
                        1057,
                        1058,
                        1059,
                        1060,
                        1061,
                        1062,
                        1063,
                        1065,
                        1066,
                        1067,
                        1068,
                        1069,
                        1070,
                        1071,
                        1072,
                        1073,
                        1074,
                        1075,
                        1076,
                        1077,
                        1078,
                        1079,
                        1080,
                        1081,
                        1082,
                        1083,
                        1084,
                        1085,
                        1086,
                        1087,
                        1088,
                        1089,
                        1090,
                        1091,
                        1092,
                        1093,
                        1094,
                        1095,
                        1096,
                        1097,
                        1098,
                        1099,
                        1100,
                        1101,
                        1102,
                        1103,
                        1104,
                        1105,
                        1106,
                        1107,
                        1108,
                        1109,
                        1110,
                        1127,
                        1128,
                        1129,
                        1130,
                        1133,
                        1134,
                        1135,
                        1136,
                        1137,
                        1138,
                        1139,
                        1140,
                        1141,
                        1142,
                        1143,
                        1144,
                        1145,
                        1146,
                        1147,
                        1148,
                        1149,
                        1150,
                        1151,
                        1171,
                        1172,
                        1173,
                        1174,
                        1175,
                        1176,
                        1177,
                        1178,
                        1179,
                        1180,
                        1181,
                        1182,
                        1183,
                        1184,
                        1185,
                        1186,
                        1187,
                        1188,
                        1189,
                        1190,
                        1191,
                        1210,
                        1211,
                        1212,
                        1213,
                        1214,
                        1215,
                        1216,
                        1217,
                        1218,
                        1219,
                        1220,
                        1221,
                        1222,
                        1223,
                        1224,
                        1225,
                        1226,
                        1227,
                        1228,
                        1229,
                        1230,
                        1231,
                        1232,
                        1233,
                        1234,
                        1235,
                        1236,
                        1237,
                        1238,
                        1239,
                        1240,
                        1241,
                        1268,
                        1269,
                        1270,
                        1271,
                        1272,
                        1273,
                        1274,
                        1275,
                        1276,
                        1277,
                        1278,
                        1279,
                        1280,
                        1281,
                        1283,
                        1284,
                        1285,
                        1286,
                        1287,
                        1288,
                        1289,
                        1291,
                        1292,
                        1293,
                        1294,
                        1295,
                        1296,
                        1297,
                        1298,
                        1299,
                        1300,
                        1301,
                        1302,
                        1303,
                        1304,
                        1305,
                        1306,
                        1307,
                        1308,
                        1309,
                        1310,
                        1311,
                        1312,
                        1313,
                        1314,
                        1315,
                        1316,
                        1317,
                        1318,
                        1319,
                        1320,
                        1321,
                        1322,
                        1323,
                        1324,
                        1343,
                        1344,
                        1345,
                        1346,
                        1347,
                        1348,
                        1349,
                        1351,
                        1352,
                        1353,
                        1354,
                        1355,
                        1356,
                        1357,
                        1358,
                        1359,
                        1360,
                        1361,
                        1362,
                        1363,
                        1364,
                        1365,
                        1366,
                        1367,
                        1368,
                        1369,
                        1370,
                        1371,
                        1372,
                        1373,
                        1374,
                        1375,
                        1376,
                        1377,
                        1378,
                        1379,
                        1380,
                        1381,
                        1382,
                        1383,
                        1386,
                        1387,
                        1388,
                        1407,
                        1408,
                        1409,
                        1410,
                        1411,
                        1412,
                        1415,
                        1416,
                        1417,
                        1418,
                        1419,
                        1420,
                        1421,
                        1422,
                        1423,
                        1424,
                        1425,
                        1426,
                        1427,
                        1428,
                        1429,
                        1430,
                        1431,
                        1432,
                        1433,
                        1434,
                        1435,
                        1436,
                        1462,
                        1463,
                        1464,
                        1465,
                        1466,
                        1467,
                        1468,
                        1469,
                        1470,
                        1471,
                        1472,
                        1473,
                        1474,
                        1475,
                        1476,
                        1477,
                        1478,
                        1479,
                        1480,
                        1481,
                        1482,
                        1483,
                        1484,
                        1485,
                        1486,
                        1487,
                        1488,
                        1489,
                        1490,
                        1491,
                        1492,
                        1493,
                        1494,
                        1495,
                        1496,
                        1497,
                        1498,
                        1499,
                        1500,
                        1501,
                        1502,
                        1503,
                        1504,
                        1505,
                        1506,
                        1507,
                        1508,
                        1509,
                        1510,
                        1511,
                        1512,
                        1513,
                        1514,
                        1515,
                        1516,
                        1517,
                        1518,
                        1519,
                        1520
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26
                    ],
                    "('org.apache.commons.math3.optimization.general#MinpackTest', None)": [
                        525,
                        593,
                        594,
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        622,
                        623,
                        625,
                        626,
                        627,
                        628,
                        630,
                        631,
                        632,
                        649,
                        650,
                        651,
                        652,
                        653,
                        655,
                        656,
                        657,
                        658,
                        674,
                        675,
                        676,
                        678,
                        681,
                        682,
                        683,
                        698,
                        699,
                        700,
                        701,
                        702,
                        703,
                        704,
                        719,
                        720,
                        721,
                        722,
                        723,
                        724,
                        725,
                        726,
                        727,
                        728,
                        729,
                        730,
                        732,
                        733,
                        734,
                        735,
                        736,
                        737,
                        754,
                        755,
                        756,
                        757,
                        758,
                        759,
                        760,
                        761,
                        762,
                        763,
                        785,
                        786,
                        787,
                        788,
                        789,
                        790,
                        791,
                        809,
                        810,
                        811,
                        812,
                        813,
                        818,
                        848,
                        849,
                        850,
                        851,
                        852,
                        853,
                        854,
                        855,
                        856,
                        857,
                        888,
                        889,
                        890,
                        891,
                        892,
                        894,
                        921,
                        922,
                        923,
                        924,
                        925,
                        926,
                        927,
                        928,
                        929,
                        930,
                        931,
                        932,
                        933,
                        934,
                        935,
                        936,
                        937,
                        939,
                        940,
                        941,
                        942,
                        943,
                        944,
                        945,
                        962,
                        963,
                        964,
                        965,
                        966,
                        969,
                        970,
                        990,
                        991,
                        992,
                        993,
                        994,
                        995,
                        996,
                        997,
                        998,
                        1017,
                        1018,
                        1019,
                        1020,
                        1021,
                        1022,
                        1023,
                        1024,
                        1025,
                        1026,
                        1027,
                        1028,
                        1029,
                        1056,
                        1057,
                        1058,
                        1059,
                        1060,
                        1061,
                        1062,
                        1063,
                        1064,
                        1065,
                        1066,
                        1067,
                        1068,
                        1069,
                        1070,
                        1071,
                        1072,
                        1073,
                        1074,
                        1076,
                        1077,
                        1078,
                        1079,
                        1080,
                        1082,
                        1083,
                        1102,
                        1103,
                        1104,
                        1105,
                        1107,
                        1108,
                        1111,
                        1112,
                        1113,
                        1132,
                        1133,
                        1134,
                        1135,
                        1136,
                        1137,
                        1138,
                        1141,
                        1142,
                        1143,
                        1169,
                        1170,
                        1171,
                        1172,
                        1173,
                        1174,
                        1175,
                        1176,
                        1177,
                        1178,
                        1179,
                        1180,
                        1181,
                        1182,
                        1183,
                        1184,
                        1185,
                        1186,
                        1187,
                        1188,
                        1189,
                        1190
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        390,
                        391,
                        392
                    ],
                    "('org.apache.commons.math3.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testCircleFitting')": [
                        340,
                        342,
                        343
                    ],
                    "('org.apache.commons.math3.optimization.general#NonLinearConjugateGradientOptimizerTest', None)": [
                        344,
                        345,
                        346,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        378,
                        379,
                        380,
                        381,
                        383,
                        386,
                        387,
                        388,
                        389
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        25,
                        26,
                        28,
                        29,
                        30
                    ],
                    "('org.apache.commons.math3.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testCircleFitting')": [
                        345,
                        347,
                        348
                    ],
                    "('org.apache.commons.math3.optimization.general#NonLinearConjugateGradientOptimizerTest', None)": [
                        349,
                        350,
                        351,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/general/RandomCirclePointGenerator.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math3.optimization.general#RandomCirclePointGenerator', 'generate(int)')": [
                        72,
                        73
                    ],
                    "('org.apache.commons.math3.optimization.general#RandomCirclePointGenerator', 'create')": [
                        85,
                        90
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math3.optimization.general#RandomCirclePointGenerator', 'generate(int)')": [
                        72,
                        73
                    ],
                    "('org.apache.commons.math3.optimization.general#RandomCirclePointGenerator', 'create')": [
                        85,
                        90
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDataset.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.optimization.general#StatisticalReferenceDataset', None)": [
                        70,
                        153,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333
                    ],
                    "('org.apache.commons.math3.optimization.general#StatisticalReferenceDataset', 'getLeastSquaresProblem')": [
                        312
                    ],
                    "('org.apache.commons.math3.optimization.general#StatisticalReferenceDataset', 'getModelValue(double,double)')": [
                        324
                    ],
                    "('org.apache.commons.math3.optimization.general#StatisticalReferenceDataset', 'getModelDerivatives(double,double)')": [
                        334,
                        335
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.optimization.general#StatisticalReferenceDataset', None)": [
                        70,
                        153,
                        154,
                        156,
                        157,
                        158,
                        159,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170
                    ],
                    "('org.apache.commons.math3.optimization.general#StatisticalReferenceDataset', 'getLeastSquaresProblem')": [
                        313
                    ],
                    "('org.apache.commons.math3.optimization.general#StatisticalReferenceDataset', 'getModelValue(double,DerivativeStructure)')": [
                        325
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/general/StatisticalReferenceDatasetFactory.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math3.optimization.general#StatisticalReferenceDatasetFactory', 'createKirby2')": [
                        62,
                        63,
                        64,
                        65,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80
                    ],
                    "('org.apache.commons.math3.optimization.general#StatisticalReferenceDatasetFactory', 'createHahn1')": [
                        96,
                        97,
                        98,
                        99,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116
                    ],
                    "('org.apache.commons.math3.optimization.general#StatisticalReferenceDatasetFactory', 'createMGH17')": [
                        132,
                        133,
                        134,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.math3.optimization.general#StatisticalReferenceDatasetFactory', 'createLanczos1')": [
                        164,
                        165,
                        166,
                        167,
                        168,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math3.optimization.general#StatisticalReferenceDatasetFactory', 'createKirby2')": [
                        62,
                        63,
                        64,
                        65
                    ],
                    "('org.apache.commons.math3.optimization.general#StatisticalReferenceDatasetFactory', 'createHahn1')": [
                        83,
                        84,
                        85,
                        86
                    ],
                    "('org.apache.commons.math3.optimization.general#StatisticalReferenceDatasetFactory', 'createMGH17')": [
                        104,
                        105
                    ],
                    "('org.apache.commons.math3.optimization.general#StatisticalReferenceDatasetFactory', 'createLanczos1')": [
                        124,
                        125,
                        126,
                        127
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/general/StraightLineProblem.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math3.optimization.general#StraightLineProblem', None)": [
                        38,
                        112,
                        113,
                        142,
                        143,
                        147,
                        148,
                        149,
                        151,
                        152,
                        158
                    ],
                    "('org.apache.commons.math3.optimization.general#StraightLineProblem', 'value(double)')": [
                        97
                    ],
                    "('org.apache.commons.math3.optimization.general#StraightLineProblem', 'jacobian')": [
                        108,
                        109,
                        110,
                        111
                    ],
                    "('org.apache.commons.math3.optimization.general#StraightLineProblem', 'jacobian(double)')": [
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23,
                        24,
                        155,
                        156
                    ],
                    "('org.apache.commons.math3.optimization.general#StraightLineProblem', None)": [
                        39,
                        139,
                        140,
                        141,
                        143,
                        144,
                        150,
                        152,
                        153,
                        154
                    ],
                    "('org.apache.commons.math3.optimization.general#StraightLineProblem', 'value(double)')": [
                        98,
                        99
                    ],
                    "('org.apache.commons.math3.optimization.general#StraightLineProblem', 'value(DerivativeStructure)')": [
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119
                    ]
                }
            }
        }
    },
    "8bac3361f2aaab7f2086e04f8ae03a973d521915": {
        "authored_data": "2012 Sep 14 20:16",
        "commit.message": "Fixed too large memory consumption in DSCompiler.\n\nPrior to this correction, when at one point in a program a user needed a\nderivative with 1 parameter and order 5, and at another point needed a\nderivative with 30 parameters and order 1, all DSCompilers from 1x1 to\n30x5 were created. As the compilation rules for 30 parameters and 5\norder are huge, this failed with memory heap errors after several\ngigabytes were consumed.\n\nThe fix is to simply build the necessary compilers, and let the array\ncontain null references for the compilers never used (these null\nreferences will be populated later if the user ask for some intermediate\nvalue that need them, of course).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1384905 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "1c032ee45483926f8f539457c342ba33dc1a8cb9",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.differentiation#DSCompiler', 'getCompiler(int,int)')": [
                        162,
                        163,
                        179,
                        180
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis.differentiation#DSCompiler', 'getCompiler(int,int)')": [
                        162,
                        163,
                        164,
                        165,
                        181,
                        182
                    ]
                }
            }
        }
    }
}