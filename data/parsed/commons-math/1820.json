{
    "99189ff527554aa345f63fc038fc8eacf28cbb39": {
        "authored_data": "2014 Feb 26 23:14",
        "commit.message": "Added KolmogorovSmirnovTest, deprecated KolmogorovSmirnovDistributio. JIRA: MATH-437\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1572335 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "eb66fe4a1f5357be07c356fbd28b6d013d88e87d",
        "changes": {
            "src/main/java/org/apache/commons/math3/distribution/KolmogorovSmirnovDistribution.java": {
                "new": {
                    "(None, None)": [
                        72,
                        73
                    ]
                }
            }
        }
    },
    "eb66fe4a1f5357be07c356fbd28b6d013d88e87d": {
        "authored_data": "2014 Feb 25 16:42",
        "commit.message": "Improved test coverage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1571737 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "d3470c37ab0ed7aadeafb86f93e032e03d4bcb82",
        "changes": {
            "src/main/java/org/apache/commons/math3/geometry/euclidean/oned/Euclidean1D.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.euclidean.oned#Euclidean1D', None)": [
                        56,
                        59
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.oned#Euclidean1D', 'getSubSpace')": [
                        61,
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.oned#Euclidean1D', None)": [
                        56,
                        59,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.oned#Euclidean1D', 'getSubSpace')": [
                        61,
                        62
                    ],
                    "(None, None)": [
                        97,
                        98,
                        99,
                        100
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/spherical/oned/Sphere1D.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.spherical.oned#Sphere1D', None)": [
                        62,
                        65
                    ],
                    "('org.apache.commons.math3.geometry.spherical.oned#Sphere1D', 'getSubSpace')": [
                        67,
                        68
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.geometry.spherical.oned#Sphere1D', None)": [
                        62,
                        65,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102
                    ],
                    "('org.apache.commons.math3.geometry.spherical.oned#Sphere1D', 'getSubSpace')": [
                        67,
                        68
                    ],
                    "(None, None)": [
                        103,
                        104,
                        105,
                        106
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSetTest.java": {
                "new": {
                    "('org.apache.commons.math3.geometry.euclidean.twod#PolygonsSetTest', None)": [
                        76,
                        77,
                        78,
                        83,
                        84,
                        85
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.twod#PolygonsSetTest', 'testBox')": [
                        79,
                        80,
                        81,
                        82
                    ],
                    "('org.apache.commons.math3.geometry.euclidean.twod#PolygonsSetTest', 'testInfinite')": [
                        86,
                        87,
                        88
                    ]
                }
            }
        }
    },
    "d3470c37ab0ed7aadeafb86f93e032e03d4bcb82": {
        "authored_data": "2014 Feb 25 10:27",
        "commit.message": "Typo.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1571640 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "1358d274dbb7b94bf81e37c88883a68b54a88c84",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java": {
                "old": {
                    "('org.apache.commons.math3.fitting#GaussianCurveFitter', None)": [
                        134
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting#GaussianCurveFitter', None)": [
                        134
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java": {
                "old": {
                    "('org.apache.commons.math3.fitting#HarmonicCurveFitter', None)": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting#HarmonicCurveFitter', None)": [
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/PolynomialCurveFitter.java": {
                "old": {
                    "('org.apache.commons.math3.fitting#PolynomialCurveFitter', None)": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting#PolynomialCurveFitter', None)": [
                        78
                    ]
                }
            }
        }
    },
    "1358d274dbb7b94bf81e37c88883a68b54a88c84": {
        "authored_data": "2014 Feb 25 10:26",
        "commit.message": "Fixed small inconsistency.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1571639 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "856e3cf0075136c15f3cb38cfc1a51cefbeccb09",
        "changes": {
            "src/test/java/org/apache/commons/math3/ml/neuralnet/sofm/KohonenUpdateActionTest.java": {
                "old": {
                    "('org.apache.commons.math3.ml.neuralnet.sofm#KohonenUpdateActionTest', 'testUpdate')": [
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.ml.neuralnet.sofm#KohonenUpdateActionTest', 'testUpdate')": [
                        72
                    ]
                }
            }
        }
    },
    "856e3cf0075136c15f3cb38cfc1a51cefbeccb09": {
        "authored_data": "2014 Feb 25 09:21",
        "commit.message": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1571627 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "b122db9edab9a5b2f93c79a5fd880e9d33671c9a",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/GaussianCurveFitter.java": {
                "old": {
                    "(None, None)": [
                        19,
                        21,
                        26,
                        31
                    ],
                    "('org.apache.commons.math3.fitting#GaussianCurveFitter', None)": [
                        133,
                        139
                    ],
                    "('org.apache.commons.math3.fitting#GaussianCurveFitter', 'withStartPoint(double)')": [
                        134,
                        135
                    ],
                    "('org.apache.commons.math3.fitting#GaussianCurveFitter', 'withMaxIterations(int)')": [
                        140,
                        142
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        26,
                        34
                    ],
                    "('org.apache.commons.math3.fitting#GaussianCurveFitter', None)": [
                        133,
                        134,
                        135,
                        136,
                        137,
                        143,
                        144,
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.math3.fitting#GaussianCurveFitter', 'withStartPoint(double)')": [
                        138,
                        139
                    ],
                    "('org.apache.commons.math3.fitting#GaussianCurveFitter', 'withMaxIterations(int)')": [
                        148,
                        150
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/HarmonicCurveFitter.java": {
                "old": {
                    "('org.apache.commons.math3.fitting#HarmonicCurveFitter', None)": [
                        86,
                        92
                    ],
                    "('org.apache.commons.math3.fitting#HarmonicCurveFitter', 'withStartPoint(double)')": [
                        87,
                        88
                    ],
                    "('org.apache.commons.math3.fitting#HarmonicCurveFitter', 'withMaxIterations(int)')": [
                        93,
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting#HarmonicCurveFitter', None)": [
                        86,
                        87,
                        88,
                        89,
                        90,
                        96,
                        97,
                        98,
                        99,
                        100
                    ],
                    "('org.apache.commons.math3.fitting#HarmonicCurveFitter', 'withStartPoint(double)')": [
                        91,
                        92
                    ],
                    "('org.apache.commons.math3.fitting#HarmonicCurveFitter', 'withMaxIterations(int)')": [
                        101,
                        103
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/PolynomialCurveFitter.java": {
                "old": {
                    "('org.apache.commons.math3.fitting#PolynomialCurveFitter', None)": [
                        77,
                        83
                    ],
                    "('org.apache.commons.math3.fitting#PolynomialCurveFitter', 'withStartPoint(double)')": [
                        78,
                        79
                    ],
                    "('org.apache.commons.math3.fitting#PolynomialCurveFitter', 'withMaxIterations(int)')": [
                        84,
                        86
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting#PolynomialCurveFitter', None)": [
                        77,
                        78,
                        79,
                        80,
                        81,
                        87,
                        88,
                        89,
                        90,
                        91
                    ],
                    "('org.apache.commons.math3.fitting#PolynomialCurveFitter', 'withStartPoint(double)')": [
                        82,
                        83
                    ],
                    "('org.apache.commons.math3.fitting#PolynomialCurveFitter', 'withMaxIterations(int)')": [
                        92,
                        94
                    ]
                }
            }
        }
    },
    "b122db9edab9a5b2f93c79a5fd880e9d33671c9a": {
        "authored_data": "2014 Feb 24 14:58",
        "commit.message": "Make AbstractEvaluation public\n\nAllow custom implementations of LeastSquaresProblem to use the default\nmethods for computing the covariance, rms, etc.\n\nJIRA: MATH-1102\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1571307 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "9ac2b15e4a56be293b6f2b9f2b8d8b1e945ee998",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractEvaluation.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractEvaluation', None)": [
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractEvaluation', None)": [
                        36
                    ]
                }
            }
        }
    },
    "9ac2b15e4a56be293b6f2b9f2b8d8b1e945ee998": {
        "authored_data": "2014 Feb 24 14:57",
        "commit.message": "In LeastSquaresProblem.Evaluation removed the getValue() method.\n\n- The residuals are the really the values of the objective function\n  that is being minimized.\n- Forcing the value to be a real vector and the residual computed\n  through subtraction is an unnecessary constraint. For example\n  Rotation.distance() will compute a better residual than\n  subtracting the quaternion elements of two rotations.\n- Method was not used by any optimizer.\n\nJIRA: MATH-1102\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1571306 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "a573059d0504418f5437db4a600672a52cb4d8cc",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/DenseWeightedEvaluation.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#DenseWeightedEvaluation', None)": [
                        62,
                        65,
                        66
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#DenseWeightedEvaluation', 'getValue')": [
                        63,
                        64
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'evaluationChecker(ConvergenceChecker)')": [
                        219,
                        223
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', None)": [
                        347,
                        348,
                        351,
                        352,
                        367,
                        369,
                        371,
                        372,
                        373,
                        374,
                        375,
                        390
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'evaluationChecker(ConvergenceChecker)')": [
                        219,
                        223
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', None)": [
                        349,
                        350,
                        367,
                        382
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java": {
                "old": {
                    "(None, None)": [
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/OptimumImpl.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#OptimumImpl', 'getValue')": [
                        80,
                        81
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#OptimumImpl', None)": [
                        82,
                        83,
                        84
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testTrivial')": [
                        159
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testQRColumnsPermutation')": [
                        172
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testTrivial')": [
                        159
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testQRColumnsPermutation')": [
                        172
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/EvaluationTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTest', 'testComputeValueAndJacobian')": [
                        144,
                        149
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#EvaluationTest', 'testComputeValueAndJacobian')": [
                        144,
                        149
                    ]
                }
            }
        }
    },
    "a573059d0504418f5437db4a600672a52cb4d8cc": {
        "authored_data": "2014 Feb 23 14:00",
        "commit.message": "Moved OptimizationProblem interface to optim package.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1571015 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "dcdfd7ed9e8c34637a54e52ffe1eae6692d05e01",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem.java": {
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/AbstractOptimizationProblem.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                }
            }
        }
    },
    "dcdfd7ed9e8c34637a54e52ffe1eae6692d05e01": {
        "authored_data": "2014 Feb 23 14:00",
        "commit.message": "Change private least square problem implementation to internal class.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1571014 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "f299ecf3309c48dd02f16621da4e5019fe0b9c30",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateJacobianFunction,RealVector,RealVector,ConvergenceChecker,int,int)')": [
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', 'create(MultivariateJacobianFunction,RealVector,RealVector,ConvergenceChecker,int,int)')": [
                        65
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LeastSquaresFactory', None)": [
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390
                    ]
                }
            }
        }
    }
}