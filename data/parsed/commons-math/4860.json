{
    "2e3e0829846239f4f1378a81e307ed28b11f9ecc": {
        "authored_data": "2010 Mar 09 12:53",
        "commit.message": "Issues\n  https://issues.apache.org/jira/browse/MATH-348\n  https://issues.apache.org/jira/browse/MATH-349\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@920852 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "09a4643e101e9b42537806eea6601eb2f389f4b9",
        "changes": {
            "src/main/java/org/apache/commons/math/distribution/BetaDistribution.java": {
                "old": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        46,
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#BetaDistributionImpl', None)": [
                        63,
                        74
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#BetaDistributionImpl', None)": [
                        63,
                        64,
                        65,
                        66,
                        77,
                        78,
                        79,
                        80
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/BinomialDistribution.java": {
                "new": {
                    "(None, None)": [
                        48,
                        50,
                        56,
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', None)": [
                        51,
                        52,
                        79,
                        94
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'getDomainUpperBound(double)')": [
                        126
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'cumulativeProbability(int)')": [
                        142,
                        146
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'probability(int)')": [
                        159
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', None)": [
                        51,
                        52,
                        79,
                        80,
                        81,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        106,
                        107,
                        108,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'setNumberOfTrials(int)')": [
                        83
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'setNumberOfTrialsInternal(int)')": [
                        92
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'setProbabilityOfSuccess(double)')": [
                        110
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'setProbabilityOfSuccessInternal(double)')": [
                        119
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'getDomainUpperBound(double)')": [
                        150
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'cumulativeProbability(int)')": [
                        166,
                        170
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'probability(int)')": [
                        183
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/CauchyDistribution.java": {
                "new": {
                    "(None, None)": [
                        51,
                        53,
                        59,
                        61
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', None)": [
                        58,
                        59,
                        118,
                        127
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'getDomainLowerBound(double)')": [
                        152
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'getDomainUpperBound(double)')": [
                        172
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'getInitialDomain(double)')": [
                        193,
                        195,
                        196,
                        197
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', None)": [
                        58,
                        59,
                        118,
                        119,
                        120,
                        123,
                        124,
                        125,
                        126,
                        127,
                        136,
                        137,
                        138,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'setMedian(double)')": [
                        122
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'setMedianInternal(double)')": [
                        128
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'setScale(double)')": [
                        140
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'setScaleInternal(double)')": [
                        147
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'getDomainLowerBound(double)')": [
                        171
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'getDomainUpperBound(double)')": [
                        191
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'getInitialDomain(double)')": [
                        212,
                        214,
                        215,
                        216
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ChiSquaredDistribution.java": {
                "new": {
                    "(None, None)": [
                        36,
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', None)": [
                        51,
                        54,
                        55,
                        61,
                        192
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', 'setDegreesOfFreedom(double)')": [
                        63
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', 'getDegreesOfFreedom')": [
                        71
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', 'cumulativeProbability(double)')": [
                        92
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', 'getDomainLowerBound(double)')": [
                        131
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', None)": [
                        51,
                        52,
                        53,
                        54,
                        57,
                        58,
                        64,
                        65,
                        66,
                        69,
                        70,
                        71,
                        72,
                        73,
                        204,
                        205,
                        206,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', 'setDegreesOfFreedom(double)')": [
                        68
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', 'setDegreesOfFreedomInternal(double)')": [
                        74,
                        75
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', 'getDegreesOfFreedom')": [
                        83
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', 'cumulativeProbability(double)')": [
                        104
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', 'getDomainLowerBound(double)')": [
                        143
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', 'setGamma(GammaDistribution)')": [
                        208
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', 'setGammaInternal(GammaDistribution)')": [
                        216
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ExponentialDistribution.java": {
                "new": {
                    "(None, None)": [
                        36,
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', None)": [
                        44,
                        51
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'density(Double)')": [
                        78
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'cumulativeProbability(double)')": [
                        101
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        128
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'getDomainUpperBound(double)')": [
                        162
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'getInitialDomain(double)')": [
                        184,
                        187
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', None)": [
                        44,
                        51,
                        52,
                        53,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'setMean(double)')": [
                        55
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'setMeanInternal(double)')": [
                        62
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'density(Double)')": [
                        88
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'cumulativeProbability(double)')": [
                        111
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        138
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'getDomainUpperBound(double)')": [
                        172
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'getInitialDomain(double)')": [
                        194,
                        197
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/FDistribution.java": {
                "new": {
                    "(None, None)": [
                        36,
                        38,
                        50,
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#FDistributionImpl', None)": [
                        54,
                        56,
                        57,
                        167,
                        189
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'cumulativeProbability(double)')": [
                        80,
                        81
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'getInitialDomain(double)')": [
                        154
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#FDistributionImpl', None)": [
                        54,
                        56,
                        57,
                        167,
                        168,
                        169,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        201,
                        202,
                        203,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'cumulativeProbability(double)')": [
                        80,
                        81
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'getInitialDomain(double)')": [
                        154
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'setNumeratorDegreesOfFreedom(double)')": [
                        171
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'setNumeratorDegreesOfFreedomInternal(double)')": [
                        180
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'setDenominatorDegreesOfFreedom(double)')": [
                        205
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'setDenominatorDegreesOfFreedomInternal(double)')": [
                        214
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/GammaDistribution.java": {
                "new": {
                    "(None, None)": [
                        36,
                        38,
                        50,
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', None)": [
                        49,
                        50,
                        111,
                        133
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'cumulativeProbability(double)')": [
                        76
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'density(Double)')": [
                        159
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'getDomainUpperBound(double)')": [
                        196
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'getInitialDomain(double)')": [
                        222,
                        225
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', None)": [
                        49,
                        50,
                        111,
                        112,
                        113,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        144,
                        145,
                        146,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'cumulativeProbability(double)')": [
                        76
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'setAlpha(double)')": [
                        115
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'setAlphaInternal(double)')": [
                        123
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'setBeta(double)')": [
                        148
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'setBetaInternal(double)')": [
                        156
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'density(Double)')": [
                        181
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'getDomainUpperBound(double)')": [
                        218
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'getInitialDomain(double)')": [
                        244,
                        247
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java": {
                "old": {
                    "(None, None)": [
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        56,
                        58,
                        64,
                        66,
                        72,
                        74
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/HypergeometricDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', None)": [
                        68,
                        69,
                        70,
                        244,
                        258,
                        272
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'cumulativeProbability(int)')": [
                        83,
                        84,
                        85,
                        86,
                        87,
                        93
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'getDomainLowerBound(double)')": [
                        122,
                        123
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'getDomainUpperBound(double)')": [
                        136
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'probability(int)')": [
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        209,
                        210,
                        214,
                        216
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'upperCumulativeProbability(int)')": [
                        291,
                        292,
                        293,
                        294,
                        295,
                        301
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', None)": [
                        68,
                        69,
                        70,
                        71,
                        237,
                        238,
                        239,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        262,
                        263,
                        264,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        287,
                        288,
                        289,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'cumulativeProbability(int)')": [
                        84,
                        90,
                        91
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'getDomainLowerBound(double)')": [
                        120
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'getDomainUpperBound(double)')": [
                        133
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'probability(int)')": [
                        197,
                        201,
                        202,
                        206,
                        207,
                        209
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setNumberOfSuccesses(int)')": [
                        241
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setNumberOfSuccessesInternal(int)')": [
                        249
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setPopulationSize(int)')": [
                        266
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setPopulationSizeInternal(int)')": [
                        274
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setSampleSize(int)')": [
                        291
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'setSampleSizeInternal(int)')": [
                        299
                    ],
                    "('org.apache.commons.math.distribution#HypergeometricDistributionImpl', 'upperCumulativeProbability(int)')": [
                        317,
                        323
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/NormalDistribution.java": {
                "new": {
                    "(None, None)": [
                        42,
                        44,
                        54,
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', None)": [
                        73,
                        74,
                        97,
                        114
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'density(Double)')": [
                        131,
                        132
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'getDomainLowerBound(double)')": [
                        211
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'getDomainUpperBound(double)')": [
                        231
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'getInitialDomain(double)')": [
                        252,
                        254,
                        256
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', None)": [
                        73,
                        74,
                        97,
                        98,
                        99,
                        102,
                        103,
                        104,
                        105,
                        106,
                        123,
                        124,
                        125,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'setMean(double)')": [
                        101
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'setMeanInternal(double)')": [
                        107
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'setStandardDeviation(double)')": [
                        127
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'setStandardDeviationInternal(double)')": [
                        134
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'density(Double)')": [
                        150,
                        151
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'getDomainLowerBound(double)')": [
                        230
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'getDomainUpperBound(double)')": [
                        250
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'getInitialDomain(double)')": [
                        271,
                        273,
                        275
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PascalDistribution.java": {
                "new": {
                    "(None, None)": [
                        60,
                        62,
                        69,
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', None)": [
                        51,
                        52,
                        76,
                        91
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'cumulativeProbability(int)')": [
                        138,
                        139
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'probability(int)')": [
                        155,
                        156,
                        157
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', None)": [
                        51,
                        52,
                        76,
                        77,
                        78,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        102,
                        103,
                        104,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'setNumberOfSuccesses(int)')": [
                        80
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'setNumberOfSuccessesInternal(int)')": [
                        88
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'setProbabilityOfSuccess(double)')": [
                        106
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'setProbabilityOfSuccessInternal(double)')": [
                        114
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'cumulativeProbability(int)')": [
                        160,
                        161
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'probability(int)')": [
                        177,
                        178,
                        179
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PoissonDistribution.java": {
                "new": {
                    "(None, None)": [
                        50,
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', None)": [
                        124,
                        127,
                        128,
                        146,
                        251
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'getMean')": [
                        137
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'setMean(double)')": [
                        152
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'setNormal(NormalDistribution)')": [
                        253
                    ],
                    "(None, None)": [
                        254,
                        255
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', None)": [
                        124,
                        125,
                        126,
                        127,
                        130,
                        148,
                        149,
                        150,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        268,
                        269,
                        270
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'getMean')": [
                        139
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'setMean(double)')": [
                        152
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'setNormalAndMeanInternal(NormalDistribution,double)')": [
                        162,
                        163,
                        168,
                        169
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'setNormal(NormalDistribution)')": [
                        272
                    ],
                    "(None, None)": [
                        273
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/TDistribution.java": {
                "new": {
                    "(None, None)": [
                        36,
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#TDistributionImpl', None)": [
                        47
                    ],
                    "('org.apache.commons.math.distribution#TDistributionImpl', 'cumulativeProbability(double)')": [
                        85,
                        86
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#TDistributionImpl', None)": [
                        47,
                        53,
                        55,
                        58,
                        59,
                        60,
                        61,
                        62
                    ],
                    "('org.apache.commons.math.distribution#TDistributionImpl', 'setDegreesOfFreedom(double)')": [
                        57
                    ],
                    "('org.apache.commons.math.distribution#TDistributionImpl', 'setDegreesOfFreedomInternal(double)')": [
                        63
                    ],
                    "('org.apache.commons.math.distribution#TDistributionImpl', 'cumulativeProbability(double)')": [
                        94,
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/WeibullDistribution.java": {
                "new": {
                    "(None, None)": [
                        54,
                        56,
                        62,
                        64
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', None)": [
                        51,
                        52
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'cumulativeProbability(double)')": [
                        65
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        109
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'getInitialDomain(double)')": [
                        179
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', None)": [
                        51,
                        52,
                        117,
                        119,
                        122,
                        123,
                        124,
                        125,
                        126,
                        139,
                        141,
                        144,
                        145,
                        146,
                        147,
                        148
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'cumulativeProbability(double)')": [
                        65
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        109
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'setShape(double)')": [
                        121
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'setShapeInternal(double)')": [
                        127
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'setScale(double)')": [
                        143
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'setScaleInternal(double)')": [
                        149
                    ],
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', 'getInitialDomain(double)')": [
                        197
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ZipfDistribution.java": {
                "old": {
                    "(None, None)": [
                        67
                    ]
                },
                "new": {
                    "(None, None)": [
                        48,
                        50,
                        67,
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ZipfDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', None)": [
                        52,
                        53,
                        72,
                        99
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'setNumberOfElements(int)')": [
                        73
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'setExponent(double)')": [
                        100
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'probability(int)')": [
                        117
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'cumulativeProbability(int)')": [
                        135
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', None)": [
                        52,
                        53,
                        72,
                        73,
                        74,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        112,
                        113,
                        114,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'setNumberOfElements(int)')": [
                        75,
                        76
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'setNumberOfElementsInternal(int)')": [
                        86
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'setExponent(double)')": [
                        115,
                        116
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'setExponentInternal(double)')": [
                        126
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'probability(int)')": [
                        143
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionImpl', 'cumulativeProbability(int)')": [
                        161
                    ]
                }
            }
        }
    },
    "09a4643e101e9b42537806eea6601eb2f389f4b9": {
        "authored_data": "2010 Mar 08 22:57",
        "commit.message": "Resolved multiple problems leading to inaccuracy and/or failure to compute Normal, ChiSquare and \nPoisson probabilities, Erf and Gamma functions.\n\nJIRA: MATH-282\nJIRA: MATH-301\n\nSummary of changes:\n\n* BrentSolver has been changed to expose its configured absolute accuracy. This solver is used by\n  the default inverse cum implementation in AbstractContinuousDistribution and the hard-coded setting\n  (1E-6) was limiting accuracy in inverse cumulative probability estimates. AbstractContinuousDistribution\n  was changed to allow distributions to set this value and NormalDistributionImpl was changed to set it to\n  1E-9 by default and allow users to configure it via a constructor argument.\n\n* AbstractContinuousDistribution and AbstractIntegerDistribution inverseCumulativeProbability methods\n  have been modified to check for NaN values returned by cumulativeProbability and throw MathExceptions\n  when this happens.\n\n* The criteria for choosing between the Lanczos series and continued fraction expansion when computing\n  regularized gamma functions has been changed to (x >= a + 1). When using the series approximation\n  (regularizedGammaP), divergence to infinity is checked and when this happens, 1 is returned.\n\n* When scaling continued fractions to (try to) avoid divergence to infinity, the larger of a and b is\n  used as a scale factor and the attempt to scale is repeated up to 5 times, using successive powers\n  of the scale factor.\n\n* The maximum number of iterations used in estimating cumulative probabilities for PoissonDistributionImpl\n  has been decreased from Integer.MAX_VALUE to 10000000 and made configurable.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@920558 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "79a0ac99bc97baa32a327b1f251a1f0e8b1b3941",
        "changes": {
            "src/main/java/org/apache/commons/math/MessagesResources_fr.java": {
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        218,
                        219,
                        740,
                        741,
                        742,
                        743,
                        744,
                        745,
                        746,
                        747,
                        748
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', None)": [
                        54,
                        55,
                        56,
                        57,
                        58,
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', None)": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        60,
                        61,
                        62,
                        63,
                        64,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        73,
                        93,
                        94,
                        95,
                        109
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        161
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', None)": [
                        42,
                        43,
                        44,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        76,
                        78,
                        82,
                        83,
                        84,
                        85,
                        86,
                        116,
                        117,
                        118
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'getSolverAbsoluteAccuracy')": [
                        159,
                        160
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'inverseCumulativeProbability(double)')": [
                        176,
                        201,
                        204
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'inverseCumulativeProbability(double)')": [
                        177,
                        202,
                        205
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', None)": [
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'checkedCumulativeProbability(int)')": [
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', None)": [
                        55,
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', None)": [
                        36,
                        37,
                        38,
                        50,
                        51,
                        52,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        73,
                        74,
                        75,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        167,
                        168,
                        169
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'getSolverAbsoluteAccuracy')": [
                        165,
                        166
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'cumulativeProbability(int)')": [
                        135,
                        136
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', None)": [
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'cumulativeProbability(int)')": [
                        195
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/special/Gamma.java": {
                "old": {
                    "('org.apache.commons.math.special#Gamma', 'regularizedGammaP(double,double,double,int)')": [
                        169,
                        178
                    ],
                    "('org.apache.commons.math.special#Gamma', None)": [
                        219
                    ],
                    "('org.apache.commons.math.special#Gamma', 'regularizedGammaQ(double,double,double,int)')": [
                        244
                    ]
                },
                "new": {
                    "('org.apache.commons.math.special#Gamma', 'regularizedGammaP(double,double,double,int)')": [
                        169,
                        178,
                        188,
                        189
                    ],
                    "('org.apache.commons.math.special#Gamma', None)": [
                        221
                    ],
                    "('org.apache.commons.math.special#Gamma', 'regularizedGammaQ(double,double,double,int)')": [
                        246
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/ContinuedFraction.java": {
                "old": {
                    "('org.apache.commons.math.util#ContinuedFraction', 'evaluate(double,double,int)')": [
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        152,
                        153
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#ContinuedFraction', 'evaluate(double,double,int)')": [
                        141,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'makeCumulativeTestPoints')": [
                        51,
                        52
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'setUp')": [
                        66
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'verifyQuantiles')": [
                        76,
                        79,
                        80
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'testMath280')": [
                        169,
                        170
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'makeCumulativeTestPoints')": [
                        51,
                        52
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionTest', None)": [
                        63
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'setUp')": [
                        67
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'verifyQuantiles')": [
                        77,
                        80,
                        81
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'testMath280')": [
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/PoissonDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#PoissonDistributionTest', None)": [
                        177,
                        180,
                        189
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionTest', 'testLargeMeanInverseCumulativeProbability')": [
                        200,
                        203,
                        205,
                        208,
                        210,
                        216
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#PoissonDistributionTest', 'testLargeMeanInverseCumulativeProbability')": [
                        197,
                        200,
                        204,
                        205,
                        207,
                        208,
                        209,
                        210
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/special/ErfTest.java": {
                "new": {
                    "('org.apache.commons.math.special#ErfTest', None)": [
                        78,
                        79,
                        80,
                        81
                    ],
                    "('org.apache.commons.math.special#ErfTest', 'testLargeValues')": [
                        82,
                        83,
                        84,
                        85,
                        86
                    ],
                    "(None, None)": [
                        87,
                        88
                    ]
                }
            }
        }
    },
    "ed40ebc5cddcd50903e1052a076470a51c15de13": {
        "authored_data": "2010 Mar 07 22:19",
        "commit.message": "improved documentation of ODE package, including the new jacobians part\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@920131 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "7a7eb1dccc02692045770de954a2c8aa8feac14d",
        "changes": {
            "src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java": {
                "new": {
                    "(None, None)": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java": {
                "new": {
                    "(None, None)": [
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54
                    ]
                }
            }
        }
    },
    "7a7eb1dccc02692045770de954a2c8aa8feac14d": {
        "authored_data": "2010 Mar 07 10:59",
        "commit.message": "separated ODEWithJacobians from ParameterizedODE:\nwhen jacobians are already available, there is no need to have a setParameter method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@919963 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "484fc6330bd6bfaebe5df1de9ddacb7bc6ff444c",
        "changes": {
            "src/main/java/org/apache/commons/math/ode/jacobians/EventHandlerWithJacobians.java": {
                "old": {
                    "(None, None)": [
                        115
                    ]
                },
                "new": {
                    "(None, None)": [
                        115
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java": {
                "old": {
                    "(None, None)": [
                        47
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobians', None)": [
                        57,
                        76,
                        96,
                        441,
                        491,
                        492,
                        493,
                        494,
                        495,
                        500,
                        501,
                        534,
                        541,
                        542,
                        556,
                        557,
                        558,
                        559,
                        827,
                        843,
                        844,
                        846,
                        847
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobians', 'addStepHandler(StepHandlerWithJacobians)')": [
                        110
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobians', 'addEventHandler(EventHandlerWithJacobians,double,double,int)')": [
                        152
                    ]
                },
                "new": {
                    "(None, None)": [
                        47
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobians', None)": [
                        57,
                        76,
                        96,
                        445,
                        499,
                        500,
                        533,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        546,
                        547,
                        548,
                        549,
                        550,
                        552,
                        553,
                        566,
                        834,
                        850,
                        851,
                        852,
                        853,
                        854
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobians', 'addStepHandler(StepHandlerWithJacobians)')": [
                        110,
                        111,
                        112
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobians', 'addEventHandler(EventHandlerWithJacobians,double,double,int)')": [
                        154,
                        155,
                        156
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', None)": [
                        278,
                        326,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', None)": [
                        278,
                        326
                    ]
                }
            }
        }
    },
    "484fc6330bd6bfaebe5df1de9ddacb7bc6ff444c": {
        "authored_data": "2010 Mar 06 21:33",
        "commit.message": "suppressed a warning for unused constructor\nthe constructor is called only by externalization\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@919856 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "70586e476ef114613f6d3c7941fe3f2e745b4670",
        "changes": {
            "src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java": {
                "new": {
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobians', None)": [
                        602
                    ]
                }
            }
        }
    },
    "70586e476ef114613f6d3c7941fe3f2e745b4670": {
        "authored_data": "2010 Mar 06 21:30",
        "commit.message": "fixed findbugs errors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@919855 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "d381e12f997a4373acda164e60355f63c15fd0ea",
        "changes": {
            "src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java": {
                "new": {
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobians', None)": [
                        600,
                        601,
                        602,
                        603,
                        604,
                        605
                    ]
                }
            }
        }
    }
}