{
    "2568420bf6a022558b0cb7bb837a42659c22de51": {
        "authored_data": "2011 Oct 03 04:36",
        "commit.message": "Eliminated MathException from distribution interfaces and impls.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178295 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "0cf21a482b87a611c5832e877e9eed841685dcd7",
        "changes": {
            "src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', None)": [
                        72,
                        73,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        181,
                        182,
                        183,
                        194
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        76,
                        77,
                        78,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        123,
                        132,
                        133,
                        134
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'sample')": [
                        184
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'sample(int)')": [
                        198
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        74,
                        85,
                        110
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', None)": [
                        139,
                        140
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'sample')": [
                        141
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'sample(int)')": [
                        154
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.distribution#AbstractDistribution', None)": [
                        68,
                        69
                    ],
                    "('org.apache.commons.math.distribution#AbstractDistribution', 'cumulativeProbability(double,double)')": [
                        72,
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#AbstractDistribution', 'cumulativeProbability(double,double)')": [
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', None)": [
                        63,
                        64,
                        65,
                        80,
                        81,
                        108,
                        109,
                        110,
                        139,
                        140,
                        158,
                        159,
                        224,
                        225,
                        238,
                        256,
                        258,
                        262
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(double)')": [
                        66
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(double,double)')": [
                        85,
                        86
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(int)')": [
                        111
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(int,int)')": [
                        143
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'inverseCumulativeProbability(double)')": [
                        162
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'sample')": [
                        226
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'sample(int)')": [
                        241
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'checkedCumulativeProbability(int)')": [
                        265,
                        269
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', None)": [
                        63,
                        103,
                        213,
                        243,
                        245,
                        249
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(double)')": [
                        64
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(double,double)')": [
                        81
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(int)')": [
                        104
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(int,int)')": [
                        134
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'inverseCumulativeProbability(double)')": [
                        151
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'sample')": [
                        214
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'sample(int)')": [
                        228
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'checkedCumulativeProbability(int)')": [
                        252,
                        256,
                        257
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.distribution#BetaDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        131
                    ],
                    "('org.apache.commons.math.distribution#BetaDistributionImpl', 'cumulativeProbability(double)')": [
                        160
                    ],
                    "('org.apache.commons.math.distribution#BetaDistributionImpl', 'cumulativeProbability(double,double)')": [
                        172
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#BetaDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        130
                    ],
                    "('org.apache.commons.math.distribution#BetaDistributionImpl', 'cumulativeProbability(double)')": [
                        159
                    ],
                    "('org.apache.commons.math.distribution#BetaDistributionImpl', 'cumulativeProbability(double,double)')": [
                        171
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/BinomialDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', None)": [
                        107,
                        149,
                        150
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'cumulativeProbability(int)')": [
                        111
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        154,
                        155
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'cumulativeProbability(int)')": [
                        109
                    ],
                    "('org.apache.commons.math.distribution#BinomialDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        150
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', None)": [
                        88,
                        89,
                        90,
                        103,
                        104
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', 'cumulativeProbability(double)')": [
                        91
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        109,
                        110
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', None)": [
                        87
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', 'cumulativeProbability(double)')": [
                        88
                    ],
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        104
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ContinuousDistribution.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        33,
                        34,
                        36,
                        58,
                        61,
                        68,
                        73
                    ]
                },
                "new": {
                    "(None, None)": [
                        32,
                        56,
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/Distribution.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        36,
                        37,
                        39,
                        50,
                        51,
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', None)": [
                        102,
                        103,
                        104,
                        123,
                        124,
                        151
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'cumulativeProbability(double)')": [
                        105
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        128
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'sample')": [
                        155
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', None)": [
                        101
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'cumulativeProbability(double)')": [
                        102
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        123
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'sample')": [
                        149
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', None)": [
                        126,
                        127,
                        128,
                        151,
                        152
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'cumulativeProbability(double)')": [
                        129
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        157,
                        158
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#FDistributionImpl', None)": [
                        125
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'cumulativeProbability(double)')": [
                        126
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        152
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', None)": [
                        98,
                        99,
                        100,
                        121,
                        122
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'cumulativeProbability(double)')": [
                        101
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        127,
                        128
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', None)": [
                        97
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'cumulativeProbability(double)')": [
                        98
                    ],
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        122
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/IntegerDistribution.java": {
                "old": {
                    "(None, None)": [
                        18,
                        19,
                        46,
                        47,
                        49,
                        58,
                        59,
                        62,
                        85,
                        86,
                        90,
                        104,
                        107,
                        114,
                        119
                    ]
                },
                "new": {
                    "(None, None)": [
                        45,
                        56,
                        82,
                        98,
                        109
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', None)": [
                        124,
                        125,
                        169,
                        170,
                        191,
                        192,
                        193
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'cumulativeProbability(double)')": [
                        126
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'cumulativeProbability(double,double)')": [
                        138
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        176
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'sample')": [
                        194
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', None)": [
                        123,
                        187,
                        188
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'cumulativeProbability(double)')": [
                        124
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'cumulativeProbability(double,double)')": [
                        136
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        172
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'sample')": [
                        189
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PascalDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', None)": [
                        107,
                        148,
                        149
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'cumulativeProbability(int)')": [
                        111
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        153,
                        154
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'cumulativeProbability(int)')": [
                        109
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        149
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PoissonDistribution.java": {
                "old": {
                    "(None, None)": [
                        19,
                        47,
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', None)": [
                        149,
                        173,
                        201,
                        202,
                        203
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'cumulativeProbability(int)')": [
                        153
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'normalApproximateProbability(int)')": [
                        176
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'sample')": [
                        204
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'cumulativeProbability(int)')": [
                        151
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'normalApproximateProbability(int)')": [
                        173
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', None)": [
                        198,
                        199
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionImpl', 'sample')": [
                        200
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.distribution#TDistributionImpl', None)": [
                        104,
                        105,
                        106,
                        135,
                        136
                    ],
                    "('org.apache.commons.math.distribution#TDistributionImpl', 'cumulativeProbability(double)')": [
                        107
                    ],
                    "('org.apache.commons.math.distribution#TDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        141,
                        142
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#TDistributionImpl', None)": [
                        103
                    ],
                    "('org.apache.commons.math.distribution#TDistributionImpl', 'cumulativeProbability(double)')": [
                        104
                    ],
                    "('org.apache.commons.math.distribution#TDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        136
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        610,
                        611,
                        612,
                        625,
                        626,
                        627,
                        640,
                        641,
                        642,
                        654,
                        655,
                        656,
                        669,
                        670,
                        671,
                        695,
                        696,
                        697,
                        773,
                        774,
                        775,
                        788,
                        789,
                        790,
                        802,
                        803,
                        804,
                        817,
                        818,
                        819,
                        832,
                        833,
                        834,
                        1047,
                        1048,
                        1049,
                        1061,
                        1062,
                        1063
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextBeta(double,double)')": [
                        613
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextBinomial(int,double)')": [
                        628
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextCauchy(double,double)')": [
                        643
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextChiSquare(double)')": [
                        657
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextF(double,double)')": [
                        672
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextGamma(double,double)')": [
                        698
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextHypergeometric(int,int,int)')": [
                        776
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPascal(int,double)')": [
                        791
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextT(double)')": [
                        805
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextWeibull(double,double)')": [
                        820
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextZipf(int,double)')": [
                        835
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextInversionDeviate(ContinuousDistribution)')": [
                        1050
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextInversionDeviate(IntegerDistribution)')": [
                        1064
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        609,
                        610,
                        623,
                        624,
                        637,
                        638,
                        650,
                        651,
                        664,
                        665,
                        689,
                        690,
                        766,
                        767,
                        780,
                        781,
                        793,
                        794,
                        807,
                        808,
                        821,
                        822,
                        1035,
                        1036,
                        1048,
                        1049
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextBeta(double,double)')": [
                        611
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextBinomial(int,double)')": [
                        625
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextCauchy(double,double)')": [
                        639
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextChiSquare(double)')": [
                        652
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextF(double,double)')": [
                        666
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextGamma(double,double)')": [
                        691
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextHypergeometric(int,int,int)')": [
                        768
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPascal(int,double)')": [
                        782
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextT(double)')": [
                        795
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextWeibull(double,double)')": [
                        809
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextZipf(int,double)')": [
                        823
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextInversionDeviate(ContinuousDistribution)')": [
                        1037
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextInversionDeviate(IntegerDistribution)')": [
                        1050
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/AbtractIntegerDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.distribution#AbtractIntegerDistributionTest', None)": [
                        131
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#AbtractIntegerDistributionTest', None)": [
                        130
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/PoissonDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionTest', 'testLargeMeanCumulativeProbability')": [
                        172
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionTest', 'testLargeMeanInverseCumulativeProbability')": [
                        219
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#PoissonDistributionTest', 'testLargeMeanCumulativeProbability')": [
                        171
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionTest', 'testLargeMeanInverseCumulativeProbability')": [
                        218
                    ]
                }
            }
        }
    },
    "0cf21a482b87a611c5832e877e9eed841685dcd7": {
        "authored_data": "2011 Oct 03 04:19",
        "commit.message": "Removed trailing space.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178293 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "63febb4f93eaac4ee64ebcc623bbb7bbe814d38b",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/MathInternalError.java": {
                "old": {
                    "('org.apache.commons.math.exception#MathInternalError', None)": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MathInternalError', None)": [
                        48
                    ]
                }
            }
        }
    },
    "63febb4f93eaac4ee64ebcc623bbb7bbe814d38b": {
        "authored_data": "2011 Oct 03 02:54",
        "commit.message": "Added constructor taking a localized message.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178287 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "3ae07f34ab51300614bfb0202443bbb4d2c5acd8",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/MathInternalError.java": {
                "new": {
                    "(None, None)": [
                        19,
                        57
                    ],
                    "('org.apache.commons.math.exception#MathInternalError', None)": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56
                    ]
                }
            }
        }
    },
    "3ae07f34ab51300614bfb0202443bbb4d2c5acd8": {
        "authored_data": "2011 Oct 02 19:43",
        "commit.message": "Fixed about 90 checkstyle errors.\n\nThe errors were mainly trailing blanks, missing javadoc, wrong javadoc\nparameters, hidden variables ...\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178235 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "76b57cddf3d0a4d0b2881e8343b7bee2a505d714",
        "changes": {
            "src/main/java/org/apache/commons/math/Field.java": {
                "old": {
                    "(None, None)": [
                        52,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        52,
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java": {
                "old": {
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', None)": [
                        217,
                        218
                    ],
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', 'setup(int,UnivariateRealFunction,double,double)')": [
                        224,
                        229,
                        232,
                        233
                    ],
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', 'integrate(int,UnivariateRealFunction,double,double)')": [
                        243,
                        248
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', None)": [
                        217,
                        218
                    ],
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', 'setup(int,UnivariateRealFunction,double,double)')": [
                        224,
                        229,
                        232,
                        233
                    ],
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', 'integrate(int,UnivariateRealFunction,double,double)')": [
                        243,
                        248
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialsUtils.java": {
                "old": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialsUtils', None)": [
                        271
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialsUtils', None)": [
                        271
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#KolmogorovSmirnovDistributionImpl', 'createH(double)')": [
                        275
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#KolmogorovSmirnovDistributionImpl', 'createH(double)')": [
                        275
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/BigFraction.java": {
                "old": {
                    "('org.apache.commons.math.fraction#BigFraction', None)": [
                        170
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#BigFraction', None)": [
                        170
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/partitioning/BSPTree.java": {
                "old": {
                    "('org.apache.commons.math.geometry.partitioning#BSPTree', None)": [
                        432
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry.partitioning#BSPTree', None)": [
                        432
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#AbstractIntegrator', None)": [
                        79,
                        80,
                        218,
                        219,
                        220,
                        221,
                        223,
                        224,
                        225,
                        231
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'setEquations(ExpandableStatefulODE)')": [
                        192
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        207,
                        208,
                        209,
                        210,
                        213,
                        214,
                        215,
                        216,
                        217
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'computeDerivatives(double,double,double)')": [
                        250
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#AbstractIntegrator', None)": [
                        79,
                        80,
                        218,
                        219,
                        220,
                        221,
                        223,
                        224,
                        225,
                        231,
                        377
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'setEquations(ExpandableStatefulODE)')": [
                        192
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        207,
                        208,
                        209,
                        210,
                        213,
                        214,
                        215,
                        216,
                        217
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'computeDerivatives(double,double,double)')": [
                        250
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/EquationsMapper.java": {
                "old": {
                    "('org.apache.commons.math.ode#EquationsMapper', None)": [
                        40,
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#EquationsMapper', None)": [
                        40,
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/ExpandableStatefulODE.java": {
                "old": {
                    "('org.apache.commons.math.ode#ExpandableStatefulODE', None)": [
                        300,
                        315
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#ExpandableStatefulODE', None)": [
                        314
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/JacobianMatrices.java": {
                "old": {
                    "('org.apache.commons.math.ode#JacobianMatrices', None)": [
                        186,
                        187,
                        230,
                        301
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'setParameterizedODE(ParameterizedODE)')": [
                        188,
                        189
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'setInitialMainStateJacobian(double)')": [
                        233
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'getCurrentMainSetJacobian(double)')": [
                        292,
                        294,
                        295
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'getCurrentParameterJacobian(String,double)')": [
                        309,
                        312,
                        313,
                        314,
                        315
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#JacobianMatrices', None)": [
                        157,
                        187,
                        188,
                        231,
                        302
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'setParameterizedODE(ParameterizedODE)')": [
                        189,
                        190
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'setInitialMainStateJacobian(double)')": [
                        234
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'getCurrentMainSetJacobian(double)')": [
                        293,
                        295,
                        296
                    ],
                    "('org.apache.commons.math.ode#JacobianMatrices', 'getCurrentParameterJacobian(String,double)')": [
                        310,
                        313,
                        314,
                        315,
                        316
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/MainStateJacobianProvider.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#MultistepIntegrator', None)": [
                        297
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#MultistepIntegrator', None)": [
                        297
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/ParameterConfiguration.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/ParameterJacobianProvider.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/ParameterJacobianWrapper.java": {
                "old": {
                    "(None, None)": [
                        25,
                        88
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        88
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/ParameterizedODE.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/ParameterizedWrapper.java": {
                "old": {
                    "(None, None)": [
                        25,
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java": {
                "old": {
                    "(None, None)": [
                        27,
                        47
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'filterStep(double,boolean,boolean)')": [
                        319
                    ]
                },
                "new": {
                    "(None, None)": [
                        46,
                        47
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'filterStep(double,boolean,boolean)')": [
                        319
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'writeExternal(ObjectOutput)')": [
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'writeExternal(ObjectOutput)')": [
                        436,
                        437,
                        438
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', None)": [
                        124,
                        150,
                        181,
                        182,
                        208,
                        209,
                        210,
                        243,
                        244,
                        549
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'allocateInterpolatedArrays(int,EquationsMapper,EquationsMapper)')": [
                        211,
                        212,
                        213
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'reinitialize(double,boolean,EquationsMapper,EquationsMapper)')": [
                        247,
                        248,
                        260,
                        261,
                        262
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'writeBaseExternal(ObjectOutput)')": [
                        543,
                        544,
                        545,
                        546,
                        547,
                        548
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'readBaseExternal(ObjectInput)')": [
                        590
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', None)": [
                        124,
                        150,
                        181,
                        182,
                        183,
                        184,
                        210,
                        241,
                        242,
                        553,
                        554
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'allocateInterpolatedArrays(int)')": [
                        211
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'reinitialize(double,boolean,EquationsMapper,EquationsMapper)')": [
                        245,
                        246,
                        258,
                        259,
                        260
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'writeBaseExternal(ObjectOutput)')": [
                        541
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'readBaseExternal(ObjectInput)')": [
                        584
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/correlation/StorelessBivariateCovariance.java": {
                "old": {
                    "('org.apache.commons.math.stat.correlation#StorelessBivariateCovariance', None)": [
                        45,
                        48
                    ],
                    "('org.apache.commons.math.stat.correlation#StorelessBivariateCovariance', 'increment(double,double)')": [
                        52,
                        58
                    ],
                    "('org.apache.commons.math.stat.correlation#StorelessBivariateCovariance', 'getN')": [
                        61
                    ],
                    "('org.apache.commons.math.stat.correlation#StorelessBivariateCovariance', 'getResult')": [
                        65,
                        66,
                        67,
                        68,
                        70
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.correlation#StorelessBivariateCovariance', None)": [
                        45,
                        48
                    ],
                    "('org.apache.commons.math.stat.correlation#StorelessBivariateCovariance', 'increment(double,double)')": [
                        52,
                        58
                    ],
                    "('org.apache.commons.math.stat.correlation#StorelessBivariateCovariance', 'getN')": [
                        61
                    ],
                    "('org.apache.commons.math.stat.correlation#StorelessBivariateCovariance', 'getResult')": [
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        72
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/correlation/StorelessCovariance.java": {
                "old": {
                    "('org.apache.commons.math.stat.correlation#StorelessCovariance', 'getN')": [
                        114
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.correlation#StorelessCovariance', None)": [
                        112,
                        113
                    ],
                    "('org.apache.commons.math.stat.correlation#StorelessCovariance', 'getN')": [
                        116,
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/package-info.java": {
                "old": {
                    "(None, None)": [
                        27,
                        34,
                        37,
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        34,
                        37,
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/FastMath.java": {
                "old": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.math.util#FastMath', None)": [
                        130,
                        303,
                        3633,
                        3634,
                        3659,
                        6707,
                        8798,
                        8815
                    ],
                    "('org.apache.commons.math.util#FastMath', 'cosh(double)')": [
                        348
                    ],
                    "('org.apache.commons.math.util#FastMath', 'sinh(double)')": [
                        407,
                        408,
                        410
                    ],
                    "('org.apache.commons.math.util#FastMath', 'tanh(double)')": [
                        522,
                        525
                    ],
                    "('org.apache.commons.math.util#FastMath', 'main(String)')": [
                        3635,
                        3636,
                        3637,
                        3638,
                        3639,
                        3640,
                        3641,
                        3642,
                        3643,
                        3644,
                        3645,
                        3646
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        35
                    ],
                    "('org.apache.commons.math.util#FastMath', None)": [
                        88,
                        133,
                        306,
                        3636,
                        3637,
                        3638,
                        3639,
                        3640,
                        3666,
                        6712,
                        6715,
                        8804,
                        8807,
                        8824
                    ],
                    "('org.apache.commons.math.util#FastMath', 'cosh(double)')": [
                        351
                    ],
                    "('org.apache.commons.math.util#FastMath', 'sinh(double)')": [
                        410,
                        411,
                        413
                    ],
                    "('org.apache.commons.math.util#FastMath', 'tanh(double)')": [
                        525,
                        528
                    ],
                    "('org.apache.commons.math.util#FastMath', 'main(String)')": [
                        3641,
                        3642,
                        3643,
                        3644,
                        3645,
                        3646,
                        3647,
                        3648,
                        3649,
                        3650,
                        3651,
                        3652,
                        3653
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/FastMathCalc.java": {
                "old": {
                    "(None, None)": [
                        9,
                        16,
                        18
                    ],
                    "('org.apache.commons.math.util#FastMathCalc', None)": [
                        32,
                        34,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        591,
                        592,
                        602,
                        603
                    ],
                    "('org.apache.commons.math.util#FastMathCalc', 'buildSinCosTables(double,double,double,double,int,double,double)')": [
                        86
                    ],
                    "('org.apache.commons.math.util#FastMathCalc', 'printarray(String,int,double)')": [
                        577,
                        578,
                        580,
                        583,
                        585,
                        586,
                        588,
                        589,
                        590,
                        593,
                        594,
                        596,
                        598,
                        599,
                        600,
                        601
                    ],
                    "('org.apache.commons.math.util#FastMathCalc', 'checkLen(int,int)')": [
                        604
                    ]
                },
                "new": {
                    "(None, None)": [
                        9,
                        19,
                        20,
                        23,
                        24,
                        25,
                        26
                    ],
                    "('org.apache.commons.math.util#FastMathCalc', None)": [
                        36,
                        38,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        615,
                        616,
                        617,
                        618,
                        619,
                        620,
                        621,
                        622,
                        623,
                        632,
                        633,
                        634,
                        635,
                        636,
                        637,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651
                    ],
                    "('org.apache.commons.math.util#FastMathCalc', 'buildSinCosTables(double,double,double,double,int,double,double)')": [
                        102,
                        103,
                        104
                    ],
                    "('org.apache.commons.math.util#FastMathCalc', 'printarray(PrintStream,String,int,double)')": [
                        602,
                        603,
                        605,
                        608,
                        610,
                        612,
                        613,
                        614,
                        624,
                        625,
                        627,
                        629,
                        630,
                        631
                    ],
                    "('org.apache.commons.math.util#FastMathCalc', 'format(double)')": [
                        638,
                        639,
                        640,
                        641,
                        642
                    ],
                    "('org.apache.commons.math.util#FastMathCalc', 'checkLen(int,int)')": [
                        652,
                        653
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', 'testImpossibleSerialization')": [
                        118,
                        120
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', 'testImpossibleSerialization')": [
                        118,
                        120
                    ]
                }
            }
        }
    },
    "76b57cddf3d0a4d0b2881e8343b7bee2a505d714": {
        "authored_data": "2011 Oct 02 19:41",
        "commit.message": "Removed unused exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178234 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "2059461aff27d0937ab313e1787493dfa6d65f1b",
        "changes": {
            "src/test/java/org/apache/commons/math/MathExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math#MathExceptionTest', 'testPrintStackTrace')": [
                        59,
                        67
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testSerialization')": [
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        29
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testPrintStackTrace')": [
                        61,
                        69
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testSerialization')": [
                        87
                    ]
                }
            }
        }
    },
    "2059461aff27d0937ab313e1787493dfa6d65f1b": {
        "authored_data": "2011 Oct 02 19:03",
        "commit.message": "Replaced obsolete exceptions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178223 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "9f0e8ef283a8ed8b252db8377d647a29e9ffa6b4",
        "changes": {
            "src/main/java/org/apache/commons/math/stat/Frequency.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'addValue(Comparable)')": [
                        124
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.stat#Frequency', 'addValue(Comparable)')": [
                        124
                    ]
                }
            }
        }
    },
    "9f0e8ef283a8ed8b252db8377d647a29e9ffa6b4": {
        "authored_data": "2011 Oct 02 18:20",
        "commit.message": "Replaced obsolete exceptions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178213 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "05cdc9f273f4da289bf59466c0801d8e47ca96c6",
        "changes": {
            "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.util#OpenIntToDoubleHashMap', None)": [
                        530,
                        533,
                        547,
                        550,
                        564,
                        578
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#OpenIntToDoubleHashMap', None)": [
                        529,
                        532,
                        546,
                        549,
                        563,
                        577
                    ]
                }
            }
        }
    },
    "05cdc9f273f4da289bf59466c0801d8e47ca96c6": {
        "authored_data": "2011 Oct 02 18:10",
        "commit.message": "Replaced obsolete exceptions.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178211 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "48f14e7769508eea653f53984adce6e7ab1cc3ad",
        "changes": {
            "src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', None)": [
                        363
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'substituteMostRecentElement(double)')": [
                        371
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'checkContractExpand(float,float)')": [
                        396,
                        402,
                        408
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'discardExtremeElements(int,boolean)')": [
                        495,
                        499
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getElement(int)')": [
                        581,
                        582,
                        583,
                        587,
                        588,
                        589
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setElement(int,double)')": [
                        699,
                        700,
                        701
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setExpansionMode(int)')": [
                        741
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setInitialCapacity(int)')": [
                        764
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setNumElements(int)')": [
                        782
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', None)": [
                        364,
                        368
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'substituteMostRecentElement(double)')": [
                        373
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'checkContractExpand(float,float)')": [
                        398,
                        404,
                        410
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'discardExtremeElements(int,boolean)')": [
                        497,
                        501
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getElement(int)')": [
                        583,
                        587
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setElement(int,double)')": [
                        697
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setExpansionMode(int)')": [
                        737
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setInitialCapacity(int)')": [
                        760
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'setNumElements(int)')": [
                        778
                    ]
                }
            }
        }
    },
    "48f14e7769508eea653f53984adce6e7ab1cc3ad": {
        "authored_data": "2011 Oct 02 16:20",
        "commit.message": "Replaced obsolete exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178202 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "4b6960624a455a4be2b63a482b7c7b5b418540cd",
        "changes": {
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#GeometricMean', 'checkEmpty')": [
                        204
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.stat.descriptive.moment#GeometricMean', 'checkEmpty')": [
                        204
                    ]
                }
            }
        }
    },
    "4b6960624a455a4be2b63a482b7c7b5b418540cd": {
        "authored_data": "2011 Oct 02 15:47",
        "commit.message": "Fixed javadoc typos.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1178198 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "21bebf28fd7462950f0bff52cf6d08815a31d605",
        "changes": {
            "src/main/java/org/apache/commons/math/fraction/FractionFormat.java": {
                "old": {
                    "('org.apache.commons.math.fraction#FractionFormat', None)": [
                        83,
                        168,
                        169,
                        209
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#FractionFormat', None)": [
                        83,
                        168,
                        169,
                        209
                    ]
                }
            }
        }
    }
}