{
    "90c94c81ec46c979fae7d35dc2dcd823eb010f86": {
        "authored_data": "2008 Jan 20 16:49",
        "commit.message": "fixed a parameter name\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@613605 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "8dd8ece63c8913110f21e7708ce81b90ff635d6e",
        "changes": {
            "src/java/org/apache/commons/math/analysis/BrentSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis#BrentSolver', None)": [
                        156
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis#BrentSolver', None)": [
                        156
                    ]
                }
            }
        }
    },
    "8dd8ece63c8913110f21e7708ce81b90ff635d6e": {
        "authored_data": "2008 Jan 20 16:47",
        "commit.message": "added missing @exception tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@613604 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "28e9474e0628de9f67a8ae2f037db0fa227d89a8",
        "changes": {
            "src/java/org/apache/commons/math/optimization/DirectSearchOptimizer.java": {
                "new": {
                    "('org.apache.commons.math.optimization#DirectSearchOptimizer', None)": [
                        518,
                        519
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/MultiDirectional.java": {
                "new": {
                    "('org.apache.commons.math.optimization#MultiDirectional', None)": [
                        48,
                        49
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/NelderMead.java": {
                "new": {
                    "('org.apache.commons.math.optimization#NelderMead', None)": [
                        55,
                        56
                    ]
                }
            }
        }
    },
    "28e9474e0628de9f67a8ae2f037db0fa227d89a8": {
        "authored_data": "2008 Jan 20 16:39",
        "commit.message": "replaced tab characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@613603 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "540babda6c51c8deab788e28e7de81af3455fae2",
        "changes": {
            "src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java": {
                "old": {
                    "(None, None)": [
                        64,
                        103,
                        141
                    ]
                },
                "new": {
                    "(None, None)": [
                        64,
                        103,
                        141
                    ]
                }
            },
            "src/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', 'log(double,double)')": [
                        535
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtils', 'log(double,double)')": [
                        535
                    ]
                }
            }
        }
    },
    "540babda6c51c8deab788e28e7de81af3455fae2": {
        "authored_data": "2008 Jan 20 16:35",
        "commit.message": "wrap lines *after* operator, to keep checkstyle happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@613600 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "ab1f56eacbed70a75acb1a0be572208e8b912512",
        "changes": {
            "src/java/org/apache/commons/math/MessagesResources_fr.java": {
                "old": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145
                    ]
                }
            },
            "src/java/org/apache/commons/math/analysis/BrentSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis#BrentSolver', 'solve(double,double,double)')": [
                        68,
                        69,
                        70
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis#BrentSolver', 'solve(double,double,double)')": [
                        68,
                        69,
                        70
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/PascalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'probability(int)')": [
                        149,
                        150,
                        151,
                        152
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#PascalDistributionImpl', 'probability(int)')": [
                        149,
                        150,
                        151,
                        152
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java": {
                "old": {
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', 'estimate(EstimationProblem)')": [
                        167,
                        168,
                        169
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', 'estimate(EstimationProblem)')": [
                        167,
                        168,
                        169
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java": {
                "old": {
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'estimate(EstimationProblem)')": [
                        260,
                        261,
                        391,
                        392,
                        393,
                        394,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        408,
                        409,
                        410,
                        413,
                        414
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'determineLMParameter(double,double,double,double,double,double)')": [
                        556,
                        557
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'estimate(EstimationProblem)')": [
                        260,
                        390,
                        391,
                        392,
                        393,
                        399,
                        400,
                        401,
                        402,
                        405,
                        406,
                        407,
                        410,
                        411
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'determineLMParameter(double,double,double,double,double,double)')": [
                        553,
                        554
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/Rotation.java": {
                "old": {
                    "('org.apache.commons.math.geometry#Rotation', None)": [
                        195,
                        196,
                        197,
                        198,
                        209,
                        210,
                        211,
                        213,
                        214,
                        340,
                        341,
                        342,
                        362,
                        363,
                        364,
                        372,
                        373,
                        374
                    ],
                    "('org.apache.commons.math.geometry#Rotation', 'orthogonalizeMatrix(double,double)')": [
                        989,
                        990,
                        991,
                        1012,
                        1013
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry#Rotation', None)": [
                        195,
                        196,
                        197,
                        198,
                        209,
                        210,
                        211,
                        213,
                        214,
                        340,
                        341,
                        342,
                        362,
                        363,
                        364,
                        372,
                        373,
                        374
                    ],
                    "('org.apache.commons.math.geometry#Rotation', 'orthogonalizeMatrix(double,double)')": [
                        989,
                        990,
                        991,
                        1012,
                        1013
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ClassicalRungeKuttaStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode#ClassicalRungeKuttaStepInterpolator', 'computeInterpolatedState(double,double)')": [
                        98,
                        99,
                        100,
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#ClassicalRungeKuttaStepInterpolator', 'computeInterpolatedState(double,double)')": [
                        98,
                        99,
                        100,
                        101
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ContinuousOutputModel.java": {
                "old": {
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'setInterpolatedTime(double)')": [
                        289,
                        290,
                        291,
                        292,
                        309,
                        310,
                        319,
                        320
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'setInterpolatedTime(double)')": [
                        289,
                        290,
                        291,
                        292,
                        309,
                        310,
                        319,
                        320
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#DormandPrince54Integrator', 'estimateError(double,double,double,double)')": [
                        135,
                        136,
                        137,
                        140,
                        141,
                        142
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#DormandPrince54Integrator', 'estimateError(double,double,double,double)')": [
                        135,
                        136,
                        137,
                        140,
                        141,
                        142
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode#DormandPrince54StepInterpolator', 'computeInterpolatedState(double,double)')": [
                        138,
                        139,
                        142,
                        143,
                        153,
                        154,
                        155,
                        156,
                        157
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#DormandPrince54StepInterpolator', 'computeInterpolatedState(double,double)')": [
                        138,
                        139,
                        142,
                        143,
                        153,
                        154
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#DormandPrince853Integrator', 'estimateError(double,double,double,double)')": [
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        239,
                        240,
                        241
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#DormandPrince853Integrator', 'estimateError(double,double,double,double)')": [
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        239,
                        240,
                        241
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode#DormandPrince853StepInterpolator', 'computeInterpolatedState(double,double)')": [
                        175,
                        176,
                        177,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204
                    ],
                    "('org.apache.commons.math.ode#DormandPrince853StepInterpolator', 'doFinalize')": [
                        228,
                        229,
                        230,
                        237,
                        238,
                        239,
                        240,
                        247,
                        248,
                        249,
                        250
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#DormandPrince853StepInterpolator', 'computeInterpolatedState(double,double)')": [
                        175,
                        176,
                        177,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        197,
                        198,
                        199,
                        200
                    ],
                    "('org.apache.commons.math.ode#DormandPrince853StepInterpolator', 'doFinalize')": [
                        224,
                        225,
                        226,
                        233,
                        234,
                        235,
                        236,
                        243,
                        244,
                        245,
                        246
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#EmbeddedRungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        223,
                        224
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#EmbeddedRungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        223,
                        224
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/GillStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode#GillStepInterpolator', 'computeInterpolatedState(double,double)')": [
                        100,
                        101,
                        102
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#GillStepInterpolator', 'computeInterpolatedState(double,double)')": [
                        100,
                        101,
                        102
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#GraggBulirschStoerIntegrator', None)": [
                        107,
                        108,
                        130,
                        131
                    ],
                    "('org.apache.commons.math.ode#GraggBulirschStoerIntegrator', 'setStepHandler(StepHandler)')": [
                        280,
                        281
                    ],
                    "('org.apache.commons.math.ode#GraggBulirschStoerIntegrator', 'addSwitchingFunction(SwitchingFunction,double,double,int)')": [
                        302,
                        303
                    ],
                    "('org.apache.commons.math.ode#GraggBulirschStoerIntegrator', 'extrapolate(int,int,double,double)')": [
                        498,
                        499
                    ],
                    "('org.apache.commons.math.ode#GraggBulirschStoerIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        566,
                        567,
                        568,
                        569,
                        570,
                        628,
                        629,
                        701,
                        702,
                        709,
                        710,
                        711,
                        734,
                        735,
                        736,
                        747,
                        748,
                        749,
                        890,
                        891,
                        909,
                        910,
                        911,
                        912,
                        915,
                        916
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#GraggBulirschStoerIntegrator', None)": [
                        107,
                        129
                    ],
                    "('org.apache.commons.math.ode#GraggBulirschStoerIntegrator', 'setStepHandler(StepHandler)')": [
                        278
                    ],
                    "('org.apache.commons.math.ode#GraggBulirschStoerIntegrator', 'addSwitchingFunction(SwitchingFunction,double,double,int)')": [
                        299
                    ],
                    "('org.apache.commons.math.ode#GraggBulirschStoerIntegrator', 'extrapolate(int,int,double,double)')": [
                        494,
                        495
                    ],
                    "('org.apache.commons.math.ode#GraggBulirschStoerIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        562,
                        563,
                        564,
                        622,
                        623,
                        695,
                        696,
                        703,
                        704,
                        705,
                        728,
                        729,
                        730,
                        741,
                        742,
                        743,
                        884,
                        885,
                        903,
                        904,
                        905,
                        906,
                        909,
                        910
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode#GraggBulirschStoerStepInterpolator', 'computeCoefficients(int,double)')": [
                        277,
                        278,
                        279
                    ],
                    "('org.apache.commons.math.ode#GraggBulirschStoerStepInterpolator', 'computeInterpolatedState(double,double)')": [
                        327,
                        328,
                        329,
                        330
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#GraggBulirschStoerStepInterpolator', 'computeCoefficients(int,double)')": [
                        277,
                        278
                    ],
                    "('org.apache.commons.math.ode#GraggBulirschStoerStepInterpolator', 'computeInterpolatedState(double,double)')": [
                        326,
                        327,
                        328,
                        329
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/HighamHall54Integrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#HighamHall54Integrator', 'estimateError(double,double,double,double)')": [
                        126,
                        127,
                        128
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#HighamHall54Integrator', 'estimateError(double,double,double,double)')": [
                        126,
                        127,
                        128
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/HighamHall54StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode#HighamHall54StepInterpolator', 'computeInterpolatedState(double,double)')": [
                        83,
                        84,
                        85
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#HighamHall54StepInterpolator', 'computeInterpolatedState(double,double)')": [
                        83,
                        84,
                        85
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/MidpointStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode#MidpointStepInterpolator', 'computeInterpolatedState(double,double)')": [
                        91,
                        92
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#MidpointStepInterpolator', 'computeInterpolatedState(double,double)')": [
                        91,
                        92
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/SwitchState.java": {
                "old": {
                    "('org.apache.commons.math.ode#SwitchState', 'reset(double,double)')": [
                        277,
                        278
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#SwitchState', 'reset(double,double)')": [
                        277,
                        278
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ThreeEighthesStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode#ThreeEighthesStepInterpolator', 'computeInterpolatedState(double,double)')": [
                        100,
                        101,
                        102
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#ThreeEighthesStepInterpolator', 'computeInterpolatedState(double,double)')": [
                        100,
                        101,
                        102
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/DirectSearchOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#DirectSearchOptimizer', 'minimizes(CostFunction,int,ConvergenceChecker)')": [
                        507,
                        508,
                        509,
                        510,
                        511
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#DirectSearchOptimizer', 'minimizes(CostFunction,int,ConvergenceChecker)')": [
                        507,
                        508,
                        509,
                        510,
                        511
                    ]
                }
            }
        }
    },
    "ab1f56eacbed70a75acb1a0be572208e8b912512": {
        "authored_data": "2008 Jan 20 16:06",
        "commit.message": "fixed array type from String[] to Object[] according to base class\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@613587 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "4ed5ea38741e27705e482103ebc5cb4afde35835",
        "changes": {
            "src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#AdaptiveStepsizeIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        176,
                        177,
                        178,
                        179,
                        180,
                        184,
                        185,
                        186,
                        187,
                        188,
                        192,
                        193,
                        194,
                        195,
                        196,
                        200,
                        201,
                        202,
                        203,
                        204,
                        209,
                        210
                    ],
                    "('org.apache.commons.math.ode#AdaptiveStepsizeIntegrator', None)": [
                        211
                    ],
                    "('org.apache.commons.math.ode#AdaptiveStepsizeIntegrator', 'initializeStep(FirstOrderDifferentialEquations,boolean,int,double,double,double,double,double,double)')": [
                        253,
                        254,
                        276,
                        277,
                        278
                    ],
                    "('org.apache.commons.math.ode#AdaptiveStepsizeIntegrator', 'filterStep(double,boolean)')": [
                        310,
                        311,
                        312,
                        313,
                        314
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#AdaptiveStepsizeIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        176,
                        177,
                        178,
                        179,
                        180,
                        184,
                        185,
                        186,
                        187,
                        188,
                        192,
                        193,
                        194,
                        195,
                        196,
                        200,
                        201,
                        202,
                        203,
                        204,
                        209
                    ],
                    "('org.apache.commons.math.ode#AdaptiveStepsizeIntegrator', 'initializeStep(FirstOrderDifferentialEquations,boolean,int,double,double,double,double,double,double)')": [
                        251,
                        252,
                        274,
                        275,
                        276
                    ],
                    "('org.apache.commons.math.ode#AdaptiveStepsizeIntegrator', 'filterStep(double,boolean)')": [
                        308,
                        309,
                        310,
                        311,
                        312
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/IntegratorException.java": {
                "old": {
                    "('org.apache.commons.math.ode#IntegratorException', None)": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#IntegratorException', None)": [
                        35
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#RungeKuttaIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        120,
                        121,
                        122,
                        123,
                        124,
                        128,
                        129,
                        130,
                        131,
                        132,
                        137,
                        138
                    ],
                    "('org.apache.commons.math.ode#RungeKuttaIntegrator', None)": [
                        139
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#RungeKuttaIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        120,
                        121,
                        122,
                        123,
                        124,
                        128,
                        129,
                        130,
                        131,
                        132,
                        137
                    ]
                }
            }
        }
    },
    "4ed5ea38741e27705e482103ebc5cb4afde35835": {
        "authored_data": "2008 Jan 20 15:52",
        "commit.message": "fixed an exception type in javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@613577 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "90400c773c8ef10c705deec80eaa9fae62c66179",
        "changes": {
            "src/java/org/apache/commons/math/optimization/DirectSearchOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#DirectSearchOptimizer', None)": [
                        105,
                        147
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#DirectSearchOptimizer', None)": [
                        105,
                        147
                    ]
                }
            }
        }
    },
    "90400c773c8ef10c705deec80eaa9fae62c66179": {
        "authored_data": "2008 Jan 20 15:03",
        "commit.message": "fixed keywords used in @version tags to match checkstyle-enforced rule\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@613570 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "376834acf1c807d231a40b76fffe7d92ed3b4c17",
        "changes": {
            "src/java/org/apache/commons/math/DimensionMismatchException.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/java/org/apache/commons/math/DuplicateSampleAbscissaException.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/java/org/apache/commons/math/MessagesResources_fr.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/PascalDistribution.java": {
                "old": {
                    "(None, None)": [
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/PascalDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/WeibullDistribution.java": {
                "old": {
                    "(None, None)": [
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ]
                }
            },
            "src/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/EstimatedParameter.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/EstimationException.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/EstimationProblem.java": {
                "old": {
                    "(None, None)": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        41
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/Estimator.java": {
                "old": {
                    "(None, None)": [
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java": {
                "old": {
                    "(None, None)": [
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java": {
                "new": {
                    "(None, None)": [
                        95,
                        96,
                        97
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java": {
                "new": {
                    "(None, None)": [
                        37,
                        38,
                        39
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/WeightedMeasurement.java": {
                "old": {
                    "(None, None)": [
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        47
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/NotARotationMatrixException.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/Rotation.java": {
                "old": {
                    "(None, None)": [
                        83
                    ]
                },
                "new": {
                    "(None, None)": [
                        83
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/RotationOrder.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/java/org/apache/commons/math/geometry/Vector3D.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/AbstractStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/AdaptiveStepsizeIntegrator.java": {
                "old": {
                    "(None, None)": [
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        44
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ClassicalRungeKuttaIntegrator.java": {
                "old": {
                    "(None, None)": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        42
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ClassicalRungeKuttaStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        42
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ContinuousOutputModel.java": {
                "old": {
                    "(None, None)": [
                        78
                    ]
                },
                "new": {
                    "(None, None)": [
                        78
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DerivativeException.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DormandPrince54Integrator.java": {
                "old": {
                    "(None, None)": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        42
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DormandPrince54StepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DormandPrince853Integrator.java": {
                "old": {
                    "(None, None)": [
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        50
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DormandPrince853StepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DummyStepHandler.java": {
                "old": {
                    "(None, None)": [
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/DummyStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/EmbeddedRungeKuttaIntegrator.java": {
                "old": {
                    "(None, None)": [
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        53
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/EulerIntegrator.java": {
                "old": {
                    "(None, None)": [
                        45
                    ]
                },
                "new": {
                    "(None, None)": [
                        45
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/EulerStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/FirstOrderConverter.java": {
                "old": {
                    "(None, None)": [
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        53
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/FirstOrderDifferentialEquations.java": {
                "old": {
                    "(None, None)": [
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        43
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/FirstOrderIntegrator.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/FixedStepHandler.java": {
                "old": {
                    "(None, None)": [
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/GillIntegrator.java": {
                "old": {
                    "(None, None)": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        41
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/GillStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        41
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/GraggBulirschStoerIntegrator.java": {
                "old": {
                    "(None, None)": [
                        83
                    ]
                },
                "new": {
                    "(None, None)": [
                        83
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/GraggBulirschStoerStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        70
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/HighamHall54Integrator.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/HighamHall54StepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/IntegratorException.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/MidpointIntegrator.java": {
                "old": {
                    "(None, None)": [
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/MidpointStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/RungeKuttaIntegrator.java": {
                "old": {
                    "(None, None)": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        42
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/RungeKuttaStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/SecondOrderDifferentialEquations.java": {
                "old": {
                    "(None, None)": [
                        44
                    ]
                },
                "new": {
                    "(None, None)": [
                        44
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/SecondOrderIntegrator.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/StepHandler.java": {
                "old": {
                    "(None, None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/StepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/StepNormalizer.java": {
                "old": {
                    "(None, None)": [
                        45
                    ]
                },
                "new": {
                    "(None, None)": [
                        45
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/SwitchState.java": {
                "old": {
                    "(None, None)": [
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        39
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/SwitchingFunction.java": {
                "old": {
                    "(None, None)": [
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        47
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/SwitchingFunctionsHandler.java": {
                "old": {
                    "(None, None)": [
                        31
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ThreeEighthesIntegrator.java": {
                "old": {
                    "(None, None)": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        41
                    ]
                }
            },
            "src/java/org/apache/commons/math/ode/ThreeEighthesStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        43
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/ConvergenceChecker.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/CostException.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/CostFunction.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/DirectSearchOptimizer.java": {
                "old": {
                    "(None, None)": [
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        72
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/MultiDirectional.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/NelderMead.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/java/org/apache/commons/math/optimization/PointCostPair.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/RandomVectorGenerator.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ]
                }
            },
            "src/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/SynchronizedSummaryStatistics.java": {
                "old": {
                    "(None, None)": [
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/java/org/apache/commons/math/stat/inference/UnknownDistributionChiSquareTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ]
                }
            }
        }
    },
    "376834acf1c807d231a40b76fffe7d92ed3b4c17": {
        "authored_data": "2008 Jan 19 22:48",
        "commit.message": "Added general methods to guess errors on estimated parameters\nJIRA: MATH-176\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@613474 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "a1dcceb8403ebdb9397bfe44e4550c6214cc00f4",
        "changes": {
            "src/java/org/apache/commons/math/MessagesResources_fr.java": {
                "old": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        91,
                        92,
                        101,
                        102
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        99,
                        100
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/EstimationException.java": {
                "old": {
                    "('org.apache.commons.math.estimation#EstimationException', None)": [
                        33,
                        41,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51
                    ],
                    "(None, None)": [
                        52,
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#EstimationException', None)": [
                        33,
                        41
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/Estimator.java": {
                "old": {
                    "(None, None)": [
                        68
                    ]
                },
                "new": {
                    "(None, None)": [
                        63,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/GaussNewtonEstimator.java": {
                "old": {
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', None)": [
                        37,
                        38,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        200,
                        201,
                        202,
                        203,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', 'estimate(EstimationProblem)')": [
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', 'linearEstimate(EstimationProblem)')": [
                        146,
                        149,
                        150,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        163,
                        164,
                        166,
                        167,
                        168,
                        169,
                        170,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        181,
                        182,
                        183,
                        185,
                        188,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', 'evaluateCriterion(EstimationProblem)')": [
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', 'getRMS(EstimationProblem)')": [
                        227,
                        228,
                        229,
                        230
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', None)": [
                        37,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        170,
                        173,
                        174,
                        176
                    ],
                    "('org.apache.commons.math.estimation#GaussNewtonEstimator', 'estimate(EstimationProblem)')": [
                        101,
                        104,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        113,
                        114,
                        115,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        149,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169
                    ]
                }
            },
            "src/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java": {
                "old": {
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', None)": [
                        95,
                        112,
                        132,
                        133,
                        134,
                        135,
                        136,
                        139,
                        140,
                        141,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        189,
                        190,
                        191,
                        192,
                        193,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        266,
                        514,
                        922,
                        923,
                        924,
                        925,
                        926,
                        927,
                        928,
                        929,
                        930,
                        931,
                        932,
                        933,
                        934,
                        935,
                        936,
                        937,
                        938,
                        942,
                        943,
                        944,
                        966,
                        967,
                        968,
                        969,
                        970,
                        971,
                        972,
                        973,
                        974,
                        975,
                        978,
                        979,
                        980,
                        981,
                        982,
                        983,
                        984,
                        985,
                        986,
                        998
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'setMaxCostEval(int)')": [
                        137,
                        138
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'getCostEvaluations')": [
                        178,
                        179
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'getJacobianEvaluations')": [
                        187,
                        188
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'updateJacobian')": [
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'updateResidualsAndCost')": [
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'getRMS(EstimationProblem)')": [
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'estimate(EstimationProblem)')": [
                        274,
                        275,
                        276,
                        279,
                        280,
                        282,
                        288,
                        303,
                        304,
                        305,
                        307,
                        480,
                        481,
                        482,
                        489,
                        490,
                        491,
                        496,
                        497,
                        498,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', None)": [
                        96,
                        111,
                        112,
                        113,
                        114,
                        120,
                        413,
                        414,
                        415,
                        416,
                        417,
                        862
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', 'estimate(EstimationProblem)')": [
                        199,
                        222,
                        224,
                        403,
                        408,
                        412
                    ]
                }
            },
            "src/test/org/apache/commons/math/estimation/LevenbergMarquardtEstimatorTest.java": {
                "old": {
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimatorTest', 'testNonInversible')": [
                        270
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimatorTest', None)": [
                        499
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimatorTest', 'testTrivial')": [
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimatorTest', 'testNonInversible')": [
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimatorTest', 'testCircleFitting')": [
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540
                    ],
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimatorTest', None)": [
                        541,
                        542
                    ]
                }
            }
        }
    },
    "a1dcceb8403ebdb9397bfe44e4550c6214cc00f4": {
        "authored_data": "2008 Jan 19 21:45",
        "commit.message": "fixed javadoc typos\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@613461 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "d2f1bf4cd6f25b7d18ab0b9f3dc0d72d9ba14f22",
        "changes": {
            "src/java/org/apache/commons/math/linear/RealMatrixImpl.java": {
                "old": {
                    "(None, None)": [
                        27,
                        30
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', None)": [
                        759,
                        763,
                        1014
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        30
                    ],
                    "('org.apache.commons.math.linear#RealMatrixImpl', None)": [
                        759,
                        763,
                        1014
                    ]
                }
            }
        }
    },
    "d2f1bf4cd6f25b7d18ab0b9f3dc0d72d9ba14f22": {
        "authored_data": "2008 Jan 19 20:28",
        "commit.message": "removed lazy building of the instance\nit was not needed since the instance is small\nit introduced synchronization problems\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@613448 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "a8be93bdffc7d6629c74d7d6ac974a0781555aab",
        "changes": {
            "src/java/org/apache/commons/math/ode/DummyStepHandler.java": {
                "old": {
                    "('org.apache.commons.math.ode#DummyStepHandler', 'getInstance')": [
                        54,
                        55,
                        56
                    ],
                    "('org.apache.commons.math.ode#DummyStepHandler', None)": [
                        91
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#DummyStepHandler', None)": [
                        88
                    ]
                }
            }
        }
    }
}