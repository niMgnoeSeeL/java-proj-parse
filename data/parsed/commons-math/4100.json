{
    "46dfce79a4c2769dc246b661205140a7afea850d": {
        "authored_data": "2011 Jul 01 09:06",
        "commit.message": "removed unused variable\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1141881 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "b037c6b5a2a07dead9bca837a5440659cef2ec13",
        "changes": {
            "src/main/java/org/apache/commons/math/dfp/Dfp.java": {
                "old": {
                    "('org.apache.commons.math.dfp#Dfp', None)": [
                        496,
                        501
                    ]
                }
            }
        }
    },
    "b037c6b5a2a07dead9bca837a5440659cef2ec13": {
        "authored_data": "2011 Jul 01 09:05",
        "commit.message": "removed serialVersionUID for non-serializable classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1141880 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "56752c15f0ba34c5dea8995fb908ca091a51157c",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', None)": [
                        37,
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', None)": [
                        49,
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', None)": [
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver2.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#MullerSolver2', None)": [
                        49,
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#MullerSolver2', None)": [
                        49
                    ]
                }
            }
        }
    },
    "56752c15f0ba34c5dea8995fb908ca091a51157c": {
        "authored_data": "2011 Jul 01 09:03",
        "commit.message": "removed serialVersionUID for a non-serializable class.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1141879 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "0a150a6718153f7f72900b0896bfa9f58fed130c",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java": {
                "old": {
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', None)": [
                        30,
                        31,
                        32
                    ]
                }
            }
        }
    },
    "0a150a6718153f7f72900b0896bfa9f58fed130c": {
        "authored_data": "2011 Jun 26 19:13",
        "commit.message": "Fixed checkstyle, javadoc, findbugs and eclipse warnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1139915 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "c56bc8fa33e05e490718491aa0f058114fbfe3d1",
        "changes": {
            "src/main/java/org/apache/commons/math/filter/KalmanFilter.java": {
                "old": {
                    "('org.apache.commons.math.filter#KalmanFilter', None)": [
                        84,
                        85
                    ],
                    "('org.apache.commons.math.filter#KalmanFilter', 'correct(RealVector)')": [
                        346,
                        347
                    ]
                },
                "new": {
                    "('org.apache.commons.math.filter#KalmanFilter', 'correct(RealVector)')": [
                        344,
                        345
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/euclidean/twod/PolygonsSet.java": {
                "new": {
                    "('org.apache.commons.math.geometry.euclidean.twod#PolygonsSet', None)": [
                        348
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/partitioning/AbstractRegion.java": {
                "old": {
                    "('org.apache.commons.math.geometry.partitioning#AbstractRegion', None)": [
                        136,
                        138
                    ],
                    "('org.apache.commons.math.geometry.partitioning#AbstractRegion', 'buildNew(BSPTree)')": [
                        137
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry.partitioning#AbstractRegion', None)": [
                        163,
                        164
                    ],
                    "('org.apache.commons.math.geometry.partitioning#AbstractRegion', 'buildNew(BSPTree)')": [
                        165
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java": {
                "new": {
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', None)": [
                        858,
                        859,
                        860,
                        861,
                        862,
                        863,
                        864,
                        865,
                        866,
                        867,
                        868,
                        869,
                        870,
                        871,
                        872,
                        873,
                        874,
                        875,
                        876,
                        877,
                        878,
                        879,
                        880,
                        881
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java": {
                "old": {
                    "('org.apache.commons.math.stat.clustering#KMeansPlusPlusClusterer', None)": [
                        92,
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.clustering#KMeansPlusPlusClusterer', None)": [
                        92,
                        93,
                        94
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java": {
                "old": {
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', None)": [
                        359,
                        375,
                        391
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', None)": [
                        359,
                        375,
                        391
                    ]
                }
            }
        }
    },
    "c56bc8fa33e05e490718491aa0f058114fbfe3d1": {
        "authored_data": "2011 Jun 26 18:42",
        "commit.message": "Forbid if/else/do/while/for without braces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1139906 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "d803dbac0e6de9f451cb9ba2f3ba146868ae4c02",
        "changes": {
            "src/main/java/org/apache/commons/math/dfp/Dfp.java": {
                "old": {
                    "('org.apache.commons.math.dfp#Dfp', None)": [
                        388
                    ]
                },
                "new": {
                    "('org.apache.commons.math.dfp#Dfp', None)": [
                        388,
                        390
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/dfp/DfpMath.java": {
                "old": {
                    "('org.apache.commons.math.dfp#DfpMath', 'sinInternal(Dfp)')": [
                        687
                    ]
                },
                "new": {
                    "('org.apache.commons.math.dfp#DfpMath', 'sinInternal(Dfp)')": [
                        687,
                        689
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'density(double)')": [
                        157,
                        159
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', 'density(double)')": [
                        157,
                        158,
                        159,
                        161
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/KolmogorovSmirnovDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#KolmogorovSmirnovDistributionImpl', 'createH(double)')": [
                        308,
                        310
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#KolmogorovSmirnovDistributionImpl', 'createH(double)')": [
                        308,
                        310,
                        312
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/genetics/BinaryChromosome.java": {
                "old": {
                    "('org.apache.commons.math.genetics#BinaryChromosome', 'checkValidity(List)')": [
                        52,
                        54,
                        55,
                        56
                    ],
                    "('org.apache.commons.math.genetics#BinaryChromosome', 'isSame(Chromosome)')": [
                        80,
                        84,
                        88
                    ]
                },
                "new": {
                    "('org.apache.commons.math.genetics#BinaryChromosome', 'checkValidity(List)')": [
                        52,
                        53,
                        55,
                        56,
                        57
                    ],
                    "('org.apache.commons.math.genetics#BinaryChromosome', None)": [
                        58
                    ],
                    "('org.apache.commons.math.genetics#BinaryChromosome', 'isSame(Chromosome)')": [
                        82,
                        84,
                        87,
                        89,
                        92,
                        94
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/genetics/Chromosome.java": {
                "old": {
                    "('org.apache.commons.math.genetics#Chromosome', 'findSameChromosome(Population)')": [
                        91
                    ]
                },
                "new": {
                    "('org.apache.commons.math.genetics#Chromosome', 'findSameChromosome(Population)')": [
                        91,
                        93
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/genetics/ElitisticListPopulation.java": {
                "old": {
                    "('org.apache.commons.math.genetics#ElitisticListPopulation', 'setElitismRate(double)')": [
                        97
                    ]
                },
                "new": {
                    "('org.apache.commons.math.genetics#ElitisticListPopulation', 'setElitismRate(double)')": [
                        97,
                        99
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/genetics/FixedGenerationCount.java": {
                "old": {
                    "('org.apache.commons.math.genetics#FixedGenerationCount', None)": [
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.math.genetics#FixedGenerationCount', None)": [
                        42,
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/genetics/OnePointCrossover.java": {
                "old": {
                    "('org.apache.commons.math.genetics#OnePointCrossover', 'crossover(AbstractListChromosome,AbstractListChromosome)')": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.math.genetics#OnePointCrossover', 'crossover(AbstractListChromosome,AbstractListChromosome)')": [
                        87,
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/genetics/RandomKey.java": {
                "old": {
                    "('org.apache.commons.math.genetics#RandomKey', 'isSame(Chromosome)')": [
                        152,
                        156,
                        165
                    ]
                },
                "new": {
                    "('org.apache.commons.math.genetics#RandomKey', 'isSame(Chromosome)')": [
                        152,
                        154,
                        157,
                        159,
                        167,
                        169
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/genetics/TournamentSelection.java": {
                "old": {
                    "('org.apache.commons.math.genetics#TournamentSelection', 'tournament(ListPopulation)')": [
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.math.genetics#TournamentSelection', 'tournament(ListPopulation)')": [
                        73,
                        75
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java": {
                "old": {
                    "('org.apache.commons.math.geometry.euclidean.threed#Rotation', 'orthogonalizeMatrix(double,double)')": [
                        1021,
                        1022
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry.euclidean.threed#Rotation', 'orthogonalizeMatrix(double,double)')": [
                        1021,
                        1022,
                        1023
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'findEigenVectors(double)')": [
                        559
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'findEigenVectors(double)')": [
                        559,
                        561
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/SparseFieldVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseFieldVector', 'outerProduct(FieldVector)')": [
                        444,
                        446
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', 'subtract(FieldVector)')": [
                        518,
                        520
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SparseFieldVector', 'outerProduct(FieldVector)')": [
                        444,
                        446
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', None)": [
                        448,
                        523
                    ],
                    "('org.apache.commons.math.linear#SparseFieldVector', 'subtract(FieldVector)')": [
                        519,
                        521
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#StepNormalizer', 'handleStep(StepInterpolator,boolean)')": [
                        211
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizer', 'isNextInStep(double,StepInterpolator)')": [
                        255,
                        256
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizer', 'doNormalizedStep(boolean)')": [
                        266
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.sampling#StepNormalizer', 'handleStep(StepInterpolator,boolean)')": [
                        211,
                        212,
                        213
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizer', 'isNextInStep(double,StepInterpolator)')": [
                        257,
                        258,
                        259
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizer', 'doNormalizedStep(boolean)')": [
                        269,
                        270,
                        271
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'doOptimize')": [
                        375,
                        378,
                        381,
                        402,
                        404,
                        417,
                        418,
                        425,
                        431,
                        433,
                        435,
                        436,
                        437,
                        442,
                        445,
                        448,
                        456,
                        457,
                        462,
                        465
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'checkParameters')": [
                        486,
                        490,
                        492,
                        496,
                        501,
                        507,
                        512,
                        515
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'initializeCMA(double)')": [
                        530,
                        534,
                        590
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'updateEvolutionPaths(RealMatrix,RealMatrix)')": [
                        613
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'updateCovariance(boolean,RealMatrix,RealMatrix,int,RealMatrix)')": [
                        702
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'updateBD(double)')": [
                        751,
                        752
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'push(double,double)')": [
                        778
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'sortedIndices(double)')": [
                        792,
                        796
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', None)": [
                        857,
                        873,
                        895,
                        907,
                        910,
                        912,
                        934,
                        936,
                        938
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'log(RealMatrix)')": [
                        970,
                        971
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'sqrt(RealMatrix)')": [
                        983,
                        984
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'square(RealMatrix)')": [
                        995
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'times(RealMatrix,RealMatrix)')": [
                        1012,
                        1013
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'divide(RealMatrix,RealMatrix)')": [
                        1027,
                        1028
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'selectColumns(RealMatrix,int)')": [
                        1040,
                        1041
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'triu(RealMatrix,int)')": [
                        1053,
                        1054,
                        1056
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'sumRows(RealMatrix)')": [
                        1068
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'diag(RealMatrix)')": [
                        1084,
                        1089
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'copyColumn(RealMatrix,int,RealMatrix,int)')": [
                        1108
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'ones(int,int)')": [
                        1121
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'eye(int,int)')": [
                        1135,
                        1136
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'repmat(RealMatrix,int,int)')": [
                        1165,
                        1166
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'max(RealMatrix)')": [
                        1198,
                        1201,
                        1203
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'min(RealMatrix)')": [
                        1214,
                        1217,
                        1219
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'max(double)')": [
                        1230,
                        1231
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'min(double)')": [
                        1243,
                        1244
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'inverse(int)')": [
                        1256
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'reverse(int)')": [
                        1268
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'randn(int)')": [
                        1280
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'randn1(int,int)')": [
                        1294,
                        1295
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'doOptimize')": [
                        375,
                        378,
                        381,
                        382,
                        384,
                        404,
                        406,
                        408,
                        420,
                        422,
                        428,
                        430,
                        435,
                        437,
                        438,
                        440,
                        441,
                        442,
                        443,
                        445,
                        446,
                        450,
                        452,
                        454,
                        456,
                        458,
                        460,
                        467,
                        469,
                        473,
                        475,
                        477,
                        479
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'checkParameters')": [
                        499,
                        503,
                        504,
                        506,
                        507,
                        511,
                        512,
                        516,
                        518,
                        521,
                        525,
                        529,
                        531,
                        533,
                        535
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', None)": [
                        537,
                        615,
                        888,
                        890,
                        905,
                        907,
                        928,
                        931,
                        941,
                        943,
                        945,
                        947,
                        948,
                        950,
                        971,
                        973,
                        975,
                        977,
                        1164
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'initializeCMA(double)')": [
                        551,
                        553,
                        556,
                        558,
                        613
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'updateEvolutionPaths(RealMatrix,RealMatrix)')": [
                        637,
                        640
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'updateCovariance(boolean,RealMatrix,RealMatrix,int,RealMatrix)')": [
                        727,
                        729
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'updateBD(double)')": [
                        777,
                        778,
                        780,
                        781
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'push(double,double)')": [
                        806,
                        808
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'sortedIndices(double)')": [
                        821,
                        823,
                        826,
                        828
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'log(RealMatrix)')": [
                        1008,
                        1009,
                        1011,
                        1012
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'sqrt(RealMatrix)')": [
                        1023,
                        1024,
                        1026,
                        1027
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'square(RealMatrix)')": [
                        1037,
                        1042
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'times(RealMatrix,RealMatrix)')": [
                        1055,
                        1056,
                        1058,
                        1059
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'divide(RealMatrix,RealMatrix)')": [
                        1072,
                        1073,
                        1075,
                        1076
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'selectColumns(RealMatrix,int)')": [
                        1087,
                        1088,
                        1090,
                        1091
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'triu(RealMatrix,int)')": [
                        1102,
                        1103,
                        1105,
                        1106,
                        1107
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'sumRows(RealMatrix)')": [
                        1119,
                        1121
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'diag(RealMatrix)')": [
                        1136,
                        1138,
                        1142,
                        1144
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'copyColumn(RealMatrix,int,RealMatrix,int)')": [
                        1162
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'ones(int,int)')": [
                        1176,
                        1178
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'eye(int,int)')": [
                        1191,
                        1192,
                        1194,
                        1195
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'repmat(RealMatrix,int,int)')": [
                        1223,
                        1224,
                        1226,
                        1227
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'max(RealMatrix)')": [
                        1258,
                        1261,
                        1263,
                        1264,
                        1265
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'min(RealMatrix)')": [
                        1276,
                        1279,
                        1281,
                        1282,
                        1283
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'max(double)')": [
                        1294,
                        1295,
                        1297,
                        1298
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'min(double)')": [
                        1309,
                        1310,
                        1312,
                        1313
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'inverse(int)')": [
                        1324,
                        1326
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'reverse(int)')": [
                        1337,
                        1339
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'randn(int)')": [
                        1350,
                        1352
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'randn1(int,int)')": [
                        1365,
                        1366,
                        1368,
                        1369
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/Frequency.java": {
                "old": {
                    "('org.apache.commons.math.stat#Frequency', 'equals(Object)')": [
                        494,
                        496,
                        500,
                        502
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat#Frequency', 'equals(Object)')": [
                        494,
                        496,
                        497,
                        499,
                        502,
                        504,
                        505,
                        507
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#VectorialCovariance', 'equals(Object)')": [
                        136,
                        138,
                        141,
                        143,
                        145,
                        147
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#VectorialCovariance', 'equals(Object)')": [
                        136,
                        138,
                        139,
                        141,
                        143,
                        145,
                        146,
                        148,
                        149,
                        151,
                        152,
                        154
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#VectorialMean', 'equals(Object)')": [
                        93,
                        95,
                        98
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#VectorialMean', 'equals(Object)')": [
                        93,
                        95,
                        96,
                        98,
                        100,
                        102
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java": {
                "old": {
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'mdfft(MultiDimensionalComplexMatrix,boolean,int,int)')": [
                        579,
                        581
                    ]
                },
                "new": {
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'mdfft(MultiDimensionalComplexMatrix,boolean,int,int)')": [
                        579,
                        581,
                        583
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/FastMath.java": {
                "old": {
                    "('org.apache.commons.math.util#FastMath', 'pow(double,double)')": [
                        1611,
                        1612
                    ],
                    "('org.apache.commons.math.util#FastMath', 'sin(double)')": [
                        2580
                    ],
                    "('org.apache.commons.math.util#FastMath', 'cos(double)')": [
                        2665
                    ],
                    "('org.apache.commons.math.util#FastMath', 'tan(double)')": [
                        2760
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#FastMath', 'pow(double,double)')": [
                        1611,
                        1612,
                        1613
                    ],
                    "('org.apache.commons.math.util#FastMath', 'sin(double)')": [
                        2581,
                        2583
                    ],
                    "('org.apache.commons.math.util#FastMath', 'cos(double)')": [
                        2667,
                        2669
                    ],
                    "('org.apache.commons.math.util#FastMath', 'tan(double)')": [
                        2763,
                        2765
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', 'binomialCoefficient(int,int)')": [
                        213
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtils', 'binomialCoefficient(int,int)')": [
                        213,
                        215
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'discardExtremeElements(int,boolean)')": [
                        505
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'discardExtremeElements(int,boolean)')": [
                        505,
                        506,
                        507
                    ]
                }
            }
        }
    },
    "d803dbac0e6de9f451cb9ba2f3ba146868ae4c02": {
        "authored_data": "2011 Jun 26 17:02",
        "commit.message": "MATH-599\nName change to avoid test failure on the automated build system (\"gump\").\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1139837 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "57e2712f50eec586fc5e46fcf9eba139f82af97a",
        "changes": {
            "src/test/java/org/apache/commons/math/analysis/solvers/IllinoisSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#IllinoisSolverTest', None)": [
                        25
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#IllinoisSolverTest', None)": [
                        25
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/PegasusSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#PegasusSolverTest', None)": [
                        25
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#PegasusSolverTest', None)": [
                        25
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#RegulaFalsiSolverTest', None)": [
                        25
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#RegulaFalsiSolverTest', None)": [
                        25
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#SecantSolverTest', None)": [
                        25
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#SecantSolverTest', None)": [
                        25
                    ]
                }
            }
        }
    },
    "57e2712f50eec586fc5e46fcf9eba139f82af97a": {
        "authored_data": "2011 Jun 26 16:26",
        "commit.message": "Removed the requiresDenseOutput method from the StepHandler interface. Now integrators always\nconsider dense output is required and set up the appropriate state interpolators, so step\nhandlers can rely on them.\n\nJIRA: MATH-596, MATH-604\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1139831 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "c005c8d4da25a68f51691d8d5be818e8566c4ceb",
        "changes": {
            "src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#AbstractIntegrator', None)": [
                        156,
                        157,
                        158,
                        159,
                        170,
                        171
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'requiresDenseOutput')": [
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java": {
                "old": {
                    "('org.apache.commons.math.ode#ContinuousOutputModel', None)": [
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'requiresDenseOutput')": [
                        176,
                        177
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#MultistepIntegrator', None)": [
                        387,
                        388,
                        389,
                        390,
                        391
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EmbeddedRungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#EmbeddedRungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        212,
                        213
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'initializeArrays')": [
                        375,
                        376,
                        377,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        621,
                        622,
                        623,
                        624,
                        625,
                        626,
                        627,
                        628,
                        820
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'initializeArrays')": [
                        374,
                        375
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        587,
                        588,
                        603,
                        604,
                        605,
                        606,
                        798
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26
                    ],
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        116,
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#DummyStepHandler', None)": [
                        53,
                        54,
                        55,
                        56,
                        59,
                        60
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepHandler', 'requiresDenseOutput')": [
                        57,
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/StepHandler.java": {
                "old": {
                    "(None, None)": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#StepNormalizer', None)": [
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        182,
                        183
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizer', 'requiresDenseOutput')": [
                        180,
                        181
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/TestProblemHandler.java": {
                "old": {
                    "('org.apache.commons.math.ode#TestProblemHandler', None)": [
                        61,
                        62
                    ],
                    "('org.apache.commons.math.ode#TestProblemHandler', 'requiresDenseOutput')": [
                        63,
                        64
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', None)": [
                        254,
                        255,
                        256
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testStepSize')": [
                        295,
                        296,
                        297
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', None)": [
                        140,
                        141,
                        142,
                        143,
                        287,
                        288,
                        289,
                        330,
                        331,
                        332
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'checkClone')": [
                        139,
                        140,
                        141
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        30,
                        31,
                        433,
                        434,
                        435
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testNoDenseOutput')": [
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', None)": [
                        323,
                        324,
                        325,
                        326,
                        343,
                        344,
                        345,
                        384,
                        385,
                        386,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'checklone')": [
                        139,
                        140,
                        141
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testStepSize')": [
                        173,
                        174,
                        175
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', None)": [
                        189,
                        190,
                        191
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testStepSize')": [
                        230,
                        231,
                        232
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', None)": [
                        292,
                        293,
                        294,
                        334,
                        335,
                        336,
                        363
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', None)": [
                        289,
                        317,
                        318,
                        319,
                        389
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIssue596')": [
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'checklone')": [
                        141,
                        142,
                        143
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'checkClone')": [
                        139,
                        140,
                        141
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testStepSize')": [
                        173,
                        174,
                        175
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', None)": [
                        180,
                        181,
                        182,
                        183
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testStepSize')": [
                        225,
                        226,
                        227
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/sampling/StepInterpolatorTestUtils.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#StepInterpolatorTestUtils', 'checkDerivativesConsistency(FirstOrderIntegrator,TestProblemAbstract,double)')": [
                        34,
                        35,
                        36,
                        37
                    ]
                }
            }
        }
    },
    "c005c8d4da25a68f51691d8d5be818e8566c4ceb": {
        "authored_data": "2011 Jun 25 09:11",
        "commit.message": "MATH-599\nAttempt to work around the build failure.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1139509 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "7b371c06a901d84f140ba562f28214e03511e7b0",
        "changes": {
            "src/test/java/org/apache/commons/math/analysis/solvers/BaseSecantSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolverTest', 'testSolutionLeftSide')": [
                        166,
                        167
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolverTest', 'testSolutionRightSide')": [
                        186,
                        187
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolverTest', None)": [
                        49,
                        50,
                        51,
                        52,
                        53
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolverTest', 'testSolutionLeftSide')": [
                        171
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolverTest', 'testSolutionRightSide')": [
                        190
                    ]
                }
            }
        }
    },
    "7b371c06a901d84f140ba562f28214e03511e7b0": {
        "authored_data": "2011 Jun 24 23:13",
        "commit.message": "MATH-599\nAdded brackets around single-statement conditional branches.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1139460 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "06828ea9a8d9769de5b0e69f4d1825cb5320e373",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolver', 'doSolve')": [
                        89,
                        90,
                        118,
                        137,
                        138
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#BaseSecantSolver', 'doSolve')": [
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        122,
                        123,
                        124,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148
                    ]
                }
            }
        }
    },
    "06828ea9a8d9769de5b0e69f4d1825cb5320e373": {
        "authored_data": "2011 Jun 24 22:36",
        "commit.message": "MATH-599\nInserted \"BaseBracketedSecantSolver\" into the secant-based solvers hierarchy.\nRenamed \"SecantBase\" to \"BaseSecantSolver\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1139455 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "f3f992d69258ca632cc29a366d5955b9cca1e630",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/solvers/IllinoisSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#IllinoisSolver', None)": [
                        41,
                        66,
                        67,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.math.analysis.solvers#IllinoisSolver', 'getAllowedSolutions')": [
                        68,
                        69
                    ],
                    "('org.apache.commons.math.analysis.solvers#IllinoisSolver', 'setAllowedSolutions(AllowedSolutions)')": [
                        73,
                        74
                    ],
                    "(None, None)": [
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#IllinoisSolver', None)": [
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/PegasusSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#PegasusSolver', None)": [
                        43,
                        68,
                        69,
                        72,
                        73,
                        74
                    ],
                    "('org.apache.commons.math.analysis.solvers#PegasusSolver', 'getAllowedSolutions')": [
                        70,
                        71
                    ],
                    "('org.apache.commons.math.analysis.solvers#PegasusSolver', 'setAllowedSolutions(AllowedSolutions)')": [
                        75,
                        76
                    ],
                    "(None, None)": [
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#PegasusSolver', None)": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#RegulaFalsiSolver', None)": [
                        38,
                        63,
                        64,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.math.analysis.solvers#RegulaFalsiSolver', 'getAllowedSolutions')": [
                        65,
                        66
                    ],
                    "('org.apache.commons.math.analysis.solvers#RegulaFalsiSolver', 'setAllowedSolutions(AllowedSolutions)')": [
                        70,
                        71
                    ],
                    "(None, None)": [
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#RegulaFalsiSolver', None)": [
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', None)": [
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', None)": [
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/IllinoisSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#IllinoisSolverTest', None)": [
                        25
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#IllinoisSolverTest', None)": [
                        25
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/PegasusSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#PegasusSolverTest', None)": [
                        25
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#PegasusSolverTest', None)": [
                        25
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/RegulaFalsiSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#RegulaFalsiSolverTest', None)": [
                        25
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#RegulaFalsiSolverTest', None)": [
                        25
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#SecantSolverTest', None)": [
                        25
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#SecantSolverTest', None)": [
                        25
                    ]
                }
            }
        }
    }
}