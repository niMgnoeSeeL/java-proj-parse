{
    "6da8a0eba0d0bc19764a9cd8f0b0c3bb4170b8d1": {
        "authored_data": "2016 Jan 06 11:23",
        "commit.message": "Implementation of the top level abstract classes in field ode.\n\nThis layer implements boilerplate code, mainly step handling and events\nhandling. It is independent of the type of integrator used. Below this\nlayer will be the real implementations (Runge-Kutta, embedded\nrunge-Kutta, Gragg-Bulirsch-Stoer, Adams, ...).\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "7bf9d3dbc5998608e85f165b6c93bb7fc98e66fc",
        "changes": {
            "src/main/java/org/apache/commons/math4/ode/FieldEquationsMapper.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math4.ode#FieldEquationsMapper', None)": [
                        35,
                        36,
                        37,
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#FieldEquationsMapper', None)": [
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/FieldExpandableODE.java": {
                "old": {
                    "('org.apache.commons.math4.ode#FieldExpandableODE', None)": [
                        124,
                        137,
                        150,
                        169,
                        170
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#FieldExpandableODE', None)": [
                        124,
                        137,
                        150,
                        169,
                        170
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/FieldFirstOrderIntegrator.java": {
                "old": {
                    "(None, None)": [
                        23,
                        67,
                        79,
                        80,
                        85,
                        89,
                        95,
                        158,
                        163,
                        164,
                        165,
                        166
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        67,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        97,
                        98,
                        99,
                        104,
                        105,
                        109,
                        115,
                        182,
                        183,
                        184
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/sampling/FieldStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/sampling/FieldStepNormalizer.java": {
                "new": {
                    "('org.apache.commons.math4.ode.sampling#FieldStepNormalizer', None)": [
                        95
                    ]
                }
            }
        }
    },
    "d7f0ca1011603d0ed70ee167e3ad9861bcbf756f": {
        "authored_data": "2016 Jan 06 11:19",
        "commit.message": "Interfaces and normalizer for step handling.\n\nThis corresponds to a continuous output feature. It basically allow to\nnavigate throughout current step instead of having only discrete grid\npoints. It is a major feature of our ode package.\n\nJIRA: MATH-1288\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "43800e34600d5045e7770af325fc18b84e8a9f37",
        "changes": {
            "src/main/java/org/apache/commons/math4/ode/sampling/StepNormalizerBounds.java": {
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/sampling/StepNormalizerMode.java": {
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            }
        }
    },
    "66608db56c41e91ee34fdc1e6157d69b69893fad": {
        "authored_data": "2016 Jan 01 23:54",
        "commit.message": "Show more info when this unit test fails.\n",
        "commit.author.name": "Gilles",
        "pcid": "8a8ca83f25bffb9927f67469f2230ed0067d1256",
        "changes": {
            "src/test/java/org/apache/commons/math4/random/RandomGeneratorAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math4.random#RandomGeneratorAbstractTest', 'checkSameSequence(RandomGenerator,RandomGenerator)')": [
                        445
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.random#RandomGeneratorAbstractTest', 'checkSameSequence(RandomGenerator,RandomGenerator)')": [
                        445
                    ]
                }
            }
        }
    }
}