{
    "d23485fb15a8545d27b339709e5a6c1290465abf": {
        "authored_data": "2020 Jul 20 16:55",
        "commit.message": "Scale constants before running simplex algorithm. Fixes MATH-1549.\n",
        "commit.author.name": "Mohammad Rezaei",
        "pcid": "84890c9409d4a501de68c7512baaf69826e71ddb",
        "changes": {
            "src/main/java/org/apache/commons/math4/optim/linear/SimplexTableau.java": {
                "old": {
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', None)": [
                        112,
                        294,
                        299,
                        300,
                        301,
                        459,
                        460
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'createTableau(boolean)')": [
                        231,
                        234,
                        235,
                        237,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        253,
                        264,
                        269,
                        273
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'standardize(double,double)')": [
                        302,
                        303,
                        311,
                        312,
                        313,
                        314,
                        325,
                        326,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        342,
                        343,
                        352,
                        353,
                        354,
                        355,
                        356,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        377
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'updateExponent(double,int)')": [
                        385
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'getInvertedCoefficientSum(RealVector)')": [
                        457,
                        458
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'getInvertedCoefficientSum(double)')": [
                        461,
                        463
                    ]
                },
                "new": {
                    "(None, None)": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', None)": [
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        127,
                        309,
                        314,
                        315,
                        316,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        417,
                        418,
                        419,
                        420,
                        421,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'createTableau(boolean)')": [
                        246,
                        249,
                        250,
                        252,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        268,
                        279,
                        284,
                        288
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'scale(double,double)')": [
                        317,
                        325,
                        326,
                        327,
                        328,
                        339,
                        340,
                        348,
                        350,
                        351,
                        360,
                        361,
                        362,
                        363,
                        364,
                        376,
                        379
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'computeExpChange(int,int)')": [
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'updateExponent(double,int)')": [
                        412
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'getInvertedCoefficientSum(double)')": [
                        495,
                        497
                    ]
                }
            }
        }
    },
    "84890c9409d4a501de68c7512baaf69826e71ddb": {
        "authored_data": "2020 Jul 17 00:37",
        "commit.message": "Standardize constants before running simplex algorithm. Fixes MATH-1549.\n",
        "commit.author.name": "Mohammad Rezaei",
        "pcid": "4108f5f35e22db3401a11fbbf93f85be21394f5c",
        "changes": {
            "src/main/java/org/apache/commons/math4/optim/linear/SimplexTableau.java": {
                "old": {
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'createTableau(boolean)')": [
                        223,
                        224,
                        228,
                        239,
                        244,
                        248
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'getInvertedCoefficientSum(RealVector)')": [
                        327
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', None)": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        111,
                        112,
                        113,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        379,
                        380,
                        381,
                        382,
                        383,
                        387,
                        388,
                        389,
                        393,
                        394,
                        399,
                        400,
                        459,
                        460
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'createTableau(boolean)')": [
                        230,
                        231,
                        232,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        253,
                        264,
                        269,
                        273
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'standardize(double,double)')": [
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'updateExponent(double,int)')": [
                        384,
                        385,
                        386,
                        395,
                        396,
                        397,
                        398
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'exponent(double)')": [
                        390,
                        391,
                        392
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'getInvertedCoefficientSum(RealVector)')": [
                        458
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'getInvertedCoefficientSum(double)')": [
                        461,
                        463
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'getSolution')": [
                        632
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/linear/SimplexSolverTest.java": {
                "old": {
                    "(None, None)": [
                        23,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', None)": [
                        823,
                        824
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath1549')": [
                        827,
                        828,
                        829,
                        830,
                        831,
                        832,
                        833,
                        834,
                        835,
                        837,
                        838,
                        839,
                        840
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'tryMath1549(double)')": [
                        860
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', None)": [
                        812,
                        813
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath1549')": [
                        816,
                        817,
                        818
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'tryMath1549(double)')": [
                        839
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/linear/SimplexTableauTest.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        26
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableauTest', 'testInitialization')": [
                        41
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableauTest', 'testDropPhase1Objective')": [
                        56
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableauTest', 'testTableauWithNoArtificialVars')": [
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.optim.linear#SimplexTableauTest', 'testInitialization')": [
                        37
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableauTest', 'testDropPhase1Objective')": [
                        52
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableauTest', 'testTableauWithNoArtificialVars')": [
                        71
                    ]
                }
            }
        }
    },
    "4108f5f35e22db3401a11fbbf93f85be21394f5c": {
        "authored_data": "2020 Jul 14 12:41",
        "commit.message": "MATH-1549: Added unit test based on the demo code provided on the report page.\n\nUnit test is set to \"@Ignore\" as the issue is still present.\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "849d551b8a9507a2ae8dfb81db36aa544a81ee47",
        "changes": {
            "src/test/java/org/apache/commons/math4/optim/linear/SimplexSolverTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        38,
                        39,
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        25,
                        26
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', None)": [
                        823,
                        824,
                        841,
                        842,
                        843,
                        844,
                        861,
                        862
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath1549')": [
                        825,
                        826,
                        827,
                        828,
                        829,
                        830,
                        831,
                        832,
                        833,
                        834,
                        835,
                        836,
                        837,
                        838,
                        839,
                        840
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'tryMath1549(double)')": [
                        845,
                        846,
                        847,
                        848,
                        849,
                        850,
                        851,
                        852,
                        853,
                        854,
                        855,
                        856,
                        857,
                        858,
                        859,
                        860
                    ]
                }
            }
        }
    },
    "824d92fac676a5bbde947a437f1698960edf3bc6": {
        "authored_data": "2020 Jun 28 09:13",
        "commit.message": "Condition does not apply.\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "ed4817c7301a942ac17d9a015a90ad8e406dc0e5",
        "changes": {
            "src/main/java/org/apache/commons/math4/ml/neuralnet/twod/NeuronSquareMesh2D.java": {
                "old": {
                    "('org.apache.commons.math4.ml.neuralnet.twod#NeuronSquareMesh2D', None)": [
                        759,
                        760
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.neuralnet.twod#NeuronSquareMesh2D', None)": [
                        759,
                        760,
                        761
                    ]
                }
            }
        }
    },
    "ed4817c7301a942ac17d9a015a90ad8e406dc0e5": {
        "authored_data": "2020 Jun 26 16:29",
        "commit.message": "MATH-1548: Remove methods redundant with functionality defined in \"NeuronSquareMesh2D\".\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "28e5b802fe0b406cfba5605d1537acb0e327d177",
        "changes": {
            "src/main/java/org/apache/commons/math4/ml/neuralnet/MapUtils.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        23,
                        26
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', None)": [
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        118
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'computeU(NeuronSquareMesh2D,DistanceMeasure)')": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'computeHitHistogram(Iterable,NeuronSquareMesh2D,DistanceMeasure)')": [
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117
                    ]
                }
            }
        }
    },
    "28e5b802fe0b406cfba5605d1537acb0e327d177": {
        "authored_data": "2020 Jun 26 16:05",
        "commit.message": "MATH-1548: Move standard quality measures of a SOM into class \"NeuronSquareMesh2D\".\n\nAll these indicators are usually computed in order to evaluate the quality of a SOM:\nComputing them separately is inefficient when the number of samples becomes large.\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "9cbf1d184442063ec5ab833e954009b7f18c2781",
        "changes": {
            "src/main/java/org/apache/commons/math4/ml/neuralnet/twod/NeuronSquareMesh2D.java": {
                "new": {
                    "(None, None)": [
                        23,
                        34,
                        35,
                        36,
                        37,
                        865,
                        866
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod#NeuronSquareMesh2D', None)": [
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        356,
                        357,
                        358,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        656,
                        657,
                        658,
                        659,
                        660,
                        661,
                        662,
                        663,
                        664,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671,
                        672,
                        673,
                        674,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680,
                        681,
                        682,
                        683,
                        684,
                        685,
                        686,
                        687,
                        688,
                        689,
                        690,
                        691,
                        692,
                        693,
                        694,
                        695,
                        696,
                        697,
                        698,
                        699,
                        700,
                        701,
                        702,
                        703,
                        704,
                        705,
                        706,
                        707,
                        708,
                        709,
                        710,
                        711,
                        712,
                        713,
                        714,
                        715,
                        716,
                        717,
                        718,
                        719,
                        720,
                        721,
                        722,
                        723,
                        724,
                        725,
                        726,
                        727,
                        728,
                        729,
                        730,
                        731,
                        732,
                        733,
                        734,
                        735,
                        736,
                        737,
                        738,
                        739,
                        740,
                        741,
                        742,
                        743,
                        744,
                        745,
                        746,
                        747,
                        748,
                        749,
                        750,
                        751,
                        752,
                        753,
                        754,
                        755,
                        756,
                        757,
                        758,
                        759,
                        760,
                        761,
                        762,
                        763,
                        764,
                        765,
                        766,
                        767,
                        768,
                        769,
                        770,
                        771,
                        772,
                        773,
                        774,
                        775,
                        776,
                        777,
                        778,
                        779,
                        780,
                        781,
                        782,
                        783,
                        784,
                        785,
                        786,
                        787,
                        788,
                        789,
                        790,
                        791,
                        792,
                        793,
                        794,
                        795,
                        796,
                        797,
                        798,
                        799,
                        800,
                        801,
                        802,
                        803,
                        804,
                        805,
                        806,
                        807,
                        808,
                        809,
                        810,
                        811,
                        812,
                        813,
                        814,
                        815,
                        816,
                        817,
                        818,
                        819,
                        820,
                        821,
                        822,
                        823,
                        824,
                        825,
                        826,
                        827,
                        828,
                        829,
                        830,
                        831,
                        832,
                        833,
                        834,
                        835,
                        836,
                        837,
                        838,
                        839,
                        840,
                        841,
                        842,
                        843,
                        844,
                        845,
                        846,
                        847,
                        848,
                        849,
                        850,
                        851,
                        852,
                        853,
                        854,
                        855,
                        856,
                        857,
                        858,
                        859,
                        860,
                        861,
                        862,
                        863,
                        864
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod#NeuronSquareMesh2D', 'computeQualityIndicators(Iterable)')": [
                        354,
                        355
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/neuralnet/twod/util/UnifiedDistanceMatrix.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22,
                        209
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod.util#UnifiedDistanceMatrix', None)": [
                        32,
                        33,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        57,
                        58,
                        59,
                        61,
                        62,
                        63,
                        64,
                        70,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod.util#UnifiedDistanceMatrix', 'computeImage(NeuronSquareMesh2D)')": [
                        65,
                        66,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod.util#UnifiedDistanceMatrix', 'individualDistances(NeuronSquareMesh2D)')": [
                        84
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod.util#UnifiedDistanceMatrix', 'averageDistances(NeuronSquareMesh2D)')": [
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        37
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod.util#UnifiedDistanceMatrix', None)": [
                        46,
                        61
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod.util#UnifiedDistanceMatrix', 'computeImage(NeuronSquareMesh2D)')": [
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/neuralnet/twod/NeuronSquareMesh2DTest.java": {
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        912,
                        913,
                        914
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod#NeuronSquareMesh2DTest', None)": [
                        878,
                        879
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod#NeuronSquareMesh2DTest', 'testDataVisualization')": [
                        880,
                        881,
                        882,
                        883,
                        884,
                        885,
                        886,
                        887,
                        888,
                        889,
                        890,
                        891,
                        892,
                        893,
                        894,
                        895,
                        896,
                        897,
                        898,
                        899,
                        900,
                        901,
                        902,
                        903,
                        904,
                        905,
                        906,
                        907,
                        908,
                        909,
                        910,
                        911
                    ]
                }
            }
        }
    },
    "9cbf1d184442063ec5ab833e954009b7f18c2781": {
        "authored_data": "2020 Jun 26 15:49",
        "commit.message": "MATH-1547: Remove \"findBest\" and \"findBestAndSecondBest\" methods from \"MapUtils\".\n\nUse equivalent functionality from class \"MapRanking\".\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "960ba5322beb3b0c26b71fb06b0e3131122a8a0d",
        "changes": {
            "src/main/java/org/apache/commons/math4/ml/neuralnet/MapUtils.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', None)": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        102
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'findBest(double,Iterable,DistanceMeasure)')": [
                        53,
                        54,
                        55,
                        56
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'findBestAndSecondBest(double,Iterable,DistanceMeasure)')": [
                        72,
                        73,
                        74,
                        75,
                        76
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'sort(double,Iterable,DistanceMeasure)')": [
                        98,
                        99,
                        100,
                        101
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'computeHitHistogram(Iterable,NeuronSquareMesh2D,DistanceMeasure)')": [
                        153,
                        156
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'computeQuantizationError(Iterable,Iterable,DistanceMeasure)')": [
                        203
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'computeTopographicError(Iterable,Network,DistanceMeasure)')": [
                        231,
                        232
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'computeHitHistogram(Iterable,NeuronSquareMesh2D,DistanceMeasure)')": [
                        88,
                        91
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'computeQuantizationError(Iterable,Iterable,DistanceMeasure)')": [
                        134,
                        135,
                        140
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'computeTopographicError(Iterable,Network,DistanceMeasure)')": [
                        164,
                        165,
                        170,
                        171
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/neuralnet/sofm/KohonenUpdateAction.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.sofm#KohonenUpdateAction', 'findAndUpdateBestNeuron(Network,double,double)')": [
                        198
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.sofm#KohonenUpdateAction', 'findAndUpdateBestNeuron(Network,double,double)')": [
                        197,
                        198,
                        200
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/neuralnet/twod/util/HitHistogram.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod.util#HitHistogram', 'computeImage(NeuronSquareMesh2D,Iterable)')": [
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod.util#HitHistogram', 'computeImage(NeuronSquareMesh2D,Iterable)')": [
                        57,
                        65
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/neuralnet/twod/util/QuantizationError.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod.util#QuantizationError', 'computeImage(NeuronSquareMesh2D,Iterable)')": [
                        57
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod.util#QuantizationError', 'computeImage(NeuronSquareMesh2D,Iterable)')": [
                        50,
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/neuralnet/twod/util/SmoothedDataHistogram.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod.util#SmoothedDataHistogram', 'computeImage(NeuronSquareMesh2D,Iterable)')": [
                        85,
                        86,
                        87,
                        89
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod.util#SmoothedDataHistogram', 'computeImage(NeuronSquareMesh2D,Iterable)')": [
                        81,
                        87,
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/neuralnet/twod/util/TopographicErrorHistogram.java": {
                "old": {
                    "(None, None)": [
                        20,
                        25
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod.util#TopographicErrorHistogram', 'computeImage(NeuronSquareMesh2D,Iterable)')": [
                        59,
                        67,
                        68,
                        75
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod.util#TopographicErrorHistogram', 'computeImage(NeuronSquareMesh2D,Iterable)')": [
                        58,
                        60,
                        68,
                        69,
                        76
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/neuralnet/MapRankingTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        123,
                        124
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapRankingTest', None)": [
                        108,
                        109
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapRankingTest', 'testSort')": [
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/neuralnet/sofm/KohonenUpdateActionTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.sofm#KohonenUpdateActionTest', 'testUpdate')": [
                        74,
                        86
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.sofm#KohonenUpdateActionTest', 'testUpdate')": [
                        61,
                        75,
                        87
                    ]
                }
            }
        }
    },
    "960ba5322beb3b0c26b71fb06b0e3131122a8a0d": {
        "authored_data": "2020 Jun 26 13:32",
        "commit.message": "MATH-1547: Ranking of any number of the best matching units of a neural network.\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "24e2c246ce165d3bb058ad9ca4d81a2776c9c3cf",
        "changes": {
            "src/main/java/org/apache/commons/math4/ml/neuralnet/MapUtils.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22,
                        25,
                        324,
                        325,
                        326
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'findBest(double,Iterable,DistanceMeasure)')": [
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'findBestAndSecondBest(double,Iterable,DistanceMeasure)')": [
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'sort(double,Iterable,DistanceMeasure)')": [
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', None)": [
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'findBest(double,Iterable,DistanceMeasure)')": [
                        56
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'findBestAndSecondBest(double,Iterable,DistanceMeasure)')": [
                        75,
                        76
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'sort(double,Iterable,DistanceMeasure)')": [
                        101
                    ]
                }
            }
        }
    }
}