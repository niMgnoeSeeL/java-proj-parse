{
    "f33f1fb501bba7041615caebec30eacf4ef4b0c0": {
        "authored_data": "2012 Sep 21 15:41",
        "commit.message": "MATH-860\nMatrix \"block inversion\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1388555 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "5144e1d878297d57aa7e124e73520fce3415ed22",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/MatrixUtils.java": {
                "new": {
                    "('org.apache.commons.math3.linear#MatrixUtils', None)": [
                        932,
                        933,
                        934,
                        935,
                        936,
                        937,
                        938,
                        939,
                        940,
                        941,
                        942,
                        943,
                        944
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtils', 'blockInverse(RealMatrix,int)')": [
                        945,
                        946,
                        947,
                        948,
                        949,
                        950,
                        951,
                        952,
                        953,
                        954,
                        955,
                        956,
                        957,
                        958,
                        959,
                        960,
                        961,
                        962,
                        963,
                        964,
                        965,
                        966,
                        967,
                        968,
                        969,
                        970,
                        971,
                        972,
                        973,
                        974,
                        975,
                        976,
                        977,
                        978,
                        979,
                        980,
                        981,
                        982,
                        983
                    ],
                    "(None, None)": [
                        984
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/linear/MatrixUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        329
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#MatrixUtilsTest', None)": [
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334
                    ],
                    "('org.apache.commons.math3.linear#MatrixUtilsTest', 'testBlockInverse')": [
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360
                    ],
                    "(None, None)": [
                        361,
                        362,
                        363,
                        364,
                        365
                    ]
                }
            }
        }
    },
    "b55e020684e54bd3d339572f1ef3543be360b6eb": {
        "authored_data": "2012 Sep 21 15:32",
        "commit.message": "MATH-865\nEarly detection that overflow will occur in the variables normalization\nprocedure (\"encode\" method). Warning mentioned in the documentation.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1388552 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "abe53a537b4d19a878e8de3735393e0c4e85aa7e",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', 'checkParameters')": [
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testMath864')": [
                        379
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        35
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', None)": [
                        395,
                        396,
                        397,
                        398,
                        399,
                        400
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testBoundaryRangeTooLarge')": [
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423
                    ]
                }
            }
        }
    },
    "abe53a537b4d19a878e8de3735393e0c4e85aa7e": {
        "authored_data": "2012 Sep 21 14:17",
        "commit.message": "MATH-864\nFixed missing \"repair\" of a point that lies outside the boundaries. Thanks\nto Frank Hessen for the report and for pinpointing the cause of the problem.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1388517 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "ce118ef14a28d06f69b571186fdef6670c6d9bb5",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', 'doOptimize')": [
                        417
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        31
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', 'doOptimize')": [
                        419
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', None)": [
                        918,
                        919,
                        920,
                        921,
                        922,
                        923,
                        924,
                        925,
                        926,
                        927
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/direct/CMAESOptimizerTest.java": {
                "new": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', None)": [
                        374,
                        375,
                        394
                    ],
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizerTest', 'testMath864')": [
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393
                    ]
                }
            }
        }
    },
    "ce118ef14a28d06f69b571186fdef6670c6d9bb5": {
        "authored_data": "2012 Sep 21 10:42",
        "commit.message": "MATH-863\nPatch provided by Julien Anxionnat:\n * method name change,\n * bug fix and unit test for \"dotProduct\" (instance method).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1388406 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "9146a58024280ebfc7cc869f8dbc89999f9206e5",
        "changes": {
            "src/main/java/org/apache/commons/math3/complex/Quaternion.java": {
                "old": {
                    "('org.apache.commons.math3.complex#Quaternion', None)": [
                        101,
                        223
                    ],
                    "('org.apache.commons.math3.complex#Quaternion', 'product(Quaternion,Quaternion)')": [
                        125
                    ],
                    "('org.apache.commons.math3.complex#Quaternion', 'multiply(Quaternion)')": [
                        154
                    ],
                    "('org.apache.commons.math3.complex#Quaternion', 'dotProduct(Quaternion)')": [
                        229
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.complex#Quaternion', None)": [
                        101,
                        223
                    ],
                    "('org.apache.commons.math3.complex#Quaternion', 'multiply(Quaternion,Quaternion)')": [
                        125
                    ],
                    "('org.apache.commons.math3.complex#Quaternion', 'multiply(Quaternion)')": [
                        154
                    ],
                    "('org.apache.commons.math3.complex#Quaternion', 'dotProduct(Quaternion)')": [
                        229
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/complex/QuaternionTest.java": {
                "old": {
                    "(None, None)": [
                        9
                    ],
                    "('org.apache.commons.math3.complex#QuaternionTest', 'testProductQuaternionQuaternion')": [
                        79,
                        107,
                        108
                    ],
                    "('org.apache.commons.math3.complex#QuaternionTest', 'testProductQuaternionVector')": [
                        123,
                        146
                    ],
                    "('org.apache.commons.math3.complex#QuaternionTest', 'testDotProductQuaternionQuaternion')": [
                        175,
                        176,
                        177
                    ],
                    "('org.apache.commons.math3.complex#QuaternionTest', 'testAddQuaternionQuaternion')": [
                        210,
                        211,
                        212,
                        213,
                        214,
                        215
                    ],
                    "('org.apache.commons.math3.complex#QuaternionTest', 'testSubtractQuaternionQuaternion')": [
                        229,
                        230,
                        231,
                        232,
                        233,
                        234
                    ],
                    "('org.apache.commons.math3.complex#QuaternionTest', None)": [
                        235
                    ],
                    "('org.apache.commons.math3.complex#QuaternionTest', 'testNorm')": [
                        250
                    ],
                    "('org.apache.commons.math3.complex#QuaternionTest', 'testGetInverse')": [
                        385
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.complex#QuaternionTest', 'testProductQuaternionQuaternion')": [
                        78,
                        106,
                        107
                    ],
                    "('org.apache.commons.math3.complex#QuaternionTest', 'testProductQuaternionVector')": [
                        122,
                        145
                    ],
                    "('org.apache.commons.math3.complex#QuaternionTest', 'testDotProductQuaternionQuaternion')": [
                        174,
                        175,
                        176,
                        177,
                        178
                    ],
                    "('org.apache.commons.math3.complex#QuaternionTest', 'testAddQuaternionQuaternion')": [
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222
                    ],
                    "('org.apache.commons.math3.complex#QuaternionTest', 'testSubtractQuaternionQuaternion')": [
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247
                    ],
                    "('org.apache.commons.math3.complex#QuaternionTest', None)": [
                        248
                    ],
                    "('org.apache.commons.math3.complex#QuaternionTest', 'testNorm')": [
                        263
                    ],
                    "('org.apache.commons.math3.complex#QuaternionTest', 'testGetInverse')": [
                        398
                    ]
                }
            }
        }
    },
    "9146a58024280ebfc7cc869f8dbc89999f9206e5": {
        "authored_data": "2012 Sep 21 01:56",
        "commit.message": "In AbstractRealMatrix, removed orphan javadoc comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1388298 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "95bf9fb6cf8083c919c91cb8d5114637efb04cf1",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math3.linear#AbstractRealMatrix', None)": [
                        619,
                        620
                    ]
                }
            }
        }
    },
    "95bf9fb6cf8083c919c91cb8d5114637efb04cf1": {
        "authored_data": "2012 Sep 21 01:53",
        "commit.message": "In AbstractRealMatrix, removed empty abstract method copy() (specified in interface RealMatrix).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1388296 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "d2258eff70a31e4eb540bec87fa26540cfad8265",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math3.linear#AbstractRealMatrix', 'copy')": [
                        77
                    ],
                    "('org.apache.commons.math3.linear#AbstractRealMatrix', None)": [
                        78,
                        79
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', None)": [
                        148
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math3.linear#BlockRealMatrix', None)": [
                        274
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', None)": [
                        72
                    ]
                }
            }
        }
    },
    "d2258eff70a31e4eb540bec87fa26540cfad8265": {
        "authored_data": "2012 Sep 21 01:49",
        "commit.message": "Removed some @Override tags, which have become illegal following some changes in r1388154.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1388294 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "b2cea08e85b368ba6d6883a0512ae3dfed3ece9e",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/BlockRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math3.linear#BlockRealMatrix', None)": [
                        269,
                        1131,
                        1142
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/OpenMapRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math3.linear#OpenMapRealMatrix', None)": [
                        78,
                        214,
                        228
                    ]
                }
            }
        }
    },
    "b2cea08e85b368ba6d6883a0512ae3dfed3ece9e": {
        "authored_data": "2012 Sep 20 18:50",
        "commit.message": "MATH-854\n  - filled the \"throws\" clause of Array2DRowRealMatrix,\n  - corrected some method signatures in RealMatrix and AbstractRealMatrix accordingly,\n  - in AbstractRealMatrix, removed \"abstract implementations\" of some methods specified in interface RealMatrix, as they serve no purpose.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1388154 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "7a74137904984aaa59284626810493d1ed060571",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/AbstractRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math3.linear#AbstractRealMatrix', 'createMatrix(int,int)')": [
                        77
                    ],
                    "('org.apache.commons.math3.linear#AbstractRealMatrix', None)": [
                        78,
                        79,
                        587,
                        588,
                        590,
                        591
                    ],
                    "('org.apache.commons.math3.linear#AbstractRealMatrix', 'getEntry(int,int)')": [
                        589
                    ],
                    "('org.apache.commons.math3.linear#AbstractRealMatrix', 'setEntry(int,int,double)')": [
                        592
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/Array2DRowRealMatrix.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', None)": [
                        52,
                        53,
                        54,
                        55,
                        89,
                        90,
                        92,
                        95,
                        135,
                        148,
                        151,
                        152,
                        153,
                        154,
                        175,
                        178,
                        179,
                        180,
                        181,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        293,
                        300,
                        521,
                        522
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'createMatrix(int,int)')": [
                        137
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'add(Array2DRowRealMatrix)')": [
                        155
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'subtract(Array2DRowRealMatrix)')": [
                        182,
                        183
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'multiply(Array2DRowRealMatrix)')": [
                        209,
                        210
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'setSubMatrix(double,int,int)')": [
                        260,
                        261
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'getEntry(int,int)')": [
                        294
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'setEntry(int,int,double)')": [
                        301
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'addToEntry(int,int,double)')": [
                        308
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'multiplyEntry(int,int,double)')": [
                        315
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'operate(double)')": [
                        334
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'preMultiply(double)')": [
                        354
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'walkInRowOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        408
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'walkInRowOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        425
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'walkInColumnOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        471
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'walkInColumnOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        488
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        25,
                        27,
                        28
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', None)": [
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        94,
                        95,
                        99,
                        100,
                        101,
                        154,
                        157,
                        158,
                        159,
                        160,
                        182,
                        185,
                        186,
                        187,
                        188,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        540
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'createMatrix(int,int)')": [
                        142,
                        143
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'add(Array2DRowRealMatrix)')": [
                        161,
                        162
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'subtract(Array2DRowRealMatrix)')": [
                        189,
                        190
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'multiply(Array2DRowRealMatrix)')": [
                        216,
                        217
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'setSubMatrix(double,int,int)')": [
                        267,
                        268,
                        269,
                        270
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'getEntry(int,int)')": [
                        302,
                        303
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'setEntry(int,int,double)')": [
                        309,
                        310
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'addToEntry(int,int,double)')": [
                        317,
                        318,
                        319
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'multiplyEntry(int,int,double)')": [
                        326,
                        327,
                        328
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'operate(double)')": [
                        347,
                        348
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'preMultiply(double)')": [
                        368,
                        369
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'walkInRowOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        423,
                        424
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'walkInRowOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        441,
                        442
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'walkInColumnOrder(RealMatrixChangingVisitor,int,int,int,int)')": [
                        488,
                        489
                    ],
                    "('org.apache.commons.math3.linear#Array2DRowRealMatrix', 'walkInColumnOrder(RealMatrixPreservingVisitor,int,int,int,int)')": [
                        506,
                        507
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/RealMatrix.java": {
                "old": {
                    "(None, None)": [
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        72
                    ]
                }
            }
        }
    },
    "7a74137904984aaa59284626810493d1ed060571": {
        "authored_data": "2012 Sep 20 16:21",
        "commit.message": "MATH-863\nNew \"Quaternion\" class. Thanks to Julien Anxionnat.\nAfter applying the original patch, the following changes were made:\n* Renamed the \"static\" quaternion instances (\"PLUS_\" prefix removed).\n* Removed some (syntactic sugar) methods; removed or modified corresponding\n  unit tests.\n* Made the redundant accessors call the \"canonic\" ones.\n* Removed the default tolerance and added an explicit tolerance parameter\n  in methods that depend on equality testing.\n* When a \"ZeroException\" is thrown, the actual value of the norm is provided\n  in the detailed message (as the implementation actually does not use a\n  strict comparison with 0).\n* Added \"equals(Object)\" and \"hashCode\" methods.\n* Javadoc and formatting. Added license header.\n* Removed \"toString\" documentation (as this representation should not be\n  binding). Changed the representation to not use a comma.\n* Renamed \"scalarMultiply\" to \"multiply\".\n* More stringent tolerance used in the unit tests assertions, whenever\n  possible.\n* Added unit tests.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1388099 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "600f00ba58b3cb1041fc9ef041dd3c1d6cf5571a",
        "changes": {
            "src/main/java/org/apache/commons/math3/exception/util/LocalizedFormats.java": {
                "new": {
                    "(None, None)": [
                        185
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/exception/util/LocalizedFormatsTest.java": {
                "old": {
                    "('org.apache.commons.math3.exception.util#LocalizedFormatsTest', 'testMessageNumber')": [
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.exception.util#LocalizedFormatsTest', 'testMessageNumber')": [
                        39
                    ]
                }
            }
        }
    }
}