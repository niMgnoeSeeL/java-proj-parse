{
    "bb201d926ebf225439d0007e7015365a9fbc3578": {
        "authored_data": "2011 Nov 10 20:08",
        "commit.message": "Added adapters for simple bounds constraints optimization.\n\nThe adapters are useful only for optimizers that do not support simple\nbounds constraints by themselves (i.e. Nelder-Mead and Torczon's\nmultidirectional). Two adapters are available, one performs a mapping\nbetween the whole real range and the bounded range (bounds being set\ncomponent wise), and one uses a penalty function. \n\nJIRA: MATH-196\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1200516 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "dadf9a70a0b6ea61e537678cce8277cbe2e4f60c",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java": {
                "new": {
                    "(None, None)": [
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        79,
                        80,
                        81,
                        82
                    ]
                }
            }
        }
    },
    "dadf9a70a0b6ea61e537678cce8277cbe2e4f60c": {
        "authored_data": "2011 Nov 10 17:05",
        "commit.message": "Simpify exception checking:\n- use expected @Test attribute\n- don't catch and rethrow\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1200430 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "3d866e964d95665e71bfec24c5600ce0945695c9",
        "changes": {
            "src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', None)": [
                        35,
                        40,
                        41,
                        42,
                        45,
                        51,
                        52,
                        53,
                        72,
                        78,
                        79,
                        80,
                        91,
                        96,
                        97,
                        98,
                        116,
                        121,
                        122,
                        123,
                        126,
                        131,
                        132,
                        133,
                        136,
                        141,
                        142,
                        143,
                        146,
                        151,
                        152,
                        153
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveNull')": [
                        37,
                        38,
                        39
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveBadEndpoints')": [
                        47,
                        48,
                        49,
                        50
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveAccuracyNull')": [
                        74,
                        75,
                        76,
                        77
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveNoRoot')": [
                        93,
                        94,
                        95
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testNullFunction')": [
                        118,
                        119,
                        120
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBadInitial')": [
                        128,
                        129,
                        130
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBadEndpoints')": [
                        138,
                        139,
                        140
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBadMaximumIterations')": [
                        148,
                        149,
                        150
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', None)": [
                        35,
                        40,
                        62,
                        76,
                        96,
                        101,
                        106,
                        112
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveNull')": [
                        37
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveBadEndpoints')": [
                        42,
                        43
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveAccuracyNull')": [
                        64,
                        65
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveNoRoot')": [
                        78
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testNullFunction')": [
                        98
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBadInitial')": [
                        103
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBadEndpoints')": [
                        108,
                        109
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBadMaximumIterations')": [
                        114,
                        115
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/complex/ComplexUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.complex#ComplexUtilsTest', None)": [
                        76,
                        81,
                        82,
                        83
                    ],
                    "('org.apache.commons.math.complex#ComplexUtilsTest', 'testPolar2ComplexIllegalModulus')": [
                        78,
                        79,
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#ComplexUtilsTest', None)": [
                        75
                    ],
                    "('org.apache.commons.math.complex#ComplexUtilsTest', 'testPolar2ComplexIllegalModulus')": [
                        77
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/ExponentialDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ExponentialDistributionTest', None)": [
                        117,
                        122,
                        123,
                        124
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionTest', 'testPreconditions')": [
                        119,
                        120,
                        121
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#ExponentialDistributionTest', None)": [
                        117
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionTest', 'testPreconditions')": [
                        119
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#NormalDistributionTest', None)": [
                        126,
                        131,
                        132,
                        133
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'testPreconditions')": [
                        128,
                        129,
                        130
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#NormalDistributionTest', None)": [
                        126
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'testPreconditions')": [
                        128
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/PoissonDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#PoissonDistributionTest', 'testMean')": [
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#PoissonDistributionTest', None)": [
                        138,
                        141,
                        142
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionTest', 'testNegativeMean')": [
                        139,
                        140
                    ],
                    "('org.apache.commons.math.distribution#PoissonDistributionTest', 'testMean')": [
                        145
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/TDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#TDistributionTest', None)": [
                        111,
                        116,
                        117,
                        118
                    ],
                    "('org.apache.commons.math.distribution#TDistributionTest', 'testPreconditions')": [
                        113,
                        114,
                        115
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#TDistributionTest', None)": [
                        111
                    ],
                    "('org.apache.commons.math.distribution#TDistributionTest', 'testPreconditions')": [
                        113
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/ZipfDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ZipfDistributionTest', None)": [
                        35,
                        46,
                        47,
                        48
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionTest', 'testPreconditions')": [
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#ZipfDistributionTest', None)": [
                        35,
                        38,
                        39,
                        40
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionTest', 'testPreconditions1')": [
                        36,
                        37
                    ],
                    "('org.apache.commons.math.distribution#ZipfDistributionTest', 'testPreconditions2')": [
                        41,
                        42
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/exception/util/ExceptionContextTest.java": {
                "old": {
                    "('org.apache.commons.math.exception.util#ExceptionContextTest', 'testSerializeUnserializable')": [
                        104,
                        111,
                        122,
                        123
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception.util#ExceptionContextTest', 'testSerializeUnserializable')": [
                        104,
                        111
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java": {
                "old": {
                    "('org.apache.commons.math.fraction#BigFractionFormatTest', 'testParse')": [
                        109,
                        119,
                        120
                    ],
                    "('org.apache.commons.math.fraction#BigFractionFormatTest', 'testParseInteger')": [
                        127,
                        132,
                        133,
                        134,
                        135,
                        140,
                        141
                    ],
                    "('org.apache.commons.math.fraction#BigFractionFormatTest', 'testParseNegative')": [
                        184,
                        206,
                        207
                    ],
                    "('org.apache.commons.math.fraction#BigFractionFormatTest', 'testParseProper')": [
                        215,
                        220,
                        221
                    ],
                    "('org.apache.commons.math.fraction#BigFractionFormatTest', 'testParseProperNegative')": [
                        235,
                        240,
                        241
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#BigFractionFormatTest', 'testParse')": [
                        109
                    ],
                    "('org.apache.commons.math.fraction#BigFractionFormatTest', 'testParseInteger')": [
                        125,
                        130,
                        131
                    ],
                    "('org.apache.commons.math.fraction#BigFractionFormatTest', 'testParseNegative')": [
                        178
                    ],
                    "('org.apache.commons.math.fraction#BigFractionFormatTest', 'testParseProper')": [
                        207
                    ],
                    "('org.apache.commons.math.fraction#BigFractionFormatTest', 'testParseProperNegative')": [
                        225
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/fraction/BigFractionTest.java": {
                "old": {
                    "('org.apache.commons.math.fraction#BigFractionTest', None)": [
                        93,
                        100,
                        101,
                        102
                    ],
                    "('org.apache.commons.math.fraction#BigFractionTest', 'testGoldenRatio')": [
                        95,
                        96,
                        97,
                        98,
                        99
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#BigFractionTest', None)": [
                        93
                    ],
                    "('org.apache.commons.math.fraction#BigFractionTest', 'testGoldenRatio')": [
                        95,
                        96
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/fraction/FractionFormatTest.java": {
                "old": {
                    "('org.apache.commons.math.fraction#FractionFormatTest', 'testParseInteger')": [
                        125,
                        130,
                        131,
                        132,
                        133,
                        138,
                        139
                    ],
                    "('org.apache.commons.math.fraction#FractionFormatTest', 'testParseNegative')": [
                        182,
                        204,
                        205
                    ],
                    "('org.apache.commons.math.fraction#FractionFormatTest', 'testParseProper')": [
                        213,
                        218,
                        219
                    ],
                    "('org.apache.commons.math.fraction#FractionFormatTest', 'testParseProperNegative')": [
                        233,
                        238,
                        239
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#FractionFormatTest', 'testParseInteger')": [
                        125,
                        130,
                        131
                    ],
                    "('org.apache.commons.math.fraction#FractionFormatTest', 'testParseNegative')": [
                        178
                    ],
                    "('org.apache.commons.math.fraction#FractionFormatTest', 'testParseProper')": [
                        207
                    ],
                    "('org.apache.commons.math.fraction#FractionFormatTest', 'testParseProperNegative')": [
                        225
                    ]
                }
            }
        }
    },
    "3d866e964d95665e71bfec24c5600ce0945695c9": {
        "authored_data": "2011 Nov 10 15:54",
        "commit.message": "Need to fail if the exception is not generated\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1200394 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "e92986db749a8d587f767a0d770c7fd7032a928a",
        "changes": {
            "src/test/java/org/apache/commons/math/random/StableRandomGeneratorTest.java": {
                "new": {
                    "('org.apache.commons.math.random#StableRandomGeneratorTest', 'testAlphaRangeBelowZero')": [
                        99
                    ],
                    "('org.apache.commons.math.random#StableRandomGeneratorTest', 'testAlphaRangeAboveTwo')": [
                        109
                    ],
                    "('org.apache.commons.math.random#StableRandomGeneratorTest', 'testBetaRangeBelowMinusOne')": [
                        119
                    ],
                    "('org.apache.commons.math.random#StableRandomGeneratorTest', 'testBetaRangeAboveOne')": [
                        129
                    ]
                }
            }
        }
    },
    "e92986db749a8d587f767a0d770c7fd7032a928a": {
        "authored_data": "2011 Nov 10 15:52",
        "commit.message": "Unused\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1200393 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "6c4ee56c3da3aebddcc7ad7a5d837da8894c73cb",
        "changes": {
            "src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testConcurrentModification')": [
                        955,
                        956,
                        957,
                        958
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testConcurrentModification')": [
                        955,
                        956
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizerTest', 'testProblemDimensionTooSmall')": [
                        61
                    ],
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizerTest', None)": [
                        432
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizerTest', None)": [
                        431
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNonInvertible')": [
                        214,
                        215,
                        216,
                        217,
                        220
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNonInvertible')": [
                        214,
                        215,
                        216,
                        219
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/StableRandomGeneratorTest.java": {
                "old": {
                    "('org.apache.commons.math.random#StableRandomGeneratorTest', 'testAlphaRangeBelowZero')": [
                        97
                    ],
                    "('org.apache.commons.math.random#StableRandomGeneratorTest', 'testAlphaRangeAboveTwo')": [
                        106
                    ],
                    "('org.apache.commons.math.random#StableRandomGeneratorTest', 'testBetaRangeBelowMinusOne')": [
                        115
                    ],
                    "('org.apache.commons.math.random#StableRandomGeneratorTest', 'testBetaRangeAboveOne')": [
                        124
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#StableRandomGeneratorTest', 'testAlphaRangeBelowZero')": [
                        97
                    ],
                    "('org.apache.commons.math.random#StableRandomGeneratorTest', 'testAlphaRangeAboveTwo')": [
                        106
                    ],
                    "('org.apache.commons.math.random#StableRandomGeneratorTest', 'testBetaRangeBelowMinusOne')": [
                        115
                    ],
                    "('org.apache.commons.math.random#StableRandomGeneratorTest', 'testBetaRangeAboveOne')": [
                        124
                    ]
                }
            }
        }
    },
    "6c4ee56c3da3aebddcc7ad7a5d837da8894c73cb": {
        "authored_data": "2011 Nov 10 15:47",
        "commit.message": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1200390 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "7aefdb81e1b13f334de338ca2cac6457c0df6c92",
        "changes": {
            "src/main/java/org/apache/commons/math/util/ArithmeticUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#ArithmeticUtils', None)": [
                        101
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.util#ArithmeticUtils', None)": [
                        102
                    ]
                }
            }
        }
    },
    "7aefdb81e1b13f334de338ca2cac6457c0df6c92": {
        "authored_data": "2011 Nov 10 15:43",
        "commit.message": "Unnecessary casts; document unused field\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1200384 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "7774fb6ffb0290c4d5f4910309200f681624eee9",
        "changes": {
            "src/main/java/org/apache/commons/math/stat/regression/RegressionResults.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#RegressionResults', None)": [
                        119,
                        124
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.regression#RegressionResults', None)": [
                        51,
                        120,
                        125
                    ]
                }
            }
        }
    },
    "7774fb6ffb0290c4d5f4910309200f681624eee9": {
        "authored_data": "2011 Nov 10 15:07",
        "commit.message": "Use asserNotNull(var) instead of if (var != null) and avoid subsequent NPE warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1200365 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "f2c22d1d36466b962dcf7da98b7a8a4d9a4c1ef1",
        "changes": {
            "src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testRegressAirlineConstantExternal')": [
                        181,
                        182,
                        183
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testRegressAirlineConstantInternal')": [
                        215,
                        216,
                        217
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testOneRedundantColumn')": [
                        786,
                        787,
                        788,
                        792,
                        793,
                        794
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testThreeRedundantColumn')": [
                        852,
                        853,
                        854,
                        858,
                        859,
                        860
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testRegressAirlineConstantExternal')": [
                        183
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testRegressAirlineConstantInternal')": [
                        215
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testOneRedundantColumn')": [
                        784,
                        788
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testThreeRedundantColumn')": [
                        846,
                        850
                    ]
                }
            }
        }
    },
    "f2c22d1d36466b962dcf7da98b7a8a4d9a4c1ef1": {
        "authored_data": "2011 Nov 10 15:01",
        "commit.message": "Use asserNotNull(var) instead of assertTrue(var != null) and avoid subsequent NPE warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1200359 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "416084f96449417cb4e5c4bc6ec0679a50a2af00",
        "changes": {
            "src/test/java/org/apache/commons/math/stat/regression/SimpleRegressionTest.java": {
                "old": {
                    "('org.apache.commons.math.stat.regression#SimpleRegressionTest', 'testRegressIfaceMethod')": [
                        125,
                        138,
                        148
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.regression#SimpleRegressionTest', 'testRegressIfaceMethod')": [
                        125,
                        138,
                        148
                    ]
                }
            }
        }
    },
    "416084f96449417cb4e5c4bc6ec0679a50a2af00": {
        "authored_data": "2011 Nov 10 14:58",
        "commit.message": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1200358 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "913bc812d30139121dcc1f4761730111b858578b",
        "changes": {
            "src/test/java/org/apache/commons/math/random/StableRandomGeneratorTest.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            }
        }
    },
    "913bc812d30139121dcc1f4761730111b858578b": {
        "authored_data": "2011 Nov 10 14:54",
        "commit.message": "Unused\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1200354 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "914be00ae2b694817ea92bbd047944807d0998b6",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', 'altmov(int,double)')": [
                        1457
                    ]
                }
            }
        }
    }
}