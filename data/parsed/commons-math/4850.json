{
    "88e4b16f6437817451a402cd8395e00b995def8c": {
        "authored_data": "2010 Mar 14 01:26",
        "commit.message": "MATH-337 Equals methods rely on catching ClassCastException rather than using instanceof check\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@922713 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "4a4ec2c71cfc11390392b11f04eb8de8164abad5",
        "changes": {
            "src/main/java/org/apache/commons/math/complex/Complex.java": {
                "old": {
                    "('org.apache.commons.math.complex#Complex', 'equals(Object)')": [
                        256,
                        257,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        275,
                        276
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#Complex', 'equals(Object)')": [
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        267
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/Fraction.java": {
                "old": {
                    "('org.apache.commons.math.fraction#Fraction', 'equals(Object)')": [
                        341,
                        342,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#Fraction', 'equals(Object)')": [
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/Vector3D.java": {
                "old": {
                    "('org.apache.commons.math.geometry#Vector3D', 'equals(Object)')": [
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        430,
                        431,
                        432,
                        433
                    ],
                    "('org.apache.commons.math.geometry#Vector3D', None)": [
                        434,
                        435
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry#Vector3D', 'equals(Object)')": [
                        418,
                        425,
                        426
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/LinearConstraint.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#LinearConstraint', 'equals(Object)')": [
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        205,
                        206,
                        207,
                        208
                    ],
                    "('org.apache.commons.math.optimization.linear#LinearConstraint', None)": [
                        210
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.linear#LinearConstraint', 'equals(Object)')": [
                        195,
                        201
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#LinearObjectiveFunction', 'equals(Object)')": [
                        112,
                        113,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123
                    ],
                    "('org.apache.commons.math.optimization.linear#LinearObjectiveFunction', None)": [
                        124,
                        125
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.linear#LinearObjectiveFunction', 'equals(Object)')": [
                        112,
                        113,
                        114,
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'equals(Object)')": [
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        556,
                        557,
                        558,
                        559
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', None)": [
                        560,
                        561
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'equals(Object)')": [
                        541,
                        551,
                        552
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/BigReal.java": {
                "old": {
                    "('org.apache.commons.math.util#BigReal', 'equals(Object)')": [
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#BigReal', 'equals(Object)')": [
                        267,
                        268,
                        270,
                        271,
                        272,
                        273,
                        274
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/TransformerMap.java": {
                "old": {
                    "('org.apache.commons.math.util#TransformerMap', 'equals(Object)')": [
                        161,
                        162,
                        163,
                        164,
                        178,
                        179
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#TransformerMap', 'equals(Object)')": [
                        161,
                        176
                    ]
                }
            }
        }
    },
    "4a4ec2c71cfc11390392b11f04eb8de8164abad5": {
        "authored_data": "2010 Mar 14 01:24",
        "commit.message": "Make some private fields final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@922712 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "081b8ca4b01e9fd82a7f35bebac23609b278aa02",
        "changes": {
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialCovariance.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#VectorialCovariance', None)": [
                        37,
                        40,
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#VectorialCovariance', None)": [
                        37,
                        40,
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/VectorialMean.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#VectorialMean', None)": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#VectorialMean', None)": [
                        35
                    ]
                }
            }
        }
    },
    "081b8ca4b01e9fd82a7f35bebac23609b278aa02": {
        "authored_data": "2010 Mar 14 01:20",
        "commit.message": "Make some private fields final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@922710 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "037280aacd45f30a3c119950640f0c4d3841678d",
        "changes": {
            "src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java": {
                "old": {
                    "('org.apache.commons.math.estimation#EstimatedParameter', None)": [
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#EstimatedParameter', None)": [
                        47
                    ]
                }
            }
        }
    },
    "037280aacd45f30a3c119950640f0c4d3841678d": {
        "authored_data": "2010 Mar 14 01:15",
        "commit.message": "Make some private fields final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@922708 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "db7fab70d1af65c8f44a9bf4d1b9ec9ac2149725",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java": {
                "old": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeForm', None)": [
                        48,
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeForm', None)": [
                        48,
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java": {
                "old": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonForm', None)": [
                        48,
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonForm', None)": [
                        48,
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialSplineFunction.java": {
                "old": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialSplineFunction', None)": [
                        64,
                        73,
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialSplineFunction', None)": [
                        64,
                        73,
                        79
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', None)": [
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', None)": [
                        53,
                        81
                    ]
                }
            }
        }
    },
    "b644a5861ca43b9f90e523c303c7c9ef042a8013": {
        "authored_data": "2010 Mar 10 23:42",
        "commit.message": "Increased precision.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@921633 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "03b5ae991b93ff5ad2fc924ee17a93846c28e594",
        "changes": {
            "src/test/java/org/apache/commons/math/distribution/PascalDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#PascalDistributionTest', 'makeDensityTestValues')": [
                        53,
                        54
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionTest', 'makeCumulativeTestValues')": [
                        66,
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#PascalDistributionTest', None)": [
                        35,
                        36,
                        37,
                        38,
                        42
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionTest', 'setUp')": [
                        39,
                        40,
                        41
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionTest', 'makeDensityTestValues')": [
                        61,
                        62,
                        63
                    ],
                    "('org.apache.commons.math.distribution#PascalDistributionTest', 'makeCumulativeTestValues')": [
                        75,
                        76,
                        77
                    ]
                }
            }
        }
    }
}