{
    "14ebd9342675273c25e683b4fdd2b9eedbe9f7e7": {
        "authored_data": "2021 Aug 21 23:10",
        "commit.message": "Relax expected number of evaluations (unit test).\n\nOptimization is sensitive to the change from \"AccurateMath\" to \"Math\"\nfor computing the \"pow\" function used in \"TestFunction.SUM_POW\".\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "bdb4160b004d997df9494ab18a580dd11b4eda47",
        "changes": {
            "commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#BOBYQAOptimizerTest', 'testSumPow')": [
                        188
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#BOBYQAOptimizerTest', 'testSumPow')": [
                        188
                    ]
                }
            }
        }
    },
    "bdb4160b004d997df9494ab18a580dd11b4eda47": {
        "authored_data": "2021 Aug 21 09:04",
        "commit.message": "Add variance tests for zero weights\n\nUpdate javadoc for the behaviour when input weights are zero.\n\nThis issue was found when checking the sonar report for the variance\nclass which has a potential divide by zero if the weights sum to zero.\n",
        "commit.author.name": "Alex Herbert",
        "pcid": "033c7e2c3913bf476c2d2cb5cd2d790643b3622a",
        "changes": {
            "commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/stat/descriptive/moment/Variance.java": {
                "old": {
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Variance', 'evaluate(double,double,int,int)')": [
                        321
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Variance', None)": [
                        300,
                        360,
                        493,
                        576
                    ],
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Variance', 'evaluate(double,double,int,int)')": [
                        322
                    ],
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Variance', 'evaluate(double,double,double,int,int)')": [
                        533,
                        534,
                        535,
                        536
                    ]
                }
            },
            "commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/stat/descriptive/moment/VarianceTest.java": {
                "new": {
                    "(None, None)": [
                        22,
                        25,
                        142,
                        143
                    ],
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#VarianceTest', None)": [
                        119
                    ],
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#VarianceTest', 'testZeroWeights')": [
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141
                    ]
                }
            }
        }
    },
    "033c7e2c3913bf476c2d2cb5cd2d790643b3622a": {
        "authored_data": "2021 Aug 21 08:58",
        "commit.message": "Correct verification of zero length values and weights\n\nThis bug was found when checking the sonar report for the variance class\nwhich uses MathArrays.verifyValues.\n",
        "commit.author.name": "Alex Herbert",
        "pcid": "5245a685a08db67bee1733bd2019019154d404a7",
        "changes": {
            "commons-math-legacy-core/src/main/java/org/apache/commons/math4/legacy/core/MathArrays.java": {
                "old": {
                    "('org.apache.commons.math4.legacy.core#MathArrays', 'verifyValues(double,double,int,int,boolean)')": [
                        1034,
                        1035,
                        1036,
                        1037,
                        1038,
                        1039,
                        1040,
                        1041,
                        1042,
                        1043,
                        1044,
                        1045,
                        1046,
                        1047,
                        1048,
                        1049,
                        1050,
                        1051,
                        1052,
                        1053,
                        1054
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.legacy.core#MathArrays', None)": [
                        971,
                        1008
                    ],
                    "('org.apache.commons.math4.legacy.core#MathArrays', 'verifyValues(double,double,int,int,boolean)')": [
                        1036,
                        1037,
                        1038,
                        1039,
                        1040,
                        1041,
                        1042,
                        1043,
                        1044,
                        1045,
                        1046,
                        1047,
                        1048,
                        1049,
                        1050,
                        1051,
                        1052,
                        1053,
                        1054,
                        1055,
                        1056,
                        1057,
                        1058
                    ]
                }
            },
            "commons-math-legacy-core/src/test/java/org/apache/commons/math4/legacy/core/MathArraysTest.java": {
                "new": {
                    "('org.apache.commons.math4.legacy.core#MathArraysTest', 'testVerifyValuesNegative')": [
                        638,
                        639,
                        640,
                        685,
                        686,
                        687,
                        688,
                        689,
                        690
                    ]
                }
            }
        }
    },
    "5245a685a08db67bee1733bd2019019154d404a7": {
        "authored_data": "2021 Aug 21 08:11",
        "commit.message": "sonar fix: Handle variance=0 in skewness computation for input array",
        "commit.author.name": "Alex Herbert",
        "pcid": "30aa597f1edec81de7514e638bc8d713ca281edc",
        "changes": {
            "commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/stat/descriptive/moment/Skewness.java": {
                "old": {
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Skewness', 'getResult')": [
                        118
                    ],
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Skewness', 'evaluate(double,int,int)')": [
                        183,
                        184,
                        185,
                        186,
                        187,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Skewness', None)": [
                        52,
                        53,
                        54
                    ],
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Skewness', 'getResult')": [
                        121
                    ],
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#Skewness', 'evaluate(double,int,int)')": [
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200
                    ]
                }
            },
            "commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/stat/descriptive/moment/SkewnessTest.java": {
                "new": {
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#SkewnessTest', None)": [
                        63
                    ],
                    "('org.apache.commons.math4.legacy.stat.descriptive.moment#SkewnessTest', 'testZeroSkewness')": [
                        64,
                        65,
                        66
                    ],
                    "(None, None)": [
                        67
                    ]
                }
            }
        }
    },
    "30aa597f1edec81de7514e638bc8d713ca281edc": {
        "authored_data": "2021 Aug 21 07:16",
        "commit.message": "sonar fix: Ensure checkFeasableCount is not negative.\n\nChange loop condition to 'i <= checkFeasableCount' from 'i <\ncheckFeasableCount + 1'\n\nThis ensures the loop to identify a new feasible column (RealMatrix\narxk) always executes at least once even with checkFeasibleCount at the\nlimit of 0 or Integer.MAX_VALUE.\n",
        "commit.author.name": "Alex Herbert",
        "pcid": "228a8325327c739091dfdbe6dec95c1502d40ca8",
        "changes": {
            "commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java": {
                "old": {
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#CMAESOptimizer', None)": [
                        239
                    ],
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#CMAESOptimizer', 'doOptimize')": [
                        401
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#CMAESOptimizer', None)": [
                        239
                    ],
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#CMAESOptimizer', 'doOptimize')": [
                        401
                    ]
                }
            }
        }
    },
    "228a8325327c739091dfdbe6dec95c1502d40ca8": {
        "authored_data": "2021 Aug 20 21:23",
        "commit.message": "Javadoc typo",
        "commit.author.name": "Alex Herbert",
        "pcid": "75c7377e4762b3204f50bfdb66b1d8f6c7a2d1b4",
        "changes": {
            "commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/ode/package-info.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            }
        }
    },
    "75c7377e4762b3204f50bfdb66b1d8f6c7a2d1b4": {
        "authored_data": "2021 Aug 20 20:19",
        "commit.message": "Only restore interrupted state if necessary",
        "commit.author.name": "Alex Herbert",
        "pcid": "26e4a737f7d42477158bfc9ac6f87e62765c0dea",
        "changes": {
            "commons-math-examples/examples-sofm/tsp/src/main/java/org/apache/commons/math4/examples/sofm/tsp/TravellingSalesmanSolver.java": {
                "old": {
                    "('org.apache.commons.math4.examples.sofm.tsp#TravellingSalesmanSolver', 'solve(City,double,long,int,UniformRandomProvider)')": [
                        127,
                        128
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.examples.sofm.tsp#TravellingSalesmanSolver', 'solve(City,double,long,int,UniformRandomProvider)')": [
                        127,
                        128,
                        129,
                        130
                    ]
                }
            }
        }
    },
    "26e4a737f7d42477158bfc9ac6f87e62765c0dea": {
        "authored_data": "2021 Aug 20 12:43",
        "commit.message": "Javadoc typo",
        "commit.author.name": "Alex Herbert",
        "pcid": "1bdb310ffa797e7641716268074189321e501195",
        "changes": {
            "commons-math-legacy/src/main/java/org/apache/commons/math4/legacy/analysis/interpolation/InterpolatingMicrosphere.java": {
                "old": {
                    "('org.apache.commons.math4.legacy.analysis.interpolation#InterpolatingMicrosphere', None)": [
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.legacy.analysis.interpolation#InterpolatingMicrosphere', None)": [
                        54
                    ]
                }
            }
        }
    },
    "1bdb310ffa797e7641716268074189321e501195": {
        "authored_data": "2021 Aug 20 12:38",
        "commit.message": "Sonar fix: restore thread interrupted state",
        "commit.author.name": "Alex Herbert",
        "pcid": "3ba0221c267e299525d385c496840c2b92eeac9c",
        "changes": {
            "commons-math-examples/examples-sofm/tsp/src/main/java/org/apache/commons/math4/examples/sofm/tsp/TravellingSalesmanSolver.java": {
                "new": {
                    "('org.apache.commons.math4.examples.sofm.tsp#TravellingSalesmanSolver', 'solve(City,double,long,int,UniformRandomProvider)')": [
                        127,
                        128
                    ]
                }
            }
        }
    },
    "3ba0221c267e299525d385c496840c2b92eeac9c": {
        "authored_data": "2021 Aug 20 10:51",
        "commit.message": "Simplify data format for \"SimplexOptimizerTest\" (randomized) input.\n\nThis commit also makes the following changes (unit tests):\n * Add/remove/rename/rewrite test functions.\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "7813ecb115eae3c43973056d9155c1c5c98eabce",
        "changes": {
            "commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/TestFunction.java": {
                "old": {
                    "(None, None)": [
                        22,
                        74,
                        75,
                        76,
                        77,
                        83,
                        84,
                        85,
                        86,
                        87,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        137,
                        138,
                        139,
                        140,
                        141,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163
                    ]
                },
                "new": {
                    "(None, None)": [
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182
                    ]
                }
            },
            "commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#BOBYQAOptimizerTest', 'testDiffPow')": [
                        180,
                        186
                    ],
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#BOBYQAOptimizerTest', None)": [
                        189,
                        190,
                        191
                    ],
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#BOBYQAOptimizerTest', 'testSsDiffPow')": [
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#BOBYQAOptimizerTest', 'testSumPow')": [
                        180,
                        186
                    ]
                }
            },
            "commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', 'testDiffPow')": [
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        311
                    ],
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', None)": [
                        314,
                        315,
                        316
                    ],
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', 'testSsDiffPow')": [
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', 'testSumPow')": [
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        311
                    ]
                }
            },
            "commons-math-legacy/src/test/java/org/apache/commons/math4/legacy/optim/nonlinear/scalar/noderiv/SimplexOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#SimplexOptimizerTest', 'testFunctionWithNelderMead(Task)')": [
                        92
                    ],
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#SimplexOptimizerTest', None)": [
                        117,
                        134,
                        135,
                        151,
                        165,
                        175,
                        222,
                        223,
                        224,
                        225,
                        226,
                        231,
                        277,
                        279,
                        303,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        451,
                        455,
                        456,
                        467,
                        484
                    ]
                },
                "new": {
                    "(None, None)": [
                        36,
                        38,
                        39
                    ],
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#SimplexOptimizerTest', 'testFunctionWithNelderMead(Task)')": [
                        95
                    ],
                    "('org.apache.commons.math4.legacy.optim.nonlinear.scalar.noderiv#SimplexOptimizerTest', None)": [
                        120,
                        220,
                        225,
                        255,
                        272,
                        274,
                        280,
                        281,
                        300,
                        301,
                        322,
                        323,
                        324,
                        325,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468
                    ]
                }
            }
        }
    }
}