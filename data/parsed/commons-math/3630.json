{
    "914be00ae2b694817ea92bbd047944807d0998b6": {
        "authored_data": "2011 Nov 10 14:47",
        "commit.message": "Add missing serialVersionUId\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1200351 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "19ad2142b61f2c386f474b0e0ab2e3615775a226",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/ConjugateGradient.java": {
                "new": {
                    "('org.apache.commons.math.linear#ConjugateGradient', 'solveInPlace(RealLinearOperator,InvertibleRealLinearOperator,RealVector,RealVector)')": [
                        197,
                        198
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/SymmLQ.java": {
                "new": {
                    "('org.apache.commons.math.linear#SymmLQ', 'createEvent(State)')": [
                        1219,
                        1220
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java": {
                "new": {
                    "('org.apache.commons.math.optimization.direct#PathIsExploredException', None)": [
                        2473,
                        2474
                    ]
                }
            }
        }
    },
    "19ad2142b61f2c386f474b0e0ab2e3615775a226": {
        "authored_data": "2011 Nov 10 14:43",
        "commit.message": "Unnecessary casts - angbd is double, so ensures the rest of the calculation uses double\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1200350 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "710b276e47cd14ea39e07ac1dfc6d6c0917ffe3f",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', 'trsbox(double,ArrayRealVector,ArrayRealVector,ArrayRealVector,ArrayRealVector,ArrayRealVector)')": [
                        2152,
                        2174
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#BOBYQAOptimizer', 'trsbox(double,ArrayRealVector,ArrayRealVector,ArrayRealVector,ArrayRealVector,ArrayRealVector)')": [
                        2152,
                        2174
                    ]
                }
            }
        }
    },
    "710b276e47cd14ea39e07ac1dfc6d6c0917ffe3f": {
        "authored_data": "2011 Nov 10 14:11",
        "commit.message": "Removed illegal @Override.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1200334 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "87f0f14381f9070b88720b5a0a43292dadb7deb9",
        "changes": {
            "src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', None)": [
                        68,
                        76,
                        131,
                        146,
                        160
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractDistribution', None)": [
                        60,
                        84,
                        111,
                        127,
                        136,
                        158
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#BetaDistributionImpl', None)": [
                        106
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', None)": [
                        92,
                        100,
                        108,
                        116
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', None)": [
                        70,
                        78,
                        86
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', None)": [
                        74,
                        82,
                        100
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#FDistributionImpl', None)": [
                        97,
                        122,
                        203,
                        211
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', None)": [
                        95,
                        128,
                        136,
                        144
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', None)": [
                        95,
                        103,
                        111,
                        124
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#TDistributionImpl', None)": [
                        82,
                        90,
                        102
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', None)": [
                        93,
                        107,
                        115,
                        123
                    ]
                }
            }
        }
    },
    "87f0f14381f9070b88720b5a0a43292dadb7deb9": {
        "authored_data": "2011 Nov 10 06:21",
        "commit.message": "Modifications to the hierarchy of distributions, according to MATH-692. Patch contributed by Christian Winter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1200179 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "70667484eb1bf37559fda0eea8632ea6b3dd9f4c",
        "changes": {
            "src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', None)": [
                        63,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'density(double)')": [
                        64
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        74
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', None)": [
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        131,
                        146,
                        160
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'probability(double)')": [
                        69,
                        70
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        77,
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractDistribution', None)": [
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67
                    ],
                    "('org.apache.commons.math.distribution#AbstractDistribution', 'cumulativeProbability(double,double)')": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#AbstractDistribution', None)": [
                        55,
                        57,
                        58,
                        60,
                        84,
                        111,
                        127,
                        136,
                        158
                    ],
                    "('org.apache.commons.math.distribution#AbstractDistribution', 'cumulativeProbability(double,double)')": [
                        61
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/BetaDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#BetaDistributionImpl', None)": [
                        169,
                        170,
                        173,
                        174
                    ],
                    "('org.apache.commons.math.distribution#BetaDistributionImpl', 'cumulativeProbability(double,double)')": [
                        171,
                        172
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/CauchyDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', None)": [
                        90,
                        91,
                        92,
                        93,
                        94,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        133
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', None)": [
                        90,
                        91,
                        92,
                        100,
                        108,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128
                    ],
                    "('org.apache.commons.math.distribution#CauchyDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        129
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', None)": [
                        83,
                        84,
                        85,
                        86,
                        87,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#ChiSquaredDistributionImpl', None)": [
                        70,
                        84,
                        85,
                        86,
                        92,
                        93,
                        94,
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ContinuousDistribution.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27,
                        29,
                        30,
                        32,
                        35,
                        37,
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        36,
                        37,
                        38,
                        39,
                        41,
                        44,
                        45,
                        47,
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/Distribution.java": {
                "old": {
                    "(None, None)": [
                        26,
                        27,
                        28,
                        29,
                        31,
                        33,
                        38,
                        39,
                        41,
                        42,
                        44,
                        45,
                        46,
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        28,
                        29,
                        30,
                        31,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        46,
                        51,
                        52,
                        54,
                        55,
                        57,
                        58,
                        59,
                        61
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ExponentialDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', None)": [
                        90,
                        98,
                        99,
                        100,
                        101,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        123
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', None)": [
                        74,
                        91,
                        99,
                        100,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117
                    ],
                    "('org.apache.commons.math.distribution#ExponentialDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        118
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/FDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#FDistributionImpl', None)": [
                        92,
                        93,
                        94,
                        95,
                        113,
                        122,
                        123,
                        124,
                        125,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        152
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', None)": [
                        93,
                        94,
                        112,
                        121,
                        122,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        203,
                        211
                    ],
                    "('org.apache.commons.math.distribution#FDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        145
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/GammaDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', None)": [
                        82,
                        94,
                        95,
                        96,
                        97,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#GammaDistributionImpl', None)": [
                        82,
                        94,
                        95,
                        109,
                        110,
                        111,
                        112,
                        128,
                        136
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', None)": [
                        117,
                        118,
                        120,
                        121,
                        122,
                        123,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'cumulativeProbability(double,double)')": [
                        136
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        171,
                        172
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', None)": [
                        95,
                        103,
                        119,
                        120,
                        121,
                        123,
                        124,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'cumulativeProbability(double,double)')": [
                        137
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionImpl', 'inverseCumulativeProbability(double)')": [
                        167
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/TDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#TDistributionImpl', None)": [
                        99,
                        100,
                        101,
                        102,
                        103,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#TDistributionImpl', None)": [
                        82,
                        100,
                        101,
                        102,
                        124,
                        125,
                        126,
                        127
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/WeibullDistributionImpl.java": {
                "old": {
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', None)": [
                        91,
                        92,
                        93,
                        94,
                        95,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#WeibullDistributionImpl', None)": [
                        91,
                        92,
                        93,
                        107,
                        115,
                        143,
                        144,
                        145,
                        146
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/ContinuousDistributionAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#ContinuousDistributionAbstractTest', 'testConsistency')": [
                        241
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#ContinuousDistributionAbstractTest', 'testConsistency')": [
                        241
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/TDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#TDistributionTest', 'testCumulativeProbabilityAgaintStackOverflow')": [
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#TDistributionTest', 'testCumulativeProbabilityAgainstStackOverflow')": [
                        75
                    ]
                }
            }
        }
    },
    "70667484eb1bf37559fda0eea8632ea6b3dd9f4c": {
        "authored_data": "2011 Nov 07 17:47",
        "commit.message": "Added a way for user to define tune convergence checking in CMA-ES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1198839 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "ae22813ab1d3d538c003b5ea4f39d3bb6e760c9a",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java": {
                "new": {
                    "(None, None)": [
                        34,
                        38
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', None)": [
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307
                    ]
                }
            }
        }
    },
    "ae22813ab1d3d538c003b5ea4f39d3bb6e760c9a": {
        "authored_data": "2011 Nov 07 14:12",
        "commit.message": "Make CMA-ES input sigma is now consistent with boundaries units.\n\nJIRA: MATH-702\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1198741 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "7231b6fe8ec374ab74c60dcea62f7f43b548ce3a",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/direct/CMAESOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'checkParameters')": [
                        518,
                        519
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'initializeCMA(double)')": [
                        538
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'checkParameters')": [
                        518,
                        519
                    ],
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizer', 'initializeCMA(double)')": [
                        538,
                        539
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/CMAESOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testInputSigmaOutOfRange')": [
                        99
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#CMAESOptimizerTest', 'testInputSigmaOutOfRange')": [
                        99
                    ]
                }
            }
        }
    },
    "7231b6fe8ec374ab74c60dcea62f7f43b548ce3a": {
        "authored_data": "2011 Nov 06 08:36",
        "commit.message": "Fixed javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1198265 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastien Brisard",
        "pcid": "eed9207e45c766cfb1273ebedeb2d2124625b6f2",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java": {
                "old": {
                    "(None, None)": [
                        28
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            }
        }
    },
    "eed9207e45c766cfb1273ebedeb2d2124625b6f2": {
        "authored_data": "2011 Nov 06 07:44",
        "commit.message": "Widened tolerance in mean test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1198205 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "1088dfd4cbb45c80924ca56365c2ebfb1b48f86d",
        "changes": {
            "src/test/java/org/apache/commons/math/random/StableRandomGeneratorTest.java": {
                "old": {
                    "('org.apache.commons.math.random#StableRandomGeneratorTest', 'testNextDouble')": [
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#StableRandomGeneratorTest', None)": [
                        48,
                        49
                    ],
                    "('org.apache.commons.math.random#StableRandomGeneratorTest', 'testNextDouble')": [
                        58
                    ]
                }
            }
        }
    },
    "93604d744bc66a4313902ec79ae95d8080bb64f5": {
        "authored_data": "2011 Nov 06 07:17",
        "commit.message": "Added stable random generator based on Chambers-Mallows-Stuck method.  Contributed by Pavel Ryhzov.  JIRA: MATH-462.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1198165 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "0e8d99d456732f184e61089760ccb9eeb6afd692",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java": {
                "new": {
                    "(None, None)": [
                        274,
                        275
                    ]
                }
            }
        }
    }
}