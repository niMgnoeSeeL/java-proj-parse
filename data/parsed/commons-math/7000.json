{
    "d6f7028269df96a72cccf7b72a41b89aaa820e9f": {
        "authored_data": "2003 May 17 23:24",
        "commit.message": "Added a FixedDoubleArray.  FixedDoubleArray supports a rolling mechanism\nthat reuses an array of fixed length.  This classes was added to an efficient\nrolling mechanism.\n\nFixedDoubleArray was influenced by discussions on the commons-dev list and\npatches submitted by Mark Diggory.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@140836 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Tim O'Brien",
        "pcid": "71dfdabde1f5e9f0def1d2035822518b43e70587",
        "changes": {
            "src/java/org/apache/commons/math/ExpandableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math#ExpandableDoubleArray', 'addElementRolling(double)')": [
                        309
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'getMax')": [
                        370
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'getMin')": [
                        385
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ExpandableDoubleArray', 'addElementRolling(double)')": [
                        309
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'getMax')": [
                        370
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'getMin')": [
                        385
                    ]
                }
            },
            "src/java/org/apache/commons/math/UnivariateImpl.java": {
                "old": {
                    "(None, None)": [
                        67
                    ],
                    "('org.apache.commons.math#UnivariateImpl', None)": [
                        78,
                        79,
                        80
                    ],
                    "('org.apache.commons.math#UnivariateImpl', 'insertValue(double)')": [
                        157,
                        158,
                        159
                    ],
                    "('org.apache.commons.math#UnivariateImpl', 'setWindowSize(int)')": [
                        267
                    ]
                },
                "new": {
                    "(None, None)": [
                        67
                    ],
                    "('org.apache.commons.math#UnivariateImpl', None)": [
                        78,
                        79,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104
                    ],
                    "('org.apache.commons.math#UnivariateImpl', 'insertValue(double)')": [
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169
                    ],
                    "('org.apache.commons.math#UnivariateImpl', 'setWindowSize(int)')": [
                        277
                    ]
                }
            },
            "src/test/org/apache/commons/math/ContractableDoubleArrayTest.java": {
                "old": {
                    "('org.apache.commons.math#ContractableDoubleArrayTest', None)": [
                        62,
                        75,
                        81,
                        82,
                        86,
                        87,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        111,
                        112,
                        113,
                        114
                    ],
                    "('org.apache.commons.math#ContractableDoubleArrayTest', 'testAdd1000')": [
                        76,
                        77,
                        78,
                        79,
                        80
                    ],
                    "('org.apache.commons.math#ContractableDoubleArrayTest', 'testSetElementArbitraryExpansion')": [
                        83,
                        84,
                        85
                    ],
                    "('org.apache.commons.math#ContractableDoubleArrayTest', 'testAddElementRolling')": [
                        88,
                        89,
                        90,
                        91
                    ],
                    "('org.apache.commons.math#ContractableDoubleArrayTest', 'testIllegalInitialCapacity')": [
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110
                    ],
                    "('org.apache.commons.math#ContractableDoubleArrayTest', 'testIllegalExpansionFactor')": [
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132
                    ],
                    "(None, None)": [
                        133,
                        134,
                        135,
                        136,
                        137
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ContractableDoubleArrayTest', None)": [
                        62
                    ],
                    "('org.apache.commons.math#ContractableDoubleArrayTest', 'setUp')": [
                        73
                    ]
                }
            },
            "src/test/org/apache/commons/math/DoubleArrayAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math#DoubleArrayAbstractTest', None)": [
                        68,
                        70,
                        71,
                        72,
                        73,
                        74,
                        87,
                        89,
                        90,
                        102,
                        103,
                        104,
                        105,
                        124,
                        125,
                        126,
                        148,
                        150
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testAdd1000')": [
                        77,
                        78,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testGetValues')": [
                        92,
                        93,
                        98,
                        99,
                        100,
                        101
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testSetElementArbitraryExpansion')": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testSetNumberOfElements')": [
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testAddElementRolling')": [
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        166,
                        167
                    ],
                    "(None, None)": [
                        168
                    ]
                },
                "new": {
                    "('org.apache.commons.math#DoubleArrayAbstractTest', None)": [
                        67,
                        68,
                        69,
                        71,
                        73,
                        90,
                        92,
                        112,
                        145,
                        146
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testAdd1000')": [
                        76,
                        77,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testGetValues')": [
                        94,
                        95,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testAddElementRolling')": [
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        140,
                        141,
                        142,
                        143,
                        144
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testMinMax')": [
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164
                    ]
                }
            },
            "src/test/org/apache/commons/math/ExpandableDoubleArrayTest.java": {
                "old": {
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testSetElementArbitraryExpansion')": [
                        93,
                        94,
                        95
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', None)": [
                        96,
                        97,
                        151
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testAddElementRolling')": [
                        100
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testWithInitialCapacity')": [
                        108,
                        118,
                        124
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testWithInitialCapacityAndExpansionFactor')": [
                        130,
                        140,
                        146
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'setUp')": [
                        73
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'tearDown')": [
                        81
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', None)": [
                        88,
                        107,
                        108,
                        109,
                        119,
                        120,
                        142,
                        213,
                        214,
                        215,
                        216,
                        217,
                        260,
                        261,
                        262,
                        263
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testSetElementArbitraryExpansion')": [
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testSetNumberOfElements')": [
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testDiscard')": [
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testSetOutOfBounds')": [
                        259
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testGetOutOfBounds')": [
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273
                    ],
                    "(None, None)": [
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280
                    ]
                }
            }
        }
    },
    "71dfdabde1f5e9f0def1d2035822518b43e70587": {
        "authored_data": "2003 May 16 05:23",
        "commit.message": "The Univariate interface now contains getWindow and setWindow in\naddition to a constant which signifies an \"infinite\" window.  Windowing\nhas been added to all three Univariate implementations:\n\n* UnivariateImpl - If the window is not infinite, we keep track of\n0..n elements and discount the contribution of the discarded element when\nour \"window\" is moved.  If the window is infinite no extra storage is used\nbeyond an empty ContractableDoubleArray.\n\n- In the following two implementations, the window size can be changed at anytime.\n\n* ListStoreUnivariateImpl - If the window is not infinite, this\nimplementation only takes into account the last n elements of the List.\n\n* StoreUnivariateImpl - Uses an internal ContractableDoubleArray, window size\ncan be changed at any time.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@140835 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Tim O'Brien",
        "pcid": "0700b0f482ca6bf4290ac92f47ef01c0df99191d",
        "changes": {
            "src/java/org/apache/commons/math/DoubleArray.java": {
                "new": {
                    "(None, None)": [
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132
                    ]
                }
            },
            "src/java/org/apache/commons/math/ExpandableDoubleArray.java": {
                "new": {
                    "('org.apache.commons.math#ExpandableDoubleArray', None)": [
                        364,
                        375,
                        376,
                        377,
                        378,
                        379
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'getMax')": [
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'getMin')": [
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389
                    ],
                    "(None, None)": [
                        390,
                        391,
                        392,
                        393
                    ]
                }
            },
            "src/java/org/apache/commons/math/ListUnivariateImpl.java": {
                "old": {
                    "('org.apache.commons.math#ListUnivariateImpl', 'getValues')": [
                        78,
                        81
                    ],
                    "('org.apache.commons.math#ListUnivariateImpl', 'getElement(int)')": [
                        95,
                        96
                    ],
                    "('org.apache.commons.math#ListUnivariateImpl', 'getN')": [
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ListUnivariateImpl', None)": [
                        64,
                        65,
                        66,
                        67,
                        160,
                        161,
                        162,
                        165,
                        166,
                        167,
                        168,
                        169
                    ],
                    "('org.apache.commons.math#ListUnivariateImpl', 'getValues')": [
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        98
                    ],
                    "('org.apache.commons.math#ListUnivariateImpl', 'getElement(int)')": [
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124
                    ],
                    "('org.apache.commons.math#ListUnivariateImpl', 'getN')": [
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143
                    ],
                    "('org.apache.commons.math#ListUnivariateImpl', 'getWindowSize')": [
                        163,
                        164
                    ],
                    "('org.apache.commons.math#ListUnivariateImpl', 'setWindowSize(int)')": [
                        170,
                        171
                    ],
                    "(None, None)": [
                        172,
                        173
                    ]
                }
            },
            "src/java/org/apache/commons/math/StoreUnivariateImpl.java": {
                "old": {
                    "('org.apache.commons.math#StoreUnivariateImpl', None)": [
                        61,
                        64
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'getValues')": [
                        73
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'addValue(double)')": [
                        94,
                        95
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'clear')": [
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.math#StoreUnivariateImpl', None)": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        68,
                        69,
                        70,
                        112,
                        122,
                        123,
                        124,
                        127,
                        128,
                        129,
                        130,
                        131
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'getValues')": [
                        79
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'addValue(double)')": [
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'clear')": [
                        118
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'getWindowSize')": [
                        125,
                        126
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'setWindowSize(int)')": [
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139
                    ],
                    "(None, None)": [
                        140,
                        141,
                        142,
                        143
                    ]
                }
            },
            "src/java/org/apache/commons/math/Univariate.java": {
                "old": {
                    "(None, None)": [
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        64,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141
                    ]
                }
            },
            "src/java/org/apache/commons/math/UnivariateImpl.java": {
                "old": {
                    "(None, None)": [
                        67
                    ],
                    "('org.apache.commons.math#UnivariateImpl', 'insertValue(double)')": [
                        143,
                        144,
                        145,
                        146,
                        147
                    ]
                },
                "new": {
                    "(None, None)": [
                        67,
                        268,
                        269
                    ],
                    "('org.apache.commons.math#UnivariateImpl', None)": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        185,
                        256,
                        257,
                        258,
                        261,
                        262,
                        263,
                        264,
                        265
                    ],
                    "('org.apache.commons.math#UnivariateImpl', 'insertValue(double)')": [
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184
                    ],
                    "('org.apache.commons.math#UnivariateImpl', 'getWindowSize')": [
                        259,
                        260
                    ],
                    "('org.apache.commons.math#UnivariateImpl', 'setWindowSize(int)')": [
                        266,
                        267
                    ]
                }
            }
        }
    },
    "0700b0f482ca6bf4290ac92f47ef01c0df99191d": {
        "authored_data": "2003 May 16 04:23",
        "commit.message": "* DoubleArray is now an interface which is implemented by\nExpandableDoubleArray.  The interface provides a public interface\nwhich does not hint at any of the storage parameters of\nExpandable or Contractable.\n\n* DoubleArrayTest now operates on the DoubleArray interface, casting\nto Expandable when we need to call the package scopes getInternalLength\nmethod.\n\n* While we should not provide access to the internal storage array, it\nshould be possible to obtain a double[] of elements stored in this\nDoubleArray - double[] getElements() was added to the DoubleArray interface,\nit will return the element array.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@140834 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Tim O'Brien",
        "pcid": "7651a6b14d5be6151432e7d709efd884d9ec3a6c",
        "changes": {
            "src/java/org/apache/commons/math/ContractableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math#ContractableDoubleArray', 'addElementRolling(double)')": [
                        148,
                        149
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ContractableDoubleArray', 'addElementRolling(double)')": [
                        148,
                        149,
                        154
                    ]
                }
            },
            "src/java/org/apache/commons/math/ExpandableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math#ExpandableDoubleArray', None)": [
                        64,
                        293,
                        294
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'addElementRolling(double)')": [
                        295
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ExpandableDoubleArray', None)": [
                        64,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        355
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'addElementRolling(double)')": [
                        299,
                        300,
                        301,
                        310,
                        311
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'getElements')": [
                        356,
                        357,
                        358,
                        359
                    ],
                    "(None, None)": [
                        360,
                        361,
                        362,
                        363
                    ]
                }
            },
            "src/test/org/apache/commons/math/ContractableDoubleArrayTest.java": {
                "old": {
                    "('org.apache.commons.math#ContractableDoubleArrayTest', 'setUp')": [
                        72
                    ],
                    "('org.apache.commons.math#ContractableDoubleArrayTest', 'testAdd1000')": [
                        80
                    ],
                    "('org.apache.commons.math#ContractableDoubleArrayTest', 'testSetElementArbitraryExpansion')": [
                        85
                    ],
                    "('org.apache.commons.math#ContractableDoubleArrayTest', 'testAddElementRolling')": [
                        91
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ContractableDoubleArrayTest', 'setUp')": [
                        72
                    ],
                    "('org.apache.commons.math#ContractableDoubleArrayTest', 'testAdd1000')": [
                        80
                    ],
                    "('org.apache.commons.math#ContractableDoubleArrayTest', 'testSetElementArbitraryExpansion')": [
                        85
                    ],
                    "('org.apache.commons.math#ContractableDoubleArrayTest', 'testAddElementRolling')": [
                        91
                    ]
                }
            },
            "src/test/org/apache/commons/math/DoubleArrayAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math#DoubleArrayAbstractTest', None)": [
                        65
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testAdd1000')": [
                        78,
                        82,
                        86
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testGetValues')": [
                        94,
                        95,
                        96,
                        97,
                        99
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testSetElementArbitraryExpansion')": [
                        109,
                        110,
                        111,
                        112,
                        115,
                        117,
                        120,
                        122,
                        123
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testSetNumberOfElements')": [
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        136,
                        137,
                        140,
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testAddElementRolling')": [
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        160,
                        161,
                        164,
                        167
                    ]
                },
                "new": {
                    "('org.apache.commons.math#DoubleArrayAbstractTest', None)": [
                        65
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testAdd1000')": [
                        78,
                        82,
                        86
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testGetValues')": [
                        94,
                        95,
                        96,
                        97,
                        99
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testSetElementArbitraryExpansion')": [
                        109,
                        110,
                        111,
                        112,
                        115,
                        117,
                        120,
                        122,
                        123
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testSetNumberOfElements')": [
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        136,
                        137,
                        140,
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.math#DoubleArrayAbstractTest', 'testAddElementRolling')": [
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        160,
                        161,
                        164,
                        167
                    ]
                }
            },
            "src/test/org/apache/commons/math/ExpandableDoubleArrayTest.java": {
                "old": {
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'setUp')": [
                        72
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'tearDown')": [
                        79
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testAdd1000')": [
                        90
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testSetElementArbitraryExpansion')": [
                        95
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testAddElementRolling')": [
                        100
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'setUp')": [
                        72
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'tearDown')": [
                        79
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testAdd1000')": [
                        90
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testSetElementArbitraryExpansion')": [
                        95
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testAddElementRolling')": [
                        100
                    ]
                }
            }
        }
    },
    "7651a6b14d5be6151432e7d709efd884d9ec3a6c": {
        "authored_data": "2003 May 16 03:55",
        "commit.message": "* ContractableDoubleArray extends ExpandableDoubleArray - I sense the\nneed for a DoubleArray interface.\n\n* ExpandableDoubleArray and the extension ContractableDoubleArray should\naim towards presenting a public interface that does not expose any\ndetails of the internal.  To this end, one is no longer able to get the\ninternal storage array via public double[] getValues(), and the startIndex\n(which was relative to the internal storage array) is no longer available.\n\n* [Expandable|Contractable]DoubleArray now allow one to discard\nelements from the front of the array.  Before this commit, one could\naccomplish the same goal by changing the starting index of the element\narray within the internal storage array.  This solution allowed one to\ndiscard elements from the front of the array (as well as) reclaiming\nelements by decreases the startIndex.\n\nThere were two problems with this approach (especially in\nContractableDoubleArray).   The ContractableDoubleArray can be\n\"compacted\" at anytime thereby reseting the startIndex to zero and the\nsize of the internal store array to number of elements plus one.  Second,\n\"reclaiming\" elements from the internal storage array by finagling\ninternal \"pointers\" to the start and end index seems to violate the\nprinciples of encapsulation.  If you \"discard\" an element from the\nfront of the array, consider it unavailable.\n\nIt should be noted that calling setNumElements allows one to move the end\nindex of the internal element array at will.  Assume one has a 100 element\narray, and one calls setNumElements(10), thereby decreasing the ending index\nof the element array by 90.  The 90 \"dumped\" elements are not currently\nreinitializied to the default double primitive value.  This is an open\nquestion.\n\n* Tests for ExpandableDoubleArray and ContractableDoubleArray were\nrefactored.  both test classes now extend a DoubleArrayAbstractTest\nJUnit class which contained shared unit tests for both \"implementations\".\nAn approach like this should be adopted to test the Univariate implementations.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@140833 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Tim O'Brien",
        "pcid": "065a88e24188fd324e7f6e5f70aefaf95c9a49b9",
        "changes": {
            "src/java/org/apache/commons/math/ContractableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math#ContractableDoubleArray', None)": [
                        96,
                        111,
                        190,
                        191,
                        192,
                        197,
                        198,
                        199,
                        226,
                        229,
                        230,
                        231,
                        232
                    ],
                    "('org.apache.commons.math#ContractableDoubleArray', 'setStartIndex(int)')": [
                        193,
                        194,
                        195,
                        196
                    ],
                    "('org.apache.commons.math#ContractableDoubleArray', 'checkContractExpand(float,float)')": [
                        233,
                        234,
                        235,
                        236
                    ],
                    "(None, None)": [
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ContractableDoubleArray', None)": [
                        96,
                        111,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241
                    ],
                    "('org.apache.commons.math#ContractableDoubleArray', 'setContractionCriteria(float)')": [
                        210
                    ],
                    "('org.apache.commons.math#ContractableDoubleArray', 'checkContractExpand(float,float)')": [
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        235
                    ],
                    "('org.apache.commons.math#ContractableDoubleArray', 'discardFrontElements(int)')": [
                        244,
                        245,
                        246,
                        247
                    ],
                    "(None, None)": [
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254
                    ]
                }
            },
            "src/java/org/apache/commons/math/ExpandableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math#ExpandableDoubleArray', 'getValues')": [
                        167
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', None)": [
                        327,
                        328,
                        329,
                        330,
                        331,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'getStartIndex')": [
                        332,
                        333
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'setStartIndex(int)')": [
                        343,
                        344,
                        345,
                        346,
                        347,
                        349,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359
                    ],
                    "(None, None)": [
                        360
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ExpandableDoubleArray', 'getValues')": [
                        167
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', None)": [
                        327,
                        328,
                        329,
                        330,
                        331
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'discardFrontElements(int)')": [
                        332,
                        333,
                        334,
                        335,
                        336,
                        338,
                        339,
                        341
                    ],
                    "(None, None)": [
                        342,
                        343
                    ]
                }
            },
            "src/test/org/apache/commons/math/ExpandableDoubleArrayTest.java": {
                "old": {
                    "(None, None)": [
                        56,
                        57,
                        58,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', None)": [
                        65,
                        71,
                        89,
                        90,
                        112,
                        113,
                        114,
                        138,
                        154,
                        155,
                        156,
                        157,
                        180,
                        181,
                        182,
                        206,
                        207,
                        208,
                        246,
                        247,
                        248,
                        249,
                        250,
                        310,
                        311,
                        312,
                        313
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testAdd1000')": [
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        86,
                        87,
                        88
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testWithInitialCapacity')": [
                        94,
                        96,
                        97,
                        102,
                        105,
                        106,
                        108,
                        110,
                        111
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testWithInitialCapacitAndExpansionFactor')": [
                        117,
                        118,
                        120,
                        121,
                        126,
                        129,
                        130,
                        132,
                        134,
                        135,
                        136
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testGetValues')": [
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testSetElementArbitraryExpansion')": [
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testSetNumberOfElements')": [
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testAddElementRolling')": [
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testGetOutOfBounds')": [
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testSetOutOfBounds')": [
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', None)": [
                        62,
                        68,
                        69,
                        70,
                        73,
                        74,
                        75,
                        76,
                        77,
                        80,
                        81,
                        82,
                        83,
                        84,
                        96,
                        97,
                        101,
                        102,
                        103,
                        104
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'setUp')": [
                        71,
                        72
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'tearDown')": [
                        78,
                        79
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testAdd1000')": [
                        87,
                        88,
                        90
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testSetElementArbitraryExpansion')": [
                        93,
                        94,
                        95
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testAddElementRolling')": [
                        98,
                        99,
                        100
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testWithInitialCapacity')": [
                        107,
                        108,
                        109,
                        114,
                        117,
                        118,
                        120,
                        122,
                        123,
                        124
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testWithInitialCapacityAndExpansionFactor')": [
                        127,
                        129,
                        130,
                        131,
                        136,
                        139,
                        140,
                        142,
                        144,
                        145,
                        146,
                        148
                    ]
                }
            },
            "src/test/org/apache/commons/math/TestStatisticTest.java": {
                "old": {
                    "(None, None)": [
                        59,
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        63
                    ]
                }
            }
        }
    },
    "5f2a1cbbc56a16acf7a045e9b81da75d481202b0": {
        "authored_data": "2003 May 15 15:38",
        "commit.message": "Made a nubmer of change to the ExpandableDoubleArray.\n\n* This class now supports\nthe ability to move the starting index of the internal element array.  This\nallows one to move the beginning of the element array, and form a sort of\n\"window\", this will come into play when we want to provide moving\naverages, or \"rolling\".\n\n* Added an addElementRolling(double v) - this will increment the startIndex\nand add the element to the end of the internal element array\n\n* brought the Clover test cases up to 100% for this class\n\nAdded a class ContractableDoubleArray:\n\n* This is an extension of ExpandableDoubleArray - it addes a configuration\nparameter contractionCriteria.  Essential if the contractionCriteria is\n2.0f we commit to never having the internal storage array provide more\nthan 2.0 times the storage capacity needed.  Once the internal\nstorage array exceed this measurement, the internal storage array is\npruned to the size of the internal element array.\n\nAlso, my IDE scolded me for some ununsed imports in ListUnivariateImpl, they\nhave been removed.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@140831 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Tim O'Brien",
        "pcid": "5ae92f12c702200ade207c84e26fc76f07756696",
        "changes": {
            "src/java/org/apache/commons/math/ExpandableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math#ExpandableDoubleArray', None)": [
                        67,
                        70,
                        75,
                        79,
                        260
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'getElement(int)')": [
                        192,
                        195
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'setElement(int,double)')": [
                        212,
                        213,
                        216
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'expand')": [
                        234
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'addElement(double)')": [
                        256,
                        259
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ExpandableDoubleArray', None)": [
                        67,
                        70,
                        71,
                        72,
                        73,
                        78,
                        82,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        203,
                        204,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        304,
                        305,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'setNumElements(int)')": [
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'getElement(int)')": [
                        221,
                        224
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'setElement(int,double)')": [
                        241,
                        242,
                        245
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'expand')": [
                        263
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'addElement(double)')": [
                        285,
                        288
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'addElementRolling(double)')": [
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'getStartIndex')": [
                        332,
                        333
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', 'setStartIndex(int)')": [
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359
                    ],
                    "(None, None)": [
                        360,
                        361,
                        362,
                        363
                    ]
                }
            },
            "src/java/org/apache/commons/math/StoreUnivariateImpl.java": {
                "old": {
                    "('org.apache.commons.math#StoreUnivariateImpl', None)": [
                        67
                    ]
                }
            },
            "src/test/org/apache/commons/math/ExpandableDoubleArrayTest.java": {
                "new": {
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testSetNumberOfElements')": [
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', None)": [
                        206,
                        207,
                        208,
                        246,
                        247,
                        248,
                        249
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArrayTest', 'testAddElementRolling')": [
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245
                    ]
                }
            },
            "src/test/org/apache/commons/math/ListUnivariateImplTest.java": {
                "old": {
                    "(None, None)": [
                        57,
                        68
                    ]
                },
                "new": {
                    "(None, None)": [
                        67
                    ]
                }
            }
        }
    },
    "5ae92f12c702200ade207c84e26fc76f07756696": {
        "authored_data": "2003 May 15 06:33",
        "commit.message": "Another change to the stored Univariates.  The calculations are now abstracted\ninto an AbstractStoreUnivariate class which take responsibility for\nall statistical calculations.  AbstractStoreUnivariate is implemented by\ntwo classes:\n\n* StoreUnivariateImpl - This class uses a ExpandableDoubleArray for\ninternal storage.  This class is a more efficient class in terms\nof storage and cycles for users who are interested in gathering statistics\nnot available in the UnivariateImpl implementation.\n\n* ListUnivariateImpl - This class is for a situation where a user might\nwish to maintain a List of numeric objects outside of a StoreUnivariate\ninstance.  We still need to add serious error checking in the absence of\n1.5's generics, but this implementation will work with any list that\ncontains Number objects - (BigDecimal, BigInteger, Byte, Double, Float,\nInteger, Long, Short).  This implementation ultimately transforms all\nnumeric objects into double primitives via Number.doubleValue().\n\nBecuase AbstractStoreUnivariate does not hold on to any state, a user\ncan add values through the Univariate.addValue() function OR one can\ndirectly manipulate the contents of the List directly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@140830 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Tim O'Brien",
        "pcid": "52590a7d00226c6d8861380d8ac91514cfbce87b",
        "changes": {
            "src/java/org/apache/commons/math/ExpandableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math#ExpandableDoubleArray', None)": [
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        56
                    ],
                    "('org.apache.commons.math#ExpandableDoubleArray', None)": [
                        64
                    ]
                }
            },
            "src/java/org/apache/commons/math/StoreUnivariate.java": {
                "new": {
                    "(None, None)": [
                        117,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ]
                }
            },
            "src/java/org/apache/commons/math/StoreUnivariateImpl.java": {
                "old": {
                    "(None, None)": [
                        57,
                        58
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', None)": [
                        61,
                        70,
                        78,
                        102,
                        103,
                        104,
                        105,
                        129,
                        130,
                        131,
                        132,
                        133,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        154,
                        155,
                        156,
                        157,
                        158,
                        162,
                        163,
                        164,
                        165,
                        166,
                        189,
                        190,
                        191,
                        192,
                        193,
                        200,
                        201,
                        202,
                        203,
                        204,
                        221,
                        222,
                        223,
                        224,
                        225,
                        241,
                        242,
                        249,
                        251,
                        259,
                        260,
                        261,
                        262,
                        263
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'getMode')": [
                        72,
                        73,
                        74
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'getSkewness')": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'getKurtosis')": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'getKurtosisClass')": [
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'addValue(double)')": [
                        152,
                        153
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'getMean')": [
                        159,
                        160,
                        161
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'getVariance')": [
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'getStandardDeviation')": [
                        194,
                        195,
                        196,
                        197,
                        198,
                        199
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'getMax')": [
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'getMin')": [
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'getSum')": [
                        253,
                        254,
                        255,
                        256,
                        257,
                        258
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'getSumsq')": [
                        264,
                        265,
                        266,
                        267,
                        268,
                        269
                    ]
                },
                "new": {
                    "('org.apache.commons.math#StoreUnivariateImpl', None)": [
                        59,
                        67,
                        69,
                        79,
                        84,
                        91,
                        93
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'getValues')": [
                        71,
                        72,
                        73,
                        74,
                        75
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'getElement(int)')": [
                        81,
                        82
                    ],
                    "('org.apache.commons.math#StoreUnivariateImpl', 'addValue(double)')": [
                        95,
                        96
                    ]
                }
            },
            "src/java/org/apache/commons/math/UnivariateImpl.java": {
                "old": {
                    "(None, None)": [
                        65
                    ],
                    "('org.apache.commons.math#UnivariateImpl', None)": [
                        68
                    ]
                },
                "new": {
                    "(None, None)": [
                        56,
                        57,
                        67
                    ],
                    "('org.apache.commons.math#UnivariateImpl', None)": [
                        70
                    ]
                }
            }
        }
    },
    "97568dc06f50372c16e333e4c8367f845758470a": {
        "authored_data": "2003 May 15 05:39",
        "commit.message": "The following changes were made to the Univariate implementation.  The public\ninterface of Univariate was extracted in an interface of the same name.\nUnivariate, an interface, is now implemented by UnivariateImpl which contains\nall code originally present in the original Univariate implementation.\n\n* StoredUnivariate is an interface which extends Univariate and adds\nmeasures not available in the superinterface such as mode, kurtosis, and skew\n\n* StoredUnivariateImpl provides an implementation which uses the\nExpandableDoubleArray for internal storage.  Calculations are performed\non demand *each* time a particular measure is required no state is\nmaintained by this implementation.\n\n* Univariate provided methods addValue(int), addValue(float), addValue(long).\nThere functions were removed as no cast is required - all of these\nassignments are widening conversions - no cast required\n\n* Removed the name property from Univariate - property not relevant to\nunivariate statistics\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/math/trunk@140828 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Tim O'Brien",
        "pcid": "f039b677b85cde38e3287aa31ee78ad6bc2fd058",
        "changes": {
            "src/java/org/apache/commons/math/Univariate.java": {
                "old": {
                    "(None, None)": [
                        54,
                        59,
                        60,
                        61,
                        62,
                        65,
                        257,
                        258
                    ],
                    "('org.apache.commons.math#Univariate', None)": [
                        68,
                        70,
                        71,
                        73,
                        74,
                        76,
                        77,
                        79,
                        80,
                        82,
                        83,
                        85,
                        86,
                        88,
                        89,
                        90,
                        91,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        175,
                        176,
                        177,
                        178,
                        179,
                        182,
                        183,
                        184,
                        185,
                        186,
                        189,
                        190,
                        191,
                        192,
                        193,
                        196,
                        197,
                        198,
                        199,
                        200,
                        203,
                        204,
                        205,
                        206,
                        207,
                        210,
                        211,
                        212,
                        213,
                        214,
                        217,
                        218,
                        219,
                        220,
                        221,
                        224,
                        225,
                        226,
                        227,
                        228,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        248,
                        249,
                        250
                    ],
                    "('org.apache.commons.math#Univariate', 'addValue(int)')": [
                        104,
                        105,
                        106
                    ],
                    "('org.apache.commons.math#Univariate', 'addValue(long)')": [
                        114,
                        115,
                        116
                    ],
                    "('org.apache.commons.math#Univariate', 'addValue(float)')": [
                        124,
                        125
                    ],
                    "('org.apache.commons.math#Univariate', 'addValue(double)')": [
                        132,
                        133
                    ],
                    "('org.apache.commons.math#Univariate', 'getMean')": [
                        140,
                        141,
                        142
                    ],
                    "('org.apache.commons.math#Univariate', 'getVariance')": [
                        149,
                        150,
                        151,
                        152
                    ],
                    "('org.apache.commons.math#Univariate', 'getStandardDeviation')": [
                        159,
                        160,
                        161,
                        162
                    ],
                    "('org.apache.commons.math#Univariate', 'insertValue(double)')": [
                        169,
                        170,
                        171,
                        172,
                        173,
                        174
                    ],
                    "('org.apache.commons.math#Univariate', 'getMax')": [
                        180,
                        181
                    ],
                    "('org.apache.commons.math#Univariate', 'setMax(double)')": [
                        187,
                        188
                    ],
                    "('org.apache.commons.math#Univariate', 'getMin')": [
                        194,
                        195
                    ],
                    "('org.apache.commons.math#Univariate', 'getN')": [
                        201,
                        202
                    ],
                    "('org.apache.commons.math#Univariate', 'getSum')": [
                        208,
                        209
                    ],
                    "('org.apache.commons.math#Univariate', 'getSumsq')": [
                        215,
                        216
                    ],
                    "('org.apache.commons.math#Univariate', 'getName')": [
                        222,
                        223
                    ],
                    "('org.apache.commons.math#Univariate', 'setName(java)')": [
                        229,
                        230
                    ],
                    "('org.apache.commons.math#Univariate', 'toString')": [
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247
                    ],
                    "('org.apache.commons.math#Univariate', 'clear')": [
                        251,
                        252,
                        253,
                        254,
                        255,
                        256
                    ]
                },
                "new": {
                    "(None, None)": [
                        54,
                        59,
                        60,
                        63,
                        64,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        81,
                        82,
                        83,
                        84,
                        85,
                        87,
                        88,
                        89,
                        90,
                        91,
                        93,
                        94,
                        95,
                        96,
                        98,
                        99,
                        100,
                        101,
                        103,
                        104,
                        105,
                        106,
                        108,
                        109,
                        110,
                        111,
                        113,
                        114,
                        115,
                        116,
                        118,
                        119
                    ]
                }
            },
            "src/test/org/apache/commons/math/MathTestSuite.java": {
                "old": {
                    "(None, None)": [
                        64
                    ],
                    "('org.apache.commons.math#MathTestSuite', 'suite')": [
                        90
                    ]
                },
                "new": {
                    "(None, None)": [
                        64
                    ],
                    "('org.apache.commons.math#MathTestSuite', 'suite')": [
                        90
                    ]
                }
            }
        }
    }
}