{
    "6ec0872f2844de1b39d1c00e76ecb963edba35c2": {
        "authored_data": "2012 Aug 03 20:50",
        "commit.message": "MATH-838\nMoved the \"probability(double)\" method to the parent class.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1369202 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "44b2830b882874f620f6a014d80486f91c999f21",
        "changes": {
            "src/main/java/org/apache/commons/math3/distribution/AbstractRealDistribution.java": {
                "new": {
                    "('org.apache.commons.math3.distribution#AbstractRealDistribution', None)": [
                        247,
                        248,
                        249,
                        250,
                        251,
                        252
                    ],
                    "('org.apache.commons.math3.distribution#AbstractRealDistribution', 'probability(double)')": [
                        253,
                        254
                    ],
                    "(None, None)": [
                        255
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/BetaDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#BetaDistribution', None)": [
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        134,
                        135
                    ],
                    "('org.apache.commons.math3.distribution#BetaDistribution', 'probability(double)')": [
                        132,
                        133
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/CauchyDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#CauchyDistribution', None)": [
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        140,
                        141
                    ],
                    "('org.apache.commons.math3.distribution#CauchyDistribution', 'probability(double)')": [
                        138,
                        139
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/ChiSquaredDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#ChiSquaredDistribution', None)": [
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        104,
                        105
                    ],
                    "('org.apache.commons.math3.distribution#ChiSquaredDistribution', 'probability(double)')": [
                        102,
                        103
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/ExponentialDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#ExponentialDistribution', None)": [
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        155,
                        156
                    ],
                    "('org.apache.commons.math3.distribution#ExponentialDistribution', 'probability(double)')": [
                        153,
                        154
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/FDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#FDistribution', None)": [
                        126,
                        127,
                        128,
                        129,
                        132,
                        133,
                        134,
                        135,
                        136
                    ],
                    "('org.apache.commons.math3.distribution#FDistribution', 'probability(double)')": [
                        130,
                        131
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/GammaDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#GammaDistribution', None)": [
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        201,
                        202
                    ],
                    "('org.apache.commons.math3.distribution#GammaDistribution', 'probability(double)')": [
                        199,
                        200
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#LogNormalDistribution', None)": [
                        161,
                        162,
                        163,
                        164,
                        167,
                        168,
                        169,
                        170,
                        171
                    ],
                    "('org.apache.commons.math3.distribution#LogNormalDistribution', 'probability(double)')": [
                        165,
                        166
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/NormalDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#NormalDistribution', None)": [
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        142,
                        143
                    ],
                    "('org.apache.commons.math3.distribution#NormalDistribution', 'probability(double)')": [
                        140,
                        141
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/TDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#TDistribution', None)": [
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        117,
                        118
                    ],
                    "('org.apache.commons.math3.distribution#TDistribution', 'probability(double)')": [
                        115,
                        116
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/TriangularDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#TriangularDistribution', None)": [
                        132,
                        133,
                        134,
                        135,
                        138,
                        139,
                        140,
                        141,
                        142
                    ],
                    "('org.apache.commons.math3.distribution#TriangularDistribution', 'probability(double)')": [
                        136,
                        137
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#UniformRealDistribution', None)": [
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        116,
                        117
                    ],
                    "('org.apache.commons.math3.distribution#UniformRealDistribution', 'probability(double)')": [
                        114,
                        115
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#WeibullDistribution', None)": [
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        154,
                        155
                    ],
                    "('org.apache.commons.math3.distribution#WeibullDistribution', 'probability(double)')": [
                        152,
                        153
                    ]
                }
            }
        }
    },
    "44b2830b882874f620f6a014d80486f91c999f21": {
        "authored_data": "2012 Aug 03 19:59",
        "commit.message": "Typo.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1369188 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "db540a6b917f5693d3a58b4be8b9453310642187",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java": {
                "old": {
                    "('org.apache.commons.math3.analysis#FunctionUtils', None)": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis#FunctionUtils', None)": [
                        38
                    ]
                }
            }
        }
    },
    "db540a6b917f5693d3a58b4be8b9453310642187": {
        "authored_data": "2012 Aug 03 17:15",
        "commit.message": "Javadoc, formatting.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1369101 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "c25dbeec0f802672b9acad924ad235d67c2f5ae8",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java": {
                "old": {
                    "('org.apache.commons.math3.analysis#FunctionUtils', None)": [
                        38,
                        39,
                        40,
                        59,
                        60,
                        61,
                        96,
                        115,
                        148,
                        167,
                        265,
                        281,
                        298,
                        300,
                        301,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        313,
                        315
                    ],
                    "('org.apache.commons.math3.analysis#FunctionUtils', 'combine(BivariateFunction,UnivariateFunction,UnivariateFunction)')": [
                        215,
                        216
                    ],
                    "('org.apache.commons.math3.analysis#FunctionUtils', 'collector(BivariateFunction,UnivariateFunction,double)')": [
                        236,
                        237
                    ],
                    "('org.apache.commons.math3.analysis#FunctionUtils', 'collector(BivariateFunction,double)')": [
                        260
                    ],
                    "('org.apache.commons.math3.analysis#FunctionUtils', 'fix1stArgument(BivariateFunction,double)')": [
                        272
                    ],
                    "('org.apache.commons.math3.analysis#FunctionUtils', 'fix2ndArgument(BivariateFunction,double)')": [
                        288
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis#FunctionUtils', None)": [
                        38,
                        39,
                        40,
                        41,
                        60,
                        61,
                        62,
                        63,
                        98,
                        117,
                        150,
                        169,
                        267,
                        283,
                        301,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        312,
                        314
                    ],
                    "('org.apache.commons.math3.analysis#FunctionUtils', 'combine(BivariateFunction,UnivariateFunction,UnivariateFunction)')": [
                        217,
                        218
                    ],
                    "('org.apache.commons.math3.analysis#FunctionUtils', 'collector(BivariateFunction,UnivariateFunction,double)')": [
                        238,
                        239
                    ],
                    "('org.apache.commons.math3.analysis#FunctionUtils', 'collector(BivariateFunction,double)')": [
                        262
                    ],
                    "('org.apache.commons.math3.analysis#FunctionUtils', 'fix1stArgument(BivariateFunction,double)')": [
                        274
                    ],
                    "('org.apache.commons.math3.analysis#FunctionUtils', 'fix2ndArgument(BivariateFunction,double)')": [
                        290
                    ]
                }
            }
        }
    },
    "c25dbeec0f802672b9acad924ad235d67c2f5ae8": {
        "authored_data": "2012 Aug 02 22:18",
        "commit.message": "MATH-834\nReplaced calls to the various sampling methods in \"RandomDataImpl\" by their\nequivalent \"sample\" method in the distribution classes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1368738 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "d7c0f27e9fac104f613dcb672c243d3dc7eaf655",
        "changes": {
            "src/test/java/org/apache/commons/math3/optimization/fitting/PolynomialFitterTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math3.optimization.fitting#PolynomialFitterTest', 'testFit')": [
                        43,
                        44,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31
                    ],
                    "('org.apache.commons.math3.optimization.fitting#PolynomialFitterTest', 'testFit')": [
                        44,
                        45,
                        54
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFitting2')": [
                        271
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFitting2')": [
                        268,
                        269,
                        273
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/general/RandomCirclePointGenerator.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math3.optimization.general#RandomCirclePointGenerator', None)": [
                        31,
                        32,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        58,
                        60,
                        61,
                        62,
                        63
                    ],
                    "('org.apache.commons.math3.optimization.general#RandomCirclePointGenerator', 'create')": [
                        86,
                        87,
                        88,
                        89,
                        90,
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        25,
                        26,
                        27
                    ],
                    "('org.apache.commons.math3.optimization.general#RandomCirclePointGenerator', None)": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        56,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63
                    ],
                    "('org.apache.commons.math3.optimization.general#RandomCirclePointGenerator', 'create')": [
                        86,
                        87,
                        88
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/general/RandomStraightLinePointGenerator.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math3.optimization.general#RandomStraightLinePointGenerator', None)": [
                        31,
                        32,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        47,
                        56,
                        57,
                        58,
                        63,
                        64,
                        65,
                        67,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.math3.optimization.general#RandomStraightLinePointGenerator', 'create')": [
                        95,
                        96,
                        97,
                        99
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        25,
                        26,
                        27
                    ],
                    "('org.apache.commons.math3.optimization.general#RandomStraightLinePointGenerator', None)": [
                        37,
                        38,
                        39,
                        40,
                        45,
                        54,
                        55,
                        56,
                        61,
                        62,
                        63,
                        65,
                        68,
                        69,
                        70,
                        71
                    ],
                    "('org.apache.commons.math3.optimization.general#RandomStraightLinePointGenerator', 'create')": [
                        94,
                        95,
                        96,
                        98
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/stat/descriptive/AggregateSummaryStatisticsTest.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26
                    ],
                    "('org.apache.commons.math3.stat.descriptive#AggregateSummaryStatisticsTest', 'generateSample')": [
                        249,
                        250,
                        251,
                        252,
                        253,
                        254
                    ],
                    "('org.apache.commons.math3.stat.descriptive#AggregateSummaryStatisticsTest', 'generatePartition(double)')": [
                        268,
                        276
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27,
                        28
                    ],
                    "('org.apache.commons.math3.stat.descriptive#AggregateSummaryStatisticsTest', 'generateSample')": [
                        251,
                        252,
                        253,
                        254
                    ],
                    "('org.apache.commons.math3.stat.descriptive#AggregateSummaryStatisticsTest', 'generatePartition(double)')": [
                        275,
                        276
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/stat/descriptive/UnivariateStatisticAbstractTest.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25
                    ],
                    "('org.apache.commons.math3.stat.descriptive#UnivariateStatisticAbstractTest', 'testWeightedConsistency')": [
                        182,
                        187,
                        196
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27
                    ],
                    "('org.apache.commons.math3.stat.descriptive#UnivariateStatisticAbstractTest', 'testWeightedConsistency')": [
                        187,
                        189,
                        196,
                        199
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/util/MathUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math3.util#MathUtilsTest', 'testPermutedArrayHash')": [
                        83
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math3.util#MathUtilsTest', 'testPermutedArrayHash')": [
                        85,
                        86
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/util/ResizableDoubleArrayTest.java": {
                "old": {
                    "(None, None)": [
                        18,
                        19
                    ],
                    "('org.apache.commons.math3.util#ResizableDoubleArrayTest', 'testWithInitialCapacity')": [
                        316,
                        317
                    ],
                    "('org.apache.commons.math3.util#ResizableDoubleArrayTest', 'testWithInitialCapacityAndExpansionFactor')": [
                        337,
                        338
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19,
                        20,
                        21
                    ],
                    "('org.apache.commons.math3.util#ResizableDoubleArrayTest', 'testWithInitialCapacity')": [
                        318,
                        319
                    ],
                    "('org.apache.commons.math3.util#ResizableDoubleArrayTest', 'testWithInitialCapacityAndExpansionFactor')": [
                        339,
                        340
                    ]
                }
            }
        }
    },
    "d7c0f27e9fac104f613dcb672c243d3dc7eaf655": {
        "authored_data": "2012 Aug 01 21:24",
        "commit.message": "[MATH-836] Improve overflow check for negative values in Fraction constructor.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1368253 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "63a48705a496bf2506121dcddbd8cac2a78f877c",
        "changes": {
            "src/main/java/org/apache/commons/math3/fraction/Fraction.java": {
                "old": {
                    "('org.apache.commons.math3.fraction#Fraction', None)": [
                        181,
                        209
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fraction#Fraction', None)": [
                        181,
                        209
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fraction/FractionTest.java": {
                "new": {
                    "('org.apache.commons.math3.fraction#FractionTest', 'testConstructor')": [
                        63
                    ],
                    "('org.apache.commons.math3.fraction#FractionTest', 'testIntegerOverflow')": [
                        138,
                        139
                    ]
                }
            }
        }
    },
    "63a48705a496bf2506121dcddbd8cac2a78f877c": {
        "authored_data": "2012 Jul 31 14:58",
        "commit.message": "MATH-835\nAvoid overflow.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1367593 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "a49e443c44766df45d254e13bea377d4133f5ee6",
        "changes": {
            "src/main/java/org/apache/commons/math3/fraction/Fraction.java": {
                "old": {
                    "('org.apache.commons.math3.fraction#Fraction', 'percentageValue')": [
                        597
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fraction#Fraction', 'percentageValue')": [
                        597
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fraction/FractionTest.java": {
                "new": {
                    "('org.apache.commons.math3.fraction#FractionTest', 'testMath835')": [
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253
                    ],
                    "('org.apache.commons.math3.fraction#FractionTest', None)": [
                        254,
                        255,
                        256
                    ]
                }
            }
        }
    },
    "a49e443c44766df45d254e13bea377d4133f5ee6": {
        "authored_data": "2012 Jul 30 19:37",
        "commit.message": "[MATH-828] Add additional heuristic for rare cases in pivotRow selection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1367242 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "107d7f3ea8db440cb2f0a9d626c87a34ad061bae",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.linear#SimplexSolver', 'getPivotRow(SimplexTableau,int)')": [
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        145,
                        146,
                        147
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.linear#SimplexSolver', 'getPivotRow(SimplexTableau,int)')": [
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        154,
                        155
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/optimization/linear/SimplexSolverTest.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.linear#SimplexSolverTest', None)": [
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.linear#SimplexSolverTest', None)": [
                        53,
                        54,
                        73,
                        74
                    ],
                    "('org.apache.commons.math3.optimization.linear#SimplexSolverTest', 'testMath828Cycle')": [
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ]
                }
            }
        }
    },
    "107d7f3ea8db440cb2f0a9d626c87a34ad061bae": {
        "authored_data": "2012 Jul 30 19:07",
        "commit.message": "Use a TreeSet instead of an ArrayList when dropping columns after phase 1 of the simplex solver to improve performance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1367227 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "ebc0d3d309385831e3fd83a7a0da155c0ac2b27e",
        "changes": {
            "src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.linear#SimplexTableau', 'dropPhase1Objective')": [
                        336,
                        349,
                        350,
                        351,
                        352,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math3.optimization.linear#SimplexTableau', 'dropPhase1Objective')": [
                        337,
                        350,
                        351,
                        352,
                        353,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369
                    ]
                }
            }
        }
    },
    "ebc0d3d309385831e3fd83a7a0da155c0ac2b27e": {
        "authored_data": "2012 Jul 29 12:12",
        "commit.message": "Reverting changes inadvertently committed in revision 1366821.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1366826 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "72779b230040d8dcc0c39d9791fc6c9d8fd2d142",
        "changes": {
            "src/main/java/org/apache/commons/math3/linear/LUDecomposition.java": {
                "old": {
                    "('org.apache.commons.math3.linear#LUDecomposition', None)": [
                        93,
                        108,
                        109,
                        110,
                        111,
                        118,
                        121,
                        131,
                        134,
                        144,
                        154,
                        158
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#LUDecomposition', None)": [
                        92,
                        114,
                        126,
                        138,
                        145,
                        149,
                        153
                    ]
                }
            }
        }
    }
}