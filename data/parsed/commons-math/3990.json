{
    "33c0778d9081f5fd4661980239e990e1c48d3a79": {
        "authored_data": "2011 Aug 05 19:43",
        "commit.message": "MATH-581\nNew exception. Simplified others.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1154361 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "9c6557732bcdb6f473e7e4dde49042c5b708cec2",
        "changes": {
            "src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java": {
                "old": {
                    "(None, None)": [
                        175,
                        191,
                        192
                    ]
                },
                "new": {
                    "(None, None)": [
                        175,
                        191,
                        192,
                        193
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java": {
                "old": {
                    "('org.apache.commons.math.linear#NonPositiveDefiniteLinearOperatorException', None)": [
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82
                    ],
                    "('org.apache.commons.math.linear#NonPositiveDefiniteLinearOperatorException', 'getOffendingVector')": [
                        74,
                        75
                    ],
                    "('org.apache.commons.math.linear#NonPositiveDefiniteLinearOperatorException', 'getOffendingLinearOperator')": [
                        83,
                        84
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#NonPositiveDefiniteLinearOperatorException', None)": [
                        36,
                        37,
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/NonSelfAdjointLinearOperatorException.java": {
                "old": {
                    "('org.apache.commons.math.linear#NonSelfAdjointLinearOperatorException', None)": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124
                    ],
                    "('org.apache.commons.math.linear#NonSelfAdjointLinearOperatorException', 'getFirstOffendingVector')": [
                        94,
                        95
                    ],
                    "('org.apache.commons.math.linear#NonSelfAdjointLinearOperatorException', 'getOffendingLinearOperator')": [
                        103,
                        104
                    ],
                    "('org.apache.commons.math.linear#NonSelfAdjointLinearOperatorException', 'getSecondOffendingVector')": [
                        116,
                        117
                    ],
                    "('org.apache.commons.math.linear#NonSelfAdjointLinearOperatorException', 'getThreshold')": [
                        125,
                        126
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#NonSelfAdjointLinearOperatorException', None)": [
                        40,
                        41,
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/NonSquareMatrixException.java": {
                "old": {
                    "('org.apache.commons.math.linear#NonSquareMatrixException', None)": [
                        29
                    ]
                }
            }
        }
    },
    "9c6557732bcdb6f473e7e4dde49042c5b708cec2": {
        "authored_data": "2011 Aug 05 19:12",
        "commit.message": "fixed typos, it's IEEE754, not IEEE753 ...\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1154356 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "8b41800046f1d336865b48ea4bc65522ebb3e6ea",
        "changes": {
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', 'linearCombination(double,double,double,double)')": [
                        2365
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'linearCombination(double,double,double,double,double,double)')": [
                        2438
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'linearCombination(double,double,double,double,double,double,double,double)')": [
                        2533
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtils', 'linearCombination(double,double,double,double)')": [
                        2365
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'linearCombination(double,double,double,double,double,double)')": [
                        2438
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'linearCombination(double,double,double,double,double,double,double,double)')": [
                        2533
                    ]
                }
            }
        }
    },
    "8b41800046f1d336865b48ea4bc65522ebb3e6ea": {
        "authored_data": "2011 Aug 05 15:05",
        "commit.message": "Fixed a wrong detection of rotation axis versus vectors plane in Rotation constructor using two vectors pairs.\n\nJIRA: MATH-639\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1154257 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "3defe7345d95fc5d4741b1990d1a5debd2800d8d",
        "changes": {
            "src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java": {
                "old": {
                    "('org.apache.commons.math.geometry.euclidean.threed#Rotation', None)": [
                        316,
                        317,
                        318,
                        319,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        372,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        430,
                        431,
                        455,
                        470,
                        471,
                        472
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry.euclidean.threed#Rotation', None)": [
                        316,
                        317,
                        318,
                        319,
                        325,
                        326,
                        327,
                        328,
                        329,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        389,
                        413,
                        428,
                        429,
                        430,
                        431
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/geometry/euclidean/threed/RotationTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry.euclidean.threed#RotationTest', None)": [
                        479,
                        492,
                        493
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#RotationTest', 'testIssue639')": [
                        480,
                        481,
                        482,
                        483,
                        484,
                        485,
                        486,
                        487,
                        488,
                        489,
                        490,
                        491
                    ]
                }
            }
        }
    },
    "3defe7345d95fc5d4741b1990d1a5debd2800d8d": {
        "authored_data": "2011 Aug 05 15:02",
        "commit.message": "Use the new highly accurate linearCombination utility methods in 3D Euclidean geometry.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1154253 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "079e67738b89686c451ace8d4e5e52d7534dfc3b",
        "changes": {
            "src/main/java/org/apache/commons/math/geometry/euclidean/threed/Vector3D.java": {
                "old": {
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3D', None)": [
                        135,
                        136,
                        137,
                        152,
                        153,
                        154,
                        171,
                        172,
                        173,
                        419,
                        426,
                        464
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3D', 'add(double,Vector)')": [
                        254,
                        255
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3D', 'subtract(double,Vector)')": [
                        266,
                        267
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3D', 'angle(Vector3D,Vector3D)')": [
                        331
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3D', 'dotProduct(Vector)')": [
                        422
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3D', 'crossProduct(Vector)')": [
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3D', None)": [
                        135,
                        136,
                        137,
                        152,
                        153,
                        154,
                        171,
                        172,
                        173,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        433
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3D', 'getNorm')": [
                        217
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3D', 'getNormSq')": [
                        223
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3D', 'add(double,Vector)')": [
                        256
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3D', 'subtract(double,Vector)')": [
                        267
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3D', 'angle(Vector3D,Vector3D)')": [
                        331
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3D', 'dotProduct(Vector)')": [
                        429
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3D', 'crossProduct(Vector)')": [
                        438,
                        439,
                        440
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/geometry/euclidean/threed/Vector3DTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        22,
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3DTest', None)": [
                        238,
                        253,
                        254,
                        255,
                        270,
                        271,
                        272,
                        273,
                        295,
                        296,
                        297,
                        312,
                        313,
                        314
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3DTest', 'testAccurateDotProduct')": [
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3DTest', 'testDotProduct')": [
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3DTest', 'testAccurateCrossProduct')": [
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Vector3DTest', 'testCrossProduct')": [
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311
                    ]
                }
            }
        }
    },
    "079e67738b89686c451ace8d4e5e52d7534dfc3b": {
        "authored_data": "2011 Aug 05 15:01",
        "commit.message": "Added a few linearCombination utility methods in MathUtils to compute accurately\nlinear combinations a1.b1 + a2.b2 + ... + an.bn taking great care to compensate\nfor cancellation effects. This both improves and simplify several methods in\neuclidean geometry classes, including linear constructors, dot product and cross\nproduct.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1154250 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "cb067c2503d2d99fd9f6fa4a4128c7be34f9d748",
        "changes": {
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        24,
                        25,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        2608,
                        2609,
                        2610
                    ],
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        93,
                        94,
                        95,
                        2338,
                        2339,
                        2340,
                        2341,
                        2342,
                        2343,
                        2344,
                        2345,
                        2346,
                        2347,
                        2348,
                        2349,
                        2350,
                        2351,
                        2352,
                        2353,
                        2354,
                        2355,
                        2356,
                        2357,
                        2358,
                        2359,
                        2406,
                        2407,
                        2408,
                        2409,
                        2410,
                        2411,
                        2412,
                        2413,
                        2414,
                        2415,
                        2416,
                        2417,
                        2418,
                        2419,
                        2420,
                        2421,
                        2422,
                        2423,
                        2424,
                        2425,
                        2426,
                        2427,
                        2428,
                        2429,
                        2430,
                        2431,
                        2496,
                        2497,
                        2498,
                        2499,
                        2500,
                        2501,
                        2502,
                        2503,
                        2504,
                        2505,
                        2506,
                        2507,
                        2508,
                        2509,
                        2510,
                        2511,
                        2512,
                        2513,
                        2514,
                        2515,
                        2516,
                        2517,
                        2518,
                        2519,
                        2520,
                        2521,
                        2522,
                        2523,
                        2524,
                        2525
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'linearCombination(double,double,double,double)')": [
                        2360,
                        2361,
                        2362,
                        2363,
                        2364,
                        2365,
                        2366,
                        2367,
                        2368,
                        2369,
                        2370,
                        2371,
                        2372,
                        2373,
                        2374,
                        2375,
                        2376,
                        2377,
                        2378,
                        2379,
                        2380,
                        2381,
                        2382,
                        2383,
                        2384,
                        2385,
                        2386,
                        2387,
                        2388,
                        2389,
                        2390,
                        2391,
                        2392,
                        2393,
                        2394,
                        2395,
                        2396,
                        2397,
                        2398,
                        2399,
                        2400,
                        2401,
                        2402,
                        2403,
                        2404,
                        2405
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'linearCombination(double,double,double,double,double,double)')": [
                        2432,
                        2433,
                        2434,
                        2435,
                        2436,
                        2437,
                        2438,
                        2439,
                        2440,
                        2441,
                        2442,
                        2443,
                        2444,
                        2445,
                        2446,
                        2447,
                        2448,
                        2449,
                        2450,
                        2451,
                        2452,
                        2453,
                        2454,
                        2455,
                        2456,
                        2457,
                        2458,
                        2459,
                        2460,
                        2461,
                        2462,
                        2463,
                        2464,
                        2465,
                        2466,
                        2467,
                        2468,
                        2469,
                        2470,
                        2471,
                        2472,
                        2473,
                        2474,
                        2475,
                        2476,
                        2477,
                        2478,
                        2479,
                        2480,
                        2481,
                        2482,
                        2483,
                        2484,
                        2485,
                        2486,
                        2487,
                        2488,
                        2489,
                        2490,
                        2491,
                        2492,
                        2493,
                        2494,
                        2495
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'linearCombination(double,double,double,double,double,double,double,double)')": [
                        2526,
                        2527,
                        2528,
                        2529,
                        2530,
                        2531,
                        2532,
                        2533,
                        2534,
                        2535,
                        2536,
                        2537,
                        2538,
                        2539,
                        2540,
                        2541,
                        2542,
                        2543,
                        2544,
                        2545,
                        2546,
                        2547,
                        2548,
                        2549,
                        2550,
                        2551,
                        2552,
                        2553,
                        2554,
                        2555,
                        2556,
                        2557,
                        2558,
                        2559,
                        2560,
                        2561,
                        2562,
                        2563,
                        2564,
                        2565,
                        2566,
                        2567,
                        2568,
                        2569,
                        2570,
                        2571,
                        2572,
                        2573,
                        2574,
                        2575,
                        2576,
                        2577,
                        2578,
                        2579,
                        2580,
                        2581,
                        2582,
                        2583,
                        2584,
                        2585,
                        2586,
                        2587,
                        2588,
                        2589,
                        2590,
                        2591,
                        2592,
                        2593,
                        2594,
                        2595,
                        2596,
                        2597,
                        2598,
                        2599,
                        2600,
                        2601,
                        2602,
                        2603,
                        2604,
                        2605,
                        2606,
                        2607
                    ]
                }
            }
        }
    },
    "cb067c2503d2d99fd9f6fa4a4128c7be34f9d748": {
        "authored_data": "2011 Aug 04 10:03",
        "commit.message": "MATH-581\nMethod rename (previous one was misleading).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1153821 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "98556fedcce9e7e4375f994cc171d4803e6c0ee9",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/NonPositiveDefiniteLinearOperatorException.java": {
                "old": {
                    "('org.apache.commons.math.linear#NonPositiveDefiniteLinearOperatorException', 'copyOffendingVector')": [
                        74
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#NonPositiveDefiniteLinearOperatorException', 'getOffendingVector')": [
                        74
                    ]
                }
            }
        }
    },
    "98556fedcce9e7e4375f994cc171d4803e6c0ee9": {
        "authored_data": "2011 Aug 03 04:16",
        "commit.message": "Fixed bugs in AbstractRandomGenerator nextInt() and nextLong() default\nimplementations.  Prior to the fix for this issue, these methods\ngenerated only positive values.\n\nJIRA: MATH-640\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1153338 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "b42223e931116ad3e8a1b3b3451d6bb14b8af82f",
        "changes": {
            "src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#AbstractRandomGenerator', 'nextInt')": [
                        137
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGenerator', 'nextLong')": [
                        179
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#AbstractRandomGenerator', 'nextInt')": [
                        137
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGenerator', 'nextLong')": [
                        179
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java": {
                "old": {
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', None)": [
                        26,
                        27,
                        29,
                        30,
                        31,
                        32,
                        34,
                        35
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', 'testNextInt2')": [
                        28
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', 'testNextLong2')": [
                        33
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', 'makeGenerator')": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', 'makeGenerator')": [
                        33
                    ]
                }
            }
        }
    },
    "b468defc676cddd3af2953f5e033f449d9cc661d": {
        "authored_data": "2011 Aug 02 19:48",
        "commit.message": "Refactored RandomGenerator tests.\n* Added RandomGeneratorAbstractTest collecting stock tests for RandomGenerator\n  implementations and running RandomDataTest test cases using RandomDataImpls\n  constructed from generators under test.\n* Added BitsStreamGeneratorTest extending RandomGeneratorAbstractTest to test\n  abstract method implementations in BitStreamGenerator.\n* Changed Mersenne and Well generator tests to extend RandomGeneratorAbstractTest.\n* Improved test coverage (discovering MATH-640) of AbstractRandomGeneratorTest\n  by making this class extend RandomGeneratorAbstractTest.\nAll new tests use fixed seeds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1153257 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "d2d9d32f794586fc5f1307f5afb9a0f399725869",
        "changes": {
            "src/test/java/org/apache/commons/math/random/AbstractRandomGeneratorTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        29,
                        34,
                        157
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', None)": [
                        35,
                        36,
                        37,
                        40,
                        42,
                        43,
                        44,
                        45,
                        71,
                        72,
                        73,
                        74,
                        106,
                        107,
                        108,
                        109,
                        126,
                        127,
                        128,
                        129
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', 'testNextInt')": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', 'testNextLong')": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', 'testNextBoolean')": [
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', 'testNextFloat')": [
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        46
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', None)": [
                        25,
                        26,
                        27,
                        29,
                        30,
                        31,
                        32,
                        34,
                        35,
                        38,
                        40
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', 'testNextInt2')": [
                        28
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', 'testNextLong2')": [
                        33
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGeneratorTest', 'makeGenerator')": [
                        41,
                        42,
                        43,
                        44
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/MersenneTwisterTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math.random#MersenneTwisterTest', None)": [
                        27,
                        28,
                        29,
                        39,
                        40,
                        51,
                        52,
                        53,
                        64,
                        65,
                        66,
                        69,
                        70,
                        71,
                        85,
                        86,
                        87,
                        88,
                        89,
                        101,
                        102,
                        103,
                        115,
                        116,
                        117,
                        129,
                        130,
                        131,
                        151,
                        152
                    ],
                    "('org.apache.commons.math.random#MersenneTwisterTest', 'testGaussian')": [
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37
                    ],
                    "('org.apache.commons.math.random#MersenneTwisterTest', 'testDouble')": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50
                    ],
                    "('org.apache.commons.math.random#MersenneTwisterTest', 'testFloat')": [
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63
                    ],
                    "('org.apache.commons.math.random#MersenneTwisterTest', 'testNextIntNeg')": [
                        67,
                        68
                    ],
                    "('org.apache.commons.math.random#MersenneTwisterTest', 'testNextIntN')": [
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84
                    ],
                    "('org.apache.commons.math.random#MersenneTwisterTest', 'testNextInt')": [
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100
                    ],
                    "('org.apache.commons.math.random#MersenneTwisterTest', 'testNextLong')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114
                    ],
                    "('org.apache.commons.math.random#MersenneTwisterTest', 'testNexBoolean')": [
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128
                    ],
                    "('org.apache.commons.math.random#MersenneTwisterTest', 'testNexBytes')": [
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#MersenneTwisterTest', None)": [
                        22,
                        23,
                        24,
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math.random#MersenneTwisterTest', 'makeGenerator')": [
                        25,
                        26
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/RandomDataTest.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextPoissonConsistency')": [
                        249,
                        250,
                        251
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataTest', None)": [
                        68
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/Well1024aTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math.random#Well1024aTest', None)": [
                        26,
                        28,
                        38,
                        39,
                        50,
                        51,
                        52,
                        63,
                        64,
                        65,
                        68,
                        69,
                        70,
                        84,
                        85,
                        86,
                        87,
                        88,
                        100,
                        101,
                        102,
                        114,
                        115,
                        116,
                        128,
                        129,
                        130,
                        150,
                        151
                    ],
                    "('org.apache.commons.math.random#Well1024aTest', 'testGaussian')": [
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36
                    ],
                    "('org.apache.commons.math.random#Well1024aTest', 'testDouble')": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49
                    ],
                    "('org.apache.commons.math.random#Well1024aTest', 'testFloat')": [
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62
                    ],
                    "('org.apache.commons.math.random#Well1024aTest', 'testNextIntNeg')": [
                        66,
                        67
                    ],
                    "('org.apache.commons.math.random#Well1024aTest', 'testNextIntN')": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83
                    ],
                    "('org.apache.commons.math.random#Well1024aTest', 'testNextInt')": [
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99
                    ],
                    "('org.apache.commons.math.random#Well1024aTest', 'testNextLong')": [
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ],
                    "('org.apache.commons.math.random#Well1024aTest', 'testNexBoolean')": [
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127
                    ],
                    "('org.apache.commons.math.random#Well1024aTest', 'testNexBytes')": [
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#Well1024aTest', None)": [
                        23,
                        25,
                        29
                    ],
                    "('org.apache.commons.math.random#Well1024aTest', 'makeGenerator')": [
                        26,
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/Well19937aTest.java": {
                "old": {
                    "('org.apache.commons.math.random#Well19937aTest', None)": [
                        22
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#Well19937aTest', None)": [
                        22,
                        23,
                        24,
                        27
                    ],
                    "('org.apache.commons.math.random#Well19937aTest', 'makeGenerator')": [
                        25,
                        26
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/Well19937cTest.java": {
                "old": {
                    "('org.apache.commons.math.random#Well19937cTest', None)": [
                        22
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#Well19937cTest', None)": [
                        22,
                        23,
                        24,
                        27
                    ],
                    "('org.apache.commons.math.random#Well19937cTest', 'makeGenerator')": [
                        25,
                        26
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/Well44497aTest.java": {
                "old": {
                    "('org.apache.commons.math.random#Well44497aTest', None)": [
                        22,
                        23
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#Well44497aTest', None)": [
                        22,
                        23,
                        24,
                        27,
                        28
                    ],
                    "('org.apache.commons.math.random#Well44497aTest', 'makeGenerator')": [
                        25,
                        26
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/Well44497bTest.java": {
                "old": {
                    "('org.apache.commons.math.random#Well44497bTest', None)": [
                        22,
                        23
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#Well44497bTest', None)": [
                        22,
                        23,
                        24,
                        27,
                        28
                    ],
                    "('org.apache.commons.math.random#Well44497bTest', 'makeGenerator')": [
                        25,
                        26
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/Well512aTest.java": {
                "old": {
                    "('org.apache.commons.math.random#Well512aTest', None)": [
                        22,
                        23
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#Well512aTest', None)": [
                        22,
                        23,
                        24,
                        27
                    ],
                    "('org.apache.commons.math.random#Well512aTest', 'makeGenerator')": [
                        25,
                        26
                    ]
                }
            }
        }
    },
    "d2d9d32f794586fc5f1307f5afb9a0f399725869": {
        "authored_data": "2011 Jul 31 23:47",
        "commit.message": "Use fixed seeds in random data generation tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1152663 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "32bbe0ed8e5dd208500c653e070bfcf6b02a737a",
        "changes": {
            "src/test/java/org/apache/commons/math/random/EmpiricalDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        26,
                        33,
                        41
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', None)": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', None)": [
                        42
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', 'tstGen(double)')": [
                        260
                    ],
                    "('org.apache.commons.math.random#EmpiricalDistributionTest', 'tstDoubleGen(double)')": [
                        271
                    ]
                }
            }
        }
    }
}