{
    "72df12fb2ba453afb57cf185d25c502d4daec6d1": {
        "authored_data": "2016 Oct 12 10:41",
        "commit.message": "MATH-1389: Performance improvement for Array2DRowRealMatrix.getSubMatrix()\n",
        "commit.author.name": "Christoph Dibak",
        "pcid": "f672e826f51824582273fa1f5b6ec37aa5fdb2fd",
        "changes": {
            "src/main/java/org/apache/commons/math4/linear/Array2DRowRealMatrix.java": {
                "new": {
                    "('org.apache.commons.math4.linear#Array2DRowRealMatrix', 'getSubMatrix(int,int,int,int)')": [
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406
                    ],
                    "('org.apache.commons.math4.linear#Array2DRowRealMatrix', None)": [
                        407,
                        408,
                        409,
                        410
                    ]
                }
            }
        }
    },
    "f672e826f51824582273fa1f5b6ec37aa5fdb2fd": {
        "authored_data": "2016 Oct 09 20:23",
        "commit.message": "MATH-1387: adding RetryRunner to RandomUtilsDataGeneratorJDKSecureRandomTest\n",
        "commit.author.name": "Rob Tompkins",
        "pcid": "b9cd3558133ae9f26aec73e0bda3a8f635d137f7",
        "changes": {
            "src/test/java/org/apache/commons/math4/random/RandomUtilsDataGeneratorJDKSecureRandomTest.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        28
                    ]
                }
            }
        }
    },
    "b9cd3558133ae9f26aec73e0bda3a8f635d137f7": {
        "authored_data": "2016 Oct 09 20:09",
        "commit.message": "MATH-1387: adding RetryRunner to RandomUtilsDataGeneratorAbstractTest\n",
        "commit.author.name": "Rob Tompkins",
        "pcid": "47f305786ebdc4376b1c18e109013e7181087e05",
        "changes": {
            "src/test/java/org/apache/commons/math4/random/RandomUtilsDataGeneratorAbstractTest.java": {
                "new": {
                    "(None, None)": [
                        26,
                        35,
                        40
                    ]
                }
            }
        }
    },
    "6348d47ca3f9a64421d092673b35bc834a071e11": {
        "authored_data": "2016 Sep 20 17:50",
        "commit.message": "Use {} for blocks.",
        "commit.author.name": "Gary Gregory",
        "pcid": "221c843b8437e1c87a98a9a015b03b050dd08561",
        "changes": {
            "src/test/java/org/apache/commons/math4/analysis/solvers/BaseSecantSolverAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.solvers#BaseSecantSolverAbstractTest', 'testQuinticZero')": [
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.solvers#BaseSecantSolverAbstractTest', 'testQuinticZero')": [
                        108,
                        109,
                        110
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/dfp/DfpDecTest.java": {
                "old": {
                    "('org.apache.commons.math4.dfp#DfpDecTest', 'test(Dfp,Dfp,int,String)')": [
                        64
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.dfp#DfpDecTest', 'test(Dfp,Dfp,int,String)')": [
                        64,
                        66
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/dfp/DfpMathTest.java": {
                "old": {
                    "('org.apache.commons.math4.dfp#DfpMathTest', 'test(Dfp,Dfp,int,String)')": [
                        74
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.dfp#DfpMathTest', 'test(Dfp,Dfp,int,String)')": [
                        74,
                        76
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/dfp/DfpTest.java": {
                "old": {
                    "('org.apache.commons.math4.dfp#DfpTest', 'cmptst(Dfp,Dfp,String,boolean,double)')": [
                        378,
                        379,
                        381,
                        382,
                        383,
                        385,
                        386,
                        387,
                        389,
                        390,
                        391
                    ],
                    "('org.apache.commons.math4.dfp#DfpTest', 'testCompare')": [
                        415,
                        421,
                        452,
                        503,
                        509,
                        540,
                        574,
                        594,
                        600,
                        630,
                        664,
                        685,
                        691,
                        721,
                        755
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.dfp#DfpTest', 'cmptst(Dfp,Dfp,String,boolean,double)')": [
                        378,
                        379,
                        381,
                        382,
                        383,
                        384,
                        385,
                        387,
                        388,
                        389,
                        390,
                        391,
                        393,
                        394,
                        395,
                        396,
                        397
                    ],
                    "('org.apache.commons.math4.dfp#DfpTest', None)": [
                        399,
                        400
                    ],
                    "('org.apache.commons.math4.dfp#DfpTest', 'testCompare')": [
                        423,
                        425,
                        430,
                        432,
                        462,
                        464,
                        514,
                        516,
                        521,
                        523,
                        553,
                        555,
                        588,
                        590,
                        609,
                        611,
                        616,
                        618,
                        647,
                        649,
                        682,
                        684,
                        704,
                        706,
                        711,
                        713,
                        742,
                        744,
                        777,
                        779
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/distribution/IntegerDistributionAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math4.distribution#IntegerDistributionAbstractTest', 'testConsistencyAtSupportBounds')": [
                        253
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.distribution#IntegerDistributionAbstractTest', 'testConsistencyAtSupportBounds')": [
                        253,
                        256
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/BinaryMutationTest.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#BinaryMutationTest', 'testMutate')": [
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#BinaryMutationTest', 'testMutate')": [
                        39,
                        41
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/GeneticAlgorithmTestBinary.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#GeneticAlgorithmTestBinary', None)": [
                        122
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#GeneticAlgorithmTestBinary', None)": [
                        122,
                        124
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/TestProblem1.java": {
                "old": {
                    "('org.apache.commons.math4.ode#TestProblem1', 'doComputeDerivatives(double,double,double)')": [
                        59,
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#TestProblem1', 'doComputeDerivatives(double,double,double)')": [
                        59,
                        60
                    ],
                    "('org.apache.commons.math4.ode#TestProblem1', None)": [
                        61
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/TestProblem2.java": {
                "old": {
                    "('org.apache.commons.math4.ode#TestProblem2', 'doComputeDerivatives(double,double,double)')": [
                        60,
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#TestProblem2', 'doComputeDerivatives(double,double,double)')": [
                        60,
                        61
                    ],
                    "('org.apache.commons.math4.ode#TestProblem2', None)": [
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#BOBYQAOptimizerTest', 'boundaries(int,double,double)')": [
                        359,
                        361
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#BOBYQAOptimizerTest', None)": [
                        371,
                        391,
                        411,
                        432,
                        453,
                        475,
                        496,
                        515,
                        540,
                        594,
                        612,
                        619,
                        629,
                        633,
                        635,
                        639,
                        641
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#BOBYQAOptimizerTest', 'boundaries(int,double,double)')": [
                        359,
                        361,
                        362,
                        364
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#BOBYQAOptimizerTest', None)": [
                        373,
                        375,
                        394,
                        396,
                        415,
                        417,
                        437,
                        439,
                        459,
                        461,
                        482,
                        484,
                        504,
                        506,
                        524,
                        527,
                        550,
                        553,
                        605,
                        607,
                        624,
                        626,
                        632,
                        634,
                        643,
                        645,
                        648,
                        650,
                        651,
                        653,
                        656,
                        658,
                        659
                    ],
                    "(None, None)": [
                        661
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', 'boundaries(int,double,double)')": [
                        527,
                        529
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', None)": [
                        539,
                        559,
                        579,
                        600,
                        621,
                        643,
                        664,
                        683,
                        704,
                        758,
                        776,
                        783,
                        793,
                        797,
                        799,
                        803,
                        805
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', 'boundaries(int,double,double)')": [
                        527,
                        529,
                        530,
                        532
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', None)": [
                        541,
                        543,
                        562,
                        564,
                        583,
                        585,
                        605,
                        607,
                        627,
                        629,
                        650,
                        652,
                        672,
                        674,
                        692,
                        695,
                        714,
                        717,
                        769,
                        771,
                        788,
                        790,
                        796,
                        798,
                        807,
                        809,
                        812,
                        814,
                        815,
                        817,
                        820,
                        822,
                        823
                    ],
                    "(None, None)": [
                        825
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/stat/descriptive/StorelessUnivariateStatisticAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math4.stat.descriptive#StorelessUnivariateStatisticAbstractTest', 'testSerialization')": [
                        92
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.descriptive#StorelessUnivariateStatisticAbstractTest', 'testSerialization')": [
                        92,
                        94
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/stat/inference/KolmogorovSmirnovTestTest.java": {
                "old": {
                    "('org.apache.commons.math4.stat.inference#KolmogorovSmirnovTestTest', 'checkFixTies(double,double)')": [
                        658
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.inference#KolmogorovSmirnovTestTest', 'checkFixTies(double,double)')": [
                        658
                    ],
                    "('org.apache.commons.math4.stat.inference#KolmogorovSmirnovTestTest', None)": [
                        661
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/FastMathTest.java": {
                "old": {
                    "('org.apache.commons.math4.util#FastMathTest', 'testAtan2Accuracy')": [
                        839,
                        841
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.util#FastMathTest', 'testAtan2Accuracy')": [
                        839,
                        841,
                        843
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/OpenIntToDoubleHashMapTest.java": {
                "old": {
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'generate')": [
                        65
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'assertPutAndGet(OpenIntToDoubleHashMap,int,Set)')": [
                        105
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'testGetAbsent')": [
                        138
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'testRemove2')": [
                        177
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'generateAbsent')": [
                        212
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'testCopy')": [
                        224
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'generate')": [
                        65,
                        67
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'assertPutAndGet(OpenIntToDoubleHashMap,int,Set)')": [
                        106,
                        108
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'testGetAbsent')": [
                        140
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', None)": [
                        142,
                        231
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'testRemove2')": [
                        180,
                        182
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'generateAbsent')": [
                        216,
                        218
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'testCopy')": [
                        229
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/OpenIntToFieldTest.java": {
                "old": {
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'generate')": [
                        68
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'assertPutAndGet(OpenIntToFieldHashMap,int,Set)')": [
                        113
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testGetAbsent')": [
                        146
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testRemove2')": [
                        185
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'generateAbsent')": [
                        220
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testCopy')": [
                        232
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'generate')": [
                        68,
                        70
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'assertPutAndGet(OpenIntToFieldHashMap,int,Set)')": [
                        114,
                        116
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testGetAbsent')": [
                        148
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', None)": [
                        150,
                        239
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testRemove2')": [
                        188,
                        190
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'generateAbsent')": [
                        224,
                        226
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testCopy')": [
                        237
                    ]
                }
            }
        }
    },
    "221c843b8437e1c87a98a9a015b03b050dd08561": {
        "authored_data": "2016 Sep 20 17:38",
        "commit.message": "Add missing '@Override' annotations.",
        "commit.author.name": "Gary Gregory",
        "pcid": "762eb53f5cee901be190cd324dfde01977aeea60",
        "changes": {
            "src/main/java/org/apache/commons/math4/analysis/solvers/FieldBracketingNthOrderBrentSolver.java": {
                "new": {
                    "('org.apache.commons.math4.analysis.solvers#FieldBracketingNthOrderBrentSolver', None)": [
                        109,
                        122,
                        131,
                        140,
                        149,
                        170,
                        194
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/ContinuousOutputFieldModel.java": {
                "new": {
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModel', None)": [
                        196
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/ContinuousOutputModel.java": {
                "old": {
                    "('org.apache.commons.math4.ode#ContinuousOutputModel', 'handleStep(StepInterpolator,boolean)')": [
                        189
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#ContinuousOutputModel', None)": [
                        189
                    ],
                    "('org.apache.commons.math4.ode#ContinuousOutputModel', 'handleStep(StepInterpolator,boolean)')": [
                        190
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/FirstOrderConverter.java": {
                "old": {
                    "('org.apache.commons.math4.ode#FirstOrderConverter', 'getDimension')": [
                        90
                    ],
                    "('org.apache.commons.math4.ode#FirstOrderConverter', 'computeDerivatives(double,double,double)')": [
                        99
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#FirstOrderConverter', None)": [
                        90,
                        100
                    ],
                    "('org.apache.commons.math4.ode#FirstOrderConverter', 'getDimension')": [
                        91
                    ],
                    "('org.apache.commons.math4.ode#FirstOrderConverter', 'computeDerivatives(double,double,double)')": [
                        101
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/AdamsFieldStepInterpolator.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldStepInterpolator', None)": [
                        118
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/AdamsMoultonFieldIntegrator.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsMoultonFieldIntegrator', None)": [
                        398
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/AdamsMoultonIntegrator.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsMoultonIntegrator', None)": [
                        403
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/sampling/AbstractStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.sampling#AbstractStepInterpolator', 'getPreviousTime')": [
                        359
                    ],
                    "('org.apache.commons.math4.ode.sampling#AbstractStepInterpolator', 'getCurrentTime')": [
                        368
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.sampling#AbstractStepInterpolator', None)": [
                        359,
                        369
                    ],
                    "('org.apache.commons.math4.ode.sampling#AbstractStepInterpolator', 'getPreviousTime')": [
                        360
                    ],
                    "('org.apache.commons.math4.ode.sampling#AbstractStepInterpolator', 'getCurrentTime')": [
                        370
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/sampling/DummyStepHandler.java": {
                "new": {
                    "('org.apache.commons.math4.ode.sampling#DummyStepHandler', None)": [
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/sampling/FieldStepNormalizer.java": {
                "new": {
                    "('org.apache.commons.math4.ode.sampling#FieldStepNormalizer', None)": [
                        196
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/sampling/StepNormalizer.java": {
                "new": {
                    "('org.apache.commons.math4.ode.sampling#StepNormalizer', None)": [
                        203
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/PerfTestUtils.java": {
                "new": {
                    "('org.apache.commons.math4#PerfTestUtils', None)": [
                        302
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/integration/gauss/BaseRuleFactoryTest.java": {
                "new": {
                    "('org.apache.commons.math4.analysis.integration.gauss#RuleBuilder', None)": [
                        73
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/integration/gauss/HermiteTest.java": {
                "new": {
                    "('org.apache.commons.math4.analysis.integration.gauss#HermiteTest', 'testNormalDistribution')": [
                        49
                    ],
                    "('org.apache.commons.math4.analysis.integration.gauss#HermiteTest', 'testNormalMean')": [
                        77
                    ],
                    "('org.apache.commons.math4.analysis.integration.gauss#HermiteTest', 'testNormalVariance')": [
                        104
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/solvers/BracketingNthOrderBrentSolverTest.java": {
                "new": {
                    "('org.apache.commons.math4.analysis.solvers#BracketingNthOrderBrentSolverTest', 'testIssue716')": [
                        92
                    ],
                    "('org.apache.commons.math4.analysis.solvers#BracketingNthOrderBrentSolverTest', None)": [
                        208,
                        213
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/solvers/BrentSolverTest.java": {
                "new": {
                    "('org.apache.commons.math4.analysis.solvers#BrentSolverTest', 'testMath832')": [
                        259
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/solvers/FieldBracketingNthOrderBrentSolverTest.java": {
                "new": {
                    "('org.apache.commons.math4.analysis.solvers#FieldBracketingNthOrderBrentSolverTest', 'testConvergenceOnFunctionAccuracy')": [
                        57
                    ],
                    "('org.apache.commons.math4.analysis.solvers#FieldBracketingNthOrderBrentSolverTest', 'testNeta')": [
                        90,
                        97,
                        104,
                        111,
                        118,
                        125
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/solvers/RegulaFalsiSolverTest.java": {
                "new": {
                    "('org.apache.commons.math4.analysis.solvers#RegulaFalsiSolverTest', 'testIssue631')": [
                        52
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/solvers/UnivariateSolverUtilsTest.java": {
                "new": {
                    "('org.apache.commons.math4.analysis.solvers#UnivariateSolverUtilsTest', 'testBracketLinear')": [
                        124
                    ],
                    "('org.apache.commons.math4.analysis.solvers#UnivariateSolverUtilsTest', 'testBracketExponential')": [
                        134
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/distribution/AbstractIntegerDistributionTest.java": {
                "new": {
                    "('org.apache.commons.math4.distribution#AbstractIntegerDistributionTest', None)": [
                        86,
                        95,
                        106,
                        111,
                        116,
                        121,
                        126
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/distribution/AbstractRealDistributionTest.java": {
                "new": {
                    "('org.apache.commons.math4.distribution#AbstractRealDistributionTest', 'testDiscontinuous')": [
                        161,
                        175
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/distribution/RealDistributionAbstractTest.java": {
                "new": {
                    "('org.apache.commons.math4.distribution#RealDistributionAbstractTest', 'testDensityIntegrals')": [
                        359
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java": {
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testGetIterations')": [
                        134
                    ],
                    "('org.apache.commons.math4.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', 'testPointCopy')": [
                        554
                    ],
                    "('org.apache.commons.math4.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', None)": [
                        585,
                        594
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/CircleProblem.java": {
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#CircleProblem', 'getModelFunction')": [
                        106
                    ],
                    "('org.apache.commons.math4.fitting.leastsquares#CircleProblem', 'getModelFunctionJacobian')": [
                        152
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/CircleVectorial.java": {
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#CircleVectorial', 'getModelFunction')": [
                        53
                    ],
                    "('org.apache.commons.math4.fitting.leastsquares#CircleVectorial', 'getModelFunctionJacobian')": [
                        69
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/EvaluationRmsCheckerTest.java": {
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#EvaluationRmsCheckerTest', 'mockEvaluation(double)')": [
                        57,
                        62,
                        67,
                        72,
                        77,
                        82,
                        87,
                        92,
                        97
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/EvaluationTest.java": {
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#EvaluationTest', 'testComputeResiduals')": [
                        76
                    ],
                    "('org.apache.commons.math4.fitting.leastsquares#EvaluationTest', 'testComputeCovariance')": [
                        101
                    ],
                    "('org.apache.commons.math4.fitting.leastsquares#EvaluationTest', 'testComputeValueAndJacobian')": [
                        138
                    ],
                    "('org.apache.commons.math4.fitting.leastsquares#EvaluationTest', 'testLazyEvaluationPrecondition')": [
                        267,
                        282,
                        286,
                        290
                    ],
                    "('org.apache.commons.math4.fitting.leastsquares#EvaluationTest', 'dummyModel')": [
                        324
                    ],
                    "('org.apache.commons.math4.fitting.leastsquares#EvaluationTest', 'dummyJacobian')": [
                        334
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java": {
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#LevenbergMarquardtOptimizerTest', 'testParameterValidator')": [
                        324
                    ],
                    "('org.apache.commons.math4.fitting.leastsquares#LevenbergMarquardtOptimizerTest', 'testEvaluationCount')": [
                        344
                    ],
                    "('org.apache.commons.math4.fitting.leastsquares#LevenbergMarquardtOptimizerTest', None)": [
                        376,
                        392
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/MinpackTest.java": {
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#MinpackTest', None)": [
                        598,
                        607
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/StatisticalReferenceDataset.java": {
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#StatisticalReferenceDataset', None)": [
                        148,
                        162
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/StraightLineProblem.java": {
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#StraightLineProblem', 'getModelFunction')": [
                        99
                    ],
                    "('org.apache.commons.math4.fitting.leastsquares#StraightLineProblem', 'getModelFunctionJacobian')": [
                        116
                    ],
                    "('org.apache.commons.math4.fitting.leastsquares#StraightLineProblem', None)": [
                        164
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/ChromosomeTest.java": {
                "new": {
                    "('org.apache.commons.math4.genetics#ChromosomeTest', 'testCompareTo')": [
                        34,
                        40,
                        46
                    ],
                    "('org.apache.commons.math4.genetics#ChromosomeTest', 'testFindSameChromosome')": [
                        73,
                        79,
                        85,
                        91,
                        97,
                        108
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/CycleCrossoverTest.java": {
                "new": {
                    "('org.apache.commons.math4.genetics#CycleCrossoverTest', 'testCrossoverInvalidFixedLengthChromosomeFirst')": [
                        130
                    ],
                    "('org.apache.commons.math4.genetics#CycleCrossoverTest', 'testCrossoverInvalidFixedLengthChromosomeSecond')": [
                        146
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/DummyBinaryChromosome.java": {
                "new": {
                    "('org.apache.commons.math4.genetics#DummyBinaryChromosome', None)": [
                        42
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/DummyListChromosome.java": {
                "new": {
                    "('org.apache.commons.math4.genetics#DummyListChromosome', None)": [
                        37
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/DummyRandomKey.java": {
                "new": {
                    "('org.apache.commons.math4.genetics#DummyRandomKey', None)": [
                        42
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/ElitisticListPopulationTest.java": {
                "new": {
                    "('org.apache.commons.math4.genetics#ElitisticListPopulationTest', None)": [
                        103
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/FixedElapsedTimeTest.java": {
                "new": {
                    "('org.apache.commons.math4.genetics#FixedElapsedTimeTest', 'testIsSatisfied')": [
                        34,
                        38,
                        43,
                        48,
                        53,
                        58
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/FixedGenerationCountTest.java": {
                "new": {
                    "('org.apache.commons.math4.genetics#FixedGenerationCountTest', 'testIsSatisfied')": [
                        36,
                        40,
                        45,
                        50,
                        55,
                        60
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/GeneticAlgorithmTestBinary.java": {
                "new": {
                    "('org.apache.commons.math4.genetics#GeneticAlgorithmTestBinary', None)": [
                        118
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/GeneticAlgorithmTestPermutations.java": {
                "new": {
                    "('org.apache.commons.math4.genetics#GeneticAlgorithmTestPermutations', None)": [
                        123
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/ListPopulationTest.java": {
                "new": {
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testGetFittestChromosome')": [
                        38,
                        44,
                        50,
                        62
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testChromosomes')": [
                        80
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testSetPopulationLimit')": [
                        99
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testConstructorPopulationLimitNotPositive')": [
                        112
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testChromosomeListConstructorPopulationLimitNotPositive')": [
                        125
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testConstructorListOfChromosomesBiggerThanPopulationSize')": [
                        140
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testAddTooManyChromosomes')": [
                        156
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testAddTooManyChromosomesSingleCall')": [
                        170
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testIterator')": [
                        190
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testSetPopulationLimitTooSmall')": [
                        214
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/NPointCrossoverTest.java": {
                "new": {
                    "('org.apache.commons.math4.genetics#NPointCrossoverTest', 'testCrossoverInvalidFixedLengthChromosomeFirst')": [
                        63
                    ],
                    "('org.apache.commons.math4.genetics#NPointCrossoverTest', 'testCrossoverInvalidFixedLengthChromosomeSecond')": [
                        79
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/OrderedCrossoverTest.java": {
                "new": {
                    "('org.apache.commons.math4.genetics#OrderedCrossoverTest', 'testCrossoverInvalidFixedLengthChromosomeFirst')": [
                        83
                    ],
                    "('org.apache.commons.math4.genetics#OrderedCrossoverTest', 'testCrossoverInvalidFixedLengthChromosomeSecond')": [
                        99
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/TournamentSelectionTest.java": {
                "new": {
                    "('org.apache.commons.math4.genetics#TournamentSelectionTest', None)": [
                        55
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/UniformCrossoverTest.java": {
                "new": {
                    "('org.apache.commons.math4.genetics#UniformCrossoverTest', 'testCrossoverInvalidFixedLengthChromosomeFirst')": [
                        131
                    ],
                    "('org.apache.commons.math4.genetics#UniformCrossoverTest', 'testCrossoverInvalidFixedLengthChromosomeSecond')": [
                        148
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSetTest.java": {
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#PolyhedronsSetTest', 'testIsometry')": [
                        177,
                        182,
                        195
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/twod/PolygonsSetTest.java": {
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSetTest', None)": [
                        1215,
                        1219,
                        1223
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/ArrayFieldVectorTest.java": {
                "new": {
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', None)": [
                        93,
                        102,
                        107,
                        116,
                        125,
                        130,
                        135,
                        140,
                        145,
                        154,
                        159,
                        164,
                        169,
                        174,
                        179,
                        188,
                        201,
                        218,
                        227,
                        236,
                        241,
                        246,
                        251,
                        260,
                        265,
                        270,
                        279,
                        284
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInDefaultOrderPreservingVisitor1')": [
                        712,
                        720,
                        729
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInDefaultOrderPreservingVisitor2')": [
                        744,
                        749,
                        754
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInDefaultOrderPreservingVisitor3')": [
                        807,
                        815,
                        824
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInOptimizedOrderPreservingVisitor1')": [
                        845,
                        852,
                        861
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInOptimizedOrderPreservingVisitor2')": [
                        880,
                        885,
                        890
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInOptimizedOrderPreservingVisitor3')": [
                        942,
                        949,
                        958
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInDefaultOrderChangingVisitor1')": [
                        984,
                        993,
                        1002
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInDefaultOrderChangingVisitor2')": [
                        1020,
                        1025,
                        1030
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInDefaultOrderChangingVisitor3')": [
                        1083,
                        1092,
                        1101
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInOptimizedOrderChangingVisitor1')": [
                        1125,
                        1133,
                        1142
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInOptimizedOrderChangingVisitor2')": [
                        1164,
                        1169,
                        1174
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInOptimizedOrderChangingVisitor3')": [
                        1226,
                        1234,
                        1243
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/ConjugateGradientTest.java": {
                "new": {
                    "('org.apache.commons.math4.linear#ConjugateGradientTest', 'testUnpreconditionedResidual')": [
                        182,
                        187,
                        192,
                        202
                    ],
                    "('org.apache.commons.math4.linear#ConjugateGradientTest', 'testPreconditionedResidual')": [
                        357,
                        362,
                        367,
                        377
                    ],
                    "('org.apache.commons.math4.linear#ConjugateGradientTest', 'testEventManagement')": [
                        490,
                        496,
                        504,
                        512
                    ],
                    "('org.apache.commons.math4.linear#ConjugateGradientTest', 'testUnpreconditionedNormOfResidual')": [
                        553,
                        558,
                        563,
                        568
                    ],
                    "('org.apache.commons.math4.linear#ConjugateGradientTest', 'testPreconditionedNormOfResidual')": [
                        604,
                        609,
                        614,
                        619
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/SparseFieldVectorTest.java": {
                "new": {
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInDefaultOrderPreservingVisitor1')": [
                        269,
                        277,
                        286
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInDefaultOrderPreservingVisitor2')": [
                        301,
                        306,
                        311
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInDefaultOrderPreservingVisitor3')": [
                        364,
                        372,
                        381
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInOptimizedOrderPreservingVisitor1')": [
                        402,
                        409,
                        418
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInOptimizedOrderPreservingVisitor2')": [
                        437,
                        442,
                        447
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInOptimizedOrderPreservingVisitor3')": [
                        499,
                        506,
                        515
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInDefaultOrderChangingVisitor1')": [
                        541,
                        550,
                        559
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInDefaultOrderChangingVisitor2')": [
                        577,
                        582,
                        587
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInDefaultOrderChangingVisitor3')": [
                        640,
                        649,
                        658
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInOptimizedOrderChangingVisitor1')": [
                        682,
                        690,
                        699
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInOptimizedOrderChangingVisitor2')": [
                        721,
                        726,
                        731
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInOptimizedOrderChangingVisitor3')": [
                        783,
                        791,
                        800
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/SymmLQTest.java": {
                "new": {
                    "('org.apache.commons.math4.linear#SymmLQTest', 'testEventManagement')": [
                        506,
                        511,
                        519,
                        527
                    ],
                    "('org.apache.commons.math4.linear#SymmLQTest', 'testUnpreconditionedNormOfResidual')": [
                        632,
                        637,
                        642,
                        647
                    ],
                    "('org.apache.commons.math4.linear#SymmLQTest', 'testPreconditionedNormOfResidual')": [
                        684,
                        689,
                        694,
                        699
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/neuralnet/OffsetFeatureInitializer.java": {
                "new": {
                    "('org.apache.commons.math4.ml.neuralnet#OffsetFeatureInitializer', None)": [
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/neuralnet/sofm/TravellingSalesmanSolver.java": {
                "new": {
                    "('org.apache.commons.math4.ml.neuralnet.sofm#TravellingSalesmanSolver', 'createRandomIterator(long)')": [
                        186,
                        191,
                        197
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.sofm#City', None)": [
                        411,
                        422
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/ContinuousOutputFieldModelTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModelTest', 'doTestModelsMerging(Field)')": [
                        106,
                        113,
                        117
                    ],
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModelTest', 'buildInterpolator(Field,double,double,double)')": [
                        210,
                        214,
                        217
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/FieldExpandableODETest.java": {
                "new": {
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', None)": [
                        301,
                        306,
                        316,
                        325,
                        338
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/FirstOrderConverterTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode#FirstOrderConverterTest', None)": [
                        89,
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#FirstOrderConverterTest', None)": [
                        89,
                        90,
                        94,
                        95
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/JacobianMatricesTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode#JacobianMatricesTest', None)": [
                        332,
                        337,
                        344,
                        355,
                        389,
                        395,
                        403,
                        410,
                        448,
                        453,
                        459,
                        468,
                        548,
                        553,
                        559,
                        573
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/TestFieldProblem4.java": {
                "new": {
                    "('org.apache.commons.math4.ode#TestFieldProblem4', None)": [
                        116,
                        120,
                        125,
                        132,
                        147,
                        151,
                        156,
                        161
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/TestFieldProblemAbstract.java": {
                "new": {
                    "('org.apache.commons.math4.ode#TestFieldProblemAbstract', None)": [
                        108,
                        164,
                        169
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/TestFieldProblemHandler.java": {
                "new": {
                    "('org.apache.commons.math4.ode#TestFieldProblemHandler', None)": [
                        67,
                        75
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/TestProblem4.java": {
                "new": {
                    "('org.apache.commons.math4.ode#TestProblem4', None)": [
                        102,
                        106,
                        111,
                        118,
                        131,
                        135,
                        140,
                        145
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/TestProblemAbstract.java": {
                "old": {
                    "('org.apache.commons.math4.ode#TestProblemAbstract', 'getDimension')": [
                        88
                    ],
                    "('org.apache.commons.math4.ode#TestProblemAbstract', 'computeDerivatives(double,double,double)')": [
                        147
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#TestProblemAbstract', None)": [
                        88,
                        148
                    ],
                    "('org.apache.commons.math4.ode#TestProblemAbstract', 'getDimension')": [
                        89
                    ],
                    "('org.apache.commons.math4.ode#TestProblemAbstract', 'computeDerivatives(double,double,double)')": [
                        149
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/TestProblemHandler.java": {
                "old": {
                    "('org.apache.commons.math4.ode#TestProblemHandler', 'init(double,double,double)')": [
                        66
                    ],
                    "('org.apache.commons.math4.ode#TestProblemHandler', 'handleStep(StepInterpolator,boolean)')": [
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#TestProblemHandler', None)": [
                        66,
                        74
                    ],
                    "('org.apache.commons.math4.ode#TestProblemHandler', 'init(double,double,double)')": [
                        67
                    ],
                    "('org.apache.commons.math4.ode#TestProblemHandler', 'handleStep(StepInterpolator,boolean)')": [
                        75
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/events/CloseEventsTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.events#CloseEventsTest', None)": [
                        96,
                        100,
                        105,
                        111,
                        120,
                        125
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/events/EventFilterTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.events#EventFilterTest', None)": [
                        223,
                        228,
                        251,
                        256,
                        261,
                        272
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/events/EventStateTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.events#EventStateTest', 'testIssue695')": [
                        92,
                        93,
                        94,
                        95
                    ],
                    "('org.apache.commons.math4.ode.events#EventStateTest', 'testIssue965')": [
                        157,
                        158,
                        159,
                        160,
                        169,
                        170,
                        171,
                        172
                    ],
                    "('org.apache.commons.math4.ode.events#EventStateTest', 'testEventsCloserThanThreshold')": [
                        225,
                        226,
                        227,
                        228
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.events#EventStateTest', 'closeEvents')": [
                        53,
                        57
                    ],
                    "('org.apache.commons.math4.ode.events#EventStateTest', 'testIssue695')": [
                        94,
                        95,
                        96,
                        97,
                        98,
                        99
                    ],
                    "('org.apache.commons.math4.ode.events#EventStateTest', None)": [
                        127,
                        131,
                        142,
                        149,
                        214,
                        218,
                        223,
                        228,
                        275,
                        279,
                        283,
                        288
                    ],
                    "('org.apache.commons.math4.ode.events#EventStateTest', 'testIssue965')": [
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184
                    ],
                    "('org.apache.commons.math4.ode.events#EventStateTest', 'testEventsCloserThanThreshold')": [
                        241,
                        242,
                        243,
                        244,
                        245,
                        246
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/events/OverlappingEventsTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.events#OverlappingEventsTest', None)": [
                        122,
                        128,
                        152,
                        157,
                        164,
                        170
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/events/ReappearingEventTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.events#ReappearingEventTest', None)": [
                        69,
                        74,
                        83,
                        87,
                        92,
                        97
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/AbstractEmbeddedRungeKuttaFieldIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestEventsErrors(Field)')": [
                        284,
                        286,
                        289,
                        297
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestForwardBackwardExceptions(Field)')": [
                        136,
                        141,
                        145
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestEventsErrors(Field)')": [
                        287,
                        288,
                        290,
                        291,
                        294,
                        295,
                        303,
                        304
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestEventsNoConvergence(Field)')": [
                        330,
                        333,
                        337,
                        343
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', None)": [
                        451,
                        455,
                        544,
                        549,
                        569
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/AbstractRungeKuttaFieldIntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestMissedEndEvent(Field,double,double)')": [
                        131,
                        136,
                        140,
                        170,
                        174,
                        179,
                        184
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', None)": [
                        395,
                        399,
                        610,
                        615,
                        635
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestStepSize(Field,double)')": [
                        426,
                        434,
                        439,
                        442,
                        448
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestTooLargeFirstStep(Field)')": [
                        489,
                        494,
                        498
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/AdamsBashforthFieldIntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsBashforthFieldIntegratorTest', None)": [
                        31,
                        39,
                        47,
                        53,
                        62,
                        68,
                        74,
                        80
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/AdamsBashforthIntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsBashforthIntegratorTest', None)": [
                        201,
                        231,
                        235,
                        239,
                        248,
                        257,
                        262,
                        267,
                        272,
                        280,
                        285,
                        290,
                        295
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/AdamsFieldIntegratorAbstractTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldIntegratorAbstractTest', None)": [
                        201,
                        241,
                        246,
                        251,
                        256
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/AdamsMoultonFieldIntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsMoultonFieldIntegratorTest', None)": [
                        31,
                        39,
                        47,
                        53,
                        62,
                        68,
                        74,
                        80
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/AdamsMoultonIntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsMoultonIntegratorTest', None)": [
                        189,
                        219,
                        223,
                        227,
                        236,
                        245,
                        250,
                        255,
                        260,
                        268,
                        273,
                        278,
                        283
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/ClassicalRungKuttaFieldStepInterpolatorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungKuttaFieldStepInterpolatorTest', None)": [
                        30,
                        44,
                        50,
                        56,
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/ClassicalRungeKuttaFieldIntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungeKuttaFieldIntegratorTest', None)": [
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testMissedEndEvent')": [
                        55,
                        59,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        92
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testStepSize')": [
                        298,
                        305,
                        309,
                        312
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testTooLargeFirstStep')": [
                        326,
                        330
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testMissedEndEvent')": [
                        55,
                        56,
                        60,
                        61,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        97,
                        98
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', None)": [
                        272,
                        276
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testStepSize')": [
                        306,
                        307,
                        314,
                        315,
                        319,
                        320,
                        323,
                        324
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testTooLargeFirstStep')": [
                        338,
                        339,
                        343,
                        344
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/DormandPrince54FieldIntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54FieldIntegratorTest', None)": [
                        27,
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/DormandPrince54FieldStepInterpolatorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54FieldStepInterpolatorTest', None)": [
                        30,
                        44,
                        50,
                        56,
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/DormandPrince54IntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54IntegratorTest', None)": [
                        138,
                        142,
                        286,
                        291,
                        328,
                        334
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/DormandPrince54StepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'checkClone')": [
                        124,
                        145
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'checkClone')": [
                        124,
                        125,
                        146,
                        147
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/DormandPrince853FieldIntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853FieldIntegratorTest', None)": [
                        27,
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/DormandPrince853FieldStepInterpolatorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853FieldStepInterpolatorTest', None)": [
                        30,
                        44,
                        50,
                        56,
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/DormandPrince853IntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853IntegratorTest', 'testMissedEndEvent')": [
                        52,
                        56,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        92
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853IntegratorTest', 'testTooLargeFirstStep')": [
                        203,
                        207
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853IntegratorTest', 'testEventsScheduling')": [
                        343,
                        347
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853IntegratorTest', None)": [
                        380,
                        384,
                        388,
                        395,
                        399
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853IntegratorTest', 'testMissedEndEvent')": [
                        52,
                        53,
                        57,
                        58,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        97,
                        98
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853IntegratorTest', 'testTooLargeFirstStep')": [
                        209,
                        210,
                        214,
                        215
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853IntegratorTest', 'testEventsScheduling')": [
                        351,
                        352,
                        356,
                        357
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853IntegratorTest', None)": [
                        390,
                        391,
                        395,
                        396,
                        400,
                        401,
                        408,
                        409,
                        413,
                        414,
                        424,
                        429,
                        466,
                        472
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/DormandPrince853StepInterpolatorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'checklone')": [
                        124,
                        146
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/EmbeddedRungeKuttaFieldIntegratorAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestEventsErrors(Field)')": [
                        284,
                        286,
                        289,
                        297
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestForwardBackwardExceptions(Field)')": [
                        136,
                        141,
                        145
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestEventsErrors(Field)')": [
                        287,
                        288,
                        290,
                        291,
                        294,
                        295,
                        303,
                        304
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestEventsNoConvergence(Field)')": [
                        330,
                        333,
                        337,
                        343
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', None)": [
                        451,
                        455,
                        544,
                        549,
                        569
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/EulerFieldIntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#EulerFieldIntegratorTest', None)": [
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/EulerFieldStepInterpolatorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#EulerFieldStepInterpolatorTest', None)": [
                        30,
                        43,
                        49,
                        55,
                        61
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/EulerIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#EulerIntegratorTest', 'testStepSize')": [
                        185,
                        188
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#EulerIntegratorTest', 'testStepSize')": [
                        174,
                        182,
                        187,
                        188,
                        191,
                        192
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/GillFieldIntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#GillFieldIntegratorTest', None)": [
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/GillFieldStepInterpolatorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#GillFieldStepInterpolatorTest', None)": [
                        30,
                        44,
                        50,
                        56,
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/GillIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#GillIntegratorTest', 'testStepSize')": [
                        228,
                        235,
                        239,
                        242
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#GillIntegratorTest', None)": [
                        196,
                        200
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#GillIntegratorTest', 'testStepSize')": [
                        230,
                        231,
                        238,
                        239,
                        243,
                        244,
                        247,
                        248
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/GraggBulirschStoerIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testTooLargeFirstStep')": [
                        286,
                        290
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIssue596')": [
                        323,
                        324,
                        325,
                        326,
                        340,
                        344
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testTooLargeFirstStep')": [
                        286,
                        287,
                        291,
                        292
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIssue596')": [
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        344,
                        345,
                        349,
                        350
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#GraggBulirschStoerIntegratorTest', None)": [
                        361,
                        366,
                        403,
                        409
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'checklone')": [
                        126,
                        148
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/HighamHall54FieldIntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54FieldIntegratorTest', None)": [
                        27,
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/HighamHall54FieldStepInterpolatorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54FieldStepInterpolatorTest', None)": [
                        30,
                        44,
                        50,
                        56,
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/HighamHall54IntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54IntegratorTest', 'testWrongDerivative')": [
                        56
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54IntegratorTest', 'testEventsNoConvergence')": [
                        260,
                        261,
                        262,
                        265,
                        270
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54IntegratorTest', 'testWrongDerivative')": [
                        49,
                        57,
                        58
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54IntegratorTest', 'testEventsErrors')": [
                        217,
                        220,
                        224,
                        233
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54IntegratorTest', 'testEventsNoConvergence')": [
                        266,
                        267,
                        268,
                        269,
                        270,
                        273,
                        274,
                        279,
                        280
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/HighamHall54StepInterpolatorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54StepInterpolatorTest', 'checkClone')": [
                        124,
                        146
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/LutherFieldIntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#LutherFieldIntegratorTest', None)": [
                        31
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/LutherFieldStepInterpolatorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#LutherFieldStepInterpolatorTest', None)": [
                        30,
                        44,
                        50,
                        56,
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/LutherIntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#LutherIntegratorTest', 'testMissedEndEvent')": [
                        55,
                        60,
                        84,
                        88,
                        92,
                        97
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#LutherIntegratorTest', None)": [
                        272,
                        276
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#LutherIntegratorTest', 'testStepSize')": [
                        302,
                        310,
                        315,
                        319
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/MidpointFieldIntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#MidpointFieldIntegratorTest', None)": [
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/MidpointFieldStepInterpolatorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#MidpointFieldStepInterpolatorTest', None)": [
                        30,
                        44,
                        50,
                        56,
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/MidpointIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#MidpointIntegratorTest', 'testStepSize')": [
                        174,
                        181,
                        185,
                        188
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#MidpointIntegratorTest', 'testStepSize')": [
                        174,
                        175,
                        182,
                        183,
                        187,
                        188,
                        191,
                        192
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/RungeKuttaFieldIntegratorAbstractTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestMissedEndEvent(Field,double,double)')": [
                        131,
                        136,
                        140,
                        170,
                        174,
                        179,
                        184
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', None)": [
                        395,
                        399,
                        610,
                        615,
                        635
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestStepSize(Field,double)')": [
                        426,
                        434,
                        439,
                        442,
                        448
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestTooLargeFirstStep(Field)')": [
                        489,
                        494,
                        498
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/RungeKuttaFieldStepInterpolatorAbstractTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldStepInterpolatorAbstractTest', None)": [
                        292,
                        296,
                        299
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/StepFieldProblem.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#StepFieldProblem', None)": [
                        40,
                        47,
                        56,
                        60,
                        64,
                        70,
                        75
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/StepProblem.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#StepProblem', 'computeDerivatives(double,double,double)')": [
                        34
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#StepProblem', 'getDimension')": [
                        38
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#StepProblem', 'init(double,double,double)')": [
                        46
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#StepProblem', 'eventOccurred(double,double,boolean)')": [
                        49
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#StepProblem', 'g(double,double)')": [
                        54
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#StepProblem', 'resetState(double,double)')": [
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#StepProblem', None)": [
                        34,
                        39,
                        48,
                        52,
                        58,
                        63
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#StepProblem', 'computeDerivatives(double,double,double)')": [
                        35
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#StepProblem', 'getDimension')": [
                        40
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#StepProblem', 'init(double,double,double)')": [
                        49
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#StepProblem', 'eventOccurred(double,double,boolean)')": [
                        53
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#StepProblem', 'g(double,double)')": [
                        59
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#StepProblem', 'resetState(double,double)')": [
                        64
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/ThreeEighthesFieldIntegratorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesFieldIntegratorTest', None)": [
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/ThreeEighthesFieldStepInterpolatorTest.java": {
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesFieldStepInterpolatorTest', None)": [
                        30,
                        44,
                        50,
                        56,
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/ThreeEighthesIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesIntegratorTest', 'testStepSize')": [
                        222,
                        229,
                        233,
                        236
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesIntegratorTest', None)": [
                        187,
                        192
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesIntegratorTest', 'testStepSize')": [
                        224,
                        225,
                        232,
                        233,
                        237,
                        238,
                        241,
                        242
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/sampling/StepInterpolatorTestUtils.java": {
                "new": {
                    "('org.apache.commons.math4.ode.sampling#StepInterpolatorTestUtils', 'checkDerivativesConsistency(FirstOrderIntegrator,TestProblemAbstract,double,double)')": [
                        46,
                        88
                    ],
                    "('org.apache.commons.math4.ode.sampling#StepInterpolatorTestUtils', 'checkDerivativesConsistency(FirstOrderFieldIntegrator,TestFieldProblemAbstract,double)')": [
                        105,
                        138
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/sampling/StepNormalizerOutputTestBase.java": {
                "new": {
                    "('org.apache.commons.math4.ode.sampling#StepNormalizerOutputTestBase', None)": [
                        268,
                        274,
                        280,
                        285
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/sampling/StepNormalizerTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.sampling#StepNormalizerTest', 'testBoundaries')": [
                        52,
                        54
                    ],
                    "('org.apache.commons.math4.ode.sampling#StepNormalizerTest', 'testBeforeEnd')": [
                        82,
                        84
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.sampling#StepNormalizerTest', 'testBoundaries')": [
                        52,
                        53,
                        55,
                        56
                    ],
                    "('org.apache.commons.math4.ode.sampling#StepNormalizerTest', 'testBeforeEnd')": [
                        84,
                        85,
                        87,
                        88
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/MultiStartMultivariateOptimizerTest.java": {
                "new": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar#MultiStartMultivariateOptimizerTest', None)": [
                        124
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/MultivariateFunctionMappingAdapterTest.java": {
                "new": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar#MultivariateFunctionMappingAdapterTest', None)": [
                        166
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/MultivariateFunctionPenaltyAdapterTest.java": {
                "new": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar#MultivariateFunctionPenaltyAdapterTest', None)": [
                        174
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/gradient/CircleScalar.java": {
                "new": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar.gradient#CircleScalar', 'getObjectiveFunction')": [
                        52
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.gradient#CircleScalar', 'getObjectiveFunctionGradient')": [
                        68
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizerTest.java": {
                "new": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', 'testTwoSets')": [
                        224
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.gradient#NonLinearConjugateGradientOptimizerTest', None)": [
                        452,
                        467
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/BOBYQAOptimizerTest.java": {
                "new": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#BOBYQAOptimizerTest', None)": [
                        368,
                        388,
                        408,
                        428,
                        450,
                        471,
                        493,
                        504,
                        512,
                        528,
                        537,
                        558,
                        588
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/CMAESOptimizerTest.java": {
                "new": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', 'testMath864')": [
                        373
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', 'testFitAccuracyDependsOnBoundary')": [
                        405
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizerTest', None)": [
                        536,
                        556,
                        576,
                        596,
                        618,
                        639,
                        661,
                        672,
                        680,
                        692,
                        701,
                        722,
                        752
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/PowellOptimizerTest.java": {
                "new": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#PowellOptimizerTest', 'testQuadratic')": [
                        82
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#PowellOptimizerTest', 'testMaximizeQuadratic')": [
                        114
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#PowellOptimizerTest', 'testRelativeToleranceOnScaledValues')": [
                        153,
                        189
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/SimplexOptimizerMultiDirectionalTest.java": {
                "new": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#SimplexOptimizerMultiDirectionalTest', 'testRosenbrock')": [
                        139
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#SimplexOptimizerMultiDirectionalTest', 'testPowell')": [
                        170
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#SimplexOptimizerMultiDirectionalTest', None)": [
                        228,
                        254
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/SimplexOptimizerNelderMeadTest.java": {
                "new": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#SimplexOptimizerNelderMeadTest', 'testLeastSquares1')": [
                        184
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#SimplexOptimizerNelderMeadTest', 'testLeastSquares2')": [
                        211
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#SimplexOptimizerNelderMeadTest', 'testLeastSquares3')": [
                        238
                    ],
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#SimplexOptimizerNelderMeadTest', None)": [
                        281,
                        297,
                        317
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/univariate/BracketFinderTest.java": {
                "new": {
                    "('org.apache.commons.math4.optim.univariate#BracketFinderTest', 'testCubicMin')": [
                        34
                    ],
                    "('org.apache.commons.math4.optim.univariate#BracketFinderTest', 'testCubicMax')": [
                        57
                    ],
                    "('org.apache.commons.math4.optim.univariate#BracketFinderTest', 'testMinimumIsOnIntervalBoundary')": [
                        78
                    ],
                    "('org.apache.commons.math4.optim.univariate#BracketFinderTest', 'testIntervalBoundsOrdering')": [
                        98
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/univariate/BrentOptimizerTest.java": {
                "new": {
                    "('org.apache.commons.math4.optim.univariate#BrentOptimizerTest', 'testBoundaries')": [
                        93
                    ],
                    "('org.apache.commons.math4.optim.univariate#BrentOptimizerTest', 'testMath832')": [
                        219
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/univariate/MultiStartUnivariateOptimizerTest.java": {
                "new": {
                    "('org.apache.commons.math4.optim.univariate#MultiStartUnivariateOptimizerTest', 'testBadFunction')": [
                        104
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/IncrementorTest.java": {
                "new": {
                    "('org.apache.commons.math4.util#IncrementorTest', 'testAlternateException')": [
                        106
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/IntegerSequenceTest.java": {
                "new": {
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testIncrementorAlternateException')": [
                        259
                    ]
                }
            }
        }
    },
    "762eb53f5cee901be190cd324dfde01977aeea60": {
        "authored_data": "2016 Sep 20 17:37",
        "commit.message": "Remove redundant type arguments.",
        "commit.author.name": "Gary Gregory",
        "pcid": "98e27f58e7aef81c4eaab58c08b09e6897199139",
        "changes": {
            "src/main/java/org/apache/commons/math4/analysis/differentiation/DSCompiler.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.differentiation#DSCompiler', None)": [
                        129
                    ],
                    "('org.apache.commons.math4.analysis.differentiation#DSCompiler', 'compileMultiplicationIndirection(int,int,DSCompiler,DSCompiler,int)')": [
                        361,
                        368
                    ],
                    "('org.apache.commons.math4.analysis.differentiation#DSCompiler', 'compileCompositionIndirection(int,int,DSCompiler,DSCompiler,int,int)')": [
                        431,
                        478
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.differentiation#DSCompiler', None)": [
                        129
                    ],
                    "('org.apache.commons.math4.analysis.differentiation#DSCompiler', 'compileMultiplicationIndirection(int,int,DSCompiler,DSCompiler,int)')": [
                        361,
                        368
                    ],
                    "('org.apache.commons.math4.analysis.differentiation#DSCompiler', 'compileCompositionIndirection(int,int,DSCompiler,DSCompiler,int,int)')": [
                        431,
                        478
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/differentiation/SparseGradient.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.differentiation#SparseGradient', None)": [
                        64,
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.differentiation#SparseGradient', None)": [
                        64,
                        80
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/integration/gauss/BaseRuleFactory.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.integration.gauss#BaseRuleFactory', None)": [
                        40,
                        43
                    ],
                    "('org.apache.commons.math4.analysis.integration.gauss#BaseRuleFactory', 'getRule(int)')": [
                        78
                    ],
                    "('org.apache.commons.math4.analysis.integration.gauss#BaseRuleFactory', 'convertToDouble(Pair)')": [
                        152
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.integration.gauss#BaseRuleFactory', None)": [
                        40,
                        43
                    ],
                    "('org.apache.commons.math4.analysis.integration.gauss#BaseRuleFactory', 'getRule(int)')": [
                        78
                    ],
                    "('org.apache.commons.math4.analysis.integration.gauss#BaseRuleFactory', 'convertToDouble(Pair)')": [
                        152
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/integration/gauss/GaussIntegratorFactory.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.integration.gauss#GaussIntegratorFactory', 'transform(Pair,double,double)')": [
                        186
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.integration.gauss#GaussIntegratorFactory', 'transform(Pair,double,double)')": [
                        186
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/integration/gauss/HermiteRuleFactory.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.integration.gauss#HermiteRuleFactory', 'computeRule(int)')": [
                        66,
                        175
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.integration.gauss#HermiteRuleFactory', 'computeRule(int)')": [
                        66,
                        175
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/integration/gauss/LaguerreRuleFactory.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.integration.gauss#LaguerreRuleFactory', 'computeRule(int)')": [
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.integration.gauss#LaguerreRuleFactory', 'computeRule(int)')": [
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/integration/gauss/LegendreHighPrecisionRuleFactory.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.integration.gauss#LegendreHighPrecisionRuleFactory', 'computeRule(int)')": [
                        69,
                        213
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.integration.gauss#LegendreHighPrecisionRuleFactory', 'computeRule(int)')": [
                        69,
                        213
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/integration/gauss/LegendreRuleFactory.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.integration.gauss#LegendreRuleFactory', 'computeRule(int)')": [
                        40,
                        138
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.integration.gauss#LegendreRuleFactory', 'computeRule(int)')": [
                        40,
                        138
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/interpolation/FieldHermiteInterpolator.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolator', None)": [
                        64,
                        65,
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolator', None)": [
                        64,
                        65,
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/interpolation/HermiteInterpolator.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.interpolation#HermiteInterpolator', None)": [
                        62,
                        63,
                        64
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.interpolation#HermiteInterpolator', None)": [
                        62,
                        63,
                        64
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/interpolation/InterpolatingMicrosphere.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.interpolation#InterpolatingMicrosphere', None)": [
                        96,
                        97,
                        153
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.interpolation#InterpolatingMicrosphere', None)": [
                        96,
                        97,
                        153
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/analysis/polynomials/PolynomialsUtils.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.polynomials#PolynomialsUtils', None)": [
                        54,
                        61,
                        68,
                        75,
                        81
                    ],
                    "('org.apache.commons.math4.analysis.polynomials#PolynomialsUtils', 'createJacobiPolynomial(int,int,int)')": [
                        231
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.polynomials#PolynomialsUtils', None)": [
                        54,
                        61,
                        68,
                        75,
                        81
                    ],
                    "('org.apache.commons.math4.analysis.polynomials#PolynomialsUtils', 'createJacobiPolynomial(int,int,int)')": [
                        231
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/complex/Complex.java": {
                "old": {
                    "('org.apache.commons.math4.complex#Complex', 'nthRoot(int)')": [
                        1212
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.complex#Complex', 'nthRoot(int)')": [
                        1212
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/distribution/EmpiricalDistribution.java": {
                "old": {
                    "('org.apache.commons.math4.distribution#EmpiricalDistribution', None)": [
                        153
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.distribution#EmpiricalDistribution', None)": [
                        153
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/distribution/EnumeratedDistribution.java": {
                "old": {
                    "('org.apache.commons.math4.distribution#EnumeratedDistribution', None)": [
                        87
                    ],
                    "('org.apache.commons.math4.distribution#EnumeratedDistribution', 'getPmf')": [
                        152,
                        155
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.distribution#EnumeratedDistribution', None)": [
                        87
                    ],
                    "('org.apache.commons.math4.distribution#EnumeratedDistribution', 'getPmf')": [
                        152,
                        155
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/distribution/EnumeratedIntegerDistribution.java": {
                "old": {
                    "('org.apache.commons.math4.distribution#EnumeratedIntegerDistribution', None)": [
                        71,
                        82,
                        100
                    ],
                    "('org.apache.commons.math4.distribution#EnumeratedIntegerDistribution', 'createDistribution(int,double)')": [
                        115,
                        118
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.distribution#EnumeratedIntegerDistribution', None)": [
                        71,
                        82,
                        100
                    ],
                    "('org.apache.commons.math4.distribution#EnumeratedIntegerDistribution', 'createDistribution(int,double)')": [
                        115,
                        118
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/distribution/EnumeratedRealDistribution.java": {
                "old": {
                    "('org.apache.commons.math4.distribution#EnumeratedRealDistribution', None)": [
                        75,
                        85,
                        103
                    ],
                    "('org.apache.commons.math4.distribution#EnumeratedRealDistribution', 'createDistribution(double,double)')": [
                        118,
                        121
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.distribution#EnumeratedRealDistribution', None)": [
                        75,
                        85,
                        103
                    ],
                    "('org.apache.commons.math4.distribution#EnumeratedRealDistribution', 'createDistribution(double,double)')": [
                        118,
                        121
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/distribution/MixtureMultivariateNormalDistribution.java": {
                "old": {
                    "('org.apache.commons.math4.distribution#MixtureMultivariateNormalDistribution', 'createComponents(double,double,double)')": [
                        80,
                        86
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.distribution#MixtureMultivariateNormalDistribution', 'createComponents(double,double,double)')": [
                        80,
                        86
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/distribution/MixtureMultivariateRealDistribution.java": {
                "old": {
                    "('org.apache.commons.math4.distribution#MixtureMultivariateRealDistribution', None)": [
                        76
                    ],
                    "('org.apache.commons.math4.distribution#MixtureMultivariateRealDistribution', 'getComponents')": [
                        101,
                        104
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.distribution#MixtureMultivariateRealDistribution', None)": [
                        76
                    ],
                    "('org.apache.commons.math4.distribution#MixtureMultivariateRealDistribution', 'getComponents')": [
                        101,
                        104
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/distribution/fitting/MultivariateNormalMixtureExpectationMaximization.java": {
                "old": {
                    "('org.apache.commons.math4.distribution.fitting#MultivariateNormalMixtureExpectationMaximization', 'estimate(double,int)')": [
                        331,
                        367
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.distribution.fitting#MultivariateNormalMixtureExpectationMaximization', 'estimate(double,int)')": [
                        331,
                        367
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/exception/util/ArgUtils.java": {
                "old": {
                    "('org.apache.commons.math4.exception.util#ArgUtils', 'flatten(Object)')": [
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.exception.util#ArgUtils', 'flatten(Object)')": [
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/exception/util/ExceptionContext.java": {
                "old": {
                    "('org.apache.commons.math4.exception.util#ExceptionContext', None)": [
                        65,
                        66,
                        67
                    ],
                    "('org.apache.commons.math4.exception.util#ExceptionContext', 'deSerializeMessages(ObjectInputStream)')": [
                        259,
                        260
                    ],
                    "('org.apache.commons.math4.exception.util#ExceptionContext', 'deSerializeContext(ObjectInputStream)')": [
                        314
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.exception.util#ExceptionContext', None)": [
                        65,
                        66,
                        67
                    ],
                    "('org.apache.commons.math4.exception.util#ExceptionContext', 'deSerializeMessages(ObjectInputStream)')": [
                        259,
                        260
                    ],
                    "('org.apache.commons.math4.exception.util#ExceptionContext', 'deSerializeContext(ObjectInputStream)')": [
                        314
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/fitting/GaussianCurveFitter.java": {
                "old": {
                    "('org.apache.commons.math4.fitting#GaussianCurveFitter', None)": [
                        251
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.fitting#GaussianCurveFitter', None)": [
                        251
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/fitting/HarmonicCurveFitter.java": {
                "old": {
                    "('org.apache.commons.math4.fitting#HarmonicCurveFitter', None)": [
                        295
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.fitting#HarmonicCurveFitter', None)": [
                        295
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/fitting/WeightedObservedPoints.java": {
                "old": {
                    "('org.apache.commons.math4.fitting#WeightedObservedPoints', None)": [
                        35
                    ],
                    "('org.apache.commons.math4.fitting#WeightedObservedPoints', 'toList')": [
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.fitting#WeightedObservedPoints', None)": [
                        35
                    ],
                    "('org.apache.commons.math4.fitting#WeightedObservedPoints', 'toList')": [
                        103
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/fitting/leastsquares/GaussNewtonOptimizer.java": {
                "old": {
                    "('org.apache.commons.math4.fitting.leastsquares#GaussNewtonOptimizer', 'computeNormalMatrix(RealMatrix,RealVector)')": [
                        297
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#GaussNewtonOptimizer', 'computeNormalMatrix(RealMatrix,RealVector)')": [
                        297
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/fitting/leastsquares/LeastSquaresFactory.java": {
                "old": {
                    "('org.apache.commons.math4.fitting.leastsquares#LeastSquaresFactory', None)": [
                        335
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#LeastSquaresFactory', None)": [
                        335
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/genetics/AbstractListChromosome.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#AbstractListChromosome', None)": [
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#AbstractListChromosome', None)": [
                        62
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/genetics/BinaryChromosome.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#BinaryChromosome', 'randomBinaryRepresentation(int)')": [
                        70
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#BinaryChromosome', 'randomBinaryRepresentation(int)')": [
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/genetics/BinaryMutation.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#BinaryMutation', 'mutate(Chromosome)')": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#BinaryMutation', 'mutate(Chromosome)')": [
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/genetics/CycleCrossover.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#CycleCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        132,
                        133,
                        136,
                        138
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#CycleCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        132,
                        133,
                        136,
                        138
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/genetics/ListPopulation.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#ListPopulation', None)": [
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#ListPopulation', None)": [
                        79
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/genetics/NPointCrossover.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#NPointCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        142,
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#NPointCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        142,
                        143
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/genetics/OnePointCrossover.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#OnePointCrossover', 'crossover(AbstractListChromosome,AbstractListChromosome)')": [
                        108,
                        109
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#OnePointCrossover', 'crossover(AbstractListChromosome,AbstractListChromosome)')": [
                        108,
                        109
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/genetics/OrderedCrossover.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#OrderedCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        100,
                        101,
                        103,
                        104
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#OrderedCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        100,
                        101,
                        103,
                        104
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/genetics/RandomKey.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#RandomKey', None)": [
                        75
                    ],
                    "('org.apache.commons.math4.genetics#RandomKey', 'decodeGeneric(List,List,List)')": [
                        129,
                        132
                    ],
                    "('org.apache.commons.math4.genetics#RandomKey', 'randomPermutation(int)')": [
                        198
                    ],
                    "('org.apache.commons.math4.genetics#RandomKey', 'identityPermutation(int)')": [
                        213
                    ],
                    "('org.apache.commons.math4.genetics#RandomKey', 'comparatorPermutation(List,Comparator)')": [
                        235
                    ],
                    "('org.apache.commons.math4.genetics#RandomKey', 'inducedPermutation(List,List)')": [
                        267
                    ],
                    "('org.apache.commons.math4.genetics#RandomKey', 'baseSequence(int)')": [
                        294
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#RandomKey', None)": [
                        75
                    ],
                    "('org.apache.commons.math4.genetics#RandomKey', 'decodeGeneric(List,List,List)')": [
                        129,
                        132
                    ],
                    "('org.apache.commons.math4.genetics#RandomKey', 'randomPermutation(int)')": [
                        198
                    ],
                    "('org.apache.commons.math4.genetics#RandomKey', 'identityPermutation(int)')": [
                        213
                    ],
                    "('org.apache.commons.math4.genetics#RandomKey', 'comparatorPermutation(List,Comparator)')": [
                        235
                    ],
                    "('org.apache.commons.math4.genetics#RandomKey', 'inducedPermutation(List,List)')": [
                        267
                    ],
                    "('org.apache.commons.math4.genetics#RandomKey', 'baseSequence(int)')": [
                        294
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/genetics/RandomKeyMutation.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#RandomKeyMutation', 'mutate(Chromosome)')": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#RandomKeyMutation', 'mutate(Chromosome)')": [
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/genetics/TournamentSelection.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#TournamentSelection', 'tournament(ListPopulation)')": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#TournamentSelection', 'tournament(ListPopulation)')": [
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/genetics/UniformCrossover.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#UniformCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        115,
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#UniformCrossover', 'mate(AbstractListChromosome,AbstractListChromosome)')": [
                        115,
                        116
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/enclosing/WelzlEncloser.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser', 'pivotingBall(Iterable)')": [
                        81,
                        82
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser', 'pivotingBall(Iterable)')": [
                        81,
                        82
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/oned/IntervalsSet.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.oned#IntervalsSet', 'buildTree(double,double,double)')": [
                        111,
                        116,
                        125,
                        134,
                        136
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.oned#IntervalsSet', 'projectToBoundary(Point)')": [
                        225,
                        227,
                        235,
                        237,
                        244
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.oned#IntervalsSet', 'asList')": [
                        270
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.oned#IntervalsSet', 'buildTree(double,double,double)')": [
                        111,
                        116,
                        125,
                        134,
                        136
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.oned#IntervalsSet', 'projectToBoundary(Point)')": [
                        225,
                        227,
                        235,
                        237,
                        244
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.oned#IntervalsSet', 'asList')": [
                        270
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/oned/SubOrientedPoint.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.oned#SubOrientedPoint', 'split(Hyperplane)')": [
                        64,
                        66,
                        68
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.oned#SubOrientedPoint', 'split(Hyperplane)')": [
                        64,
                        66,
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/FieldRotation.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', None)": [
                        377,
                        378,
                        379
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'revert')": [
                        456
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'getAxis(RotationConvention)')": [
                        512,
                        519,
                        522
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'vector(double,double,double)')": [
                        1035
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'applyTo(FieldVector3D)')": [
                        1093
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'applyTo(Vector3D)')": [
                        1111
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'applyTo(Rotation,FieldVector3D)')": [
                        1168
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'applyInverseTo(FieldVector3D)')": [
                        1187
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'applyInverseTo(Vector3D)')": [
                        1206
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'applyInverseTo(Rotation,FieldVector3D)')": [
                        1266
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'composeInternal(FieldRotation)')": [
                        1320
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'composeInternal(Rotation)')": [
                        1375
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'applyTo(Rotation,FieldRotation)')": [
                        1394
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'composeInverseInternal(FieldRotation)')": [
                        1453
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'composeInverseInternal(Rotation)')": [
                        1512
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'applyInverseTo(Rotation,FieldRotation)')": [
                        1533
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', None)": [
                        377,
                        378,
                        379
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'revert')": [
                        456
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'getAxis(RotationConvention)')": [
                        512,
                        519,
                        522
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'vector(double,double,double)')": [
                        1035
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'applyTo(FieldVector3D)')": [
                        1093
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'applyTo(Vector3D)')": [
                        1111
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'applyTo(Rotation,FieldVector3D)')": [
                        1168
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'applyInverseTo(FieldVector3D)')": [
                        1187
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'applyInverseTo(Vector3D)')": [
                        1206
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'applyInverseTo(Rotation,FieldVector3D)')": [
                        1266
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'composeInternal(FieldRotation)')": [
                        1320
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'composeInternal(Rotation)')": [
                        1375
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'applyTo(Rotation,FieldRotation)')": [
                        1394
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'composeInverseInternal(FieldRotation)')": [
                        1453
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'composeInverseInternal(Rotation)')": [
                        1512
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotation', 'applyInverseTo(Rotation,FieldRotation)')": [
                        1533
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/FieldVector3D.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'add(FieldVector3D)')": [
                        411
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'add(Vector3D)')": [
                        419
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'add(T,FieldVector3D)')": [
                        428
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'add(T,Vector3D)')": [
                        437
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'add(double,FieldVector3D)')": [
                        448
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'add(double,Vector3D)')": [
                        457
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'subtract(FieldVector3D)')": [
                        467
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'subtract(Vector3D)')": [
                        475
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'subtract(T,FieldVector3D)')": [
                        484
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'subtract(T,Vector3D)')": [
                        493
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'subtract(double,FieldVector3D)')": [
                        504
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'subtract(double,Vector3D)')": [
                        513
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'orthogonal')": [
                        554,
                        557,
                        560
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'negate')": [
                        658
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'scalarMultiply(T)')": [
                        666
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'scalarMultiply(double)')": [
                        674
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'crossProduct(FieldVector3D)')": [
                        782
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'crossProduct(Vector3D)')": [
                        792
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'crossProduct(Vector3D,FieldVector3D)')": [
                        996
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'add(FieldVector3D)')": [
                        411
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'add(Vector3D)')": [
                        419
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'add(T,FieldVector3D)')": [
                        428
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'add(T,Vector3D)')": [
                        437
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'add(double,FieldVector3D)')": [
                        448
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'add(double,Vector3D)')": [
                        457
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'subtract(FieldVector3D)')": [
                        467
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'subtract(Vector3D)')": [
                        475
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'subtract(T,FieldVector3D)')": [
                        484
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'subtract(T,Vector3D)')": [
                        493
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'subtract(double,FieldVector3D)')": [
                        504
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'subtract(double,Vector3D)')": [
                        513
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'orthogonal')": [
                        554,
                        557,
                        560
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'negate')": [
                        658
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'scalarMultiply(T)')": [
                        666
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'scalarMultiply(double)')": [
                        674
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'crossProduct(FieldVector3D)')": [
                        782
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'crossProduct(Vector3D)')": [
                        792
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3D', 'crossProduct(Vector3D,FieldVector3D)')": [
                        996
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/OutlineExtractor.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#OutlineExtractor', None)": [
                        206
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#OutlineExtractor', None)": [
                        206
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSet.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#PolyhedronsSet', 'buildBoundary(double,double,double,double,double,double,double)')": [
                        165
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#PolyhedronsSet', 'buildBoundary(List,List,double)')": [
                        229
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#PolyhedronsSet', 'buildBoundary(double,double,double,double,double,double,double)')": [
                        165
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#PolyhedronsSet', 'buildBoundary(List,List,double)')": [
                        229
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/SphereGenerator.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#SphereGenerator', 'ballOnSupport(List)')": [
                        40,
                        44,
                        48,
                        64,
                        121
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#SphereGenerator', 'ballOnSupport(List)')": [
                        40,
                        44,
                        48,
                        64,
                        121
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/SubLine.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#SubLine', 'getSegments')": [
                        88
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#SubLine', 'getSegments')": [
                        88
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/threed/SubPlane.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#SubPlane', 'split(Hyperplane)')": [
                        70,
                        72,
                        74,
                        95,
                        100,
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#SubPlane', 'split(Hyperplane)')": [
                        70,
                        72,
                        74,
                        95,
                        100,
                        103
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/twod/DiskGenerator.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#DiskGenerator', 'ballOnSupport(List)')": [
                        36,
                        40,
                        44,
                        89
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#DiskGenerator', 'ballOnSupport(List)')": [
                        36,
                        40,
                        44,
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/twod/NestedLoops.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#NestedLoops', None)": [
                        74,
                        93,
                        97
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#NestedLoops', 'add(NestedLoops)')": [
                        155
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#NestedLoops', None)": [
                        74,
                        93,
                        97
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#NestedLoops', 'add(NestedLoops)')": [
                        155
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/twod/PolygonsSet.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSet', 'verticesToTree(double,Vector2D)')": [
                        202,
                        212,
                        241
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSet', 'insertEdges(double,BSPTree,List)')": [
                        290,
                        291
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSet', None)": [
                        368,
                        1001
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSet', 'getVertices')": [
                        643
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSet', 'followLoop(ConnectableSegment)')": [
                        827
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSet', 'verticesToTree(double,Vector2D)')": [
                        202,
                        212,
                        241
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSet', 'insertEdges(double,BSPTree,List)')": [
                        290,
                        291
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSet', None)": [
                        368,
                        1001
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSet', 'getVertices')": [
                        643
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSet', 'followLoop(ConnectableSegment)')": [
                        827
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/twod/SubLine.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#SubLine', 'getSegments')": [
                        86
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#SubLine', 'split(Hyperplane)')": [
                        171,
                        173,
                        175,
                        190,
                        194,
                        196
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#SubLine', 'getSegments')": [
                        86
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#SubLine', 'split(Hyperplane)')": [
                        171,
                        173,
                        175,
                        190,
                        194,
                        196
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/twod/hull/AklToussaintHeuristic.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#AklToussaintHeuristic', 'reducePoints(Collection)')": [
                        87
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#AklToussaintHeuristic', 'buildQuadrilateral(Vector2D)')": [
                        106
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#AklToussaintHeuristic', 'reducePoints(Collection)')": [
                        87
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#AklToussaintHeuristic', 'buildQuadrilateral(Vector2D)')": [
                        106
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/twod/hull/ConvexHull2D.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHull2D', 'createRegion')": [
                        166
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHull2D', 'createRegion')": [
                        166
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/euclidean/twod/hull/MonotoneChain.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#MonotoneChain', 'findHullVertices(Collection)')": [
                        80,
                        100,
                        106,
                        114
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#MonotoneChain', 'findHullVertices(Collection)')": [
                        80,
                        100,
                        106,
                        114
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/partitioning/AbstractRegion.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.partitioning#AbstractRegion', None)": [
                        56,
                        105,
                        112,
                        124,
                        164
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#AbstractRegion', 'insertCuts(BSPTree,Collection)')": [
                        221,
                        222
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#AbstractRegion', 'projectToBoundary(Point)')": [
                        313
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#AbstractRegion', 'getBoundarySize')": [
                        379
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#AbstractRegion', 'applyTransform(Transform)')": [
                        488
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#AbstractRegion', 'recurseTransform(BSPTree,Transform,Map)')": [
                        522,
                        534,
                        537
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.partitioning#AbstractRegion', None)": [
                        56,
                        105,
                        112,
                        124,
                        164
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#AbstractRegion', 'insertCuts(BSPTree,Collection)')": [
                        221,
                        222
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#AbstractRegion', 'projectToBoundary(Point)')": [
                        313
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#AbstractRegion', 'getBoundarySize')": [
                        379
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#AbstractRegion', 'applyTransform(Transform)')": [
                        488
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#AbstractRegion', 'recurseTransform(BSPTree,Transform,Map)')": [
                        522,
                        534,
                        537
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/partitioning/AbstractSubHyperplane.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.partitioning#AbstractSubHyperplane', 'applyTransform(Transform)')": [
                        119
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#AbstractSubHyperplane', 'recurseTransform(BSPTree,Hyperplane,Transform,Map)')": [
                        156,
                        167,
                        170
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.partitioning#AbstractSubHyperplane', 'applyTransform(Transform)')": [
                        119
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#AbstractSubHyperplane', 'recurseTransform(BSPTree,Hyperplane,Transform,Map)')": [
                        156,
                        167,
                        170
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/partitioning/BSPTree.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.partitioning#BSPTree', 'insertCut(Hyperplane)')": [
                        166,
                        168
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#BSPTree', 'copySelf')": [
                        184,
                        185,
                        186,
                        187
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#BSPTree', 'getCloseCuts(Point,double)')": [
                        343
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#BSPTree', 'split(SubHyperplane)')": [
                        557,
                        569,
                        574,
                        585,
                        590,
                        600,
                        615,
                        616
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#BSPTree', 'pruneAroundConvexCell(Object,Object,Object)')": [
                        713,
                        718,
                        720,
                        722
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.partitioning#BSPTree', 'insertCut(Hyperplane)')": [
                        166,
                        168
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#BSPTree', 'copySelf')": [
                        184,
                        185,
                        186,
                        187
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#BSPTree', 'getCloseCuts(Point,double)')": [
                        343
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#BSPTree', 'split(SubHyperplane)')": [
                        557,
                        569,
                        574,
                        585,
                        590,
                        600,
                        615,
                        616
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#BSPTree', 'pruneAroundConvexCell(Object,Object,Object)')": [
                        713,
                        718,
                        720,
                        722
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/partitioning/BoundaryBuilder.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.partitioning#BoundaryBuilder', 'visitInternalNode(BSPTree)')": [
                        47,
                        53,
                        58,
                        68,
                        74,
                        89
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.partitioning#BoundaryBuilder', 'visitInternalNode(BSPTree)')": [
                        47,
                        53,
                        58,
                        68,
                        74,
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/partitioning/BoundaryProjector.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.partitioning#BoundaryProjector', 'getProjection')": [
                        133
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#BoundaryProjector', 'boundaryRegions(BSPTree)')": [
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.partitioning#BoundaryProjector', 'getProjection')": [
                        133
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#BoundaryProjector', 'boundaryRegions(BSPTree)')": [
                        143
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/partitioning/Characterization.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.partitioning#Characterization', None)": [
                        59,
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.partitioning#Characterization', None)": [
                        59,
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/partitioning/NodesSet.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.partitioning#NodesSet', None)": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.partitioning#NodesSet', None)": [
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/partitioning/RegionFactory.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.partitioning#RegionFactory', 'recurseComplement(BSPTree)')": [
                        179
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#RegionFactory', 'recurseComplement(BSPTree,Map)')": [
                        211,
                        222,
                        223,
                        224,
                        225
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#RegionFactory', None)": [
                        333,
                        379,
                        382
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.partitioning#RegionFactory', 'recurseComplement(BSPTree)')": [
                        179
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#RegionFactory', 'recurseComplement(BSPTree,Map)')": [
                        211,
                        222,
                        223,
                        224,
                        225
                    ],
                    "('org.apache.commons.math4.geometry.partitioning#RegionFactory', None)": [
                        333,
                        379,
                        382
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/spherical/oned/ArcsSet.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSet', 'buildTree(double,double,double)')": [
                        135,
                        151,
                        153,
                        162,
                        163
                    ],
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSet', 'projectToBoundary(Point)')": [
                        507,
                        509,
                        518,
                        520,
                        530,
                        541,
                        543,
                        550,
                        552
                    ],
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSet', 'asList')": [
                        568
                    ],
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSet', 'split(Arc)')": [
                        727,
                        728
                    ],
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSet', 'createSplitPart(List)')": [
                        864
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSet', 'buildTree(double,double,double)')": [
                        135,
                        151,
                        153,
                        162,
                        163
                    ],
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSet', 'projectToBoundary(Point)')": [
                        507,
                        509,
                        518,
                        520,
                        530,
                        541,
                        543,
                        550,
                        552
                    ],
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSet', 'asList')": [
                        568
                    ],
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSet', 'split(Arc)')": [
                        727,
                        728
                    ],
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSet', 'createSplitPart(List)')": [
                        864
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/spherical/oned/SubLimitAngle.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.spherical.oned#SubLimitAngle', 'split(Hyperplane)')": [
                        62,
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.spherical.oned#SubLimitAngle', 'split(Hyperplane)')": [
                        62,
                        63
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/spherical/twod/EdgesBuilder.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.spherical.twod#EdgesBuilder', None)": [
                        58,
                        59
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#EdgesBuilder', 'getEdges')": [
                        168
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.spherical.twod#EdgesBuilder', None)": [
                        58,
                        59
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#EdgesBuilder', 'getEdges')": [
                        168
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/spherical/twod/PropertiesComputer.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.spherical.twod#PropertiesComputer', None)": [
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.spherical.twod#PropertiesComputer', None)": [
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/spherical/twod/SphericalPolygonsSet.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSet', None)": [
                        62
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSet', 'verticesToTree(double,S2Point)')": [
                        201,
                        211,
                        244
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSet', 'insertEdges(double,BSPTree,List)')": [
                        287,
                        288
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSet', 'getBoundaryLoops')": [
                        387
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSet', 'getEnclosingCap')": [
                        471,
                        474,
                        482,
                        488,
                        508,
                        519,
                        524,
                        537
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSet', None)": [
                        62
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSet', 'verticesToTree(double,S2Point)')": [
                        201,
                        211,
                        244
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSet', 'insertEdges(double,BSPTree,List)')": [
                        287,
                        288
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSet', 'getBoundaryLoops')": [
                        387
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSet', 'getEnclosingCap')": [
                        471,
                        474,
                        482,
                        488,
                        508,
                        519,
                        524,
                        537
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/spherical/twod/SubCircle.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.spherical.twod#SubCircle', 'split(Hyperplane)')": [
                        59,
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.spherical.twod#SubCircle', 'split(Hyperplane)')": [
                        59,
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/geometry/spherical/twod/Vertex.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.spherical.twod#Vertex', None)": [
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.spherical.twod#Vertex', None)": [
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/AbstractFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math4.linear#AbstractFieldMatrix', 'power(int)')": [
                        273,
                        282
                    ],
                    "('org.apache.commons.math4.linear#AbstractFieldMatrix', 'getRowVector(int)')": [
                        540
                    ],
                    "('org.apache.commons.math4.linear#AbstractFieldMatrix', 'getColumnVector(int)')": [
                        563
                    ],
                    "('org.apache.commons.math4.linear#AbstractFieldMatrix', 'operate(FieldVector)')": [
                        729,
                        746
                    ],
                    "('org.apache.commons.math4.linear#AbstractFieldMatrix', 'preMultiply(FieldVector)')": [
                        777,
                        794
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#AbstractFieldMatrix', 'power(int)')": [
                        273,
                        282
                    ],
                    "('org.apache.commons.math4.linear#AbstractFieldMatrix', 'getRowVector(int)')": [
                        540
                    ],
                    "('org.apache.commons.math4.linear#AbstractFieldMatrix', 'getColumnVector(int)')": [
                        563
                    ],
                    "('org.apache.commons.math4.linear#AbstractFieldMatrix', 'operate(FieldVector)')": [
                        729,
                        746
                    ],
                    "('org.apache.commons.math4.linear#AbstractFieldMatrix', 'preMultiply(FieldVector)')": [
                        777,
                        794
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/AbstractRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math4.linear#AbstractRealMatrix', 'power(int)')": [
                        201
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#AbstractRealMatrix', 'power(int)')": [
                        201
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/Array2DRowFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math4.linear#Array2DRowFieldMatrix', 'createMatrix(int,int)')": [
                        211
                    ],
                    "('org.apache.commons.math4.linear#Array2DRowFieldMatrix', 'copy')": [
                        217
                    ],
                    "('org.apache.commons.math4.linear#Array2DRowFieldMatrix', 'add(Array2DRowFieldMatrix)')": [
                        245
                    ],
                    "('org.apache.commons.math4.linear#Array2DRowFieldMatrix', 'subtract(Array2DRowFieldMatrix)')": [
                        273
                    ],
                    "('org.apache.commons.math4.linear#Array2DRowFieldMatrix', 'multiply(Array2DRowFieldMatrix)')": [
                        306
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#Array2DRowFieldMatrix', 'createMatrix(int,int)')": [
                        211
                    ],
                    "('org.apache.commons.math4.linear#Array2DRowFieldMatrix', 'copy')": [
                        217
                    ],
                    "('org.apache.commons.math4.linear#Array2DRowFieldMatrix', 'add(Array2DRowFieldMatrix)')": [
                        245
                    ],
                    "('org.apache.commons.math4.linear#Array2DRowFieldMatrix', 'subtract(Array2DRowFieldMatrix)')": [
                        273
                    ],
                    "('org.apache.commons.math4.linear#Array2DRowFieldMatrix', 'multiply(Array2DRowFieldMatrix)')": [
                        306
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/ArrayFieldVector.java": {
                "old": {
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'copy')": [
                        391
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'add(FieldVector)')": [
                        406
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'add(ArrayFieldVector)')": [
                        424
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'subtract(FieldVector)')": [
                        439
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'subtract(ArrayFieldVector)')": [
                        457
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'mapAdd(T)')": [
                        467
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'mapSubtract(T)')": [
                        486
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'mapMultiply(T)')": [
                        505
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'mapDivide(T)')": [
                        526
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'mapInv')": [
                        552
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'ebeMultiply(FieldVector)')": [
                        581
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'ebeMultiply(ArrayFieldVector)')": [
                        599
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'ebeDivide(FieldVector)')": [
                        618
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'ebeDivide(ArrayFieldVector)')": [
                        641
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'outerProduct(FieldVector)')": [
                        713
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'outerProduct(ArrayFieldVector)')": [
                        731
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'append(FieldVector)')": [
                        758
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'append(ArrayFieldVector)')": [
                        768
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'append(T)')": [
                        777
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'getSubVector(int,int)')": [
                        787
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'copy')": [
                        391
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'add(FieldVector)')": [
                        406
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'add(ArrayFieldVector)')": [
                        424
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'subtract(FieldVector)')": [
                        439
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'subtract(ArrayFieldVector)')": [
                        457
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'mapAdd(T)')": [
                        467
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'mapSubtract(T)')": [
                        486
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'mapMultiply(T)')": [
                        505
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'mapDivide(T)')": [
                        526
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'mapInv')": [
                        552
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'ebeMultiply(FieldVector)')": [
                        581
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'ebeMultiply(ArrayFieldVector)')": [
                        599
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'ebeDivide(FieldVector)')": [
                        618
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'ebeDivide(ArrayFieldVector)')": [
                        641
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'outerProduct(FieldVector)')": [
                        713
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'outerProduct(ArrayFieldVector)')": [
                        731
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'append(FieldVector)')": [
                        758
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'append(ArrayFieldVector)')": [
                        768
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'append(T)')": [
                        777
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVector', 'getSubVector(int,int)')": [
                        787
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/BlockFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'createMatrix(int,int)')": [
                        297
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'copy')": [
                        306
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'add(FieldMatrix)')": [
                        327
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'add(BlockFieldMatrix)')": [
                        373
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'subtract(FieldMatrix)')": [
                        399
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'subtract(BlockFieldMatrix)')": [
                        443
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'scalarAdd(T)')": [
                        461
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'scalarMultiply(T)')": [
                        479
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'multiply(FieldMatrix)')": [
                        504
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'multiply(BlockFieldMatrix)')": [
                        567
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'getSubMatrix(int,int,int,int)')": [
                        666
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'getRowMatrix(int)')": [
                        839
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'getColumnMatrix(int)')": [
                        925
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'getRowVector(int)')": [
                        1020
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'getColumnVector(int)')": [
                        1054
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'transpose')": [
                        1223
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'createMatrix(int,int)')": [
                        297
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'copy')": [
                        306
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'add(FieldMatrix)')": [
                        327
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'add(BlockFieldMatrix)')": [
                        373
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'subtract(FieldMatrix)')": [
                        399
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'subtract(BlockFieldMatrix)')": [
                        443
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'scalarAdd(T)')": [
                        461
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'scalarMultiply(T)')": [
                        479
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'multiply(FieldMatrix)')": [
                        504
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'multiply(BlockFieldMatrix)')": [
                        567
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'getSubMatrix(int,int,int,int)')": [
                        666
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'getRowMatrix(int)')": [
                        839
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'getColumnMatrix(int)')": [
                        925
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'getRowVector(int)')": [
                        1020
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'getColumnVector(int)')": [
                        1054
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrix', 'transpose')": [
                        1223
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/FieldLUDecomposition.java": {
                "old": {
                    "('org.apache.commons.math4.linear#FieldLUDecomposition', 'getL')": [
                        174
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecomposition', 'getU')": [
                        194
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecomposition', 'getP')": [
                        217
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecomposition', 'getSolver')": [
                        256
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecomposition', None)": [
                        335,
                        380,
                        434,
                        443
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#FieldLUDecomposition', 'getL')": [
                        174
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecomposition', 'getU')": [
                        194
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecomposition', 'getP')": [
                        217
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecomposition', 'getSolver')": [
                        256
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecomposition', None)": [
                        335,
                        380,
                        434,
                        443
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/MatrixUtils.java": {
                "old": {
                    "('org.apache.commons.math4.linear#MatrixUtils', 'createFieldMatrix(Field,int,int)')": [
                        104
                    ],
                    "('org.apache.commons.math4.linear#MatrixUtils', 'createFieldMatrix(T)')": [
                        164
                    ],
                    "('org.apache.commons.math4.linear#MatrixUtils', 'createFieldIdentityMatrix(Field,int)')": [
                        203
                    ],
                    "('org.apache.commons.math4.linear#MatrixUtils', 'createFieldVector(T)')": [
                        291
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#MatrixUtils', 'createFieldMatrix(Field,int,int)')": [
                        104
                    ],
                    "('org.apache.commons.math4.linear#MatrixUtils', 'createFieldMatrix(T)')": [
                        164
                    ],
                    "('org.apache.commons.math4.linear#MatrixUtils', 'createFieldIdentityMatrix(Field,int)')": [
                        203
                    ],
                    "('org.apache.commons.math4.linear#MatrixUtils', 'createFieldVector(T)')": [
                        291
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/RealMatrixFormat.java": {
                "old": {
                    "('org.apache.commons.math4.linear#RealMatrixFormat', 'parse(String,ParsePosition)')": [
                        318,
                        319,
                        332
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#RealMatrixFormat', 'parse(String,ParsePosition)')": [
                        318,
                        319,
                        332
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/RealVectorFormat.java": {
                "old": {
                    "('org.apache.commons.math4.linear#RealVectorFormat', 'parse(String,ParsePosition)')": [
                        250
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#RealVectorFormat', 'parse(String,ParsePosition)')": [
                        250
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/SparseFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math4.linear#SparseFieldMatrix', None)": [
                        54,
                        72,
                        84,
                        96
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrix', 'copy')": [
                        121
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrix', 'createMatrix(int,int)')": [
                        127
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#SparseFieldMatrix', None)": [
                        54,
                        72,
                        84,
                        96
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrix', 'copy')": [
                        121
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrix', 'createMatrix(int,int)')": [
                        127
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/linear/SparseFieldVector.java": {
                "old": {
                    "('org.apache.commons.math4.linear#SparseFieldVector', None)": [
                        80,
                        92,
                        106,
                        121,
                        136
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'append(SparseFieldVector)')": [
                        182
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'append(FieldVector)')": [
                        198
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'append(T)')": [
                        212
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'copy')": [
                        220
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'ebeDivide(FieldVector)')": [
                        241
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'ebeMultiply(FieldVector)')": [
                        255
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'getSubVector(int,int)')": [
                        292
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'outerProduct(SparseFieldVector)')": [
                        390
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'outerProduct(FieldVector)')": [
                        410
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'subtract(FieldVector)')": [
                        498
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'add(FieldVector)')": [
                        581
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#SparseFieldVector', None)": [
                        80,
                        92,
                        106,
                        121,
                        136
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'append(SparseFieldVector)')": [
                        182
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'append(FieldVector)')": [
                        198
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'append(T)')": [
                        212
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'copy')": [
                        220
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'ebeDivide(FieldVector)')": [
                        241
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'ebeMultiply(FieldVector)')": [
                        255
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'getSubVector(int,int)')": [
                        292
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'outerProduct(SparseFieldVector)')": [
                        390
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'outerProduct(FieldVector)')": [
                        410
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'subtract(FieldVector)')": [
                        498
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVector', 'add(FieldVector)')": [
                        581
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/clustering/Cluster.java": {
                "old": {
                    "('org.apache.commons.math4.ml.clustering#Cluster', None)": [
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.clustering#Cluster', None)": [
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/clustering/DBSCANClusterer.java": {
                "old": {
                    "('org.apache.commons.math4.ml.clustering#DBSCANClusterer', 'cluster(Collection)')": [
                        139,
                        140,
                        149
                    ],
                    "('org.apache.commons.math4.ml.clustering#DBSCANClusterer', 'expandCluster(Cluster,T,List,Collection,Map)')": [
                        177
                    ],
                    "('org.apache.commons.math4.ml.clustering#DBSCANClusterer', 'getNeighbors(T,Collection)')": [
                        208
                    ],
                    "('org.apache.commons.math4.ml.clustering#DBSCANClusterer', 'merge(List,List)')": [
                        225
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.clustering#DBSCANClusterer', 'cluster(Collection)')": [
                        139,
                        140,
                        149
                    ],
                    "('org.apache.commons.math4.ml.clustering#DBSCANClusterer', 'expandCluster(Cluster,T,List,Collection,Map)')": [
                        177
                    ],
                    "('org.apache.commons.math4.ml.clustering#DBSCANClusterer', 'getNeighbors(T,Collection)')": [
                        208
                    ],
                    "('org.apache.commons.math4.ml.clustering#DBSCANClusterer', 'merge(List,List)')": [
                        225
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/clustering/FuzzyKMeansClusterer.java": {
                "old": {
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClusterer', 'cluster(Collection)')": [
                        282,
                        283
                    ],
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClusterer', 'updateClusterCenters')": [
                        319
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClusterer', 'cluster(Collection)')": [
                        282,
                        283
                    ],
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClusterer', 'updateClusterCenters')": [
                        319
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/clustering/KMeansPlusPlusClusterer.java": {
                "old": {
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClusterer', 'cluster(Collection)')": [
                        219
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClusterer', 'chooseInitialCenters(Collection)')": [
                        291,
                        301
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClusterer', 'cluster(Collection)')": [
                        219
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClusterer', 'chooseInitialCenters(Collection)')": [
                        291,
                        301
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/neuralnet/MapUtils.java": {
                "old": {
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'findBestAndSecondBest(double,Iterable,DistanceMeasure)')": [
                        108
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'sort(double,Iterable,DistanceMeasure)')": [
                        133
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'computeHitHistogram(Iterable,NeuronSquareMesh2D,DistanceMeasure)')": [
                        199
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'findBestAndSecondBest(double,Iterable,DistanceMeasure)')": [
                        108
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'sort(double,Iterable,DistanceMeasure)')": [
                        133
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtils', 'computeHitHistogram(Iterable,NeuronSquareMesh2D,DistanceMeasure)')": [
                        199
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/neuralnet/Network.java": {
                "old": {
                    "('org.apache.commons.math4.ml.neuralnet#Network', None)": [
                        54,
                        61
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#Network', 'copy')": [
                        158
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#Network', 'getNeurons(Comparator)')": [
                        181
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#Network', 'getNeighbours(Iterable,Iterable)')": [
                        359,
                        370
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#Network', 'getNeighbours(Neuron,Iterable)')": [
                        406
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.neuralnet#Network', None)": [
                        54,
                        61
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#Network', 'copy')": [
                        158
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#Network', 'getNeurons(Comparator)')": [
                        181
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#Network', 'getNeighbours(Iterable,Iterable)')": [
                        359,
                        370
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#Network', 'getNeighbours(Neuron,Iterable)')": [
                        406
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/neuralnet/Neuron.java": {
                "old": {
                    "('org.apache.commons.math4.ml.neuralnet#Neuron', None)": [
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.neuralnet#Neuron', None)": [
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/neuralnet/sofm/KohonenUpdateAction.java": {
                "old": {
                    "('org.apache.commons.math4.ml.neuralnet.sofm#KohonenUpdateAction', 'update(Network,double)')": [
                        114,
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.neuralnet.sofm#KohonenUpdateAction', 'update(Network,double)')": [
                        114,
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/neuralnet/twod/NeuronSquareMesh2D.java": {
                "old": {
                    "('org.apache.commons.math4.ml.neuralnet.twod#NeuronSquareMesh2D', 'createLinks')": [
                        426
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.neuralnet.twod#NeuronSquareMesh2D', 'createLinks')": [
                        426
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ml/neuralnet/twod/util/LocationFinder.java": {
                "old": {
                    "('org.apache.commons.math4.ml.neuralnet.twod.util#LocationFinder', None)": [
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.neuralnet.twod.util#LocationFinder', None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/AbstractFieldIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.ode#AbstractFieldIntegrator', None)": [
                        98,
                        101
                    ],
                    "('org.apache.commons.math4.ode#AbstractFieldIntegrator', 'addEventHandler(FieldEventHandler,double,double,int)')": [
                        145
                    ],
                    "('org.apache.commons.math4.ode#AbstractFieldIntegrator', 'addEventHandler(FieldEventHandler,double,double,int,BracketedRealFieldUnivariateSolver)')": [
                        158
                    ],
                    "('org.apache.commons.math4.ode#AbstractFieldIntegrator', 'getEventHandlers')": [
                        165
                    ],
                    "('org.apache.commons.math4.ode#AbstractFieldIntegrator', 'initIntegration(FieldExpandableODE,T,T,T)')": [
                        226
                    ],
                    "('org.apache.commons.math4.ode#AbstractFieldIntegrator', 'acceptStep(AbstractFieldStepInterpolator,T)')": [
                        310
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#AbstractFieldIntegrator', None)": [
                        98,
                        101
                    ],
                    "('org.apache.commons.math4.ode#AbstractFieldIntegrator', 'addEventHandler(FieldEventHandler,double,double,int)')": [
                        145
                    ],
                    "('org.apache.commons.math4.ode#AbstractFieldIntegrator', 'addEventHandler(FieldEventHandler,double,double,int,BracketedRealFieldUnivariateSolver)')": [
                        158
                    ],
                    "('org.apache.commons.math4.ode#AbstractFieldIntegrator', 'getEventHandlers')": [
                        165
                    ],
                    "('org.apache.commons.math4.ode#AbstractFieldIntegrator', 'initIntegration(FieldExpandableODE,T,T,T)')": [
                        226
                    ],
                    "('org.apache.commons.math4.ode#AbstractFieldIntegrator', 'acceptStep(AbstractFieldStepInterpolator,T)')": [
                        310
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/AbstractIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.ode#AbstractIntegrator', None)": [
                        85,
                        88
                    ],
                    "('org.apache.commons.math4.ode#AbstractIntegrator', 'getEventHandlers')": [
                        148
                    ],
                    "('org.apache.commons.math4.ode#AbstractIntegrator', 'acceptStep(AbstractStepInterpolator,double,double,double)')": [
                        344
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#AbstractIntegrator', None)": [
                        85,
                        88
                    ],
                    "('org.apache.commons.math4.ode#AbstractIntegrator', 'getEventHandlers')": [
                        148
                    ],
                    "('org.apache.commons.math4.ode#AbstractIntegrator', 'acceptStep(AbstractStepInterpolator,double,double,double)')": [
                        344
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/AbstractParameterizable.java": {
                "old": {
                    "('org.apache.commons.math4.ode#AbstractParameterizable', None)": [
                        36,
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#AbstractParameterizable', None)": [
                        36,
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/ContinuousOutputFieldModel.java": {
                "old": {
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModel', None)": [
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModel', None)": [
                        103
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/ContinuousOutputModel.java": {
                "old": {
                    "('org.apache.commons.math4.ode#ContinuousOutputModel', None)": [
                        114
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#ContinuousOutputModel', None)": [
                        114
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/ExpandableStatefulODE.java": {
                "old": {
                    "('org.apache.commons.math4.ode#ExpandableStatefulODE', None)": [
                        79
                    ],
                    "('org.apache.commons.math4.ode#ExpandableStatefulODE', 'addSecondaryEquations(SecondaryEquations)')": [
                        141
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#ExpandableStatefulODE', None)": [
                        79
                    ],
                    "('org.apache.commons.math4.ode#ExpandableStatefulODE', 'addSecondaryEquations(SecondaryEquations)')": [
                        141
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/FieldEquationsMapper.java": {
                "old": {
                    "('org.apache.commons.math4.ode#FieldEquationsMapper', 'mapStateAndDerivative(T,T,T)')": [
                        133,
                        141
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#FieldEquationsMapper', 'mapStateAndDerivative(T,T,T)')": [
                        133,
                        141
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/FieldExpandableODE.java": {
                "old": {
                    "('org.apache.commons.math4.ode#FieldExpandableODE', None)": [
                        68,
                        69
                    ],
                    "('org.apache.commons.math4.ode#FieldExpandableODE', 'addSecondaryEquations(FieldSecondaryEquations)')": [
                        89
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#FieldExpandableODE', None)": [
                        68,
                        69
                    ],
                    "('org.apache.commons.math4.ode#FieldExpandableODE', 'addSecondaryEquations(FieldSecondaryEquations)')": [
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/JacobianMatrices.java": {
                "old": {
                    "('org.apache.commons.math4.ode#JacobianMatrices', None)": [
                        144
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#JacobianMatrices', None)": [
                        144
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/MultistepFieldIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.ode#MultistepFieldIntegrator', None)": [
                        133,
                        173
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#MultistepFieldIntegrator', None)": [
                        133,
                        173
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/ParameterJacobianWrapper.java": {
                "old": {
                    "('org.apache.commons.math4.ode#ParameterJacobianWrapper', None)": [
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#ParameterJacobianWrapper', None)": [
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/ParameterizedWrapper.java": {
                "old": {
                    "('org.apache.commons.math4.ode#ParameterizedWrapper', 'getParametersNames')": [
                        64
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#ParameterizedWrapper', 'getParametersNames')": [
                        64
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/AdamsBashforthFieldIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsBashforthFieldIntegrator', 'integrate(FieldExpandableODE,FieldODEState,T)')": [
                        304
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsBashforthFieldIntegrator', 'integrate(FieldExpandableODE,FieldODEState,T)')": [
                        304
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/AdamsFieldStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldStepInterpolator', None)": [
                        106
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldStepInterpolator', 'create(boolean,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        124
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldStepInterpolator', 'taylor(FieldODEStateAndDerivative,S,S,S,Array2DRowFieldMatrix)')": [
                        184
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldStepInterpolator', None)": [
                        106
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldStepInterpolator', 'create(boolean,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        124
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldStepInterpolator', 'taylor(FieldODEStateAndDerivative,S,S,S,Array2DRowFieldMatrix)')": [
                        184
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/AdamsMoultonFieldIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsMoultonFieldIntegrator', 'integrate(FieldExpandableODE,FieldODEState,T)')": [
                        287,
                        288
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsMoultonFieldIntegrator', 'integrate(FieldExpandableODE,FieldODEState,T)')": [
                        287,
                        288
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/AdamsNordsieckFieldTransformer.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsNordsieckFieldTransformer', None)": [
                        140,
                        141,
                        165,
                        169,
                        181
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsNordsieckFieldTransformer', 'getInstance(Field,int)')": [
                        198,
                        199,
                        205
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsNordsieckFieldTransformer', 'buildP(int)')": [
                        242
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsNordsieckFieldTransformer', 'initializeHighOrderDerivatives(T,T,T,T)')": [
                        306,
                        307,
                        311
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsNordsieckFieldTransformer', None)": [
                        140,
                        164,
                        168,
                        180
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsNordsieckFieldTransformer', 'getInstance(Field,int)')": [
                        197,
                        203
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsNordsieckFieldTransformer', 'buildP(int)')": [
                        240
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsNordsieckFieldTransformer', 'initializeHighOrderDerivatives(T,T,T,T)')": [
                        304,
                        305,
                        309
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/AdamsNordsieckTransformer.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsNordsieckTransformer', None)": [
                        139,
                        158,
                        162,
                        175
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsNordsieckTransformer', 'buildP(int)')": [
                        242
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsNordsieckTransformer', None)": [
                        139,
                        158,
                        162,
                        175
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsNordsieckTransformer', 'buildP(int)')": [
                        242
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/ClassicalRungeKuttaFieldIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungeKuttaFieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungeKuttaFieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        108
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/ClassicalRungeKuttaFieldStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungeKuttaFieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        92
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungeKuttaFieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        132
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungeKuttaFieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        92
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungeKuttaFieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        132
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/DormandPrince54FieldIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54FieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        196
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54FieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        196
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/DormandPrince54FieldStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54FieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        117
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54FieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        245
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54FieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        117
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54FieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        245
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/DormandPrince853FieldIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853FieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        402
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853FieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        402
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/DormandPrince853FieldStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853FieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        198
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853FieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        298
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853FieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        198
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853FieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        298
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/EmbeddedRungeKuttaFieldIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegrator', 'integrate(FieldExpandableODE,FieldODEState,T)')": [
                        312
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegrator', 'integrate(FieldExpandableODE,FieldODEState,T)')": [
                        312
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/EulerFieldIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#EulerFieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#EulerFieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        93
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/EulerFieldStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#EulerFieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        82
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EulerFieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        104
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#EulerFieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        82
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EulerFieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        104
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/GillFieldIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#GillFieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        118
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#GillFieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        118
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/GillFieldStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#GillFieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        100
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#GillFieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        144
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#GillFieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        100
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#GillFieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        144
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/HighamHall54FieldIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54FieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        171
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54FieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        171
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/HighamHall54FieldStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54FieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        68
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54FieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        112
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54FieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        68
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54FieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        112
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/LutherFieldIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#LutherFieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#LutherFieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        143
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/LutherFieldStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#LutherFieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        128
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#LutherFieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        220
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#LutherFieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        128
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#LutherFieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        220
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/MidpointFieldIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#MidpointFieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#MidpointFieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        93
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/MidpointFieldStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#MidpointFieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        84
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#MidpointFieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        114
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#MidpointFieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        84
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#MidpointFieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        114
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/RungeKuttaFieldIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegrator', 'integrate(FieldExpandableODE,FieldODEState,T)')": [
                        180
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegrator', 'integrate(FieldExpandableODE,FieldODEState,T)')": [
                        180
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/ThreeEighthesFieldIntegrator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesFieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesFieldIntegrator', 'createInterpolator(boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        107
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/ode/nonstiff/ThreeEighthesFieldStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesFieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        94
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesFieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        135
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesFieldStepInterpolator', 'create(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        94
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesFieldStepInterpolator', 'computeInterpolatedStateAndDerivatives(FieldEquationsMapper,T,T,T,T)')": [
                        135
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/optim/linear/LinearConstraintSet.java": {
                "old": {
                    "('org.apache.commons.math4.optim.linear#LinearConstraintSet', None)": [
                        33
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.optim.linear#LinearConstraintSet', None)": [
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/optim/linear/SimplexSolver.java": {
                "old": {
                    "('org.apache.commons.math4.optim.linear#SimplexSolver', 'getPivotRow(SimplexTableau,int)')": [
                        250
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.optim.linear#SimplexSolver', 'getPivotRow(SimplexTableau,int)')": [
                        250
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/optim/linear/SimplexTableau.java": {
                "old": {
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', None)": [
                        81
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'normalizeConstraints(Collection)')": [
                        275
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'dropPhase1Objective')": [
                        398
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'getSolution')": [
                        472
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', None)": [
                        81
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'normalizeConstraints(Collection)')": [
                        275
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'dropPhase1Objective')": [
                        398
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableau', 'getSolution')": [
                        472
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/MultiStartMultivariateOptimizer.java": {
                "old": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar#MultiStartMultivariateOptimizer', None)": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar#MultiStartMultivariateOptimizer', None)": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java": {
                "old": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizer', None)": [
                        204,
                        206,
                        208,
                        210
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar.noderiv#CMAESOptimizer', None)": [
                        204,
                        206,
                        208,
                        210
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/primes/SmallPrimes.java": {
                "old": {
                    "('org.apache.commons.math4.primes#SmallPrimes', 'trialDivision(int)')": [
                        128
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.primes#SmallPrimes', 'trialDivision(int)')": [
                        128
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/random/RandomUtils.java": {
                "old": {
                    "('org.apache.commons.math4.random#RandomUtils', None)": [
                        482,
                        484
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.random#RandomUtils', None)": [
                        482,
                        484
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/stat/Frequency.java": {
                "old": {
                    "('org.apache.commons.math4.stat#Frequency', None)": [
                        77,
                        87
                    ],
                    "('org.apache.commons.math4.stat#Frequency', 'getMode')": [
                        577
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat#Frequency', None)": [
                        77,
                        87
                    ],
                    "('org.apache.commons.math4.stat#Frequency', 'getMode')": [
                        577
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/stat/correlation/KendallsCorrelation.java": {
                "old": {
                    "('org.apache.commons.math4.stat.correlation#KendallsCorrelation', 'correlation(double,double)')": [
                        167
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.correlation#KendallsCorrelation', 'correlation(double,double)')": [
                        167
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/stat/descriptive/rank/PSquarePercentile.java": {
                "old": {
                    "('org.apache.commons.math4.stat.descriptive.rank#PSquarePercentile', None)": [
                        84
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.descriptive.rank#PSquarePercentile', None)": [
                        84
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/stat/inference/KolmogorovSmirnovTest.java": {
                "old": {
                    "('org.apache.commons.math4.stat.inference#KolmogorovSmirnovTest', 'createExactH(double,int)')": [
                        826
                    ],
                    "('org.apache.commons.math4.stat.inference#KolmogorovSmirnovTest', 'hasTies(double,double)')": [
                        1186
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.inference#KolmogorovSmirnovTest', 'createExactH(double,int)')": [
                        826
                    ],
                    "('org.apache.commons.math4.stat.inference#KolmogorovSmirnovTest', 'hasTies(double,double)')": [
                        1186
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/stat/inference/OneWayAnova.java": {
                "old": {
                    "('org.apache.commons.math4.stat.inference#OneWayAnova', 'anovaStats(Collection)')": [
                        198
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.inference#OneWayAnova', 'anovaStats(Collection)')": [
                        198
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/stat/ranking/NaturalRanking.java": {
                "old": {
                    "('org.apache.commons.math4.stat.ranking#NaturalRanking', 'rank(double)')": [
                        235,
                        244
                    ],
                    "('org.apache.commons.math4.stat.ranking#NaturalRanking', 'getNanPositions(IntDoublePair)')": [
                        415
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.ranking#NaturalRanking', 'rank(double)')": [
                        235,
                        244
                    ],
                    "('org.apache.commons.math4.stat.ranking#NaturalRanking', 'getNanPositions(IntDoublePair)')": [
                        415
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/util/CombinatoricsUtils.java": {
                "old": {
                    "('org.apache.commons.math4.util#CombinatoricsUtils', None)": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.util#CombinatoricsUtils', None)": [
                        46
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/util/IterationManager.java": {
                "old": {
                    "('org.apache.commons.math4.util#IterationManager', None)": [
                        46,
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.util#IterationManager', None)": [
                        46,
                        61
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/util/MathArrays.java": {
                "old": {
                    "('org.apache.commons.math4.util#MathArrays', 'sortInPlace(double,OrderDirection,double)')": [
                        846
                    ],
                    "('org.apache.commons.math4.util#MathArrays', 'unique(double)')": [
                        1921
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.util#MathArrays', 'sortInPlace(double,OrderDirection,double)')": [
                        846
                    ],
                    "('org.apache.commons.math4.util#MathArrays', 'unique(double)')": [
                        1921
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/util/Pair.java": {
                "old": {
                    "('org.apache.commons.math4.util#Pair', 'create(K,V)')": [
                        154
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.util#Pair', 'create(K,V)')": [
                        154
                    ]
                }
            },
            "src/main/java/org/apache/commons/math4/util/TransformerMap.java": {
                "old": {
                    "('org.apache.commons.math4.util#TransformerMap', None)": [
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.util#TransformerMap', None)": [
                        52
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/differentiation/DSCompilerTest.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.differentiation#DSCompilerTest', 'testMultiplicationRules')": [
                        158
                    ],
                    "('org.apache.commons.math4.analysis.differentiation#DSCompilerTest', 'testCompositionRules')": [
                        249
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.differentiation#DSCompilerTest', 'testMultiplicationRules')": [
                        158
                    ],
                    "('org.apache.commons.math4.analysis.differentiation#DSCompilerTest', 'testCompositionRules')": [
                        249
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/integration/gauss/BaseRuleFactoryTest.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.integration.gauss#BaseRuleFactoryTest', 'testConcurrentCreation')": [
                        54
                    ],
                    "('org.apache.commons.math4.analysis.integration.gauss#DummyRuleFactory', 'computeRule(int)')": [
                        106
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.integration.gauss#BaseRuleFactoryTest', 'testConcurrentCreation')": [
                        54
                    ],
                    "('org.apache.commons.math4.analysis.integration.gauss#DummyRuleFactory', 'computeRule(int)')": [
                        106
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/integration/gauss/GaussIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.integration.gauss#GaussIntegratorTest', 'testGetWeights')": [
                        37
                    ],
                    "('org.apache.commons.math4.analysis.integration.gauss#GaussIntegratorTest', 'testGetPoints')": [
                        52
                    ],
                    "('org.apache.commons.math4.analysis.integration.gauss#GaussIntegratorTest', 'testIntegrate')": [
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.integration.gauss#GaussIntegratorTest', 'testGetWeights')": [
                        37
                    ],
                    "('org.apache.commons.math4.analysis.integration.gauss#GaussIntegratorTest', 'testGetPoints')": [
                        52
                    ],
                    "('org.apache.commons.math4.analysis.integration.gauss#GaussIntegratorTest', 'testIntegrate')": [
                        67
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/integration/gauss/HermiteParametricTest.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.integration.gauss#HermiteParametricTest', 'getParameters')": [
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.integration.gauss#HermiteParametricTest', 'getParameters')": [
                        75
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/integration/gauss/LegendreHighPrecisionParametricTest.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.integration.gauss#LegendreHighPrecisionParametricTest', 'getParameters')": [
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.integration.gauss#LegendreHighPrecisionParametricTest', 'getParameters')": [
                        73
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/integration/gauss/LegendreParametricTest.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.integration.gauss#LegendreParametricTest', 'getParameters')": [
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.integration.gauss#LegendreParametricTest', 'getParameters')": [
                        73
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/interpolation/FieldHermiteInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testZero')": [
                        36
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testQuadratic')": [
                        49
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testMixedDerivatives')": [
                        66
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testRandomPolynomialsValuesOnly')": [
                        110
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testRandomPolynomialsFirstDerivative')": [
                        154
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testSine')": [
                        189
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testSquareRoot')": [
                        202
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testWikipedia')": [
                        216
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testOnePointParabola')": [
                        240
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testDuplicatedAbscissa')": [
                        271
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testZero')": [
                        36
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testQuadratic')": [
                        49
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testMixedDerivatives')": [
                        66
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testRandomPolynomialsValuesOnly')": [
                        110
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testRandomPolynomialsFirstDerivative')": [
                        154
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testSine')": [
                        189
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testSquareRoot')": [
                        202
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testWikipedia')": [
                        216
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testOnePointParabola')": [
                        240
                    ],
                    "('org.apache.commons.math4.analysis.interpolation#FieldHermiteInterpolatorTest', 'testDuplicatedAbscissa')": [
                        271
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/analysis/solvers/FieldBracketingNthOrderBrentSolverTest.java": {
                "old": {
                    "('org.apache.commons.math4.analysis.solvers#FieldBracketingNthOrderBrentSolverTest', 'testInsufficientOrder3')": [
                        39
                    ],
                    "('org.apache.commons.math4.analysis.solvers#FieldBracketingNthOrderBrentSolverTest', 'testConstructorOK')": [
                        46
                    ],
                    "('org.apache.commons.math4.analysis.solvers#FieldBracketingNthOrderBrentSolverTest', 'testConvergenceOnFunctionAccuracy')": [
                        54
                    ],
                    "('org.apache.commons.math4.analysis.solvers#FieldBracketingNthOrderBrentSolverTest', 'check(RealFieldUnivariateFunction,int,double,double,AllowedSolution)')": [
                        130
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.analysis.solvers#FieldBracketingNthOrderBrentSolverTest', 'testInsufficientOrder3')": [
                        39
                    ],
                    "('org.apache.commons.math4.analysis.solvers#FieldBracketingNthOrderBrentSolverTest', 'testConstructorOK')": [
                        46
                    ],
                    "('org.apache.commons.math4.analysis.solvers#FieldBracketingNthOrderBrentSolverTest', 'testConvergenceOnFunctionAccuracy')": [
                        54
                    ],
                    "('org.apache.commons.math4.analysis.solvers#FieldBracketingNthOrderBrentSolverTest', 'check(RealFieldUnivariateFunction,int,double,double,AllowedSolution)')": [
                        130
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/distribution/EmpiricalDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math4.distribution#EmpiricalDistributionTest', 'setUp')": [
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.distribution#EmpiricalDistributionTest', 'setUp')": [
                        59
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/distribution/EnumeratedRealDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math4.distribution#EnumeratedRealDistributionTest', 'testIssue942')": [
                        198,
                        202
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.distribution#EnumeratedRealDistributionTest', 'testIssue942')": [
                        198,
                        202
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/distribution/RealDistributionAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math4.distribution#RealDistributionAbstractTest', 'testDensityIntegrals')": [
                        363
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.distribution#RealDistributionAbstractTest', 'testDensityIntegrals')": [
                        363
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/distribution/fitting/MultivariateNormalMixtureExpectationMaximizationTest.java": {
                "old": {
                    "('org.apache.commons.math4.distribution.fitting#MultivariateNormalMixtureExpectationMaximizationTest', 'testIncompatibleIntialMixture')": [
                        132,
                        133,
                        135
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.distribution.fitting#MultivariateNormalMixtureExpectationMaximizationTest', 'testIncompatibleIntialMixture')": [
                        132,
                        133,
                        135
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/exception/util/ArgUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math4.exception.util#ArgUtilsTest', 'testFlatten')": [
                        33
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.exception.util#ArgUtilsTest', 'testFlatten')": [
                        33
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/HarmonicCurveFitterTest.java": {
                "old": {
                    "('org.apache.commons.math4.fitting#HarmonicCurveFitterTest', 'testMath844')": [
                        173
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.fitting#HarmonicCurveFitterTest', 'testMath844')": [
                        173
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/CircleProblem.java": {
                "old": {
                    "('org.apache.commons.math4.fitting.leastsquares#CircleProblem', None)": [
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#CircleProblem', None)": [
                        60
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/CircleVectorial.java": {
                "old": {
                    "('org.apache.commons.math4.fitting.leastsquares#CircleVectorial', None)": [
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#CircleVectorial', None)": [
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/EvaluationTest.java": {
                "old": {
                    "('org.apache.commons.math4.fitting.leastsquares#EvaluationTest', 'testLazyEvaluationPrecondition')": [
                        265,
                        279
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#EvaluationTest', 'testLazyEvaluationPrecondition')": [
                        265,
                        279
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/EvaluationTestValidation.java": {
                "old": {
                    "('org.apache.commons.math4.fitting.leastsquares#EvaluationTestValidation', 'testParametersErrorMonteCarloParameters')": [
                        235
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#EvaluationTestValidation', 'testParametersErrorMonteCarloParameters')": [
                        235
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math4.fitting.leastsquares#LevenbergMarquardtOptimizerTest', None)": [
                        363,
                        364
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#LevenbergMarquardtOptimizerTest', None)": [
                        363,
                        364
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/StatisticalReferenceDataset.java": {
                "old": {
                    "('org.apache.commons.math4.fitting.leastsquares#StatisticalReferenceDataset', None)": [
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#StatisticalReferenceDataset', None)": [
                        71
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/fitting/leastsquares/StraightLineProblem.java": {
                "old": {
                    "('org.apache.commons.math4.fitting.leastsquares#StraightLineProblem', None)": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.fitting.leastsquares#StraightLineProblem', None)": [
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/ChromosomeTest.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#ChromosomeTest', 'testFindSameChromosome')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#ChromosomeTest', 'testFindSameChromosome')": [
                        95
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/FitnessCachingTest.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#FitnessCachingTest', 'randomPopulation')": [
                        84
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#FitnessCachingTest', 'randomPopulation')": [
                        84
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/GeneticAlgorithmTestBinary.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#GeneticAlgorithmTestBinary', 'randomPopulation')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#GeneticAlgorithmTestBinary', 'randomPopulation')": [
                        95
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/GeneticAlgorithmTestPermutations.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#GeneticAlgorithmTestPermutations', None)": [
                        56
                    ],
                    "('org.apache.commons.math4.genetics#GeneticAlgorithmTestPermutations', 'randomPopulation')": [
                        104
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#GeneticAlgorithmTestPermutations', None)": [
                        56
                    ],
                    "('org.apache.commons.math4.genetics#GeneticAlgorithmTestPermutations', 'randomPopulation')": [
                        104
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/ListPopulationTest.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testGetFittestChromosome')": [
                        53
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testChromosomes')": [
                        70
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testChromosomeListConstructorPopulationLimitNotPositive')": [
                        115
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testConstructorListOfChromosomesBiggerThanPopulationSize')": [
                        127
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testAddTooManyChromosomes')": [
                        141
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testIterator')": [
                        173
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testSetPopulationLimitTooSmall')": [
                        196
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testGetFittestChromosome')": [
                        53
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testChromosomes')": [
                        70
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testChromosomeListConstructorPopulationLimitNotPositive')": [
                        115
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testConstructorListOfChromosomesBiggerThanPopulationSize')": [
                        127
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testAddTooManyChromosomes')": [
                        141
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testIterator')": [
                        173
                    ],
                    "('org.apache.commons.math4.genetics#ListPopulationTest', 'testSetPopulationLimitTooSmall')": [
                        196
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/NPointCrossoverTest.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#NPointCrossoverTest', 'testCrossover')": [
                        97
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#NPointCrossoverTest', 'testCrossover')": [
                        97
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/OnePointCrossoverTest.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#OnePointCrossoverTest', 'testCrossover')": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#OnePointCrossoverTest', 'testCrossover')": [
                        37
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/OrderedCrossoverTest.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#OrderedCrossoverTest', 'testCrossover')": [
                        45,
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#OrderedCrossoverTest', 'testCrossover')": [
                        45,
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/genetics/UniformCrossoverTest.java": {
                "old": {
                    "('org.apache.commons.math4.genetics#UniformCrossoverTest', None)": [
                        36,
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.genetics#UniformCrossoverTest', None)": [
                        36,
                        37
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/enclosing/WelzlEncloser2DTest.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser2DTest', 'testNullList')": [
                        40
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser2DTest', 'testNoPoints')": [
                        49
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser2DTest', 'testLargeSamples')": [
                        90
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser2DTest', 'buildList(double)')": [
                        101
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser2DTest', 'checkDisk(List,List)')": [
                        132
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser2DTest', 'checkDisk(List)')": [
                        154
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser2DTest', 'testNullList')": [
                        40
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser2DTest', 'testNoPoints')": [
                        49
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser2DTest', 'testLargeSamples')": [
                        90
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser2DTest', 'buildList(double)')": [
                        101
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser2DTest', 'checkDisk(List,List)')": [
                        132
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser2DTest', 'checkDisk(List)')": [
                        154
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/enclosing/WelzlEncloser3DTest.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser3DTest', 'testNullList')": [
                        42
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser3DTest', 'testNoPoints')": [
                        51
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser3DTest', 'testReducingBall')": [
                        71
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser3DTest', 'testInfiniteLoop')": [
                        100
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser3DTest', 'testLargeSamples')": [
                        118
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser3DTest', 'checkSphere(List,double)')": [
                        139
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser3DTest', 'checkSphere(List)')": [
                        162
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser3DTest', 'testNullList')": [
                        42
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser3DTest', 'testNoPoints')": [
                        51
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser3DTest', 'testReducingBall')": [
                        71
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser3DTest', 'testInfiniteLoop')": [
                        100
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser3DTest', 'testLargeSamples')": [
                        118
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser3DTest', 'checkSphere(List,double)')": [
                        139
                    ],
                    "('org.apache.commons.math4.geometry.enclosing#WelzlEncloser3DTest', 'checkSphere(List)')": [
                        162
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/oned/IntervalsSetTest.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.oned#IntervalsSetTest', 'testMultiple')": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.oned#IntervalsSetTest', 'testMultiple')": [
                        69
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/threed/FieldRotationDSTest.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testAxisAngleDeprecated')": [
                        70,
                        79,
                        84,
                        88
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testAxisAngleVectorOperator')": [
                        99,
                        111,
                        118,
                        125
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testAxisAngleFrameTransform')": [
                        140,
                        152,
                        159,
                        166
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testVectorOnePair')": [
                        399,
                        402,
                        405
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testVectorTwoPairs')": [
                        420,
                        424,
                        434,
                        439,
                        442,
                        445
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testMatrix')": [
                        575,
                        577,
                        579
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testAnglesDeprecated')": [
                        613,
                        635
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testAngles')": [
                        665,
                        689
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testSingularities')": [
                        719,
                        742
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testQuaternion')": [
                        762,
                        766
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testApplyToRotation')": [
                        792,
                        795
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testComposeVectorOperator')": [
                        820,
                        823
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testComposeFrameTransform')": [
                        849,
                        852
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testApplyInverseToRotation')": [
                        878,
                        881
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testComposeInverseVectorOperator')": [
                        906,
                        909
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testComposeInverseframeTransform')": [
                        935,
                        938
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testDoubleVectors')": [
                        968,
                        986,
                        988
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testDoubleRotations')": [
                        1005,
                        1011
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testDerivatives')": [
                        1051
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testArray')": [
                        1117
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testApplyInverseTo')": [
                        1147,
                        1180
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testIssue639')": [
                        1203
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testIssue801')": [
                        1218
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'createRotation(double,double,double,double,boolean)')": [
                        1240
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'createRotation(double,double)')": [
                        1256
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'createVector(double,double,double)')": [
                        1260
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'createAxis(double,double,double)')": [
                        1266
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testAxisAngleDeprecated')": [
                        70,
                        79,
                        84,
                        88
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testAxisAngleVectorOperator')": [
                        99,
                        111,
                        118,
                        125
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testAxisAngleFrameTransform')": [
                        140,
                        152,
                        159,
                        166
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testVectorOnePair')": [
                        399,
                        402,
                        405
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testVectorTwoPairs')": [
                        420,
                        424,
                        434,
                        439,
                        442,
                        445
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testMatrix')": [
                        575,
                        577,
                        579
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testAnglesDeprecated')": [
                        613,
                        635
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testAngles')": [
                        665,
                        689
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testSingularities')": [
                        719,
                        742
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testQuaternion')": [
                        762,
                        766
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testApplyToRotation')": [
                        792,
                        795
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testComposeVectorOperator')": [
                        820,
                        823
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testComposeFrameTransform')": [
                        849,
                        852
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testApplyInverseToRotation')": [
                        878,
                        881
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testComposeInverseVectorOperator')": [
                        906,
                        909
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testComposeInverseframeTransform')": [
                        935,
                        938
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testDoubleVectors')": [
                        968,
                        986,
                        988
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testDoubleRotations')": [
                        1005,
                        1011
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testDerivatives')": [
                        1051
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testArray')": [
                        1117
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testApplyInverseTo')": [
                        1147,
                        1180
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testIssue639')": [
                        1203
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'testIssue801')": [
                        1218
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'createRotation(double,double,double,double,boolean)')": [
                        1240
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'createRotation(double,double)')": [
                        1256
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'createVector(double,double,double)')": [
                        1260
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDSTest', 'createAxis(double,double,double)')": [
                        1266
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/threed/FieldRotationDfpTest.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testAxisAngleDeprecated')": [
                        69,
                        78,
                        83,
                        87
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testAxisAngleVectorOperator')": [
                        98,
                        110,
                        117,
                        124
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testAxisAngleFrameTransform')": [
                        139,
                        151,
                        158,
                        165
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testVectorOnePair')": [
                        239,
                        242,
                        245
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testVectorTwoPairs')": [
                        260,
                        264,
                        274,
                        279,
                        282,
                        285
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testMatrix')": [
                        415,
                        417,
                        419
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testAnglesDeprecated')": [
                        455,
                        477
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testAngles')": [
                        508,
                        531
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testSingularities')": [
                        561,
                        583
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testQuaternion')": [
                        603,
                        607
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testApplyToRotation')": [
                        629,
                        632
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testComposeVectorOperator')": [
                        657,
                        660
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testComposeFrameTransform')": [
                        686,
                        689
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testApplyInverseToRotation')": [
                        717,
                        720
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testComposeInverseVectorOperator')": [
                        745,
                        748
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testComposeInverseFrameTransform')": [
                        774,
                        777
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testDoubleVectors')": [
                        809,
                        827,
                        829
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testDoubleRotations')": [
                        847,
                        853
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testArray')": [
                        884
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testApplyInverseTo')": [
                        914,
                        947
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testIssue639')": [
                        968
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testIssue801')": [
                        983
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'createRotation(double,double,double,double,boolean)')": [
                        1006
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'createRotation(double,double)')": [
                        1021
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'createVector(double,double,double)')": [
                        1026
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'createAxis(double,double,double)')": [
                        1031
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testAxisAngleDeprecated')": [
                        69,
                        78,
                        83,
                        87
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testAxisAngleVectorOperator')": [
                        98,
                        110,
                        117,
                        124
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testAxisAngleFrameTransform')": [
                        139,
                        151,
                        158,
                        165
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testVectorOnePair')": [
                        239,
                        242,
                        245
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testVectorTwoPairs')": [
                        260,
                        264,
                        274,
                        279,
                        282,
                        285
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testMatrix')": [
                        415,
                        417,
                        419
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testAnglesDeprecated')": [
                        455,
                        477
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testAngles')": [
                        508,
                        531
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testSingularities')": [
                        561,
                        583
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testQuaternion')": [
                        603,
                        607
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testApplyToRotation')": [
                        629,
                        632
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testComposeVectorOperator')": [
                        657,
                        660
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testComposeFrameTransform')": [
                        686,
                        689
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testApplyInverseToRotation')": [
                        717,
                        720
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testComposeInverseVectorOperator')": [
                        745,
                        748
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testComposeInverseFrameTransform')": [
                        774,
                        777
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testDoubleVectors')": [
                        809,
                        827,
                        829
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testDoubleRotations')": [
                        847,
                        853
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testArray')": [
                        884
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testApplyInverseTo')": [
                        914,
                        947
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testIssue639')": [
                        968
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'testIssue801')": [
                        983
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'createRotation(double,double,double,double,boolean)')": [
                        1006
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'createRotation(double,double)')": [
                        1021
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'createVector(double,double,double)')": [
                        1026
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldRotationDfpTest', 'createAxis(double,double,double)')": [
                        1031
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/threed/FieldVector3DTest.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3DTest', 'testConstructors')": [
                        45,
                        46,
                        56,
                        58,
                        61,
                        65,
                        68,
                        73,
                        79,
                        83,
                        90,
                        98,
                        103,
                        112,
                        122
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3DTest', 'testEquals')": [
                        136,
                        139,
                        142,
                        145
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3DTest', 'testWrongDimension')": [
                        188
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3DTest', 'testCrossProductCancellation')": [
                        479,
                        480
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3DTest', 'testAccurateCrossProduct')": [
                        641
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3DTest', 'createVector(double,double,double,int)')": [
                        683
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3DTest', 'testConstructors')": [
                        45,
                        46,
                        56,
                        58,
                        61,
                        65,
                        68,
                        73,
                        79,
                        83,
                        90,
                        98,
                        103,
                        112,
                        122
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3DTest', 'testEquals')": [
                        136,
                        139,
                        142,
                        145
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3DTest', 'testWrongDimension')": [
                        188
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3DTest', 'testCrossProductCancellation')": [
                        479,
                        480
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3DTest', 'testAccurateCrossProduct')": [
                        641
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#FieldVector3DTest', 'createVector(double,double,double,int)')": [
                        683
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/threed/PLYParser.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#PLYParser', 'parseNextLine')": [
                        217
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#PLYParser', 'parseNextLine')": [
                        217
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/threed/PolyhedronsSetTest.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#PolyhedronsSetTest', 'testCross')": [
                        246
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#PolyhedronsSetTest', 'testIssue780')": [
                        276,
                        286
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#PolyhedronsSetTest', 'testCross')": [
                        246
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.threed#PolyhedronsSetTest', 'testIssue780')": [
                        276,
                        286
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/threed/SphereGeneratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#SphereGeneratorTest', 'testRandom')": [
                        147
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.threed#SphereGeneratorTest', 'testRandom')": [
                        147
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/twod/DiskGeneratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#DiskGeneratorTest', 'testRandom')": [
                        112
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#DiskGeneratorTest', 'testRandom')": [
                        112
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/twod/PolygonsSetTest.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSetTest', 'testChoppedHexagon')": [
                        678,
                        680,
                        686
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSetTest', 'testBug20040520')": [
                        729,
                        735,
                        739,
                        743,
                        749,
                        754,
                        760,
                        765,
                        770,
                        774,
                        779,
                        784,
                        789,
                        794,
                        798,
                        802,
                        807
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSetTest', 'testBug20041003')": [
                        869,
                        877,
                        885,
                        892
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSetTest', 'testThinRectangle')": [
                        1129
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSetTest', 'buildSet(Vector2D)')": [
                        1239
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSetTest', 'testChoppedHexagon')": [
                        678,
                        680,
                        686
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSetTest', 'testBug20040520')": [
                        729,
                        735,
                        739,
                        743,
                        749,
                        754,
                        760,
                        765,
                        770,
                        774,
                        779,
                        784,
                        789,
                        794,
                        798,
                        802,
                        807
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSetTest', 'testBug20041003')": [
                        869,
                        877,
                        885,
                        892
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSetTest', 'testThinRectangle')": [
                        1129
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod#PolygonsSetTest', 'buildSet(Vector2D)')": [
                        1239
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/twod/hull/ConvexHullGenerator2DAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testAllIdentical')": [
                        96
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testCollinearPoints')": [
                        121
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testCollinearPointsReverse')": [
                        134
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testCollinearPointsIncluded')": [
                        147
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testCollinearPointsIncludedReverse')": [
                        160
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testIdenticalPoints')": [
                        173
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testIdenticalPoints2')": [
                        186
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testClosePoints')": [
                        199
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testCollinearPointOnExistingBoundary')": [
                        214
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testCollinearPointsInAnyOrder')": [
                        236
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testIssue1123')": [
                        273
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'createRandomPoints(int)')": [
                        370
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testAllIdentical')": [
                        96
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testCollinearPoints')": [
                        121
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testCollinearPointsReverse')": [
                        134
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testCollinearPointsIncluded')": [
                        147
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testCollinearPointsIncludedReverse')": [
                        160
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testIdenticalPoints')": [
                        173
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testIdenticalPoints2')": [
                        186
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testClosePoints')": [
                        199
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testCollinearPointOnExistingBoundary')": [
                        214
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testCollinearPointsInAnyOrder')": [
                        236
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'testIssue1123')": [
                        273
                    ],
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#ConvexHullGenerator2DAbstractTest', 'createRandomPoints(int)')": [
                        370
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/euclidean/twod/hull/MonotoneChainTest.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#MonotoneChainTest', 'testConvergenceException')": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.euclidean.twod.hull#MonotoneChainTest', 'testConvergenceException')": [
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/partitioning/RegionParser.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.partitioning#RegionParser', None)": [
                        214
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.partitioning#RegionParser', None)": [
                        214
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/spherical/oned/ArcsSetTest.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSetTest', 'testSpecialConstruction')": [
                        173
                    ],
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSetTest', 'testMultiple')": [
                        274
                    ],
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSetTest', 'testShiftedAngles')": [
                        350,
                        352
                    ],
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSetTest', 'testInconsistentState')": [
                        374,
                        376,
                        377
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSetTest', 'testSpecialConstruction')": [
                        173
                    ],
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSetTest', 'testMultiple')": [
                        274
                    ],
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSetTest', 'testShiftedAngles')": [
                        350,
                        352
                    ],
                    "('org.apache.commons.math4.geometry.spherical.oned#ArcsSetTest', 'testInconsistentState')": [
                        374,
                        376,
                        377
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/spherical/twod/SphericalPolygonsSetTest.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testPositiveOctantByIntersection')": [
                        116
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testNonConvex')": [
                        206
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testModeratlyComplexShape')": [
                        276
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testSeveralParts')": [
                        333
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testConcentricSubParts')": [
                        416
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testGeographicalMap')": [
                        477
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'create(Vector3D,Vector3D,Vector3D,double,double)')": [
                        535
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testPositiveOctantByIntersection')": [
                        116
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testNonConvex')": [
                        206
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testModeratlyComplexShape')": [
                        276
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testSeveralParts')": [
                        333
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testConcentricSubParts')": [
                        416
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'testGeographicalMap')": [
                        477
                    ],
                    "('org.apache.commons.math4.geometry.spherical.twod#SphericalPolygonsSetTest', 'create(Vector3D,Vector3D,Vector3D,double,double)')": [
                        535
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/geometry/spherical/twod/SubCircleTest.java": {
                "old": {
                    "('org.apache.commons.math4.geometry.spherical.twod#SubCircleTest', 'create(Vector3D,Vector3D,Vector3D,double,double)')": [
                        130
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.geometry.spherical.twod#SubCircleTest', 'create(Vector3D,Vector3D,Vector3D,double,double)')": [
                        130
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/ArrayFieldVectorTest.java": {
                "old": {
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', None)": [
                        142
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testConstructors')": [
                        266,
                        269,
                        273,
                        277,
                        281,
                        285,
                        291,
                        295,
                        299,
                        303,
                        309,
                        313,
                        314,
                        315,
                        319,
                        324,
                        329
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testDataInOut')": [
                        338,
                        339,
                        340,
                        341
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testMapFunctions')": [
                        433
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testBasicFunctions')": [
                        494,
                        495,
                        496,
                        497,
                        498,
                        505
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testMisc')": [
                        563,
                        564,
                        565
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testSerial')": [
                        599
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testZeroVectors')": [
                        608,
                        614,
                        620,
                        627,
                        628,
                        629
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testOuterProduct')": [
                        636,
                        641
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInDefaultOrderPreservingVisitor1')": [
                        678
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInDefaultOrderPreservingVisitor3')": [
                        765
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInOptimizedOrderPreservingVisitor1')": [
                        803
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInOptimizedOrderPreservingVisitor3')": [
                        892
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInDefaultOrderChangingVisitor1')": [
                        932
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInDefaultOrderChangingVisitor3')": [
                        1023
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInOptimizedOrderChangingVisitor1')": [
                        1065
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInOptimizedOrderChangingVisitor3')": [
                        1158
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'create(int)')": [
                        1199
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', None)": [
                        142
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testConstructors')": [
                        266,
                        269,
                        273,
                        277,
                        281,
                        285,
                        291,
                        295,
                        299,
                        303,
                        309,
                        313,
                        314,
                        315,
                        319,
                        324,
                        329
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testDataInOut')": [
                        338,
                        339,
                        340,
                        341
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testMapFunctions')": [
                        433
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testBasicFunctions')": [
                        494,
                        495,
                        496,
                        497,
                        498,
                        505
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testMisc')": [
                        563,
                        564,
                        565
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testSerial')": [
                        599
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testZeroVectors')": [
                        608,
                        614,
                        620,
                        627,
                        628,
                        629
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testOuterProduct')": [
                        636,
                        641
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInDefaultOrderPreservingVisitor1')": [
                        678
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInDefaultOrderPreservingVisitor3')": [
                        765
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInOptimizedOrderPreservingVisitor1')": [
                        803
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInOptimizedOrderPreservingVisitor3')": [
                        892
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInDefaultOrderChangingVisitor1')": [
                        932
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInDefaultOrderChangingVisitor3')": [
                        1023
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInOptimizedOrderChangingVisitor1')": [
                        1065
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'testWalkInOptimizedOrderChangingVisitor3')": [
                        1158
                    ],
                    "('org.apache.commons.math4.linear#ArrayFieldVectorTest', 'create(int)')": [
                        1199
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/BlockFieldMatrixTest.java": {
                "old": {
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testDimensions')": [
                        170,
                        171
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testCopyFunctions')": [
                        185,
                        187,
                        188
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testAdd')": [
                        195,
                        196
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testAddFail')": [
                        209,
                        210
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testPlusMinus')": [
                        222,
                        223,
                        226
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testMultiply')": [
                        236,
                        237,
                        238,
                        239,
                        246
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSeveralBlocks')": [
                        256
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testMultiply2')": [
                        354,
                        355,
                        356
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testTrace')": [
                        363,
                        365
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testScalarAdd')": [
                        377,
                        378
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testOperate')": [
                        385,
                        387,
                        388
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testMath209')": [
                        428
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testTranspose')": [
                        443,
                        444,
                        445,
                        447,
                        448
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testPremultiplyVector')": [
                        455,
                        457,
                        459
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testPremultiply')": [
                        470,
                        471,
                        472,
                        475,
                        476,
                        477,
                        483
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetVectors')": [
                        492
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetEntry')": [
                        511
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testExamples')": [
                        529,
                        536,
                        542,
                        552,
                        557,
                        559
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetSubMatrix')": [
                        578
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'checkGetSubMatrix(FieldMatrix,Fraction,int,int,int,int)')": [
                        601
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'checkGetSubMatrix(FieldMatrix,Fraction,int,int)')": [
                        630
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetSetMatrixLarge')": [
                        657,
                        659
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testCopySubMatrix')": [
                        676
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'checkCopy(FieldMatrix,Fraction,int,int,int,int)')": [
                        703
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'checkCopy(FieldMatrix,Fraction,int,int)')": [
                        730
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetRowMatrix')": [
                        751,
                        752,
                        753
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSetRowMatrix')": [
                        772,
                        773
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetSetRowMatrixLarge')": [
                        795,
                        797
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetColumnMatrix')": [
                        815,
                        816,
                        817
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSetColumnMatrix')": [
                        836,
                        837
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetSetColumnMatrixLarge')": [
                        859,
                        861
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetRowVector')": [
                        879,
                        880,
                        881
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSetRowVector')": [
                        900,
                        901,
                        912
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetSetRowVectorLarge')": [
                        922,
                        923
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetColumnVector')": [
                        941
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSetColumnVector')": [
                        962,
                        974
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetSetColumnVectorLarge')": [
                        984,
                        985
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'columnToVector(Fraction)')": [
                        1006
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetRow')": [
                        1011
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSetRow')": [
                        1030
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetSetRowLarge')": [
                        1051
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetColumn')": [
                        1071
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSetColumn')": [
                        1092
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetSetColumnLarge')": [
                        1114
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testEqualsAndHashCode')": [
                        1149,
                        1158
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testToString')": [
                        1163
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSetSubMatrix')": [
                        1169,
                        1171,
                        1176,
                        1181,
                        1187,
                        1197
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testWalk')": [
                        1255,
                        1261,
                        1275,
                        1281,
                        1295,
                        1301,
                        1315,
                        1321
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSerial')": [
                        1339
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'createRandomMatrix(Random,int,int)')": [
                        1371
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testDimensions')": [
                        170,
                        171
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testCopyFunctions')": [
                        185,
                        187,
                        188
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testAdd')": [
                        195,
                        196
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testAddFail')": [
                        209,
                        210
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testPlusMinus')": [
                        222,
                        223,
                        226
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testMultiply')": [
                        236,
                        237,
                        238,
                        239,
                        246
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSeveralBlocks')": [
                        256
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testMultiply2')": [
                        354,
                        355,
                        356
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testTrace')": [
                        363,
                        365
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testScalarAdd')": [
                        377,
                        378
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testOperate')": [
                        385,
                        387,
                        388
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testMath209')": [
                        428
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testTranspose')": [
                        443,
                        444,
                        445,
                        447,
                        448
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testPremultiplyVector')": [
                        455,
                        457,
                        459
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testPremultiply')": [
                        470,
                        471,
                        472,
                        475,
                        476,
                        477,
                        483
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetVectors')": [
                        492
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetEntry')": [
                        511
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testExamples')": [
                        529,
                        536,
                        542,
                        552,
                        557,
                        559
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetSubMatrix')": [
                        578
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'checkGetSubMatrix(FieldMatrix,Fraction,int,int,int,int)')": [
                        601
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'checkGetSubMatrix(FieldMatrix,Fraction,int,int)')": [
                        630
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetSetMatrixLarge')": [
                        657,
                        659
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testCopySubMatrix')": [
                        676
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'checkCopy(FieldMatrix,Fraction,int,int,int,int)')": [
                        703
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'checkCopy(FieldMatrix,Fraction,int,int)')": [
                        730
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetRowMatrix')": [
                        751,
                        752,
                        753
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSetRowMatrix')": [
                        772,
                        773
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetSetRowMatrixLarge')": [
                        795,
                        797
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetColumnMatrix')": [
                        815,
                        816,
                        817
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSetColumnMatrix')": [
                        836,
                        837
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetSetColumnMatrixLarge')": [
                        859,
                        861
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetRowVector')": [
                        879,
                        880,
                        881
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSetRowVector')": [
                        900,
                        901,
                        912
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetSetRowVectorLarge')": [
                        922,
                        923
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetColumnVector')": [
                        941
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSetColumnVector')": [
                        962,
                        974
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetSetColumnVectorLarge')": [
                        984,
                        985
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'columnToVector(Fraction)')": [
                        1006
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetRow')": [
                        1011
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSetRow')": [
                        1030
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetSetRowLarge')": [
                        1051
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetColumn')": [
                        1071
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSetColumn')": [
                        1092
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testGetSetColumnLarge')": [
                        1114
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testEqualsAndHashCode')": [
                        1149,
                        1158
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testToString')": [
                        1163
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSetSubMatrix')": [
                        1169,
                        1171,
                        1176,
                        1181,
                        1187,
                        1197
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testWalk')": [
                        1255,
                        1261,
                        1275,
                        1281,
                        1295,
                        1301,
                        1315,
                        1321
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'testSerial')": [
                        1339
                    ],
                    "('org.apache.commons.math4.linear#BlockFieldMatrixTest', 'createRandomMatrix(Random,int,int)')": [
                        1371
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/FieldLUDecompositionTest.java": {
                "old": {
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testDimensions')": [
                        63,
                        64
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testNonSquare')": [
                        79
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testPAEqualLU')": [
                        93,
                        94,
                        100,
                        101,
                        107,
                        111,
                        117,
                        118,
                        124,
                        125
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testLLowerTriangular')": [
                        136,
                        137
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testUUpperTriangular')": [
                        149,
                        150
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testPPermutation')": [
                        161,
                        162,
                        166
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testSingular')": [
                        218,
                        220,
                        222
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testMatricesValues1')": [
                        230,
                        231,
                        236,
                        241
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testMatricesValues2')": [
                        271,
                        272,
                        277,
                        282
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testDimensions')": [
                        63,
                        64
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testNonSquare')": [
                        79
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testPAEqualLU')": [
                        93,
                        94,
                        100,
                        101,
                        107,
                        111,
                        117,
                        118,
                        124,
                        125
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testLLowerTriangular')": [
                        136,
                        137
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testUUpperTriangular')": [
                        149,
                        150
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testPPermutation')": [
                        161,
                        162,
                        166
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testSingular')": [
                        218,
                        220,
                        222
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testMatricesValues1')": [
                        230,
                        231,
                        236,
                        241
                    ],
                    "('org.apache.commons.math4.linear#FieldLUDecompositionTest', 'testMatricesValues2')": [
                        271,
                        272,
                        277,
                        282
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/FieldLUSolverTest.java": {
                "old": {
                    "('org.apache.commons.math4.linear#FieldLUSolverTest', 'createFractionMatrix(int)')": [
                        61
                    ],
                    "('org.apache.commons.math4.linear#FieldLUSolverTest', 'testSingular')": [
                        75,
                        78,
                        81
                    ],
                    "('org.apache.commons.math4.linear#FieldLUSolverTest', 'testSolveDimensionErrors')": [
                        90
                    ],
                    "('org.apache.commons.math4.linear#FieldLUSolverTest', 'testSolveSingularityErrors')": [
                        111
                    ],
                    "('org.apache.commons.math4.linear#FieldLUSolverTest', 'testSolve')": [
                        132,
                        162
                    ],
                    "('org.apache.commons.math4.linear#FieldLUSolverTest', 'getDeterminant(FieldMatrix)')": [
                        182
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#FieldLUSolverTest', 'createFractionMatrix(int)')": [
                        61
                    ],
                    "('org.apache.commons.math4.linear#FieldLUSolverTest', 'testSingular')": [
                        75,
                        78,
                        81
                    ],
                    "('org.apache.commons.math4.linear#FieldLUSolverTest', 'testSolveDimensionErrors')": [
                        90
                    ],
                    "('org.apache.commons.math4.linear#FieldLUSolverTest', 'testSolveSingularityErrors')": [
                        111
                    ],
                    "('org.apache.commons.math4.linear#FieldLUSolverTest', 'testSolve')": [
                        132,
                        162
                    ],
                    "('org.apache.commons.math4.linear#FieldLUSolverTest', 'getDeterminant(FieldMatrix)')": [
                        182
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/FieldMatrixImplTest.java": {
                "old": {
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testDimensions')": [
                        112,
                        113
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testCopyFunctions')": [
                        125,
                        126,
                        128,
                        129
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testAdd')": [
                        136,
                        137
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testAddFail')": [
                        150,
                        151
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testPlusMinus')": [
                        163,
                        164,
                        167
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testMultiply')": [
                        177,
                        178,
                        179,
                        180,
                        187
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testMultiply2')": [
                        202,
                        203,
                        204
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testPower')": [
                        210,
                        211,
                        212,
                        213,
                        239
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testTrace')": [
                        257,
                        259
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testScalarAdd')": [
                        271,
                        272
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testOperate')": [
                        278,
                        280,
                        281
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testMath209')": [
                        293
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testTranspose')": [
                        306,
                        307,
                        308,
                        310,
                        311
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testPremultiplyVector')": [
                        318,
                        320,
                        322
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testPremultiply')": [
                        333,
                        334,
                        335,
                        338,
                        339,
                        340,
                        346
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetVectors')": [
                        355
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetEntry')": [
                        374
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testExamples')": [
                        392,
                        399,
                        405,
                        415,
                        420,
                        422
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetSubMatrix')": [
                        438
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'checkGetSubMatrix(FieldMatrix,Fraction,int,int,int,int)')": [
                        461
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'checkGetSubMatrix(FieldMatrix,Fraction,int,int)')": [
                        490
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testCopySubMatrix')": [
                        516
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'checkCopy(FieldMatrix,Fraction,int,int,int,int)')": [
                        543
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'checkCopy(FieldMatrix,Fraction,int,int)')": [
                        570
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetRowMatrix')": [
                        591,
                        592,
                        593
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testSetRowMatrix')": [
                        614,
                        615
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetColumnMatrix')": [
                        635,
                        636,
                        637
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testSetColumnMatrix')": [
                        658,
                        659
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetRowVector')": [
                        679,
                        680,
                        681
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testSetRowVector')": [
                        700,
                        701,
                        712
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetColumnVector')": [
                        721
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testSetColumnVector')": [
                        742,
                        754
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'columnToVector(Fraction)')": [
                        766
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetRow')": [
                        771
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testSetRow')": [
                        790
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetColumn')": [
                        810
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testSetColumn')": [
                        831
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testEqualsAndHashCode')": [
                        867,
                        876
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testToString')": [
                        881,
                        883
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testSetSubMatrix')": [
                        889,
                        891,
                        900,
                        909,
                        945
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testWalk')": [
                        983,
                        989,
                        1003,
                        1009,
                        1023,
                        1029,
                        1043,
                        1049
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testSerial')": [
                        1066
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'permuteRows(FieldMatrix,int)')": [
                        1151
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testDimensions')": [
                        112,
                        113
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testCopyFunctions')": [
                        125,
                        126,
                        128,
                        129
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testAdd')": [
                        136,
                        137
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testAddFail')": [
                        150,
                        151
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testPlusMinus')": [
                        163,
                        164,
                        167
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testMultiply')": [
                        177,
                        178,
                        179,
                        180,
                        187
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testMultiply2')": [
                        202,
                        203,
                        204
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testPower')": [
                        210,
                        211,
                        212,
                        213,
                        239
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testTrace')": [
                        257,
                        259
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testScalarAdd')": [
                        271,
                        272
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testOperate')": [
                        278,
                        280,
                        281
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testMath209')": [
                        293
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testTranspose')": [
                        306,
                        307,
                        308,
                        310,
                        311
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testPremultiplyVector')": [
                        318,
                        320,
                        322
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testPremultiply')": [
                        333,
                        334,
                        335,
                        338,
                        339,
                        340,
                        346
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetVectors')": [
                        355
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetEntry')": [
                        374
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testExamples')": [
                        392,
                        399,
                        405,
                        415,
                        420,
                        422
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetSubMatrix')": [
                        438
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'checkGetSubMatrix(FieldMatrix,Fraction,int,int,int,int)')": [
                        461
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'checkGetSubMatrix(FieldMatrix,Fraction,int,int)')": [
                        490
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testCopySubMatrix')": [
                        516
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'checkCopy(FieldMatrix,Fraction,int,int,int,int)')": [
                        543
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'checkCopy(FieldMatrix,Fraction,int,int)')": [
                        570
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetRowMatrix')": [
                        591,
                        592,
                        593
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testSetRowMatrix')": [
                        614,
                        615
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetColumnMatrix')": [
                        635,
                        636,
                        637
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testSetColumnMatrix')": [
                        658,
                        659
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetRowVector')": [
                        679,
                        680,
                        681
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testSetRowVector')": [
                        700,
                        701,
                        712
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetColumnVector')": [
                        721
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testSetColumnVector')": [
                        742,
                        754
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'columnToVector(Fraction)')": [
                        766
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetRow')": [
                        771
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testSetRow')": [
                        790
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testGetColumn')": [
                        810
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testSetColumn')": [
                        831
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testEqualsAndHashCode')": [
                        867,
                        876
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testToString')": [
                        881,
                        883
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testSetSubMatrix')": [
                        889,
                        891,
                        900,
                        909,
                        945
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testWalk')": [
                        983,
                        989,
                        1003,
                        1009,
                        1023,
                        1029,
                        1043,
                        1049
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'testSerial')": [
                        1066
                    ],
                    "('org.apache.commons.math4.linear#FieldMatrixImplTest', 'permuteRows(FieldMatrix,int)')": [
                        1151
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/MatrixUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math4.linear#MatrixUtilsTest', 'testcreateFieldMatrix')": [
                        107,
                        109
                    ],
                    "('org.apache.commons.math4.linear#MatrixUtilsTest', 'testCreateRowFieldMatrix')": [
                        152,
                        154
                    ],
                    "('org.apache.commons.math4.linear#MatrixUtilsTest', 'testCreateColumnFieldMatrix')": [
                        190,
                        192
                    ],
                    "('org.apache.commons.math4.linear#MatrixUtilsTest', 'testBigFractionConverter')": [
                        271
                    ],
                    "('org.apache.commons.math4.linear#MatrixUtilsTest', 'testFractionConverter')": [
                        284
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#MatrixUtilsTest', 'testcreateFieldMatrix')": [
                        107,
                        109
                    ],
                    "('org.apache.commons.math4.linear#MatrixUtilsTest', 'testCreateRowFieldMatrix')": [
                        152,
                        154
                    ],
                    "('org.apache.commons.math4.linear#MatrixUtilsTest', 'testCreateColumnFieldMatrix')": [
                        190,
                        192
                    ],
                    "('org.apache.commons.math4.linear#MatrixUtilsTest', 'testBigFractionConverter')": [
                        271
                    ],
                    "('org.apache.commons.math4.linear#MatrixUtilsTest', 'testFractionConverter')": [
                        284
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/SparseFieldMatrixTest.java": {
                "old": {
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'testMultiply')": [
                        212
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'testOperate')": [
                        273
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'testTranspose')": [
                        299,
                        300
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'testPremultiplyVector')": [
                        314
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'testExamples')": [
                        395,
                        405,
                        407
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'testGetRowVector')": [
                        528,
                        529
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'columnToVector(Fraction)')": [
                        572
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'testSetSubMatrix')": [
                        656
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'createSparseMatrix(Fraction)')": [
                        705
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'testMultiply')": [
                        212
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'testOperate')": [
                        273
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'testTranspose')": [
                        299,
                        300
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'testPremultiplyVector')": [
                        314
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'testExamples')": [
                        395,
                        405,
                        407
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'testGetRowVector')": [
                        528,
                        529
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'columnToVector(Fraction)')": [
                        572
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'testSetSubMatrix')": [
                        656
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldMatrixTest', 'createSparseMatrix(Fraction)')": [
                        705
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/SparseFieldVectorTest.java": {
                "old": {
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testMapFunctions')": [
                        61
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testBasicFunctions')": [
                        123,
                        124,
                        125,
                        126,
                        133
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testOuterProduct')": [
                        184,
                        189
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testMisc')": [
                        206
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testPredicates')": [
                        223,
                        226,
                        227
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInDefaultOrderPreservingVisitor1')": [
                        263
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInDefaultOrderPreservingVisitor3')": [
                        350
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInOptimizedOrderPreservingVisitor1')": [
                        388
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInOptimizedOrderPreservingVisitor3')": [
                        477
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInDefaultOrderChangingVisitor1')": [
                        517
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInDefaultOrderChangingVisitor3')": [
                        608
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInOptimizedOrderChangingVisitor1')": [
                        650
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInOptimizedOrderChangingVisitor3')": [
                        743
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'create(int)')": [
                        784
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testMapFunctions')": [
                        61
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testBasicFunctions')": [
                        123,
                        124,
                        125,
                        126,
                        133
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testOuterProduct')": [
                        184,
                        189
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testMisc')": [
                        206
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testPredicates')": [
                        223,
                        226,
                        227
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInDefaultOrderPreservingVisitor1')": [
                        263
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInDefaultOrderPreservingVisitor3')": [
                        350
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInOptimizedOrderPreservingVisitor1')": [
                        388
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInOptimizedOrderPreservingVisitor3')": [
                        477
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInDefaultOrderChangingVisitor1')": [
                        517
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInDefaultOrderChangingVisitor3')": [
                        608
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInOptimizedOrderChangingVisitor1')": [
                        650
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'testWalkInOptimizedOrderChangingVisitor3')": [
                        743
                    ],
                    "('org.apache.commons.math4.linear#SparseFieldVectorTest', 'create(int)')": [
                        784
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/linear/UnmodifiableRealVectorAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math4.linear#UnmodifiableRealVectorAbstractTest', None)": [
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.linear#UnmodifiableRealVectorAbstractTest', None)": [
                        56
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/clustering/DBSCANClustererTest.java": {
                "old": {
                    "('org.apache.commons.math4.ml.clustering#DBSCANClustererTest', 'testCluster')": [
                        102
                    ],
                    "('org.apache.commons.math4.ml.clustering#DBSCANClustererTest', 'testSingleLink')": [
                        155
                    ],
                    "('org.apache.commons.math4.ml.clustering#DBSCANClustererTest', 'testGetEps')": [
                        167
                    ],
                    "('org.apache.commons.math4.ml.clustering#DBSCANClustererTest', 'testGetMinPts')": [
                        173
                    ],
                    "('org.apache.commons.math4.ml.clustering#DBSCANClustererTest', 'testNullDataset')": [
                        189
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.clustering#DBSCANClustererTest', 'testCluster')": [
                        102
                    ],
                    "('org.apache.commons.math4.ml.clustering#DBSCANClustererTest', 'testSingleLink')": [
                        155
                    ],
                    "('org.apache.commons.math4.ml.clustering#DBSCANClustererTest', 'testGetEps')": [
                        167
                    ],
                    "('org.apache.commons.math4.ml.clustering#DBSCANClustererTest', 'testGetMinPts')": [
                        173
                    ],
                    "('org.apache.commons.math4.ml.clustering#DBSCANClustererTest', 'testNullDataset')": [
                        189
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/clustering/FuzzyKMeansClustererTest.java": {
                "old": {
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClustererTest', 'testCluster')": [
                        46,
                        55
                    ],
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClustererTest', 'testNullDataset')": [
                        93
                    ],
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClustererTest', 'testGetters')": [
                        102
                    ],
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClustererTest', 'testSingleCluster')": [
                        114,
                        118
                    ],
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClustererTest', 'testClusterCenterEqualsPoints')": [
                        126,
                        133
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClustererTest', 'testCluster')": [
                        46,
                        55
                    ],
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClustererTest', 'testNullDataset')": [
                        93
                    ],
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClustererTest', 'testGetters')": [
                        102
                    ],
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClustererTest', 'testSingleCluster')": [
                        114,
                        118
                    ],
                    "('org.apache.commons.math4.ml.clustering#FuzzyKMeansClustererTest', 'testClusterCenterEqualsPoints')": [
                        126,
                        133
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/clustering/KMeansPlusPlusClustererTest.java": {
                "old": {
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClustererTest', 'testPerformClusterAnalysisDegenerate')": [
                        54
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClustererTest', 'testCertainSpace')": [
                        104
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClustererTest', 'testSmallDistances')": [
                        145,
                        158
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClustererTest', 'testPerformClusterAnalysisToManyClusters')": [
                        178
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClustererTest', 'testPerformClusterAnalysisDegenerate')": [
                        54
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClustererTest', 'testCertainSpace')": [
                        104
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClustererTest', 'testSmallDistances')": [
                        145,
                        158
                    ],
                    "('org.apache.commons.math4.ml.clustering#KMeansPlusPlusClustererTest', 'testPerformClusterAnalysisToManyClusters')": [
                        178
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/clustering/MultiKMeansPlusPlusClustererTest.java": {
                "old": {
                    "('org.apache.commons.math4.ml.clustering#MultiKMeansPlusPlusClustererTest', 'dimension2')": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.clustering#MultiKMeansPlusPlusClustererTest', 'dimension2')": [
                        37
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/clustering/evaluation/SumOfClusterVariancesTest.java": {
                "old": {
                    "('org.apache.commons.math4.ml.clustering.evaluation#SumOfClusterVariancesTest', 'setUp')": [
                        41
                    ],
                    "('org.apache.commons.math4.ml.clustering.evaluation#SumOfClusterVariancesTest', 'testScore')": [
                        58,
                        60,
                        68
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.clustering.evaluation#SumOfClusterVariancesTest', 'setUp')": [
                        41
                    ],
                    "('org.apache.commons.math4.ml.clustering.evaluation#SumOfClusterVariancesTest', 'testScore')": [
                        58,
                        60,
                        68
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/neuralnet/MapUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math4.ml.neuralnet#MapUtilsTest', 'testFindClosestNeuron')": [
                        52,
                        53
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtilsTest', 'testSort')": [
                        100
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.neuralnet#MapUtilsTest', 'testFindClosestNeuron')": [
                        52,
                        53
                    ],
                    "('org.apache.commons.math4.ml.neuralnet#MapUtilsTest', 'testSort')": [
                        100
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/neuralnet/oned/NeuronStringTest.java": {
                "old": {
                    "('org.apache.commons.math4.ml.neuralnet.oned#NeuronStringTest', 'testGetNeighboursWithExclude')": [
                        142
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.neuralnet.oned#NeuronStringTest', 'testGetNeighboursWithExclude')": [
                        142
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/neuralnet/sofm/KohonenTrainingTaskTest.java": {
                "old": {
                    "('org.apache.commons.math4.ml.neuralnet.sofm#KohonenTrainingTaskTest', 'testTravellerSalesmanSquareTourParallelSolver')": [
                        115
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.sofm#KohonenTrainingTaskTest', 'uniqueCities(City)')": [
                        168
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.neuralnet.sofm#KohonenTrainingTaskTest', 'testTravellerSalesmanSquareTourParallelSolver')": [
                        115
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.sofm#KohonenTrainingTaskTest', 'uniqueCities(City)')": [
                        168
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/neuralnet/sofm/TravellingSalesmanSolver.java": {
                "old": {
                    "('org.apache.commons.math4.ml.neuralnet.sofm#TravellingSalesmanSolver', None)": [
                        61
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.sofm#TravellingSalesmanSolver', 'createRandomIterator(long)')": [
                        179
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.sofm#TravellingSalesmanSolver', 'getNeuronList')": [
                        207
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.sofm#TravellingSalesmanSolver', 'getCoordinatesList')": [
                        233
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.neuralnet.sofm#TravellingSalesmanSolver', None)": [
                        61
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.sofm#TravellingSalesmanSolver', 'createRandomIterator(long)')": [
                        179
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.sofm#TravellingSalesmanSolver', 'getNeuronList')": [
                        207
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.sofm#TravellingSalesmanSolver', 'getCoordinatesList')": [
                        233
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ml/neuralnet/twod/NeuronSquareMesh2DTest.java": {
                "old": {
                    "('org.apache.commons.math4.ml.neuralnet.twod#NeuronSquareMesh2DTest', 'testConcentricNeighbourhood')": [
                        577
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod#NeuronSquareMesh2DTest', 'testConcentricNeighbourhood2')": [
                        626
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod#NeuronSquareMesh2DTest', 'testIterator')": [
                        857,
                        863
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ml.neuralnet.twod#NeuronSquareMesh2DTest', 'testConcentricNeighbourhood')": [
                        577
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod#NeuronSquareMesh2DTest', 'testConcentricNeighbourhood2')": [
                        626
                    ],
                    "('org.apache.commons.math4.ml.neuralnet.twod#NeuronSquareMesh2DTest', 'testIterator')": [
                        857,
                        863
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/ContinuousOutputFieldModelTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModelTest', 'doTestBoundaries(Field)')": [
                        45,
                        48,
                        50
                    ],
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModelTest', 'doTestRandomAccess(Field)')": [
                        64,
                        67,
                        68,
                        70
                    ],
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModelTest', 'doTestModelsMerging(Field)')": [
                        120,
                        122,
                        128,
                        129,
                        133,
                        135,
                        140,
                        141,
                        145
                    ],
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModelTest', 'doTestErrorConditions(Field)')": [
                        167
                    ],
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModelTest', 'checkAppendError(Field,ContinuousOutputFieldModel,double,double,double)')": [
                        187
                    ],
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModelTest', 'buildInterpolator(Field,double,double,double)')": [
                        204,
                        205,
                        206,
                        216
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModelTest', 'doTestBoundaries(Field)')": [
                        45,
                        48,
                        50
                    ],
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModelTest', 'doTestRandomAccess(Field)')": [
                        64,
                        67,
                        68,
                        70
                    ],
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModelTest', 'doTestModelsMerging(Field)')": [
                        120,
                        122,
                        128,
                        129,
                        133,
                        135,
                        140,
                        141,
                        145
                    ],
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModelTest', 'doTestErrorConditions(Field)')": [
                        167
                    ],
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModelTest', 'checkAppendError(Field,ContinuousOutputFieldModel,double,double,double)')": [
                        187
                    ],
                    "('org.apache.commons.math4.ode#ContinuousOutputFieldModelTest', 'buildInterpolator(Field,double,double,double)')": [
                        204,
                        205,
                        206,
                        216
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/FieldExpandableODETest.java": {
                "old": {
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', 'doTestOnlyMainEquation(Field)')": [
                        42,
                        43
                    ],
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', 'doTestMainAndSecondary(Field)')": [
                        73,
                        74,
                        75,
                        76,
                        77
                    ],
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', 'doTestMap(Field)')": [
                        130,
                        131,
                        132,
                        133,
                        134
                    ],
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', 'doTestExtractDimensionMismatch(Field)')": [
                        218,
                        219,
                        220
                    ],
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', 'doTestInsertTooShortComplete(Field)')": [
                        234,
                        235,
                        236
                    ],
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', 'doTestInsertWrongEquationData(Field)')": [
                        251,
                        252,
                        253
                    ],
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', 'doTestNegativeIndex(Field)')": [
                        268,
                        269
                    ],
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', 'doTestTooLargeIndex(Field)')": [
                        282,
                        283
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', 'doTestOnlyMainEquation(Field)')": [
                        42,
                        43
                    ],
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', 'doTestMainAndSecondary(Field)')": [
                        73,
                        74,
                        75,
                        76,
                        77
                    ],
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', 'doTestMap(Field)')": [
                        130,
                        131,
                        132,
                        133,
                        134
                    ],
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', 'doTestExtractDimensionMismatch(Field)')": [
                        218,
                        219,
                        220
                    ],
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', 'doTestInsertTooShortComplete(Field)')": [
                        234,
                        235,
                        236
                    ],
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', 'doTestInsertWrongEquationData(Field)')": [
                        251,
                        252,
                        253
                    ],
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', 'doTestNegativeIndex(Field)')": [
                        268,
                        269
                    ],
                    "('org.apache.commons.math4.ode#FieldExpandableODETest', 'doTestTooLargeIndex(Field)')": [
                        282,
                        283
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/TestFieldProblem4.java": {
                "old": {
                    "('org.apache.commons.math4.ode#TestFieldProblem4', 'getEventsHandlers')": [
                        70,
                        71
                    ],
                    "('org.apache.commons.math4.ode#TestFieldProblem4', None)": [
                        133
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#TestFieldProblem4', 'getEventsHandlers')": [
                        70,
                        71
                    ],
                    "('org.apache.commons.math4.ode#TestFieldProblem4', None)": [
                        133
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/TestFieldProblemAbstract.java": {
                "old": {
                    "('org.apache.commons.math4.ode#TestFieldProblemAbstract', 'getInitialState')": [
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode#TestFieldProblemAbstract', 'getInitialState')": [
                        117
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/events/OverlappingEventsTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.events#OverlappingEventsTest', 'test(int)')": [
                        93,
                        94
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.events#OverlappingEventsTest', 'test(int)')": [
                        93,
                        94
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/AbstractEmbeddedRungeKuttaFieldIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestForwardBackwardExceptions(Field)')": [
                        155,
                        156,
                        165,
                        166
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestMinStep(Field)')": [
                        185,
                        193,
                        195
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestIncreasingTolerance(Field,double,double)')": [
                        209,
                        217,
                        219
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestEvents(Field,double,String)')": [
                        240,
                        248,
                        256
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestEventsErrors(Field)')": [
                        272,
                        280,
                        302
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestEventsNoConvergence(Field)')": [
                        311,
                        319,
                        339
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestSanityChecks(Field)')": [
                        351,
                        356,
                        357,
                        368,
                        377
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestBackward(Field,double,double,double,String)')": [
                        394,
                        403,
                        405
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestKepler(Field,double)')": [
                        419,
                        427,
                        428
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestPartialDerivatives(double,double)')": [
                        489,
                        490
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestForwardBackwardExceptions(Field)')": [
                        155,
                        156,
                        165,
                        166
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestMinStep(Field)')": [
                        185,
                        193,
                        195
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestIncreasingTolerance(Field,double,double)')": [
                        209,
                        217,
                        219
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestEvents(Field,double,String)')": [
                        240,
                        248,
                        256
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestEventsErrors(Field)')": [
                        272,
                        280,
                        302
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestEventsNoConvergence(Field)')": [
                        311,
                        319,
                        339
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestSanityChecks(Field)')": [
                        351,
                        356,
                        357,
                        368,
                        377
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestBackward(Field,double,double,double,String)')": [
                        394,
                        403,
                        405
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestKepler(Field,double)')": [
                        419,
                        427,
                        428
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractEmbeddedRungeKuttaFieldIntegratorTest', 'doTestPartialDerivatives(double,double)')": [
                        489,
                        490
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/AbstractRungeKuttaFieldIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestMissedEndEvent(Field,double,double)')": [
                        154,
                        155,
                        183,
                        184
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestSanityChecks(Field)')": [
                        204,
                        205,
                        206,
                        212,
                        213,
                        214
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestDecreasingSteps(Field,double,double,double)')": [
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        249,
                        257
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestSmallStep(Field,double,double,double,String)')": [
                        295,
                        299,
                        301
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestBigStep(Field,double,double,double,String)')": [
                        321,
                        325,
                        327
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestBackward(Field,double,double,double,String)')": [
                        347,
                        351,
                        353
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestKepler(Field,double,double)')": [
                        369,
                        373,
                        374
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestStepSize(Field,double)')": [
                        427,
                        438
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestSingleStep(Field,double)')": [
                        446
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestTooLargeFirstStep(Field)')": [
                        492
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestUnstableDerivative(Field,double)')": [
                        500,
                        506,
                        507
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestDerivativesConsistency(Field,double)')": [
                        516
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestPartialDerivatives(double,double)')": [
                        549,
                        550
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestMissedEndEvent(Field,double,double)')": [
                        154,
                        155,
                        183,
                        184
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestSanityChecks(Field)')": [
                        204,
                        205,
                        206,
                        212,
                        213,
                        214
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestDecreasingSteps(Field,double,double,double)')": [
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        249,
                        257
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestSmallStep(Field,double,double,double,String)')": [
                        295,
                        299,
                        301
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestBigStep(Field,double,double,double,String)')": [
                        321,
                        325,
                        327
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestBackward(Field,double,double,double,String)')": [
                        347,
                        351,
                        353
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestKepler(Field,double,double)')": [
                        369,
                        373,
                        374
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestStepSize(Field,double)')": [
                        427,
                        438
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestSingleStep(Field,double)')": [
                        446
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestTooLargeFirstStep(Field)')": [
                        492
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestUnstableDerivative(Field,double)')": [
                        500,
                        506,
                        507
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestDerivativesConsistency(Field,double)')": [
                        516
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AbstractRungeKuttaFieldIntegratorTest', 'doTestPartialDerivatives(double,double)')": [
                        549,
                        550
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/AdamsBashforthFieldIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsBashforthFieldIntegratorTest', 'createIntegrator(Field,int,double,double,double,double)')": [
                        34,
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsBashforthFieldIntegratorTest', 'createIntegrator(Field,int,double,double,double,double)')": [
                        34,
                        41
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/AdamsFieldIntegratorAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldIntegratorAbstractTest', 'doDimensionCheck(Field)')": [
                        57,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldIntegratorAbstractTest', 'doTestIncreasingTolerance(Field,double,double)')": [
                        81,
                        90,
                        92
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldIntegratorAbstractTest', 'doExceedMaxEvaluations(Field,int)')": [
                        111,
                        115,
                        118
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldIntegratorAbstractTest', 'doBackward(Field,double,double,double,String)')": [
                        131,
                        135,
                        136,
                        137
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldIntegratorAbstractTest', 'doPolynomial(Field,int,double,double)')": [
                        152,
                        157,
                        158,
                        160
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldIntegratorAbstractTest', 'doTestStartFailure(Field)')": [
                        174,
                        183,
                        184,
                        185,
                        186
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldIntegratorAbstractTest', None)": [
                        197,
                        255
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldIntegratorAbstractTest', 'doDimensionCheck(Field)')": [
                        57,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldIntegratorAbstractTest', 'doTestIncreasingTolerance(Field,double,double)')": [
                        81,
                        90,
                        92
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldIntegratorAbstractTest', 'doExceedMaxEvaluations(Field,int)')": [
                        111,
                        115,
                        118
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldIntegratorAbstractTest', 'doBackward(Field,double,double,double,String)')": [
                        131,
                        135,
                        136,
                        137
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldIntegratorAbstractTest', 'doPolynomial(Field,int,double,double)')": [
                        152,
                        157,
                        158,
                        160
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldIntegratorAbstractTest', 'doTestStartFailure(Field)')": [
                        174,
                        183,
                        184,
                        185,
                        186
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#AdamsFieldIntegratorAbstractTest', None)": [
                        197,
                        255
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/AdamsMoultonFieldIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsMoultonFieldIntegratorTest', 'createIntegrator(Field,int,double,double,double,double)')": [
                        34,
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#AdamsMoultonFieldIntegratorTest', 'createIntegrator(Field,int,double,double,double,double)')": [
                        34,
                        41
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/ClassicalRungKuttaFieldStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungKuttaFieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        37
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungKuttaFieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungKuttaFieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        37
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungKuttaFieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/ClassicalRungeKuttaFieldIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungeKuttaFieldIntegratorTest', 'createIntegrator(Field,T)')": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#ClassicalRungeKuttaFieldIntegratorTest', 'createIntegrator(Field,T)')": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/DormandPrince54FieldIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54FieldIntegratorTest', 'createIntegrator(Field,double,double,double,double)')": [
                        30,
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54FieldIntegratorTest', 'createIntegrator(Field,double,double,double,double)')": [
                        30,
                        36
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/DormandPrince54FieldStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54FieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        37
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54FieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54FieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        37
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince54FieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/DormandPrince853FieldIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853FieldIntegratorTest', 'createIntegrator(Field,double,double,double,double)')": [
                        30,
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853FieldIntegratorTest', 'createIntegrator(Field,double,double,double,double)')": [
                        30,
                        36
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/DormandPrince853FieldStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853FieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        37
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853FieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853FieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        37
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#DormandPrince853FieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/EmbeddedRungeKuttaFieldIntegratorAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestForwardBackwardExceptions(Field)')": [
                        155,
                        156,
                        165,
                        166
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestMinStep(Field)')": [
                        185,
                        193,
                        195
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestIncreasingTolerance(Field,double,double)')": [
                        209,
                        217,
                        219
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestEvents(Field,double,String)')": [
                        240,
                        248,
                        256
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestEventsErrors(Field)')": [
                        272,
                        280,
                        302
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestEventsNoConvergence(Field)')": [
                        311,
                        319,
                        339
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestSanityChecks(Field)')": [
                        351,
                        356,
                        357,
                        368,
                        377
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestBackward(Field,double,double,double,String)')": [
                        394,
                        403,
                        405
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestKepler(Field,double)')": [
                        419,
                        427,
                        428
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestPartialDerivatives(double,double)')": [
                        489,
                        490
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestForwardBackwardExceptions(Field)')": [
                        155,
                        156,
                        165,
                        166
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestMinStep(Field)')": [
                        185,
                        193,
                        195
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestIncreasingTolerance(Field,double,double)')": [
                        209,
                        217,
                        219
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestEvents(Field,double,String)')": [
                        240,
                        248,
                        256
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestEventsErrors(Field)')": [
                        272,
                        280,
                        302
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestEventsNoConvergence(Field)')": [
                        311,
                        319,
                        339
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestSanityChecks(Field)')": [
                        351,
                        356,
                        357,
                        368,
                        377
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestBackward(Field,double,double,double,String)')": [
                        394,
                        403,
                        405
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestKepler(Field,double)')": [
                        419,
                        427,
                        428
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EmbeddedRungeKuttaFieldIntegratorAbstractTest', 'doTestPartialDerivatives(double,double)')": [
                        489,
                        490
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/EulerFieldIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#EulerFieldIntegratorTest', 'createIntegrator(Field,T)')": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#EulerFieldIntegratorTest', 'createIntegrator(Field,T)')": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/EulerFieldStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#EulerFieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        36
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EulerFieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#EulerFieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        36
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#EulerFieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        44
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/GillFieldIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#GillFieldIntegratorTest', 'createIntegrator(Field,T)')": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#GillFieldIntegratorTest', 'createIntegrator(Field,T)')": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/GillFieldStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#GillFieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        37
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#GillFieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#GillFieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        37
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#GillFieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/HighamHall54FieldIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54FieldIntegratorTest', 'createIntegrator(Field,double,double,double,double)')": [
                        30,
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54FieldIntegratorTest', 'createIntegrator(Field,double,double,double,double)')": [
                        30,
                        36
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/HighamHall54FieldStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54FieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        37
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54FieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54FieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        37
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#HighamHall54FieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/LutherFieldIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#LutherFieldIntegratorTest', 'createIntegrator(Field,T)')": [
                        33
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#LutherFieldIntegratorTest', 'createIntegrator(Field,T)')": [
                        33
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/LutherFieldStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#LutherFieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        37
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#LutherFieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#LutherFieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        37
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#LutherFieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/MidpointFieldIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#MidpointFieldIntegratorTest', 'createIntegrator(Field,T)')": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#MidpointFieldIntegratorTest', 'createIntegrator(Field,T)')": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/MidpointFieldStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#MidpointFieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        37
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#MidpointFieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#MidpointFieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        37
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#MidpointFieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/RungeKuttaFieldIntegratorAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestMissedEndEvent(Field,double,double)')": [
                        154,
                        155,
                        183,
                        184
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestSanityChecks(Field)')": [
                        204,
                        205,
                        206,
                        212,
                        213,
                        214
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestDecreasingSteps(Field,double,double,double)')": [
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        249,
                        257
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestSmallStep(Field,double,double,double,String)')": [
                        295,
                        299,
                        301
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestBigStep(Field,double,double,double,String)')": [
                        321,
                        325,
                        327
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestBackward(Field,double,double,double,String)')": [
                        347,
                        351,
                        353
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestKepler(Field,double,double)')": [
                        369,
                        373,
                        374
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestStepSize(Field,double)')": [
                        427,
                        438
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestSingleStep(Field,double)')": [
                        446
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestTooLargeFirstStep(Field)')": [
                        492
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestUnstableDerivative(Field,double)')": [
                        500,
                        506,
                        507
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestDerivativesConsistency(Field,double)')": [
                        516
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestPartialDerivatives(double,double)')": [
                        549,
                        550
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestMissedEndEvent(Field,double,double)')": [
                        154,
                        155,
                        183,
                        184
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestSanityChecks(Field)')": [
                        204,
                        205,
                        206,
                        212,
                        213,
                        214
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestDecreasingSteps(Field,double,double,double)')": [
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        249,
                        257
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestSmallStep(Field,double,double,double,String)')": [
                        295,
                        299,
                        301
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestBigStep(Field,double,double,double,String)')": [
                        321,
                        325,
                        327
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestBackward(Field,double,double,double,String)')": [
                        347,
                        351,
                        353
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestKepler(Field,double,double)')": [
                        369,
                        373,
                        374
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestStepSize(Field,double)')": [
                        427,
                        438
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestSingleStep(Field,double)')": [
                        446
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestTooLargeFirstStep(Field)')": [
                        492
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestUnstableDerivative(Field,double)')": [
                        500,
                        506,
                        507
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestDerivativesConsistency(Field,double)')": [
                        516
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldIntegratorAbstractTest', 'doTestPartialDerivatives(double,double)')": [
                        549,
                        550
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/RungeKuttaFieldStepInterpolatorAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldStepInterpolatorAbstractTest', 'doInterpolationAtBounds(Field,double)')": [
                        55
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldStepInterpolatorAbstractTest', 'doInterpolationInside(Field,double,double)')": [
                        80
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldStepInterpolatorAbstractTest', 'doNonFieldInterpolatorConsistency(Field,double,double,double,double)')": [
                        106
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldStepInterpolatorAbstractTest', 'setUpInterpolator(Field,FirstOrderFieldDifferentialEquations,double,double,double)')": [
                        163,
                        185,
                        189
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldStepInterpolatorAbstractTest', 'doInterpolationAtBounds(Field,double)')": [
                        55
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldStepInterpolatorAbstractTest', 'doInterpolationInside(Field,double,double)')": [
                        80
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldStepInterpolatorAbstractTest', 'doNonFieldInterpolatorConsistency(Field,double,double,double,double)')": [
                        106
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#RungeKuttaFieldStepInterpolatorAbstractTest', 'setUpInterpolator(Field,FirstOrderFieldDifferentialEquations,double,double,double)')": [
                        163,
                        185,
                        189
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/ThreeEighthesFieldIntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesFieldIntegratorTest', 'createIntegrator(Field,T)')": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesFieldIntegratorTest', 'createIntegrator(Field,T)')": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/nonstiff/ThreeEighthesFieldStepInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesFieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        37
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesFieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesFieldStepInterpolatorTest', 'createInterpolator(Field,boolean,T,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        37
                    ],
                    "('org.apache.commons.math4.ode.nonstiff#ThreeEighthesFieldStepInterpolatorTest', 'createButcherArrayProvider(Field)')": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/sampling/DummyFieldStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math4.ode.sampling#DummyFieldStepInterpolator', 'create(boolean,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.sampling#DummyFieldStepInterpolator', 'create(boolean,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldODEStateAndDerivative,FieldEquationsMapper)')": [
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/sampling/StepInterpolatorTestUtils.java": {
                "old": {
                    "('org.apache.commons.math4.ode.sampling#StepInterpolatorTestUtils', 'checkDerivativesConsistency(FirstOrderFieldIntegrator,TestFieldProblemAbstract,double)')": [
                        140
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.sampling#StepInterpolatorTestUtils', 'checkDerivativesConsistency(FirstOrderFieldIntegrator,TestFieldProblemAbstract,double)')": [
                        140
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/ode/sampling/StepNormalizerOutputTestBase.java": {
                "old": {
                    "('org.apache.commons.math4.ode.sampling#StepNormalizerOutputTestBase', 'doTest(StepNormalizerMode,StepNormalizerBounds,double,boolean)')": [
                        258
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.ode.sampling#StepNormalizerOutputTestBase', 'doTest(StepNormalizerMode,StepNormalizerBounds,double,boolean)')": [
                        258
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/SimplePointCheckerTest.java": {
                "old": {
                    "('org.apache.commons.math4.optim#SimplePointCheckerTest', 'testIterationCheck')": [
                        35
                    ],
                    "('org.apache.commons.math4.optim#SimplePointCheckerTest', 'testIterationCheckDisabled')": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.optim#SimplePointCheckerTest', 'testIterationCheck')": [
                        35
                    ],
                    "('org.apache.commons.math4.optim#SimplePointCheckerTest', 'testIterationCheckDisabled')": [
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/linear/SimplexSolverTest.java": {
                "old": {
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath842Cycle')": [
                        57
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath828')": [
                        78
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath828Cycle')": [
                        100
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath781')": [
                        123
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath713NegativeVariable')": [
                        142
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath434NegativeVariable')": [
                        157
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath434UnfeasibleSolution')": [
                        177
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath434PivotRowSelection')": [
                        192
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath434PivotRowSelection2')": [
                        208
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath272')": [
                        233
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath286')": [
                        251
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testDegeneracy')": [
                        273
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath288')": [
                        287
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath290GEQ')": [
                        303
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath290LEQ')": [
                        316
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath293')": [
                        326,
                        350
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'createMath930Constraints')": [
                        377
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testSimplexSolver')": [
                        482
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testSingleVariableAndConstraint')": [
                        498
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testModelWithNoArtificialVars')": [
                        515
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMinimization')": [
                        531
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testSolutionWithNegativeDecisionVariable')": [
                        547
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testInfeasibleSolution')": [
                        562
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testUnboundedSolution')": [
                        574
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testRestrictVariablesToNonNegative')": [
                        585
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testEpsilon')": [
                        607
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testTrivialModel')": [
                        624
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testLargeModel')": [
                        660
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testSolutionCallback')": [
                        768
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testDimensionMatch')": [
                        808
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath842Cycle')": [
                        57
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath828')": [
                        78
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath828Cycle')": [
                        100
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath781')": [
                        123
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath713NegativeVariable')": [
                        142
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath434NegativeVariable')": [
                        157
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath434UnfeasibleSolution')": [
                        177
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath434PivotRowSelection')": [
                        192
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath434PivotRowSelection2')": [
                        208
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath272')": [
                        233
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath286')": [
                        251
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testDegeneracy')": [
                        273
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath288')": [
                        287
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath290GEQ')": [
                        303
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath290LEQ')": [
                        316
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMath293')": [
                        326,
                        350
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'createMath930Constraints')": [
                        377
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testSimplexSolver')": [
                        482
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testSingleVariableAndConstraint')": [
                        498
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testModelWithNoArtificialVars')": [
                        515
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testMinimization')": [
                        531
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testSolutionWithNegativeDecisionVariable')": [
                        547
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testInfeasibleSolution')": [
                        562
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testUnboundedSolution')": [
                        574
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testRestrictVariablesToNonNegative')": [
                        585
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testEpsilon')": [
                        607
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testTrivialModel')": [
                        624
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testLargeModel')": [
                        660
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testSolutionCallback')": [
                        768
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexSolverTest', 'testDimensionMatch')": [
                        808
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/linear/SimplexTableauTest.java": {
                "old": {
                    "('org.apache.commons.math4.optim.linear#SimplexTableauTest', 'testTableauWithNoArtificialVars')": [
                        68
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableauTest', 'createConstraints')": [
                        97
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.optim.linear#SimplexTableauTest', 'testTableauWithNoArtificialVars')": [
                        68
                    ],
                    "('org.apache.commons.math4.optim.linear#SimplexTableauTest', 'createConstraints')": [
                        97
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/optim/nonlinear/scalar/gradient/CircleScalar.java": {
                "old": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar.gradient#CircleScalar', None)": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.optim.nonlinear.scalar.gradient#CircleScalar', None)": [
                        35
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/primes/PrimesTest.java": {
                "old": {
                    "('org.apache.commons.math4.primes#PrimesTest', None)": [
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.primes#PrimesTest', None)": [
                        143
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/random/RandomUtilsDataGeneratorAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math4.random#RandomUtilsDataGeneratorAbstractTest', 'testNextSample')": [
                        321,
                        328,
                        345,
                        364
                    ],
                    "('org.apache.commons.math4.random#RandomUtilsDataGeneratorAbstractTest', 'findSample(Object,List)')": [
                        377
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.random#RandomUtilsDataGeneratorAbstractTest', 'testNextSample')": [
                        321,
                        328,
                        345,
                        364
                    ],
                    "('org.apache.commons.math4.random#RandomUtilsDataGeneratorAbstractTest', 'findSample(Object,List)')": [
                        377
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/random/SynchronizedRandomGeneratorTest.java": {
                "old": {
                    "('org.apache.commons.math4.random#SynchronizedRandomGeneratorTest', 'doTestMath899(boolean,int,int,int)')": [
                        96
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.random#SynchronizedRandomGeneratorTest', 'doTestMath899(boolean,int,int,int)')": [
                        96
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/stat/FrequencyTest.java": {
                "old": {
                    "('org.apache.commons.math4.stat#FrequencyTest', 'testMergeCollection')": [
                        370
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat#FrequencyTest', 'testMergeCollection')": [
                        370
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/stat/data/CertifiedDataAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math4.stat.data#CertifiedDataAbstractTest', 'setUp')": [
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.data#CertifiedDataAbstractTest', 'setUp')": [
                        51
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/stat/descriptive/AggregateSummaryStatisticsTest.java": {
                "old": {
                    "('org.apache.commons.math4.stat.descriptive#AggregateSummaryStatisticsTest', 'testAggregate')": [
                        152
                    ],
                    "('org.apache.commons.math4.stat.descriptive#AggregateSummaryStatisticsTest', 'testAggregateStatisticalSummary')": [
                        188
                    ],
                    "('org.apache.commons.math4.stat.descriptive#AggregateSummaryStatisticsTest', 'testAggregateDegenerate')": [
                        218
                    ],
                    "('org.apache.commons.math4.stat.descriptive#AggregateSummaryStatisticsTest', 'testAggregateSpecialValues')": [
                        247
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.descriptive#AggregateSummaryStatisticsTest', 'testAggregate')": [
                        152
                    ],
                    "('org.apache.commons.math4.stat.descriptive#AggregateSummaryStatisticsTest', 'testAggregateStatisticalSummary')": [
                        188
                    ],
                    "('org.apache.commons.math4.stat.descriptive#AggregateSummaryStatisticsTest', 'testAggregateDegenerate')": [
                        218
                    ],
                    "('org.apache.commons.math4.stat.descriptive#AggregateSummaryStatisticsTest', 'testAggregateSpecialValues')": [
                        247
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/stat/descriptive/ListUnivariateImpl.java": {
                "old": {
                    "('org.apache.commons.math4.stat.descriptive#ListUnivariateImpl', None)": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.descriptive#ListUnivariateImpl', None)": [
                        50
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/stat/descriptive/ListUnivariateImplTest.java": {
                "old": {
                    "('org.apache.commons.math4.stat.descriptive#ListUnivariateImplTest', 'testStats')": [
                        52
                    ],
                    "('org.apache.commons.math4.stat.descriptive#ListUnivariateImplTest', 'testN0andN1Conditions')": [
                        75
                    ],
                    "('org.apache.commons.math4.stat.descriptive#ListUnivariateImplTest', 'testProductAndGeometricMean')": [
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.descriptive#ListUnivariateImplTest', 'testStats')": [
                        52
                    ],
                    "('org.apache.commons.math4.stat.descriptive#ListUnivariateImplTest', 'testN0andN1Conditions')": [
                        75
                    ],
                    "('org.apache.commons.math4.stat.descriptive#ListUnivariateImplTest', 'testProductAndGeometricMean')": [
                        108
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/stat/descriptive/MixedListUnivariateImplTest.java": {
                "old": {
                    "('org.apache.commons.math4.stat.descriptive#MixedListUnivariateImplTest', 'testStats')": [
                        62
                    ],
                    "('org.apache.commons.math4.stat.descriptive#MixedListUnivariateImplTest', 'testN0andN1Conditions')": [
                        85
                    ],
                    "('org.apache.commons.math4.stat.descriptive#MixedListUnivariateImplTest', 'testSkewAndKurtosis')": [
                        115
                    ],
                    "('org.apache.commons.math4.stat.descriptive#MixedListUnivariateImplTest', 'testProductAndGeometricMean')": [
                        149
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.descriptive#MixedListUnivariateImplTest', 'testStats')": [
                        62
                    ],
                    "('org.apache.commons.math4.stat.descriptive#MixedListUnivariateImplTest', 'testN0andN1Conditions')": [
                        85
                    ],
                    "('org.apache.commons.math4.stat.descriptive#MixedListUnivariateImplTest', 'testSkewAndKurtosis')": [
                        115
                    ],
                    "('org.apache.commons.math4.stat.descriptive#MixedListUnivariateImplTest', 'testProductAndGeometricMean')": [
                        149
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/stat/descriptive/UnivariateStatisticAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math4.stat.descriptive#UnivariateStatisticAbstractTest', 'testWeightedConsistency')": [
                        196
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.descriptive#UnivariateStatisticAbstractTest', 'testWeightedConsistency')": [
                        196
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/stat/descriptive/rank/PSquarePercentileTest.java": {
                "old": {
                    "('org.apache.commons.math4.stat.descriptive.rank#PSquarePercentileTest', 'testHashCodeInMarkers')": [
                        213,
                        241
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.descriptive.rank#PSquarePercentileTest', 'testHashCodeInMarkers')": [
                        213,
                        241
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/stat/inference/InferenceTestUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math4.stat.inference#InferenceTestUtilsTest', None)": [
                        458
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.inference#InferenceTestUtilsTest', None)": [
                        458
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/stat/inference/OneWayAnovaTest.java": {
                "old": {
                    "('org.apache.commons.math4.stat.inference#OneWayAnovaTest', 'testAnovaFValue')": [
                        50,
                        58,
                        65,
                        75
                    ],
                    "('org.apache.commons.math4.stat.inference#OneWayAnovaTest', 'testAnovaPValue')": [
                        89,
                        97
                    ],
                    "('org.apache.commons.math4.stat.inference#OneWayAnovaTest', 'testAnovaPValueSummaryStatistics')": [
                        109,
                        129
                    ],
                    "('org.apache.commons.math4.stat.inference#OneWayAnovaTest', 'testAnovaTest')": [
                        141,
                        148
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.stat.inference#OneWayAnovaTest', 'testAnovaFValue')": [
                        50,
                        58,
                        65,
                        75
                    ],
                    "('org.apache.commons.math4.stat.inference#OneWayAnovaTest', 'testAnovaPValue')": [
                        89,
                        97
                    ],
                    "('org.apache.commons.math4.stat.inference#OneWayAnovaTest', 'testAnovaPValueSummaryStatistics')": [
                        109,
                        129
                    ],
                    "('org.apache.commons.math4.stat.inference#OneWayAnovaTest', 'testAnovaTest')": [
                        141,
                        148
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/CombinatoricsUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math4.util#CombinatoricsUtilsTest', None)": [
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.util#CombinatoricsUtilsTest', None)": [
                        41
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/FastMathStrictComparisonTest.java": {
                "old": {
                    "('org.apache.commons.math4.util#FastMathStrictComparisonTest', 'data')": [
                        215
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.util#FastMathStrictComparisonTest', 'data')": [
                        215
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/IntegerSequenceTest.java": {
                "old": {
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testRangeMultipleIterations')": [
                        36
                    ],
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testIncreasingRange')": [
                        56
                    ],
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testIncreasingRangeNegativeEnd')": [
                        75
                    ],
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testDecreasingRange')": [
                        94
                    ],
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testSingleElementRange')": [
                        113
                    ],
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testBasicRange')": [
                        129
                    ],
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testEmptyRange')": [
                        144
                    ],
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testEmptyRangeNegativeStart')": [
                        160
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testRangeMultipleIterations')": [
                        36
                    ],
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testIncreasingRange')": [
                        56
                    ],
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testIncreasingRangeNegativeEnd')": [
                        75
                    ],
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testDecreasingRange')": [
                        94
                    ],
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testSingleElementRange')": [
                        113
                    ],
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testBasicRange')": [
                        129
                    ],
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testEmptyRange')": [
                        144
                    ],
                    "('org.apache.commons.math4.util#IntegerSequenceTest', 'testEmptyRangeNegativeStart')": [
                        160
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/OpenIntToDoubleHashMapTest.java": {
                "old": {
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', None)": [
                        40
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'generate')": [
                        63
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'testRemove2')": [
                        171
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'generateAbsent')": [
                        209
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', None)": [
                        40
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'generate')": [
                        63
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'testRemove2')": [
                        171
                    ],
                    "('org.apache.commons.math4.util#OpenIntToDoubleHashMapTest', 'generateAbsent')": [
                        209
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/OpenIntToFieldTest.java": {
                "old": {
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', None)": [
                        41
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'generate')": [
                        65
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'createFromJavaMap(Field)')": [
                        79
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testPutAndGetWith0ExpectedSize')": [
                        88
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testPutAndGetWithExpectedSize')": [
                        94
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testPutAndGet')": [
                        100
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testGetFromEmpty')": [
                        152
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testRemove2')": [
                        179
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testRemoveFromEmpty')": [
                        195
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'generateAbsent')": [
                        217
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testCopy')": [
                        229
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testPutKeysWithCollisions')": [
                        295
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testPutKeysWithCollision2')": [
                        319
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', None)": [
                        41
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'generate')": [
                        65
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'createFromJavaMap(Field)')": [
                        79
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testPutAndGetWith0ExpectedSize')": [
                        88
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testPutAndGetWithExpectedSize')": [
                        94
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testPutAndGet')": [
                        100
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testGetFromEmpty')": [
                        152
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testRemove2')": [
                        179
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testRemoveFromEmpty')": [
                        195
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'generateAbsent')": [
                        217
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testCopy')": [
                        229
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testPutKeysWithCollisions')": [
                        295
                    ],
                    "('org.apache.commons.math4.util#OpenIntToFieldTest', 'testPutKeysWithCollision2')": [
                        319
                    ]
                }
            },
            "src/test/java/org/apache/commons/math4/util/PairTest.java": {
                "old": {
                    "('org.apache.commons.math4.util#PairTest', 'testAccessor')": [
                        28
                    ],
                    "('org.apache.commons.math4.util#PairTest', 'testAccessor2')": [
                        36
                    ],
                    "('org.apache.commons.math4.util#PairTest', 'testEquals')": [
                        46,
                        49,
                        52,
                        55,
                        58
                    ],
                    "('org.apache.commons.math4.util#PairTest', 'testHashCode')": [
                        67,
                        68
                    ],
                    "('org.apache.commons.math4.util#PairTest', 'testToString')": [
                        79,
                        80
                    ],
                    "('org.apache.commons.math4.util#PairTest', 'testCreate')": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.math4.util#PairTest', 'testAccessor')": [
                        28
                    ],
                    "('org.apache.commons.math4.util#PairTest', 'testAccessor2')": [
                        36
                    ],
                    "('org.apache.commons.math4.util#PairTest', 'testEquals')": [
                        46,
                        49,
                        52,
                        55,
                        58
                    ],
                    "('org.apache.commons.math4.util#PairTest', 'testHashCode')": [
                        67,
                        68
                    ],
                    "('org.apache.commons.math4.util#PairTest', 'testToString')": [
                        79,
                        80
                    ],
                    "('org.apache.commons.math4.util#PairTest', 'testCreate')": [
                        87
                    ]
                }
            }
        }
    }
}