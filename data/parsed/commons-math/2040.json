{
    "0aa89cc22e4b7a5bd04f9c6602a69d459cc7ffd4": {
        "authored_data": "2013 Nov 07 15:15",
        "commit.message": "[MATH-1062] Use MatrixUtils.inverse to invert a matrix in the KalmanFilter, added new unit test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1539676 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "4ebd967c96c43ae3f1009c3592e0a0588eae0f8a",
        "changes": {
            "src/main/java/org/apache/commons/math3/filter/KalmanFilter.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('org.apache.commons.math3.filter#KalmanFilter', 'predict(double)')": [
                        286
                    ],
                    "('org.apache.commons.math3.filter#KalmanFilter', 'correct(double)')": [
                        335
                    ],
                    "('org.apache.commons.math3.filter#KalmanFilter', 'correct(RealVector)')": [
                        366,
                        367,
                        368,
                        369
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.filter#KalmanFilter', 'predict(double)')": [
                        284
                    ],
                    "('org.apache.commons.math3.filter#KalmanFilter', 'correct(double)')": [
                        333
                    ],
                    "('org.apache.commons.math3.filter#KalmanFilter', 'correct(RealVector)')": [
                        364
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/filter/KalmanFilterTest.java": {
                "old": {
                    "('org.apache.commons.math3.filter#KalmanFilterTest', 'testConstantAcceleration')": [
                        215,
                        216,
                        228,
                        231
                    ],
                    "('org.apache.commons.math3.filter#KalmanFilterTest', None)": [
                        244
                    ]
                },
                "new": {
                    "(None, None)": [
                        17,
                        21,
                        26,
                        27
                    ],
                    "('org.apache.commons.math3.filter#KalmanFilterTest', 'testConstantAcceleration')": [
                        230,
                        233
                    ],
                    "('org.apache.commons.math3.filter#KalmanFilterTest', None)": [
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        421,
                        422
                    ],
                    "('org.apache.commons.math3.filter#KalmanFilterTest', 'testCannonball')": [
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420
                    ]
                }
            }
        }
    },
    "4ebd967c96c43ae3f1009c3592e0a0588eae0f8a": {
        "authored_data": "2013 Nov 05 13:51",
        "commit.message": "MATH-1058\nPrecision improvements by using \"expm1\" and \"log1p\". Thanks to Sean Owen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1538998 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "67fc63b9942aeaac2c36cc25c746eb77c922d45c",
        "changes": {
            "src/main/java/org/apache/commons/math3/distribution/LogNormalDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#LogNormalDistribution', 'getNumericalVariance')": [
                        292
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.distribution#LogNormalDistribution', 'getNumericalVariance')": [
                        292
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/WeibullDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#WeibullDistribution', 'inverseCumulativeProbability(double)')": [
                        224
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.distribution#WeibullDistribution', 'inverseCumulativeProbability(double)')": [
                        224
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/special/Beta.java": {
                "old": {
                    "('org.apache.commons.math3.special#Beta', 'regularizedBeta(double,double,double,double,int)')": [
                        221
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.special#Beta', 'regularizedBeta(double,double,double,double,int)')": [
                        221
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/distribution/LogNormalDistributionTest.java": {
                "new": {
                    "('org.apache.commons.math3.distribution#LogNormalDistributionTest', None)": [
                        246,
                        247
                    ],
                    "('org.apache.commons.math3.distribution#LogNormalDistributionTest', 'testTinyVariance')": [
                        248,
                        249,
                        250,
                        251
                    ],
                    "(None, None)": [
                        252,
                        253
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/distribution/WeibullDistributionTest.java": {
                "new": {
                    "('org.apache.commons.math3.distribution#WeibullDistributionTest', 'testInverseCumulativeProbabilitySmallPAccuracy')": [
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73
                    ],
                    "('org.apache.commons.math3.distribution#WeibullDistributionTest', None)": [
                        74,
                        75,
                        76
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/special/BetaTest.java": {
                "new": {
                    "('org.apache.commons.math3.special#BetaTest', None)": [
                        135,
                        136,
                        137
                    ],
                    "('org.apache.commons.math3.special#BetaTest', 'testRegularizedBetaTinyArgument')": [
                        138,
                        139,
                        140,
                        141
                    ]
                }
            }
        }
    },
    "67fc63b9942aeaac2c36cc25c746eb77c922d45c": {
        "authored_data": "2013 Nov 05 12:30",
        "commit.message": "Add missing AL header.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1538968 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "6527a801c181090326f44bffef6709f898cae70b",
        "changes": {
            "src/test/java/org/apache/commons/math3/stat/correlation/KendallsCorrelationTest.java": {
                "new": {
                    "(None, None)": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16
                    ]
                }
            }
        }
    },
    "6527a801c181090326f44bffef6709f898cae70b": {
        "authored_data": "2013 Nov 03 13:57",
        "commit.message": "MATH-1054\nStandardize \"x = x op y\" to \"x op= y\". Thanks to Sean Owen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1538368 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "534dd690699b768f17ecdcbac24492b9b85c10b4",
        "changes": {
            "src/main/java/org/apache/commons/math3/dfp/Dfp.java": {
                "old": {
                    "('org.apache.commons.math3.dfp#Dfp', 'complement(int)')": [
                        1245
                    ],
                    "('org.apache.commons.math3.dfp#Dfp', 'multiply(Dfp)')": [
                        1560
                    ],
                    "('org.apache.commons.math3.dfp#Dfp', 'divide(Dfp)')": [
                        1809
                    ],
                    "('org.apache.commons.math3.dfp#Dfp', 'dfp2sci')": [
                        2157,
                        2158
                    ],
                    "('org.apache.commons.math3.dfp#Dfp', 'dotrap(int,String,Dfp,Dfp)')": [
                        2287,
                        2291
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.dfp#Dfp', 'complement(int)')": [
                        1245
                    ],
                    "('org.apache.commons.math3.dfp#Dfp', 'multiply(Dfp)')": [
                        1560
                    ],
                    "('org.apache.commons.math3.dfp#Dfp', 'divide(Dfp)')": [
                        1809
                    ],
                    "('org.apache.commons.math3.dfp#Dfp', 'dfp2sci')": [
                        2157,
                        2158
                    ],
                    "('org.apache.commons.math3.dfp#Dfp', 'dotrap(int,String,Dfp,Dfp)')": [
                        2287,
                        2291
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/dfp/DfpField.java": {
                "old": {
                    "('org.apache.commons.math3.dfp#DfpField', 'computeLn(Dfp,Dfp,Dfp)')": [
                        745
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.dfp#DfpField', 'computeLn(Dfp,Dfp,Dfp)')": [
                        745
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/dfp/DfpMath.java": {
                "old": {
                    "('org.apache.commons.math3.dfp#DfpMath', 'splitPow(Dfp,int)')": [
                        182
                    ],
                    "('org.apache.commons.math3.dfp#DfpMath', 'pow(Dfp,int)')": [
                        238,
                        244
                    ],
                    "('org.apache.commons.math3.dfp#DfpMath', 'logInternal(Dfp)')": [
                        450
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.dfp#DfpMath', 'splitPow(Dfp,int)')": [
                        182
                    ],
                    "('org.apache.commons.math3.dfp#DfpMath', 'pow(Dfp,int)')": [
                        238,
                        244
                    ],
                    "('org.apache.commons.math3.dfp#DfpMath', 'logInternal(Dfp)')": [
                        450
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/PoissonDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#PoissonDistribution', 'nextPoisson(double)')": [
                        307
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.distribution#PoissonDistribution', 'nextPoisson(double)')": [
                        307
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/distribution/SaddlePointExpansion.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#SaddlePointExpansion', 'getDeviancePart(double,double)')": [
                        153
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.distribution#SaddlePointExpansion', 'getDeviancePart(double,double)')": [
                        153
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        463
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        463
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fraction/BigFraction.java": {
                "old": {
                    "('org.apache.commons.math3.fraction#BigFraction', None)": [
                        194
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fraction#BigFraction', None)": [
                        194
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fraction/ProperFractionFormat.java": {
                "old": {
                    "('org.apache.commons.math3.fraction#ProperFractionFormat', 'format(Fraction,StringBuffer,FieldPosition)')": [
                        99
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fraction#ProperFractionFormat', 'format(Fraction,StringBuffer,FieldPosition)')": [
                        99
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple.java": {
                "old": {
                    "('org.apache.commons.math3.geometry.partitioning.utilities#OrderedTuple', 'computeMSB(long)')": [
                        372,
                        374,
                        375
                    ],
                    "('org.apache.commons.math3.geometry.partitioning.utilities#OrderedTuple', 'computeLSB(long)')": [
                        398,
                        400,
                        401
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.geometry.partitioning.utilities#OrderedTuple', 'computeMSB(long)')": [
                        372,
                        374,
                        375
                    ],
                    "('org.apache.commons.math3.geometry.partitioning.utilities#OrderedTuple', 'computeLSB(long)')": [
                        398,
                        400,
                        401
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/ArrayFieldVector.java": {
                "old": {
                    "('org.apache.commons.math3.linear#ArrayFieldVector', 'hashCode')": [
                        943
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#ArrayFieldVector', 'hashCode')": [
                        943
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/ArrayRealVector.java": {
                "old": {
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'mapAddToSelf(double)')": [
                        363
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'mapSubtractToSelf(double)')": [
                        372
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'mapMultiplyToSelf(double)')": [
                        381
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'mapDivideToSelf(double)')": [
                        390
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'mapAddToSelf(double)')": [
                        363
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'mapSubtractToSelf(double)')": [
                        372
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'mapMultiplyToSelf(double)')": [
                        381
                    ],
                    "('org.apache.commons.math3.linear#ArrayRealVector', 'mapDivideToSelf(double)')": [
                        390
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java": {
                "old": {
                    "('org.apache.commons.math3.linear#EigenDecomposition', 'findEigenVectors(double)')": [
                        664,
                        670
                    ],
                    "('org.apache.commons.math3.linear#EigenDecomposition', 'findEigenVectorsFromSchur(SchurTransformer)')": [
                        806,
                        833,
                        865,
                        892,
                        893,
                        942,
                        943,
                        956
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#EigenDecomposition', 'findEigenVectors(double)')": [
                        664,
                        670
                    ],
                    "('org.apache.commons.math3.linear#EigenDecomposition', 'findEigenVectorsFromSchur(SchurTransformer)')": [
                        806,
                        833,
                        865,
                        892,
                        893,
                        942,
                        943,
                        956
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/HessenbergTransformer.java": {
                "old": {
                    "('org.apache.commons.math3.linear#HessenbergTransformer', 'transform')": [
                        200,
                        201,
                        211,
                        222
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#HessenbergTransformer', 'transform')": [
                        200,
                        201,
                        211,
                        222
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/SchurTransformer.java": {
                "old": {
                    "('org.apache.commons.math3.linear#SchurTransformer', 'transform')": [
                        152,
                        174,
                        175
                    ],
                    "('org.apache.commons.math3.linear#SchurTransformer', 'performDoubleQRStep(int,int,int,ShiftInfo,double)')": [
                        370,
                        371,
                        372,
                        384,
                        388,
                        389,
                        395,
                        396,
                        397,
                        398,
                        399,
                        406,
                        407,
                        408,
                        409,
                        410,
                        418,
                        419,
                        420,
                        421,
                        422
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#SchurTransformer', 'transform')": [
                        152,
                        174,
                        175
                    ],
                    "('org.apache.commons.math3.linear#SchurTransformer', 'performDoubleQRStep(int,int,int,ShiftInfo,double)')": [
                        370,
                        371,
                        372,
                        384,
                        388,
                        389,
                        395,
                        396,
                        397,
                        398,
                        399,
                        406,
                        407,
                        408,
                        409,
                        410,
                        418,
                        419,
                        420,
                        421,
                        422
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java": {
                "old": {
                    "('org.apache.commons.math3.linear#SingularValueDecomposition', None)": [
                        433
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.linear#SingularValueDecomposition', None)": [
                        433
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#CMAESOptimizer', 'doOptimize')": [
                        495,
                        499
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.nonlinear.scalar.noderiv#CMAESOptimizer', 'doOptimize')": [
                        495,
                        499
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optim.nonlinear.vector.jacobian#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        460
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optim.nonlinear.vector.jacobian#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        460
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', 'doOptimize')": [
                        623,
                        627
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.direct#CMAESOptimizer', 'doOptimize')": [
                        623,
                        627
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        449
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        449
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/primes/PollardRho.java": {
                "old": {
                    "('org.apache.commons.math3.primes#PollardRho', 'rhoBrent(int)')": [
                        110
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.primes#PollardRho', 'rhoBrent(int)')": [
                        110
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/primes/Primes.java": {
                "old": {
                    "('org.apache.commons.math3.primes#Primes', 'nextPrime(int)')": [
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.primes#Primes', 'nextPrime(int)')": [
                        81
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/primes/SmallPrimes.java": {
                "old": {
                    "('org.apache.commons.math3.primes#SmallPrimes', 'smallTrialDivision(int,List)')": [
                        86
                    ],
                    "('org.apache.commons.math3.primes#SmallPrimes', 'boundedTrialDivision(int,int,List)')": [
                        105,
                        111
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.primes#SmallPrimes', 'smallTrialDivision(int,List)')": [
                        86
                    ],
                    "('org.apache.commons.math3.primes#SmallPrimes', 'boundedTrialDivision(int,int,List)')": [
                        105,
                        111
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/random/AbstractRandomGenerator.java": {
                "old": {
                    "('org.apache.commons.math3.random#AbstractRandomGenerator', 'nextBytes(byte)')": [
                        112
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.random#AbstractRandomGenerator', 'nextBytes(byte)')": [
                        112
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java": {
                "old": {
                    "('org.apache.commons.math3.random#BitsStreamGenerator', 'nextBytes(byte)')": [
                        84
                    ],
                    "('org.apache.commons.math3.random#BitsStreamGenerator', 'nextLong(long)')": [
                        182
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.random#BitsStreamGenerator', 'nextBytes(byte)')": [
                        84
                    ],
                    "('org.apache.commons.math3.random#BitsStreamGenerator', 'nextLong(long)')": [
                        182
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java": {
                "old": {
                    "('org.apache.commons.math3.random#RandomDataGenerator', 'nextLong(RandomGenerator,long)')": [
                        251
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.random#RandomDataGenerator', 'nextLong(RandomGenerator,long)')": [
                        251
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/random/SobolSequenceGenerator.java": {
                "old": {
                    "('org.apache.commons.math3.random#SobolSequenceGenerator', 'nextVector')": [
                        274
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.random#SobolSequenceGenerator', 'nextVector')": [
                        274
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/random/StableRandomGenerator.java": {
                "old": {
                    "('org.apache.commons.math3.random#StableRandomGenerator', 'nextNormalizedDouble')": [
                        129
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.random#StableRandomGenerator', 'nextNormalizedDouble')": [
                        129
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/random/Well19937c.java": {
                "old": {
                    "('org.apache.commons.math3.random#Well19937c', 'next(int)')": [
                        108,
                        109
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.random#Well19937c', 'next(int)')": [
                        108,
                        109
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/random/Well44497b.java": {
                "old": {
                    "('org.apache.commons.math3.random#Well44497b', 'next(int)')": [
                        112,
                        113
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.random#Well44497b', 'next(int)')": [
                        112,
                        113
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/special/Erf.java": {
                "old": {
                    "('org.apache.commons.math3.special#Erf', 'erfInv(double)')": [
                        153
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.special#Erf', 'erfInv(double)')": [
                        153
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/special/Gamma.java": {
                "old": {
                    "('org.apache.commons.math3.special#Gamma', 'regularizedGammaP(double,double,double,int)')": [
                        333,
                        334,
                        337
                    ],
                    "('org.apache.commons.math3.special#Gamma', 'lanczos(double)')": [
                        515
                    ],
                    "('org.apache.commons.math3.special#Gamma', 'gamma(double)')": [
                        669,
                        684
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.special#Gamma', 'regularizedGammaP(double,double,double,int)')": [
                        333,
                        334,
                        337
                    ],
                    "('org.apache.commons.math3.special#Gamma', 'lanczos(double)')": [
                        515
                    ],
                    "('org.apache.commons.math3.special#Gamma', 'gamma(double)')": [
                        669,
                        684
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java": {
                "old": {
                    "('org.apache.commons.math3.stat.regression#MillerUpdatingRegression', 'vmove(int,int)')": [
                        757
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.stat.regression#MillerUpdatingRegression', 'vmove(int,int)')": [
                        757
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java": {
                "old": {
                    "('org.apache.commons.math3.util#ArithmeticUtils', 'pow(int,long)')": [
                        704
                    ],
                    "('org.apache.commons.math3.util#ArithmeticUtils', 'pow(long,long)')": [
                        778
                    ],
                    "('org.apache.commons.math3.util#ArithmeticUtils', 'pow(BigInteger,long)')": [
                        820
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#ArithmeticUtils', 'pow(int,long)')": [
                        704
                    ],
                    "('org.apache.commons.math3.util#ArithmeticUtils', 'pow(long,long)')": [
                        778
                    ],
                    "('org.apache.commons.math3.util#ArithmeticUtils', 'pow(BigInteger,long)')": [
                        820
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/Combinations.java": {
                "old": {
                    "('org.apache.commons.math3.util#Combinations', None)": [
                        253
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#Combinations', None)": [
                        253
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/FastMath.java": {
                "old": {
                    "('org.apache.commons.math3.util#FastMath', 'doubleHighPart(double)')": [
                        375
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'expm1(double,double)')": [
                        1029,
                        1030
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'log(double,double)')": [
                        1305,
                        1327,
                        1332,
                        1337,
                        1342,
                        1347
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'pow(double,double)')": [
                        1597
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'pow(double,int)')": [
                        1664
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'sinQ(double,double)')": [
                        1771,
                        1777,
                        1827
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'tanQ(double,double,boolean)')": [
                        1915,
                        1921,
                        1922,
                        1923,
                        1924,
                        1937,
                        1943,
                        1944,
                        1945,
                        1946
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'reducePayneHanek(double,double)')": [
                        2069,
                        2070,
                        2088,
                        2155,
                        2156,
                        2174,
                        2196
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'cbrt(double)')": [
                        2921
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'toRadians(double)')": [
                        2959
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'scalb(double,int)')": [
                        3093,
                        3097,
                        3114,
                        3118
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'scalb(float,int)')": [
                        3177,
                        3181,
                        3198,
                        3202
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#FastMath', 'doubleHighPart(double)')": [
                        375
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'expm1(double,double)')": [
                        1029,
                        1030
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'log(double,double)')": [
                        1305,
                        1327,
                        1332,
                        1337,
                        1342,
                        1347
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'pow(double,double)')": [
                        1597
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'pow(double,int)')": [
                        1664
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'sinQ(double,double)')": [
                        1771,
                        1777,
                        1827
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'tanQ(double,double,boolean)')": [
                        1915,
                        1921,
                        1922,
                        1923,
                        1924,
                        1937,
                        1943,
                        1944,
                        1945,
                        1946
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'reducePayneHanek(double,double)')": [
                        2069,
                        2070,
                        2088,
                        2155,
                        2156,
                        2174,
                        2196
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'cbrt(double)')": [
                        2921
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'toRadians(double)')": [
                        2959
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'scalb(double,int)')": [
                        3093,
                        3097,
                        3114,
                        3118
                    ],
                    "('org.apache.commons.math3.util#FastMath', 'scalb(float,int)')": [
                        3177,
                        3181,
                        3198,
                        3202
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/FastMathCalc.java": {
                "old": {
                    "('org.apache.commons.math3.util#FastMathCalc', 'splitReciprocal(double,double)')": [
                        427
                    ],
                    "('org.apache.commons.math3.util#FastMathCalc', 'quadMult(double,double,double)')": [
                        456,
                        459,
                        468,
                        471,
                        480,
                        483
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#FastMathCalc', 'splitReciprocal(double,double)')": [
                        427
                    ],
                    "('org.apache.commons.math3.util#FastMathCalc', 'quadMult(double,double,double)')": [
                        456,
                        459,
                        468,
                        471,
                        480,
                        483
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/ml/clustering/KMeansPlusPlusClustererTest.java": {
                "old": {
                    "('org.apache.commons.math3.ml.clustering#KMeansPlusPlusClustererTest', 'testCertainSpace')": [
                        89,
                        93,
                        94,
                        95,
                        96
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.ml.clustering#KMeansPlusPlusClustererTest', 'testCertainSpace')": [
                        89,
                        93,
                        94,
                        95,
                        96
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/stat/clustering/KMeansPlusPlusClustererTest.java": {
                "old": {
                    "('org.apache.commons.math3.stat.clustering#KMeansPlusPlusClustererTest', 'testCertainSpace')": [
                        146,
                        150,
                        151,
                        152,
                        153
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.stat.clustering#KMeansPlusPlusClustererTest', 'testCertainSpace')": [
                        146,
                        150,
                        151,
                        152,
                        153
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/util/PrecisionTest.java": {
                "old": {
                    "('org.apache.commons.math3.util#PrecisionTest', 'testRoundDouble')": [
                        300
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#PrecisionTest', 'testRoundDouble')": [
                        300
                    ]
                }
            }
        }
    },
    "534dd690699b768f17ecdcbac24492b9b85c10b4": {
        "authored_data": "2013 Nov 03 12:48",
        "commit.message": "[MATH-1055] Fixed some invalid links inside javadoc and added missing deprecated annotations, thanks to Sean Owen.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1538354 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "ac8a5878295f137976633aed7d773f0f7cdeeb6e",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/HarmonicFitter.java": {
                "old": {
                    "('org.apache.commons.math3.fitting#HarmonicFitter', None)": [
                        263
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting#HarmonicFitter', None)": [
                        263
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/ode/JacobianMatrices.java": {
                "old": {
                    "('org.apache.commons.math3.ode#JacobianMatrices', None)": [
                        432
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter.java": {
                "old": {
                    "('org.apache.commons.math3.optimization.fitting#HarmonicFitter', None)": [
                        263
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.optimization.fitting#HarmonicFitter', None)": [
                        263
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/special/Beta.java": {
                "old": {
                    "('org.apache.commons.math3.special#Beta', None)": [
                        260,
                        293,
                        380
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.special#Beta', None)": [
                        260,
                        293,
                        380
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/stat/descriptive/AbstractUnivariateStatistic.java": {
                "old": {
                    "('org.apache.commons.math3.stat.descriptive#AbstractUnivariateStatistic', None)": [
                        154,
                        184,
                        220,
                        263
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.stat.descriptive#AbstractUnivariateStatistic', None)": [
                        154,
                        184,
                        220,
                        263
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java": {
                "new": {
                    "('org.apache.commons.math3.util#ArithmeticUtils', None)": [
                        99,
                        131,
                        159,
                        190,
                        209,
                        222,
                        873
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/Combinations.java": {
                "old": {
                    "('org.apache.commons.math3.util#Combinations', None)": [
                        325
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#Combinations', None)": [
                        325
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/analysis/integration/MidPointIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/special/BetaTest.java": {
                "old": {
                    "('org.apache.commons.math3.special#BetaTest', None)": [
                        173
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.special#BetaTest', None)": [
                        173
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/stat/CertifiedDataTest.java": {
                "old": {
                    "('org.apache.commons.math3.stat#CertifiedDataTest', None)": [
                        99,
                        100
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/transform/RealTransformerAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math3.transform#RealTransformerAbstractTest', None)": [
                        102,
                        103,
                        104,
                        114,
                        115,
                        116,
                        126,
                        127,
                        128
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.transform#RealTransformerAbstractTest', None)": [
                        102,
                        112,
                        122
                    ]
                }
            }
        }
    },
    "ac8a5878295f137976633aed7d773f0f7cdeeb6e": {
        "authored_data": "2013 Nov 03 12:27",
        "commit.message": "Remove override for interface.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1538348 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Thomas Neidhart",
        "pcid": "6a23c1370610f40e0c5c1b27030b12e1d8a138e2",
        "changes": {
            "src/main/java/org/apache/commons/math3/stat/correlation/KendallsCorrelation.java": {
                "old": {
                    "('org.apache.commons.math3.stat.correlation#KendallsCorrelation', 'correlation(double,double)')": [
                        172
                    ]
                }
            }
        }
    }
}