{
    "b9559bfce972a8b079ebc5ac8b6326a524ce29f8": {
        "authored_data": "2010 Nov 25 16:22",
        "commit.message": "MATH-439\nRefactored the \"solvers\" package. Implementations refer to number of\nevaluation of the objective function (instead of the number of iterations).\nNew interfaces and base classes.\n\"NewtonSolver\" fits in the design without resorting to a cast.\nCreated class \"MullerSolver2\" to contain the code of the method named \"solve2\"\nin class \"MullerSolver\".\nRemoved \"UnivariateRealSolverFactory\" and \"UnivariateRealSolverFactoryImpl\".\nDefault solver in \"UnivariateRealSolverUtils\" is explicitely instantiated.\n\"AbstractContinuousDistribution\": Type of exception thrown changed in\n\"UnivariateRealSolverUtils\".\nFactored out duplicate code (in \"GaussNewtonOptimizerTest\" and\n\"LevenbergMarquardtOptimizerTest\"): class \"Circle\" is now called\n\"CircleVectorial\". Also factored out the \"Circle\" class from\n\"NonLinearConjugateGradientOptimizerTest\": class is named \"CircleScalar\".\nCreated \"SecantSolverTest\", moving there all the tests for the class\n\"SecantSolver\" that were located in class \"BrentSolverTest\".\nCreated new interface and base class for polynomial functions solvers\n(\"LaguerreSolver\") so that the function type is now checked at compile time.\nRemoved deprecated exceptions (MATH-441).\nJavadoc clean-up.\nLowered tolerance values in some unit tests.\nTests upgraded to Junit 4 (MATH-423).\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1039083 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "c32b8042d81bcc66151e3b2c03695a9a7bfd33c2",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/FunctionUtils.java": {
                "new": {
                    "('org.apache.commons.math.analysis#FunctionUtils', None)": [
                        29,
                        30,
                        31,
                        32,
                        33,
                        150,
                        166
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonForm.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonForm', None)": [
                        72,
                        157,
                        205
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonForm', None)": [
                        71,
                        72,
                        157,
                        158,
                        206,
                        207
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolver', None)": [
                        32,
                        38,
                        39,
                        42,
                        46,
                        47,
                        48
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        43,
                        44,
                        45
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        58,
                        59,
                        61,
                        62,
                        64,
                        74,
                        77,
                        79,
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#BisectionSolver', None)": [
                        29,
                        30,
                        31,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        42,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        58,
                        59,
                        60,
                        61
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolver', 'doSolve')": [
                        62,
                        63,
                        64,
                        65,
                        66,
                        71,
                        73,
                        74,
                        76
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', None)": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        50,
                        51,
                        52,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        118,
                        119,
                        120,
                        121,
                        122,
                        124,
                        125,
                        126,
                        127,
                        128,
                        130,
                        131,
                        132,
                        133,
                        134,
                        136,
                        137,
                        138,
                        139,
                        140
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(UnivariateRealFunction,double,double,double,double,double,double)')": [
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        259,
                        260,
                        261,
                        262,
                        263,
                        265,
                        266,
                        269,
                        270,
                        271,
                        272,
                        274,
                        275,
                        279,
                        280,
                        284,
                        285,
                        287,
                        288,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        22,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        227,
                        228
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', None)": [
                        36,
                        39,
                        40,
                        41,
                        42,
                        43,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'doSolve')": [
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        94,
                        95,
                        96,
                        97,
                        98,
                        100,
                        101,
                        102,
                        103,
                        105,
                        106,
                        107,
                        108,
                        109,
                        111,
                        112,
                        113,
                        114,
                        116,
                        117,
                        118,
                        119
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'brent(double,double,double,double)')": [
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        175,
                        177,
                        178,
                        179,
                        180,
                        181,
                        183,
                        184,
                        187,
                        188,
                        189,
                        190,
                        192,
                        193,
                        197,
                        198,
                        199,
                        200,
                        204,
                        205,
                        207,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        25,
                        32,
                        33,
                        34,
                        36
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', None)": [
                        41,
                        42,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        86,
                        87,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        73,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'isRootOK(double,double,Complex)')": [
                        156,
                        157,
                        158,
                        159,
                        160
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solveAll(double,double)')": [
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solveAll(Complex,Complex)')": [
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(Complex,Complex)')": [
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        29,
                        30,
                        31,
                        32,
                        33,
                        35,
                        36,
                        347,
                        348
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'doSolve')": [
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'laguerre(double,double,double,double)')": [
                        145,
                        146,
                        147,
                        148,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        27,
                        33,
                        34
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', None)": [
                        39,
                        42,
                        45,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        63,
                        64,
                        65,
                        68,
                        69,
                        70,
                        72,
                        73,
                        74,
                        75,
                        77
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        105,
                        106,
                        107,
                        115,
                        117,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        131,
                        146,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        176,
                        183,
                        187
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', 'solve2(UnivariateRealFunction,double,double)')": [
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        46
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', None)": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        55,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        80,
                        82,
                        118,
                        119,
                        120,
                        121,
                        122
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', 'doSolve')": [
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        106,
                        107,
                        108,
                        109,
                        111
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', 'solve(double,double,double,double)')": [
                        124,
                        125,
                        126,
                        127,
                        128,
                        136,
                        138,
                        140,
                        143,
                        158,
                        162,
                        163,
                        164,
                        184,
                        191
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        24,
                        25,
                        107
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', None)": [
                        36,
                        42,
                        46,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        56,
                        57,
                        58,
                        59
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        75,
                        76,
                        77,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        102,
                        103,
                        104
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', None)": [
                        31,
                        32,
                        33,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        51,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        67,
                        69
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', 'solve(DifferentiableUnivariateRealFunction,double,double)')": [
                        61,
                        62,
                        63
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', 'doSolve')": [
                        70,
                        71,
                        72,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        82
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/RiddersSolver.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', None)": [
                        38,
                        41,
                        44,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        92,
                        93,
                        94,
                        95,
                        100,
                        102,
                        105,
                        108,
                        111,
                        113,
                        115,
                        118,
                        120,
                        121,
                        127,
                        132,
                        133,
                        136,
                        137,
                        164,
                        166
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', None)": [
                        34,
                        35,
                        36,
                        39,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        64,
                        66
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', 'doSolve')": [
                        67,
                        68,
                        69,
                        74,
                        76,
                        79,
                        82,
                        85,
                        87,
                        88,
                        89,
                        90,
                        92,
                        95,
                        97,
                        103,
                        108,
                        111
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        154
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', None)": [
                        44,
                        47,
                        50,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        70,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        66,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        97,
                        98,
                        102,
                        103,
                        109,
                        110,
                        120,
                        121,
                        123,
                        124,
                        125,
                        126,
                        143,
                        150,
                        152
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', None)": [
                        39,
                        40,
                        41,
                        44,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        69,
                        71
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', 'doSolve')": [
                        72,
                        73,
                        74,
                        75,
                        77,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        101,
                        103,
                        104,
                        105,
                        110,
                        120,
                        122,
                        123,
                        124,
                        141
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        26,
                        27,
                        28,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        28,
                        29
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', None)": [
                        33,
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32,
                        34
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', None)": [
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        23,
                        237,
                        238,
                        239
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', None)": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        45,
                        46,
                        47,
                        49,
                        50,
                        52,
                        53,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        123,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        163,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'solve(UnivariateRealFunction,double,double)')": [
                        54,
                        55,
                        56,
                        57
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'solve(UnivariateRealFunction,double,double,double)')": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'bracket(UnivariateRealFunction,double,double,double)')": [
                        126,
                        127,
                        128,
                        129
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'bracket(UnivariateRealFunction,double,double,double,int)')": [
                        166,
                        167,
                        168,
                        169,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        186,
                        194,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'midpoint(double,double)')": [
                        216
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'setup(UnivariateRealFunction)')": [
                        224,
                        225,
                        226
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        24,
                        294,
                        295
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', None)": [
                        33,
                        34,
                        35,
                        36,
                        42,
                        43,
                        44,
                        47,
                        48,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        119,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        157,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'solve(UnivariateRealFunction,double,double)')": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'solve(UnivariateRealFunction,double,double,double)')": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'bracket(UnivariateRealFunction,double,double,double)')": [
                        122,
                        123,
                        124
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'bracket(UnivariateRealFunction,double,double,double,int)')": [
                        160,
                        161,
                        162,
                        167,
                        168,
                        169,
                        170,
                        175,
                        183,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'midpoint(double,double)')": [
                        205
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'isBracketing(UnivariateRealFunction,double,double)')": [
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'isSequence(double,double,double)')": [
                        236,
                        237,
                        238,
                        239
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'verifyInterval(double,double)')": [
                        249,
                        250,
                        251,
                        252,
                        253
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'verifySequence(double,double,double)')": [
                        266,
                        267,
                        268,
                        269,
                        270
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'verifyBracketing(UnivariateRealFunction,double,double)')": [
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        109
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        109
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/util/LocalizedFormats.java": {
                "old": {
                    "(None, None)": [
                        101
                    ]
                },
                "new": {
                    "(None, None)": [
                        101,
                        266
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/events/EventState.java": {
                "old": {
                    "('org.apache.commons.math.ode.events#EventState', 'evaluateStep(StepInterpolator)')": [
                        255
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.events#EventState', 'evaluateStep(StepInterpolator)')": [
                        255,
                        256
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java": {
                "old": {
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', None)": [
                        112,
                        113
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', None)": [
                        112
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitter', None)": [
                        89
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.fitting#GaussianFitter', None)": [
                        88,
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/HarmonicFitter.java": {
                "old": {
                    "('org.apache.commons.math.optimization.fitting#HarmonicFitter', 'fit')": [
                        96
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.fitting#HarmonicFitter', None)": [
                        80
                    ],
                    "('org.apache.commons.math.optimization.fitting#HarmonicFitter', 'fit')": [
                        97
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java": {
                "old": {
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunction', None)": [
                        100,
                        101,
                        102,
                        104
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunction', None)": [
                        100,
                        101
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        101,
                        102,
                        179,
                        180,
                        214,
                        215
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateJacobian')": [
                        103
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateResidualsAndCost')": [
                        129
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'getCovariances')": [
                        181
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'guessParametersErrors')": [
                        216
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        234
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        100,
                        101,
                        102,
                        179,
                        180,
                        181,
                        215,
                        216,
                        217
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateJacobian')": [
                        103
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateResidualsAndCost')": [
                        129
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'getCovariances')": [
                        182
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'guessParametersErrors')": [
                        218
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        236
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "(None, None)": [
                        21,
                        43,
                        287,
                        288,
                        289,
                        290,
                        291
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'setLineSearchSolver(UnivariateRealSolver)')": [
                        89
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        245,
                        270
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'setLineSearchSolver(UnivariateRealSolver)')": [
                        87,
                        88
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        118,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169
                    ],
                    "(None, None)": [
                        285,
                        286
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        24,
                        25,
                        178,
                        179,
                        180
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', None)": [
                        30,
                        31,
                        101,
                        102,
                        103,
                        104,
                        112,
                        113,
                        114,
                        115,
                        116,
                        122,
                        123,
                        124,
                        125,
                        126,
                        134,
                        135,
                        136,
                        137,
                        138,
                        144,
                        145,
                        146,
                        147,
                        148,
                        156,
                        157,
                        158,
                        159,
                        160,
                        166,
                        167,
                        168,
                        169,
                        170
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testSinZero')": [
                        32,
                        36,
                        38,
                        41
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testQuinticZero')": [
                        44,
                        48,
                        50,
                        53,
                        56,
                        59,
                        62,
                        65,
                        68,
                        71,
                        74,
                        77,
                        80,
                        82,
                        83
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testMath369')": [
                        88,
                        89
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testSetFunctionValueAccuracy')": [
                        95,
                        96,
                        97,
                        98,
                        99
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testResetFunctionValueAccuracy')": [
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testSetAbsoluteAccuracy')": [
                        117,
                        118,
                        119,
                        120,
                        121
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testResetAbsoluteAccuracy')": [
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testSetMaximalIterationCount')": [
                        139,
                        140,
                        141,
                        142,
                        143
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testResetMaximalIterationCount')": [
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testSetRelativeAccuracy')": [
                        161,
                        162,
                        163,
                        164,
                        165
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testResetRelativeAccuracy')": [
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', None)": [
                        29,
                        30,
                        44,
                        87,
                        98
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testSinZero')": [
                        31,
                        35,
                        36,
                        38,
                        41
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testQuinticZero')": [
                        45,
                        49,
                        50,
                        52,
                        55,
                        58,
                        61,
                        64,
                        67,
                        70,
                        73,
                        76,
                        79,
                        82,
                        84
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testMath369')": [
                        90,
                        91,
                        92
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testSetMaximalEvaluationCount')": [
                        99,
                        100,
                        101,
                        102,
                        103
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        29,
                        348,
                        349,
                        350
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', None)": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        80,
                        81,
                        266,
                        267,
                        284,
                        285,
                        286
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testSinZero')": [
                        45,
                        46,
                        54,
                        55,
                        56,
                        57,
                        58,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testQuinticZero')": [
                        82,
                        98,
                        99,
                        100,
                        105,
                        106,
                        108,
                        112,
                        113,
                        115,
                        119,
                        120,
                        122,
                        125,
                        126,
                        127,
                        128,
                        129,
                        133,
                        134,
                        135,
                        136,
                        141,
                        142,
                        143,
                        144,
                        148,
                        149,
                        150,
                        151,
                        155,
                        156,
                        157,
                        158,
                        162,
                        163,
                        164,
                        165,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testRootEndpoints')": [
                        268,
                        270,
                        274,
                        277,
                        280,
                        283
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testBadEndpoints')": [
                        287,
                        289,
                        292,
                        298,
                        304
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testInitialGuess')": [
                        310,
                        311,
                        313,
                        318,
                        320,
                        325,
                        333,
                        334,
                        339,
                        340,
                        345,
                        346,
                        347
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        28,
                        235
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', None)": [
                        38,
                        39,
                        60,
                        61,
                        62,
                        148,
                        149,
                        150,
                        168,
                        169,
                        170,
                        171,
                        196
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testSinZero')": [
                        40,
                        41,
                        47,
                        50,
                        51,
                        52,
                        53,
                        56,
                        57,
                        58,
                        59
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testQuinticZero')": [
                        63,
                        75,
                        80,
                        81,
                        82,
                        87,
                        88,
                        90,
                        94,
                        95,
                        97,
                        101,
                        102,
                        104,
                        107,
                        108,
                        109,
                        110,
                        114,
                        115,
                        116,
                        121,
                        122,
                        123,
                        127,
                        128,
                        129,
                        133,
                        134,
                        135,
                        139,
                        140,
                        141,
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testRootEndpoints')": [
                        151,
                        153,
                        154,
                        158,
                        161,
                        164,
                        167
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testBadEndpoints')": [
                        172,
                        174,
                        175,
                        178,
                        184,
                        190
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testInitialGuess')": [
                        197,
                        199,
                        200,
                        205,
                        207,
                        212,
                        220,
                        221,
                        226,
                        227,
                        232,
                        233,
                        234
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java": {
                "old": {
                    "(None, None)": [
                        25,
                        26
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', None)": [
                        38,
                        39,
                        148
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testLinearFunction')": [
                        43,
                        49,
                        55
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testQuadraticFunction')": [
                        61,
                        67,
                        73,
                        79
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testQuinticFunction')": [
                        85,
                        91,
                        97,
                        103,
                        109
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testQuinticFunction2')": [
                        115,
                        116,
                        117,
                        119,
                        120,
                        121,
                        122,
                        124,
                        125,
                        126,
                        127,
                        129,
                        130,
                        131,
                        132,
                        134,
                        135,
                        136,
                        137,
                        139,
                        140,
                        141,
                        142,
                        144,
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testParameters')": [
                        153,
                        156,
                        161,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26,
                        27
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', None)": [
                        39,
                        43,
                        63,
                        89,
                        120,
                        122,
                        123,
                        124,
                        126,
                        127,
                        128,
                        129,
                        131,
                        132,
                        133,
                        134,
                        136,
                        137,
                        138,
                        139,
                        141,
                        142,
                        143,
                        144,
                        146,
                        147,
                        148,
                        149,
                        151,
                        152,
                        153,
                        154,
                        155,
                        160
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testLinearFunction')": [
                        44,
                        50,
                        51,
                        57
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testQuadraticFunction')": [
                        64,
                        70,
                        71,
                        77,
                        83
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testQuinticFunction')": [
                        90,
                        96,
                        97,
                        103,
                        109,
                        115
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testParameters')": [
                        161,
                        164,
                        165,
                        170,
                        177
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        25,
                        26,
                        29,
                        217
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', None)": [
                        41,
                        42,
                        62,
                        63,
                        64,
                        65,
                        66,
                        110,
                        111,
                        112,
                        113,
                        114,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testSinFunction')": [
                        46,
                        55,
                        61
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testSinFunction2')": [
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testQuinticFunction')": [
                        88,
                        97,
                        103,
                        109
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testQuinticFunction2')": [
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testExpm1Function')": [
                        146,
                        155,
                        161,
                        167
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testExpm1Function2')": [
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testParameters')": [
                        208,
                        209,
                        210,
                        216
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24,
                        26,
                        27,
                        30,
                        149
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', None)": [
                        42,
                        46,
                        69,
                        102,
                        131
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testSinFunction')": [
                        47,
                        50,
                        57,
                        63
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testQuinticFunction')": [
                        70,
                        73,
                        80,
                        86,
                        92
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testExpm1Function')": [
                        103,
                        106,
                        113,
                        119,
                        125
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testParameters')": [
                        135,
                        139,
                        140,
                        141,
                        142,
                        148
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/NewtonSolverTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        25,
                        26,
                        92
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', None)": [
                        31,
                        32
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', 'testSinZero')": [
                        36,
                        40,
                        42,
                        45,
                        47,
                        48
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', 'testQuinticZero')": [
                        54,
                        58,
                        60,
                        63,
                        66,
                        69,
                        72,
                        75,
                        78,
                        81,
                        84,
                        87,
                        90
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', None)": [
                        30,
                        34,
                        53
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', 'testSinZero')": [
                        35,
                        39,
                        40,
                        42,
                        45,
                        47
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', 'testQuinticZero')": [
                        54,
                        58,
                        59,
                        61,
                        64,
                        67,
                        70,
                        73,
                        76,
                        79,
                        82,
                        85,
                        88,
                        91
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        25,
                        26,
                        29,
                        134
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', None)": [
                        39,
                        40
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testSinFunction')": [
                        44,
                        53,
                        59
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testQuinticFunction')": [
                        65,
                        74,
                        80,
                        86
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testExpm1Function')": [
                        92,
                        101,
                        107,
                        113
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testParameters')": [
                        119,
                        126,
                        127,
                        133
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27,
                        30,
                        142
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', None)": [
                        40,
                        44,
                        67,
                        96,
                        125
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testSinFunction')": [
                        45,
                        48,
                        55,
                        61
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testQuinticFunction')": [
                        68,
                        71,
                        78,
                        84,
                        90
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testExpm1Function')": [
                        97,
                        100,
                        107,
                        113,
                        119
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testParameters')": [
                        126,
                        129,
                        134,
                        135,
                        141
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtilsTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', None)": [
                        30,
                        55
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveNull')": [
                        34,
                        37
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveBadEndpoints')": [
                        43,
                        45,
                        46
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveBadAccuracy')": [
                        52
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveSin')": [
                        61,
                        63
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveAccuracyNull')": [
                        66,
                        70
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveAccuracySin')": [
                        76,
                        80
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveNoRoot')": [
                        83,
                        86
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBracketSin')": [
                        92,
                        95,
                        96
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBracketEndpointRoot')": [
                        99,
                        101,
                        102
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testNullFunction')": [
                        105,
                        108
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBadInitial')": [
                        114,
                        117
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBadEndpoints')": [
                        123,
                        126
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBadMaximumIterations')": [
                        132,
                        135
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        25,
                        26,
                        183
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', None)": [
                        31,
                        35,
                        45,
                        56,
                        60,
                        66,
                        72,
                        83,
                        91,
                        101,
                        109,
                        116,
                        126,
                        136,
                        146,
                        156
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveNull')": [
                        36,
                        39
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveBadEndpoints')": [
                        46,
                        48,
                        49,
                        50
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveBadAccuracy')": [
                        57
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveSin')": [
                        67,
                        69
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveAccuracyNull')": [
                        73,
                        77
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveAccuracySin')": [
                        84,
                        88
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testSolveNoRoot')": [
                        92,
                        95
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBracketSin')": [
                        102,
                        105,
                        106
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBracketEndpointRoot')": [
                        110,
                        112,
                        113
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testNullFunction')": [
                        117,
                        120
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBadInitial')": [
                        127,
                        130
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBadEndpoints')": [
                        137,
                        140
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testBadMaximumIterations')": [
                        147,
                        150
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtilsTest', 'testMisc')": [
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testEvents')": [
                        238
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testEvents')": [
                        238
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testEventsNoConvergence')": [
                        271,
                        272,
                        273
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', None)": [
                        272,
                        273
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testMaxEvaluations')": [
                        371
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFitting')": [
                        391
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFittingBadInit')": [
                        412
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', None)": [
                        491,
                        492,
                        493,
                        494,
                        495,
                        496,
                        497,
                        498,
                        499,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        508,
                        509,
                        510,
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558,
                        559,
                        560,
                        561,
                        562,
                        563,
                        564,
                        565,
                        566
                    ],
                    "(None, None)": [
                        567,
                        568,
                        569,
                        570,
                        571,
                        572
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testMaxEvaluations')": [
                        371
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFitting')": [
                        391
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFittingBadInit')": [
                        412
                    ],
                    "(None, None)": [
                        491
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        41
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTrivial')": [
                        112
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testQRColumnsPermutation')": [
                        129
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNoDependency')": [
                        146
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testOneSet')": [
                        165
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTwoSets')": [
                        181
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNonInvertible')": [
                        205
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testIllConditioned')": [
                        224
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        257
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        271
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testRedundantEquations')": [
                        291
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentEquations')": [
                        307
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentSizes')": [
                        319
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testControlParameters')": [
                        349,
                        350
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'checkEstimate(DifferentiableMultivariateVectorialFunction,double,int,double,double,double,boolean)')": [
                        366
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFitting')": [
                        385,
                        386
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFittingBadInit')": [
                        433,
                        434
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMath199')": [
                        486
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', None)": [
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558,
                        559,
                        560,
                        561,
                        562,
                        563,
                        564,
                        565,
                        566,
                        567,
                        568,
                        569,
                        570,
                        571,
                        572,
                        573,
                        574,
                        575,
                        576,
                        577,
                        578,
                        579,
                        580,
                        581,
                        582,
                        583,
                        584,
                        585,
                        586,
                        587,
                        588,
                        589,
                        590,
                        591,
                        592,
                        593,
                        594,
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        31,
                        32,
                        39
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTrivial')": [
                        111
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testQRColumnsPermutation')": [
                        128
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNoDependency')": [
                        145
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testOneSet')": [
                        164
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTwoSets')": [
                        180
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNonInvertible')": [
                        204
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testIllConditioned')": [
                        223
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        256
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        270
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testRedundantEquations')": [
                        290
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentEquations')": [
                        306
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentSizes')": [
                        318
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testControlParameters')": [
                        348,
                        349
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'checkEstimate(DifferentiableMultivariateVectorialFunction,double,int,double,double,double,boolean)')": [
                        365
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFitting')": [
                        384,
                        385
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFittingBadInit')": [
                        432,
                        433
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMath199')": [
                        485
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        30,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', None)": [
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        117,
                        118,
                        134,
                        135,
                        136,
                        154,
                        155,
                        156,
                        173,
                        174,
                        175,
                        212,
                        213,
                        214,
                        229,
                        230,
                        265,
                        266,
                        267,
                        284,
                        285,
                        286,
                        303,
                        304,
                        320,
                        321,
                        322,
                        337,
                        338,
                        339,
                        385,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        482,
                        483,
                        484,
                        485,
                        486,
                        487
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTrivial')": [
                        106,
                        115,
                        116
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testColumnsPermutation')": [
                        119,
                        120,
                        131,
                        132,
                        133
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNoDependency')": [
                        137,
                        153
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testOneSet')": [
                        157,
                        158,
                        170,
                        171,
                        172
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTwoSets')": [
                        176,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNonInversible')": [
                        215,
                        216,
                        228
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testIllConditioned')": [
                        231,
                        242,
                        243,
                        244,
                        248,
                        249,
                        250,
                        251,
                        261,
                        262,
                        263,
                        264
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        268,
                        269,
                        270,
                        283
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        287,
                        288,
                        302
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testRedundantEquations')": [
                        305,
                        318,
                        319
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testInconsistentEquations')": [
                        323,
                        336
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testCircleFitting')": [
                        340,
                        341,
                        351,
                        352,
                        353,
                        358,
                        359,
                        360
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        34,
                        35,
                        408
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', None)": [
                        99,
                        100,
                        112,
                        113,
                        114,
                        129,
                        130,
                        131,
                        132,
                        150,
                        151,
                        152,
                        153,
                        169,
                        170,
                        171,
                        172,
                        209,
                        210,
                        211,
                        212,
                        226,
                        227,
                        228,
                        261,
                        262,
                        263,
                        264,
                        279,
                        280,
                        281,
                        282,
                        298,
                        299,
                        300,
                        316,
                        317,
                        318,
                        319,
                        334,
                        335,
                        336,
                        337,
                        381
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTrivial')": [
                        101,
                        110,
                        111
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testColumnsPermutation')": [
                        115,
                        126,
                        127,
                        128
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNoDependency')": [
                        133,
                        149
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testOneSet')": [
                        154,
                        166,
                        167,
                        168
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTwoSets')": [
                        173,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNonInversible')": [
                        213,
                        225
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testIllConditioned')": [
                        229,
                        240,
                        244,
                        245,
                        246,
                        247,
                        257,
                        258,
                        259,
                        260
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        265,
                        278
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        283,
                        297
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testRedundantEquations')": [
                        301,
                        314,
                        315
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testInconsistentEquations')": [
                        320,
                        333
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testCircleFitting')": [
                        338,
                        339,
                        349,
                        354,
                        355,
                        356
                    ]
                }
            }
        }
    },
    "c32b8042d81bcc66151e3b2c03695a9a7bfd33c2": {
        "authored_data": "2010 Nov 24 23:35",
        "commit.message": "Added toString() override to StatistictalSummaryValues.  JIRA: MATH-420.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1038873 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "0b3c388aebe23cde0c7d3afbcd1171c4a8a3f5c5",
        "changes": {
            "src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummaryValues.java": {
                "new": {
                    "('org.apache.commons.math.stat.descriptive#StatisticalSummaryValues', None)": [
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170
                    ],
                    "('org.apache.commons.math.stat.descriptive#StatisticalSummaryValues', 'toString')": [
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ],
                    "(None, None)": [
                        184
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/stat/descriptive/StatisticalSummaryValuesTest.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        84
                    ],
                    "('org.apache.commons.math.stat.descriptive#StatisticalSummaryValuesTest', None)": [
                        70
                    ],
                    "('org.apache.commons.math.stat.descriptive#StatisticalSummaryValuesTest', 'testToString')": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83
                    ]
                }
            }
        }
    },
    "0b3c388aebe23cde0c7d3afbcd1171c4a8a3f5c5": {
        "authored_data": "2010 Nov 24 00:42",
        "commit.message": "MATH-425\nRemoved redundant exception \"throws\" clauses.\nJavadoc cleanup.\nThrowing \"NoDataException\" instead of \"ZeroException\" when row or column\ndata is missing.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1038403 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "b1676aecb4e9980d35797c5ef18f7b0582ae25fb",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java": {
                "old": {
                    "(None, None)": [
                        40
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', None)": [
                        44,
                        174,
                        195,
                        196,
                        197,
                        198,
                        214,
                        230,
                        246,
                        247,
                        248,
                        249,
                        271,
                        272,
                        273,
                        274,
                        293
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'createMatrix(int,int)')": [
                        173
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'add(FieldMatrix)')": [
                        180,
                        181
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'subtract(FieldMatrix)')": [
                        199,
                        200
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'scalarMultiply(T)')": [
                        235
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'multiply(FieldMatrix)')": [
                        250,
                        251,
                        252
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'preMultiply(FieldMatrix)')": [
                        275,
                        276
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'getData')": [
                        282
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'getSubMatrix(int,int,int,int)')": [
                        299
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'operate(T)')": [
                        638,
                        639
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'operate(FieldVector)')": [
                        660,
                        661
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'preMultiply(T)')": [
                        685,
                        686
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'preMultiply(FieldVector)')": [
                        707,
                        708,
                        712
                    ]
                },
                "new": {
                    "(None, None)": [
                        40,
                        41
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', None)": [
                        45,
                        46,
                        195,
                        196,
                        197,
                        241,
                        242,
                        243,
                        263,
                        264,
                        265
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'createMatrix(int,int)')": [
                        175
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'add(FieldMatrix)')": [
                        181
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'subtract(FieldMatrix)')": [
                        198
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'multiply(FieldMatrix)')": [
                        244
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'preMultiply(FieldMatrix)')": [
                        266
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'operate(T)')": [
                        625
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'operate(FieldVector)')": [
                        646
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'preMultiply(T)')": [
                        670
                    ],
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'preMultiply(FieldVector)')": [
                        691
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'createMatrix(int,int)')": [
                        60
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', None)": [
                        61
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'copySubMatrix(int,int,int,int,double)')": [
                        274
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'copySubMatrix(int,int,double)')": [
                        313
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'operate(double)')": [
                        555,
                        556,
                        557
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'operate(RealVector)')": [
                        577,
                        578
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'preMultiply(double)')": [
                        602,
                        603
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'preMultiply(RealVector)')": [
                        624,
                        625
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'createMatrix(int,int)')": [
                        60
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'operate(double)')": [
                        552
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'operate(RealVector)')": [
                        572
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'preMultiply(double)')": [
                        596
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'preMultiply(RealVector)')": [
                        617
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractRealVector', None)": [
                        42,
                        43,
                        44,
                        53,
                        55
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'checkVectorDimensions(int)')": [
                        57,
                        58
                    ],
                    "(None, None)": [
                        826
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#AbstractRealVector', None)": [
                        42,
                        43,
                        44,
                        45,
                        54,
                        56
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'checkVectorDimensions(int)')": [
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        591
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', None)": [
                        39,
                        40,
                        43,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        65,
                        66,
                        72,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        84,
                        85,
                        91,
                        94,
                        95,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        105,
                        106,
                        116,
                        117,
                        121,
                        122,
                        126,
                        127,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        164,
                        165,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        201,
                        202,
                        203,
                        204,
                        205,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        244,
                        245,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        295,
                        296,
                        297,
                        298,
                        299,
                        434,
                        564,
                        579,
                        580,
                        581,
                        582,
                        583,
                        584,
                        585,
                        586
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'createMatrix(int,int)')": [
                        153,
                        154
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'add(FieldMatrix)')": [
                        166,
                        167,
                        168,
                        169,
                        170,
                        171
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'add(Array2DRowFieldMatrix)')": [
                        182,
                        183,
                        184
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'subtract(FieldMatrix)')": [
                        206,
                        207,
                        208,
                        209,
                        210,
                        211
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'subtract(Array2DRowFieldMatrix)')": [
                        222,
                        223,
                        224
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'multiply(FieldMatrix)')": [
                        246,
                        247,
                        248,
                        249,
                        250,
                        251
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'multiply(Array2DRowFieldMatrix)')": [
                        262,
                        263,
                        264
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'setSubMatrix(T,int,int)')": [
                        310,
                        311,
                        314,
                        315,
                        319,
                        320,
                        325,
                        326,
                        331,
                        332
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'operate(T)')": [
                        392,
                        393,
                        397,
                        398
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'preMultiply(T)')": [
                        414,
                        415,
                        416,
                        420,
                        421
                    ]
                },
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', None)": [
                        40,
                        41,
                        42,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        66,
                        67,
                        73,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        86,
                        92,
                        95,
                        96,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        107,
                        117,
                        121,
                        125,
                        133,
                        134,
                        135,
                        136,
                        137,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        254,
                        255,
                        256,
                        257,
                        511,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'createMatrix(int,int)')": [
                        150
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'add(Array2DRowFieldMatrix)')": [
                        168
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'subtract(Array2DRowFieldMatrix)')": [
                        195
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'multiply(Array2DRowFieldMatrix)')": [
                        223
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'setSubMatrix(T,int,int)')": [
                        268,
                        271,
                        275,
                        280,
                        285
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'operate(T)')": [
                        345,
                        349
                    ],
                    "('org.apache.commons.math.linear#Array2DRowFieldMatrix', 'preMultiply(T)')": [
                        365,
                        369
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java": {
                "old": {
                    "(None, None)": [
                        24,
                        540
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', None)": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        82,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        94,
                        95,
                        113,
                        125,
                        129,
                        142,
                        143,
                        144,
                        224,
                        228,
                        229,
                        230,
                        263,
                        513,
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', 'setSubMatrix(double,int,int)')": [
                        284,
                        289
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', None)": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        81,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        93,
                        111,
                        123,
                        127,
                        140,
                        141,
                        221,
                        225,
                        226,
                        259,
                        509,
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        530
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrix', 'setSubMatrix(double,int,int)')": [
                        280,
                        285
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/ArrayRealVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayRealVector', None)": [
                        203,
                        204,
                        214,
                        215,
                        229,
                        230,
                        244,
                        245,
                        257,
                        258,
                        318,
                        319,
                        320,
                        321,
                        322,
                        359,
                        360,
                        361,
                        362,
                        363,
                        650,
                        651,
                        652,
                        653,
                        688,
                        689,
                        690,
                        691,
                        704,
                        705,
                        706,
                        820,
                        992,
                        993,
                        994,
                        995,
                        1113
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'add(RealVector)')": [
                        289,
                        290
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'add(double)')": [
                        307,
                        308
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'add(ArrayRealVector)')": [
                        323,
                        324
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'subtract(RealVector)')": [
                        330,
                        331
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'subtract(double)')": [
                        348,
                        349
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'subtract(ArrayRealVector)')": [
                        364,
                        365
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'ebeMultiply(RealVector)')": [
                        622,
                        623
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'ebeMultiply(double)')": [
                        638,
                        639
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'ebeMultiply(ArrayRealVector)')": [
                        654,
                        655
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'ebeDivide(RealVector)')": [
                        660,
                        661
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'ebeDivide(double)')": [
                        676,
                        677
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'ebeDivide(ArrayRealVector)')": [
                        692,
                        693
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'dotProduct(RealVector)')": [
                        714,
                        715
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'dotProduct(double)')": [
                        732,
                        733
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'getDistance(RealVector)')": [
                        786,
                        787
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'getDistance(double)')": [
                        803,
                        804
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'getL1Distance(double)')": [
                        851,
                        852
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'getLInfDistance(double)')": [
                        899,
                        900
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'outerProduct(RealVector)')": [
                        973,
                        974
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'outerProduct(ArrayRealVector)')": [
                        996,
                        997
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'outerProduct(double)')": [
                        1003,
                        1004
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'setSubVector(int,RealVector)')": [
                        1087
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#ArrayRealVector', None)": [
                        203,
                        204,
                        214,
                        215,
                        229,
                        230,
                        244,
                        245,
                        257,
                        258,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        646,
                        647,
                        648,
                        649,
                        650,
                        682,
                        683,
                        684,
                        685,
                        686,
                        687,
                        699,
                        700,
                        701,
                        702,
                        812,
                        981,
                        982,
                        983,
                        984,
                        985,
                        1101
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'add(RealVector)')": [
                        289
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'add(double)')": [
                        306
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'add(ArrayRealVector)')": [
                        323
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'subtract(RealVector)')": [
                        329
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'subtract(double)')": [
                        346
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'subtract(ArrayRealVector)')": [
                        363
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'ebeMultiply(RealVector)')": [
                        620
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'ebeMultiply(double)')": [
                        635
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'ebeMultiply(ArrayRealVector)')": [
                        651
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'ebeDivide(RealVector)')": [
                        656
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'ebeDivide(double)')": [
                        671
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'ebeDivide(ArrayRealVector)')": [
                        688
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'dotProduct(RealVector)')": [
                        710
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'dotProduct(double)')": [
                        727
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'getDistance(RealVector)')": [
                        780
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'getDistance(double)')": [
                        796
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'getL1Distance(double)')": [
                        843
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'getLInfDistance(double)')": [
                        890
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'outerProduct(RealVector)')": [
                        963
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'outerProduct(ArrayRealVector)')": [
                        986
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'outerProduct(double)')": [
                        992
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVector', 'setSubVector(int,RealVector)')": [
                        1075
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'subtract(FieldMatrix)')": [
                        373,
                        374
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'operate(T)')": [
                        1232,
                        1233,
                        1234
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'preMultiply(T)')": [
                        1275,
                        1276
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'subtract(FieldMatrix)')": [
                        373
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'operate(T)')": [
                        1231
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrix', 'preMultiply(T)')": [
                        1272
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#BlockRealMatrix', None)": [
                        89,
                        90,
                        113,
                        114,
                        115,
                        118,
                        119,
                        126,
                        127,
                        129,
                        130,
                        131,
                        132,
                        133,
                        186,
                        187,
                        188,
                        189,
                        242,
                        243,
                        244
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BlockRealMatrix', None)": [
                        89,
                        90,
                        112,
                        114,
                        115,
                        118,
                        125,
                        126,
                        127,
                        129,
                        130,
                        131,
                        184,
                        185,
                        186,
                        239,
                        240,
                        241
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixChangingVisitor.java": {
                "old": {
                    "(None, None)": [
                        21,
                        61
                    ],
                    "('org.apache.commons.math.linear#DefaultFieldMatrixChangingVisitor', None)": [
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixPreservingVisitor.java": {
                "old": {
                    "(None, None)": [
                        21,
                        59
                    ],
                    "('org.apache.commons.math.linear#DefaultFieldMatrixPreservingVisitor', None)": [
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/DefaultRealMatrixChangingVisitor.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        48
                    ],
                    "('org.apache.commons.math.linear#DefaultRealMatrixChangingVisitor', None)": [
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/DefaultRealMatrixPreservingVisitor.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        46
                    ],
                    "('org.apache.commons.math.linear#DefaultRealMatrixPreservingVisitor', None)": [
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/FieldMatrix.java": {
                "old": {
                    "(None, None)": [
                        23,
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/FieldMatrixChangingVisitor.java": {
                "old": {
                    "(None, None)": [
                        21,
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/FieldMatrixPreservingVisitor.java": {
                "old": {
                    "(None, None)": [
                        21,
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/MatrixUtils.java": {
                "old": {
                    "(None, None)": [
                        28,
                        30,
                        806,
                        807,
                        808
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', None)": [
                        105,
                        132,
                        227,
                        243,
                        259,
                        281,
                        306,
                        328,
                        433,
                        462,
                        463,
                        464,
                        465,
                        466,
                        480,
                        481,
                        482,
                        483,
                        497,
                        498,
                        499,
                        500,
                        513,
                        514,
                        524,
                        527,
                        546,
                        547,
                        557,
                        558,
                        568,
                        571,
                        590,
                        591,
                        596
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'createRowFieldMatrix(T)')": [
                        291
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'createColumnFieldMatrix(T)')": [
                        338
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkSubMatrixIndex(AnyMatrix,int,int)')": [
                        447,
                        450
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkAdditionCompatible(AnyMatrix,AnyMatrix)')": [
                        467,
                        468,
                        471,
                        472,
                        473,
                        474
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkSubtractionCompatible(AnyMatrix,AnyMatrix)')": [
                        484,
                        485,
                        488,
                        489,
                        490,
                        491
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkMultiplicationCompatible(AnyMatrix,AnyMatrix)')": [
                        501,
                        502,
                        504,
                        505,
                        506,
                        507
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        32,
                        33,
                        801
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', None)": [
                        106,
                        133,
                        228,
                        244,
                        260,
                        282,
                        307,
                        329,
                        434,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        479,
                        480,
                        481,
                        482,
                        483,
                        494,
                        495,
                        496,
                        497,
                        498,
                        508,
                        509,
                        539,
                        540,
                        541,
                        542,
                        552,
                        553,
                        554,
                        584,
                        585,
                        586,
                        587
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'createRowFieldMatrix(T)')": [
                        292
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'createColumnFieldMatrix(T)')": [
                        339
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkSubMatrixIndex(AnyMatrix,int,int)')": [
                        448,
                        451
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkAdditionCompatible(AnyMatrix,AnyMatrix)')": [
                        469,
                        472,
                        473
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkSubtractionCompatible(AnyMatrix,AnyMatrix)')": [
                        484,
                        487,
                        488
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'checkMultiplicationCompatible(AnyMatrix,AnyMatrix)')": [
                        499,
                        501,
                        502
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'subtract(RealMatrix)')": [
                        110,
                        111
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'multiply(RealMatrix)')": [
                        144,
                        145
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'subtract(RealMatrix)')": [
                        110
                    ],
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', 'multiply(RealMatrix)')": [
                        143
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealMatrix.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        30
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java": {
                "old": {
                    "(None, None)": [
                        114
                    ]
                },
                "new": {
                    "(None, None)": [
                        114
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', None)": [
                        37,
                        38,
                        39,
                        42,
                        45,
                        48,
                        51,
                        54,
                        57,
                        60,
                        63,
                        91,
                        105,
                        109,
                        110,
                        112,
                        113,
                        117,
                        118,
                        121,
                        123,
                        124,
                        129,
                        130,
                        131,
                        141,
                        142,
                        143,
                        144,
                        145,
                        165,
                        189,
                        201,
                        232,
                        256,
                        267,
                        270,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        286,
                        290,
                        291,
                        293,
                        310,
                        311,
                        313,
                        314,
                        315,
                        316,
                        326,
                        327,
                        329,
                        330,
                        331,
                        332,
                        333,
                        343,
                        344,
                        346,
                        347,
                        348,
                        349,
                        350,
                        356,
                        364
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getUT')": [
                        158,
                        162
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getS')": [
                        170,
                        172,
                        175
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getVT')": [
                        194,
                        198
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getCovariance(double)')": [
                        206
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getRank')": [
                        246,
                        247
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getSolver')": [
                        261,
                        262
                    ],
                    "(None, None)": [
                        369,
                        370,
                        371
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', None)": [
                        37,
                        59,
                        82,
                        96,
                        100,
                        101,
                        103,
                        104,
                        108,
                        109,
                        112,
                        114,
                        115,
                        120,
                        121,
                        122,
                        132,
                        133,
                        134,
                        135,
                        136,
                        250,
                        251,
                        252,
                        253,
                        254,
                        257,
                        261,
                        262,
                        264,
                        281,
                        283,
                        284,
                        285,
                        286,
                        296,
                        298,
                        299,
                        300,
                        301,
                        311,
                        312,
                        314,
                        315,
                        316,
                        317,
                        323,
                        324,
                        332,
                        333
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getRank')": [
                        225
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecompositionImpl', 'getSolver')": [
                        238
                    ],
                    "(None, None)": [
                        338
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrixTest', 'checkGetSubMatrix(RealMatrix,double,int,int,int,int,boolean)')": [
                        402,
                        412
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrixTest', 'checkGetSubMatrix(RealMatrix,double,int,int,boolean)')": [
                        426,
                        436
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrixTest', 'checkCopy(RealMatrix,double,int,int,int,int,boolean)')": [
                        473,
                        483
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrixTest', 'checkCopy(RealMatrix,double,int,int,boolean)')": [
                        500,
                        510
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrixTest', 'checkGetSubMatrix(RealMatrix,double,int,int,int,int,boolean)')": [
                        402,
                        412
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrixTest', 'checkGetSubMatrix(RealMatrix,double,int,int,boolean)')": [
                        426,
                        436
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrixTest', 'checkCopy(RealMatrix,double,int,int,int,int,boolean)')": [
                        473,
                        483
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrixTest', 'checkCopy(RealMatrix,double,int,int,boolean)')": [
                        500,
                        510
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrixTest', 'checkGetSubMatrix(RealMatrix,double,int,int,int,int)')": [
                        502,
                        512
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrixTest', 'checkGetSubMatrix(RealMatrix,double,int,int)')": [
                        526,
                        536
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrixTest', 'checkCopy(RealMatrix,double,int,int,int,int)')": [
                        592,
                        602
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrixTest', 'checkCopy(RealMatrix,double,int,int)')": [
                        619,
                        629
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrixTest', 'checkGetSubMatrix(RealMatrix,double,int,int,int,int)')": [
                        502,
                        512
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrixTest', 'checkGetSubMatrix(RealMatrix,double,int,int)')": [
                        526,
                        536
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrixTest', 'checkCopy(RealMatrix,double,int,int,int,int)')": [
                        592,
                        602
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrixTest', 'checkCopy(RealMatrix,double,int,int)')": [
                        619,
                        629
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/SparseRealMatrixTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testSubMatrix')": [
                        439,
                        440
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.linear#SparseRealMatrixTest', 'testSubMatrix')": [
                        439,
                        440
                    ]
                }
            }
        }
    },
    "b1676aecb4e9980d35797c5ef18f7b0582ae25fb": {
        "authored_data": "2010 Nov 22 21:29",
        "commit.message": "MATH-430\nNew package \"function\" contains univariate and bivariate function objects.\n\"FunctionUtils\" contains methods to compose and combine function objects.\nTogether they replace \"ComposableFunction\" and \"BinaryFunction\" which are\nnow deprecated.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1037896 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "cbea7bad84cbab46d28387c0bfcfcd8a287ca565",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/BinaryFunction.java": {
                "old": {
                    "('org.apache.commons.math.analysis#BinaryFunction', None)": [
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        100,
                        101
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunction', 'fix1stArgument(double)')": [
                        95,
                        96,
                        97,
                        98,
                        99
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunction', 'fix2ndArgument(double)')": [
                        109,
                        110,
                        111,
                        112,
                        113
                    ],
                    "(None, None)": [
                        114,
                        115,
                        117
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        34
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunction', 'make(BivariateRealFunction)')": [
                        36,
                        37,
                        38,
                        39,
                        40,
                        41
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunction', None)": [
                        42,
                        43,
                        44,
                        47,
                        48,
                        51,
                        52,
                        55,
                        56,
                        59,
                        60,
                        63,
                        64,
                        67,
                        68
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunction', 'fix1stArgument(double)')": [
                        78
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunction', 'fix2ndArgument(double)')": [
                        86
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/ComposableFunction.java": {
                "old": {
                    "('org.apache.commons.math.analysis#ComposableFunction', None)": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        30,
                        31,
                        33
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'make(UnivariateRealFunction)')": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', None)": [
                        41,
                        42,
                        43,
                        46,
                        47,
                        48,
                        50,
                        51,
                        54,
                        55,
                        58,
                        59,
                        62,
                        63,
                        66,
                        67,
                        70,
                        71,
                        74,
                        75,
                        78,
                        79,
                        82,
                        83,
                        86,
                        87,
                        90,
                        91,
                        94,
                        95,
                        98,
                        99,
                        102,
                        103,
                        106,
                        107,
                        128,
                        129,
                        132,
                        133,
                        136,
                        137,
                        140,
                        141,
                        144,
                        145,
                        148,
                        149
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/ComposableFunctionTest.java": {
                "new": {
                    "(None, None)": [
                        24,
                        25,
                        26,
                        27
                    ]
                }
            }
        }
    },
    "cbea7bad84cbab46d28387c0bfcfcd8a287ca565": {
        "authored_data": "2010 Nov 21 14:20",
        "commit.message": "Removed unnecessary \"try/catch\" statements.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1037468 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "b4129de7566cd85066c06e9863de99195fbb5443",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAbsToSelf')": [
                        353,
                        354,
                        355,
                        356
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', None)": [
                        357,
                        371,
                        385,
                        399,
                        413,
                        427,
                        441,
                        455,
                        469,
                        483,
                        497,
                        511,
                        525,
                        539,
                        553,
                        567,
                        581,
                        595,
                        609,
                        623,
                        637,
                        651,
                        665,
                        689,
                        703,
                        717
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAcosToSelf')": [
                        367,
                        368,
                        369,
                        370
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAsinToSelf')": [
                        381,
                        382,
                        383,
                        384
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAtanToSelf')": [
                        395,
                        396,
                        397,
                        398
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapCbrtToSelf')": [
                        409,
                        410,
                        411,
                        412
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapCeilToSelf')": [
                        423,
                        424,
                        425,
                        426
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapCosToSelf')": [
                        437,
                        438,
                        439,
                        440
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapCoshToSelf')": [
                        451,
                        452,
                        453,
                        454
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapDivideToSelf(double)')": [
                        465,
                        466,
                        467,
                        468
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapExpToSelf')": [
                        479,
                        480,
                        481,
                        482
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapExpm1ToSelf')": [
                        493,
                        494,
                        495,
                        496
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapFloorToSelf')": [
                        507,
                        508,
                        509,
                        510
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapInvToSelf')": [
                        521,
                        522,
                        523,
                        524
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapLogToSelf')": [
                        535,
                        536,
                        537,
                        538
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapLog10ToSelf')": [
                        549,
                        550,
                        551,
                        552
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapLog1pToSelf')": [
                        563,
                        564,
                        565,
                        566
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapMultiplyToSelf(double)')": [
                        577,
                        578,
                        579,
                        580
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapPowToSelf(double)')": [
                        591,
                        592,
                        593,
                        594
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapRintToSelf')": [
                        605,
                        606,
                        607,
                        608
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapSignumToSelf')": [
                        619,
                        620,
                        621,
                        622
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapSinToSelf')": [
                        633,
                        634,
                        635,
                        636
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapSinhToSelf')": [
                        647,
                        648,
                        649,
                        650
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapSqrtToSelf')": [
                        661,
                        662,
                        663,
                        664
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapTanToSelf')": [
                        685,
                        686,
                        687,
                        688
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapTanhToSelf')": [
                        699,
                        700,
                        701,
                        702
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapUlpToSelf')": [
                        713,
                        714,
                        715,
                        716
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'map(UnivariateRealFunction)')": [
                        826
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapToSelf(UnivariateRealFunction)')": [
                        831
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAbsToSelf')": [
                        352
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAcosToSelf')": [
                        362
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAsinToSelf')": [
                        372
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAtanToSelf')": [
                        382
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapCbrtToSelf')": [
                        392
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapCeilToSelf')": [
                        402
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapCosToSelf')": [
                        412
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapCoshToSelf')": [
                        422
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapDivideToSelf(double)')": [
                        432
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapExpToSelf')": [
                        442
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapExpm1ToSelf')": [
                        452
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapFloorToSelf')": [
                        462
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapInvToSelf')": [
                        472
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapLogToSelf')": [
                        482
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapLog10ToSelf')": [
                        492
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapLog1pToSelf')": [
                        502
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapMultiplyToSelf(double)')": [
                        512
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapPowToSelf(double)')": [
                        522
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapRintToSelf')": [
                        532
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapSignumToSelf')": [
                        542
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapSinToSelf')": [
                        552
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapSinhToSelf')": [
                        562
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapSqrtToSelf')": [
                        572
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapTanToSelf')": [
                        592
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapTanhToSelf')": [
                        602
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapUlpToSelf')": [
                        612
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'map(UnivariateRealFunction)')": [
                        721
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapToSelf(UnivariateRealFunction)')": [
                        726
                    ]
                }
            }
        }
    },
    "b4129de7566cd85066c06e9863de99195fbb5443": {
        "authored_data": "2010 Nov 21 02:36",
        "commit.message": "Refined test (follow-up of MATH-441).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1037372 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "22d63af83d508d170c4f6da52a69bc60be098764",
        "changes": {
            "src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testSinMin')": [
                        35
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testQuinticMin')": [
                        56
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', None)": [
                        80
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testBadFunction')": [
                        81,
                        83,
                        97
                    ]
                },
                "new": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testSinMin')": [
                        36
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testQuinticMin')": [
                        57
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', None)": [
                        81
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testBadFunction')": [
                        82,
                        84,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        106,
                        107
                    ]
                }
            }
        }
    },
    "3859aa17cfce95ac1a02a3e9092535713192d299": {
        "authored_data": "2010 Nov 20 21:31",
        "commit.message": "Added a normalization feature to transform samples so they have zero mean and unit standard deviation\nJira: MATH-426\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1037333 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "4f05aa7d181a279ef82b268f9a441b16d5505d70",
        "changes": {
            "src/main/java/org/apache/commons/math/stat/StatUtils.java": {
                "new": {
                    "(None, None)": [
                        21,
                        660
                    ],
                    "('org.apache.commons.math.stat#StatUtils', None)": [
                        632,
                        633,
                        634,
                        635,
                        636,
                        637,
                        638,
                        639
                    ],
                    "('org.apache.commons.math.stat#StatUtils', 'normalize(double)')": [
                        640,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        656,
                        657,
                        658,
                        659
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/stat/StatUtilsTest.java": {
                "new": {
                    "(None, None)": [
                        22,
                        465,
                        466,
                        467
                    ],
                    "('org.apache.commons.math.stat#StatUtilsTest', None)": [
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444
                    ],
                    "('org.apache.commons.math.stat#StatUtilsTest', 'testNormalize1')": [
                        430,
                        431,
                        432,
                        433,
                        434,
                        435
                    ],
                    "('org.apache.commons.math.stat#StatUtilsTest', 'testNormalize2')": [
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464
                    ]
                }
            }
        }
    },
    "4f05aa7d181a279ef82b268f9a441b16d5505d70": {
        "authored_data": "2010 Nov 20 21:01",
        "commit.message": "removed FunctionEvaluationException, DerivativeException and MatrixVisitorException\nthese exception were  deprecated in 2.2 and a smooth transition path was set up to help users, now all user functions should use the new unchecked MathUserException\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1037328 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "f2d9bc8f934db67a41cbce8c1c375270d43109ba",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/BinaryFunction.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunction', 'value(double,double)')": [
                        88
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunction', 'fix1stArgument(double)')": [
                        98
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunction', 'fix2ndArgument(double)')": [
                        112
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunction', 'value(double,double)')": [
                        88
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunction', 'fix1stArgument(double)')": [
                        98
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunction', 'fix2ndArgument(double)')": [
                        112
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/BivariateRealFunction.java": {
                "old": {
                    "(None, None)": [
                        20,
                        35,
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        35,
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/ComposableFunction.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'of(UnivariateRealFunction)')": [
                        287
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'postCompose(UnivariateRealFunction)')": [
                        306
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'combine(UnivariateRealFunction,BivariateRealFunction)')": [
                        327
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'add(UnivariateRealFunction)')": [
                        342
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'add(double)')": [
                        357
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'subtract(UnivariateRealFunction)')": [
                        372
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'multiply(UnivariateRealFunction)')": [
                        387
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'multiply(double)')": [
                        402
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'divide(UnivariateRealFunction)')": [
                        416
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'asCollector(BivariateRealFunction,double)')": [
                        444
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'value(double)')": [
                        504
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'of(UnivariateRealFunction)')": [
                        287
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'postCompose(UnivariateRealFunction)')": [
                        306
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'combine(UnivariateRealFunction,BivariateRealFunction)')": [
                        327
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'add(UnivariateRealFunction)')": [
                        342
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'add(double)')": [
                        357
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'subtract(UnivariateRealFunction)')": [
                        372
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'multiply(UnivariateRealFunction)')": [
                        387
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'multiply(double)')": [
                        402
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'divide(UnivariateRealFunction)')": [
                        416
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'asCollector(BivariateRealFunction,double)')": [
                        444
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunction', 'value(double)')": [
                        504
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/MultivariateMatrixFunction.java": {
                "old": {
                    "(None, None)": [
                        21,
                        34,
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        34,
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/MultivariateRealFunction.java": {
                "old": {
                    "(None, None)": [
                        20,
                        33,
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        33,
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/MultivariateVectorialFunction.java": {
                "old": {
                    "(None, None)": [
                        20,
                        33,
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        33,
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/TrivariateRealFunction.java": {
                "old": {
                    "(None, None)": [
                        20,
                        36,
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        36,
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java": {
                "old": {
                    "(None, None)": [
                        19,
                        33,
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        33,
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java": {
                "old": {
                    "(None, None)": [
                        36,
                        37,
                        45,
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        38,
                        46,
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java": {
                "old": {
                    "(None, None)": [
                        19,
                        33,
                        35
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        33,
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegrator.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegrator', 'integrate(double,double)')": [
                        159
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegrator', 'integrate(UnivariateRealFunction,double,double)')": [
                        164,
                        165,
                        166
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegrator', None)": [
                        211
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegrator', 'stage(UnivariateRealFunction,double,double,int)')": [
                        216
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegrator', 'integrate(double,double)')": [
                        159
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegrator', 'integrate(UnivariateRealFunction,double,double)')": [
                        164,
                        165
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegrator', None)": [
                        210
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegrator', 'stage(UnivariateRealFunction,double,double,int)')": [
                        215
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/RombergIntegrator.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.integration#RombergIntegrator', 'integrate(double,double)')": [
                        63
                    ],
                    "('org.apache.commons.math.analysis.integration#RombergIntegrator', 'integrate(UnivariateRealFunction,double,double)')": [
                        68,
                        69,
                        70
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.integration#RombergIntegrator', 'integrate(double,double)')": [
                        63
                    ],
                    "('org.apache.commons.math.analysis.integration#RombergIntegrator', 'integrate(UnivariateRealFunction,double,double)')": [
                        68,
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/SimpsonIntegrator.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.integration#SimpsonIntegrator', 'integrate(double,double)')": [
                        62
                    ],
                    "('org.apache.commons.math.analysis.integration#SimpsonIntegrator', 'integrate(UnivariateRealFunction,double,double)')": [
                        67,
                        68,
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.integration#SimpsonIntegrator', 'integrate(double,double)')": [
                        62
                    ],
                    "('org.apache.commons.math.analysis.integration#SimpsonIntegrator', 'integrate(UnivariateRealFunction,double,double)')": [
                        67,
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/TrapezoidIntegrator.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegrator', None)": [
                        75,
                        76
                    ],
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegrator', 'stage(UnivariateRealFunction,double,double,int)')": [
                        80
                    ],
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegrator', 'integrate(double,double)')": [
                        103
                    ],
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegrator', 'integrate(UnivariateRealFunction,double,double)')": [
                        108,
                        109,
                        110
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegrator', None)": [
                        75
                    ],
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegrator', 'stage(UnivariateRealFunction,double,double,int)')": [
                        79
                    ],
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegrator', 'integrate(double,double)')": [
                        102
                    ],
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegrator', 'integrate(UnivariateRealFunction,double,double)')": [
                        107,
                        108
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegrator.java": {
                "old": {
                    "(None, None)": [
                        21,
                        70,
                        78,
                        79,
                        90,
                        91,
                        95,
                        96
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        70,
                        78,
                        79,
                        90,
                        94,
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        44
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        44
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        50
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', None)": [
                        92,
                        93,
                        94,
                        95,
                        158,
                        159,
                        218,
                        219,
                        220,
                        221
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        101
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        165,
                        166
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(UnivariateRealFunction,double,double,double,double,double,double)')": [
                        227
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', None)": [
                        92,
                        93,
                        156,
                        214,
                        215
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        99
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        162
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(UnivariateRealFunction,double,double,double,double,double,double)')": [
                        221
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', None)": [
                        62,
                        63,
                        106,
                        107,
                        174,
                        175,
                        198,
                        199,
                        247,
                        248
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        68
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        112
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solveAll(double,double)')": [
                        179
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solveAll(Complex,Complex)')": [
                        203
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(Complex,Complex)')": [
                        252
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', None)": [
                        62,
                        105,
                        172,
                        195,
                        243
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        67
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        110
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solveAll(double,double)')": [
                        176
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solveAll(Complex,Complex)')": [
                        199
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(Complex,Complex)')": [
                        247
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', None)": [
                        60,
                        61,
                        103,
                        104,
                        214,
                        215
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        66
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        109
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', 'solve2(UnivariateRealFunction,double,double)')": [
                        220
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', None)": [
                        60,
                        102,
                        212
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        65
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        107
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', 'solve2(UnivariateRealFunction,double,double)')": [
                        217
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', None)": [
                        53,
                        54,
                        72,
                        73
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        59
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        79
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', None)": [
                        53,
                        71
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        58
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/RiddersSolver.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', None)": [
                        58,
                        59,
                        90,
                        91
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        64
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        96
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', None)": [
                        58,
                        89
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        63
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        94
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', None)": [
                        62,
                        63,
                        80,
                        81
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        69
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        87
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', None)": [
                        62,
                        79
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        68
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', 'solve(UnivariateRealFunction,double,double)')": [
                        85
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolver.java": {
                "old": {
                    "(None, None)": [
                        21,
                        73,
                        74,
                        80,
                        81,
                        96,
                        97,
                        103
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        73,
                        79,
                        94,
                        100
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', None)": [
                        144,
                        145,
                        208,
                        209
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', 'isBracketing(double,double,UnivariateRealFunction)')": [
                        149
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', 'verifyBracketing(double,double,UnivariateRealFunction)')": [
                        213
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', None)": [
                        144,
                        207
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', 'isBracketing(double,double,UnivariateRealFunction)')": [
                        148
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', 'verifyBracketing(double,double,UnivariateRealFunction)')": [
                        211
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', None)": [
                        50,
                        51,
                        71,
                        72,
                        123,
                        124,
                        164,
                        165
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'solve(UnivariateRealFunction,double,double)')": [
                        56
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'solve(UnivariateRealFunction,double,double,double)')": [
                        79
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'bracket(UnivariateRealFunction,double,double,double)')": [
                        130
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'bracket(UnivariateRealFunction,double,double,double,int)')": [
                        172
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', None)": [
                        50,
                        70,
                        121,
                        161
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'solve(UnivariateRealFunction,double,double)')": [
                        55
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'solve(UnivariateRealFunction,double,double,double)')": [
                        77
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'bracket(UnivariateRealFunction,double,double,double)')": [
                        127
                    ],
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', 'bracket(UnivariateRealFunction,double,double,double,int)')": [
                        168
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAddToSelf(double)')": [
                        159,
                        160,
                        161,
                        162,
                        163
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAbsToSelf')": [
                        359
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAcosToSelf')": [
                        373
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAsinToSelf')": [
                        387
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAtanToSelf')": [
                        401
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapCbrtToSelf')": [
                        415
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapCeilToSelf')": [
                        429
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapCosToSelf')": [
                        443
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapCoshToSelf')": [
                        457
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapDivideToSelf(double)')": [
                        471
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapExpToSelf')": [
                        485
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapExpm1ToSelf')": [
                        499
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapFloorToSelf')": [
                        513
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapInvToSelf')": [
                        527
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapLogToSelf')": [
                        541
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapLog10ToSelf')": [
                        555
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapLog1pToSelf')": [
                        569
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapMultiplyToSelf(double)')": [
                        583
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapPowToSelf(double)')": [
                        597
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapRintToSelf')": [
                        611
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapSignumToSelf')": [
                        625
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapSinToSelf')": [
                        639
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapSinhToSelf')": [
                        653
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapSqrtToSelf')": [
                        667
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapTanToSelf')": [
                        691
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapTanhToSelf')": [
                        705
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapUlpToSelf')": [
                        719
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'map(UnivariateRealFunction)')": [
                        830
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapToSelf(UnivariateRealFunction)')": [
                        835
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAddToSelf(double)')": [
                        159
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAbsToSelf')": [
                        355
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAcosToSelf')": [
                        369
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAsinToSelf')": [
                        383
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapAtanToSelf')": [
                        397
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapCbrtToSelf')": [
                        411
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapCeilToSelf')": [
                        425
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapCosToSelf')": [
                        439
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapCoshToSelf')": [
                        453
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapDivideToSelf(double)')": [
                        467
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapExpToSelf')": [
                        481
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapExpm1ToSelf')": [
                        495
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapFloorToSelf')": [
                        509
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapInvToSelf')": [
                        523
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapLogToSelf')": [
                        537
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapLog10ToSelf')": [
                        551
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapLog1pToSelf')": [
                        565
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapMultiplyToSelf(double)')": [
                        579
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapPowToSelf(double)')": [
                        593
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapRintToSelf')": [
                        607
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapSignumToSelf')": [
                        621
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapSinToSelf')": [
                        635
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapSinhToSelf')": [
                        649
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapSqrtToSelf')": [
                        663
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapTanToSelf')": [
                        687
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapTanhToSelf')": [
                        701
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapUlpToSelf')": [
                        715
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'map(UnivariateRealFunction)')": [
                        826
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapToSelf(UnivariateRealFunction)')": [
                        831
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/Array2DRowFieldMatrix.java": {
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixChangingVisitor.java": {
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/DefaultFieldMatrixPreservingVisitor.java": {
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/DefaultRealMatrixChangingVisitor.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/DefaultRealMatrixPreservingVisitor.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/FieldMatrix.java": {
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/FieldMatrixChangingVisitor.java": {
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/FieldMatrixPreservingVisitor.java": {
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealMatrix.java": {
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealMatrixChangingVisitor.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealMatrixPreservingVisitor.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealVector.java": {
                "old": {
                    "(None, None)": [
                        21,
                        60,
                        61,
                        62,
                        72,
                        73,
                        74
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        60,
                        61,
                        62,
                        72,
                        73,
                        74
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#AbstractIntegrator', None)": [
                        176,
                        177
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'computeDerivatives(double,double,double)')": [
                        180,
                        182
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', None)": [
                        177,
                        178
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'computeDerivatives(double,double,double)')": [
                        181,
                        183
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java": {
                "old": {
                    "('org.apache.commons.math.ode#ContinuousOutputModel', None)": [
                        119,
                        120,
                        196,
                        197,
                        345,
                        346,
                        347
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'append(ContinuousOutputModel)')": [
                        126
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'handleStep(StepInterpolator,boolean)')": [
                        200
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'getInterpolatedState')": [
                        348
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModel', None)": [
                        120,
                        121,
                        197,
                        198,
                        346,
                        347,
                        348
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'append(ContinuousOutputModel)')": [
                        127
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'handleStep(StepInterpolator,boolean)')": [
                        201
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModel', 'getInterpolatedState')": [
                        349
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java": {
                "old": {
                    "('org.apache.commons.math.ode#FirstOrderConverter', None)": [
                        98
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverter', 'computeDerivatives(double,double,double)')": [
                        102
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverter', None)": [
                        100
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverter', 'computeDerivatives(double,double,double)')": [
                        104
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/FirstOrderDifferentialEquations.java": {
                "old": {
                    "(None, None)": [
                        59,
                        60,
                        62
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        61,
                        62,
                        64,
                        65
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java": {
                "old": {
                    "(None, None)": [
                        53,
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        55,
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#MultistepIntegrator', None)": [
                        208,
                        324,
                        369,
                        396
                    ],
                    "('org.apache.commons.math.ode#MultistepIntegrator', 'start(double,double,double)')": [
                        212,
                        227,
                        228,
                        230
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode#MultistepIntegrator', None)": [
                        209,
                        325,
                        370,
                        397
                    ],
                    "('org.apache.commons.math.ode#MultistepIntegrator', 'start(double,double,double)')": [
                        213,
                        228,
                        229,
                        231
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/SecondOrderDifferentialEquations.java": {
                "old": {
                    "(None, None)": [
                        61,
                        62,
                        64,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        63,
                        64,
                        66,
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java": {
                "old": {
                    "(None, None)": [
                        50,
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        52,
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/events/CombinedEventsManager.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.ode.events#CombinedEventsManager', None)": [
                        118
                    ],
                    "('org.apache.commons.math.ode.events#CombinedEventsManager', 'evaluateStep(StepInterpolator)')": [
                        123
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.ode.events#CombinedEventsManager', None)": [
                        118
                    ],
                    "('org.apache.commons.math.ode.events#CombinedEventsManager', 'evaluateStep(StepInterpolator)')": [
                        123
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/events/EventState.java": {
                "old": {
                    "(None, None)": [
                        21,
                        25
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'reinitializeBegin(StepInterpolator)')": [
                        183,
                        184
                    ],
                    "('org.apache.commons.math.ode.events#EventState', None)": [
                        193
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'evaluateStep(StepInterpolator)')": [
                        200,
                        247,
                        251,
                        252,
                        254,
                        294,
                        295,
                        296,
                        297,
                        298,
                        301
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'reinitializeBegin(StepInterpolator)')": [
                        182,
                        183
                    ],
                    "('org.apache.commons.math.ode.events#EventState', None)": [
                        192
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'evaluateStep(StepInterpolator)')": [
                        199,
                        246,
                        251,
                        291,
                        292,
                        293,
                        296
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobians', None)": [
                        209,
                        398,
                        406,
                        488,
                        502,
                        509,
                        570,
                        655,
                        662,
                        674,
                        687,
                        694,
                        706,
                        724
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobians', 'integrate(double,double,double,double,double,double,double)')": [
                        215
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobians', None)": [
                        209,
                        398,
                        406,
                        488,
                        502,
                        509,
                        570,
                        655,
                        662,
                        674,
                        687,
                        694,
                        706,
                        724
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobians', 'integrate(double,double,double,double,double,double,double)')": [
                        215
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/jacobians/ODEWithJacobians.java": {
                "old": {
                    "(None, None)": [
                        20,
                        46,
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        46,
                        50
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/jacobians/StepHandlerWithJacobians.java": {
                "old": {
                    "(None, None)": [
                        20,
                        90,
                        93
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        90,
                        93
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/jacobians/StepInterpolatorWithJacobians.java": {
                "old": {
                    "(None, None)": [
                        22,
                        91,
                        94,
                        105,
                        108,
                        119,
                        122,
                        131,
                        134,
                        145,
                        148,
                        159,
                        162,
                        180,
                        184
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        91,
                        94,
                        105,
                        108,
                        119,
                        122,
                        131,
                        134,
                        145,
                        148,
                        159,
                        162,
                        180,
                        184
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        192
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        192
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdamsIntegrator.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsIntegrator', None)": [
                        88
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsIntegrator', None)": [
                        88
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        209
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        209
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', None)": [
                        216,
                        321
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'initializeStep(FirstOrderDifferentialEquations,boolean,int,double,double,double,double,double,double)')": [
                        223
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', None)": [
                        216,
                        321
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'initializeStep(FirstOrderDifferentialEquations,boolean,int,double,double,double,double,double,double)')": [
                        223
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        86
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        86
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        169
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        169
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        316
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'doFinalize')": [
                        390
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'writeExternal(ObjectOutput)')": [
                        439
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        316
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'doFinalize')": [
                        390
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', 'writeExternal(ObjectOutput)')": [
                        439
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EmbeddedRungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        196
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EmbeddedRungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        196
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        82
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        94
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        94
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', None)": [
                        463
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'tryStep(double,double,double,int,double,double,double,double,double)')": [
                        470
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        559
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', None)": [
                        463
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'tryStep(double,double,double,int,double,double,double,double,double)')": [
                        470
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        559
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        314
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        314
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        74
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        74
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        84
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        84
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        99
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        99
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        89
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'copy')": [
                        187
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', None)": [
                        261,
                        266,
                        267,
                        268,
                        336,
                        350,
                        354
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'getInterpolatedState')": [
                        269
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'getInterpolatedDerivatives')": [
                        284
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'finalizeStep')": [
                        340
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'writeBaseExternal(ObjectOutput)')": [
                        398
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'copy')": [
                        187
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', None)": [
                        261,
                        266,
                        267,
                        268,
                        336,
                        350,
                        354
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'getInterpolatedState')": [
                        269
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'getInterpolatedDerivatives')": [
                        284
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'finalizeStep')": [
                        340
                    ],
                    "('org.apache.commons.math.ode.sampling#AbstractStepInterpolator', 'writeBaseExternal(ObjectOutput)')": [
                        398
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        23,
                        24
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolator', None)": [
                        101,
                        102
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        105,
                        106
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolator', 'computeInterpolatedStateAndDerivatives(double,double)')": [
                        101
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/FixedStepHandler.java": {
                "old": {
                    "(None, None)": [
                        20,
                        58,
                        60
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        58,
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolator', None)": [
                        174
                    ],
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolator', 'getInterpolatedStateVariation')": [
                        178
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolator', None)": [
                        174
                    ],
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolator', 'getInterpolatedStateVariation')": [
                        178
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/StepHandler.java": {
                "old": {
                    "(None, None)": [
                        20,
                        73,
                        74,
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        73,
                        74,
                        76
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/StepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        22,
                        92,
                        93,
                        95,
                        104,
                        105,
                        108,
                        126,
                        127,
                        130
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        92,
                        93,
                        95,
                        104,
                        105,
                        108,
                        126,
                        127,
                        130
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizer', None)": [
                        112
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizer', 'handleStep(StepInterpolator,boolean)')": [
                        116
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizer', None)": [
                        112
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizer', 'handleStep(StepInterpolator,boolean)')": [
                        116
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', 'optimize(FUNC,GoalType,double)')": [
                        139
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', 'optimize(FUNC,GoalType,double)')": [
                        138
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateVectorialOptimizer', 'optimize(FUNC,double,double,double)')": [
                        140,
                        141,
                        150,
                        164,
                        165
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateVectorialOptimizer', 'optimize(FUNC,double,double,double)')": [
                        140,
                        141,
                        142,
                        151,
                        152,
                        166
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        54,
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java": {
                "old": {
                    "(None, None)": [
                        57
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        56,
                        59
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/LeastSquaresConverter.java": {
                "old": {
                    "(None, None)": [
                        20,
                        23
                    ],
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', 'value(double)')": [
                        154
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.math.optimization#LeastSquaresConverter', 'value(double)')": [
                        154
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/AbstractSimplex.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#AbstractSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        206
                    ],
                    "('org.apache.commons.math.optimization.direct#AbstractSimplex', 'evaluate(MultivariateRealFunction,Comparator)')": [
                        244
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization.direct#AbstractSimplex', None)": [
                        205,
                        209,
                        245
                    ],
                    "('org.apache.commons.math.optimization.direct#AbstractSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        208
                    ],
                    "('org.apache.commons.math.optimization.direct#AbstractSimplex', 'evaluate(MultivariateRealFunction,Comparator)')": [
                        248,
                        249
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'computeObjectiveValue(double)')": [
                        105
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'optimize(FUNC,GoalType,double)')": [
                        117
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'doOptimize')": [
                        160
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', None)": [
                        105,
                        161
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'computeObjectiveValue(double)')": [
                        107
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'optimize(FUNC,GoalType,double)')": [
                        119
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'doOptimize')": [
                        163
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'computeObjectiveValue(double)')": [
                        107
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'optimize(FUNC,double,double,double)')": [
                        117,
                        118,
                        119
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'doOptimize')": [
                        162
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', None)": [
                        107,
                        162
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'computeObjectiveValue(double)')": [
                        109
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'optimize(FUNC,double,double,double)')": [
                        119,
                        120
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'doOptimize')": [
                        164
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/MultiDirectionalSimplex.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        156,
                        178,
                        179
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalSimplex', 'evaluateNewSimplex(MultivariateRealFunction,RealPointValuePair,double,Comparator)')": [
                        197
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        157,
                        158,
                        180
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalSimplex', None)": [
                        181,
                        195
                    ],
                    "('org.apache.commons.math.optimization.direct#MultiDirectionalSimplex', 'evaluateNewSimplex(MultivariateRealFunction,RealPointValuePair,double,Comparator)')": [
                        200,
                        201
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/NelderMeadSimplex.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#NelderMeadSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        188
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization.direct#NelderMeadSimplex', 'iterate(MultivariateRealFunction,Comparator)')": [
                        189,
                        190
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', 'doOptimize')": [
                        110
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', None)": [
                        258,
                        259,
                        262
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', 'doOptimize')": [
                        111
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', None)": [
                        258,
                        260,
                        261,
                        264
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizer', 'doOptimize')": [
                        110,
                        119
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizer', 'doOptimize')": [
                        111,
                        120
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java": {
                "old": {
                    "('org.apache.commons.math.optimization.fitting#CurveFitter', 'fit(ParametricRealFunction,double)')": [
                        125
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitter', None)": [
                        124
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitter', 'fit(ParametricRealFunction,double)')": [
                        127
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        100,
                        177,
                        211
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateJacobian')": [
                        101
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateResidualsAndCost')": [
                        127
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'getCovariances')": [
                        178
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'guessParametersErrors')": [
                        212
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        230
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        101,
                        102,
                        179,
                        180,
                        214,
                        215
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateJacobian')": [
                        103
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'updateResidualsAndCost')": [
                        129
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'getCovariances')": [
                        181
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'guessParametersErrors')": [
                        216
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        234
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'computeObjectiveGradient(double)')": [
                        68
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'optimize(DifferentiableMultivariateRealFunction,GoalType,double)')": [
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', None)": [
                        68
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'computeObjectiveGradient(double)')": [
                        70,
                        71
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'optimize(DifferentiableMultivariateRealFunction,GoalType,double)')": [
                        79
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizer', 'doOptimize')": [
                        65
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        217
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', 'doOptimize')": [
                        218
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        111
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'findUpperBound(UnivariateRealFunction,double,double)')": [
                        222
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        266
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        112
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        221,
                        269
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'findUpperBound(UnivariateRealFunction,double,double)')": [
                        224,
                        225
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'computeObjectiveValue(double)')": [
                        100
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'optimize(UnivariateRealFunction,GoalType,double,double,double)')": [
                        113
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'optimize(UnivariateRealFunction,GoalType,double,double)')": [
                        137
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'doOptimize')": [
                        163
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', None)": [
                        100,
                        164
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'computeObjectiveValue(double)')": [
                        102
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'optimize(UnivariateRealFunction,GoalType,double,double,double)')": [
                        115
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'optimize(UnivariateRealFunction,GoalType,double,double)')": [
                        139
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'doOptimize')": [
                        166
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        58,
                        82
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        57,
                        60,
                        81,
                        85
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/BracketFinder.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', None)": [
                        105,
                        111,
                        281
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', 'search(UnivariateRealFunction,GoalType,double,double)')": [
                        112,
                        113,
                        114,
                        115
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', 'eval(UnivariateRealFunction,double)')": [
                        282,
                        283
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', None)": [
                        106,
                        112,
                        113,
                        281,
                        282
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', 'search(UnivariateRealFunction,GoalType,double,double)')": [
                        114,
                        115
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinder', 'eval(UnivariateRealFunction,double)')": [
                        283
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizer', 'doOptimize')": [
                        88
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizer', 'doOptimize')": [
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', 'optimize(FUNC,GoalType,double,double)')": [
                        143
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', 'optimize(FUNC,GoalType,double,double,double)')": [
                        150
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', 'optimize(FUNC,GoalType,double,double)')": [
                        143,
                        144
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', 'optimize(FUNC,GoalType,double,double,double)')": [
                        151,
                        152
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/FastCosineTransformer.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.transform#FastCosineTransformer', None)": [
                        79,
                        120,
                        162,
                        163,
                        202,
                        203
                    ],
                    "('org.apache.commons.math.transform#FastCosineTransformer', 'transform(UnivariateRealFunction,double,double,int)')": [
                        85
                    ],
                    "('org.apache.commons.math.transform#FastCosineTransformer', 'transform2(UnivariateRealFunction,double,double,int)')": [
                        126
                    ],
                    "('org.apache.commons.math.transform#FastCosineTransformer', 'inversetransform(UnivariateRealFunction,double,double,int)')": [
                        168
                    ],
                    "('org.apache.commons.math.transform#FastCosineTransformer', 'inversetransform2(UnivariateRealFunction,double,double,int)')": [
                        208
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.transform#FastCosineTransformer', None)": [
                        79,
                        120,
                        162,
                        201
                    ],
                    "('org.apache.commons.math.transform#FastCosineTransformer', 'transform(UnivariateRealFunction,double,double,int)')": [
                        85
                    ],
                    "('org.apache.commons.math.transform#FastCosineTransformer', 'transform2(UnivariateRealFunction,double,double,int)')": [
                        126
                    ],
                    "('org.apache.commons.math.transform#FastCosineTransformer', 'inversetransform(UnivariateRealFunction,double,double,int)')": [
                        167
                    ],
                    "('org.apache.commons.math.transform#FastCosineTransformer', 'inversetransform2(UnivariateRealFunction,double,double,int)')": [
                        206
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', None)": [
                        89,
                        144,
                        203,
                        262,
                        427,
                        428,
                        429,
                        430
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'transform(UnivariateRealFunction,double,double,int)')": [
                        95
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'transform2(UnivariateRealFunction,double,double,int)')": [
                        150
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'inversetransform(UnivariateRealFunction,double,double,int)')": [
                        209
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'inversetransform2(UnivariateRealFunction,double,double,int)')": [
                        268
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'sample(UnivariateRealFunction,double,double,int)')": [
                        431,
                        432,
                        433
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', None)": [
                        89,
                        144,
                        203,
                        262,
                        427,
                        428,
                        429
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'transform(UnivariateRealFunction,double,double,int)')": [
                        95
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'transform2(UnivariateRealFunction,double,double,int)')": [
                        150
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'inversetransform(UnivariateRealFunction,double,double,int)')": [
                        209
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'inversetransform2(UnivariateRealFunction,double,double,int)')": [
                        268
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformer', 'sample(UnivariateRealFunction,double,double,int)')": [
                        430,
                        431
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/FastHadamardTransformer.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.transform#FastHadamardTransformer', 'transform(UnivariateRealFunction,double,double,int)')": [
                        46
                    ],
                    "('org.apache.commons.math.transform#FastHadamardTransformer', 'inversetransform(UnivariateRealFunction,double,double,int)')": [
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.transform#FastHadamardTransformer', 'transform(UnivariateRealFunction,double,double,int)')": [
                        46
                    ],
                    "('org.apache.commons.math.transform#FastHadamardTransformer', 'inversetransform(UnivariateRealFunction,double,double,int)')": [
                        59
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/FastSineTransformer.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.transform#FastSineTransformer', None)": [
                        78,
                        118,
                        159,
                        160,
                        198,
                        199
                    ],
                    "('org.apache.commons.math.transform#FastSineTransformer', 'transform(UnivariateRealFunction,double,double,int)')": [
                        84
                    ],
                    "('org.apache.commons.math.transform#FastSineTransformer', 'transform2(UnivariateRealFunction,double,double,int)')": [
                        124
                    ],
                    "('org.apache.commons.math.transform#FastSineTransformer', 'inversetransform(UnivariateRealFunction,double,double,int)')": [
                        164
                    ],
                    "('org.apache.commons.math.transform#FastSineTransformer', 'inversetransform2(UnivariateRealFunction,double,double,int)')": [
                        203
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.transform#FastSineTransformer', None)": [
                        78,
                        118,
                        159,
                        197
                    ],
                    "('org.apache.commons.math.transform#FastSineTransformer', 'transform(UnivariateRealFunction,double,double,int)')": [
                        84
                    ],
                    "('org.apache.commons.math.transform#FastSineTransformer', 'transform2(UnivariateRealFunction,double,double,int)')": [
                        124
                    ],
                    "('org.apache.commons.math.transform#FastSineTransformer', 'inversetransform(UnivariateRealFunction,double,double,int)')": [
                        163
                    ],
                    "('org.apache.commons.math.transform#FastSineTransformer', 'inversetransform2(UnivariateRealFunction,double,double,int)')": [
                        201
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/RealTransformer.java": {
                "old": {
                    "(None, None)": [
                        19,
                        52,
                        53,
                        57,
                        75,
                        76,
                        80
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        52,
                        56,
                        74,
                        78
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/BinaryFunctionTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunctionTest', 'testAdd')": [
                        27
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunctionTest', 'testSubtract')": [
                        33
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunctionTest', 'testMultiply')": [
                        39
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunctionTest', 'testDivide')": [
                        45
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunctionTest', 'testPow')": [
                        51
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunctionTest', 'testAtan2')": [
                        57
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunctionTest', 'testFix1st')": [
                        63
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunctionTest', 'testFix2nd')": [
                        71
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunctionTest', 'testAdd')": [
                        27
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunctionTest', 'testSubtract')": [
                        33
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunctionTest', 'testMultiply')": [
                        39
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunctionTest', 'testDivide')": [
                        45
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunctionTest', 'testPow')": [
                        51
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunctionTest', 'testAtan2')": [
                        57
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunctionTest', 'testFix1st')": [
                        63
                    ],
                    "('org.apache.commons.math.analysis#BinaryFunctionTest', 'testFix2nd')": [
                        71
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/ComposableFunctionTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testZero')": [
                        27
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testOne')": [
                        33
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testIdentity')": [
                        39
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testRint')": [
                        45
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testSignum')": [
                        51
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testComposition')": [
                        57
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testCombine')": [
                        107
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testSimpleCombination')": [
                        118
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testCollector')": [
                        138
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testZero')": [
                        27
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testOne')": [
                        33
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testIdentity')": [
                        39
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testRint')": [
                        45
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testSignum')": [
                        51
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testComposition')": [
                        57
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testCombine')": [
                        107
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testSimpleCombination')": [
                        118
                    ],
                    "('org.apache.commons.math.analysis#ComposableFunctionTest', 'testCollector')": [
                        138
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/Expm1Function.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis#Expm1Function', 'value(double)')": [
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.math.analysis#Expm1Function', 'derivative')": [
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis#Expm1Function', 'value(double)')": [
                        28,
                        29
                    ],
                    "('org.apache.commons.math.analysis#Expm1Function', 'derivative')": [
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/MonitoredFunction.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis#MonitoredFunction', 'value(double)')": [
                        41
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis#MonitoredFunction', 'value(double)')": [
                        41
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/QuinticFunction.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.analysis#QuinticFunction', 'value(double)')": [
                        31
                    ],
                    "('org.apache.commons.math.analysis#QuinticFunction', 'derivative')": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis#QuinticFunction', 'value(double)')": [
                        29
                    ],
                    "('org.apache.commons.math.analysis#QuinticFunction', 'derivative')": [
                        35
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/SinFunction.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis#SinFunction', 'value(double)')": [
                        37
                    ],
                    "('org.apache.commons.math.analysis#SinFunction', 'derivative')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis#SinFunction', 'value(double)')": [
                        36
                    ],
                    "('org.apache.commons.math.analysis#SinFunction', 'derivative')": [
                        44
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/SumSincFunction.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis#SumSincFunction', 'value(double)')": [
                        46
                    ],
                    "('org.apache.commons.math.analysis#SumSincFunction', 'partialDerivative(int)')": [
                        61
                    ],
                    "('org.apache.commons.math.analysis#SumSincFunction', 'gradient')": [
                        73
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis#SumSincFunction', 'value(double)')": [
                        46
                    ],
                    "('org.apache.commons.math.analysis#SumSincFunction', 'partialDerivative(int)')": [
                        61
                    ],
                    "('org.apache.commons.math.analysis#SumSincFunction', 'gradient')": [
                        73
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegratorTest', 'testExactIntegration')": [
                        80
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegratorTest', 'testExactIntegration')": [
                        80
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/interpolation/NevilleInterpolatorTest.java": {
                "new": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/Array2DRowRealMatrixTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#Array2DRowRealMatrixTest', 'testWalk')": [
                        879
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.linear#Array2DRowRealMatrixTest', 'testWalk')": [
                        880
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/BlockFieldMatrixTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#BlockFieldMatrixTest', 'testWalk')": [
                        1200
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.linear#BlockFieldMatrixTest', 'testWalk')": [
                        1201
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/BlockRealMatrixTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#BlockRealMatrixTest', 'testWalk')": [
                        1102
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.linear#BlockRealMatrixTest', 'testWalk')": [
                        1103
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/FieldMatrixImplTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#FieldMatrixImplTest', 'testWalk')": [
                        887
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.linear#FieldMatrixImplTest', 'testWalk')": [
                        888
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/QRDecompositionImplTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', None)": [
                        54,
                        80,
                        105,
                        167
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', 'testDimensions')": [
                        55
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', 'testAEqualQR')": [
                        81
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', 'testQOrthogonal')": [
                        106
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', 'testRUpperTriangular')": [
                        132
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', 'checkUpperTriangular(RealMatrix)')": [
                        156
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', 'testHTrapezoidal')": [
                        168
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', 'checkTrapezoidal(RealMatrix)')": [
                        192
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', None)": [
                        56,
                        57,
                        83,
                        84,
                        109,
                        110,
                        172,
                        173
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', 'testDimensions')": [
                        58
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', 'testAEqualQR')": [
                        85
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', 'testQOrthogonal')": [
                        111
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', 'testRUpperTriangular')": [
                        137
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', 'checkUpperTriangular(RealMatrix)')": [
                        161
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', 'testHTrapezoidal')": [
                        174
                    ],
                    "('org.apache.commons.math.linear#QRDecompositionImplTest', 'checkTrapezoidal(RealMatrix)')": [
                        198
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/QRSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#QRSolverTest', 'testOverdetermined')": [
                        162
                    ],
                    "('org.apache.commons.math.linear#QRSolverTest', 'testUnderdetermined')": [
                        185
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.linear#QRSolverTest', 'testOverdetermined')": [
                        163
                    ],
                    "('org.apache.commons.math.linear#QRSolverTest', 'testUnderdetermined')": [
                        186
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/ContinuousOutputModelTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'testBoundaries')": [
                        43
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'testRandomAccess')": [
                        55
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'testModelsMerging')": [
                        84,
                        91
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'testErrorConditions')": [
                        136
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'checkAppendError(ContinuousOutputModel,double,double,double)')": [
                        157
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'testBoundaries')": [
                        43
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'testRandomAccess')": [
                        55
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'testModelsMerging')": [
                        84,
                        91
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'testErrorConditions')": [
                        136
                    ],
                    "('org.apache.commons.math.ode#ContinuousOutputModelTest', 'checkAppendError(ContinuousOutputModel,double,double,double)')": [
                        157
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/FirstOrderConverterTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', 'testDecreasingSteps')": [
                        45
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', 'testSmallStep')": [
                        62
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', 'testBigStep')": [
                        69
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', 'integrateWithSpecifiedStep(double,double,double,double)')": [
                        103
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', 'testDecreasingSteps')": [
                        45
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', 'testSmallStep')": [
                        62
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', 'testBigStep')": [
                        69
                    ],
                    "('org.apache.commons.math.ode#FirstOrderConverterTest', 'integrateWithSpecifiedStep(double,double,double,double)')": [
                        103
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/TestProblemHandler.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode#TestProblemHandler', 'handleStep(StepInterpolator,boolean)')": [
                        76
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode#TestProblemHandler', 'handleStep(StepInterpolator,boolean)')": [
                        76
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/events/EventStateTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.events#EventStateTest', 'closeEvents')": [
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.events#EventStateTest', 'closeEvents')": [
                        33
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testLowAccuracyExternalDifferentiation')": [
                        33
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testHighAccuracyExternalDifferentiation')": [
                        66
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testInternalDifferentiation')": [
                        94
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testAnalyticalDifferentiation')": [
                        127
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testFinalResult')": [
                        156
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testStepHandlerResult')": [
                        183,
                        203
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testEventHandler')": [
                        247
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testLowAccuracyExternalDifferentiation')": [
                        33
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testHighAccuracyExternalDifferentiation')": [
                        66
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testInternalDifferentiation')": [
                        94
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testAnalyticalDifferentiation')": [
                        127
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testFinalResult')": [
                        156
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testStepHandlerResult')": [
                        183,
                        203
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testEventHandler')": [
                        247
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'dimensionCheck')": [
                        36
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'testMinStep')": [
                        46
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'testIncreasingTolerance')": [
                        67
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', None)": [
                        102
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'exceedMaxEvaluations')": [
                        103
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'backward')": [
                        119
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'polynomial')": [
                        137
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'dimensionCheck')": [
                        36
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'testMinStep')": [
                        46
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'testIncreasingTolerance')": [
                        67
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', None)": [
                        102
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'exceedMaxEvaluations')": [
                        103
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'backward')": [
                        119
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegratorTest', 'polynomial')": [
                        137
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'dimensionCheck')": [
                        36
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'testMinStep')": [
                        46
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'testIncreasingTolerance')": [
                        67
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', None)": [
                        102
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'exceedMaxEvaluations')": [
                        103
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'backward')": [
                        119
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'polynomial')": [
                        137
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'dimensionCheck')": [
                        36
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'testMinStep')": [
                        46
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'testIncreasingTolerance')": [
                        67
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', None)": [
                        102
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'exceedMaxEvaluations')": [
                        103
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'backward')": [
                        119
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegratorTest', 'polynomial')": [
                        137
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testMissedEndEvent')": [
                        45
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testSanityChecks')": [
                        105,
                        115,
                        125
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testDecreasingSteps')": [
                        132
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testSmallStep')": [
                        173
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testBigStep')": [
                        191
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testBackward')": [
                        209
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testKepler')": [
                        227
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', None)": [
                        251
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testStepSize')": [
                        273
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testMissedEndEvent')": [
                        45
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testSanityChecks')": [
                        105,
                        115,
                        125
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testDecreasingSteps')": [
                        132
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testSmallStep')": [
                        173
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testBigStep')": [
                        191
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testBackward')": [
                        209
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testKepler')": [
                        227
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', None)": [
                        251
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaIntegratorTest', 'testStepSize')": [
                        273
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/ClassicalRungeKuttaStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'derivativesConsistency')": [
                        41
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'serialization')": [
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'derivativesConsistency')": [
                        41
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ClassicalRungeKuttaStepInterpolatorTest', 'serialization')": [
                        50
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54IntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testDimensionCheck')": [
                        54
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testMinStep')": [
                        78
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testSmallLastStep')": [
                        86
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testBackward')": [
                        111
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testIncreasingTolerance')": [
                        165
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testEvents')": [
                        206
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testKepler')": [
                        238
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testVariableSteps')": [
                        260
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', None)": [
                        291
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testDimensionCheck')": [
                        54
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testMinStep')": [
                        78
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testSmallLastStep')": [
                        86
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testBackward')": [
                        111
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testIncreasingTolerance')": [
                        165
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testEvents')": [
                        206
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testKepler')": [
                        238
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', 'testVariableSteps')": [
                        260
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54IntegratorTest', None)": [
                        291
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'derivativesConsistency')": [
                        44
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'serialization')": [
                        58
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'checkClone')": [
                        109,
                        120
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'derivativesConsistency')": [
                        44
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'serialization')": [
                        58
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolatorTest', 'checkClone')": [
                        109,
                        120
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853IntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testMissedEndEvent')": [
                        45
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testDimensionCheck')": [
                        110
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testNullIntervalCheck')": [
                        125
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testMinStep')": [
                        149
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testIncreasingTolerance')": [
                        157
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testBackward')": [
                        192
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testEvents')": [
                        215
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testKepler')": [
                        247
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testVariableSteps')": [
                        269
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testNoDenseOutput')": [
                        289
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testUnstableDerivative')": [
                        319
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', None)": [
                        343,
                        420
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testMissedEndEvent')": [
                        45
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testDimensionCheck')": [
                        110
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testNullIntervalCheck')": [
                        125
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testMinStep')": [
                        149
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testIncreasingTolerance')": [
                        157
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testBackward')": [
                        192
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testEvents')": [
                        215
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testKepler')": [
                        247
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testVariableSteps')": [
                        269
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testNoDenseOutput')": [
                        289
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', 'testUnstableDerivative')": [
                        319
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853IntegratorTest', None)": [
                        343,
                        420
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'derivativesConsistency')": [
                        44
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'serialization')": [
                        58
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'checklone')": [
                        109,
                        120
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'derivativesConsistency')": [
                        44
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'serialization')": [
                        58
                    ],
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolatorTest', 'checklone')": [
                        109,
                        120
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/EulerIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testDimensionCheck')": [
                        51
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testDecreasingSteps')": [
                        58
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testSmallStep')": [
                        98
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testBigStep')": [
                        118
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testBackward')": [
                        137
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testStepSize')": [
                        155
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testDimensionCheck')": [
                        51
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testDecreasingSteps')": [
                        58
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testSmallStep')": [
                        98
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testBigStep')": [
                        118
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testBackward')": [
                        137
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerIntegratorTest', 'testStepSize')": [
                        155
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/EulerStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'noReset')": [
                        42
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'interpolationAtBounds')": [
                        61
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'interpolationInside')": [
                        98
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'derivativesConsistency')": [
                        124
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'serialization')": [
                        133
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'noReset')": [
                        42
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'interpolationAtBounds')": [
                        61
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'interpolationInside')": [
                        98
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'derivativesConsistency')": [
                        124
                    ],
                    "('org.apache.commons.math.ode.nonstiff#EulerStepInterpolatorTest', 'serialization')": [
                        133
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/GillIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testDimensionCheck')": [
                        52
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testDecreasingSteps')": [
                        59
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testSmallStep')": [
                        99
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testBigStep')": [
                        118
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testBackward')": [
                        136
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testKepler')": [
                        154
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testUnstableDerivative')": [
                        167
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', None)": [
                        188
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testStepSize')": [
                        210
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testDimensionCheck')": [
                        52
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testDecreasingSteps')": [
                        59
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testSmallStep')": [
                        99
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testBigStep')": [
                        118
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testBackward')": [
                        136
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testKepler')": [
                        154
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testUnstableDerivative')": [
                        167
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', None)": [
                        188
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillIntegratorTest', 'testStepSize')": [
                        210
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', 'testDerivativesConsistency')": [
                        42
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', 'serialization')": [
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', 'testDerivativesConsistency')": [
                        42
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolatorTest', 'serialization')": [
                        51
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testDimensionCheck')": [
                        53
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testNullIntervalCheck')": [
                        68
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testMinStep')": [
                        92
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testBackward')": [
                        100
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIncreasingTolerance')": [
                        123
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIntegratorControls')": [
                        160
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'getMaxError(FirstOrderIntegrator,TestProblemAbstract)')": [
                        189
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testEvents')": [
                        199
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testKepler')": [
                        231
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testVariableSteps')": [
                        253
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testUnstableDerivative')": [
                        272
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', None)": [
                        296
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testDimensionCheck')": [
                        53
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testNullIntervalCheck')": [
                        68
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testMinStep')": [
                        92
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testBackward')": [
                        100
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIncreasingTolerance')": [
                        123
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testIntegratorControls')": [
                        160
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'getMaxError(FirstOrderIntegrator,TestProblemAbstract)')": [
                        189
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testEvents')": [
                        199
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testKepler')": [
                        231
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testVariableSteps')": [
                        253
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', 'testUnstableDerivative')": [
                        272
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegratorTest', None)": [
                        296
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'derivativesConsistency')": [
                        44
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'serialization')": [
                        59
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'checklone')": [
                        111,
                        122
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'derivativesConsistency')": [
                        44
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'serialization')": [
                        59
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolatorTest', 'checklone')": [
                        111,
                        122
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54IntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testWrongDerivative')": [
                        53,
                        55,
                        57,
                        68
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', None)": [
                        75,
                        368
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testMinStep')": [
                        99
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testIncreasingTolerance')": [
                        107
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testBackward')": [
                        142
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testEvents')": [
                        165
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testKepler')": [
                        336
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testWrongDerivative')": [
                        53,
                        55,
                        57,
                        68
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', None)": [
                        75,
                        368
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testMinStep')": [
                        99
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testIncreasingTolerance')": [
                        107
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testBackward')": [
                        142
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testEvents')": [
                        165
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54IntegratorTest', 'testKepler')": [
                        336
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        31
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'derivativesConsistency')": [
                        44
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'serialization')": [
                        58
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'checkClone')": [
                        109,
                        120
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'derivativesConsistency')": [
                        44
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'serialization')": [
                        58
                    ],
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolatorTest', 'checkClone')": [
                        109,
                        120
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/MidpointIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testDimensionCheck')": [
                        51
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testDecreasingSteps')": [
                        58
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testSmallStep')": [
                        98
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testBigStep')": [
                        118
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testBackward')": [
                        137
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testStepSize')": [
                        155
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testDimensionCheck')": [
                        51
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testDecreasingSteps')": [
                        58
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testSmallStep')": [
                        98
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testBigStep')": [
                        118
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testBackward')": [
                        137
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointIntegratorTest', 'testStepSize')": [
                        155
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', 'testDerivativesConsistency')": [
                        42
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', 'serialization')": [
                        51
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', 'testDerivativesConsistency')": [
                        42
                    ],
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolatorTest', 'serialization')": [
                        51
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testDimensionCheck')": [
                        52
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testDecreasingSteps')": [
                        59
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testSmallStep')": [
                        99
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testBigStep')": [
                        118
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testBackward')": [
                        136
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testKepler')": [
                        154
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', None)": [
                        182
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testStepSize')": [
                        206
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testDimensionCheck')": [
                        52
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testDecreasingSteps')": [
                        59
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testSmallStep')": [
                        99
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testBigStep')": [
                        118
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testBackward')": [
                        136
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testKepler')": [
                        154
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', None)": [
                        182
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesIntegratorTest', 'testStepSize')": [
                        206
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'derivativesConsistency')": [
                        41
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'serialization')": [
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'derivativesConsistency')": [
                        41
                    ],
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolatorTest', 'serialization')": [
                        50
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/sampling/DummyStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', 'testNoReset')": [
                        39
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', 'testFixedState')": [
                        56
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', 'testSerialization')": [
                        80
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', None)": [
                        137,
                        138,
                        139
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        32
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', 'testNoReset')": [
                        41
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', 'testFixedState')": [
                        58
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', 'testSerialization')": [
                        82
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolatorTest', None)": [
                        139,
                        140
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolatorTest', 'derivativesConsistency')": [
                        41
                    ],
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolatorTest', 'serialization')": [
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolatorTest', 'derivativesConsistency')": [
                        41
                    ],
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolatorTest', 'serialization')": [
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/sampling/StepInterpolatorTestUtils.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode.sampling#StepInterpolatorTestUtils', 'checkDerivativesConsistency(FirstOrderIntegrator,TestProblemAbstract,double)')": [
                        32,
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.ode.sampling#StepInterpolatorTestUtils', 'checkDerivativesConsistency(FirstOrderIntegrator,TestProblemAbstract,double)')": [
                        32,
                        40
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/sampling/StepNormalizerTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerTest', 'testBoundaries')": [
                        41
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerTest', 'testBeforeEnd')": [
                        69
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerTest', 'testBoundaries')": [
                        41
                    ],
                    "('org.apache.commons.math.ode.sampling#StepNormalizerTest', 'testBeforeEnd')": [
                        69
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizerTest', 'testCircleFitting')": [
                        42
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizerTest', None)": [
                        117
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizerTest', 'testCircleFitting')": [
                        42
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizerTest', None)": [
                        117
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testTrivial')": [
                        104
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', None)": [
                        141
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testNoOptimum')": [
                        142,
                        158,
                        159
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testTrivial')": [
                        104
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', None)": [
                        141
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testNoOptimum')": [
                        142,
                        158,
                        159
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizerTest', 'testRosenbrock')": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizerTest', 'testRosenbrock')": [
                        35
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizerTest', 'testQuadratic')": [
                        62,
                        63
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizerTest', 'testMaximizeQuadratic')": [
                        94,
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#PowellOptimizerTest', 'testQuadratic')": [
                        61
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizerTest', 'testMaximizeQuadratic')": [
                        92
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testMinimizeMaximize')": [
                        31,
                        43
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testRosenbrock')": [
                        89,
                        93
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testPowell')": [
                        117,
                        121
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testMath283')": [
                        144
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testMinimizeMaximize')": [
                        31,
                        43
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testRosenbrock')": [
                        89,
                        93
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testPowell')": [
                        117,
                        121
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testMath283')": [
                        144
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testMinimizeMaximize')": [
                        36,
                        49
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testRosenbrock')": [
                        95
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testPowell')": [
                        114
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testLeastSquares1')": [
                        130
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testLeastSquares2')": [
                        156
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testLeastSquares3')": [
                        182
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testMaxIterations')": [
                        209
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', None)": [
                        224,
                        243
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testMinimizeMaximize')": [
                        37,
                        50
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testRosenbrock')": [
                        96
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testPowell')": [
                        115
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testLeastSquares1')": [
                        131
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testLeastSquares2')": [
                        157
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testLeastSquares3')": [
                        183
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testMaxIterations')": [
                        210
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', None)": [
                        225,
                        244
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/fitting/CurveFitterTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath303')": [
                        30
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath304')": [
                        54
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath372')": [
                        77
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath303')": [
                        30
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath304')": [
                        54
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitterTest', 'testMath372')": [
                        77
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/fitting/GaussianFitterTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', None)": [
                        188,
                        206,
                        219,
                        236,
                        254,
                        272,
                        290
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit01')": [
                        192
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit02')": [
                        210
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit03')": [
                        223
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit04')": [
                        240
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit05')": [
                        258
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit06')": [
                        276
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit07')": [
                        294
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', None)": [
                        188,
                        206,
                        219,
                        236,
                        254,
                        272,
                        290
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit01')": [
                        192
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit02')": [
                        210
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit03')": [
                        223
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit04')": [
                        240
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit05')": [
                        258
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit06')": [
                        276
                    ],
                    "('org.apache.commons.math.optimization.fitting#GaussianFitterTest', 'testFit07')": [
                        294
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/fitting/ParametricGaussianFunctionTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunctionTest', None)": [
                        75,
                        94,
                        112,
                        123,
                        134
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunctionTest', 'testFit01')": [
                        79
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunctionTest', 'testFit02')": [
                        98
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunctionTest', 'testValue01')": [
                        115
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunctionTest', 'testValue02')": [
                        126
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunctionTest', 'testValue03')": [
                        137
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunctionTest', None)": [
                        75,
                        94,
                        112,
                        123,
                        134
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunctionTest', 'testFit01')": [
                        79
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunctionTest', 'testFit02')": [
                        98
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunctionTest', 'testValue01')": [
                        115
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunctionTest', 'testValue02')": [
                        126
                    ],
                    "('org.apache.commons.math.optimization.fitting#ParametricGaussianFunctionTest', 'testValue03')": [
                        137
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testTrivial')": [
                        110
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testColumnsPermutation')": [
                        123
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testNoDependency')": [
                        143
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testOneSet')": [
                        164
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testTwoSets')": [
                        183
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testIllConditioned')": [
                        228
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testRedundantEquations')": [
                        304
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentEquations')": [
                        323
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentSizes')": [
                        338
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFitting')": [
                        391
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFittingBadInit')": [
                        412
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testTrivial')": [
                        109
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testColumnsPermutation')": [
                        122
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testNoDependency')": [
                        142
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testOneSet')": [
                        163
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testTwoSets')": [
                        182
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testIllConditioned')": [
                        227
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testRedundantEquations')": [
                        303
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentEquations')": [
                        322
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentSizes')": [
                        337
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFitting')": [
                        390
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFittingBadInit')": [
                        411
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        28,
                        29,
                        33,
                        34,
                        35,
                        41
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTrivial')": [
                        112
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testQRColumnsPermutation')": [
                        129
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNoDependency')": [
                        146
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testOneSet')": [
                        165
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTwoSets')": [
                        181
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNonInvertible')": [
                        205
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testIllConditioned')": [
                        224
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        257
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        271
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testRedundantEquations')": [
                        291
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentEquations')": [
                        307
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentSizes')": [
                        319
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testControlParameters')": [
                        349
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'checkEstimate(DifferentiableMultivariateVectorialFunction,double,int,double,double,double,boolean)')": [
                        366
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFitting')": [
                        385
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFittingBadInit')": [
                        433
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMath199')": [
                        486
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', None)": [
                        584,
                        585
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        32,
                        33,
                        34,
                        40
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTrivial')": [
                        112
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testQRColumnsPermutation')": [
                        129
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNoDependency')": [
                        146
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testOneSet')": [
                        165
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTwoSets')": [
                        181
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNonInvertible')": [
                        205
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testIllConditioned')": [
                        224
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        257
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        271
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testRedundantEquations')": [
                        291
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentEquations')": [
                        307
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentSizes')": [
                        319
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testControlParameters')": [
                        349
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'checkEstimate(DifferentiableMultivariateVectorialFunction,double,int,double,double,double,boolean)')": [
                        366
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFitting')": [
                        385
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFittingBadInit')": [
                        433
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMath199')": [
                        486
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', None)": [
                        584
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.optimization.general#MinpackTest', 'minpackTest(MinpackFunction,boolean)')": [
                        508
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.optimization.general#MinpackTest', 'minpackTest(MinpackFunction,boolean)')": [
                        508
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTrivial')": [
                        106
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testColumnsPermutation')": [
                        119
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNoDependency')": [
                        137
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testOneSet')": [
                        157
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTwoSets')": [
                        176
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNonInversible')": [
                        215
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testIllConditioned')": [
                        231
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        269
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        288
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testRedundantEquations')": [
                        305
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testInconsistentEquations')": [
                        323
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testCircleFitting')": [
                        340
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', None)": [
                        385,
                        459
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTrivial')": [
                        106
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testColumnsPermutation')": [
                        119
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNoDependency')": [
                        137
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testOneSet')": [
                        157
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTwoSets')": [
                        176
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNonInversible')": [
                        215
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testIllConditioned')": [
                        231
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        269
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        288
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testRedundantEquations')": [
                        305
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testInconsistentEquations')": [
                        323
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testCircleFitting')": [
                        340
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', None)": [
                        385,
                        459
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/univariate/BracketFinderTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinderTest', 'testCubicMin')": [
                        36,
                        37
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinderTest', 'testCubicMax')": [
                        59,
                        60
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinderTest', 'testMinimumIsOnIntervalBoundary')": [
                        80,
                        81
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinderTest', 'testIntervalBoundsOrdering')": [
                        100,
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#BracketFinderTest', 'testCubicMin')": [
                        35
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinderTest', 'testCubicMax')": [
                        57
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinderTest', 'testMinimumIsOnIntervalBoundary')": [
                        77
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinderTest', 'testIntervalBoundsOrdering')": [
                        96
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testSinMin')": [
                        35
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testQuinticMin')": [
                        56
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testBadFunction')": [
                        81,
                        83,
                        97,
                        98
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testSinMin')": [
                        35
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testQuinticMin')": [
                        56
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testBadFunction')": [
                        81,
                        83,
                        97
                    ]
                }
            }
        }
    },
    "f2d9bc8f934db67a41cbce8c1c375270d43109ba": {
        "authored_data": "2010 Nov 15 22:39",
        "commit.message": "added back some features from old exception scheme (accessors for patterns and arguments) to the new scheme\nthis should ease transition for existing user code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1035476 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "e5413fd48333983347b051db16fde5569799505b",
        "changes": {
            "src/main/java/org/apache/commons/math/MathException.java": {
                "old": {
                    "('org.apache.commons.math#MathException', None)": [
                        38,
                        137,
                        144,
                        145,
                        146,
                        147,
                        148,
                        153,
                        154,
                        155,
                        156,
                        157
                    ],
                    "('org.apache.commons.math#MathException', 'getLocalizablePattern')": [
                        149
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math#MathException', None)": [
                        39,
                        138,
                        145,
                        148,
                        149,
                        150,
                        155
                    ],
                    "('org.apache.commons.math#MathException', 'getSpecificPattern')": [
                        146,
                        147
                    ],
                    "('org.apache.commons.math#MathException', 'getGeneralPattern')": [
                        151
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/MathRuntimeException.java": {
                "old": {
                    "('org.apache.commons.math#MathRuntimeException', None)": [
                        39,
                        142,
                        149,
                        150,
                        151,
                        152,
                        153,
                        158,
                        159,
                        160,
                        161
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'getLocalizablePattern')": [
                        154
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math#MathRuntimeException', None)": [
                        40,
                        143,
                        150,
                        153,
                        154,
                        155,
                        160
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'getSpecificPattern')": [
                        151,
                        152
                    ],
                    "('org.apache.commons.math#MathRuntimeException', 'getGeneralPattern')": [
                        156
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java": {
                "old": {
                    "(None, None)": [
                        22,
                        28,
                        29
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        85,
                        90,
                        91,
                        94,
                        95
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        27,
                        28
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        85,
                        90,
                        91,
                        92,
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', None)": [
                        257,
                        258,
                        259,
                        260,
                        261,
                        265,
                        266
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'checkedCumulativeProbability(int)')": [
                        269,
                        271,
                        273,
                        274,
                        275,
                        277,
                        278
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', None)": [
                        256,
                        257,
                        258
                    ],
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'checkedCumulativeProbability(int)')": [
                        264,
                        268
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java": {
                "old": {
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', None)": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', None)": [
                        35,
                        75,
                        78,
                        79,
                        80,
                        83,
                        84,
                        85,
                        88,
                        89
                    ],
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', 'getSpecificPattern')": [
                        76,
                        77
                    ],
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', 'getGeneralPattern')": [
                        81,
                        82
                    ],
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', 'getArguments')": [
                        86,
                        87
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathIllegalStateException.java": {
                "old": {
                    "('org.apache.commons.math.exception#MathIllegalStateException', None)": [
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MathIllegalStateException', None)": [
                        32,
                        72,
                        75,
                        76,
                        77,
                        80,
                        81,
                        82,
                        85,
                        86
                    ],
                    "('org.apache.commons.math.exception#MathIllegalStateException', 'getSpecificPattern')": [
                        73,
                        74
                    ],
                    "('org.apache.commons.math.exception#MathIllegalStateException', 'getGeneralPattern')": [
                        78,
                        79
                    ],
                    "('org.apache.commons.math.exception#MathIllegalStateException', 'getArguments')": [
                        83,
                        84
                    ],
                    "(None, None)": [
                        109
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathUnsupportedOperationException.java": {
                "old": {
                    "('org.apache.commons.math.exception#MathUnsupportedOperationException', None)": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MathUnsupportedOperationException', None)": [
                        35,
                        66,
                        69,
                        70,
                        71,
                        74,
                        75,
                        76,
                        79,
                        80
                    ],
                    "('org.apache.commons.math.exception#MathUnsupportedOperationException', 'getSpecificPattern')": [
                        67,
                        68
                    ],
                    "('org.apache.commons.math.exception#MathUnsupportedOperationException', 'getGeneralPattern')": [
                        72,
                        73
                    ],
                    "('org.apache.commons.math.exception#MathUnsupportedOperationException', 'getArguments')": [
                        77,
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathUserException.java": {
                "old": {
                    "('org.apache.commons.math.exception#MathUserException', None)": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MathUserException', None)": [
                        35,
                        119,
                        122,
                        123,
                        124,
                        127,
                        128,
                        129,
                        132,
                        133
                    ],
                    "('org.apache.commons.math.exception#MathUserException', 'getSpecificPattern')": [
                        120,
                        121
                    ],
                    "('org.apache.commons.math.exception#MathUserException', 'getGeneralPattern')": [
                        125,
                        126
                    ],
                    "('org.apache.commons.math.exception#MathUserException', 'getArguments')": [
                        130,
                        131
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ConvergenceExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math#ConvergenceExceptionTest', 'testConstructorPatternArguments')": [
                        44
                    ],
                    "('org.apache.commons.math#ConvergenceExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.math#ConvergenceExceptionTest', 'testConstructorPatternArguments')": [
                        44
                    ],
                    "('org.apache.commons.math#ConvergenceExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        67
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/MathConfigurationExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math#MathConfigurationExceptionTest', 'testConstructorPatternArguments')": [
                        43
                    ],
                    "('org.apache.commons.math#MathConfigurationExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MathConfigurationExceptionTest', 'testConstructorPatternArguments')": [
                        43
                    ],
                    "('org.apache.commons.math#MathConfigurationExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        66
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/MathExceptionTest.java": {
                "old": {
                    "('org.apache.commons.math#MathExceptionTest', 'testConstructorPatternArguments')": [
                        48
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MathExceptionTest', 'testConstructorPatternArguments')": [
                        48
                    ],
                    "('org.apache.commons.math#MathExceptionTest', 'testConstructorPatternArgumentsCause')": [
                        71
                    ]
                }
            }
        }
    }
}