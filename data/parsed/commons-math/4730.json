{
    "d4b02f6a3a90cb468731d6156d571d284bd070b1": {
        "authored_data": "2010 Jul 25 12:29",
        "commit.message": "MATH-393\nFixed inconsistent definition of \"getResult\". Modified associated test accordingly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@979032 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "1a637a4458443361f50b77b085bda23162ddf818",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiStartUnivariateRealOptimizer', 'getFunctionValue')": [
                        92
                    ],
                    "('org.apache.commons.math.optimization#MultiStartUnivariateRealOptimizer', 'getResult')": [
                        97
                    ],
                    "(None, None)": [
                        318
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartUnivariateRealOptimizer', 'getFunctionValue')": [
                        92
                    ],
                    "('org.apache.commons.math.optimization#MultiStartUnivariateRealOptimizer', 'getResult')": [
                        97
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/UnivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        39,
                        49,
                        60,
                        63,
                        67,
                        69,
                        82,
                        85,
                        86,
                        90,
                        92,
                        101,
                        110,
                        115
                    ]
                },
                "new": {
                    "(None, None)": [
                        39,
                        49,
                        60,
                        63,
                        67,
                        69,
                        82,
                        85,
                        86,
                        90,
                        92,
                        101,
                        110
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiStartUnivariateRealOptimizerTest', 'testQuinticMin')": [
                        86,
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartUnivariateRealOptimizerTest', 'testQuinticMin')": [
                        86,
                        87
                    ]
                }
            }
        }
    },
    "1a637a4458443361f50b77b085bda23162ddf818": {
        "authored_data": "2010 Jul 23 22:35",
        "commit.message": "MATH-389\nDuplicate code in \"MultivariateRealOptimizer\" and\n\"DifferentiableMultivariateRealOptimizer\" moved to new interface\n\"BaseMultivariateRealOptimizer\".\nNew \"AbstractScalarOptimizer\" superclass allow implementations that do not\nuse derivatives.\nDeprecated \"protected\" fields.\n\"NonLinearConjugateGradientOptimizer\" changed to make use of the newly\nadded accessors instead of the \"protected\" fields.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@967288 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "92f005ad13c989d70da393072c4f3d66798e4a1b",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/DifferentiableMultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        34,
                        35,
                        36,
                        40,
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/MultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java": {
                "old": {
                    "(None, None)": [
                        33,
                        34,
                        35,
                        202,
                        203
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', None)": [
                        42,
                        43,
                        44,
                        45,
                        47,
                        53,
                        54,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        91,
                        92,
                        93,
                        96,
                        97,
                        98,
                        101,
                        102,
                        103,
                        106,
                        107,
                        108,
                        111,
                        112,
                        113,
                        121,
                        122,
                        123,
                        126,
                        127,
                        128,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        141,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        171,
                        172,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'setMaxIterations(int)')": [
                        89,
                        90
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'getMaxIterations')": [
                        94,
                        95
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'getIterations')": [
                        99,
                        100
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'setMaxEvaluations(int)')": [
                        104,
                        105
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'getMaxEvaluations')": [
                        109,
                        110
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'getEvaluations')": [
                        114,
                        115
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'setConvergenceChecker(RealConvergenceChecker)')": [
                        124,
                        125
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'getConvergenceChecker')": [
                        129,
                        130
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'incrementIterationsCounter')": [
                        137,
                        138,
                        139,
                        140
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'computeObjectiveValue(double)')": [
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'optimize(DifferentiableMultivariateRealFunction,GoalType,double)')": [
                        175,
                        176,
                        177,
                        178,
                        180,
                        181,
                        185,
                        187,
                        188,
                        190
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'doOptimize')": [
                        201
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        34,
                        35,
                        36
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', None)": [
                        41,
                        43,
                        44,
                        45,
                        46,
                        48,
                        49,
                        50,
                        51,
                        56,
                        57,
                        60,
                        61,
                        62,
                        65,
                        66,
                        67,
                        68,
                        69,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'optimize(DifferentiableMultivariateRealFunction,GoalType,double)')": [
                        103,
                        104,
                        105,
                        106,
                        113,
                        114,
                        116
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        45,
                        46,
                        47,
                        50,
                        53,
                        56
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        118,
                        150
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', None)": [
                        45,
                        54,
                        55
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizer', 'doOptimize')": [
                        122,
                        123,
                        148
                    ]
                }
            }
        }
    },
    "92f005ad13c989d70da393072c4f3d66798e4a1b": {
        "authored_data": "2010 Jul 23 08:59",
        "commit.message": "Added a feature allowing error estimation to be computed only on a subset of\nOrdinary Differential Equations, considered as the main set, the remaining equations\nbeing considered only as an extension set that should not influence the ODE integration\nalgorithm \nJIRA: MATH-388\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@967007 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "730e17083e45c6fa8015d47a79263aee416035ca",
        "changes": {
            "src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#MultistepIntegrator', None)": [
                        381
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#MultistepIntegrator', None)": [
                        381,
                        403,
                        404,
                        405,
                        406
                    ],
                    "(None, None)": [
                        407
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobians.java": {
                "old": {
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobians', None)": [
                        357,
                        445,
                        446
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobians', None)": [
                        358,
                        390,
                        391,
                        392,
                        393,
                        394,
                        451
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/jacobians/ParameterizedODE.java": {
                "old": {
                    "(None, None)": [
                        32,
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        238,
                        246
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        238,
                        246
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegrator', None)": [
                        422,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegrator', None)": [
                        422,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java": {
                "old": {
                    "(None, None)": [
                        39,
                        46
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        174,
                        176,
                        177,
                        178,
                        179,
                        181
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', None)": [
                        190
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'initializeStep(FirstOrderDifferentialEquations,boolean,int,double,double,double,double,double,double)')": [
                        216,
                        237
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        55
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', None)": [
                        87,
                        88,
                        89,
                        208
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'sanityChecks(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        194,
                        195,
                        196,
                        197,
                        199
                    ],
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', 'initializeStep(FirstOrderDifferentialEquations,boolean,int,double,double,double,double,double,double)')": [
                        234,
                        255
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54Integrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54Integrator', 'estimateError(double,double,double,double)')": [
                        138,
                        152
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54Integrator', 'estimateError(double,double,double,double)')": [
                        138,
                        152
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853Integrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853Integrator', 'estimateError(double,double,double,double)')": [
                        252,
                        277
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853Integrator', 'estimateError(double,double,double,double)')": [
                        252,
                        277
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#EmbeddedRungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        245
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#EmbeddedRungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        245
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', None)": [
                        432,
                        454
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'tryStep(double,double,double,int,double,double,double,double,double)')": [
                        503,
                        508
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        610,
                        712,
                        716
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', None)": [
                        432,
                        454
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'tryStep(double,double,double,int,double,double,double,double,double)')": [
                        503,
                        508
                    ],
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        610,
                        712,
                        716
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'estimateError(double)')": [
                        300,
                        304
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', 'estimateError(double)')": [
                        300,
                        304
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54Integrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54Integrator', 'estimateError(double,double,double,double)')": [
                        111,
                        126
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54Integrator', 'estimateError(double,double,double,double)')": [
                        111,
                        126
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/jacobians/FirstOrderIntegratorWithJacobiansTest.java": {
                "old": {
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testLowAccuracyExternalDifferentiation')": [
                        43
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testHighAccuracyExternalDifferentiation')": [
                        67
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testInternalDifferentiation')": [
                        95,
                        112,
                        113,
                        118,
                        119,
                        120,
                        121
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testAnalyticalDifferentiation')": [
                        128,
                        142,
                        143,
                        148,
                        149,
                        150,
                        151
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testFinalResult')": [
                        157,
                        167,
                        171,
                        176
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testStepHandlerResult')": [
                        184,
                        210,
                        214,
                        219,
                        228,
                        232,
                        237
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testEventHandler')": [
                        248
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testLowAccuracyExternalDifferentiation')": [
                        43
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testHighAccuracyExternalDifferentiation')": [
                        67
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testInternalDifferentiation')": [
                        95,
                        112,
                        113,
                        118,
                        119,
                        120,
                        121
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testAnalyticalDifferentiation')": [
                        128,
                        142,
                        143,
                        148,
                        149,
                        150,
                        151
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testFinalResult')": [
                        157,
                        167,
                        171,
                        176
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testStepHandlerResult')": [
                        184,
                        210,
                        214,
                        219,
                        228,
                        232,
                        237
                    ],
                    "('org.apache.commons.math.ode.jacobians#FirstOrderIntegratorWithJacobiansTest', 'testEventHandler')": [
                        248
                    ]
                }
            }
        }
    },
    "730e17083e45c6fa8015d47a79263aee416035ca": {
        "authored_data": "2010 Jul 19 14:51",
        "commit.message": "MATH-387: Allow \"null\" array arguments in \"RealPointValuePair\" and\n\"VectorialPointValuePair\" constructors.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@965509 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "968c4a2cf432767bd1dd660a3b36cfd3f5ed566a",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java": {
                "old": {
                    "('org.apache.commons.math.optimization#RealPointValuePair', None)": [
                        32,
                        48,
                        60,
                        61
                    ],
                    "('org.apache.commons.math.optimization#RealPointValuePair', 'getPoint')": [
                        69
                    ],
                    "(None, None)": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#RealPointValuePair', None)": [
                        47,
                        59,
                        60,
                        61,
                        62
                    ],
                    "('org.apache.commons.math.optimization#RealPointValuePair', 'getPoint')": [
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/SimpleScalarValueChecker.java": {
                "old": {
                    "('org.apache.commons.math.optimization#SimpleScalarValueChecker', None)": [
                        65
                    ],
                    "(None, None)": [
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#SimpleScalarValueChecker', None)": [
                        65
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/VectorialPointValuePair.java": {
                "old": {
                    "('org.apache.commons.math.optimization#VectorialPointValuePair', None)": [
                        47,
                        48,
                        60,
                        61
                    ],
                    "('org.apache.commons.math.optimization#VectorialPointValuePair', 'getPoint')": [
                        68
                    ],
                    "('org.apache.commons.math.optimization#VectorialPointValuePair', 'getValue')": [
                        84
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#VectorialPointValuePair', None)": [
                        47,
                        48,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65
                    ],
                    "('org.apache.commons.math.optimization#VectorialPointValuePair', 'getPoint')": [
                        72
                    ],
                    "('org.apache.commons.math.optimization#VectorialPointValuePair', 'getValue')": [
                        88
                    ]
                }
            }
        }
    },
    "968c4a2cf432767bd1dd660a3b36cfd3f5ed566a": {
        "authored_data": "2010 Jul 09 21:40",
        "commit.message": "MATH-361\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@962702 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "e038fdb1cc191cd1a11ebbf5f7f5370a3d4788b8",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', None)": [
                        61,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        121,
                        231
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', 'evaluate(double,double)')": [
                        126,
                        127,
                        128
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', 'differentiate(double)')": [
                        236,
                        237,
                        238
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', None)": [
                        61,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        120,
                        229
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', 'evaluate(double,double)')": [
                        125,
                        126
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', 'differentiate(double)')": [
                        234,
                        235
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/NoDataException.java": {
                "old": {
                    "('org.apache.commons.math.exception#NoDataException', None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.exception#NoDataException', None)": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41
                    ]
                }
            }
        }
    },
    "e038fdb1cc191cd1a11ebbf5f7f5370a3d4788b8": {
        "authored_data": "2010 Jul 09 13:15",
        "commit.message": "MATH-361\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@962515 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "b5a23d01b65fcd23d03769e0db3918b6b308bf91",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunction.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', None)": [
                        61,
                        66,
                        120,
                        229
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', 'evaluate(double,double)')": [
                        126
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', 'differentiate(double)')": [
                        235
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', None)": [
                        61,
                        66,
                        67,
                        121,
                        231
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', 'evaluate(double,double)')": [
                        127,
                        128
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunction', 'differentiate(double)')": [
                        237,
                        238
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/NotPositiveException.java": {
                "old": {
                    "(None, None)": [
                        19
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        45
                    ],
                    "('org.apache.commons.math.exception#NotPositiveException', None)": [
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java": {
                "old": {
                    "(None, None)": [
                        19
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        45
                    ],
                    "('org.apache.commons.math.exception#NotStrictlyPositiveException', None)": [
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/NumberIsTooLargeException.java": {
                "old": {
                    "('org.apache.commons.math.exception#NumberIsTooLargeException', None)": [
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.exception#NumberIsTooLargeException', None)": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/AbstractRandomGenerator.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        27
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGenerator', None)": [
                        42,
                        58,
                        84,
                        88,
                        123,
                        125,
                        133,
                        141,
                        152,
                        154,
                        166,
                        168,
                        176,
                        185,
                        194,
                        202,
                        203,
                        211,
                        212,
                        221,
                        222,
                        228,
                        229,
                        235,
                        236,
                        249,
                        250
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGenerator', 'nextInt(int)')": [
                        158,
                        159
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        26
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGenerator', None)": [
                        41,
                        57,
                        83,
                        87,
                        122,
                        124,
                        132,
                        140,
                        151,
                        153,
                        164,
                        166,
                        174,
                        183,
                        192,
                        200,
                        201,
                        209,
                        210,
                        219,
                        220,
                        226,
                        227,
                        233,
                        234,
                        247,
                        248
                    ],
                    "('org.apache.commons.math.random#AbstractRandomGenerator', 'nextInt(int)')": [
                        157
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/BitsStreamGenerator.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.random#BitsStreamGenerator', 'nextInt(int)')": [
                        126,
                        127
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.random#BitsStreamGenerator', 'nextInt(int)')": [
                        125
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextHexString(int)')": [
                        151,
                        152
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextInt(int,int)')": [
                        197,
                        198,
                        199
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextLong(long,long)')": [
                        217,
                        218,
                        219
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureHexString(int)')": [
                        247,
                        248
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureInt(int,int)')": [
                        308,
                        309,
                        310
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureLong(long,long)')": [
                        329,
                        330,
                        331
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPoisson(double)')": [
                        355,
                        356
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextGaussian(double,double)')": [
                        459,
                        460
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextExponential(double)')": [
                        480,
                        481
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextUniform(double,double)')": [
                        509,
                        510,
                        511
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPermutation(int,int)')": [
                        833,
                        834,
                        837,
                        838
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSample(Collection,int)')": [
                        870,
                        871,
                        874,
                        875
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        30
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        150,
                        196,
                        216,
                        246,
                        307,
                        328,
                        354,
                        458,
                        479,
                        508,
                        832,
                        833,
                        870,
                        871
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextHexString(int)')": [
                        154
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextInt(int,int)')": [
                        200,
                        201
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextLong(long,long)')": [
                        220,
                        221
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureHexString(int)')": [
                        250
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureInt(int,int)')": [
                        311,
                        312
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSecureLong(long,long)')": [
                        332,
                        333
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPoisson(double)')": [
                        358
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextGaussian(double,double)')": [
                        462
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextExponential(double)')": [
                        483
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextUniform(double,double)')": [
                        512,
                        513
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPermutation(int,int)')": [
                        837,
                        838,
                        841,
                        842
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextSample(Collection,int)')": [
                        876,
                        877,
                        880
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.math.random#UncorrelatedRandomVectorGenerator', None)": [
                        58,
                        59,
                        60
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.random#UncorrelatedRandomVectorGenerator', None)": [
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/LocalizedFormats.java": {
                "old": {
                    "(None, None)": [
                        87,
                        134,
                        237,
                        247
                    ]
                },
                "new": {
                    "(None, None)": [
                        87,
                        134,
                        177,
                        179,
                        181,
                        183,
                        191,
                        242,
                        252
                    ]
                }
            }
        }
    },
    "b5a23d01b65fcd23d03769e0db3918b6b308bf91": {
        "authored_data": "2010 Jul 08 23:45",
        "commit.message": "MATH-361\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@962306 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "45f683a43652287dfd84c93abc0f482bf93ceefb",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#LinearInterpolator', 'interpolate(double,double)')": [
                        47
                    ],
                    "(None, None)": [
                        71
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LinearInterpolator', 'interpolate(double,double)')": [
                        48,
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolator', 'interpolate(double,double)')": [
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolator', 'interpolate(double,double)')": [
                        73,
                        74
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathIllegalArgumentException.java": {
                "old": {
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', None)": [
                        36,
                        38,
                        45,
                        48,
                        50
                    ],
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', 'getMessage')": [
                        57
                    ],
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', 'getLocalizedMessage')": [
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', None)": [
                        36,
                        38,
                        39,
                        40,
                        41,
                        42,
                        49,
                        50,
                        51,
                        54,
                        55,
                        57,
                        58,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67
                    ],
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', 'getMessage')": [
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ],
                    "('org.apache.commons.math.exception#MathIllegalArgumentException', 'getLocalizedMessage')": [
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java": {
                "old": {
                    "('org.apache.commons.math.exception#MathIllegalNumberException', None)": [
                        37,
                        41,
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MathIllegalNumberException', None)": [
                        37,
                        38,
                        42,
                        43,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/NumberIsTooSmallException.java": {
                "old": {
                    "('org.apache.commons.math.exception#NumberIsTooSmallException', None)": [
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.exception#NumberIsTooSmallException', None)": [
                        43,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/LocalizedFormats.java": {
                "new": {
                    "(None, None)": [
                        282
                    ]
                }
            }
        }
    },
    "45f683a43652287dfd84c93abc0f482bf93ceefb": {
        "authored_data": "2010 Jul 05 14:10",
        "commit.message": "MATH-361\nMATH-382\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@960602 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "cab4f493398c1991218099c6cfa2c0cbf096b79a",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolatingFunction', None)": [
                        88,
                        102
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolatingFunction', 'value(double,double)')": [
                        161,
                        162,
                        163,
                        167,
                        168,
                        169
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolatingFunction', 'partialDerivative(int,double,double)')": [
                        236,
                        237,
                        241,
                        242
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineFunction', 'value(double,double)')": [
                        379,
                        380,
                        383,
                        384
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolatingFunction', None)": [
                        89,
                        91,
                        104
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolatingFunction', 'value(double,double)')": [
                        163,
                        167
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolatingFunction', 'partialDerivative(int,double,double)')": [
                        234,
                        238
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineFunction', 'value(double,double)')": [
                        375,
                        378
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolator', 'interpolate(double,double,double)')": [
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolator', 'interpolate(double,double,double)')": [
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/LinearInterpolator.java": {
                "old": {
                    "(None, None)": [
                        19,
                        22
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LinearInterpolator', None)": [
                        33
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LinearInterpolator', 'interpolate(double,double)')": [
                        36,
                        37,
                        41,
                        42,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        23
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LinearInterpolator', None)": [
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LinearInterpolator', 'interpolate(double,double)')": [
                        43,
                        47,
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolatingFunction.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolatingFunction', None)": [
                        145,
                        154
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolatingFunction', None)": [
                        145,
                        154
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/MicrosphereInterpolator.java": {
                "old": {
                    "(None, None)": [
                        20,
                        28,
                        123
                    ],
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolator', None)": [
                        62,
                        69,
                        71,
                        72,
                        73,
                        97,
                        99,
                        113
                    ],
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolator', 'setBrightnessExponent(int)')": [
                        101,
                        102,
                        103,
                        104,
                        105,
                        107
                    ],
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolator', 'setMicropshereElements(int)')": [
                        116,
                        117,
                        118,
                        119,
                        121
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        29
                    ],
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolator', None)": [
                        69,
                        71,
                        72,
                        73,
                        97,
                        99,
                        111
                    ],
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolator', 'setBrightnessExponent(int)')": [
                        101,
                        102,
                        103,
                        105
                    ],
                    "('org.apache.commons.math.analysis.interpolation#MicrosphereInterpolator', 'setMicropshereElements(int)')": [
                        114,
                        115,
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/SplineInterpolator.java": {
                "old": {
                    "(None, None)": [
                        19,
                        22
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolator', 'interpolate(double,double)')": [
                        61,
                        62,
                        66,
                        67,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        23
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolator', None)": [
                        59,
                        60,
                        61,
                        62,
                        63,
                        64
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolator', 'interpolate(double,double)')": [
                        68,
                        72,
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/NotPositiveException.java": {
                "old": {
                    "('org.apache.commons.math.exception#NotPositiveException', None)": [
                        27,
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#NotPositiveException', None)": [
                        27,
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/NotStrictlyPositiveException.java": {
                "old": {
                    "('org.apache.commons.math.exception#NotStrictlyPositiveException', None)": [
                        27,
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#NotStrictlyPositiveException', None)": [
                        27,
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/LocalizedFormats.java": {
                "old": {
                    "(None, None)": [
                        169,
                        170
                    ]
                },
                "new": {
                    "(None, None)": [
                        220,
                        221,
                        222,
                        223
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/interpolation/LinearInterpolatorTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#LinearInterpolatorTest', 'testIllegalArguments')": [
                        112
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LinearInterpolatorTest', None)": [
                        121
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LinearInterpolatorTest', 'testIllegalArguments')": [
                        115,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132
                    ],
                    "('org.apache.commons.math.analysis.interpolation#LinearInterpolatorTest', None)": [
                        133
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/interpolation/SplineInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolatorTest', None)": [
                        32,
                        43,
                        44,
                        45,
                        46,
                        67,
                        68,
                        90,
                        91,
                        156,
                        157,
                        158,
                        175
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolatorTest', 'testInterpolateLinearDegenerateTwoSegment')": [
                        64,
                        65,
                        66
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolatorTest', 'testInterpolateLinearDegenerateThreeSegment')": [
                        87,
                        88,
                        89
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolatorTest', 'testInterpolateSin')": [
                        154,
                        155
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolatorTest', 'testIllegalArguments')": [
                        166,
                        167,
                        174
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolatorTest', 'verifyInterpolation(UnivariateRealFunction,double,double)')": [
                        185
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolatorTest', 'verifyConsistency(PolynomialSplineFunction,double)')": [
                        198,
                        199,
                        200,
                        201,
                        202
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        27,
                        28
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolatorTest', None)": [
                        35,
                        46,
                        67,
                        68,
                        69,
                        91,
                        92,
                        93,
                        110,
                        159,
                        160,
                        161,
                        188,
                        189
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolatorTest', 'testInterpolateLinearDegenerateTwoSegment')": [
                        64,
                        65,
                        66
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolatorTest', 'testInterpolateLinearDegenerateThreeSegment')": [
                        88,
                        89,
                        90
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolatorTest', 'testInterpolateSin')": [
                        157,
                        158
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolatorTest', 'testIllegalArguments')": [
                        169,
                        170,
                        171,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolatorTest', 'verifyInterpolation(UnivariateRealFunction,double,double)')": [
                        199
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SplineInterpolatorTest', 'verifyConsistency(PolynomialSplineFunction,double)')": [
                        212,
                        213,
                        214,
                        215,
                        216
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/exception/NotPositiveExceptionTest.java": {
                "new": {
                    "('org.apache.commons.math.exception#NotPositiveExceptionTest', 'testAccessors')": [
                        32,
                        33
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/exception/NotStrictlyPositiveExceptionTest.java": {
                "new": {
                    "('org.apache.commons.math.exception#NotStrictlyPositiveExceptionTest', 'testAccessors')": [
                        32,
                        33
                    ]
                }
            }
        }
    },
    "cab4f493398c1991218099c6cfa2c0cbf096b79a": {
        "authored_data": "2010 Jul 01 12:30",
        "commit.message": "MATH-361\nAdded new exceptions. Replaced several instances of \"IllegalArgumentException\"\nwith a more specific exception.\nFor not yet released code, removed the checked \"DimensionMismatchException\"\nfrom the method signature and replaced its instances with the new (unchecked)\nversion of the exception.\nCorrected typos in Javadoc comments.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@959634 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "10299cdde5a2a8feffa48139658b7028c0c953af",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunction.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolatingFunction', None)": [
                        117,
                        118
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolatingFunction', None)": [
                        117,
                        118
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolator', 'interpolate(double,double,double)')": [
                        49,
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolator', 'interpolate(double,double,double)')": [
                        49,
                        50
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolator.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        22
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SmoothingPolynomialBicubicSplineInterpolator', 'interpolate(double,double,double)')": [
                        73,
                        75,
                        90,
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.analysis.interpolation#SmoothingPolynomialBicubicSplineInterpolator', 'interpolate(double,double,double)')": [
                        72,
                        74,
                        89,
                        90
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunction.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolatingFunction', None)": [
                        152,
                        153,
                        160,
                        187,
                        188,
                        189
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolatingFunction', 'value(double,double,double)')": [
                        311,
                        312,
                        313,
                        317,
                        318,
                        319,
                        323,
                        324,
                        325
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineFunction', 'value(double,double,double)')": [
                        456,
                        457,
                        460,
                        461,
                        464,
                        465
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        22,
                        23
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolatingFunction', None)": [
                        138,
                        154,
                        161,
                        188,
                        189,
                        190
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolatingFunction', 'value(double,double,double)')": [
                        312,
                        316,
                        320
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineFunction', 'value(double,double,double)')": [
                        451,
                        454,
                        457
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolator.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        22
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolator', 'interpolate(double,double,double,double)')": [
                        40,
                        42,
                        48,
                        49,
                        50
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolator', 'interpolate(double,double,double,double)')": [
                        39,
                        41,
                        47,
                        48,
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/TrivariateRealGridInterpolator.java": {
                "old": {
                    "(None, None)": [
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        41,
                        42,
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/exception/MathIllegalNumberException.java": {
                "old": {
                    "('org.apache.commons.math.exception#MathIllegalNumberException', None)": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.math.exception#MathIllegalNumberException', None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/LocalizedFormats.java": {
                "old": {
                    "(None, None)": [
                        199
                    ]
                },
                "new": {
                    "(None, None)": [
                        163,
                        167,
                        195,
                        198,
                        203
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        416,
                        528,
                        1875
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'checkOrder(double,int,boolean)')": [
                        1878,
                        1879,
                        1880,
                        1881,
                        1882,
                        1883,
                        1884,
                        1885,
                        1886,
                        1887,
                        1888,
                        1889,
                        1890,
                        1891,
                        1892,
                        1893,
                        1894,
                        1895,
                        1896,
                        1897,
                        1898,
                        1899,
                        1900,
                        1901,
                        1902,
                        1903,
                        1904,
                        1905,
                        1906,
                        1907,
                        1908
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        417,
                        529,
                        1870,
                        1871,
                        1872,
                        1873,
                        1874,
                        1875,
                        1876,
                        1877,
                        1878,
                        1879,
                        1880,
                        1881,
                        1882,
                        1883,
                        1884,
                        1923,
                        1924,
                        1925,
                        1926,
                        1927,
                        1928,
                        1929,
                        1930,
                        1931,
                        1934,
                        1935,
                        1942,
                        1943,
                        1944
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'checkOrder(double,Order,boolean)')": [
                        1885,
                        1886,
                        1887,
                        1888,
                        1889,
                        1890,
                        1891,
                        1892,
                        1893,
                        1894,
                        1895,
                        1896,
                        1897,
                        1898,
                        1899,
                        1900,
                        1901,
                        1902,
                        1903,
                        1904,
                        1905,
                        1906,
                        1907,
                        1908,
                        1909,
                        1910,
                        1911,
                        1912,
                        1913,
                        1914,
                        1915,
                        1916,
                        1917,
                        1918,
                        1919,
                        1920,
                        1921,
                        1922
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'checkOrder(double)')": [
                        1932,
                        1933
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'checkOrder(double,int,boolean)')": [
                        1947,
                        1948,
                        1949,
                        1950
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MultidimensionalCounter.java": {
                "old": {
                    "('org.apache.commons.math.util#MultidimensionalCounter', None)": [
                        209
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MultidimensionalCounter', None)": [
                        209
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/interpolation/SmoothingPolynomialBicubicSplineInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatorTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/util/MathUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtilsTest', 'testCheckOrder')": [
                        1472,
                        1473,
                        1474,
                        1475,
                        1476,
                        1477,
                        1478,
                        1480,
                        1484,
                        1486,
                        1490,
                        1492,
                        1496
                    ],
                    "(None, None)": [
                        1498
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        1507
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testCheckOrder')": [
                        1473,
                        1474,
                        1475,
                        1476,
                        1477,
                        1478,
                        1479,
                        1480,
                        1481,
                        1482,
                        1483,
                        1484,
                        1486,
                        1490,
                        1491,
                        1493,
                        1497,
                        1498,
                        1500,
                        1504,
                        1505
                    ]
                }
            }
        }
    }
}