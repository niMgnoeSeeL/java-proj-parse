{
    "ef9b639afc3dd8d1c35eab23cc9cb6b3a6a2c858": {
        "authored_data": "2009 Nov 27 21:45",
        "commit.message": "Fixed an overflow error in MathUtils.distance that was causing KMeansPlusPlusClusterer to fail with a NullPointerException when\ncomponent distances between points exceeded Integer.MAXVALUE.\nJIRA: MATH-305\nReported by Erik van Ingen\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@885027 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "9e6576e7cd4ad17185c5102fd3c6f9f9a6941ed4",
        "changes": {
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', 'distance(int,int)')": [
                        1624,
                        1626
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtils', 'distance(int,int)')": [
                        1624,
                        1626
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClustererTest.java": {
                "new": {
                    "('org.apache.commons.math.stat.clustering#KMeansPlusPlusClustererTest', None)": [
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102
                    ],
                    "('org.apache.commons.math.stat.clustering#KMeansPlusPlusClustererTest', 'testPerformClusterAnalysisDegenerate')": [
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115
                    ],
                    "(None, None)": [
                        116,
                        117
                    ]
                }
            }
        }
    },
    "9e6576e7cd4ad17185c5102fd3c6f9f9a6941ed4": {
        "authored_data": "2009 Nov 27 21:05",
        "commit.message": "Added toString.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@885013 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "cab28ac04447e70019e82e5ba54a762b989e732d",
        "changes": {
            "src/main/java/org/apache/commons/math/stat/clustering/EuclideanIntegerPoint.java": {
                "new": {
                    "('org.apache.commons.math.stat.clustering#EuclideanIntegerPoint', None)": [
                        101,
                        102,
                        103
                    ],
                    "('org.apache.commons.math.stat.clustering#EuclideanIntegerPoint', 'toString')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114
                    ],
                    "(None, None)": [
                        115
                    ]
                }
            }
        }
    },
    "cab28ac04447e70019e82e5ba54a762b989e732d": {
        "authored_data": "2009 Nov 27 21:03",
        "commit.message": "Fixed test case for number of generations evolved.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@885009 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "80f408413930fc8e976fec53ff240a96270ae904",
        "changes": {
            "src/test/java/org/apache/commons/math/genetics/GeneticAlgorithmTestBinary.java": {
                "old": {
                    "('org.apache.commons.math.genetics#GeneticAlgorithmTestBinary', None)": [
                        70,
                        71,
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.math.genetics#GeneticAlgorithmTestBinary', 'test')": [
                        51,
                        52,
                        72
                    ],
                    "('org.apache.commons.math.genetics#GeneticAlgorithmTestBinary', None)": [
                        73
                    ]
                }
            }
        }
    },
    "80f408413930fc8e976fec53ff240a96270ae904": {
        "authored_data": "2009 Nov 22 19:50",
        "commit.message": "Added generationsEvolved property to GeneticAlgorithm to track the number\nof generations evolved by the evolve() method before reaching the StoppingCondition.\nJIRA: MATH-315\nReported and patched by Mikkel Meyer Andersen\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@883132 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "bf451895d559f6ddf01c29933dc1409f07dd8177",
        "changes": {
            "src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java": {
                "old": {
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', None)": [
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', None)": [
                        53,
                        54,
                        55,
                        101,
                        102,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221
                    ],
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', 'evolve(Population,StoppingCondition)')": [
                        111,
                        114
                    ],
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', 'getGenerationsEvolved')": [
                        222,
                        223
                    ],
                    "(None, None)": [
                        224,
                        225
                    ]
                }
            }
        }
    },
    "713a4fdd734d40cca1cb7ef6798ed3110ea282b8": {
        "authored_data": "2009 Nov 07 19:57",
        "commit.message": "fixed yet another eigen decomposition bug identified, debugged and fixed by Dimitri!\nMany thanks to him.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@833740 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "83f18d5299fbadf91ec792c95ee96bcd916ca9af",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'processGeneralBlock(int)')": [
                        840
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'goodStep(int,int)')": [
                        1054
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', None)": [
                        1126,
                        1128,
                        1129
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'flipIfWarranted(int,int)')": [
                        1132,
                        1133,
                        1134,
                        1135,
                        1136,
                        1137,
                        1138,
                        1139,
                        1140,
                        1141,
                        1142,
                        1143,
                        1144,
                        1145,
                        1146
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'processGeneralBlock(int)')": [
                        840
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'goodStep(int,int)')": [
                        1054
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', None)": [
                        1126,
                        1153,
                        1154,
                        1155,
                        1156,
                        1157,
                        1158,
                        1159,
                        1160,
                        1178
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'flipAllIfWarranted(int)')": [
                        1130,
                        1131,
                        1132,
                        1133,
                        1134,
                        1135,
                        1136,
                        1137,
                        1138,
                        1139,
                        1140,
                        1141,
                        1142,
                        1143,
                        1144,
                        1145,
                        1146,
                        1147,
                        1148,
                        1149,
                        1150,
                        1151,
                        1152
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'flipEveryOtherIfWarranted(int)')": [
                        1161,
                        1162,
                        1163,
                        1164,
                        1165,
                        1166,
                        1167,
                        1168,
                        1169,
                        1170,
                        1171,
                        1172,
                        1173,
                        1174,
                        1175,
                        1176,
                        1177
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java": {
                "new": {
                    "('org.apache.commons.math.linear#EigenDecompositionImplTest', 'testMathpbx02')": [
                        182,
                        183,
                        184,
                        185
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImplTest', None)": [
                        186,
                        187,
                        188,
                        189,
                        190
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImplTest', 'testMathpbx03')": [
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225
                    ]
                }
            }
        }
    },
    "83f18d5299fbadf91ec792c95ee96bcd916ca9af": {
        "authored_data": "2009 Nov 06 15:11",
        "commit.message": "Fixed an index computation error in eigen decomposition.\nOnce again, kudos to Dimitri for debugging this.\nJIRA: MATH-318\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@833433 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "c78a0e3b003ac36d57a3c895fc8240ef66546a56",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'flipIfWarranted(int,int)')": [
                        1135
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'flipIfWarranted(int,int)')": [
                        1135
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java": {
                "new": {
                    "('org.apache.commons.math.linear#EigenDecompositionImplTest', 'testMathpbx02')": [
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImplTest', None)": [
                        186,
                        187,
                        188,
                        189,
                        190
                    ]
                }
            }
        }
    },
    "c78a0e3b003ac36d57a3c895fc8240ef66546a56": {
        "authored_data": "2009 Nov 03 22:04",
        "commit.message": "fixed an ArrayIndexOutOfBoundsException\nKudos to Dimitri who debugged this mess of fortran/java array indices translation\nJIRA: MATH-308\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@832577 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "0596e3145c1a8a9c42185fe688c42b0830b64516",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'computeGershgorinCircles')": [
                        598,
                        599
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'findEigenvalues')": [
                        650
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'processGeneralBlock(int)')": [
                        902,
                        903
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'computeShiftIncrement(int,int,int)')": [
                        1540
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'computeGershgorinCircles')": [
                        598,
                        599,
                        600,
                        601,
                        602,
                        603
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'findEigenvalues')": [
                        654
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'processGeneralBlock(int)')": [
                        906,
                        907
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImpl', 'computeShiftIncrement(int,int,int)')": [
                        1544
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/EigenDecompositionImplTest.java": {
                "new": {
                    "('org.apache.commons.math.linear#EigenDecompositionImplTest', None)": [
                        111,
                        141,
                        142,
                        143,
                        144
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionImplTest', 'testMath308')": [
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140
                    ]
                }
            }
        }
    },
    "0596e3145c1a8a9c42185fe688c42b0830b64516": {
        "authored_data": "2009 Oct 31 02:30",
        "commit.message": "Fixed parameter test in RandomDataImpl#nextExponential. JIRA: MATH-309.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@831510 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "90f6eba156d348202da0685a95a0ee1d8ec63382",
        "changes": {
            "src/main/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        460,
                        461
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextExponential(double)')": [
                        465
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        460
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextExponential(double)')": [
                        464
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/random/RandomDataTest.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextExponential')": [
                        566
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataTest', 'testNextExponential')": [
                        566,
                        567,
                        568,
                        569,
                        570,
                        571
                    ]
                }
            }
        }
    }
}