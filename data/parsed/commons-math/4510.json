{
    "5a9079f2ec8a14ec661604a028b3272c1d95fbdb": {
        "authored_data": "2010 Dec 07 15:01",
        "commit.message": "MATH-454\nPass the number of allowed function evaluations as a parameter to the\n\"optimize\" methods.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1043078 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "142d2c918a2b1326f379ff5c824e4ae5f531426e",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', None)": [
                        76,
                        78,
                        82,
                        90,
                        97,
                        121,
                        122,
                        123
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', 'setMaxEvaluations(int)')": [
                        118,
                        119,
                        120
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', 'optimize(FUNC,GoalType,double)')": [
                        136,
                        138,
                        146,
                        153,
                        154,
                        155
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', None)": [
                        76,
                        78,
                        82,
                        90,
                        97
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', 'optimize(int,FUNC,GoalType,double)')": [
                        130,
                        132,
                        133,
                        141,
                        148
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateVectorialOptimizer', None)": [
                        76,
                        78,
                        82,
                        91,
                        98,
                        122,
                        123,
                        124
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateVectorialOptimizer', 'setMaxEvaluations(int)')": [
                        119,
                        120,
                        121
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateVectorialOptimizer', 'optimize(FUNC,double,double,double)')": [
                        137,
                        139,
                        140,
                        141,
                        149,
                        158,
                        159,
                        160
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateVectorialOptimizer', None)": [
                        76,
                        78,
                        82,
                        91,
                        98
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateVectorialOptimizer', 'optimize(int,FUNC,double,double,double)')": [
                        131,
                        133,
                        134,
                        137,
                        143,
                        152
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        21,
                        54,
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        45,
                        54,
                        55,
                        57,
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultivariateVectorialOptimizer.java": {
                "old": {
                    "(None, None)": [
                        21,
                        56,
                        58,
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        49,
                        56,
                        57,
                        59,
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java": {
                "old": {
                    "(None, None)": [
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', None)": [
                        61,
                        65,
                        67,
                        68,
                        70,
                        71,
                        72,
                        73,
                        105,
                        160,
                        161
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'setMaxEvaluations(int)')": [
                        74,
                        75
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'computeObjectiveValue(double)')": [
                        107
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'optimize(FUNC,GoalType,double)')": [
                        117,
                        118,
                        119
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'doOptimize')": [
                        163
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', None)": [
                        61,
                        66,
                        97,
                        98,
                        153,
                        154,
                        155,
                        156
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'computeObjectiveValue(double)')": [
                        100
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'optimize(int,FUNC,GoalType,double)')": [
                        110,
                        111,
                        124
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'doOptimize')": [
                        158
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', None)": [
                        63,
                        67,
                        69,
                        70,
                        72,
                        73,
                        74,
                        75,
                        107,
                        161,
                        162
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'setMaxEvaluations(int)')": [
                        76,
                        77
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'computeObjectiveValue(double)')": [
                        109
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'optimize(FUNC,double,double,double)')": [
                        119,
                        120
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'doOptimize')": [
                        164
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', None)": [
                        62,
                        67,
                        98,
                        99,
                        154,
                        155,
                        156,
                        157
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'computeObjectiveValue(double)')": [
                        101
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'optimize(int,FUNC,double,double,double)')": [
                        111,
                        112,
                        131
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'doOptimize')": [
                        159
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/PowellOptimizer.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', 'setMaxEvaluations(int)')": [
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', None)": [
                        107,
                        108,
                        109,
                        110,
                        258,
                        260,
                        261,
                        264,
                        276,
                        277
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', 'doOptimize')": [
                        111
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', 'doOptimize')": [
                        98
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizer', None)": [
                        245,
                        246,
                        248,
                        251,
                        263,
                        264,
                        265,
                        266,
                        267
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/SimplexOptimizer.java": {
                "old": {
                    "(None, None)": [
                        58
                    ]
                },
                "new": {
                    "(None, None)": [
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/CurveFitter.java": {
                "old": {
                    "('org.apache.commons.math.optimization.fitting#CurveFitter', None)": [
                        43,
                        46,
                        112,
                        113,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        124,
                        125
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitter', 'fit(ParametricRealFunction,double)')": [
                        126,
                        127,
                        140
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.fitting#CurveFitter', None)": [
                        110,
                        111,
                        112,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        122,
                        123,
                        124,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitter', 'fit(ParametricRealFunction,double)')": [
                        125,
                        126
                    ],
                    "('org.apache.commons.math.optimization.fitting#CurveFitter', 'fit(int,ParametricRealFunction,double)')": [
                        147,
                        148,
                        161,
                        162
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        81,
                        82,
                        83,
                        84,
                        85
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        234,
                        254
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        81,
                        82,
                        83
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'optimize(int,DifferentiableMultivariateVectorialFunction,double,double,double)')": [
                        232,
                        233,
                        253
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', None)": [
                        54,
                        56,
                        57,
                        58
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'optimize(DifferentiableMultivariateRealFunction,GoalType,double)')": [
                        77,
                        83
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', None)": [
                        55,
                        56
                    ],
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'optimize(int,DifferentiableMultivariateRealFunction,GoalType,double)')": [
                        75,
                        76,
                        82
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', None)": [
                        52,
                        53,
                        56,
                        100,
                        164
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'setMaxEvaluations(int)')": [
                        54,
                        55
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'computeObjectiveValue(double)')": [
                        102
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'optimize(UnivariateRealFunction,GoalType,double,double,double)')": [
                        112,
                        115
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'optimize(UnivariateRealFunction,GoalType,double,double)')": [
                        137,
                        139,
                        140
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'doOptimize')": [
                        166
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', None)": [
                        94,
                        95,
                        161,
                        162
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'computeObjectiveValue(double)')": [
                        97
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'optimize(int,UnivariateRealFunction,GoalType,double,double,double)')": [
                        107,
                        110,
                        125
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'optimize(int,UnivariateRealFunction,GoalType,double,double)')": [
                        133,
                        134,
                        136,
                        137
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'doOptimize')": [
                        164
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer.java": {
                "old": {
                    "(None, None)": [
                        21,
                        57,
                        59,
                        60,
                        81,
                        83,
                        85
                    ]
                },
                "new": {
                    "(None, None)": [
                        49,
                        57,
                        58,
                        60,
                        61,
                        73,
                        83,
                        84,
                        86,
                        88
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', None)": [
                        100,
                        104,
                        105,
                        108,
                        110,
                        113,
                        123,
                        124,
                        125,
                        126,
                        130
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', 'setMaxEvaluations(int)')": [
                        101,
                        102,
                        103
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', 'optimize(FUNC,GoalType,double,double)')": [
                        141,
                        143,
                        144,
                        145
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', 'optimize(FUNC,GoalType,double,double,double)')": [
                        149,
                        151,
                        152,
                        161,
                        167,
                        168,
                        169
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', None)": [
                        102,
                        104,
                        107,
                        117,
                        118,
                        119,
                        120,
                        124
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', 'optimize(int,FUNC,GoalType,double,double)')": [
                        135,
                        137,
                        138
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', 'optimize(int,FUNC,GoalType,double,double,double)')": [
                        142,
                        143,
                        145,
                        154,
                        160
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizerTest', 'testCircleFitting')": [
                        42,
                        58,
                        59,
                        63
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizerTest', None)": [
                        116,
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizerTest', 'testCircleFitting')": [
                        41,
                        60,
                        61
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizerTest', None)": [
                        114
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testTrivial')": [
                        103,
                        115,
                        126
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testNoOptimum')": [
                        141,
                        151,
                        153,
                        157
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testTrivial')": [
                        103,
                        125
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testNoOptimum')": [
                        140,
                        151,
                        155
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizerTest', 'testRosenbrock')": [
                        49,
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizerTest', 'testRosenbrock')": [
                        50
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#PowellOptimizerTest', 'doTest(MultivariateRealFunction,double,double,GoalType,double,double)')": [
                        135,
                        137
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#PowellOptimizerTest', 'doTest(MultivariateRealFunction,double,double,GoalType,double,double)')": [
                        136
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerMultiDirectionalTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testMinimizeMaximize')": [
                        31,
                        43,
                        52,
                        57,
                        64,
                        72,
                        80
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testRosenbrock')": [
                        89,
                        93,
                        103,
                        108
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testPowell')": [
                        117,
                        121,
                        133,
                        136
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testMath283')": [
                        144,
                        148,
                        151
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testMinimizeMaximize')": [
                        30,
                        42,
                        55,
                        62,
                        70,
                        78
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testRosenbrock')": [
                        87,
                        91,
                        105
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testPowell')": [
                        114,
                        118,
                        132
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerMultiDirectionalTest', 'testMath283')": [
                        140,
                        146
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/SimplexOptimizerNelderMeadTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testMinimizeMaximize')": [
                        36,
                        37,
                        59,
                        64,
                        71,
                        79,
                        86
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testRosenbrock')": [
                        95,
                        96,
                        100,
                        105
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testPowell')": [
                        114,
                        115,
                        119,
                        122
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testLeastSquares1')": [
                        130,
                        131,
                        144,
                        147
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testLeastSquares2')": [
                        156,
                        157,
                        170,
                        173
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testLeastSquares3')": [
                        182,
                        183,
                        198,
                        201
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testMaxIterations')": [
                        210,
                        213,
                        215
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', None)": [
                        225
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testMinimizeMaximize')": [
                        35,
                        61,
                        68,
                        76,
                        83
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testRosenbrock')": [
                        92,
                        100
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testPowell')": [
                        109,
                        115
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testLeastSquares1')": [
                        123,
                        138
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testLeastSquares2')": [
                        147,
                        162
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testLeastSquares3')": [
                        171,
                        188
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', 'testMaxIterations')": [
                        197,
                        201
                    ],
                    "('org.apache.commons.math.optimization.direct#SimplexOptimizerNelderMeadTest', None)": [
                        211
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/GaussNewtonOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testTrivial')": [
                        112,
                        113,
                        114,
                        115
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testColumnsPermutation')": [
                        128,
                        129,
                        130,
                        131
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testNoDependency')": [
                        151,
                        152,
                        153,
                        154
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testOneSet')": [
                        170,
                        171,
                        172,
                        173
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testTwoSets')": [
                        193,
                        194,
                        195,
                        196
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testNonInversible')": [
                        216,
                        217,
                        218,
                        219
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testIllConditioned')": [
                        234,
                        237,
                        252
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        271,
                        272,
                        273,
                        274
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        291,
                        292,
                        293,
                        294
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testRedundantEquations')": [
                        310,
                        311,
                        312,
                        313
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentEquations')": [
                        329,
                        330,
                        331
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentSizes')": [
                        340,
                        341,
                        342,
                        343,
                        344,
                        350,
                        359
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testMaxEvaluations')": [
                        377,
                        380
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFitting')": [
                        397,
                        400
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFittingBadInit')": [
                        451,
                        452,
                        453,
                        454,
                        461
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testTrivial')": [
                        112,
                        113,
                        114
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testColumnsPermutation')": [
                        127,
                        128,
                        129
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testNoDependency')": [
                        149,
                        150,
                        151
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testOneSet')": [
                        167,
                        168,
                        169
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testTwoSets')": [
                        189,
                        190,
                        191
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testNonInversible')": [
                        211,
                        212,
                        213
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testIllConditioned')": [
                        230,
                        245
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        264,
                        265,
                        266
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        283,
                        284,
                        285
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testRedundantEquations')": [
                        301,
                        302,
                        303
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentEquations')": [
                        319,
                        320
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testInconsistentSizes')": [
                        329,
                        330,
                        331,
                        332,
                        338,
                        347
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testMaxEvaluations')": [
                        367
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFitting')": [
                        386
                    ],
                    "('org.apache.commons.math.optimization.general#GaussNewtonOptimizerTest', 'testCircleFittingBadInit')": [
                        437,
                        438,
                        439,
                        446
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTrivial')": [
                        116
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testQRColumnsPermutation')": [
                        136
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNoDependency')": [
                        156
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testOneSet')": [
                        173
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTwoSets')": [
                        193
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNonInvertible')": [
                        213
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testIllConditioned')": [
                        232,
                        247
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        265
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        281
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testRedundantEquations')": [
                        299
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentEquations')": [
                        314
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentSizes')": [
                        324,
                        330,
                        339
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'checkEstimate(DifferentiableMultivariateVectorialFunction,double,int,double,double,double,boolean)')": [
                        373,
                        374
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFitting')": [
                        393,
                        421
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFittingBadInit')": [
                        475
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMath199')": [
                        495
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTrivial')": [
                        116
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testQRColumnsPermutation')": [
                        136
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNoDependency')": [
                        156
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testOneSet')": [
                        173
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testTwoSets')": [
                        193
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testNonInvertible')": [
                        213
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testIllConditioned')": [
                        232,
                        247
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        265
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        281
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testRedundantEquations')": [
                        299
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentEquations')": [
                        314
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testInconsistentSizes')": [
                        324,
                        330,
                        339
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'checkEstimate(DifferentiableMultivariateVectorialFunction,double,int,double,double,double,boolean)')": [
                        373,
                        374
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFitting')": [
                        393,
                        421
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFittingBadInit')": [
                        475
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testMath199')": [
                        495
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/MinpackTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#MinpackTest', 'minpackTest(MinpackFunction,boolean)')": [
                        496,
                        500
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#MinpackTest', 'minpackTest(MinpackFunction,boolean)')": [
                        499
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTrivial')": [
                        104,
                        105,
                        106,
                        107
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testColumnsPermutation')": [
                        120,
                        121,
                        122,
                        123
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNoDependency')": [
                        142,
                        143,
                        144,
                        145
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testOneSet')": [
                        160,
                        161,
                        162,
                        163
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTwoSets')": [
                        184,
                        200
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNonInversible')": [
                        219,
                        220,
                        221,
                        222
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testIllConditioned')": [
                        236,
                        241,
                        254
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        272,
                        273,
                        274,
                        275
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        291,
                        292,
                        293,
                        294
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testRedundantEquations')": [
                        308,
                        309,
                        310,
                        311
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testInconsistentEquations')": [
                        327,
                        328,
                        329,
                        330
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testCircleFitting')": [
                        345,
                        350
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTrivial')": [
                        104,
                        105,
                        106
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testColumnsPermutation')": [
                        119,
                        120,
                        121
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNoDependency')": [
                        140,
                        141,
                        142
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testOneSet')": [
                        157,
                        158,
                        159
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testTwoSets')": [
                        195
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testNonInversible')": [
                        214,
                        215,
                        216
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testIllConditioned')": [
                        234,
                        247
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersSimple')": [
                        265,
                        266,
                        267
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testMoreEstimatedParametersUnsorted')": [
                        283,
                        284,
                        285
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testRedundantEquations')": [
                        299,
                        300,
                        301
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testInconsistentEquations')": [
                        317,
                        318,
                        319
                    ],
                    "('org.apache.commons.math.optimization.general#NonLinearConjugateGradientOptimizerTest', 'testCircleFitting')": [
                        338
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testSinMin')": [
                        40,
                        42,
                        43,
                        44,
                        47,
                        49
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testQuinticMin')": [
                        61,
                        62,
                        63,
                        67
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testQuinticMinStatistics')": [
                        76,
                        89
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', None)": [
                        100
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testQuinticMax')": [
                        106,
                        107,
                        109
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testMinEndpoints')": [
                        117,
                        120,
                        123,
                        126
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testSinMin')": [
                        40,
                        41,
                        43,
                        47
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testQuinticMin')": [
                        59,
                        60,
                        64
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testQuinticMinStatistics')": [
                        85
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', None)": [
                        96
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testQuinticMax')": [
                        102,
                        104
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testMinEndpoints')": [
                        112,
                        117,
                        120
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testSinMin')": [
                        39,
                        44
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testQuinticMin')": [
                        62,
                        69
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testBadFunction')": [
                        92,
                        100
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testSinMin')": [
                        43
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testQuinticMin')": [
                        67
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizerTest', 'testBadFunction')": [
                        97
                    ]
                }
            }
        }
    },
    "142d2c918a2b1326f379ff5c824e4ae5f531426e": {
        "authored_data": "2010 Dec 07 14:58",
        "commit.message": "MATH-438\nRemoved deprecated methods.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1043075 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "34c5d96df733d3390272bc6c8016494511531889",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapPow(double)')": [
                        381,
                        382
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', None)": [
                        383,
                        384,
                        385,
                        388,
                        389,
                        390
                    ],
                    "('org.apache.commons.math.linear#AbstractRealVector', 'mapPowToSelf(double)')": [
                        386,
                        387
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealVector.java": {
                "old": {
                    "(None, None)": [
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/AbstractRealVectorTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractRealVectorTest', None)": [
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayRealVectorTest', None)": [
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVectorTest', 'testMapFunctions')": [
                        605,
                        611
                    ]
                },
                "new": {
                    "(None, None)": [
                        51
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVectorTest', 'testMapFunctions')": [
                        598,
                        604
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/SparseRealVectorTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#SparseRealVectorTest', None)": [
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testMapFunctions')": [
                        534,
                        540
                    ]
                },
                "new": {
                    "(None, None)": [
                        51
                    ],
                    "('org.apache.commons.math.linear#SparseRealVectorTest', 'testMapFunctions')": [
                        525,
                        531
                    ]
                }
            }
        }
    },
    "34c5d96df733d3390272bc6c8016494511531889": {
        "authored_data": "2010 Dec 07 14:40",
        "commit.message": "MATH-425\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1043066 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "d54330b9bc4fdc55603e947b87375c22d649dfcf",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealVectorFormat', None)": [
                        239
                    ],
                    "('org.apache.commons.math.linear#RealVectorFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        246,
                        247,
                        248,
                        249,
                        250,
                        251
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.linear#RealVectorFormat', None)": [
                        240
                    ],
                    "('org.apache.commons.math.linear#RealVectorFormat', 'format(Object,StringBuffer,FieldPosition)')": [
                        247,
                        248,
                        249,
                        250,
                        251
                    ]
                }
            }
        }
    },
    "d54330b9bc4fdc55603e947b87375c22d649dfcf": {
        "authored_data": "2010 Dec 06 11:56",
        "commit.message": "MATH-452\nMade all static variables (accuracies) \"private\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1042596 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "71d916f096c205c89dd4242345903adc4b09ca7e",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BaseAbstractUnivariateRealSolver', None)": [
                        37,
                        38,
                        40,
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#BaseAbstractUnivariateRealSolver', None)": [
                        38,
                        40
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BisectionSolver', None)": [
                        31,
                        34
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#BisectionSolver', None)": [
                        31,
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', None)": [
                        40,
                        41,
                        42,
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', None)": [
                        40,
                        41,
                        42,
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', None)": [
                        43,
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', None)": [
                        43,
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', None)": [
                        52,
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#MullerSolver', None)": [
                        52,
                        55
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/MullerSolver2.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#MullerSolver2', None)": [
                        52,
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#MullerSolver2', None)": [
                        52,
                        55
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', None)": [
                        33
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', None)": [
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/RiddersSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', None)": [
                        36,
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#RiddersSolver', None)": [
                        36,
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/SecantSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', None)": [
                        41,
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#SecantSolver', None)": [
                        41,
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', None)": [
                        51,
                        54
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        128
                    ],
                    "(None, None)": [
                        219
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', None)": [
                        45,
                        46,
                        53,
                        56,
                        214,
                        215
                    ],
                    "('org.apache.commons.math.distribution#AbstractContinuousDistribution', 'inverseCumulativeProbability(double)')": [
                        130
                    ]
                }
            }
        }
    },
    "71d916f096c205c89dd4242345903adc4b09ca7e": {
        "authored_data": "2010 Dec 06 02:10",
        "commit.message": "Javadoc typos\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1042513 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "47de37f805d0df8e78780a521bb8b1dc6d365337",
        "changes": {
            "src/main/java/org/apache/commons/math/special/Gamma.java": {
                "old": {
                    "('org.apache.commons.math.special#Gamma', None)": [
                        291
                    ]
                },
                "new": {
                    "('org.apache.commons.math.special#Gamma', None)": [
                        291
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/DefaultTransformer.java": {
                "old": {
                    "('org.apache.commons.math.util#DefaultTransformer', None)": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#DefaultTransformer', None)": [
                        44
                    ]
                }
            }
        }
    },
    "47de37f805d0df8e78780a521bb8b1dc6d365337": {
        "authored_data": "2010 Dec 06 02:08",
        "commit.message": "Add missing @Deprecated annotation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1042512 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "bef875a3ba705fbba18c349104d3aba9101d7720",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/RealVector.java": {
                "new": {
                    "(None, None)": [
                        259,
                        273
                    ]
                }
            }
        }
    },
    "bef875a3ba705fbba18c349104d3aba9101d7720": {
        "authored_data": "2010 Dec 06 02:07",
        "commit.message": "Unused\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1042511 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "92938b610a6c930b4f36b2087cbabc9cc8484fd7",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'laguerre(double,double,double,double)')": [
                        147
                    ]
                }
            }
        }
    },
    "92938b610a6c930b4f36b2087cbabc9cc8484fd7": {
        "authored_data": "2010 Dec 06 00:53",
        "commit.message": "MATH-451\nRemoved the \"solve\" methods lacking the \"maxEval\" parameter.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1042502 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "e58d65df4e41ec16064f91050cd67aa8291737e2",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/solvers/BaseAbstractUnivariateRealSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BaseAbstractUnivariateRealSolver', None)": [
                        37,
                        38,
                        191,
                        192,
                        193,
                        196,
                        197,
                        198,
                        201,
                        202,
                        203
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseAbstractUnivariateRealSolver', 'solve(FUNC,double,double,double)')": [
                        189,
                        190
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseAbstractUnivariateRealSolver', 'solve(FUNC,double,double)')": [
                        194,
                        195
                    ],
                    "('org.apache.commons.math.analysis.solvers#BaseAbstractUnivariateRealSolver', 'solve(FUNC,double)')": [
                        199,
                        200
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java": {
                "old": {
                    "(None, None)": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/NewtonSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', None)": [
                        59
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', 'solve(DifferentiableUnivariateRealFunction,double,double)')": [
                        61,
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', None)": [
                        56,
                        60,
                        61,
                        63
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolver', 'solve(int,DifferentiableUnivariateRealFunction,double,double)')": [
                        64,
                        66
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testSinZero')": [
                        36,
                        39
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testQuinticZero')": [
                        49,
                        52,
                        55,
                        58,
                        61,
                        64,
                        67,
                        70,
                        73,
                        76,
                        79
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testMath369')": [
                        89
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testSinZero')": [
                        36,
                        39
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testQuinticZero')": [
                        49,
                        52,
                        55,
                        58,
                        61,
                        64,
                        67,
                        70,
                        73,
                        76,
                        79
                    ],
                    "('org.apache.commons.math.analysis.solvers#BisectionSolverTest', 'testMath369')": [
                        89
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/BrentSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testSinZero')": [
                        51,
                        57
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testQuinticZero')": [
                        79,
                        86,
                        93,
                        100,
                        107,
                        113,
                        120,
                        126,
                        132,
                        138,
                        144
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testRootEndpoints')": [
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testBadEndpoints')": [
                        181,
                        187,
                        193
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testInitialGuess')": [
                        207,
                        214,
                        222,
                        228,
                        234
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testSinZero')": [
                        51,
                        57
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testQuinticZero')": [
                        79,
                        86,
                        93,
                        100,
                        107,
                        113,
                        120,
                        126,
                        132,
                        138,
                        144
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testRootEndpoints')": [
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testBadEndpoints')": [
                        181,
                        187,
                        193
                    ],
                    "('org.apache.commons.math.analysis.solvers#BrentSolverTest', 'testInitialGuess')": [
                        207,
                        214,
                        222,
                        228,
                        234
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/LaguerreSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testLinearFunction')": [
                        52
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testQuadraticFunction')": [
                        71,
                        77
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testQuinticFunction')": [
                        96,
                        102,
                        108
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testParameters')": [
                        162,
                        169
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testLinearFunction')": [
                        52
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testQuadraticFunction')": [
                        71,
                        77
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testQuinticFunction')": [
                        96,
                        102,
                        108
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolverTest', 'testParameters')": [
                        162,
                        169
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/MullerSolver2Test.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#MullerSolver2Test', 'testSinFunction')": [
                        55,
                        61
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver2Test', 'testQuinticFunction')": [
                        77,
                        83,
                        89
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver2Test', 'testExpm1Function')": [
                        107,
                        113,
                        119
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver2Test', 'testParameters')": [
                        133,
                        140
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#MullerSolver2Test', 'testSinFunction')": [
                        55,
                        61
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver2Test', 'testQuinticFunction')": [
                        77,
                        83,
                        89
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver2Test', 'testExpm1Function')": [
                        107,
                        113,
                        119
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolver2Test', 'testParameters')": [
                        133,
                        140
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/MullerSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testSinFunction')": [
                        55,
                        61
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testQuinticFunction')": [
                        77,
                        83,
                        89
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testExpm1Function')": [
                        109,
                        115,
                        121
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testParameters')": [
                        135,
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testSinFunction')": [
                        55,
                        61
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testQuinticFunction')": [
                        77,
                        83,
                        89
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testExpm1Function')": [
                        109,
                        115,
                        121
                    ],
                    "('org.apache.commons.math.analysis.solvers#MullerSolverTest', 'testParameters')": [
                        135,
                        143
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/NewtonSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', 'testSinZero')": [
                        40,
                        43
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', 'testQuinticZero')": [
                        58,
                        61,
                        64,
                        67,
                        70,
                        73,
                        76,
                        79,
                        82,
                        85,
                        88
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', 'testSinZero')": [
                        40,
                        43
                    ],
                    "('org.apache.commons.math.analysis.solvers#NewtonSolverTest', 'testQuinticZero')": [
                        58,
                        61,
                        64,
                        67,
                        70,
                        73,
                        76,
                        79,
                        82,
                        85,
                        88
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/RiddersSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testSinFunction')": [
                        53,
                        59
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testQuinticFunction')": [
                        75,
                        81,
                        87
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testExpm1Function')": [
                        103,
                        109,
                        115
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testParameters')": [
                        129,
                        136
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testSinFunction')": [
                        53,
                        59
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testQuinticFunction')": [
                        75,
                        81,
                        87
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testExpm1Function')": [
                        103,
                        109,
                        115
                    ],
                    "('org.apache.commons.math.analysis.solvers#RiddersSolverTest', 'testParameters')": [
                        129,
                        136
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/solvers/SecantSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#SecantSolverTest', 'testSinZero')": [
                        43,
                        48
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolverTest', 'testQuinticZero')": [
                        68,
                        73,
                        78,
                        83,
                        88,
                        93,
                        98,
                        103,
                        108,
                        115,
                        120
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolverTest', 'testRootEndpoints')": [
                        133,
                        136,
                        139,
                        142
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolverTest', 'testBadEndpoints')": [
                        152,
                        158,
                        164
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#SecantSolverTest', 'testSinZero')": [
                        43,
                        48
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolverTest', 'testQuinticZero')": [
                        68,
                        73,
                        78,
                        83,
                        88,
                        93,
                        98,
                        103,
                        108,
                        115,
                        120
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolverTest', 'testRootEndpoints')": [
                        133,
                        136,
                        139,
                        142
                    ],
                    "('org.apache.commons.math.analysis.solvers#SecantSolverTest', 'testBadEndpoints')": [
                        152,
                        158,
                        164
                    ]
                }
            }
        }
    },
    "e58d65df4e41ec16064f91050cd67aa8291737e2": {
        "authored_data": "2010 Dec 05 19:37",
        "commit.message": "Remove unnecessary throws clauses from testxxx methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1042428 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "c3ba9b395e3d1e8aab17333fa4036361a6678284",
        "changes": {
            "src/test/java/org/apache/commons/math/analysis/interpolation/BicubicSplineInterpolatingFunctionTest.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolatingFunctionTest', 'testSplinePartialDerivatives')": [
                        267
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.interpolation#BicubicSplineInterpolatingFunctionTest', 'testSplinePartialDerivatives')": [
                        267
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/interpolation/TricubicSplineInterpolatingFunctionTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolatingFunctionTest', 'testPlane')": [
                        278
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolatingFunctionTest', 'testWave')": [
                        383
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolatingFunctionTest', 'testPlane')": [
                        277
                    ],
                    "('org.apache.commons.math.analysis.interpolation#TricubicSplineInterpolatingFunctionTest', 'testWave')": [
                        382
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeFormTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeFormTest', 'testLinearFunction')": [
                        36
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeFormTest', 'testQuadraticFunction')": [
                        65
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeFormTest', 'testQuinticFunction')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeFormTest', 'testLinearFunction')": [
                        35
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeFormTest', 'testQuadraticFunction')": [
                        64
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeFormTest', 'testQuinticFunction')": [
                        94
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionNewtonFormTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonFormTest', 'testLinearFunction')": [
                        34
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonFormTest', 'testQuadraticFunction')": [
                        63
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonFormTest', 'testQuinticFunction')": [
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonFormTest', 'testLinearFunction')": [
                        33
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonFormTest', 'testQuadraticFunction')": [
                        62
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionNewtonFormTest', 'testQuinticFunction')": [
                        92
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionTest', 'testConstants')": [
                        42
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionTest', 'testLinear')": [
                        68
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionTest', 'testfirstDerivativeComparison')": [
                        142
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionTest', 'testMath341')": [
                        242
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionTest', 'testConstants')": [
                        40
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionTest', 'testLinear')": [
                        66
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionTest', 'testfirstDerivativeComparison')": [
                        140
                    ],
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionTest', 'testMath341')": [
                        240
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/CholeskyDecompositionImplTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testDimensions')": [
                        41
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testNonSquare')": [
                        52
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testNotSymmetricMatrixException')": [
                        58
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testNotPositiveDefinite')": [
                        66
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testMath274')": [
                        77
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testAEqualLLT')": [
                        89
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testLLowerTriangular')": [
                        100
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testLTTransposed')": [
                        112
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testMatricesValues')": [
                        123
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testDimensions')": [
                        40
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testNonSquare')": [
                        51
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testNotSymmetricMatrixException')": [
                        57
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testNotPositiveDefinite')": [
                        65
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testMath274')": [
                        76
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testAEqualLLT')": [
                        88
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testLLowerTriangular')": [
                        99
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testLTTransposed')": [
                        111
                    ],
                    "('org.apache.commons.math.linear#CholeskyDecompositionImplTest', 'testMatricesValues')": [
                        122
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/CholeskySolverTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        23
                    ],
                    "('org.apache.commons.math.linear#CholeskySolverTest', 'testSolveDimensionErrors')": [
                        39
                    ],
                    "('org.apache.commons.math.linear#CholeskySolverTest', 'testSolve')": [
                        64
                    ],
                    "('org.apache.commons.math.linear#CholeskySolverTest', 'testDeterminant')": [
                        111
                    ],
                    "('org.apache.commons.math.linear#CholeskySolverTest', 'getDeterminant(RealMatrix)')": [
                        115
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#CholeskySolverTest', 'testSolveDimensionErrors')": [
                        37
                    ],
                    "('org.apache.commons.math.linear#CholeskySolverTest', 'testSolve')": [
                        62
                    ],
                    "('org.apache.commons.math.linear#CholeskySolverTest', 'testDeterminant')": [
                        109
                    ],
                    "('org.apache.commons.math.linear#CholeskySolverTest', 'getDeterminant(RealMatrix)')": [
                        113
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/PowellOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizerTest', 'testSumSinc')": [
                        34
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizerTest', 'testQuadratic')": [
                        59
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizerTest', 'testMaximizeQuadratic')": [
                        90
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizerTest', 'doTest(MultivariateRealFunction,double,double,GoalType,double,double)')": [
                        134,
                        135
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.direct#PowellOptimizerTest', 'testSumSinc')": [
                        33
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizerTest', 'testQuadratic')": [
                        58
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizerTest', 'testMaximizeQuadratic')": [
                        89
                    ],
                    "('org.apache.commons.math.optimization.direct#PowellOptimizerTest', 'doTest(MultivariateRealFunction,double,double,GoalType,double,double)')": [
                        133
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/univariate/BracketFinderTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinderTest', 'testCubicMin')": [
                        32
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinderTest', 'testCubicMax')": [
                        54
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinderTest', 'testMinimumIsOnIntervalBoundary')": [
                        75
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinderTest', 'testIntervalBoundsOrdering')": [
                        94
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#BracketFinderTest', 'testCubicMin')": [
                        31
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinderTest', 'testCubicMax')": [
                        53
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinderTest', 'testMinimumIsOnIntervalBoundary')": [
                        74
                    ],
                    "('org.apache.commons.math.optimization.univariate#BracketFinderTest', 'testIntervalBoundsOrdering')": [
                        93
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/univariate/BrentOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testSinMin')": [
                        38
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testQuinticMin')": [
                        58
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testQuinticMinStatistics')": [
                        73
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testQuinticMax')": [
                        102
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testSinMin')": [
                        37
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testQuinticMin')": [
                        57
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testQuinticMinStatistics')": [
                        72
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizerTest', 'testQuinticMax')": [
                        101
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/transform/FastCosineTransformerTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.transform#FastCosineTransformerTest', 'testSinFunction')": [
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.math.transform#FastCosineTransformerTest', 'testSinFunction')": [
                        71
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/transform/FastFourierTransformerTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.transform#FastFourierTransformerTest', 'testSinFunction')": [
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.math.transform#FastFourierTransformerTest', 'testSinFunction')": [
                        116
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/transform/FastSineTransformerTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.transform#FastSineTransformerTest', 'testSinFunction')": [
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.math.transform#FastSineTransformerTest', 'testSinFunction')": [
                        71
                    ]
                }
            }
        }
    },
    "c3ba9b395e3d1e8aab17333fa4036361a6678284": {
        "authored_data": "2010 Dec 05 19:28",
        "commit.message": "Unnecessary casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1042425 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "7360926bebecbdfc43fcb13d21bd742c8c345cbf",
        "changes": {
            "src/test/java/org/apache/commons/math/linear/ArrayRealVectorTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayRealVectorTest', 'testDataInOut')": [
                        504,
                        514,
                        525,
                        536,
                        548,
                        549
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVectorTest', 'testBasicFunctions')": [
                        1011
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#ArrayRealVectorTest', 'testDataInOut')": [
                        504,
                        514,
                        525,
                        536,
                        548,
                        549
                    ],
                    "('org.apache.commons.math.linear#ArrayRealVectorTest', 'testBasicFunctions')": [
                        1011
                    ]
                }
            }
        }
    }
}