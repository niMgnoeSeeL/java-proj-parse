{
    "f7be1dc6ace53b3d3bd27f617a68c71161d9c6ed": {
        "authored_data": "2011 Oct 27 13:34",
        "commit.message": "MATH-413\nRemoved \"setConvergenceChecker\"; convergence checker is passed at construction.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1189750 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "41df7f7f3ec1c00835568d089b191a0f868a8e85",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', 'setConvergenceChecker(ConvergenceChecker)')": [
                        130,
                        131
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateRealOptimizer', None)": [
                        132,
                        133,
                        134
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseMultiStartMultivariateVectorialOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateVectorialOptimizer', 'setConvergenceChecker(ConvergenceChecker)')": [
                        131,
                        132
                    ],
                    "('org.apache.commons.math.optimization#BaseMultiStartMultivariateVectorialOptimizer', None)": [
                        133,
                        134,
                        135
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/BaseOptimizer.java": {
                "old": {
                    "(None, None)": [
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractScalarOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', 'setConvergenceChecker(ConvergenceChecker)')": [
                        80,
                        81
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractScalarOptimizer', None)": [
                        82,
                        83,
                        84
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BaseAbstractVectorialOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', None)": [
                        79,
                        80,
                        81
                    ],
                    "('org.apache.commons.math.optimization.direct#BaseAbstractVectorialOptimizer', 'setConvergenceChecker(ConvergenceChecker)')": [
                        82,
                        83
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/AbstractUnivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', None)": [
                        38,
                        143,
                        144,
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', 'setConvergenceChecker(ConvergenceChecker)')": [
                        141,
                        142
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#AbstractUnivariateRealOptimizer', None)": [
                        38,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java": {
                "old": {
                    "(None, None)": [
                        34,
                        35,
                        36,
                        37
                    ],
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizer', None)": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.univariate#BrentOptimizer', None)": [
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        103
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', None)": [
                        86,
                        87,
                        88,
                        89,
                        90
                    ],
                    "('org.apache.commons.math.optimization.univariate#MultiStartUnivariateRealOptimizer', 'setConvergenceChecker(ConvergenceChecker)')": [
                        91,
                        92
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateRealOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizerTest', 'testCircleFitting')": [
                        47,
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateRealOptimizerTest', 'testCircleFitting')": [
                        47,
                        48
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/MultiStartDifferentiableMultivariateVectorialOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testTrivial')": [
                        103,
                        111
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', None)": [
                        135
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testNoOptimum')": [
                        138,
                        146
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testTrivial')": [
                        103,
                        104
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', None)": [
                        135
                    ],
                    "('org.apache.commons.math.optimization#MultiStartDifferentiableMultivariateVectorialOptimizerTest', 'testNoOptimum')": [
                        138,
                        139
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/MultiStartMultivariateRealOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizerTest', 'testRosenbrock')": [
                        35,
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization#MultiStartMultivariateRealOptimizerTest', 'testRosenbrock')": [
                        35,
                        36
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFittingBadInit')": [
                        481,
                        482
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'testCircleFittingBadInit')": [
                        481,
                        482
                    ]
                }
            }
        }
    },
    "41df7f7f3ec1c00835568d089b191a0f868a8e85": {
        "authored_data": "2011 Oct 27 09:59",
        "commit.message": "Code formatting.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1189695 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "b91a448a9f9afe79e26be8334b87775016d24d55",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java": {
                "old": {
                    "('org.apache.commons.math.linear#SingularValueDecomposition', None)": [
                        366,
                        367,
                        368
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SingularValueDecomposition', None)": [
                        366,
                        367,
                        368,
                        369,
                        370,
                        371
                    ]
                }
            }
        }
    },
    "b91a448a9f9afe79e26be8334b87775016d24d55": {
        "authored_data": "2011 Oct 27 09:53",
        "commit.message": "Code and Javadoc formatting.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1189694 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "3a7d733976c79129995224fc90e4bdd0abbe4048",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/EigenDecomposition.java": {
                "old": {
                    "(None, None)": [
                        58
                    ],
                    "('org.apache.commons.math.linear#EigenDecomposition', None)": [
                        68,
                        71,
                        74,
                        77,
                        83,
                        86,
                        89,
                        92,
                        95,
                        98,
                        123,
                        124,
                        174,
                        175,
                        176,
                        177,
                        179,
                        180,
                        197,
                        198,
                        199,
                        200,
                        201,
                        214,
                        215,
                        216,
                        217,
                        219,
                        220,
                        238,
                        239,
                        249,
                        251,
                        261,
                        262,
                        272,
                        273,
                        274,
                        284,
                        285,
                        286,
                        294,
                        295,
                        306,
                        307,
                        315,
                        318,
                        321,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        343,
                        345,
                        348,
                        349,
                        415,
                        416,
                        420,
                        457,
                        472
                    ],
                    "('org.apache.commons.math.linear#EigenDecomposition', 'findEigenVectors(double)')": [
                        475,
                        479,
                        485,
                        488,
                        490,
                        491,
                        492,
                        493,
                        494,
                        498,
                        500,
                        501,
                        502,
                        503,
                        504,
                        514,
                        600,
                        602,
                        609,
                        610,
                        615
                    ]
                },
                "new": {
                    "(None, None)": [
                        58
                    ],
                    "('org.apache.commons.math.linear#EigenDecomposition', None)": [
                        113,
                        114,
                        164,
                        165,
                        166,
                        167,
                        169,
                        170,
                        171,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        207,
                        208,
                        209,
                        210,
                        212,
                        213,
                        214,
                        232,
                        233,
                        234,
                        235,
                        245,
                        246,
                        247,
                        249,
                        250,
                        251,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        292,
                        293,
                        294,
                        295,
                        303,
                        304,
                        305,
                        316,
                        317,
                        318,
                        319,
                        335,
                        336,
                        337,
                        338,
                        339,
                        350,
                        352,
                        355,
                        356,
                        357,
                        358,
                        424,
                        425,
                        426,
                        430,
                        431,
                        468,
                        483
                    ],
                    "('org.apache.commons.math.linear#EigenDecomposition', 'findEigenVectors(double)')": [
                        486,
                        490,
                        496,
                        499,
                        501,
                        502,
                        503,
                        504,
                        505,
                        509,
                        511,
                        512,
                        513,
                        514,
                        515,
                        525,
                        526,
                        612,
                        614,
                        621,
                        622,
                        627
                    ]
                }
            }
        }
    },
    "3a7d733976c79129995224fc90e4bdd0abbe4048": {
        "authored_data": "2011 Oct 27 03:11",
        "commit.message": "Moved \"SAFE_MIN\" and \"EPSILON\" from \"MathUtils\" to \"Precision.\"\n\nJIRA: MATH-689\n(Committing on behalf of erans)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1189593 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "2f10501e0ae07d4205a04c64c2aaaf360c074f6b",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java": {
                "old": {
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', None)": [
                        84
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.integration#UnivariateRealIntegratorImpl', None)": [
                        84
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/euclidean/threed/Line.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Line', 'distance(Line)')": [
                        175
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Line', 'closestPoint(Line)')": [
                        195
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Line', 'distance(Line)')": [
                        175
                    ],
                    "('org.apache.commons.math.geometry.euclidean.threed#Line', 'closestPoint(Line)')": [
                        195
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/EigenDecomposition.java": {
                "old": {
                    "(None, None)": [
                        23,
                        46
                    ],
                    "('org.apache.commons.math.linear#EigenDecomposition', 'isSymmetric(RealMatrix,boolean)')": [
                        156
                    ],
                    "('org.apache.commons.math.linear#EigenDecomposition', 'findEigenVectors(double)')": [
                        500,
                        503,
                        609
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        46
                    ],
                    "('org.apache.commons.math.linear#EigenDecomposition', 'isSymmetric(RealMatrix,boolean)')": [
                        156
                    ],
                    "('org.apache.commons.math.linear#EigenDecomposition', 'findEigenVectors(double)')": [
                        500,
                        503,
                        609
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/MatrixUtils.java": {
                "old": {
                    "(None, None)": [
                        40
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'solveLowerTriangularSystem(RealMatrix,RealVector)')": [
                        840
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'solveUpperTriangularSystem(RealMatrix,RealVector)')": [
                        880
                    ]
                },
                "new": {
                    "(None, None)": [
                        40
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'solveLowerTriangularSystem(RealMatrix,RealVector)')": [
                        840
                    ],
                    "('org.apache.commons.math.linear#MatrixUtils', 'solveUpperTriangularSystem(RealMatrix,RealVector)')": [
                        880
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecomposition', None)": [
                        468,
                        508
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.linear#SingularValueDecomposition', None)": [
                        468,
                        508
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/JacobianMatrices.java": {
                "old": {
                    "('org.apache.commons.math.ode#JacobianMatrices', None)": [
                        201
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#JacobianMatrices', None)": [
                        201
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/AbstractConvergenceChecker.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization#AbstractConvergenceChecker', None)": [
                        35,
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization#AbstractConvergenceChecker', None)": [
                        35,
                        39
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', None)": [
                        147,
                        151,
                        164,
                        170,
                        217,
                        232
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizer', None)": [
                        147,
                        151,
                        164,
                        170,
                        217,
                        232
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        144
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        144
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/regression/MillerUpdatingRegression.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegression', None)": [
                        156
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegression', 'include(double,double,double)')": [
                        274
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegression', 'smartAdd(double,double)')": [
                        315,
                        321
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegression', None)": [
                        156
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegression', 'include(double,double,double)')": [
                        274
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegression', 'smartAdd(double,double)')": [
                        315,
                        321
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/regression/SimpleRegression.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'regress')": [
                        709
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.math.stat.regression#SimpleRegression', 'regress')": [
                        709
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/FastMath.java": {
                "old": {
                    "('org.apache.commons.math.util#FastMath', None)": [
                        104,
                        106
                    ],
                    "('org.apache.commons.math.util#FastMath', 'doubleHighPart(double)')": [
                        361
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#FastMath', None)": [
                        104,
                        106
                    ],
                    "('org.apache.commons.math.util#FastMath', 'doubleHighPart(double)')": [
                        361
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/Precision.java": {
                "old": {
                    "('org.apache.commons.math.util#Precision', None)": [
                        35
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#Precision', None)": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/dfp/DfpTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.dfp#DfpTest', 'testIssue567')": [
                        1552,
                        1553,
                        1554,
                        1555
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.dfp#DfpTest', 'testIssue567')": [
                        1552,
                        1553,
                        1554,
                        1555
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/EigenDecompositionTest.java": {
                "old": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDimension1')": [
                        41
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDimension2')": [
                        53
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDimension3')": [
                        67
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDimension3MultipleRoot')": [
                        82
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDimension4WithSplit')": [
                        98
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDimension4WithoutSplit')": [
                        115
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testMath308')": [
                        149
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testMathpbx02')": [
                        194
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testMathpbx03')": [
                        241
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testTridiagonal')": [
                        273
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDimensions')": [
                        287
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testEigenvalues')": [
                        300
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testBigMatrix')": [
                        319
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testEigenvectors')": [
                        331
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testAEqualVDVt')": [
                        344
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testVOrthogonal')": [
                        355
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDiagonal')": [
                        367
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testRepeatedEigenvalue')": [
                        385
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDistinctEigenvalues')": [
                        401
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testZeroDivide')": [
                        419
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDimension1')": [
                        41
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDimension2')": [
                        53
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDimension3')": [
                        67
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDimension3MultipleRoot')": [
                        82
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDimension4WithSplit')": [
                        98
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDimension4WithoutSplit')": [
                        115
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testMath308')": [
                        149
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testMathpbx02')": [
                        194
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testMathpbx03')": [
                        241
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testTridiagonal')": [
                        273
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDimensions')": [
                        287
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testEigenvalues')": [
                        300
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testBigMatrix')": [
                        319
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testEigenvectors')": [
                        331
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testAEqualVDVt')": [
                        344
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testVOrthogonal')": [
                        355
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDiagonal')": [
                        367
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testRepeatedEigenvalue')": [
                        385
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testDistinctEigenvalues')": [
                        401
                    ],
                    "('org.apache.commons.math.linear#EigenDecompositionTest', 'testZeroDivide')": [
                        419
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/linear/EigenSolverTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.linear#EigenSolverTest', 'testNonInvertible')": [
                        36
                    ],
                    "('org.apache.commons.math.linear#EigenSolverTest', 'testInvertible')": [
                        52
                    ],
                    "('org.apache.commons.math.linear#EigenSolverTest', 'testSolveDimensionErrors')": [
                        68
                    ],
                    "('org.apache.commons.math.linear#EigenSolverTest', 'testSolve')": [
                        101
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.linear#EigenSolverTest', 'testNonInvertible')": [
                        36
                    ],
                    "('org.apache.commons.math.linear#EigenSolverTest', 'testInvertible')": [
                        52
                    ],
                    "('org.apache.commons.math.linear#EigenSolverTest', 'testSolveDimensionErrors')": [
                        68
                    ],
                    "('org.apache.commons.math.linear#EigenSolverTest', 'testSolve')": [
                        101
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'checkEstimate(DifferentiableMultivariateVectorialFunction,double,int,double,double,double,boolean)')": [
                        379
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.commons.math.optimization.general#LevenbergMarquardtOptimizerTest', 'checkEstimate(DifferentiableMultivariateVectorialFunction,double,int,double,double,double,boolean)')": [
                        379
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/util/FastMathStrictComparisonTest.java": {
                "old": {
                    "('org.apache.commons.math.util#FastMathStrictComparisonTest', None)": [
                        51,
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#FastMathStrictComparisonTest', None)": [
                        51,
                        52
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/util/FastMathTest.java": {
                "old": {
                    "('org.apache.commons.math.util#FastMathTest', 'testMinMaxDouble')": [
                        61,
                        67,
                        71,
                        75,
                        79
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testMinMaxFloat')": [
                        100,
                        104,
                        108,
                        112
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testAtan2')": [
                        126,
                        129
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testHyperbolicInverses')": [
                        175
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testLogSpecialCases')": [
                        273
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testExpSpecialCases')": [
                        281,
                        282,
                        283,
                        289,
                        290,
                        291
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testPowSpecialCases')": [
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        333,
                        345,
                        346,
                        347
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testAtan2SpecialCases')": [
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        401,
                        404,
                        407,
                        410
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testAcosSpecialCases')": [
                        716,
                        717,
                        718,
                        719,
                        720
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testAsinSpecialCases')": [
                        735,
                        736,
                        737,
                        738,
                        739
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#FastMathTest', 'testMinMaxDouble')": [
                        61,
                        67,
                        71,
                        75,
                        79
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testMinMaxFloat')": [
                        100,
                        104,
                        108,
                        112
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testAtan2')": [
                        126,
                        129
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testHyperbolicInverses')": [
                        175
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testLogSpecialCases')": [
                        273
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testExpSpecialCases')": [
                        281,
                        282,
                        283,
                        289,
                        290,
                        291
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testPowSpecialCases')": [
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        333,
                        345,
                        346,
                        347
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testAtan2SpecialCases')": [
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        401,
                        404,
                        407,
                        410
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testAcosSpecialCases')": [
                        716,
                        717,
                        718,
                        719,
                        720
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testAsinSpecialCases')": [
                        735,
                        736,
                        737,
                        738,
                        739
                    ]
                }
            }
        }
    },
    "2f10501e0ae07d4205a04c64c2aaaf360c074f6b": {
        "authored_data": "2011 Oct 27 00:43",
        "commit.message": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1189563 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "39970a520e8ae7a2c3126c625019964f921c1022",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/SingularValueDecomposition.java": {
                "old": {
                    "('org.apache.commons.math.linear#SingularValueDecomposition', None)": [
                        508
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#SingularValueDecomposition', None)": [
                        508
                    ]
                }
            }
        }
    },
    "39970a520e8ae7a2c3126c625019964f921c1022": {
        "authored_data": "2011 Oct 26 22:05",
        "commit.message": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1189499 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "7980a24266d463bacc8f1271a83865a7d5638891",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/EigenDecomposition.java": {
                "old": {
                    "(None, None)": [
                        46
                    ]
                },
                "new": {
                    "(None, None)": [
                        46
                    ]
                }
            }
        }
    },
    "7980a24266d463bacc8f1271a83865a7d5638891": {
        "authored_data": "2011 Oct 26 09:08",
        "commit.message": "Fixed an event resetting issue in ODE.\n\nWhen several discrete events occur during the same ODE integration step,\nthey are handled chronologically or reverse chronologically depending on\nthe integration direction. If one of the event truncates the step (for\nexample because its eventOccurred method returns RESET or\nRESET_DERIVATIVES for example), the stepAccepted method of the pending\nevents later in the step were not called. This implied that in the next\nstep, these events were still referring to data from previous step, they\nhad lost synchronization with the integrator.\n\nJIRA: MATH-695\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1189086 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "3e6a8820703bbdeb97825db66daecf5c4410bde6",
        "changes": {
            "src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java": {
                "old": {
                    "(None, None)": [
                        43
                    ],
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'acceptStep(AbstractStepInterpolator,double,double,double)')": [
                        281
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#AbstractIntegrator', 'acceptStep(AbstractStepInterpolator,double,double,double)')": [
                        333,
                        334,
                        335,
                        345,
                        346,
                        347
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/ode/events/EventStateTest.java": {
                "new": {
                    "(None, None)": [
                        22,
                        23,
                        133,
                        134,
                        135,
                        136,
                        137
                    ],
                    "('org.apache.commons.math.ode.events#EventStateTest', None)": [
                        78,
                        79,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132
                    ],
                    "('org.apache.commons.math.ode.events#EventStateTest', 'testIssue695')": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102
                    ]
                }
            }
        }
    },
    "3e6a8820703bbdeb97825db66daecf5c4410bde6": {
        "authored_data": "2011 Oct 25 22:26",
        "commit.message": "MATH-689\nMethod \"log(double base, double x)\" moved from \"MathUtils\" to \"FastMath\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1188949 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "6ed1d0667759a810f6b14c3acc1e38ffaca2b4bf",
        "changes": {
            "src/main/java/org/apache/commons/math/util/FastMath.java": {
                "new": {
                    "('org.apache.commons.math.util#FastMath', None)": [
                        1393,
                        1394,
                        1395,
                        1396,
                        1397,
                        1398,
                        1399,
                        1400,
                        1401,
                        1402,
                        1403,
                        1404,
                        1405,
                        1406,
                        1407,
                        1410,
                        1411,
                        1412
                    ],
                    "('org.apache.commons.math.util#FastMath', 'log(double,double)')": [
                        1408,
                        1409
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'log(double,double)')": [
                        184,
                        185
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/util/FastMathTest.java": {
                "new": {
                    "('org.apache.commons.math.util#FastMathTest', None)": [
                        1081,
                        1082
                    ],
                    "('org.apache.commons.math.util#FastMathTest', 'testLogWithBase')": [
                        1083,
                        1084,
                        1085,
                        1086,
                        1087,
                        1088,
                        1089,
                        1090
                    ],
                    "(None, None)": [
                        1091
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/util/MathUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtilsTest', 'testLog')": [
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', None)": [
                        162,
                        163,
                        164
                    ]
                }
            }
        }
    },
    "6ed1d0667759a810f6b14c3acc1e38ffaca2b4bf": {
        "authored_data": "2011 Oct 25 21:57",
        "commit.message": "MATH-696\nDefault implementation for \"addToEntry\" and \"multiplyEntry\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1188941 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "d0be1f663ef3922ce6b24d6b473a82c3ea0bd34e",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'addToEntry(int,int,double)')": [
                        567
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', None)": [
                        568,
                        569
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'multiplyEntry(int,int,double)')": [
                        570
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'addToEntry(int,int,double)')": [
                        567,
                        568,
                        569
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', None)": [
                        570,
                        571,
                        572,
                        576
                    ],
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'multiplyEntry(int,int,double)')": [
                        573,
                        574,
                        575
                    ]
                }
            }
        }
    },
    "d0be1f663ef3922ce6b24d6b473a82c3ea0bd34e": {
        "authored_data": "2011 Oct 25 21:16",
        "commit.message": "MATH-689\nMoved \"round\" methods over to class \"Precision\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1188915 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "597b0209e9f246dd2c1e5d8f62bafefe8ea36b82",
        "changes": {
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "(None, None)": [
                        20,
                        25
                    ],
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        405,
                        406,
                        407
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'round(double,int)')": [
                        245,
                        246
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'round(double,int,int)')": [
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'round(float,int)')": [
                        292,
                        293
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'round(float,int,int)')": [
                        308,
                        309,
                        310,
                        311
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'roundUnscaled(double,double,int)')": [
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/Precision.java": {
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        465
                    ],
                    "('org.apache.commons.math.util#Precision', None)": [
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385
                    ],
                    "('org.apache.commons.math.util#Precision', 'round(double,int)')": [
                        308,
                        309
                    ],
                    "('org.apache.commons.math.util#Precision', 'round(double,int,int)')": [
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339
                    ],
                    "('org.apache.commons.math.util#Precision', 'round(float,int)')": [
                        353,
                        354
                    ],
                    "('org.apache.commons.math.util#Precision', 'round(float,int,int)')": [
                        368,
                        369,
                        370,
                        371
                    ],
                    "('org.apache.commons.math.util#Precision', 'roundUnscaled(double,double,int)')": [
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/util/MathUtilsTest.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtilsTest', 'testRoundDouble')": [
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', None)": [
                        351,
                        352,
                        353,
                        448,
                        449,
                        450
                    ],
                    "('org.apache.commons.math.util#MathUtilsTest', 'testRoundFloat')": [
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/util/PrecisionTest.java": {
                "old": {
                    "(None, None)": [
                        255
                    ]
                },
                "new": {
                    "(None, None)": [
                        15,
                        16,
                        17,
                        18,
                        19
                    ],
                    "('org.apache.commons.math.util#PrecisionTest', None)": [
                        260,
                        261,
                        262,
                        369,
                        370,
                        371
                    ],
                    "('org.apache.commons.math.util#PrecisionTest', 'testRoundDouble')": [
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368
                    ],
                    "('org.apache.commons.math.util#PrecisionTest', 'testRoundFloat')": [
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465
                    ]
                }
            }
        }
    }
}