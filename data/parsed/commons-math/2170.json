{
    "40bde15b03ace8eab4dd91da65bc383d154769fa": {
        "authored_data": "2013 Aug 13 10:46",
        "commit.message": "MATH-1022\nFixed Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1513430 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "4d5660ed4706dd69a58c3fc1cea626aa6fc51c18",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/function/Logistic.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.function#Logistic', None)": [
                        99,
                        101,
                        102
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis.function#Logistic', None)": [
                        99,
                        100,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/analysis/function/Sigmoid.java": {
                "old": {
                    "('org.apache.commons.math3.analysis.function#Sigmoid', None)": [
                        83
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.analysis.function#Sigmoid', None)": [
                        83,
                        84
                    ]
                }
            }
        }
    },
    "e175e32e8ba0b64e6e900454c8f3f5d4d12a583c": {
        "authored_data": "2013 Aug 10 21:42",
        "commit.message": "MATH-1010\nDeleted obsolete method (replaced by \"MathArrays.shuffle\").\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1512824 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "11b1474cec7e74895d1723918299024bd31377d7",
        "changes": {
            "src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java": {
                "old": {
                    "('org.apache.commons.math3.random#RandomDataGenerator', None)": [
                        793,
                        794,
                        795,
                        796,
                        797,
                        798,
                        811,
                        812,
                        813,
                        814
                    ],
                    "('org.apache.commons.math3.random#RandomDataGenerator', 'shuffle(int,int)')": [
                        799,
                        800,
                        801,
                        802,
                        803,
                        804,
                        805,
                        806,
                        807,
                        808,
                        809,
                        810
                    ]
                }
            }
        }
    },
    "11b1474cec7e74895d1723918299024bd31377d7": {
        "authored_data": "2013 Aug 10 01:13",
        "commit.message": "MATH-989\nUpdate \"changes.xml\".\nJavadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1512547 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "f1467e45ab538789090f968f549f88bd0b8c26c7",
        "changes": {
            "src/main/java/org/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction.java": {
                "new": {
                    "('org.apache.commons.math3.analysis.interpolation#BicubicSplineInterpolatingFunction', None)": [
                        181
                    ]
                }
            }
        }
    },
    "f1467e45ab538789090f968f549f88bd0b8c26c7": {
        "authored_data": "2013 Aug 10 00:57",
        "commit.message": "MATH-1021\nReordering can prevent some overflow occurrences (fix suggested by\nBrian Bloniarz).\nAdded unit test.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1512546 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "6d66a863b5c0049926330ef217accba4e022a1db",
        "changes": {
            "src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java": {
                "old": {
                    "('org.apache.commons.math3.distribution#HypergeometricDistribution', 'getNumericalMean')": [
                        268
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.distribution#HypergeometricDistribution', 'getNumericalMean')": [
                        268
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/distribution/HypergeometricDistributionTest.java": {
                "new": {
                    "('org.apache.commons.math3.distribution#HypergeometricDistributionTest', None)": [
                        287,
                        288
                    ],
                    "('org.apache.commons.math3.distribution#HypergeometricDistributionTest', 'testMath1021')": [
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298
                    ],
                    "(None, None)": [
                        299,
                        300
                    ]
                }
            }
        }
    },
    "21f882885bdf8792b5aefab2e3f7b270d2b0d1db": {
        "authored_data": "2013 Aug 09 23:39",
        "commit.message": "MATH-1010\nMake use of the RNG supplied as argument.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1512535 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "63030b2b0ad2735a45522b73adc414746eb3dd38",
        "changes": {
            "src/main/java/org/apache/commons/math3/util/MathArrays.java": {
                "old": {
                    "('org.apache.commons.math3.util#MathArrays', 'shuffle(int,int,Position,RandomGenerator)')": [
                        1481,
                        1496
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.util#MathArrays', 'shuffle(int,int,Position,RandomGenerator)')": [
                        1481,
                        1496
                    ]
                }
            }
        }
    },
    "63030b2b0ad2735a45522b73adc414746eb3dd38": {
        "authored_data": "2013 Aug 09 23:21",
        "commit.message": "MATH-1008\nSimplification of the code introduced in revision 1508481. The changes\nonly focus on the \"fluent API\" aspect (rather than also try to achieve\nthread-safety through immutability).\nClass \"AbstractOptimizer\" introduced to serve as the base class for all\noptimizers (i.e. replace the current \"BaseOptimizer\").\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1512530 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "6d0394d27d570fe3586d5d25ec159e602496b1aa",
        "changes": {
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        30,
                        31,
                        33
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizer', None)": [
                        43,
                        44,
                        46,
                        48,
                        50,
                        52,
                        54,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizer', 'optimize(OptimizationData)')": [
                        229,
                        230,
                        231
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizer', 'getTargetInternal')": [
                        240,
                        241
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizer', 'getWeightInternal')": [
                        250,
                        251
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizer', 'getWeightSquareRootInternal')": [
                        260,
                        261
                    ]
                },
                "new": {
                    "(None, None)": [
                        29,
                        37,
                        38
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizer', None)": [
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        49,
                        51,
                        53,
                        55,
                        57,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        84,
                        85,
                        86,
                        91,
                        92,
                        93,
                        99,
                        100,
                        101
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizer', 'withTarget(double)')": [
                        81,
                        82,
                        83
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizer', 'withWeight(RealMatrix)')": [
                        87,
                        88,
                        89,
                        90
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizer', 'withModelAndJacobian(MultivariateVectorFunction,MultivariateMatrixFunction)')": [
                        94,
                        95,
                        96,
                        97,
                        98
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizer', 'withStartPoint(double)')": [
                        102,
                        103,
                        104
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        48
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', None)": [
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        109,
                        110,
                        111,
                        123,
                        124,
                        125,
                        137,
                        138,
                        139,
                        152,
                        153,
                        154,
                        166,
                        167,
                        168,
                        180,
                        181,
                        182,
                        194,
                        195,
                        196,
                        211,
                        212,
                        213,
                        214,
                        215
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'create')": [
                        107,
                        108
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'withTarget(double)')": [
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'withWeight(RealMatrix)')": [
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'withModelAndJacobian(MultivariateVectorFunction,MultivariateMatrixFunction)')": [
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'withConvergenceChecker(ConvergenceChecker)')": [
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'withStartPoint(double)')": [
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'withMaxIterations(int)')": [
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'withMaxEvaluations(int)')": [
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'withLU(boolean)')": [
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', None)": [
                        47,
                        49,
                        66,
                        67
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'create')": [
                        62
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#GaussNewtonOptimizer', 'withLU(boolean)')": [
                        69,
                        70,
                        71
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', None)": [
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        121,
                        123,
                        125,
                        128,
                        130,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        214,
                        215,
                        216,
                        232,
                        233,
                        234,
                        250,
                        251,
                        252,
                        269,
                        270,
                        271,
                        287,
                        288,
                        289,
                        305,
                        306,
                        307,
                        323,
                        324,
                        325,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        352,
                        353,
                        355,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        387,
                        397,
                        407,
                        417,
                        427
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'create')": [
                        211,
                        212,
                        213
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'withTarget(double)')": [
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'withWeight(RealMatrix)')": [
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'withModelAndJacobian(MultivariateVectorFunction,MultivariateMatrixFunction)')": [
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'withConvergenceChecker(ConvergenceChecker)')": [
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'withStartPoint(double)')": [
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'withMaxIterations(int)')": [
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'withMaxEvaluations(int)')": [
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'withTuningParameters(double,double,double,double,double)')": [
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'getParRelativeTolerance')": [
                        411
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', None)": [
                        108,
                        112,
                        114,
                        116,
                        119,
                        121,
                        145,
                        146,
                        147,
                        148,
                        154,
                        155,
                        156,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        169,
                        170,
                        171,
                        172,
                        174,
                        175,
                        179,
                        180,
                        181,
                        182,
                        184,
                        185,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        205,
                        215,
                        225,
                        235,
                        245
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'create')": [
                        144
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'withInitialStepBoundFactor(double)')": [
                        157,
                        158,
                        159
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'withCostRelativeTolerance(double)')": [
                        166,
                        167,
                        168
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'withParameterRelativeTolerance(double)')": [
                        176,
                        177,
                        178
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'withOrthoTolerance(double)')": [
                        186,
                        187,
                        188
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'withRankingThreshold(double)')": [
                        198,
                        199,
                        200
                    ],
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizer', 'getParameterRelativeTolerance')": [
                        229
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/fitting/leastsquares/WithConvergenceChecker.java": {
                "old": {
                    "(None, None)": [
                        20,
                        30,
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        30,
                        38
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/AbstractLeastSquaresOptimizerAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', None)": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#AbstractLeastSquaresOptimizerAbstractTest', None)": [
                        47
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizerTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizerTest', 'checkEstimate(MultivariateVectorFunction,MultivariateMatrixFunction,double,int,double,double,double,boolean)')": [
                        118,
                        119,
                        120,
                        121,
                        122
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#LevenbergMarquardtOptimizerTest', 'checkEstimate(MultivariateVectorFunction,MultivariateMatrixFunction,double,int,double,double,double,boolean)')": [
                        118,
                        119,
                        120,
                        121,
                        122
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/fitting/leastsquares/MinpackTest.java": {
                "old": {
                    "('org.apache.commons.math3.fitting.leastsquares#MinpackTest', 'minpackTest(MinpackFunction,boolean)')": [
                        503,
                        504,
                        505,
                        506,
                        507
                    ]
                },
                "new": {
                    "('org.apache.commons.math3.fitting.leastsquares#MinpackTest', 'minpackTest(MinpackFunction,boolean)')": [
                        501,
                        504,
                        505,
                        506,
                        507,
                        508
                    ]
                }
            }
        }
    },
    "6d0394d27d570fe3586d5d25ec159e602496b1aa": {
        "authored_data": "2013 Aug 09 13:55",
        "commit.message": "MATH-1020.\nFixed \"nextPermutation\" in \"RandomDataGenerator\". Bug showed up when using\na fixed version of \"shuffle\" (MATH-1019) added in \"MathArrays\" (MATH-1010).\nAdded overloaded \"shuffle\" method (used in the above fix).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1512306 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "c8fc11146f39ce3243fb5360ae148a5a4cb633ce",
        "changes": {
            "src/main/java/org/apache/commons/math3/random/RandomDataGenerator.java": {
                "old": {
                    "('org.apache.commons.math3.random#RandomDataGenerator', 'nextPermutation(int,int)')": [
                        642,
                        643,
                        644,
                        645,
                        646,
                        647,
                        648
                    ]
                },
                "new": {
                    "(None, None)": [
                        49
                    ],
                    "('org.apache.commons.math3.random#RandomDataGenerator', 'nextPermutation(int,int)')": [
                        643,
                        644,
                        645,
                        646
                    ]
                }
            },
            "src/main/java/org/apache/commons/math3/util/MathArrays.java": {
                "new": {
                    "('org.apache.commons.math3.util#MathArrays', None)": [
                        1508,
                        1509,
                        1510,
                        1511,
                        1512,
                        1513,
                        1514,
                        1518,
                        1519,
                        1520,
                        1521,
                        1522,
                        1523,
                        1524
                    ],
                    "('org.apache.commons.math3.util#MathArrays', 'shuffle(int,RandomGenerator)')": [
                        1515,
                        1516,
                        1517
                    ],
                    "('org.apache.commons.math3.util#MathArrays', 'shuffle(int)')": [
                        1525,
                        1526
                    ],
                    "(None, None)": [
                        1527
                    ]
                }
            }
        }
    },
    "c8fc11146f39ce3243fb5360ae148a5a4cb633ce": {
        "authored_data": "2013 Aug 08 23:18",
        "commit.message": "MATH-1010\nAdded utility to shuffle an array (based on the method \"shuffle\" located\nin \"o.a.c.m.random.RandomDataGenerator\"). See also MATH-1019.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1512095 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gilles Sadowski",
        "pcid": "f18f6dd91b0ee30d2585d5c23662f80eae3fd33f",
        "changes": {
            "src/main/java/org/apache/commons/math3/util/MathArrays.java": {
                "new": {
                    "(None, None)": [
                        28,
                        29,
                        30,
                        1506,
                        1507
                    ],
                    "('org.apache.commons.math3.util#MathArrays', None)": [
                        1428,
                        1429,
                        1430,
                        1431,
                        1432,
                        1433,
                        1434,
                        1435,
                        1436,
                        1437,
                        1438,
                        1439,
                        1440,
                        1441,
                        1442,
                        1443,
                        1444,
                        1445,
                        1446,
                        1447,
                        1448,
                        1449,
                        1450,
                        1455,
                        1456,
                        1457,
                        1458,
                        1459,
                        1460,
                        1461,
                        1462,
                        1463,
                        1464,
                        1465,
                        1466,
                        1467,
                        1468
                    ],
                    "('org.apache.commons.math3.util#MathArrays', 'shuffle(int,int,Position)')": [
                        1451,
                        1452,
                        1453,
                        1454
                    ],
                    "('org.apache.commons.math3.util#MathArrays', 'shuffle(int,int,Position,RandomGenerator)')": [
                        1469,
                        1470,
                        1471,
                        1472,
                        1473,
                        1474,
                        1475,
                        1476,
                        1477,
                        1478,
                        1479,
                        1480,
                        1481,
                        1482,
                        1483,
                        1484,
                        1485,
                        1486,
                        1487,
                        1488,
                        1489,
                        1490,
                        1491,
                        1492,
                        1493,
                        1494,
                        1495,
                        1496,
                        1497,
                        1498,
                        1499,
                        1500,
                        1501,
                        1502,
                        1503,
                        1504,
                        1505
                    ]
                }
            },
            "src/test/java/org/apache/commons/math3/util/MathArraysTest.java": {
                "new": {
                    "('org.apache.commons.math3.util#MathArraysTest', None)": [
                        935,
                        936,
                        957,
                        958,
                        959
                    ],
                    "('org.apache.commons.math3.util#MathArraysTest', 'testShuffleTail')": [
                        937,
                        938,
                        939,
                        940,
                        941,
                        942,
                        943,
                        944,
                        945,
                        946,
                        947,
                        948,
                        949,
                        950,
                        951,
                        952,
                        953,
                        954,
                        955,
                        956
                    ],
                    "('org.apache.commons.math3.util#MathArraysTest', 'testShuffleHead')": [
                        960,
                        961,
                        962,
                        963,
                        964,
                        965,
                        966,
                        967,
                        968,
                        969,
                        970,
                        971,
                        972,
                        973,
                        974,
                        975,
                        976,
                        977,
                        978,
                        979
                    ],
                    "(None, None)": [
                        980
                    ]
                }
            }
        }
    }
}