{
    "3cf3b82b72521c054305d7cceaf6d008b878f915": {
        "authored_data": "2009 Sep 10 08:16",
        "commit.message": "renamed a test after a change in the tested class\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@813296 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "d2ba1651edfe40981d1fc163af89d168c5679c1f",
        "changes": {
            "src/test/java/org/apache/commons/math/optimization/linear/SimplexTableauTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#SimplexTableauTest', 'testdiscardArtificialVariables')": [
                        47
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.linear#SimplexTableauTest', 'testDropPhase1Objective')": [
                        47
                    ]
                }
            }
        }
    },
    "d2ba1651edfe40981d1fc163af89d168c5679c1f": {
        "authored_data": "2009 Sep 09 12:22",
        "commit.message": "applied Andrea's patch to improve test\nJIRA: MATH-286\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@812921 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "3c6d5dff6e6d5448b1dafe4447eb2ad5d6ebe222",
        "changes": {
            "src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java": {
                "new": {
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath286')": [
                        61,
                        63,
                        64,
                        65,
                        66,
                        67
                    ]
                }
            }
        }
    },
    "3c6d5dff6e6d5448b1dafe4447eb2ad5d6ebe222": {
        "authored_data": "2009 Sep 09 10:11",
        "commit.message": "MATH-292 TestUtils.assertRelativelyEquals() generates misleading error on failure\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@812871 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "aa91ffbe330de2586010ab91dc3bb18eef33974b",
        "changes": {
            "src/test/java/org/apache/commons/math/TestUtils.java": {
                "old": {
                    "('org.apache.commons.math#TestUtils', 'assertRelativelyEquals(String,double,double,double)')": [
                        172,
                        173
                    ]
                },
                "new": {
                    "('org.apache.commons.math#TestUtils', 'assertRelativelyEquals(String,double,double,double)')": [
                        172,
                        173
                    ]
                }
            }
        }
    },
    "aa91ffbe330de2586010ab91dc3bb18eef33974b": {
        "authored_data": "2009 Sep 09 08:48",
        "commit.message": "applied Benjamin's patch from 2009-09-08\nwarning: I had to update the expected matrix in SimplexTableauTest.testdiscardArtificialVariables\n\nJIRA: MATH-286\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@812831 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "e5a77a7651775ecaa0efe9b479698c0b6ec3d73a",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'doOptimize')": [
                        177
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'doOptimize')": [
                        177
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', None)": [
                        115,
                        116,
                        184,
                        239,
                        240,
                        241,
                        246,
                        247,
                        248,
                        249,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        301,
                        302,
                        397
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'createTableau(boolean)')": [
                        124,
                        130,
                        134,
                        137,
                        140,
                        141,
                        142,
                        145,
                        146,
                        157,
                        161,
                        162,
                        166,
                        170,
                        172,
                        178,
                        179
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'initialize')": [
                        242,
                        243,
                        244,
                        245
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'getBasicRow(int)')": [
                        267,
                        268
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'getBasicRowForSolution(int)')": [
                        276,
                        277
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'getBasicRow(int,boolean)')": [
                        287,
                        289,
                        290
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'discardArtificialVariables')": [
                        303,
                        304,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'getSolution')": [
                        348,
                        352
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'subtractRow(int,int,double)')": [
                        394,
                        395,
                        396
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', None)": [
                        115,
                        268,
                        269,
                        270
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'createTableau(boolean)')": [
                        123,
                        129,
                        133,
                        136,
                        139,
                        140,
                        141,
                        144,
                        145,
                        156,
                        160,
                        161,
                        165,
                        169,
                        171,
                        177,
                        178,
                        179
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'getBasicRow(int)')": [
                        255,
                        257
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'dropPhase1Objective')": [
                        271,
                        272,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'getSolution')": [
                        336,
                        340
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'subtractRow(int,int,double)')": [
                        382,
                        383
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath286')": [
                        51,
                        52,
                        53,
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath286')": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        61
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/linear/SimplexTableauTest.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#SimplexTableauTest', 'testdiscardArtificialVariables')": [
                        53,
                        54,
                        55,
                        56,
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.linear#SimplexTableauTest', 'testdiscardArtificialVariables')": [
                        53,
                        54,
                        55,
                        56,
                        58
                    ]
                }
            }
        }
    },
    "e5a77a7651775ecaa0efe9b479698c0b6ec3d73a": {
        "authored_data": "2009 Sep 08 08:40",
        "commit.message": "added Benjamin's patch from 2009-09-07\nJIRA: MATH-286\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@812390 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "53a9ee3979ff84349a9fe789aebe3ad2e7eb4d99",
        "changes": {
            "src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'getPivotRow(int,SimplexTableau)')": [
                        76,
                        78,
                        84,
                        86,
                        90
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', None)": [
                        92,
                        125,
                        126,
                        127,
                        128,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        156,
                        157,
                        158
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'doIteration(SimplexTableau)')": [
                        106
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'isPhase1Solved(SimplexTableau)')": [
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'isOptimal(SimplexTableau)')": [
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'solvePhase1(SimplexTableau)')": [
                        165,
                        166,
                        172
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'doOptimize')": [
                        184,
                        185,
                        190
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'getPivotRow(SimplexTableau,int)')": [
                        79,
                        80,
                        81,
                        88,
                        89,
                        90,
                        92,
                        93,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'doIteration(SimplexTableau)')": [
                        128
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'solvePhase1(SimplexTableau)')": [
                        153,
                        154,
                        160
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolver', 'doOptimize')": [
                        172,
                        175,
                        178,
                        179
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java": {
                "old": {
                    "(None, None)": [
                        32
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', None)": [
                        109,
                        186,
                        187,
                        188,
                        191,
                        192,
                        326
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'getNumVariables')": [
                        189,
                        190
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'getBasicRow(int)')": [
                        273
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', None)": [
                        109,
                        110,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'getBasicRow(int)')": [
                        267
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', 'isOptimal')": [
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/linear/SimplexSolverTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        25,
                        26
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath272')": [
                        45,
                        46,
                        47,
                        48
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath286')": [
                        53,
                        54,
                        55,
                        56,
                        57,
                        58
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath288')": [
                        73
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath290GEQ')": [
                        83,
                        84,
                        85
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testSimplexSolver')": [
                        108,
                        109,
                        110
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testSingleVariableAndConstraint')": [
                        121,
                        122
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testModelWithNoArtificialVars')": [
                        139,
                        140,
                        141
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMinimization')": [
                        154,
                        155,
                        156
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testSolutionWithNegativeDecisionVariable')": [
                        168,
                        169,
                        170
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testRestrictVariablesToNonNegative')": [
                        206,
                        207,
                        208,
                        209,
                        210,
                        211
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testEpsilon')": [
                        225,
                        226,
                        227,
                        228
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testTrivialModel')": [
                        239
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testLargeModel')": [
                        366
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'equationFromString(int,String)')": [
                        388,
                        394
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath272')": [
                        43,
                        44,
                        45,
                        46
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath286')": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', None)": [
                        58,
                        59,
                        60
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testDegeneracy')": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath288')": [
                        85
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMath290GEQ')": [
                        95,
                        96,
                        97
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testSimplexSolver')": [
                        120,
                        121,
                        122
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testSingleVariableAndConstraint')": [
                        133,
                        134
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testModelWithNoArtificialVars')": [
                        151,
                        152,
                        153
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testMinimization')": [
                        166,
                        167,
                        168
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testSolutionWithNegativeDecisionVariable')": [
                        180,
                        181,
                        182
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testRestrictVariablesToNonNegative')": [
                        218,
                        219,
                        220,
                        221,
                        222,
                        223
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testEpsilon')": [
                        237,
                        238,
                        239,
                        240
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testTrivialModel')": [
                        251
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'testLargeModel')": [
                        378
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexSolverTest', 'equationFromString(int,String)')": [
                        400,
                        406
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/linear/SimplexTableauTest.java": {
                "old": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableauTest', None)": [
                        28,
                        29
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableauTest', 'testSerial')": [
                        82
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableauTest', 'assertMatrixEquals(double,double)')": [
                        97,
                        99,
                        101
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        26
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableauTest', None)": [
                        28,
                        30,
                        46,
                        62,
                        80,
                        88
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableauTest', 'testSerial')": [
                        86
                    ],
                    "('org.apache.commons.math.optimization.linear#SimplexTableauTest', 'assertMatrixEquals(double,double)')": [
                        102,
                        104,
                        106
                    ]
                }
            }
        }
    },
    "53a9ee3979ff84349a9fe789aebe3ad2e7eb4d99": {
        "authored_data": "2009 Sep 07 14:08",
        "commit.message": "Clarify test failure messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@812147 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "896104717390af47c205942e42a3d3f48a26ef70",
        "changes": {
            "src/test/java/org/apache/commons/math/distribution/HypergeometricDistributionTest.java": {
                "old": {
                    "('org.apache.commons.math.distribution#HypergeometricDistributionTest', 'testHypergeometricDistributionProbabilities(int,int,int,double)')": [
                        176,
                        180,
                        184
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#HypergeometricDistributionTest', 'testHypergeometricDistributionProbabilities(int,int,int,double)')": [
                        176,
                        180,
                        184
                    ]
                }
            }
        }
    },
    "896104717390af47c205942e42a3d3f48a26ef70": {
        "authored_data": "2009 Sep 06 21:26",
        "commit.message": "Clarify parse test messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@811897 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "5a63bb398ca7fc3951b1c2340512e120ad72a4e2",
        "changes": {
            "src/test/java/org/apache/commons/math/linear/RealVectorFormatAbstractTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#RealVectorFormatAbstractTest', 'testForgottenPrefix')": [
                        369
                    ],
                    "('org.apache.commons.math.linear#RealVectorFormatAbstractTest', 'testForgottenSeparator')": [
                        375
                    ],
                    "('org.apache.commons.math.linear#RealVectorFormatAbstractTest', 'testForgottenSuffix')": [
                        381
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#RealVectorFormatAbstractTest', 'testForgottenPrefix')": [
                        369,
                        370
                    ],
                    "('org.apache.commons.math.linear#RealVectorFormatAbstractTest', 'testForgottenSeparator')": [
                        376,
                        377
                    ],
                    "('org.apache.commons.math.linear#RealVectorFormatAbstractTest', 'testForgottenSuffix')": [
                        383,
                        384
                    ]
                }
            }
        }
    },
    "5a63bb398ca7fc3951b1c2340512e120ad72a4e2": {
        "authored_data": "2009 Sep 06 16:27",
        "commit.message": "removed unnecessary parentheses\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@811833 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "f8254ebbd3ce543854e93539eb0a3375e8e406b6",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#LoessInterpolator', 'smooth(double,double)')": [
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.interpolation#LoessInterpolator', 'smooth(double,double)')": [
                        237,
                        238,
                        239,
                        240,
                        241
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/polynomials/PolynomialFunctionLagrangeForm.java": {
                "old": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeForm', 'computeCoefficients')": [
                        237,
                        247
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.polynomials#PolynomialFunctionLagrangeForm', 'computeCoefficients')": [
                        237,
                        247
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(UnivariateRealFunction,double,double,double,double,double,double)')": [
                        242
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#BrentSolver', 'solve(UnivariateRealFunction,double,double,double,double,double,double)')": [
                        242
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/LaguerreSolver.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        120,
                        121,
                        122
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(Complex,Complex)')": [
                        302,
                        303
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(UnivariateRealFunction,double,double,double)')": [
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128
                    ],
                    "('org.apache.commons.math.analysis.solvers#LaguerreSolver', 'solve(Complex,Complex)')": [
                        308,
                        309
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', 'isBracketing(double,double,UnivariateRealFunction)')": [
                        184
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverImpl', 'isBracketing(double,double,UnivariateRealFunction)')": [
                        184
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/complex/Complex.java": {
                "old": {
                    "('org.apache.commons.math.complex#Complex', 'abs')": [
                        120,
                        126
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#Complex', 'abs')": [
                        120,
                        126
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'isSquare')": [
                        647
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', 'isSquare')": [
                        647
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'isSquare')": [
                        639
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#AbstractRealMatrix', 'isSquare')": [
                        639
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getDeterminant')": [
                        951
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'isSquare')": [
                        963
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'getDeterminant')": [
                        951
                    ],
                    "('org.apache.commons.math.linear#BigMatrixImpl', 'isSquare')": [
                        963
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/events/EventState.java": {
                "old": {
                    "('org.apache.commons.math.ode.events#EventState', 'reinitializeBegin(double,double)')": [
                        152
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'evaluateStep(StepInterpolator)')": [
                        191
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'stepAccepted(double,double)')": [
                        291
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.events#EventState', 'reinitializeBegin(double,double)')": [
                        152
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'evaluateStep(StepInterpolator)')": [
                        191
                    ],
                    "('org.apache.commons.math.ode.events#EventState', 'stepAccepted(double,double)')": [
                        291
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdamsBashforthIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        194
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsBashforthIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        194
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdamsMoultonIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        212
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#AdamsMoultonIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        212
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#EmbeddedRungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        202
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#EmbeddedRungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        202
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        563
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        563
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaIntegrator', 'integrate(FirstOrderDifferentialEquations,double,double,double,double)')": [
                        103
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#StepNormalizer', 'handleStep(StepInterpolator,boolean)')": [
                        125
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.sampling#StepNormalizer', 'handleStep(StepInterpolator,boolean)')": [
                        125
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/MersenneTwister.java": {
                "old": {
                    "('org.apache.commons.math.random#MersenneTwister', 'next(int)')": [
                        244,
                        247
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#MersenneTwister', 'next(int)')": [
                        244,
                        247
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPoisson(double)')": [
                        433,
                        434,
                        435
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataImpl', 'nextPoisson(double)')": [
                        433,
                        434
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/Frequency.java": {
                "old": {
                    "('org.apache.commons.math.stat#Frequency', None)": [
                        560
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat#Frequency', None)": [
                        560
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/AbstractStorelessUnivariateStatistic.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#AbstractStorelessUnivariateStatistic', 'equals(Object)')": [
                        168,
                        169
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#AbstractStorelessUnivariateStatistic', 'equals(Object)')": [
                        168,
                        169
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/AggregateSummaryStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#AggregateSummaryStatistics', None)": [
                        96,
                        97,
                        121,
                        122,
                        123,
                        124,
                        125,
                        403,
                        404
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#AggregateSummaryStatistics', None)": [
                        96,
                        97,
                        121,
                        122,
                        123,
                        124,
                        125,
                        403,
                        404
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'getStandardDeviation')": [
                        211
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', 'getStandardDeviation')": [
                        211
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'equals(Object)')": [
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', 'equals(Object)')": [
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummaryValues.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#StatisticalSummaryValues', 'equals(Object)')": [
                        138,
                        139,
                        140,
                        141,
                        142,
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#StatisticalSummaryValues', 'equals(Object)')": [
                        138,
                        139,
                        140,
                        141,
                        142,
                        143
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#SummaryStatistics', 'getStandardDeviation')": [
                        224
                    ],
                    "('org.apache.commons.math.stat.descriptive#SummaryStatistics', 'equals(Object)')": [
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#SummaryStatistics', 'getStandardDeviation')": [
                        224
                    ],
                    "('org.apache.commons.math.stat.descriptive#SummaryStatistics', 'equals(Object)')": [
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/Kurtosis.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#Kurtosis', 'evaluate(double,int,int)')": [
                        178,
                        188
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#Kurtosis', 'evaluate(double,int,int)')": [
                        178,
                        188
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/Mean.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#Mean', 'evaluate(double,int,int)')": [
                        164
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#Mean', 'evaluate(double,int,int)')": [
                        164
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/Skewness.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#Skewness', 'evaluate(double,int,int)')": [
                        167,
                        168,
                        170,
                        171,
                        175,
                        177
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#Skewness', 'evaluate(double,int,int)')": [
                        167,
                        168,
                        169,
                        171,
                        175,
                        176,
                        178
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/summary/Sum.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.summary#Sum', 'evaluate(double,double,int,int)')": [
                        162
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.summary#Sum', 'evaluate(double,double,int,int)')": [
                        162
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java": {
                "old": {
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquare(double,long)')": [
                        90,
                        93,
                        96
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTest(double,long,double)')": [
                        143
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTest(long,double)')": [
                        211
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareDataSetsComparison(long,long)')": [
                        259
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTestDataSetsComparison(long,long,double)')": [
                        318
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquare(double,long)')": [
                        92,
                        95
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTest(double,long,double)')": [
                        142
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTest(long,double)')": [
                        210
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareDataSetsComparison(long,long)')": [
                        258
                    ],
                    "('org.apache.commons.math.stat.inference#ChiSquareTestImpl', 'chiSquareTestDataSetsComparison(long,long,double)')": [
                        317
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/inference/OneWayAnovaImpl.java": {
                "old": {
                    "('org.apache.commons.math.stat.inference#OneWayAnovaImpl', 'anovaTest(Collection,double)')": [
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.inference#OneWayAnovaImpl', 'anovaTest(Collection,double)')": [
                        108
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/inference/TTestImpl.java": {
                "old": {
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'pairedTTest(double,double,double)')": [
                        163
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(double,double,double)')": [
                        447,
                        672
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(double,StatisticalSummary,double)')": [
                        525
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticTTest(double,double,double)')": [
                        730
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(StatisticalSummary,StatisticalSummary,double)')": [
                        877
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'pairedTTest(double,double,double)')": [
                        163
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(double,double,double)')": [
                        447,
                        672
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(double,StatisticalSummary,double)')": [
                        525
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'homoscedasticTTest(double,double,double)')": [
                        730
                    ],
                    "('org.apache.commons.math.stat.inference#TTestImpl', 'tTest(StatisticalSummary,StatisticalSummary,double)')": [
                        877
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/FastFourierTransformer.java": {
                "old": {
                    "('org.apache.commons.math.transform#FastFourierTransformer', None)": [
                        843,
                        917,
                        918
                    ]
                },
                "new": {
                    "('org.apache.commons.math.transform#FastFourierTransformer', None)": [
                        843,
                        917
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', 'binomialCoefficient(int,int)')": [
                        230
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'equals(double,double)')": [
                        405
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'gcd(int,int)')": [
                        617
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtils', 'binomialCoefficient(int,int)')": [
                        230
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'equals(double,double)')": [
                        405
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'gcd(int,int)')": [
                        617
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getInternalLength')": [
                        597
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getNumElements')": [
                        607
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getValues')": [
                        624
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getInternalValues')": [
                        640
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getInternalLength')": [
                        597
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getNumElements')": [
                        607
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getValues')": [
                        624
                    ],
                    "('org.apache.commons.math.util#ResizableDoubleArray', 'getInternalValues')": [
                        640
                    ]
                }
            }
        }
    },
    "f8254ebbd3ce543854e93539eb0a3375e8e406b6": {
        "authored_data": "2009 Sep 06 15:32",
        "commit.message": "use standard declaration order rules\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@811827 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "54c0e73219f22eba7bac1c1f7261576564b34f16",
        "changes": {
            "src/main/java/org/apache/commons/math/DimensionMismatchException.java": {
                "old": {
                    "('org.apache.commons.math#DimensionMismatchException', None)": [
                        35,
                        57,
                        58,
                        59,
                        60,
                        61
                    ],
                    "(None, None)": [
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.math#DimensionMismatchException', None)": [
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        41
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/MathException.java": {
                "old": {
                    "('org.apache.commons.math#MathException', None)": [
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        86,
                        87,
                        88
                    ],
                    "('org.apache.commons.math#MathException', 'translate(String,Locale)')": [
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73
                    ],
                    "('org.apache.commons.math#MathException', 'buildMessage(Locale,String,Object)')": [
                        84,
                        85
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MathException', None)": [
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135
                    ],
                    "('org.apache.commons.math#MathException', 'translate(String,Locale)')": [
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125
                    ],
                    "('org.apache.commons.math#MathException', 'buildMessage(Locale,String,Object)')": [
                        136,
                        137
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/MathRuntimeException.java": {
                "old": {
                    "('org.apache.commons.math#MathRuntimeException', None)": [
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MathRuntimeException', None)": [
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/MessagesResources_fr.java": {
                "old": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        43
                    ],
                    "('org.apache.commons.math#MessagesResources_fr', 'getContents')": [
                        41,
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.math#MessagesResources_fr', None)": [
                        842,
                        843,
                        844,
                        845,
                        846,
                        847,
                        848,
                        849,
                        850,
                        851,
                        852
                    ],
                    "('org.apache.commons.math#MessagesResources_fr', 'getContents')": [
                        853,
                        854
                    ],
                    "(None, None)": [
                        855,
                        856
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/LoessInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.analysis.interpolation#LoessInterpolator', None)": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.interpolation#LoessInterpolator', None)": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java": {
                "old": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', None)": [
                        236,
                        237,
                        238,
                        239,
                        240,
                        242,
                        243
                    ],
                    "(None, None)": [
                        244,
                        245
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.solvers#UnivariateRealSolverUtils', None)": [
                        232,
                        238
                    ],
                    "(None, None)": [
                        239,
                        240
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/complex/Complex.java": {
                "old": {
                    "('org.apache.commons.math.complex#Complex', None)": [
                        48,
                        49,
                        50,
                        68,
                        69,
                        70,
                        73,
                        74,
                        75,
                        78,
                        79,
                        80,
                        83,
                        84,
                        85
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#Complex', None)": [
                        65,
                        66,
                        67,
                        68,
                        71,
                        74,
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/complex/ComplexField.java": {
                "old": {
                    "('org.apache.commons.math.complex#ComplexField', None)": [
                        64,
                        65,
                        66,
                        67,
                        68,
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.math.complex#ComplexField', None)": [
                        60,
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/estimation/AbstractEstimator.java": {
                "old": {
                    "('org.apache.commons.math.estimation#AbstractEstimator', None)": [
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312
                    ],
                    "(None, None)": [
                        313
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#AbstractEstimator', None)": [
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/estimation/EstimatedParameter.java": {
                "old": {
                    "('org.apache.commons.math.estimation#EstimatedParameter', None)": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        77,
                        78,
                        79,
                        82,
                        84,
                        85,
                        86,
                        89,
                        91,
                        92,
                        93,
                        96,
                        98,
                        99,
                        100,
                        101,
                        104,
                        106,
                        107,
                        110,
                        112,
                        113,
                        115,
                        116,
                        118,
                        119,
                        120,
                        121,
                        123,
                        124
                    ],
                    "('org.apache.commons.math.estimation#EstimatedParameter', 'setEstimate(double)')": [
                        80,
                        81
                    ],
                    "('org.apache.commons.math.estimation#EstimatedParameter', 'getEstimate')": [
                        87,
                        88
                    ],
                    "('org.apache.commons.math.estimation#EstimatedParameter', 'getName')": [
                        94,
                        95
                    ],
                    "('org.apache.commons.math.estimation#EstimatedParameter', 'setBound(boolean)')": [
                        102,
                        103
                    ],
                    "('org.apache.commons.math.estimation#EstimatedParameter', 'isBound')": [
                        108,
                        109
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#EstimatedParameter', None)": [
                        40,
                        41,
                        43,
                        44,
                        46,
                        47,
                        49,
                        50,
                        51,
                        52,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        91,
                        92,
                        93,
                        96,
                        98,
                        99,
                        100,
                        103,
                        105,
                        106,
                        107,
                        110,
                        112,
                        113,
                        114,
                        115,
                        118,
                        120,
                        121
                    ],
                    "('org.apache.commons.math.estimation#EstimatedParameter', 'setEstimate(double)')": [
                        94,
                        95
                    ],
                    "('org.apache.commons.math.estimation#EstimatedParameter', 'getEstimate')": [
                        101,
                        102
                    ],
                    "('org.apache.commons.math.estimation#EstimatedParameter', 'getName')": [
                        108,
                        109
                    ],
                    "('org.apache.commons.math.estimation#EstimatedParameter', 'setBound(boolean)')": [
                        116,
                        117
                    ],
                    "('org.apache.commons.math.estimation#EstimatedParameter', 'isBound')": [
                        122,
                        123
                    ],
                    "(None, None)": [
                        124
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/estimation/LevenbergMarquardtEstimator.java": {
                "old": {
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', None)": [
                        837,
                        838,
                        839,
                        840,
                        841,
                        842,
                        843,
                        844,
                        845,
                        846,
                        847,
                        848,
                        849,
                        850,
                        851,
                        852,
                        853,
                        854,
                        855,
                        856,
                        857,
                        858,
                        859,
                        860,
                        861,
                        862,
                        863,
                        864,
                        865,
                        866,
                        867,
                        868,
                        869,
                        870,
                        871,
                        872,
                        873,
                        874,
                        875
                    ],
                    "(None, None)": [
                        876
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#LevenbergMarquardtEstimator', None)": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/estimation/SimpleEstimationProblem.java": {
                "old": {
                    "('org.apache.commons.math.estimation#SimpleEstimationProblem', None)": [
                        105,
                        106,
                        107,
                        108,
                        109
                    ],
                    "(None, None)": [
                        110
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#SimpleEstimationProblem', None)": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        51
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/estimation/WeightedMeasurement.java": {
                "old": {
                    "('org.apache.commons.math.estimation#WeightedMeasurement', None)": [
                        59,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170
                    ],
                    "(None, None)": [
                        171
                    ]
                },
                "new": {
                    "('org.apache.commons.math.estimation#WeightedMeasurement', None)": [
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/BigFraction.java": {
                "old": {
                    "('org.apache.commons.math.fraction#BigFraction', None)": [
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        118,
                        119,
                        120,
                        121
                    ],
                    "('org.apache.commons.math.fraction#BigFraction', 'getReducedFraction(int,int)')": [
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#BigFraction', None)": [
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        442,
                        443,
                        444,
                        445
                    ],
                    "('org.apache.commons.math.fraction#BigFraction', 'getReducedFraction(int,int)')": [
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/BigFractionField.java": {
                "old": {
                    "('org.apache.commons.math.fraction#BigFractionField', None)": [
                        64,
                        65,
                        66,
                        67,
                        68,
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#BigFractionField', None)": [
                        60,
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/fraction/FractionField.java": {
                "old": {
                    "('org.apache.commons.math.fraction#FractionField', None)": [
                        64,
                        65,
                        66,
                        67,
                        68,
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#FractionField', None)": [
                        60,
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java": {
                "old": {
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', None)": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        56,
                        57
                    ],
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', 'setRandomGenerator(RandomGenerator)')": [
                        45,
                        46
                    ],
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', 'getRandomGenerator')": [
                        54,
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', None)": [
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92
                    ],
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', 'setRandomGenerator(RandomGenerator)')": [
                        84,
                        85
                    ],
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', 'getRandomGenerator')": [
                        93,
                        94
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/CardanEulerSingularityException.java": {
                "old": {
                    "('org.apache.commons.math.geometry#CardanEulerSingularityException', None)": [
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        41,
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry#CardanEulerSingularityException', None)": [
                        31,
                        32,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41
                    ],
                    "(None, None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/NotARotationMatrixException.java": {
                "old": {
                    "('org.apache.commons.math.geometry#NotARotationMatrixException', None)": [
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        43,
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry#NotARotationMatrixException', None)": [
                        33,
                        34,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43
                    ],
                    "(None, None)": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/geometry/RotationOrder.java": {
                "old": {
                    "('org.apache.commons.math.geometry#RotationOrder', None)": [
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        50,
                        51,
                        52,
                        53,
                        56,
                        58,
                        59,
                        60,
                        63,
                        65,
                        66,
                        67,
                        70,
                        72,
                        73,
                        74,
                        77,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        163,
                        164,
                        166,
                        167,
                        169,
                        170,
                        172,
                        173
                    ],
                    "('org.apache.commons.math.geometry#RotationOrder', 'toString')": [
                        54,
                        55
                    ],
                    "('org.apache.commons.math.geometry#RotationOrder', 'getA1')": [
                        61,
                        62
                    ],
                    "('org.apache.commons.math.geometry#RotationOrder', 'getA2')": [
                        68,
                        69
                    ],
                    "('org.apache.commons.math.geometry#RotationOrder', 'getA3')": [
                        75,
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.math.geometry#RotationOrder', None)": [
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        118,
                        119,
                        121,
                        122,
                        124,
                        125,
                        127,
                        128,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        146,
                        147,
                        148,
                        149,
                        152,
                        154,
                        155,
                        156,
                        159,
                        161,
                        162,
                        163,
                        166,
                        168,
                        169,
                        170
                    ],
                    "('org.apache.commons.math.geometry#RotationOrder', 'toString')": [
                        150,
                        151
                    ],
                    "('org.apache.commons.math.geometry#RotationOrder', 'getA1')": [
                        157,
                        158
                    ],
                    "('org.apache.commons.math.geometry#RotationOrder', 'getA2')": [
                        164,
                        165
                    ],
                    "('org.apache.commons.math.geometry#RotationOrder', 'getA3')": [
                        171,
                        172
                    ],
                    "(None, None)": [
                        173
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/AbstractFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', None)": [
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#AbstractFieldMatrix', None)": [
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/ArrayFieldVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#ArrayFieldVector', None)": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        51
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'buildArray(int)')": [
                        49,
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#ArrayFieldVector', None)": [
                        38,
                        39,
                        40,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226
                    ],
                    "('org.apache.commons.math.linear#ArrayFieldVector', 'buildArray(int)')": [
                        227,
                        228
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/BigMatrixImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', None)": [
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BigMatrixImpl', None)": [
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/BlockFieldMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#BlockFieldMatrix', None)": [
                        70,
                        71,
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BlockFieldMatrix', None)": [
                        68,
                        69,
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/BlockRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#BlockRealMatrix', None)": [
                        68,
                        69,
                        70
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#BlockRealMatrix', None)": [
                        66,
                        67,
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/LUDecompositionImpl.java": {
                "old": {
                    "('org.apache.commons.math.linear#LUDecompositionImpl', None)": [
                        56,
                        57,
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#LUDecompositionImpl', None)": [
                        36,
                        37,
                        38
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java": {
                "old": {
                    "('org.apache.commons.math.linear#OpenMapRealVector', None)": [
                        34,
                        35,
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#OpenMapRealVector', None)": [
                        32,
                        33,
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/AbstractIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#AbstractIntegrator', None)": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#AbstractIntegrator', None)": [
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/ContinuousOutputModel.java": {
                "old": {
                    "('org.apache.commons.math.ode#ContinuousOutputModel', None)": [
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374
                    ],
                    "(None, None)": [
                        375
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#ContinuousOutputModel', None)": [
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/FirstOrderConverter.java": {
                "old": {
                    "('org.apache.commons.math.ode#FirstOrderConverter', None)": [
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115
                    ],
                    "(None, None)": [
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#FirstOrderConverter', None)": [
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/MultistepIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode#MultistepIntegrator', None)": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode#MultistepIntegrator', None)": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/AdaptiveStepsizeIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', None)": [
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332
                    ],
                    "(None, None)": [
                        333
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#AdaptiveStepsizeIntegrator', None)": [
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince54StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolator', None)": [
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212
                    ],
                    "(None, None)": [
                        213
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince54StepInterpolator', None)": [
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/DormandPrince853StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', None)": [
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465,
                        466,
                        467,
                        468,
                        469,
                        470,
                        471,
                        472,
                        473,
                        474,
                        475,
                        476
                    ],
                    "(None, None)": [
                        477
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#DormandPrince853StepInterpolator', None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#EmbeddedRungeKuttaIntegrator', None)": [
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400
                    ],
                    "(None, None)": [
                        401
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#EmbeddedRungeKuttaIntegrator', None)": [
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/GillStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolator', None)": [
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122
                    ],
                    "(None, None)": [
                        123
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#GillStepInterpolator', None)": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', None)": [
                        96,
                        97,
                        944,
                        945,
                        946,
                        947,
                        948,
                        949,
                        950,
                        951,
                        952,
                        953,
                        954,
                        955,
                        956,
                        957,
                        958,
                        959,
                        960,
                        961,
                        962,
                        963,
                        964,
                        965,
                        966,
                        967,
                        968,
                        969,
                        970,
                        971,
                        972,
                        973,
                        974,
                        975,
                        976,
                        977,
                        978,
                        979,
                        980,
                        981,
                        982,
                        983,
                        984,
                        985,
                        986,
                        987,
                        988,
                        989,
                        990,
                        991,
                        992,
                        993,
                        994,
                        995,
                        996,
                        997,
                        998,
                        999,
                        1000,
                        1001
                    ],
                    "(None, None)": [
                        1002
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerIntegrator', None)": [
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/GraggBulirschStoerStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', None)": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        399,
                        400
                    ],
                    "(None, None)": [
                        401
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#GraggBulirschStoerStepInterpolator', None)": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolator', None)": [
                        100,
                        101
                    ],
                    "(None, None)": [
                        102
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#HighamHall54StepInterpolator', None)": [
                        35,
                        36,
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/MidpointStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolator', None)": [
                        97,
                        98
                    ],
                    "(None, None)": [
                        99
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#MidpointStepInterpolator', None)": [
                        46,
                        47,
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaIntegrator', None)": [
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216
                    ],
                    "(None, None)": [
                        217
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaIntegrator', None)": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaStepInterpolator', None)": [
                        177,
                        178,
                        179,
                        180,
                        181
                    ],
                    "(None, None)": [
                        182
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#RungeKuttaStepInterpolator', None)": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/nonstiff/ThreeEighthesStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolator', None)": [
                        113,
                        114
                    ],
                    "(None, None)": [
                        115
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.nonstiff#ThreeEighthesStepInterpolator', None)": [
                        51,
                        52,
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/DummyStepHandler.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepHandler', None)": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        47,
                        48,
                        49,
                        52,
                        54,
                        55,
                        56,
                        57,
                        60,
                        62,
                        63,
                        64,
                        65,
                        67,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        82,
                        84,
                        85
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepHandler', 'getInstance')": [
                        50,
                        51
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepHandler', 'requiresDenseOutput')": [
                        58,
                        59
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepHandler', 'reset')": [
                        66
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepHandler', 'handleStep(StepInterpolator,boolean)')": [
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.sampling#DummyStepHandler', None)": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        46,
                        47,
                        48,
                        51,
                        53,
                        54,
                        55,
                        56,
                        59,
                        61,
                        62,
                        63,
                        64,
                        66,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        81,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepHandler', 'getInstance')": [
                        49,
                        50
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepHandler', 'requiresDenseOutput')": [
                        57,
                        58
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepHandler', 'reset')": [
                        65
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepHandler', 'handleStep(StepInterpolator,boolean)')": [
                        80
                    ],
                    "('org.apache.commons.math.ode.sampling#DummyStepHandler', 'readResolve')": [
                        96,
                        97,
                        98
                    ],
                    "(None, None)": [
                        99
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolator', None)": [
                        126,
                        127
                    ],
                    "(None, None)": [
                        128
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.sampling#DummyStepInterpolator', None)": [
                        42,
                        43,
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/NordsieckStepInterpolator.java": {
                "old": {
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolator', None)": [
                        61,
                        62,
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.math.ode.sampling#NordsieckStepInterpolator', None)": [
                        45,
                        46,
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', None)": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', None)": [
                        60,
                        61,
                        62,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', None)": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#AbstractLinearOptimizer', None)": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.linear#AbstractLinearOptimizer', None)": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', None)": [
                        78,
                        81,
                        84,
                        87,
                        90
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.linear#SimplexTableau', None)": [
                        78,
                        81,
                        84,
                        87,
                        90
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/CorrelatedRandomVectorGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#CorrelatedRandomVectorGenerator', None)": [
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301
                    ],
                    "(None, None)": [
                        302
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#CorrelatedRandomVectorGenerator', None)": [
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/GaussianRandomGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#GaussianRandomGenerator', None)": [
                        33,
                        44,
                        45
                    ],
                    "(None, None)": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#GaussianRandomGenerator', None)": [
                        30,
                        31,
                        32,
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/UncorrelatedRandomVectorGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#UncorrelatedRandomVectorGenerator', None)": [
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93
                    ],
                    "(None, None)": [
                        94
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#UncorrelatedRandomVectorGenerator', None)": [
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/UniformRandomGenerator.java": {
                "old": {
                    "('org.apache.commons.math.random#UniformRandomGenerator', None)": [
                        53,
                        54,
                        55,
                        56,
                        57
                    ],
                    "(None, None)": [
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#UniformRandomGenerator', None)": [
                        37,
                        38,
                        39,
                        40,
                        41,
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/ValueServer.java": {
                "old": {
                    "('org.apache.commons.math.random#ValueServer', None)": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        75,
                        78,
                        81,
                        84,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381
                    ],
                    "(None, None)": [
                        382
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#ValueServer', None)": [
                        49,
                        50,
                        53,
                        56,
                        59,
                        62,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/special/Gamma.java": {
                "old": {
                    "('org.apache.commons.math.special#Gamma', None)": [
                        265,
                        266,
                        267,
                        268,
                        269,
                        270
                    ]
                },
                "new": {
                    "('org.apache.commons.math.special#Gamma', None)": [
                        63,
                        64,
                        65,
                        66,
                        67,
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/DescriptiveStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', None)": [
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#DescriptiveStatistics', None)": [
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/MultivariateSummaryStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', None)": [
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#MultivariateSummaryStatistics', None)": [
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive#SummaryStatistics', None)": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive#SummaryStatistics', None)": [
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java": {
                "old": {
                    "('org.apache.commons.math.stat.descriptive.moment#GeometricMean', None)": [
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.descriptive.moment#GeometricMean', None)": [
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/inference/TestUtils.java": {
                "old": {
                    "('org.apache.commons.math.stat.inference#TestUtils', None)": [
                        31,
                        32,
                        33,
                        34,
                        35,
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.inference#TestUtils', None)": [
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java": {
                "old": {
                    "('org.apache.commons.math.stat.ranking#NaturalRanking', None)": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.ranking#NaturalRanking', None)": [
                        72,
                        73,
                        74,
                        75,
                        76,
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/BigReal.java": {
                "old": {
                    "('org.apache.commons.math.util#BigReal', None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#BigReal', None)": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/BigRealField.java": {
                "old": {
                    "('org.apache.commons.math.util#BigRealField', None)": [
                        64,
                        65,
                        66,
                        67,
                        68,
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#BigRealField', None)": [
                        60,
                        68
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        471,
                        472,
                        473,
                        474,
                        475,
                        476,
                        477
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtils', None)": [
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java": {
                "old": {
                    "('org.apache.commons.math.util#OpenIntToDoubleHashMap', None)": [
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#OpenIntToDoubleHashMap', None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/OpenIntToFieldHashMap.java": {
                "old": {
                    "('org.apache.commons.math.util#OpenIntToFieldHashMap', None)": [
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#OpenIntToFieldHashMap', None)": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/ResizableDoubleArray.java": {
                "old": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', None)": [
                        78,
                        79,
                        80,
                        81,
                        82,
                        83
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#ResizableDoubleArray', None)": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ]
                }
            }
        }
    },
    "54c0e73219f22eba7bac1c1f7261576564b34f16": {
        "authored_data": "2009 Sep 06 09:36",
        "commit.message": "tighten rules for public/private/abstract/final/... modifiers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@811786 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Luc Maisonobe",
        "pcid": "d485dca2ce8f903276200bf37ac1bbb001a4874e",
        "changes": {
            "src/main/java/org/apache/commons/math/ConvergingAlgorithm.java": {
                "old": {
                    "(None, None)": [
                        44,
                        51,
                        60,
                        77,
                        84,
                        91,
                        107,
                        113,
                        119,
                        134
                    ]
                },
                "new": {
                    "(None, None)": [
                        44,
                        51,
                        60,
                        77,
                        84,
                        91,
                        107,
                        113,
                        119,
                        134
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateMatrixFunction.java": {
                "old": {
                    "(None, None)": [
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateRealFunction.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/DifferentiableUnivariateVectorialFunction.java": {
                "old": {
                    "(None, None)": [
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/UnivariateMatrixFunction.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/UnivariateRealFunction.java": {
                "old": {
                    "(None, None)": [
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/UnivariateVectorialFunction.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        35
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/analysis/interpolation/UnivariateRealInterpolator.java": {
                "old": {
                    "(None, None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/AbstractIntegerDistribution.java": {
                "old": {
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(int)')": [
                        105
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#AbstractIntegerDistribution', 'cumulativeProbability(int)')": [
                        105
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/HypergeometricDistribution.java": {
                "old": {
                    "(None, None)": [
                        38,
                        44,
                        50,
                        56,
                        62,
                        68
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        39,
                        45,
                        51,
                        57,
                        63,
                        69,
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/PoissonDistribution.java": {
                "old": {
                    "(None, None)": [
                        41,
                        51,
                        60
                    ]
                },
                "new": {
                    "(None, None)": [
                        41,
                        51,
                        60,
                        61
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/distribution/ZipfDistribution.java": {
                "old": {
                    "(None, None)": [
                        38,
                        48,
                        55,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        33,
                        39,
                        49,
                        56,
                        66,
                        67
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/estimation/EstimationProblem.java": {
                "old": {
                    "(None, None)": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        55,
                        56,
                        57,
                        58,
                        59,
                        61,
                        62,
                        63,
                        64,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        50,
                        51,
                        52,
                        53,
                        54,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/estimation/Estimator.java": {
                "old": {
                    "(None, None)": [
                        56,
                        57,
                        71,
                        80,
                        81,
                        90,
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        56,
                        70,
                        79,
                        88
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/genetics/Fitness.java": {
                "old": {
                    "(None, None)": [
                        32
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        33,
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/genetics/GeneticAlgorithm.java": {
                "old": {
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', 'setRandomGenerator(RandomGenerator)')": [
                        45
                    ],
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', 'getRandomGenerator')": [
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', 'setRandomGenerator(RandomGenerator)')": [
                        45
                    ],
                    "('org.apache.commons.math.genetics#GeneticAlgorithm', 'getRandomGenerator')": [
                        54
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/genetics/PermutationChromosome.java": {
                "old": {
                    "(None, None)": [
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/BigMatrix.java": {
                "old": {
                    "(None, None)": [
                        94
                    ]
                },
                "new": {
                    "(None, None)": [
                        94
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/FieldMatrix.java": {
                "old": {
                    "(None, None)": [
                        111
                    ]
                },
                "new": {
                    "(None, None)": [
                        111
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/FieldVector.java": {
                "old": {
                    "(None, None)": [
                        175,
                        176,
                        184,
                        185,
                        193,
                        194,
                        202,
                        203
                    ]
                },
                "new": {
                    "(None, None)": [
                        175,
                        183,
                        191,
                        199
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealMatrix.java": {
                "old": {
                    "(None, None)": [
                        101
                    ]
                },
                "new": {
                    "(None, None)": [
                        101
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/linear/RealVector.java": {
                "old": {
                    "(None, None)": [
                        466,
                        467,
                        475,
                        476,
                        484,
                        485,
                        493,
                        494,
                        793,
                        801
                    ]
                },
                "new": {
                    "(None, None)": [
                        466,
                        474,
                        482,
                        490,
                        789,
                        797
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/FirstOrderDifferentialEquations.java": {
                "old": {
                    "(None, None)": [
                        53,
                        62,
                        63
                    ]
                },
                "new": {
                    "(None, None)": [
                        53,
                        62
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/FirstOrderIntegrator.java": {
                "old": {
                    "(None, None)": [
                        56,
                        57,
                        58,
                        59
                    ]
                },
                "new": {
                    "(None, None)": [
                        56,
                        57,
                        58
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/SecondOrderDifferentialEquations.java": {
                "old": {
                    "(None, None)": [
                        49,
                        50,
                        51,
                        52,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66
                    ]
                },
                "new": {
                    "(None, None)": [
                        49,
                        50,
                        51,
                        52,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/SecondOrderIntegrator.java": {
                "old": {
                    "(None, None)": [
                        53,
                        54,
                        55,
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        53,
                        54,
                        55,
                        56
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/events/EventHandler.java": {
                "old": {
                    "(None, None)": [
                        57,
                        66,
                        76,
                        83,
                        99,
                        139,
                        157
                    ]
                },
                "new": {
                    "(None, None)": [
                        57,
                        66,
                        76,
                        83,
                        99,
                        139,
                        157
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/FixedStepHandler.java": {
                "old": {
                    "(None, None)": [
                        60,
                        61
                    ]
                },
                "new": {
                    "(None, None)": [
                        60
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/StepHandler.java": {
                "old": {
                    "(None, None)": [
                        52,
                        58,
                        76,
                        77
                    ]
                },
                "new": {
                    "(None, None)": [
                        52,
                        58,
                        76
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/ode/sampling/StepInterpolator.java": {
                "old": {
                    "(None, None)": [
                        49,
                        50,
                        56,
                        62,
                        70,
                        84,
                        96,
                        97,
                        110,
                        111,
                        122,
                        133
                    ]
                },
                "new": {
                    "(None, None)": [
                        49,
                        55,
                        61,
                        69,
                        83,
                        95,
                        108,
                        119,
                        130
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/fitting/ParametricRealFunction.java": {
                "old": {
                    "(None, None)": [
                        37,
                        47
                    ]
                },
                "new": {
                    "(None, None)": [
                        37,
                        47
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'doOptimize')": [
                        357
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#AbstractLeastSquaresOptimizer', 'doOptimize')": [
                        357
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/general/AbstractScalarDifferentiableOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'doOptimize')": [
                        198
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.general#AbstractScalarDifferentiableOptimizer', 'doOptimize')": [
                        198
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java": {
                "old": {
                    "('org.apache.commons.math.optimization.linear#AbstractLinearOptimizer', 'doOptimize')": [
                        115
                    ]
                },
                "new": {
                    "('org.apache.commons.math.optimization.linear#AbstractLinearOptimizer', 'doOptimize')": [
                        115
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/NormalizedRandomGenerator.java": {
                "old": {
                    "(None, None)": [
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/RandomVectorGenerator.java": {
                "old": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        33
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        33
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/StatisticalMultivariateSummary.java": {
                "old": {
                    "(None, None)": [
                        32,
                        40,
                        46,
                        54,
                        62,
                        70,
                        75,
                        83,
                        91,
                        99,
                        107
                    ]
                },
                "new": {
                    "(None, None)": [
                        28,
                        33,
                        34,
                        42,
                        43,
                        49,
                        50,
                        58,
                        59,
                        67,
                        68,
                        76,
                        77,
                        82,
                        83,
                        91,
                        92,
                        100,
                        101,
                        109,
                        110,
                        118,
                        119
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/descriptive/StatisticalSummary.java": {
                "old": {
                    "(None, None)": [
                        30,
                        36,
                        42,
                        47,
                        52,
                        57,
                        62
                    ]
                },
                "new": {
                    "(None, None)": [
                        25,
                        31,
                        37,
                        43,
                        48,
                        53,
                        58,
                        63,
                        64
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/inference/OneWayAnova.java": {
                "old": {
                    "(None, None)": [
                        53,
                        74,
                        98,
                        99
                    ]
                },
                "new": {
                    "(None, None)": [
                        35,
                        54,
                        75,
                        99,
                        100
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/inference/TTest.java": {
                "old": {
                    "(None, None)": [
                        68,
                        103,
                        137,
                        157,
                        175,
                        210,
                        240,
                        273,
                        312,
                        342,
                        379,
                        409,
                        447,
                        488,
                        523,
                        577,
                        633,
                        672,
                        709,
                        766
                    ]
                },
                "new": {
                    "(None, None)": [
                        68,
                        103,
                        137,
                        157,
                        175,
                        210,
                        240,
                        273,
                        312,
                        342,
                        379,
                        409,
                        447,
                        488,
                        523,
                        577,
                        633,
                        672,
                        709,
                        766
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/stat/ranking/NaturalRanking.java": {
                "old": {
                    "('org.apache.commons.math.stat.ranking#NaturalRanking', None)": [
                        421,
                        424
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.ranking#NaturalRanking', None)": [
                        421,
                        424
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/transform/RealTransformer.java": {
                "old": {
                    "(None, None)": [
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        65
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MathUtils.java": {
                "old": {
                    "('org.apache.commons.math.util#MathUtils', 'distance1(double,double)')": [
                        1568
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'distance1(int,int)')": [
                        1583
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'distance(double,double)')": [
                        1598
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'distance(int,int)')": [
                        1614
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'distanceInf(double,double)')": [
                        1630
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'distanceInf(int,int)')": [
                        1645
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathUtils', 'distance1(double,double)')": [
                        1568
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'distance1(int,int)')": [
                        1583
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'distance(double,double)')": [
                        1598
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'distance(int,int)')": [
                        1614
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'distanceInf(double,double)')": [
                        1630
                    ],
                    "('org.apache.commons.math.util#MathUtils', 'distanceInf(int,int)')": [
                        1645
                    ]
                }
            }
        }
    }
}