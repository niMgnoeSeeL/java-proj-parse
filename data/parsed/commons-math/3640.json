{
    "0e8d99d456732f184e61089760ccb9eeb6afd692": {
        "authored_data": "2011 Nov 05 22:40",
        "commit.message": "Space police.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1198102 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "0755c5d8e8fc7d401db8d277ca9034a1329979f7",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java": {
                "old": {
                    "(None, None)": [
                        62,
                        66,
                        69,
                        74,
                        78,
                        84
                    ]
                },
                "new": {
                    "(None, None)": [
                        62,
                        66,
                        69,
                        74,
                        78,
                        84
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        847
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        847
                    ]
                }
            }
        }
    },
    "0755c5d8e8fc7d401db8d277ca9034a1329979f7": {
        "authored_data": "2011 Nov 05 22:27",
        "commit.message": "Javadoc improvements.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1198101 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "3fe903b7e2375b05038c5faf9a1c9ea1e5562011",
        "changes": {
            "src/main/java/org/apache/commons/math/analysis/solvers/BaseUnivariateRealSolver.java": {
                "old": {
                    "(None, None)": [
                        40,
                        42
                    ]
                },
                "new": {
                    "(None, None)": [
                        40,
                        42,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        66,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        78,
                        80,
                        81,
                        82,
                        83,
                        84
                    ]
                }
            }
        }
    },
    "3fe903b7e2375b05038c5faf9a1c9ea1e5562011": {
        "authored_data": "2011 Nov 05 06:48",
        "commit.message": "Changed default seeding for MersenneTwister, WELL generators to add system identity hash code.  JIRA: MATH-701.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1197896 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "5ba1f1c695e27d3d97ba713a4eb29bbcaa076da5",
        "changes": {
            "src/main/java/org/apache/commons/math/random/AbstractWell.java": {
                "old": {
                    "('org.apache.commons.math.random#AbstractWell', None)": [
                        64,
                        65,
                        72,
                        148,
                        149
                    ],
                    "('org.apache.commons.math.random#AbstractWell', 'setSeed(int)')": [
                        155
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#AbstractWell', None)": [
                        64,
                        65,
                        72,
                        148,
                        149,
                        150
                    ],
                    "('org.apache.commons.math.random#AbstractWell', 'setSeed(int)')": [
                        156
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/random/MersenneTwister.java": {
                "old": {
                    "('org.apache.commons.math.random#MersenneTwister', None)": [
                        103,
                        104,
                        108,
                        159
                    ],
                    "('org.apache.commons.math.random#MersenneTwister', 'setSeed(int)')": [
                        165
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#MersenneTwister', None)": [
                        103,
                        104,
                        108,
                        159,
                        160
                    ],
                    "('org.apache.commons.math.random#MersenneTwister', 'setSeed(int)')": [
                        166
                    ]
                }
            }
        }
    },
    "5ba1f1c695e27d3d97ba713a4eb29bbcaa076da5": {
        "authored_data": "2011 Nov 04 19:08",
        "commit.message": "Made use of system identity hashcode explicit in seed computation.  JIRA: MATH-701.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1197716 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "e0385f30bf8dc2774478c3f4cf40b9d158d13640",
        "changes": {
            "src/main/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "old": {
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        831,
                        848
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'getRan')": [
                        839
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'getSecRan')": [
                        856
                    ]
                },
                "new": {
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        831,
                        848
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'getRan')": [
                        839
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'getSecRan')": [
                        856
                    ]
                }
            }
        }
    },
    "e0385f30bf8dc2774478c3f4cf40b9d158d13640": {
        "authored_data": "2011 Nov 04 16:20",
        "commit.message": "Changed default non-secure generator to Well19937c and changed default seeds to add system identity haschode to timestamp.  JIRA: MATH-701.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1197626 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Phil Steitz",
        "pcid": "6a5a4c8ca044628a69bb3e25a02d622f96d44d2f",
        "changes": {
            "src/main/java/org/apache/commons/math/random/RandomDataImpl.java": {
                "old": {
                    "(None, None)": [
                        52,
                        84,
                        85,
                        86,
                        87
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        830,
                        847
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'getRan')": [
                        838,
                        839
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'getSecRan')": [
                        855
                    ]
                },
                "new": {
                    "(None, None)": [
                        52,
                        84,
                        85,
                        86,
                        87
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', None)": [
                        830,
                        831,
                        847,
                        848
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'getRan')": [
                        839
                    ],
                    "('org.apache.commons.math.random#RandomDataImpl', 'getSecRan')": [
                        856
                    ]
                }
            }
        }
    },
    "6a5a4c8ca044628a69bb3e25a02d622f96d44d2f": {
        "authored_data": "2011 Nov 04 10:27",
        "commit.message": "Unnecessary casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1197491 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "3a1a95ff3c394af7dc4afd2f6709024ab9b23f41",
        "changes": {
            "src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java": {
                "old": {
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', None)": [
                        50,
                        51,
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#OpenMapRealMatrix', None)": [
                        50,
                        51,
                        52
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/util/MathArrays.java": {
                "old": {
                    "('org.apache.commons.math.util#MathArrays', 'safeNorm(double)')": [
                        370
                    ]
                },
                "new": {
                    "('org.apache.commons.math.util#MathArrays', 'safeNorm(double)')": [
                        370
                    ]
                }
            }
        }
    },
    "3a1a95ff3c394af7dc4afd2f6709024ab9b23f41": {
        "authored_data": "2011 Nov 04 10:23",
        "commit.message": "Fix generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1197488 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "553f0ec8d853beaa557eddd9fe86800fa3865d32",
        "changes": {
            "src/test/java/org/apache/commons/math/linear/FieldLUSolverTest.java": {
                "old": {
                    "('org.apache.commons.math.linear#FieldLUSolverTest', 'testSolveSingularityErrors')": [
                        103,
                        104,
                        106
                    ],
                    "('org.apache.commons.math.linear#FieldLUSolverTest', 'testSolve')": [
                        124
                    ]
                },
                "new": {
                    "('org.apache.commons.math.linear#FieldLUSolverTest', 'testSolveSingularityErrors')": [
                        103,
                        104,
                        106
                    ],
                    "('org.apache.commons.math.linear#FieldLUSolverTest', 'testSolve')": [
                        124
                    ]
                }
            }
        }
    },
    "553f0ec8d853beaa557eddd9fe86800fa3865d32": {
        "authored_data": "2011 Nov 04 10:15",
        "commit.message": "Cannot inherit without a parent to inherit from\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1197483 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "2a2a74e9d5174bd3a7f614ac1507467be077282c",
        "changes": {
            "src/main/java/org/apache/commons/math/ode/ParameterizedWrapper.java": {
                "old": {
                    "('org.apache.commons.math.ode#ParameterizedWrapper', None)": [
                        43,
                        48
                    ]
                }
            }
        }
    },
    "2a2a74e9d5174bd3a7f614ac1507467be077282c": {
        "authored_data": "2011 Nov 04 10:13",
        "commit.message": "Tidy throws clauses\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1197481 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "76a6378464548e9362ad378fcfcf85208c87c72f",
        "changes": {
            "src/test/java/org/apache/commons/math/analysis/integration/LegendreGaussIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegratorTest', 'testSinFunction')": [
                        35
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegratorTest', 'testQuinticFunction')": [
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegratorTest', 'testSinFunction')": [
                        34
                    ],
                    "('org.apache.commons.math.analysis.integration#LegendreGaussIntegratorTest', 'testQuinticFunction')": [
                        53
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/integration/RombergIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.integration#RombergIntegratorTest', 'testSinFunction')": [
                        45
                    ],
                    "('org.apache.commons.math.analysis.integration#RombergIntegratorTest', 'testQuinticFunction')": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.integration#RombergIntegratorTest', 'testSinFunction')": [
                        44
                    ],
                    "('org.apache.commons.math.analysis.integration#RombergIntegratorTest', 'testQuinticFunction')": [
                        68
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/integration/SimpsonIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.integration#SimpsonIntegratorTest', 'testSinFunction')": [
                        44
                    ],
                    "('org.apache.commons.math.analysis.integration#SimpsonIntegratorTest', 'testQuinticFunction')": [
                        68
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.integration#SimpsonIntegratorTest', 'testSinFunction')": [
                        43
                    ],
                    "('org.apache.commons.math.analysis.integration#SimpsonIntegratorTest', 'testQuinticFunction')": [
                        67
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/integration/TrapezoidIntegratorTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegratorTest', 'testSinFunction')": [
                        44
                    ],
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegratorTest', 'testQuinticFunction')": [
                        68
                    ]
                },
                "new": {
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegratorTest', 'testSinFunction')": [
                        43
                    ],
                    "('org.apache.commons.math.analysis.integration#TrapezoidIntegratorTest', 'testQuinticFunction')": [
                        67
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/BetaDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.math.distribution#BetaDistributionTest', 'testCumulative')": [
                        25
                    ],
                    "('org.apache.commons.math.distribution#BetaDistributionTest', 'checkCumulative(double,double,double,double)')": [
                        144
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#BetaDistributionTest', 'testCumulative')": [
                        24
                    ],
                    "('org.apache.commons.math.distribution#BetaDistributionTest', 'checkCumulative(double,double,double,double)')": [
                        143
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/NormalDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'testMath280')": [
                        183
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#NormalDistributionTest', 'testMath280')": [
                        182
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/distribution/TDistributionTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.math.distribution#TDistributionTest', 'nistData')": [
                        147
                    ],
                    "('org.apache.commons.math.distribution#TDistributionTest', 'makeNistResults(double,int)')": [
                        159
                    ]
                },
                "new": {
                    "('org.apache.commons.math.distribution#TDistributionTest', 'nistData')": [
                        146
                    ],
                    "('org.apache.commons.math.distribution#TDistributionTest', 'makeNistResults(double,int)')": [
                        158
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/fraction/BigFractionFormatTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.math.fraction#BigFractionFormatTest', 'testParseBig')": [
                        272
                    ]
                },
                "new": {
                    "('org.apache.commons.math.fraction#BigFractionFormatTest', 'testParseBig')": [
                        271
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/stat/regression/MillerUpdatingRegressionTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testFilippelli')": [
                        236
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testWampler1')": [
                        388
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testWampler2')": [
                        448
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testWampler3')": [
                        507
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testWampler4')": [
                        564
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testOneRedundantColumn')": [
                        762
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testThreeRedundantColumn')": [
                        825
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testSubsetRegression')": [
                        1064
                    ]
                },
                "new": {
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testFilippelli')": [
                        235
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testWampler1')": [
                        387
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testWampler2')": [
                        447
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testWampler3')": [
                        506
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testWampler4')": [
                        563
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testOneRedundantColumn')": [
                        761
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testThreeRedundantColumn')": [
                        824
                    ],
                    "('org.apache.commons.math.stat.regression#MillerUpdatingRegressionTest', 'testSubsetRegression')": [
                        1063
                    ]
                }
            }
        }
    },
    "76a6378464548e9362ad378fcfcf85208c87c72f": {
        "authored_data": "2011 Nov 04 10:05",
        "commit.message": "Unused imports\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/math/trunk@1197476 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "60516af98d18262fd1d1c26efc3fd6539639dab9",
        "changes": {
            "src/main/java/org/apache/commons/math/ode/sampling/StepNormalizer.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                }
            },
            "src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer.java": {
                "old": {
                    "(None, None)": [
                        23,
                        34
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/analysis/function/SincTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/complex/ComplexTest.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/BatteryNISTTest.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        25,
                        33
                    ]
                }
            },
            "src/test/java/org/apache/commons/math/optimization/general/NonLinearConjugateGradientOptimizerTest.java": {
                "old": {
                    "(None, None)": [
                        25
                    ]
                }
            }
        }
    }
}