{
    "cc8eb951358320a984ea6798d3d252b4eed5c80c": {
        "authored_data": "2022 Jun 24 15:42",
        "commit.message": "[SYSTEMDS-2830] Functional Compression\n\nThis commit adds a new column group class for functional compression.\nInitial implementation covers a linear compression scheme.\nThe new colgroup supports construction from matrix,\nmost of the operations and tests.\n\nCloses #1634\nCloses #1645\n",
        "commit.author.name": "wedenigt",
        "pcid": "ee6f619643a320446dc7480d217b533a5a00013b",
        "changes": {
            "src/main/java/org/apache/sysds/runtime/compress/colgroup/AColGroup.java": {
                "old": {
                    "('org.apache.sysds.runtime.compress.colgroup#AColGroup', None)": [
                        55,
                        64
                    ]
                },
                "new": {
                    "('org.apache.sysds.runtime.compress.colgroup#AColGroup', None)": [
                        55,
                        64,
                        65
                    ]
                }
            },
            "src/main/java/org/apache/sysds/runtime/compress/colgroup/ColGroupFactory.java": {
                "old": {
                    "('org.apache.sysds.runtime.compress.colgroup#ColGroupFactory', 'compress')": [
                        132,
                        136,
                        137,
                        138
                    ],
                    "('org.apache.sysds.runtime.compress.colgroup#ColGroupFactory', 'directCompressDDCMultiCol(int,CompressedSizeInfoColGroup)')": [
                        448,
                        451,
                        453,
                        458,
                        460
                    ]
                },
                "new": {
                    "(None, None)": [
                        46
                    ],
                    "('org.apache.sysds.runtime.compress.colgroup#ColGroupFactory', 'compress')": [
                        133,
                        137,
                        138,
                        139
                    ],
                    "('org.apache.sysds.runtime.compress.colgroup#ColGroupFactory', 'compressColGroupInitial(CompressedSizeInfoColGroup)')": [
                        363,
                        364
                    ],
                    "('org.apache.sysds.runtime.compress.colgroup#ColGroupFactory', 'directCompressDDCMultiCol(int,CompressedSizeInfoColGroup)')": [
                        451,
                        454,
                        456,
                        461,
                        463,
                        464
                    ],
                    "('org.apache.sysds.runtime.compress.colgroup#ColGroupFactory', 'compressLinearFunctional(int,MatrixBlock,CompressionSettings)')": [
                        660,
                        661,
                        662,
                        663
                    ],
                    "('org.apache.sysds.runtime.compress.colgroup#ColGroupFactory', None)": [
                        664,
                        665
                    ]
                }
            },
            "src/main/java/org/apache/sysds/runtime/compress/colgroup/ColGroupSizes.java": {
                "new": {
                    "('org.apache.sysds.runtime.compress.colgroup#ColGroupSizes', None)": [
                        110
                    ],
                    "('org.apache.sysds.runtime.compress.colgroup#ColGroupSizes', 'estimateInMemorySizeLinearFunctional(int)')": [
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117
                    ],
                    "(None, None)": [
                        118
                    ]
                }
            },
            "src/main/java/org/apache/sysds/runtime/compress/colgroup/ColGroupUncompressed.java": {
                "old": {
                    "('org.apache.sysds.runtime.compress.colgroup#ColGroupUncompressed', None)": [
                        354
                    ],
                    "('org.apache.sysds.runtime.compress.colgroup#ColGroupUncompressed', 'leftMultByAColGroup(AColGroup,MatrixBlock)')": [
                        563,
                        564,
                        565,
                        566,
                        567,
                        568,
                        569,
                        570,
                        571,
                        572,
                        573,
                        574,
                        575,
                        576,
                        577,
                        578,
                        579,
                        580,
                        581,
                        582,
                        583,
                        584,
                        585,
                        586,
                        587,
                        588,
                        589
                    ]
                },
                "new": {
                    "('org.apache.sysds.runtime.compress.colgroup#ColGroupUncompressed', None)": [
                        354
                    ],
                    "('org.apache.sysds.runtime.compress.colgroup#ColGroupUncompressed', 'leftMultByAColGroup(AColGroup,MatrixBlock)')": [
                        563
                    ]
                }
            },
            "src/main/java/org/apache/sysds/runtime/compress/colgroup/ColGroupUtils.java": {
                "new": {
                    "(None, None)": [
                        22,
                        24,
                        100,
                        101,
                        102,
                        103
                    ],
                    "('org.apache.sysds.runtime.compress.colgroup#ColGroupUtils', None)": [
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74
                    ],
                    "('org.apache.sysds.runtime.compress.colgroup#ColGroupUtils', 'copyValuesColGroupMatrixBlocks(AColGroup,AColGroup,MatrixBlock,MatrixBlock)')": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99
                    ]
                }
            },
            "src/main/java/org/apache/sysds/runtime/compress/estim/CompressedSizeInfoColGroup.java": {
                "new": {
                    "('org.apache.sysds.runtime.compress.estim#CompressedSizeInfoColGroup', 'getCompressionSize(int,CompressionType,EstimationFactors)')": [
                        192,
                        193
                    ]
                }
            }
        }
    },
    "25b9d31517965d3d17ead782decb99a3c0a36d36": {
        "authored_data": "2022 Jun 23 13:06",
        "commit.message": "[SYSTEMDS-3341] Fix javadoc warning\n",
        "commit.author.name": "Arnab Phani",
        "pcid": "6c530e39576e9d34e05fca7c0330142f5d6545a4",
        "changes": {
            "src/main/java/org/apache/sysds/runtime/controlprogram/caching/UnifiedMemoryManager.java": {
                "old": {
                    "('org.apache.sysds.runtime.controlprogram.caching#UnifiedMemoryManager', 'printStatus(String)')": [
                        212
                    ]
                },
                "new": {
                    "('org.apache.sysds.runtime.controlprogram.caching#UnifiedMemoryManager', None)": [
                        209,
                        210
                    ],
                    "('org.apache.sysds.runtime.controlprogram.caching#UnifiedMemoryManager', 'printStatus(String)')": [
                        214
                    ]
                }
            }
        }
    },
    "6c530e39576e9d34e05fca7c0330142f5d6545a4": {
        "authored_data": "2022 Jun 23 11:48",
        "commit.message": "[SYSTEMDS-3341] Add debug prints and bug fixes in UMM\n",
        "commit.author.name": "Arnab Phani",
        "pcid": "a06a0b55f6d996729cf40cd819b29e234e10a6d1",
        "changes": {
            "src/main/java/org/apache/sysds/runtime/controlprogram/caching/UnifiedMemoryManager.java": {
                "new": {
                    "('org.apache.sysds.runtime.controlprogram.caching#UnifiedMemoryManager', None)": [
                        206,
                        207,
                        208,
                        209,
                        232,
                        233,
                        234,
                        235
                    ],
                    "('org.apache.sysds.runtime.controlprogram.caching#UnifiedMemoryManager', 'printStatus(String)')": [
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231
                    ]
                }
            },
            "src/main/java/org/apache/sysds/runtime/instructions/cp/ReshapeCPInstruction.java": {
                "old": {
                    "('org.apache.sysds.runtime.instructions.cp#ReshapeCPInstruction', 'processInstruction(ExecutionContext)')": [
                        107
                    ]
                },
                "new": {
                    "('org.apache.sysds.runtime.instructions.cp#ReshapeCPInstruction', 'processInstruction(ExecutionContext)')": [
                        106
                    ]
                }
            }
        }
    },
    "a06a0b55f6d996729cf40cd819b29e234e10a6d1": {
        "authored_data": "2022 Jun 20 13:19",
        "commit.message": "[MINOR] Logical Enumeration convergence condition fix\n  - This commit modifies the converge criteria for logical enumeration\n     if no increase in the top k score is observed in previous three iterations\n     then the algorithm converges considering that no further iterations could bring\n     any major increase in the score.\n",
        "commit.author.name": "Shafaq Siddiqi",
        "pcid": "962440657afaf21c34802ae29dea0808a2b2e7be",
        "changes": {
            "src/test/java/org/apache/sysds/test/functions/pipelines/BuiltinTopkCleaningClassificationTest.java": {
                "old": {
                    "('org.apache.sysds.test.functions.pipelines#BuiltinTopkCleaningClassificationTest', 'testFindBestPipelineCensus')": [
                        57
                    ],
                    "('org.apache.sysds.test.functions.pipelines#BuiltinTopkCleaningClassificationTest', 'runtopkCleaning(String,String,Double,int,int,double,String,int,double,Types)')": [
                        83
                    ]
                },
                "new": {
                    "('org.apache.sysds.test.functions.pipelines#BuiltinTopkCleaningClassificationTest', 'testFindBestPipelineCensus')": [
                        57
                    ],
                    "('org.apache.sysds.test.functions.pipelines#BuiltinTopkCleaningClassificationTest', 'runtopkCleaning(String,String,Double,int,int,double,String,int,double,Types)')": [
                        83
                    ]
                }
            },
            "src/test/java/org/apache/sysds/test/functions/pipelines/BuiltinTopkLogicalTest.java": {
                "old": {
                    "('org.apache.sysds.test.functions.pipelines#BuiltinTopkLogicalTest', 'testLogical1')": [
                        54
                    ],
                    "('org.apache.sysds.test.functions.pipelines#BuiltinTopkLogicalTest', None)": [
                        57
                    ],
                    "('org.apache.sysds.test.functions.pipelines#BuiltinTopkLogicalTest', 'testLogical2')": [
                        59
                    ]
                },
                "new": {
                    "('org.apache.sysds.test.functions.pipelines#BuiltinTopkLogicalTest', 'testLogical1')": [
                        54
                    ],
                    "('org.apache.sysds.test.functions.pipelines#BuiltinTopkLogicalTest', None)": [
                        57
                    ],
                    "('org.apache.sysds.test.functions.pipelines#BuiltinTopkLogicalTest', 'testLogical2')": [
                        59
                    ]
                }
            }
        }
    }
}