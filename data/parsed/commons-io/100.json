{
    "b80750b47a2f0f8da3929c3aaf976d994a374356": {
        "authored_data": "2022 Jun 23 13:50",
        "commit.message": "Use Objects.equals()\n\nJavadoc, simplify lambda.",
        "commit.author.name": "Gary Gregory",
        "pcid": "12aff370caa2bb63cb948e53a46119466085b536",
        "changes": {
            "src/main/java/org/apache/commons/io/input/BOMInputStream.java": {
                "old": {
                    "(None, None)": [
                        37
                    ],
                    "('org.apache.commons.io.input#BOMInputStream', None)": [
                        94,
                        95,
                        96,
                        97,
                        98,
                        109,
                        179,
                        213,
                        226,
                        237,
                        269
                    ],
                    "('org.apache.commons.io.input#BOMInputStream', 'hasBOM(ByteOrderMark)')": [
                        251,
                        252
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        38
                    ],
                    "('org.apache.commons.io.input#BOMInputStream', None)": [
                        92,
                        96,
                        97,
                        99,
                        178,
                        212,
                        225,
                        236,
                        267
                    ],
                    "('org.apache.commons.io.input#BOMInputStream', 'hasBOM(ByteOrderMark)')": [
                        250
                    ]
                }
            }
        }
    },
    "12aff370caa2bb63cb948e53a46119466085b536": {
        "authored_data": "2022 Jun 23 12:42",
        "commit.message": "Javadoc",
        "commit.author.name": "Gary Gregory",
        "pcid": "2ce0a112df85f88e2891384076ef74ae1021b506",
        "changes": {
            "src/main/java/org/apache/commons/io/output/ProxyWriter.java": {
                "old": {
                    "('org.apache.commons.io.output#ProxyWriter', None)": [
                        165
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ProxyWriter', None)": [
                        165
                    ]
                }
            }
        }
    },
    "2ce0a112df85f88e2891384076ef74ae1021b506": {
        "authored_data": "2022 Jun 21 20:45",
        "commit.message": "Reuse StandardCharsets",
        "commit.author.name": "Gary Gregory",
        "pcid": "9a2571827af7fc47565a716fada2807d20d4524d",
        "changes": {
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', None)": [
                        2137
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', None)": [
                        2137
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "old": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        1729
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        1729
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/LineIterator.java": {
                "old": {
                    "(None, None)": [
                        38
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.commons.io#LineIterator', None)": [
                        67,
                        70
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/WriterOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#WriterOutputStream', 'checkIbmJdkWithBrokenUTF16(Charset)')": [
                        86
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.io.output#WriterOutputStream', 'checkIbmJdkWithBrokenUTF16(Charset)')": [
                        87
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/CopyUtilsTest.java": {
                "old": {
                    "('org.apache.commons.io#CopyUtilsTest', 'copy_inputStreamToWriterWithEncoding')": [
                        102
                    ],
                    "('org.apache.commons.io#CopyUtilsTest', 'testCopy_byteArrayToWriterWithEncoding')": [
                        163
                    ]
                },
                "new": {
                    "('org.apache.commons.io#CopyUtilsTest', 'copy_inputStreamToWriterWithEncoding')": [
                        102
                    ],
                    "('org.apache.commons.io#CopyUtilsTest', 'testCopy_byteArrayToWriterWithEncoding')": [
                        163
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FileUtilsTest.java": {
                "old": {
                    "('org.apache.commons.io#FileUtilsTest', 'testFileUtils')": [
                        1429,
                        1433,
                        1438
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testReadLines')": [
                        2483
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtilsTest', None)": [
                        92,
                        93
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testFileUtils')": [
                        1431,
                        1435,
                        1440
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testReadLines')": [
                        2485
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/IOUtilsTest.java": {
                "old": {
                    "('org.apache.commons.io#IOUtilsTest', 'testReadLines_InputStream_String')": [
                        1031
                    ],
                    "('org.apache.commons.io#IOUtilsTest', 'testToByteArray_Reader')": [
                        1452
                    ],
                    "('org.apache.commons.io#IOUtilsTest', 'testToCharArray_InputStream_CharsetName')": [
                        1508
                    ],
                    "('org.apache.commons.io#IOUtilsTest', 'testToInputStream_CharSequence')": [
                        1542
                    ],
                    "('org.apache.commons.io#IOUtilsTest', 'testToInputStream_String')": [
                        1563
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtilsTest', None)": [
                        95,
                        96
                    ],
                    "('org.apache.commons.io#IOUtilsTest', 'testReadLines_InputStream_String')": [
                        1033
                    ],
                    "('org.apache.commons.io#IOUtilsTest', 'testToByteArray_Reader')": [
                        1454
                    ],
                    "('org.apache.commons.io#IOUtilsTest', 'testToCharArray_InputStream_CharsetName')": [
                        1510
                    ],
                    "('org.apache.commons.io#IOUtilsTest', 'testToInputStream_CharSequence')": [
                        1544
                    ],
                    "('org.apache.commons.io#IOUtilsTest', 'testToInputStream_String')": [
                        1565
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/IOUtilsWriteTest.java": {
                "old": {
                    "('org.apache.commons.io#IOUtilsWriteTest', 'testWriteLines_OutputStream_Encoding')": [
                        546,
                        552
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtilsWriteTest', 'testWriteLines_OutputStream_Encoding')": [
                        546,
                        552
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/LineIteratorTest.java": {
                "old": {
                    "('org.apache.commons.io#LineIteratorTest', 'doTestFileWithSpecifiedLines(int)')": [
                        111
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testCloseEarly')": [
                        137
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testFilteringBufferedReader')": [
                        198
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testFilteringFileReader')": [
                        210
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testInvalidEncoding')": [
                        225
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testMissingFile')": [
                        233
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testNextLineOnlyUtf8Encoding')": [
                        258
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testValidEncoding')": [
                        313
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.io#LineIteratorTest', None)": [
                        45,
                        46
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'doTestFileWithSpecifiedLines(int)')": [
                        114
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testCloseEarly')": [
                        140
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testFilteringBufferedReader')": [
                        201
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testFilteringFileReader')": [
                        213
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testInvalidEncoding')": [
                        228
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testMissingFile')": [
                        236
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testNextLineOnlyUtf8Encoding')": [
                        261
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testValidEncoding')": [
                        316
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testBufferedRead_UTF8')": [
                        175
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testIO_356_B10_D10_S0_UTF16')": [
                        225
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testIO_356_B10_D10_S0_UTF8')": [
                        230
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testIO_356_B10_D10_S1_UTF8')": [
                        235
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testIO_356_B10_D10_S2_UTF8')": [
                        240
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testIO_356_B10_D13_S0_UTF8')": [
                        245
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testIO_356_B10_D13_S1_UTF8')": [
                        250
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testIO_356_B10_D20_S0_UTF8')": [
                        255
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testLargeBufferedRead_UTF8')": [
                        287
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testLargeSingleByteRead_UTF8')": [
                        299
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testMarkReset_UTF8')": [
                        334
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testMarkSupported')": [
                        339
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testReadZero_EmptyString')": [
                        369
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testSingleByteRead_UTF16')": [
                        404
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testSingleByteRead_UTF8')": [
                        409
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testSkip_UTF8')": [
                        438
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', None)": [
                        39,
                        40
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testBufferedRead_UTF8')": [
                        177
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testIO_356_B10_D10_S0_UTF16')": [
                        227
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testIO_356_B10_D10_S0_UTF8')": [
                        232
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testIO_356_B10_D10_S1_UTF8')": [
                        237
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testIO_356_B10_D10_S2_UTF8')": [
                        242
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testIO_356_B10_D13_S0_UTF8')": [
                        247
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testIO_356_B10_D13_S1_UTF8')": [
                        252
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testIO_356_B10_D20_S0_UTF8')": [
                        257
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testLargeBufferedRead_UTF8')": [
                        289
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testLargeSingleByteRead_UTF8')": [
                        301
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testMarkReset_UTF8')": [
                        336
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testMarkSupported')": [
                        341
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testReadZero_EmptyString')": [
                        371
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testSingleByteRead_UTF16')": [
                        406
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testSingleByteRead_UTF8')": [
                        411
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testSkip_UTF8')": [
                        440
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/QueueInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#QueueInputStreamTest', 'readUnbuffered(InputStream)')": [
                        112
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.io.input#QueueInputStreamTest', 'readUnbuffered(InputStream)')": [
                        113
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'charsetData')": [
                        61
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testLargeUTF8WithBufferedRead')": [
                        158
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testLargeUTF8WithSingleByteRead')": [
                        163
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testUTF16WithSingleByteRead')": [
                        194
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testUTF8WithBufferedRead')": [
                        199
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testUTF8WithSingleByteRead')": [
                        204
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReaderInputStreamTest', None)": [
                        45,
                        46,
                        47
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'charsetData')": [
                        64
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testLargeUTF8WithBufferedRead')": [
                        161
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testLargeUTF8WithSingleByteRead')": [
                        166
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testUTF16WithSingleByteRead')": [
                        197
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testUTF8WithBufferedRead')": [
                        202
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testUTF8WithSingleByteRead')": [
                        207
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', None)": [
                        40,
                        41
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUnsupportedEncodingUTF16(int)')": [
                        175
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUTF16BEFile(int)')": [
                        182
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUTF16LEFile(int)')": [
                        190
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', None)": [
                        41,
                        42,
                        67,
                        71
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUnsupportedEncodingUTF16(int)')": [
                        178
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUTF16BEFile(int)')": [
                        185
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUTF16LEFile(int)')": [
                        193
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamFile', 'testDataIntegrityWithBufferedReader')": [
                        62,
                        63,
                        64,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamFile', None)": [
                        50,
                        51,
                        52,
                        53,
                        54
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamFile', 'testDataIntegrityWithBufferedReader')": [
                        67,
                        68,
                        69,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestSimple', 'testUnsupportedEncodingUTF16')": [
                        89
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestSimple', 'testUnsupportedEncodingUTF16')": [
                        90
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/TailerTest.java": {
                "old": {
                    "('org.apache.commons.io.input#TailerTest', 'testTailer')": [
                        604
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#TailerTest', 'testTailer')": [
                        604
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#XmlStreamReaderTest', None)": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#XmlStreamReaderTest', None)": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        53
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java": {
                "old": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', None)": [
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', None)": [
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java": {
                "old": {
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'testDifferentEncoding')": [
                        214,
                        229
                    ]
                },
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'testDifferentEncoding')": [
                        215,
                        230
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#LockableFileWriterTest', 'testAlternateLockDir')": [
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#LockableFileWriterTest', 'testAlternateLockDir')": [
                        60
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testLargeUTF8CharsetWithBufferedWrite')": [
                        60
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testLargeUTF8WithBufferedWrite')": [
                        70
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testLargeUTF8WithSingleByteWrite')": [
                        75
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF16BEWithBufferedWrite')": [
                        95
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF16BEWithSingleByteWrite')": [
                        100
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF16LEWithBufferedWrite')": [
                        105
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF16LEWithSingleByteWrite')": [
                        110
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF16WithBufferedWrite')": [
                        116
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF16WithSingleByteWrite')": [
                        127
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF8WithBufferedWrite')": [
                        137
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF8WithSingleByteWrite')": [
                        142
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#WriterOutputStreamTest', None)": [
                        34,
                        35,
                        36,
                        37
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testLargeUTF8CharsetWithBufferedWrite')": [
                        64
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testLargeUTF8WithBufferedWrite')": [
                        74
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testLargeUTF8WithSingleByteWrite')": [
                        79
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF16BEWithBufferedWrite')": [
                        99
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF16BEWithSingleByteWrite')": [
                        104
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF16LEWithBufferedWrite')": [
                        109
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF16LEWithSingleByteWrite')": [
                        114
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF16WithBufferedWrite')": [
                        120
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF16WithSingleByteWrite')": [
                        131
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF8WithBufferedWrite')": [
                        141
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF8WithSingleByteWrite')": [
                        146
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testDefaultEncoding')": [
                        91,
                        92,
                        93,
                        94
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testLatin1Encoding')": [
                        126
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testNoXmlHeader')": [
                        145
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testUTF16BEEncoding')": [
                        150
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testUTF16Encoding')": [
                        155
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testUTF16LEEncoding')": [
                        160
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testUTF8Encoding')": [
                        165
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testDefaultEncoding')": [
                        91,
                        92,
                        93,
                        94
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testLatin1Encoding')": [
                        126
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testNoXmlHeader')": [
                        145
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testUTF16BEEncoding')": [
                        150
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testUTF16Encoding')": [
                        155
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testUTF16LEEncoding')": [
                        160
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testUTF8Encoding')": [
                        165
                    ]
                }
            }
        }
    },
    "9a2571827af7fc47565a716fada2807d20d4524d": {
        "authored_data": "2022 Jun 21 18:00",
        "commit.message": "Add Add XmlStreamWriter(OutputStream, Charset)",
        "commit.author.name": "Gary Gregory",
        "pcid": "a2e012d5486becae451ca837273ffebe45d910b3",
        "changes": {
            "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java": {
                "old": {
                    "('org.apache.commons.io.output#XmlStreamWriter', None)": [
                        46,
                        47,
                        48,
                        52,
                        87,
                        99
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriter', 'close')": [
                        110,
                        111,
                        112
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriter', 'detectEncoding(char,int,int)')": [
                        128,
                        132,
                        144,
                        145,
                        149,
                        154,
                        158,
                        160,
                        162,
                        163
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriter', 'getDefaultEncoding')": [
                        190
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriter', 'getEncoding')": [
                        199
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriter', 'write(char,int,int)')": [
                        212
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        30,
                        33
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriter', None)": [
                        50,
                        51,
                        52,
                        56,
                        91,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        115
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriter', 'close')": [
                        126,
                        127,
                        128
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriter', 'detectEncoding(char,int,int)')": [
                        144,
                        148,
                        160,
                        161,
                        165,
                        170,
                        174,
                        176,
                        178,
                        179
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriter', 'getDefaultEncoding')": [
                        206
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriter', 'getEncoding')": [
                        215
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriter', 'write(char,int,int)')": [
                        228
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#XmlStreamWriterTest', None)": [
                        31,
                        33,
                        35,
                        37,
                        52,
                        124
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'checkXmlContent(String,String,String)')": [
                        43,
                        44,
                        46,
                        50,
                        51
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'checkXmlWriter(String,String,String)')": [
                        65
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testNoXmlHeader')": [
                        135,
                        136
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        25,
                        26
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', None)": [
                        34,
                        35,
                        37,
                        38,
                        40,
                        41,
                        43,
                        44,
                        46,
                        134
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'checkXmlContent(String,String,String)')": [
                        51,
                        52,
                        54,
                        58,
                        59,
                        60,
                        61,
                        62
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'checkXmlWriter(String,String,String)')": [
                        75
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testNoXmlHeader')": [
                        145
                    ]
                }
            }
        }
    },
    "a2e012d5486becae451ca837273ffebe45d910b3": {
        "authored_data": "2022 Jun 21 17:51",
        "commit.message": "Reuse StandardCharsets\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "12b97b145355b381863b6fd7a7f0ab9614f74ab0",
        "changes": {
            "src/main/java/org/apache/commons/io/ByteOrderMark.java": {
                "old": {
                    "('org.apache.commons.io#ByteOrderMark', None)": [
                        37,
                        40,
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.io#ByteOrderMark', None)": [
                        38,
                        41,
                        44
                    ]
                }
            }
        }
    },
    "12b97b145355b381863b6fd7a7f0ab9614f74ab0": {
        "authored_data": "2022 Jun 21 17:51",
        "commit.message": "Add Charsets.toCharset(Charset, Charset).\n\nAdd Charsets.toCharset(String, Charset).\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "94f0f7880b9ea9b3e5221db4f34b139bf544b907",
        "changes": {
            "src/main/java/org/apache/commons/io/Charsets.java": {
                "old": {
                    "('org.apache.commons.io#Charsets', 'toCharset(String)')": [
                        194
                    ]
                },
                "new": {
                    "('org.apache.commons.io#Charsets', None)": [
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        196,
                        197,
                        198,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217
                    ],
                    "('org.apache.commons.io#Charsets', 'toCharset(Charset,Charset)')": [
                        194,
                        195
                    ],
                    "('org.apache.commons.io#Charsets', 'toCharset(String)')": [
                        206
                    ],
                    "('org.apache.commons.io#Charsets', 'toCharset(String,Charset)')": [
                        218,
                        219
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/CharsetsTest.java": {
                "old": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.io#CharsetsTest', 'testToCharset')": [
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.io#CharsetsTest', 'testToCharset_String')": [
                        53
                    ],
                    "('org.apache.commons.io#CharsetsTest', None)": [
                        58,
                        59,
                        60
                    ],
                    "('org.apache.commons.io#CharsetsTest', 'testToCharset_String_Charset')": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68
                    ]
                }
            }
        }
    },
    "94f0f7880b9ea9b3e5221db4f34b139bf544b907": {
        "authored_data": "2022 Jun 21 17:49",
        "commit.message": "Javadoc",
        "commit.author.name": "Gary Gregory",
        "pcid": "84886836fd37de2b7cd291ba7b5e7c88a4654b17",
        "changes": {
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "new": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        478,
                        479
                    ]
                }
            }
        }
    },
    "57313b3ed3b356d9a81103f4dbcc1eb38b9f2c0b": {
        "authored_data": "2022 Jun 21 17:40",
        "commit.message": "Add IOUtils.closeQuietly(Collection<Closeable>).\n\nAdd IOUtils.closeQuietly(Stream<Closeable>).\nInternal refactoring to avoid type casts.",
        "commit.author.name": "Gary Gregory",
        "pcid": "3620e8e42d205efd1440a3f54928a1963d151673",
        "changes": {
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "old": {
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(Closeable)')": [
                        523
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(InputStream)')": [
                        576
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(OutputStream)')": [
                        610
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(Reader)')": [
                        643
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(Selector)')": [
                        676
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(ServerSocket)')": [
                        709
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(Socket)')": [
                        742
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(Writer)')": [
                        774
                    ],
                    "('org.apache.commons.io#IOUtils', 'consume(InputStream)')": [
                        790,
                        791
                    ],
                    "('org.apache.commons.io#IOUtils', None)": [
                        3314
                    ]
                },
                "new": {
                    "(None, None)": [
                        54
                    ],
                    "('org.apache.commons.io#IOUtils', None)": [
                        477,
                        478,
                        481,
                        482,
                        483,
                        585,
                        586,
                        587,
                        588,
                        589,
                        590,
                        591,
                        592,
                        593,
                        594,
                        595,
                        596,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610,
                        611,
                        612,
                        616,
                        3339
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQ(Closeable)')": [
                        479,
                        480
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(Closeable)')": [
                        531
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(InputStream)')": [
                        584
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(Iterable)')": [
                        597,
                        598,
                        599
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(Stream)')": [
                        613,
                        614,
                        615
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(OutputStream)')": [
                        650
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(Reader)')": [
                        683
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(Selector)')": [
                        716
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(ServerSocket)')": [
                        749
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(Socket)')": [
                        782
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(Writer)')": [
                        814
                    ],
                    "('org.apache.commons.io#IOUtils', 'consume(InputStream)')": [
                        830
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/IOUtilsTest.java": {
                "old": {
                    "('org.apache.commons.io#IOUtilsTest', 'testCloseQuietly_AllCloseableIOException')": [
                        342,
                        343,
                        344
                    ],
                    "('org.apache.commons.io#IOUtilsTest', 'testCloseQuietly_CloseableIOException')": [
                        351,
                        352
                    ],
                    "('org.apache.commons.io#IOUtilsTest', None)": [
                        353
                    ]
                },
                "new": {
                    "(None, None)": [
                        60,
                        63,
                        68
                    ],
                    "('org.apache.commons.io#IOUtilsTest', 'testCloseQuietly_AllCloseableIOException')": [
                        345,
                        347,
                        348
                    ],
                    "('org.apache.commons.io#IOUtilsTest', 'testCloseQuietly_CloseableIOException')": [
                        354,
                        355,
                        356,
                        357
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/serialization/AbstractCloseableListTest.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.io.serialization#AbstractCloseableListTest', 'cleanup')": [
                        37,
                        38,
                        39
                    ],
                    "('org.apache.commons.io.serialization#AbstractCloseableListTest', None)": [
                        40,
                        41,
                        42,
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.io.serialization#AbstractCloseableListTest', 'cleanup')": [
                        37
                    ]
                }
            }
        }
    }
}