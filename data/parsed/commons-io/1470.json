{
    "53c170c4923d2fffc3f536189ab6b3f43149f8d3": {
        "authored_data": "2020 May 24 17:20",
        "commit.message": "Don't hard code values in Javadoc, use {@value reference}.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "22df66672a8f40e64d192ec8a43bfa8409fec36b",
        "changes": {
            "src/main/java/org/apache/commons/io/input/ReaderInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ReaderInputStream', None)": [
                        147,
                        169,
                        180
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReaderInputStream', None)": [
                        147,
                        169,
                        180
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java": {
                "old": {
                    "(None, None)": [
                        48
                    ]
                },
                "new": {
                    "(None, None)": [
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#ByteArrayOutputStream', None)": [
                        31
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ByteArrayOutputStream', None)": [
                        31
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#DeferredFileOutputStream', None)": [
                        91,
                        92,
                        93,
                        94,
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#DeferredFileOutputStream', None)": [
                        91,
                        92,
                        93,
                        94,
                        95
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#UnsynchronizedByteArrayOutputStream', None)": [
                        35,
                        36
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#UnsynchronizedByteArrayOutputStream', None)": [
                        35,
                        36
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/WriterOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#WriterOutputStream', None)": [
                        74,
                        95,
                        96,
                        97,
                        104,
                        153,
                        154,
                        155,
                        161,
                        182,
                        183,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        203
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#WriterOutputStream', None)": [
                        74,
                        95,
                        96,
                        97,
                        104,
                        153,
                        154,
                        155,
                        161,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        203
                    ]
                }
            }
        }
    },
    "22df66672a8f40e64d192ec8a43bfa8409fec36b": {
        "authored_data": "2020 May 24 17:13",
        "commit.message": "Reuse constant, normalize spelling.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "dc5fa1cc96f8a309b3371f9a743ac1bbe3cfa416",
        "changes": {
            "src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java": {
                "old": {
                    "(None, None)": [
                        24,
                        25,
                        26
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'toBufferedInputStream(InputStream)')": [
                        124
                    ]
                },
                "new": {
                    "(None, None)": [
                        24
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'toBufferedInputStream(InputStream)')": [
                        122
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#UnsynchronizedByteArrayOutputStream', 'toBufferedInputStream(InputStream)')": [
                        122
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#UnsynchronizedByteArrayOutputStream', 'toBufferedInputStream(InputStream)')": [
                        122
                    ]
                }
            }
        }
    },
    "dc5fa1cc96f8a309b3371f9a743ac1bbe3cfa416": {
        "authored_data": "2020 May 24 17:06",
        "commit.message": "Access DEFAULT_SIZE directly.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "133fb1717443f3110d812dd65a5238a790ce39b1",
        "changes": {
            "src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#DeferredFileOutputStream', None)": [
                        100,
                        135
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#DeferredFileOutputStream', None)": [
                        100,
                        135
                    ]
                }
            }
        }
    },
    "5fbc4964bcb351cab189faaa042ac79969a66716": {
        "authored_data": "2020 May 05 19:52",
        "commit.message": "Use try-with-resources and format to 120 line length.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "06f76d5339181638a7ac69c15d32dafdf3216c47",
        "changes": {
            "src/test/java/org/apache/commons/io/function/IOFunctionTest.java": {
                "old": {
                    "('org.apache.commons.io.function#IOFunctionTest', 'testIdentity')": [
                        157,
                        158
                    ]
                },
                "new": {
                    "('org.apache.commons.io.function#IOFunctionTest', 'testIdentity')": [
                        157,
                        158
                    ],
                    "('org.apache.commons.io.function#IOFunctionTest', None)": [
                        159
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java": {
                "old": {
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'writeData(AbstractByteArrayOutputStream,java,int)')": [
                        62,
                        63,
                        64,
                        65
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', None)": [
                        66
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'testToBufferedInputStreamEmpty(String,IOFunction)')": [
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'testToBufferedInputStream(String,IOFunction)')": [
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'writeData(AbstractByteArrayOutputStream,java,int)')": [
                        62,
                        63,
                        64,
                        65
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'testToBufferedInputStreamEmpty(String,IOFunction)')": [
                        182,
                        183,
                        184,
                        185,
                        186
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', None)": [
                        187,
                        188,
                        189,
                        204,
                        205,
                        206
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'testToBufferedInputStream(String,IOFunction)')": [
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ChunkedOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'write_four_chunks')": [
                        35,
                        36,
                        37,
                        38,
                        39
                    ],
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'negative_chunksize_not_permitted')": [
                        44,
                        45
                    ],
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'defaultConstructor')": [
                        51,
                        52,
                        53,
                        54,
                        55
                    ],
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'getByteArrayOutputStream(AtomicInteger)')": [
                        58
                    ],
                    "(None, None)": [
                        68
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'write_four_chunks')": [
                        35,
                        36,
                        37,
                        38
                    ],
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', None)": [
                        39,
                        54
                    ],
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'negative_chunksize_not_permitted')": [
                        44
                    ],
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'defaultConstructor')": [
                        50,
                        51,
                        52,
                        53
                    ],
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'newByteArrayOutputStream(AtomicInteger)')": [
                        57
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', None)": [
                        58,
                        59,
                        60,
                        61,
                        62,
                        83,
                        84,
                        85,
                        108,
                        109,
                        110,
                        140,
                        141,
                        142,
                        176,
                        359,
                        360,
                        366,
                        367
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testBelowThreshold(int)')": [
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testAtThreshold(int)')": [
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testAboveThreshold(int)')": [
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testThresholdReached(int)')": [
                        152,
                        153,
                        156,
                        157,
                        160,
                        161,
                        162,
                        163,
                        164
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testWriteToSmall(int)')": [
                        182,
                        188,
                        189,
                        190,
                        208
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testWriteToLarge(int)')": [
                        219,
                        225,
                        226,
                        227,
                        245
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileBelowThreshold(int)')": [
                        260,
                        261,
                        262,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileAboveThreshold(int)')": [
                        285,
                        286,
                        287,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileAboveThresholdPrefixOnly(int)')": [
                        320,
                        321,
                        322,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileError')": [
                        354,
                        355,
                        356,
                        357
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'verifyResultFile(File)')": [
                        372,
                        373,
                        383,
                        384,
                        386,
                        387,
                        390,
                        391,
                        393,
                        394
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', None)": [
                        58,
                        59,
                        60,
                        61,
                        79,
                        80,
                        100,
                        101,
                        129,
                        130,
                        324,
                        336,
                        342
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testBelowThreshold(int)')": [
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testAtThreshold(int)')": [
                        85,
                        86,
                        87,
                        88,
                        89
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testAboveThreshold(int)')": [
                        111,
                        112,
                        113,
                        114,
                        115,
                        116
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testThresholdReached(int)')": [
                        140,
                        141,
                        144,
                        147,
                        148,
                        149
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testWriteToSmall(int)')": [
                        166,
                        172,
                        173,
                        174,
                        192
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testWriteToLarge(int)')": [
                        203,
                        209,
                        210,
                        228
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileBelowThreshold(int)')": [
                        243,
                        244,
                        245,
                        247,
                        248,
                        249,
                        250
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileAboveThreshold(int)')": [
                        266,
                        267,
                        268,
                        270,
                        271,
                        272,
                        273
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileAboveThresholdPrefixOnly(int)')": [
                        299,
                        300,
                        301,
                        303,
                        304,
                        305,
                        306
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileError')": [
                        332,
                        333,
                        334
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'verifyResultFile(File)')": [
                        347,
                        357,
                        359,
                        362,
                        364
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ProxyWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_close')": [
                        261
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_close')": [
                        261
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWithSingleByteWrite(String,String)')": [
                        45,
                        46,
                        47,
                        49
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWithBufferedWrite(String,String)')": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        63
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testFlush')": [
                        133,
                        134,
                        135,
                        136,
                        137,
                        138
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWriteImmediately')": [
                        144,
                        145,
                        146,
                        147
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWithSingleByteWrite(String,String)')": [
                        45,
                        46,
                        47,
                        48
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWithBufferedWrite(String,String)')": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testFlush')": [
                        133,
                        134,
                        135,
                        136,
                        137
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', None)": [
                        138
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWriteImmediately')": [
                        144,
                        145,
                        146
                    ],
                    "(None, None)": [
                        147
                    ]
                }
            }
        }
    },
    "06f76d5339181638a7ac69c15d32dafdf3216c47": {
        "authored_data": "2020 May 05 19:51",
        "commit.message": "Use try-with-resources and format to 120 line length.",
        "commit.author.name": "Gary Gregory",
        "pcid": "8937ea3e069cda91b4d85c89d7f8448ee0810c4f",
        "changes": {
            "src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testMagicNumberFileFilterBytes')": [
                        1122,
                        1123,
                        1124,
                        1125,
                        1133,
                        1134,
                        1135,
                        1136,
                        1148
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testMagicNumberFileFilterBytesOffset')": [
                        1159,
                        1167,
                        1168,
                        1169,
                        1170,
                        1173,
                        1174,
                        1175,
                        1176,
                        1177,
                        1181,
                        1182,
                        1188,
                        1189
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testMagicNumberFileFilterString')": [
                        1198,
                        1199,
                        1200,
                        1201,
                        1209,
                        1210,
                        1211,
                        1212
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testMagicNumberFileFilterStringOffset')": [
                        1239,
                        1240,
                        1241,
                        1242,
                        1245,
                        1246,
                        1247,
                        1248,
                        1249,
                        1253,
                        1254,
                        1260,
                        1261
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testMagicNumberFileFilterBytes')": [
                        1122,
                        1123,
                        1131,
                        1132,
                        1133,
                        1134
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testMagicNumberFileFilterBytesOffset')": [
                        1156,
                        1164,
                        1165,
                        1166,
                        1167,
                        1170,
                        1171,
                        1172,
                        1176,
                        1182
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testMagicNumberFileFilterString')": [
                        1191,
                        1192,
                        1200,
                        1201,
                        1202,
                        1203
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testMagicNumberFileFilterStringOffset')": [
                        1230,
                        1231,
                        1232,
                        1233,
                        1236,
                        1237,
                        1238,
                        1242,
                        1248
                    ]
                }
            }
        }
    },
    "8937ea3e069cda91b4d85c89d7f8448ee0810c4f": {
        "authored_data": "2020 May 05 19:48",
        "commit.message": "Clean ups.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "ee664f09a49428a39bdc4fb9d891cb4e340f7767",
        "changes": {
            "src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTestCase.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        25,
                        26,
                        29,
                        30
                    ],
                    "('org.apache.commons.io#FileUtilsCopyDirectoryToDirectoryTestCase', 'copyDirectoryToDirectoryThrowsIllegalExceptionWithCorrectMessageWhenSrcDirIsNotDirectory')": [
                        40
                    ],
                    "('org.apache.commons.io#FileUtilsCopyDirectoryToDirectoryTestCase', 'copyDirectoryToDirectoryThrowsIllegalArgumentExceptionWithCorrectMessageWhenDstDirIsNotDirectory')": [
                        49
                    ],
                    "('org.apache.commons.io#FileUtilsCopyDirectoryToDirectoryTestCase', 'copyDirectoryToDirectoryThrowsNullPointerExceptionWithCorrectMessageWhenSrcDirIsNull')": [
                        59,
                        63
                    ],
                    "('org.apache.commons.io#FileUtilsCopyDirectoryToDirectoryTestCase', 'copyDirectoryToDirectoryThrowsNullPointerExceptionWithCorrectMessageWhenDstDirIsNull')": [
                        67,
                        70
                    ],
                    "('org.apache.commons.io#FileUtilsCopyDirectoryToDirectoryTestCase', 'assertExceptionTypeAndMessage(File,File,Class,String)')": [
                        74
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        25,
                        26,
                        29,
                        30
                    ],
                    "('org.apache.commons.io#FileUtilsCopyDirectoryToDirectoryTestCase', 'copyDirectoryToDirectoryThrowsIllegalExceptionWithCorrectMessageWhenSrcDirIsNotDirectory')": [
                        40,
                        41
                    ],
                    "('org.apache.commons.io#FileUtilsCopyDirectoryToDirectoryTestCase', 'copyDirectoryToDirectoryThrowsIllegalArgumentExceptionWithCorrectMessageWhenDstDirIsNotDirectory')": [
                        50,
                        51
                    ],
                    "('org.apache.commons.io#FileUtilsCopyDirectoryToDirectoryTestCase', 'copyDirectoryToDirectoryThrowsNullPointerExceptionWithCorrectMessageWhenSrcDirIsNull')": [
                        61,
                        65
                    ],
                    "('org.apache.commons.io#FileUtilsCopyDirectoryToDirectoryTestCase', 'copyDirectoryToDirectoryThrowsNullPointerExceptionWithCorrectMessageWhenDstDirIsNull')": [
                        69,
                        72
                    ],
                    "('org.apache.commons.io#FileUtilsCopyDirectoryToDirectoryTestCase', 'assertExceptionTypeAndMessage(File,File,Class,String)')": [
                        76,
                        77
                    ]
                }
            }
        }
    }
}