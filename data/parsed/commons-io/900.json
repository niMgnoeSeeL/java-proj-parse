{
    "b47d312ad8689841983e0548569b28dc40d31157": {
        "authored_data": "2021 Jan 29 03:41",
        "commit.message": "Supress warning, rename params.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "c09c054a29ae1fead7298203a07c7eed1b8ccf65",
        "changes": {
            "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java": {
                "old": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', None)": [
                        144,
                        147,
                        148,
                        171,
                        178,
                        182,
                        268,
                        273,
                        275,
                        302,
                        312,
                        318,
                        351,
                        360,
                        362
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', 'doRawStream(InputStream)')": [
                        416,
                        418
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', 'doHttpStream(InputStream,String,boolean)')": [
                        426,
                        428
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', 'prepareReader(InputStream,String)')": [
                        439,
                        441
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', None)": [
                        132,
                        145,
                        148,
                        149,
                        172,
                        179,
                        183,
                        269,
                        274,
                        276,
                        303,
                        313,
                        319,
                        352,
                        361,
                        363
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', 'doRawStream(InputStream)')": [
                        417,
                        419
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', 'doHttpStream(InputStream,String,boolean)')": [
                        427,
                        429
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', 'prepareReader(InputStream,String)')": [
                        440,
                        442
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderException.java": {
                "old": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReaderException', None)": [
                        36,
                        67,
                        70,
                        72
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReaderException', 'getInputStream')": [
                        82
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReaderException', None)": [
                        36,
                        67,
                        70,
                        72
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReaderException', 'getInputStream')": [
                        82
                    ]
                }
            }
        }
    },
    "c09c054a29ae1fead7298203a07c7eed1b8ccf65": {
        "authored_data": "2021 Jan 29 02:20",
        "commit.message": "Reuse EOF constant.\n\nJavadoc tweaks. Format to max line length. Simplify.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "2abde6902e20ed4f6e83ed0456a5ccc50eddc32d",
        "changes": {
            "src/main/java/org/apache/commons/io/CopyUtils.java": {
                "old": {
                    "('org.apache.commons.io#CopyUtils', None)": [
                        125,
                        135,
                        150,
                        165,
                        188,
                        213,
                        232,
                        358
                    ],
                    "('org.apache.commons.io#CopyUtils', 'copy(InputStream,OutputStream)')": [
                        176
                    ],
                    "('org.apache.commons.io#CopyUtils', 'copy(Reader,Writer)')": [
                        201
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19
                    ],
                    "('org.apache.commons.io#CopyUtils', None)": [
                        127,
                        137,
                        152,
                        167,
                        190,
                        215,
                        234,
                        360
                    ],
                    "('org.apache.commons.io#CopyUtils', 'copy(InputStream,OutputStream)')": [
                        178
                    ],
                    "('org.apache.commons.io#CopyUtils', 'copy(Reader,Writer)')": [
                        203
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', None)": [
                        856
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', None)": [
                        856
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/AbstractCharacterFilterReader.java": {
                "old": {
                    "('org.apache.commons.io.input#AbstractCharacterFilterReader', 'read(char,int,int)')": [
                        59,
                        60
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19
                    ],
                    "('org.apache.commons.io.input#AbstractCharacterFilterReader', 'read(char,int,int)')": [
                        61,
                        62
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/BoundedReader.java": {
                "old": {
                    "('org.apache.commons.io.input#BoundedReader', None)": [
                        105
                    ],
                    "('org.apache.commons.io.input#BoundedReader', 'read')": [
                        113,
                        117
                    ],
                    "('org.apache.commons.io.input#BoundedReader', 'read(char,int,int)')": [
                        138,
                        139
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.io.input#BoundedReader', None)": [
                        107
                    ],
                    "('org.apache.commons.io.input#BoundedReader', 'read')": [
                        115,
                        119
                    ],
                    "('org.apache.commons.io.input#BoundedReader', 'read(char,int,int)')": [
                        140,
                        141
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/BufferedFileChannelInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#BufferedFileChannelInputStream', 'read')": [
                        186
                    ],
                    "('org.apache.commons.io.input#BufferedFileChannelInputStream', 'read(byte,int,int)')": [
                        197
                    ]
                },
                "new": {
                    "(None, None)": [
                        15,
                        16
                    ],
                    "('org.apache.commons.io.input#BufferedFileChannelInputStream', 'read')": [
                        188
                    ],
                    "('org.apache.commons.io.input#BufferedFileChannelInputStream', 'read(byte,int,int)')": [
                        199
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ObservableInputStream.java": {
                "old": {
                    "(None, None)": [
                        26,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        286
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', None)": [
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        96,
                        97,
                        98,
                        99,
                        100,
                        108,
                        109,
                        110,
                        111,
                        116,
                        117,
                        124,
                        125,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        253,
                        275,
                        276,
                        277,
                        278
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'add(Observer)')": [
                        118,
                        119
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'remove(Observer)')": [
                        126,
                        127
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read')": [
                        148
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read(byte)')": [
                        157,
                        161,
                        167,
                        170
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read(byte,int,int)')": [
                        176,
                        180,
                        186,
                        189
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'noteDataBytes(byte,int,int)')": [
                        202,
                        203,
                        204
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'noteDataByte(int)')": [
                        224,
                        225,
                        226
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'noteError(IOException)')": [
                        237,
                        238,
                        239
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'consume')": [
                        282,
                        283,
                        284,
                        285
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        289
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', None)": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        84,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        107,
                        108,
                        109,
                        110,
                        111,
                        116,
                        117,
                        118,
                        125,
                        126,
                        127,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        257,
                        258,
                        259,
                        281,
                        282,
                        283,
                        284
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'add(Observer)')": [
                        119,
                        120
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'remove(Observer)')": [
                        128,
                        129
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read')": [
                        150
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read(byte)')": [
                        159,
                        163,
                        169,
                        172
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read(byte,int,int)')": [
                        178,
                        182,
                        188,
                        191
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'noteDataBytes(byte,int,int)')": [
                        204,
                        205,
                        206
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'noteDataByte(int)')": [
                        227,
                        228,
                        229
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'noteError(IOException)')": [
                        240,
                        241,
                        242
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'consume')": [
                        288
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/QueueInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#QueueInputStream', 'read')": [
                        94
                    ]
                },
                "new": {
                    "(None, None)": [
                        18,
                        19
                    ],
                    "('org.apache.commons.io.input#QueueInputStream', 'read')": [
                        96
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ReadAheadInputStream', 'read')": [
                        245
                    ],
                    "('org.apache.commons.io.input#ReadAheadInputStream', 'read(byte,int,int)')": [
                        267
                    ]
                },
                "new": {
                    "(None, None)": [
                        16,
                        17
                    ],
                    "('org.apache.commons.io.input#ReadAheadInputStream', 'read')": [
                        247
                    ],
                    "('org.apache.commons.io.input#ReadAheadInputStream', 'read(byte,int,int)')": [
                        269
                    ]
                }
            }
        }
    },
    "2abde6902e20ed4f6e83ed0456a5ccc50eddc32d": {
        "authored_data": "2021 Jan 29 00:20",
        "commit.message": "Javadoc.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "6cad188fba5f5af4027f262a1d704e74fac0ca7c",
        "changes": {
            "src/main/java/org/apache/commons/io/FileSystemUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileSystemUtils', None)": [
                        471,
                        472,
                        473
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileSystemUtils', None)": [
                        471,
                        472
                    ]
                }
            }
        }
    },
    "6cad188fba5f5af4027f262a1d704e74fac0ca7c": {
        "authored_data": "2021 Jan 29 00:19",
        "commit.message": "Javadoc.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "6d831176b7555438eefaa0757b2d957d88cdc48c",
        "changes": {
            "src/main/java/org/apache/commons/io/FilenameUtils.java": {
                "old": {
                    "('org.apache.commons.io#FilenameUtils', None)": [
                        534,
                        535
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FilenameUtils', None)": [
                        534
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "old": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        1483,
                        2433,
                        2607,
                        2654,
                        2672,
                        2692
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        1483,
                        2433,
                        2607,
                        2654,
                        2672,
                        2692
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/BoundedReader.java": {
                "old": {
                    "('org.apache.commons.io.input#BoundedReader', None)": [
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#BoundedReader', None)": [
                        54
                    ]
                }
            }
        }
    },
    "6d831176b7555438eefaa0757b2d957d88cdc48c": {
        "authored_data": "2021 Jan 29 00:14",
        "commit.message": "Add '@SuppressWarnings(\"unused\") // Possibly thrown from subclasses' to\neliminate compiler warnings.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "ebdaa4a9f1ada278abbb726873ed94f0ce985bb1",
        "changes": {
            "src/main/java/org/apache/commons/io/DirectoryWalker.java": {
                "new": {
                    "('org.apache.commons.io#DirectoryWalker', None)": [
                        445,
                        483,
                        505,
                        523,
                        542,
                        559,
                        575,
                        592,
                        607
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ObservableInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ObservableInputStream', None)": [
                        51,
                        52,
                        65,
                        66,
                        76,
                        77,
                        84,
                        85,
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ObservableInputStream', None)": [
                        51,
                        52,
                        53,
                        66,
                        67,
                        68,
                        78,
                        79,
                        80,
                        87,
                        88,
                        89,
                        97
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ProxyInputStream.java": {
                "new": {
                    "('org.apache.commons.io.input#ProxyInputStream', None)": [
                        200,
                        222
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ProxyReader.java": {
                "new": {
                    "('org.apache.commons.io.input#ProxyReader', None)": [
                        226,
                        248
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java": {
                "new": {
                    "('org.apache.commons.io.monitor#FileAlterationObserver', None)": [
                        277,
                        289
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/ProxyCollectionWriter.java": {
                "new": {
                    "('org.apache.commons.io.output#ProxyCollectionWriter', None)": [
                        67,
                        144
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/ProxyOutputStream.java": {
                "new": {
                    "('org.apache.commons.io.output#ProxyOutputStream', None)": [
                        133,
                        152
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/ProxyWriter.java": {
                "new": {
                    "('org.apache.commons.io.output#ProxyWriter', None)": [
                        225,
                        245
                    ]
                }
            }
        }
    },
    "ebdaa4a9f1ada278abbb726873ed94f0ce985bb1": {
        "authored_data": "2021 Jan 29 00:05",
        "commit.message": "Javadoc.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "c48ccaf1e60eb91b7849cba8d081f71bb9da630d",
        "changes": {
            "src/main/java/org/apache/commons/io/input/ObservableInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ObservableInputStream', None)": [
                        51,
                        65,
                        76,
                        84,
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ObservableInputStream', None)": [
                        51,
                        65,
                        76,
                        84,
                        93
                    ]
                }
            }
        }
    },
    "c48ccaf1e60eb91b7849cba8d081f71bb9da630d": {
        "authored_data": "2021 Jan 28 20:00",
        "commit.message": "Update some exceptions to UncheckedIOException.\n\nInspired by Boris Unckel's #195 GH PR.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "ddb119b95d822b7338c9156d5f8e8191d1bba889",
        "changes": {
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', 'cleanDirectoryOnExit(File)')": [
                        355
                    ],
                    "('org.apache.commons.io#FileUtils', 'iterateFiles(File,String,boolean)')": [
                        1925
                    ],
                    "('org.apache.commons.io#FileUtils', None)": [
                        1989
                    ],
                    "('org.apache.commons.io#FileUtils', 'lastModifiedUnchecked(File)')": [
                        1999
                    ],
                    "('org.apache.commons.io#FileUtils', 'listFiles(File,IOFileFilter,IOFileFilter)')": [
                        2133
                    ],
                    "('org.apache.commons.io#FileUtils', 'listFiles(File,String,boolean)')": [
                        2151
                    ],
                    "('org.apache.commons.io#FileUtils', 'listFilesAndDirs(File,IOFileFilter,IOFileFilter)')": [
                        2182
                    ]
                },
                "new": {
                    "(None, None)": [
                        30
                    ],
                    "('org.apache.commons.io#FileUtils', 'cleanDirectoryOnExit(File)')": [
                        356
                    ],
                    "('org.apache.commons.io#FileUtils', 'iterateFiles(File,String,boolean)')": [
                        1926
                    ],
                    "('org.apache.commons.io#FileUtils', None)": [
                        1990
                    ],
                    "('org.apache.commons.io#FileUtils', 'lastModifiedUnchecked(File)')": [
                        2000
                    ],
                    "('org.apache.commons.io#FileUtils', 'listFiles(File,IOFileFilter,IOFileFilter)')": [
                        2134
                    ],
                    "('org.apache.commons.io#FileUtils', 'listFiles(File,String,boolean)')": [
                        2152
                    ],
                    "('org.apache.commons.io#FileUtils', 'listFilesAndDirs(File,IOFileFilter,IOFileFilter)')": [
                        2183
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/file/PathUtils.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtils', None)": [
                        865,
                        869,
                        870,
                        871
                    ],
                    "('org.apache.commons.io.file#PathUtils', 'readBasicFileAttributesQuietly(Path)')": [
                        872,
                        876
                    ],
                    "('org.apache.commons.io.file#PathUtils', 'walk(Path,PathFilter,int,boolean,FileVisitOption)')": [
                        1049
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.io.file#PathUtils', None)": [
                        866,
                        870,
                        871,
                        872
                    ],
                    "('org.apache.commons.io.file#PathUtils', 'readBasicFileAttributesUnchecked(Path)')": [
                        873,
                        877
                    ],
                    "('org.apache.commons.io.file#PathUtils', 'walk(Path,PathFilter,int,boolean,FileVisitOption)')": [
                        1050
                    ]
                }
            }
        }
    },
    "ddb119b95d822b7338c9156d5f8e8191d1bba889": {
        "authored_data": "2021 Jan 28 19:25",
        "commit.message": "Better NPE message.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "14e02dfe7e33b780ed3ac521018446fda60aa1a8",
        "changes": {
            "src/main/java/org/apache/commons/io/filefilter/FileEqualsFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#FileEqualsFileFilter', None)": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#FileEqualsFileFilter', None)": [
                        44
                    ]
                }
            }
        }
    },
    "14e02dfe7e33b780ed3ac521018446fda60aa1a8": {
        "authored_data": "2021 Jan 28 18:05",
        "commit.message": "Refactor to avoid creating a new ArrayList on all API calls.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "af58d18cb3c0553d8c3c0961d4f68a0851f349ab",
        "changes": {
            "src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java": {
                "old": {
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(char)')": [
                        78,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(CharSequence)')": [
                        98,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(CharSequence,int,int)')": [
                        119,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'close')": [
                        139,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'flush')": [
                        164,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(char,int,int)')": [
                        193,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', None)": [
                        207,
                        208,
                        209,
                        210
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(char)')": [
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(int)')": [
                        236,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(String)')": [
                        255,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(String,int,int)')": [
                        284,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#FilterCollectionWriter', None)": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        90,
                        91,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        206,
                        207,
                        208,
                        224
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'add(List,int,IOException)')": [
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(char)')": [
                        94,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(CharSequence)')": [
                        114,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(CharSequence,int,int)')": [
                        135,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'close')": [
                        155,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'flush')": [
                        180,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'notEmpty(List)')": [
                        204,
                        205
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(char)')": [
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(char,int,int)')": [
                        238,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(int)')": [
                        262,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(String)')": [
                        281,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(String,int,int)')": [
                        310,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322
                    ]
                }
            }
        }
    },
    "af58d18cb3c0553d8c3c0961d4f68a0851f349ab": {
        "authored_data": "2021 Jan 28 16:47",
        "commit.message": "Add and use IOExceptionList(String, List).\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "1f2c9a1d221526528cd50ed93c93526df0f336a2",
        "changes": {
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', 'cleanDirectory(File)')": [
                        329
                    ],
                    "('org.apache.commons.io#FileUtils', 'cleanDirectoryOnExit(File)')": [
                        355
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', 'cleanDirectory(File)')": [
                        329
                    ],
                    "('org.apache.commons.io#FileUtils', 'cleanDirectoryOnExit(File)')": [
                        355
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/IOExceptionList.java": {
                "old": {
                    "('org.apache.commons.io#IOExceptionList', None)": [
                        44,
                        45,
                        46,
                        50,
                        52,
                        53
                    ],
                    "('org.apache.commons.io#IOExceptionList', 'getCauseList')": [
                        55,
                        56
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOExceptionList', None)": [
                        44,
                        48,
                        50,
                        51,
                        52,
                        54,
                        55,
                        56,
                        83,
                        84,
                        85,
                        86,
                        87,
                        90,
                        91,
                        92
                    ],
                    "('org.apache.commons.io#IOExceptionList', 'getCauseList')": [
                        88,
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/file/PathUtils.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtils', 'setReadOnly(Path,boolean,LinkOption)')": [
                        943
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtils', 'setReadOnly(Path,boolean,LinkOption)')": [
                        943
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java": {
                "old": {
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(char)')": [
                        91
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(CharSequence)')": [
                        111
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(CharSequence,int,int)')": [
                        132
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'close')": [
                        152
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'flush')": [
                        177
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(char,int,int)')": [
                        206
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(char)')": [
                        225
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(int)')": [
                        249
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(String)')": [
                        268
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(String,int,int)')": [
                        297
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(char)')": [
                        91
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(CharSequence)')": [
                        111
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(CharSequence,int,int)')": [
                        132
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'close')": [
                        152
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'flush')": [
                        177
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(char,int,int)')": [
                        206
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(char)')": [
                        225
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(int)')": [
                        249
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(String)')": [
                        268
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(String,int,int)')": [
                        297
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/IOExceptionListTestCase.java": {
                "new": {
                    "(None, None)": [
                        32,
                        33,
                        34
                    ],
                    "('org.apache.commons.io#IOExceptionListTestCase', 'testCause')": [
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49
                    ],
                    "('org.apache.commons.io#IOExceptionListTestCase', None)": [
                        50,
                        51,
                        52
                    ],
                    "('org.apache.commons.io#IOExceptionListTestCase', 'testMessageCause')": [
                        53,
                        54,
                        55,
                        56,
                        57,
                        58
                    ]
                }
            }
        }
    }
}