{
    "daa26885ffec2671fc6211f633d912d3174bef19": {
        "authored_data": "2022 Jul 21 20:34",
        "commit.message": "Internal refactoring",
        "commit.author.name": "Gary Gregory",
        "pcid": "aa73cb8c3c95038daeba90b5b43e5c63080a8f8c",
        "changes": {
            "src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java": {
                "old": [
                    "JavaSyntaxError",
                    "src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                    [
                        27,
                        28,
                        30,
                        31,
                        33,
                        34,
                        35,
                        36,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        69,
                        71,
                        72,
                        73,
                        74,
                        75,
                        83,
                        84,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95
                    ]
                ],
                "new": [
                    "JavaSyntaxError",
                    "src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java",
                    [
                        22,
                        28,
                        30,
                        31,
                        33,
                        34,
                        35,
                        54,
                        55,
                        64,
                        72,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81
                    ]
                ]
            }
        }
    },
    "aa73cb8c3c95038daeba90b5b43e5c63080a8f8c": {
        "authored_data": "2022 Jul 21 16:35",
        "commit.message": "More precise exceptions",
        "commit.author.name": "Gary Gregory",
        "pcid": "63771b3f142c2ac42aca8b864d3df03aa2a46b94",
        "changes": {
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "old": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        394
                    ],
                    "('org.apache.commons.io#IOUtils', 'close(Closeable)')": [
                        397
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        394
                    ],
                    "('org.apache.commons.io#IOUtils', 'close(Closeable)')": [
                        397
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/IOUtilsTest.java": {
                "old": {
                    "('org.apache.commons.io#IOUtilsTest', 'testCloseMulti')": [
                        341,
                        342
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtilsTest', 'testCloseMulti')": [
                        341
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/AbstractInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#AbstractInputStreamTest', 'tearDown')": [
                        56
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.io.input#AbstractInputStreamTest', 'tearDown')": [
                        57
                    ]
                }
            }
        }
    },
    "63771b3f142c2ac42aca8b864d3df03aa2a46b94": {
        "authored_data": "2022 Jul 21 12:49",
        "commit.message": "Internal refactoring",
        "commit.author.name": "Gary Gregory",
        "pcid": "3ddd67183a6241ee628251bb60d37a7d304963e0",
        "changes": {
            "src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', None)": [
                        49,
                        50,
                        51,
                        52,
                        53,
                        56
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'notNull')": [
                        54,
                        55
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(char)')": [
                        88,
                        89
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(CharSequence)')": [
                        94,
                        95
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(CharSequence,int,int)')": [
                        100,
                        101
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'forAllWriters(IOConsumer)')": [
                        119
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'writers')": [
                        172
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(char)')": [
                        79
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(CharSequence)')": [
                        84
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(CharSequence,int,int)')": [
                        89
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'forAllWriters(IOConsumer)')": [
                        107,
                        109
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'writers')": [
                        161
                    ]
                }
            }
        }
    },
    "71cbc700f73b5184994638740461958151919b63": {
        "authored_data": "2022 Jul 20 15:35",
        "commit.message": "[IO-776] Fix parameters to requireNonNull call\n\nCurrently, the call checks that the literal string `\"prefix\"` is\nnon-null, which of course it is :)\n",
        "commit.author.name": "Chris Povirk",
        "pcid": "166dea37e810fcfa9c72cf1f107fd38cfb432486",
        "changes": {
            "src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#DeferredFileOutputStream', None)": [
                        144
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#DeferredFileOutputStream', None)": [
                        144
                    ]
                }
            }
        }
    },
    "9d5523504d1263f7c683dc396fd8c1930a7c3a3a": {
        "authored_data": "2022 Jul 20 18:22",
        "commit.message": "Format nit.",
        "commit.author.name": "Gary Gregory",
        "pcid": "495f4651046e20f6cc3ae19789e8aff6017d808a",
        "changes": {
            "src/main/java/org/apache/commons/io/function/IOFunction.java": {
                "old": {
                    "(None, None)": [
                        127
                    ]
                }
            }
        }
    },
    "495f4651046e20f6cc3ae19789e8aff6017d808a": {
        "authored_data": "2022 Jul 20 17:12",
        "commit.message": "Use forEach()",
        "commit.author.name": "Gary Gregory",
        "pcid": "323d376b4a934a5a6ebdc552dc923db9e267e569",
        "changes": {
            "src/test/java/org/apache/commons/io/FileUtilsTest.java": {
                "old": {
                    "('org.apache.commons.io#FileUtilsTest', 'testIterateFilesOnlyNoDirs')": [
                        1942,
                        1943,
                        1944
                    ],
                    "('org.apache.commons.io#FileUtilsTest', None)": [
                        1945
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtilsTest', 'testIterateFilesOnlyNoDirs')": [
                        1942
                    ]
                }
            }
        }
    },
    "323d376b4a934a5a6ebdc552dc923db9e267e569": {
        "authored_data": "2022 Jul 20 17:03",
        "commit.message": "Add and reuse IOConsumer forAll(*), forEach(*)",
        "commit.author.name": "Gary Gregory",
        "pcid": "166dea37e810fcfa9c72cf1f107fd38cfb432486",
        "changes": {
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', 'cleanDirectory(File)')": [
                        347
                    ],
                    "('org.apache.commons.io#FileUtils', 'cleanDirectoryOnExit(File)')": [
                        360
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', 'cleanDirectory(File)')": [
                        347
                    ],
                    "('org.apache.commons.io#FileUtils', 'cleanDirectoryOnExit(File)')": [
                        360
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "old": {
                    "('org.apache.commons.io#IOUtils', 'close(Closeable)')": [
                        398
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtils', 'close(Closeable)')": [
                        398
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/function/IOConsumer.java": {
                "old": {
                    "(None, None)": [
                        21,
                        44,
                        52,
                        57,
                        70,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92
                    ]
                },
                "new": {
                    "(None, None)": [
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        90,
                        95,
                        108
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/function/IOStreams.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.io.function#IOStreams', 'forEach(Stream,IOConsumer)')": [
                        36,
                        37
                    ],
                    "('org.apache.commons.io.function#IOStreams', 'forEachIndexed(Stream,IOConsumer,BiFunction)')": [
                        40,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        57,
                        58,
                        59
                    ],
                    "('org.apache.commons.io.function#IOStreams', None)": [
                        60,
                        63
                    ],
                    "('org.apache.commons.io.function#IOStreams', 'of(Collection)')": [
                        71,
                        72
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        130
                    ],
                    "('org.apache.commons.io.function#IOStreams', None)": [
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        49,
                        54,
                        55,
                        76,
                        77,
                        78,
                        82,
                        85,
                        95,
                        96,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        126,
                        127
                    ],
                    "('org.apache.commons.io.function#IOStreams', 'accept(IOConsumer,T)')": [
                        44,
                        45,
                        46,
                        47,
                        48
                    ],
                    "('org.apache.commons.io.function#IOStreams', 'forAll(Stream,IOConsumer)')": [
                        52,
                        53
                    ],
                    "('org.apache.commons.io.function#IOStreams', 'forAll(Stream,IOConsumer,BiFunction)')": [
                        56,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75
                    ],
                    "('org.apache.commons.io.function#IOStreams', 'forEach(Stream,IOConsumer)')": [
                        79,
                        80,
                        81
                    ],
                    "('org.apache.commons.io.function#IOStreams', 'of(Iterable)')": [
                        93,
                        94
                    ],
                    "('org.apache.commons.io.function#IOStreams', 'of(Stream)')": [
                        97,
                        98
                    ],
                    "('org.apache.commons.io.function#IOStreams', 'rethrow(Throwable)')": [
                        124,
                        125
                    ],
                    "('org.apache.commons.io.function#IOStreams', 'toIOConsumer(IOConsumer)')": [
                        128,
                        129
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ObservableInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ObservableInputStream', 'forEachObserver(IOConsumer)')": [
                        178
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ObservableInputStream', 'forEachObserver(IOConsumer)')": [
                        178
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java": {
                "old": {
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(char)')": [
                        88
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(CharSequence)')": [
                        94
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(CharSequence,int,int)')": [
                        100
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'close')": [
                        106
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'flush')": [
                        116
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'forEachWriter(IOConsumer)')": [
                        119,
                        120
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(char)')": [
                        125
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(char,int,int)')": [
                        139
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(int)')": [
                        149
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(String)')": [
                        154
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(String,int,int)')": [
                        168
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(char)')": [
                        88
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(CharSequence)')": [
                        94
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'append(CharSequence,int,int)')": [
                        100
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'close')": [
                        106
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'flush')": [
                        116
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'forAllWriters(IOConsumer)')": [
                        119,
                        120
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(char)')": [
                        125
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(char,int,int)')": [
                        139
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(int)')": [
                        149
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(String)')": [
                        154
                    ],
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(String,int,int)')": [
                        168
                    ]
                }
            }
        }
    }
}