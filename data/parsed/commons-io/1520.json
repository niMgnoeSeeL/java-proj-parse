{
    "bcb3604177b7b86d740536138bde8d19e4668cf0": {
        "authored_data": "2018 Oct 10 10:09",
        "commit.message": "Performance Enhancement: Call toArray with Zero Array Size (closes #65)\n\ntoArray should, at least since Java 7, be used with new T[0] instead of size, since it is \"faster, safer, and contractually cleaner\" (https://shipilev.net/blog/2016/arrays-wisdom-ancients/#_conclusion)\n",
        "commit.author.name": "David Georg Reichelt",
        "pcid": "401eae64b3ad1ddc311feceacc3eb8514f87ab77",
        "changes": {
            "src/main/java/org/apache/commons/io/FilenameUtils.java": {
                "old": {
                    "('org.apache.commons.io#FilenameUtils', 'splitOnTokens(String)')": [
                        1497
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'isIPv6Address(String)')": [
                        1580
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FilenameUtils', 'splitOnTokens(String)')": [
                        1497
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'isIPv6Address(String)')": [
                        1580
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java": {
                "old": {
                    "('org.apache.commons.io.comparator#CompositeFileComparator', None)": [
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.io.comparator#CompositeFileComparator', None)": [
                        79
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'filter(IOFileFilter,File)')": [
                        92
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'filter(IOFileFilter,Iterable)')": [
                        123
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'filter(IOFileFilter,File)')": [
                        92
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'filter(IOFileFilter,Iterable)')": [
                        123
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#NameFileFilter', None)": [
                        129
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#NameFileFilter', None)": [
                        129
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#PrefixFileFilter', None)": [
                        137
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#PrefixFileFilter', None)": [
                        137
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#SuffixFileFilter', None)": [
                        138
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#SuffixFileFilter', None)": [
                        138
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#WildcardFileFilter', None)": [
                        137
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#WildcardFileFilter', None)": [
                        137
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#WildcardFilter', None)": [
                        96
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#WildcardFilter', None)": [
                        96
                    ]
                }
            }
        }
    },
    "401eae64b3ad1ddc311feceacc3eb8514f87ab77": {
        "authored_data": "2019 Dec 23 18:03",
        "commit.message": "[IO-458] Add a SequenceReader similar to java.io.SequenceInputStream.\n\nCheckstyle: Add missing Javadoc.",
        "commit.author.name": "Gary Gregory",
        "pcid": "46ab2532070e129ac54508bfb7a5be33a6b797bc",
        "changes": {
            "src/main/java/org/apache/commons/io/input/SequenceReader.java": {
                "new": {
                    "('org.apache.commons.io.input#SequenceReader', None)": [
                        67,
                        68,
                        69,
                        70,
                        71
                    ]
                }
            }
        }
    },
    "46ab2532070e129ac54508bfb7a5be33a6b797bc": {
        "authored_data": "2019 Dec 23 15:13",
        "commit.message": "[IO-458] Add a SequenceReader similar to java.io.SequenceInputStream.\n\nRefactor commmon code in a private method.",
        "commit.author.name": "Gary Gregory",
        "pcid": "972a5a41b54711cea3ddf94c61d4be3c416fbb43",
        "changes": {
            "src/main/java/org/apache/commons/io/input/SequenceReader.java": {
                "old": {
                    "('org.apache.commons.io.input#SequenceReader', None)": [
                        44
                    ],
                    "('org.apache.commons.io.input#SequenceReader', 'read')": [
                        78
                    ],
                    "('org.apache.commons.io.input#SequenceReader', 'read(char,int,int)')": [
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#SequenceReader', None)": [
                        44,
                        69,
                        70
                    ],
                    "('org.apache.commons.io.input#SequenceReader', 'nextReader')": [
                        67,
                        68
                    ],
                    "('org.apache.commons.io.input#SequenceReader', 'read')": [
                        82
                    ],
                    "('org.apache.commons.io.input#SequenceReader', 'read(char,int,int)')": [
                        105
                    ]
                }
            }
        }
    },
    "e46146c67026956d3f48d44be5c4df0fb78d5a42": {
        "authored_data": "2019 Dec 22 14:51",
        "commit.message": "Normalize on 'charsetName' as a parameter name since this is the named\nused in the JRE for Charset.forName(String).\n\n- Use 'charset' instead of 'encoding' Charset parameter names.\n- Fix 1 checkstyle issue.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "63fec37fe55f917bd72899808dd0dea5f3e81f62",
        "changes": {
            "src/main/java/org/apache/commons/io/Charsets.java": {
                "old": {
                    "('org.apache.commons.io#Charsets', None)": [
                        100
                    ],
                    "('org.apache.commons.io#Charsets', 'toCharset(String)')": [
                        106,
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.io#Charsets', None)": [
                        100
                    ],
                    "('org.apache.commons.io#Charsets', 'toCharset(String)')": [
                        106,
                        107
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "(None, None)": [
                        37
                    ],
                    "('org.apache.commons.io#FileUtils', None)": [
                        390,
                        440,
                        1847,
                        2246,
                        2261,
                        2292,
                        2307,
                        2776,
                        2789,
                        2808,
                        2824,
                        2985,
                        3002,
                        3025,
                        3043,
                        3097,
                        3112,
                        3134,
                        3147
                    ],
                    "('org.apache.commons.io#FileUtils', 'lineIterator(File,String)')": [
                        1852,
                        1856
                    ],
                    "('org.apache.commons.io#FileUtils', 'readFileToString(File,Charset)')": [
                        2251,
                        2253
                    ],
                    "('org.apache.commons.io#FileUtils', 'readFileToString(File,String)')": [
                        2268,
                        2269
                    ],
                    "('org.apache.commons.io#FileUtils', 'readLines(File,Charset)')": [
                        2297,
                        2299
                    ],
                    "('org.apache.commons.io#FileUtils', 'readLines(File,String)')": [
                        2314,
                        2315
                    ],
                    "('org.apache.commons.io#FileUtils', 'write(File,CharSequence,Charset)')": [
                        2780,
                        2781
                    ],
                    "('org.apache.commons.io#FileUtils', 'write(File,CharSequence,Charset,boolean)')": [
                        2795,
                        2798
                    ],
                    "('org.apache.commons.io#FileUtils', 'write(File,CharSequence,String)')": [
                        2813,
                        2814
                    ],
                    "('org.apache.commons.io#FileUtils', 'write(File,CharSequence,String,boolean)')": [
                        2832,
                        2834
                    ],
                    "('org.apache.commons.io#FileUtils', 'writeLines(File,String,Collection)')": [
                        2991,
                        2993
                    ],
                    "('org.apache.commons.io#FileUtils', 'writeLines(File,String,Collection,boolean)')": [
                        3010,
                        3012
                    ],
                    "('org.apache.commons.io#FileUtils', 'writeLines(File,String,Collection,String)')": [
                        3032,
                        3034
                    ],
                    "('org.apache.commons.io#FileUtils', 'writeLines(File,String,Collection,String,boolean)')": [
                        3052,
                        3055
                    ],
                    "('org.apache.commons.io#FileUtils', 'writeStringToFile(File,String,Charset)')": [
                        3102,
                        3104
                    ],
                    "('org.apache.commons.io#FileUtils', 'writeStringToFile(File,String,Charset,boolean)')": [
                        3118,
                        3121
                    ],
                    "('org.apache.commons.io#FileUtils', 'writeStringToFile(File,String,String)')": [
                        3138,
                        3139
                    ],
                    "('org.apache.commons.io#FileUtils', 'writeStringToFile(File,String,String,boolean)')": [
                        3155,
                        3157
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', None)": [
                        389,
                        439,
                        1846,
                        2245,
                        2260,
                        2291,
                        2306,
                        2775,
                        2788,
                        2807,
                        2823,
                        2984,
                        3001,
                        3024,
                        3042,
                        3096,
                        3111,
                        3133,
                        3146
                    ],
                    "('org.apache.commons.io#FileUtils', 'lineIterator(File,String)')": [
                        1851,
                        1855
                    ],
                    "('org.apache.commons.io#FileUtils', 'readFileToString(File,Charset)')": [
                        2250,
                        2252
                    ],
                    "('org.apache.commons.io#FileUtils', 'readFileToString(File,String)')": [
                        2267,
                        2268
                    ],
                    "('org.apache.commons.io#FileUtils', 'readLines(File,Charset)')": [
                        2296,
                        2298
                    ],
                    "('org.apache.commons.io#FileUtils', 'readLines(File,String)')": [
                        2313,
                        2314
                    ],
                    "('org.apache.commons.io#FileUtils', 'write(File,CharSequence,Charset)')": [
                        2779,
                        2780
                    ],
                    "('org.apache.commons.io#FileUtils', 'write(File,CharSequence,Charset,boolean)')": [
                        2794,
                        2797
                    ],
                    "('org.apache.commons.io#FileUtils', 'write(File,CharSequence,String)')": [
                        2812,
                        2813
                    ],
                    "('org.apache.commons.io#FileUtils', 'write(File,CharSequence,String,boolean)')": [
                        2831,
                        2833
                    ],
                    "('org.apache.commons.io#FileUtils', 'writeLines(File,String,Collection)')": [
                        2990,
                        2992
                    ],
                    "('org.apache.commons.io#FileUtils', 'writeLines(File,String,Collection,boolean)')": [
                        3009,
                        3011
                    ],
                    "('org.apache.commons.io#FileUtils', 'writeLines(File,String,Collection,String)')": [
                        3031,
                        3033
                    ],
                    "('org.apache.commons.io#FileUtils', 'writeLines(File,String,Collection,String,boolean)')": [
                        3051,
                        3054
                    ],
                    "('org.apache.commons.io#FileUtils', 'writeStringToFile(File,String,Charset)')": [
                        3101,
                        3103
                    ],
                    "('org.apache.commons.io#FileUtils', 'writeStringToFile(File,String,Charset,boolean)')": [
                        3117,
                        3120
                    ],
                    "('org.apache.commons.io#FileUtils', 'writeStringToFile(File,String,String)')": [
                        3137,
                        3138
                    ],
                    "('org.apache.commons.io#FileUtils', 'writeStringToFile(File,String,String,boolean)')": [
                        3154,
                        3156
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "old": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        887,
                        912,
                        1017,
                        1049,
                        1396,
                        1430,
                        1741,
                        1763,
                        1847,
                        1867,
                        2306,
                        2330,
                        2434,
                        2458,
                        2508,
                        2524,
                        2555,
                        2571,
                        2608,
                        2644,
                        2668,
                        2730,
                        2775,
                        2832,
                        2855,
                        2898,
                        2922,
                        2978,
                        3001,
                        3057,
                        3079,
                        3137,
                        3249,
                        3282
                    ],
                    "('org.apache.commons.io#IOUtils', 'copy(InputStream,Writer,Charset)')": [
                        892,
                        894
                    ],
                    "('org.apache.commons.io#IOUtils', 'copy(InputStream,Writer,String)')": [
                        920,
                        922
                    ],
                    "('org.apache.commons.io#IOUtils', 'copy(Reader,OutputStream,Charset)')": [
                        1022,
                        1024
                    ],
                    "('org.apache.commons.io#IOUtils', 'copy(Reader,OutputStream,String)')": [
                        1057,
                        1059
                    ],
                    "('org.apache.commons.io#IOUtils', 'lineIterator(InputStream,Charset)')": [
                        1402,
                        1403
                    ],
                    "('org.apache.commons.io#IOUtils', 'lineIterator(InputStream,String)')": [
                        1439,
                        1440
                    ],
                    "('org.apache.commons.io#IOUtils', 'readLines(InputStream,Charset)')": [
                        1747,
                        1748
                    ],
                    "('org.apache.commons.io#IOUtils', 'readLines(InputStream,String)')": [
                        1772,
                        1773
                    ],
                    "('org.apache.commons.io#IOUtils', 'resourceToString(String,Charset)')": [
                        1853,
                        1854
                    ],
                    "('org.apache.commons.io#IOUtils', 'resourceToString(String,Charset,ClassLoader)')": [
                        1874,
                        1875
                    ],
                    "('org.apache.commons.io#IOUtils', 'toByteArray(Reader,Charset)')": [
                        2312,
                        2314
                    ],
                    "('org.apache.commons.io#IOUtils', 'toByteArray(Reader,String)')": [
                        2339,
                        2340
                    ],
                    "('org.apache.commons.io#IOUtils', 'toCharArray(InputStream,Charset)')": [
                        2440,
                        2443
                    ],
                    "('org.apache.commons.io#IOUtils', 'toCharArray(InputStream,String)')": [
                        2467,
                        2468
                    ],
                    "('org.apache.commons.io#IOUtils', 'toInputStream(CharSequence,Charset)')": [
                        2512,
                        2513
                    ],
                    "('org.apache.commons.io#IOUtils', 'toInputStream(CharSequence,String)')": [
                        2532,
                        2533
                    ],
                    "('org.apache.commons.io#IOUtils', 'toInputStream(String,Charset)')": [
                        2559,
                        2560
                    ],
                    "('org.apache.commons.io#IOUtils', 'toInputStream(String,String)')": [
                        2579,
                        2580
                    ],
                    "('org.apache.commons.io#IOUtils', 'toString(byte,String)')": [
                        2613,
                        2614
                    ],
                    "('org.apache.commons.io#IOUtils', 'toString(InputStream,Charset)')": [
                        2650,
                        2652
                    ],
                    "('org.apache.commons.io#IOUtils', 'toString(InputStream,String)')": [
                        2676,
                        2678
                    ],
                    "('org.apache.commons.io#IOUtils', 'toString(URI,String)')": [
                        2738,
                        2739
                    ],
                    "('org.apache.commons.io#IOUtils', 'toString(URL,String)')": [
                        2783,
                        2784
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(byte,Writer,Charset)')": [
                        2837,
                        2839
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(byte,Writer,String)')": [
                        2863,
                        2864
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(char,OutputStream,Charset)')": [
                        2903,
                        2905
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(char,OutputStream,String)')": [
                        2929,
                        2931
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(CharSequence,OutputStream,Charset)')": [
                        2983,
                        2986
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(CharSequence,OutputStream,String)')": [
                        3008,
                        3010
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(String,OutputStream,Charset)')": [
                        3062,
                        3064
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(String,OutputStream,String)')": [
                        3086,
                        3088
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(StringBuffer,OutputStream,String)')": [
                        3146,
                        3149
                    ],
                    "('org.apache.commons.io#IOUtils', 'writeLines(Collection,String,OutputStream,Charset)')": [
                        3255,
                        3262
                    ],
                    "('org.apache.commons.io#IOUtils', 'writeLines(Collection,String,OutputStream,String)')": [
                        3291,
                        3292
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        887,
                        912,
                        1017,
                        1049,
                        1396,
                        1430,
                        1741,
                        1763,
                        1847,
                        1867,
                        2306,
                        2330,
                        2434,
                        2458,
                        2508,
                        2524,
                        2555,
                        2571,
                        2608,
                        2644,
                        2668,
                        2730,
                        2775,
                        2832,
                        2855,
                        2898,
                        2922,
                        2978,
                        3001,
                        3057,
                        3079,
                        3137,
                        3249,
                        3282
                    ],
                    "('org.apache.commons.io#IOUtils', 'copy(InputStream,Writer,Charset)')": [
                        892,
                        894
                    ],
                    "('org.apache.commons.io#IOUtils', 'copy(InputStream,Writer,String)')": [
                        920,
                        922
                    ],
                    "('org.apache.commons.io#IOUtils', 'copy(Reader,OutputStream,Charset)')": [
                        1022,
                        1024
                    ],
                    "('org.apache.commons.io#IOUtils', 'copy(Reader,OutputStream,String)')": [
                        1057,
                        1059
                    ],
                    "('org.apache.commons.io#IOUtils', 'lineIterator(InputStream,Charset)')": [
                        1402,
                        1403
                    ],
                    "('org.apache.commons.io#IOUtils', 'lineIterator(InputStream,String)')": [
                        1439,
                        1440
                    ],
                    "('org.apache.commons.io#IOUtils', 'readLines(InputStream,Charset)')": [
                        1747,
                        1748
                    ],
                    "('org.apache.commons.io#IOUtils', 'readLines(InputStream,String)')": [
                        1772,
                        1773
                    ],
                    "('org.apache.commons.io#IOUtils', 'resourceToString(String,Charset)')": [
                        1853,
                        1854
                    ],
                    "('org.apache.commons.io#IOUtils', 'resourceToString(String,Charset,ClassLoader)')": [
                        1874,
                        1875
                    ],
                    "('org.apache.commons.io#IOUtils', 'toByteArray(Reader,Charset)')": [
                        2312,
                        2314
                    ],
                    "('org.apache.commons.io#IOUtils', 'toByteArray(Reader,String)')": [
                        2339,
                        2340
                    ],
                    "('org.apache.commons.io#IOUtils', 'toCharArray(InputStream,Charset)')": [
                        2440,
                        2443
                    ],
                    "('org.apache.commons.io#IOUtils', 'toCharArray(InputStream,String)')": [
                        2467,
                        2468
                    ],
                    "('org.apache.commons.io#IOUtils', 'toInputStream(CharSequence,Charset)')": [
                        2512,
                        2513
                    ],
                    "('org.apache.commons.io#IOUtils', 'toInputStream(CharSequence,String)')": [
                        2532,
                        2533
                    ],
                    "('org.apache.commons.io#IOUtils', 'toInputStream(String,Charset)')": [
                        2559,
                        2560
                    ],
                    "('org.apache.commons.io#IOUtils', 'toInputStream(String,String)')": [
                        2579,
                        2580
                    ],
                    "('org.apache.commons.io#IOUtils', 'toString(byte,String)')": [
                        2613,
                        2614
                    ],
                    "('org.apache.commons.io#IOUtils', 'toString(InputStream,Charset)')": [
                        2650,
                        2652
                    ],
                    "('org.apache.commons.io#IOUtils', 'toString(InputStream,String)')": [
                        2676,
                        2678
                    ],
                    "('org.apache.commons.io#IOUtils', 'toString(URI,String)')": [
                        2738,
                        2739
                    ],
                    "('org.apache.commons.io#IOUtils', 'toString(URL,String)')": [
                        2783,
                        2784
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(byte,Writer,Charset)')": [
                        2837,
                        2839
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(byte,Writer,String)')": [
                        2863,
                        2864
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(char,OutputStream,Charset)')": [
                        2903,
                        2905
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(char,OutputStream,String)')": [
                        2929,
                        2931
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(CharSequence,OutputStream,Charset)')": [
                        2983,
                        2986
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(CharSequence,OutputStream,String)')": [
                        3008,
                        3010
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(String,OutputStream,Charset)')": [
                        3062,
                        3064
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(String,OutputStream,String)')": [
                        3086,
                        3088
                    ],
                    "('org.apache.commons.io#IOUtils', 'write(StringBuffer,OutputStream,String)')": [
                        3146,
                        3149
                    ],
                    "('org.apache.commons.io#IOUtils', 'writeLines(Collection,String,OutputStream,Charset)')": [
                        3255,
                        3262
                    ],
                    "('org.apache.commons.io#IOUtils', 'writeLines(Collection,String,OutputStream,String)')": [
                        3291,
                        3292
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', None)": [
                        81,
                        95,
                        214,
                        221,
                        222
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', None)": [
                        81,
                        95,
                        214,
                        221,
                        222
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java": {
                "old": {
                    "('org.apache.commons.io.output#FileWriterWithEncoding', None)": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        106,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        211
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#FileWriterWithEncoding', None)": [
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        106,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        211
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/LockableFileWriter.java": {
                "old": {
                    "('org.apache.commons.io.output#LockableFileWriter', None)": [
                        140,
                        145,
                        146,
                        153,
                        160,
                        161,
                        168,
                        175,
                        200,
                        207,
                        216,
                        218,
                        260
                    ],
                    "('org.apache.commons.io.output#LockableFileWriter', 'initWriter(File,Charset,boolean)')": [
                        265,
                        269
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#LockableFileWriter', None)": [
                        140,
                        145,
                        146,
                        153,
                        160,
                        161,
                        168,
                        175,
                        200,
                        207,
                        216,
                        218,
                        260
                    ],
                    "('org.apache.commons.io.output#LockableFileWriter', 'initWriter(File,Charset,boolean)')": [
                        265,
                        269
                    ]
                }
            }
        }
    },
    "58d9d82879b1f4e24345cc825e70b7059791cf5e": {
        "authored_data": "2019 Nov 26 01:42",
        "commit.message": "Implement hashCode() and equals() on path counters.",
        "commit.author.name": "Gary Gregory",
        "pcid": "c1d7975ae3a6572ac15b934d86f2a8d0088a69ca",
        "changes": {
            "src/main/java/org/apache/commons/io/file/CountingPathVisitor.java": {
                "new": {
                    "('org.apache.commons.io.file#CountingPathVisitor', None)": [
                        68,
                        78,
                        79,
                        87,
                        88,
                        89
                    ],
                    "('org.apache.commons.io.file#CountingPathVisitor', 'equals(Object)')": [
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77
                    ],
                    "('org.apache.commons.io.file#CountingPathVisitor', 'hashCode')": [
                        90,
                        91
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/CountingPathVisitorTest.java": {
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.io.file#CountingPathVisitorTest', 'testCountEmptyFolder(CountingPathVisitor)')": [
                        41
                    ],
                    "('org.apache.commons.io.file#CountingPathVisitorTest', 'testCountFolders1FileSize0(CountingPathVisitor)')": [
                        56
                    ],
                    "('org.apache.commons.io.file#CountingPathVisitorTest', 'testCountFolders1FileSize1(CountingPathVisitor)')": [
                        67
                    ],
                    "('org.apache.commons.io.file#CountingPathVisitorTest', 'testCountFolders2FileSize2(CountingPathVisitor)')": [
                        78
                    ],
                    "('org.apache.commons.io.file#CountingPathVisitorTest', None)": [
                        81,
                        82
                    ],
                    "('org.apache.commons.io.file#CountingPathVisitorTest', 'checkZeroCounts(CountingPathVisitor)')": [
                        83,
                        84,
                        85
                    ]
                }
            }
        }
    },
    "c1d7975ae3a6572ac15b934d86f2a8d0088a69ca": {
        "authored_data": "2019 Nov 26 01:39",
        "commit.message": "Implement hashCode() and equals() on counters.",
        "commit.author.name": "Gary Gregory",
        "pcid": "416ce8d6e572e60e1cfaecdc482c55afb7df96dd",
        "changes": {
            "src/main/java/org/apache/commons/io/file/Counters.java": {
                "old": {
                    "('org.apache.commons.io.file#Counters', None)": [
                        119,
                        122,
                        123,
                        229,
                        232,
                        233
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#Counters', None)": [
                        119,
                        122,
                        123,
                        229,
                        232,
                        233
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/CountersEqualsAndHashCodeTest.java": {
                "new": {
                    "('org.apache.commons.io.file#CountersEqualsAndHashCodeTest', 'testLongCounterMixEquals')": [
                        91,
                        92,
                        93
                    ],
                    "('org.apache.commons.io.file#CountersEqualsAndHashCodeTest', None)": [
                        94,
                        95,
                        96,
                        120,
                        121
                    ],
                    "('org.apache.commons.io.file#CountersEqualsAndHashCodeTest', 'testMix')": [
                        122,
                        123
                    ],
                    "(None, None)": [
                        124
                    ]
                }
            }
        }
    },
    "416ce8d6e572e60e1cfaecdc482c55afb7df96dd": {
        "authored_data": "2019 Nov 26 01:28",
        "commit.message": "Implement hashCode() and equals() on counters.",
        "commit.author.name": "Gary Gregory",
        "pcid": "ef5b7a36875ec0c5691be77015b3a54515ef08a3",
        "changes": {
            "src/main/java/org/apache/commons/io/file/Counters.java": {
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.io.file#Counters', None)": [
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        86,
                        87,
                        88,
                        89,
                        90,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        142,
                        143,
                        144,
                        145,
                        146,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        249,
                        250,
                        251,
                        252,
                        253
                    ]
                }
            }
        }
    },
    "ef5b7a36875ec0c5691be77015b3a54515ef08a3": {
        "authored_data": "2019 Nov 25 20:02",
        "commit.message": "Clean ups.",
        "commit.author.name": "Gary Gregory",
        "pcid": "b0a9ab1b3cd4d295e082b59c2a2450b5b245fc3d",
        "changes": {
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', 'contentEqualsIgnoreEOL(File,File,String)')": [
                        474,
                        475,
                        476,
                        477,
                        478,
                        479
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ],
                    "('org.apache.commons.io#FileUtils', None)": [
                        390
                    ],
                    "('org.apache.commons.io#FileUtils', 'contentEqualsIgnoreEOL(File,File,String)')": [
                        476,
                        477
                    ]
                }
            }
        }
    }
}