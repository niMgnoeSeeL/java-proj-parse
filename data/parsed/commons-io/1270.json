{
    "2acd50bf440156d53418355f1571e4784a2b8a85": {
        "authored_data": "2020 Aug 18 19:47",
        "commit.message": "Add ReversedLinesFileReader.toString(int).\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "059a07c12cd5ba11ea6318777699fbf56e6103c1",
        "changes": {
            "src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', None)": [
                        205,
                        208,
                        210,
                        213,
                        217,
                        219,
                        221,
                        222
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', None)": [
                        206,
                        216,
                        449,
                        450,
                        451,
                        452,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReader', 'toString(int)')": [
                        460,
                        461,
                        462,
                        463
                    ],
                    "(None, None)": [
                        464,
                        465
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java": {
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestSimple', 'testToString')": [
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestSimple', None)": [
                        74,
                        75,
                        76,
                        77
                    ]
                }
            }
        }
    },
    "059a07c12cd5ba11ea6318777699fbf56e6103c1": {
        "authored_data": "2020 Aug 18 19:39",
        "commit.message": "Javadoc nits.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "9a212e86adc1828f8ff998956a14699fe337a38f",
        "changes": {
            "src/main/java/org/apache/commons/io/input/ObservableInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ObservableInputStream', None)": [
                        46,
                        56,
                        69,
                        79,
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ObservableInputStream', None)": [
                        46,
                        47,
                        57,
                        58,
                        71,
                        72,
                        82,
                        83,
                        91
                    ]
                }
            }
        }
    },
    "9a212e86adc1828f8ff998956a14699fe337a38f": {
        "authored_data": "2020 Aug 18 19:17",
        "commit.message": "Sort methods in AB order.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "946a5b73fc0b10221e3a36dd98c749b90a571e5b",
        "changes": {
            "src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', None)": [
                        48,
                        53,
                        56,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347,
                        348,
                        349,
                        350,
                        351,
                        352,
                        353,
                        354,
                        355,
                        356,
                        357,
                        358,
                        359,
                        360,
                        361,
                        362,
                        363,
                        364,
                        365,
                        366,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        375,
                        376,
                        377,
                        378,
                        379,
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397,
                        398,
                        399,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        420,
                        421,
                        422,
                        423,
                        424,
                        425,
                        426,
                        427,
                        428,
                        429,
                        430,
                        431,
                        432,
                        433,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReader', 'close')": [
                        292,
                        293
                    ],
                    "(None, None)": [
                        452,
                        453,
                        454
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', None)": [
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        205,
                        208,
                        213,
                        217,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReader', 'close')": [
                        394,
                        395
                    ]
                }
            }
        }
    },
    "946a5b73fc0b10221e3a36dd98c749b90a571e5b": {
        "authored_data": "2020 Aug 15 03:11",
        "commit.message": "Reuse IOExceptionList.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "639f71fa28dfc985b71bc8a7d8bca977d2e76e3f",
        "changes": {
            "src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java": {
                "old": {
                    "('org.apache.commons.io#FileUtilsCleanDirectoryTestCase', 'testThrowsOnCannotDeleteFile')": [
                        114
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtilsCleanDirectoryTestCase', 'testThrowsOnCannotDeleteFile')": [
                        114,
                        115
                    ]
                }
            }
        }
    },
    "639f71fa28dfc985b71bc8a7d8bca977d2e76e3f": {
        "authored_data": "2020 Aug 15 03:04",
        "commit.message": "Remove trailing white spaces. Use final.",
        "commit.author.name": "Gary Gregory",
        "pcid": "7ec3387d223d696623d8fef222c633b5adfb9e4c",
        "changes": {
            "src/main/java/org/apache/commons/io/Charsets.java": {
                "old": {
                    "('org.apache.commons.io#Charsets', None)": [
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.io#Charsets', None)": [
                        65
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', 'doCopyFile(File,File,boolean,CopyOption)')": [
                        1388
                    ],
                    "('org.apache.commons.io#FileUtils', 'forceDelete(File)')": [
                        1443
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', 'doCopyFile(File,File,boolean,CopyOption)')": [
                        1388
                    ],
                    "('org.apache.commons.io#FileUtils', 'forceDelete(File)')": [
                        1443
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "old": {
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(Closeable,Consumer)')": [
                        359
                    ],
                    "('org.apache.commons.io#IOUtils', 'close(Closeable)')": [
                        389
                    ],
                    "('org.apache.commons.io#IOUtils', 'close(Closeable,IOConsumer)')": [
                        407
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(Closeable,Consumer)')": [
                        359
                    ],
                    "('org.apache.commons.io#IOUtils', 'close(Closeable)')": [
                        389
                    ],
                    "('org.apache.commons.io#IOUtils', 'close(Closeable,IOConsumer)')": [
                        407
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/file/AccumulatorPathVisitor.java": {
                "old": {
                    "('org.apache.commons.io.file#AccumulatorPathVisitor', None)": [
                        69
                    ],
                    "('org.apache.commons.io.file#AccumulatorPathVisitor', 'equals(Object)')": [
                        74,
                        84
                    ],
                    "('org.apache.commons.io.file#AccumulatorPathVisitor', 'relativizeDirectories(Path,boolean,Comparator)')": [
                        123
                    ],
                    "('org.apache.commons.io.file#AccumulatorPathVisitor', 'relativizeFiles(Path,boolean,Comparator)')": [
                        136
                    ],
                    "('org.apache.commons.io.file#AccumulatorPathVisitor', 'visitFile(Path,BasicFileAttributes)')": [
                        141
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#AccumulatorPathVisitor', None)": [
                        69
                    ],
                    "('org.apache.commons.io.file#AccumulatorPathVisitor', 'equals(Object)')": [
                        74,
                        84
                    ],
                    "('org.apache.commons.io.file#AccumulatorPathVisitor', 'relativizeDirectories(Path,boolean,Comparator)')": [
                        123
                    ],
                    "('org.apache.commons.io.file#AccumulatorPathVisitor', 'relativizeFiles(Path,boolean,Comparator)')": [
                        136
                    ],
                    "('org.apache.commons.io.file#AccumulatorPathVisitor', 'visitFile(Path,BasicFileAttributes)')": [
                        141
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/file/CopyDirectoryVisitor.java": {
                "old": {
                    "('org.apache.commons.io.file#CopyDirectoryVisitor', None)": [
                        72,
                        82,
                        92
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#CopyDirectoryVisitor', None)": [
                        72,
                        82,
                        92
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/file/Counters.java": {
                "old": {
                    "('org.apache.commons.io.file#Counters', None)": [
                        55,
                        62,
                        115,
                        122,
                        225,
                        232
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#Counters', None)": [
                        55,
                        62,
                        115,
                        122,
                        225,
                        232
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/file/CountingPathVisitor.java": {
                "old": {
                    "('org.apache.commons.io.file#CountingPathVisitor', 'equals(Object)')": [
                        69,
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#CountingPathVisitor', 'equals(Object)')": [
                        69,
                        76
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/function/IOConsumer.java": {
                "old": {
                    "(None, None)": [
                        51,
                        53
                    ]
                },
                "new": {
                    "(None, None)": [
                        51,
                        53
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/function/IOFunction.java": {
                "old": {
                    "(None, None)": [
                        63,
                        83,
                        137,
                        138,
                        139,
                        157,
                        158,
                        159,
                        175,
                        176,
                        177,
                        193,
                        194,
                        195
                    ]
                },
                "new": {
                    "(None, None)": [
                        63,
                        83,
                        137,
                        138,
                        139,
                        157,
                        158,
                        159,
                        175,
                        176,
                        177,
                        193,
                        194,
                        195
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/CharSequenceReader.java": {
                "old": {
                    "('org.apache.commons.io.input#CharSequenceReader', 'toString')": [
                        301
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#CharSequenceReader', 'toString')": [
                        301
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', None)": [
                        231
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReader', 'readLines(int)')": [
                        271
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', None)": [
                        231
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReader', 'readLines(int)')": [
                        271
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FileSystemTestCase.java": {
                "old": {
                    "('org.apache.commons.io#FileSystemTestCase', None)": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileSystemTestCase', None)": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FileUtilsTestCase.java": {
                "old": {
                    "('org.apache.commons.io#FileUtilsTestCase', 'testCopyFile1ToDir')": [
                        1696
                    ],
                    "('org.apache.commons.io#FileUtilsTestCase', 'backDateFile10Minutes(File)')": [
                        3091
                    ],
                    "('org.apache.commons.io#FileUtilsTestCase', 'setLastModifiedMillis(File,long)')": [
                        3099
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtilsTestCase', 'testCopyFile1ToDir')": [
                        1696
                    ],
                    "('org.apache.commons.io#FileUtilsTestCase', 'backDateFile10Minutes(File)')": [
                        3091
                    ],
                    "('org.apache.commons.io#FileUtilsTestCase', 'setLastModifiedMillis(File,long)')": [
                        3099
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/IOExceptionListTestCase.java": {
                "old": {
                    "('org.apache.commons.io#IOExceptionListTestCase', 'testPrintStackTrace')": [
                        61,
                        62,
                        64
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOExceptionListTestCase', 'testPrintStackTrace')": [
                        61,
                        62,
                        64
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/IOUtilsTestCase.java": {
                "old": {
                    "('org.apache.commons.io#IOUtilsTestCase', 'testCloseMulti')": [
                        151,
                        152
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testCloseConsumer')": [
                        163
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', None)": [
                        198
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtilsTestCase', 'testCloseMulti')": [
                        151,
                        152
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testCloseConsumer')": [
                        163
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', None)": [
                        198
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/LineIteratorTestCase.java": {
                "old": {
                    "('org.apache.commons.io#LineIteratorTestCase', None)": [
                        60,
                        117,
                        252
                    ],
                    "(None, None)": [
                        424
                    ]
                },
                "new": {
                    "('org.apache.commons.io#LineIteratorTestCase', None)": [
                        60,
                        117,
                        252
                    ],
                    "(None, None)": [
                        424
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/CounterAssertions.java": {
                "old": {
                    "('org.apache.commons.io.file#CounterAssertions', 'assertCounter(long,Counter,String)')": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#CounterAssertions', 'assertCounter(long,Counter,String)')": [
                        29
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testSerialization')": [
                        288
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testSerialization')": [
                        288
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/CharacterFilterReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#CharacterFilterReaderTest', 'testReadIntoBuffer')": [
                        79,
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#CharacterFilterReaderTest', 'testReadIntoBuffer')": [
                        79,
                        80
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testIsoFileDefaults(int)')": [
                        82
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUTF8FileWindowsBreaks(int)')": [
                        90
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUTF8FileCRBreaks(int)')": [
                        98
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUTF8File(int)')": [
                        106
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testEmptyFile(int)')": [
                        114
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUTF16BEFile(int)')": [
                        122
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUTF16LEFile(int)')": [
                        130
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testShiftJISFile(int)')": [
                        138
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testWindows31jFile(int)')": [
                        147
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testGBK(int)')": [
                        156
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testxWindows949File(int)')": [
                        165
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testxWindows950File(int)')": [
                        174
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(int)')": [
                        192
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(int)')": [
                        200
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUnsupportedEncodingUTF16(int)')": [
                        214
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUnsupportedEncodingBig5(int)')": [
                        222
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testIsoFileDefaults(int)')": [
                        82
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUTF8FileWindowsBreaks(int)')": [
                        90
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUTF8FileCRBreaks(int)')": [
                        98
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUTF8File(int)')": [
                        106
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testEmptyFile(int)')": [
                        114
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUTF16BEFile(int)')": [
                        122
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUTF16LEFile(int)')": [
                        130
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testShiftJISFile(int)')": [
                        138
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testWindows31jFile(int)')": [
                        147
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testGBK(int)')": [
                        156
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testxWindows949File(int)')": [
                        165
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testxWindows950File(int)')": [
                        174
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(int)')": [
                        192
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(int)')": [
                        200
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUnsupportedEncodingUTF16(int)')": [
                        214
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUnsupportedEncodingBig5(int)')": [
                        222
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamFile', 'testDataIntegrityWithBufferedReader(String,String,Integer,boolean)')": [
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamFile', 'testDataIntegrityWithBufferedReader(String,String,Integer,boolean)')": [
                        75
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/SequenceReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadCollection')": [
                        127
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadIterable')": [
                        139,
                        142
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadList')": [
                        176
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadCollection')": [
                        127
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadIterable')": [
                        139,
                        142
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadList')": [
                        176
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/TailerTest.java": {
                "old": {
                    "('org.apache.commons.io.input#TailerTest', None)": [
                        321
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#TailerTest', None)": [
                        321
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testBelowThreshold(int)')": [
                        62
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testAtThreshold(int)')": [
                        84
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testAboveThreshold(int)')": [
                        105
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testThresholdReached(int)')": [
                        134
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testWriteToSmall(int)')": [
                        166
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testWriteToLarge(int)')": [
                        203
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileBelowThreshold(int)')": [
                        239
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileAboveThreshold(int)')": [
                        262
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileAboveThresholdPrefixOnly(int)')": [
                        295
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testBelowThreshold(int)')": [
                        62
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testAtThreshold(int)')": [
                        84
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testAboveThreshold(int)')": [
                        105
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testThresholdReached(int)')": [
                        134
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testWriteToSmall(int)')": [
                        166
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testWriteToLarge(int)')": [
                        203
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileBelowThreshold(int)')": [
                        239
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileAboveThreshold(int)')": [
                        262
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileAboveThresholdPrefixOnly(int)')": [
                        295
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java": {
                "old": {
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'constructor_File_encoding_badEncoding')": [
                        177
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'constructor_File_directory')": [
                        188
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'constructor_File_nullFile')": [
                        199
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'constructor_fileName_nullFile')": [
                        210
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'constructor_File_encoding_badEncoding')": [
                        177
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'constructor_File_directory')": [
                        188
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'constructor_File_nullFile')": [
                        199
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'constructor_fileName_nullFile')": [
                        210
                    ]
                }
            }
        }
    },
    "7ec3387d223d696623d8fef222c633b5adfb9e4c": {
        "authored_data": "2020 Aug 15 03:02",
        "commit.message": "Reuse IOExceptionList and fix checkstyle unused imports.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "69dc2f21df9e9ab11d71b6d980a69f719708b29c",
        "changes": {
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "(None, None)": [
                        52
                    ],
                    "('org.apache.commons.io#FileUtils', 'cleanDirectory(File)')": [
                        334,
                        339,
                        343,
                        344
                    ],
                    "('org.apache.commons.io#FileUtils', 'cleanDirectoryOnExit(File)')": [
                        359,
                        364,
                        368,
                        369
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', 'cleanDirectory(File)')": [
                        333,
                        338,
                        342,
                        343
                    ],
                    "('org.apache.commons.io#FileUtils', 'cleanDirectoryOnExit(File)')": [
                        358,
                        363,
                        367,
                        368
                    ]
                }
            }
        }
    },
    "69dc2f21df9e9ab11d71b6d980a69f719708b29c": {
        "authored_data": "2020 Aug 15 02:50",
        "commit.message": "Repairing build on Linux... reverting old behavior.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "2c927824c43479b8577e9f15b9ab7642854be113",
        "changes": {
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', 'forceDelete(File)')": [
                        1443
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', 'forceDelete(File)')": [
                        1443
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/file/PathUtils.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtils', 'deleteFile(Path,DeleteOption)')": [
                        363
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtils', 'deleteFile(Path,DeleteOption)')": [
                        363
                    ]
                }
            }
        }
    },
    "2c927824c43479b8577e9f15b9ab7642854be113": {
        "authored_data": "2020 Aug 15 02:42",
        "commit.message": "Better test assert message. Javadoc fix.\nFollow links when disabling readonly flag for a delete path call.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "0c0858c4fabacb85ca6f805b856b97649f92ccd9",
        "changes": {
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', None)": [
                        1411
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', None)": [
                        1411
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/file/PathUtils.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtils', 'deleteFile(Path,DeleteOption)')": [
                        363
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtils', 'deleteFile(Path,DeleteOption)')": [
                        363
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FileUtilsTestCase.java": {
                "old": {
                    "('org.apache.commons.io#FileUtilsTestCase', 'testCopyFile2WithoutFileDatePreservation')": [
                        1241,
                        1242,
                        1243
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtilsTestCase', 'testCopyFile2WithoutFileDatePreservation')": [
                        1241,
                        1242,
                        1243
                    ]
                }
            }
        }
    },
    "0c0858c4fabacb85ca6f805b856b97649f92ccd9": {
        "authored_data": "2020 Aug 15 02:16",
        "commit.message": "Add comment.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "2fdc70bd5549d8ce14120322eeab91ed0f5cbb05",
        "changes": {
            "src/test/java/org/apache/commons/io/FileUtilsCleanDirectoryTestCase.java": {
                "old": {
                    "('org.apache.commons.io#FileUtilsCleanDirectoryTestCase', None)": [
                        43
                    ],
                    "('org.apache.commons.io#FileUtilsCleanDirectoryTestCase', 'testThrowsOnNullList')": [
                        92,
                        93
                    ],
                    "('org.apache.commons.io#FileUtilsCleanDirectoryTestCase', 'testThrowsOnCannotDeleteFile')": [
                        112,
                        113
                    ],
                    "('org.apache.commons.io#FileUtilsCleanDirectoryTestCase', 'chmod(File,int,boolean)')": [
                        120,
                        121,
                        135,
                        136
                    ]
                },
                "new": {
                    "(None, None)": [
                        26,
                        38,
                        39
                    ],
                    "('org.apache.commons.io#FileUtilsCleanDirectoryTestCase', None)": [
                        46
                    ],
                    "('org.apache.commons.io#FileUtilsCleanDirectoryTestCase', 'testThrowsOnNullList')": [
                        95
                    ],
                    "('org.apache.commons.io#FileUtilsCleanDirectoryTestCase', 'testThrowsOnCannotDeleteFile')": [
                        114
                    ],
                    "('org.apache.commons.io#FileUtilsCleanDirectoryTestCase', 'chmod(File,int,boolean)')": [
                        121,
                        135
                    ]
                }
            }
        }
    }
}