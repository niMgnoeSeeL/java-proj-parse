{
    "e2ddf45aa76ddfc05a6b54bb50714dcb98dc8fba": {
        "authored_data": "2022 Jun 15 11:49",
        "commit.message": "Use Objects.requireNonNull()",
        "commit.author.name": "Gary Gregory",
        "pcid": "0fb14b1db8006e82fff3a10c2885bec469beabe9",
        "changes": {
            "src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java": {
                "old": {
                    "('org.apache.commons.io.monitor#FileAlterationObserver', None)": [
                        169,
                        170,
                        171,
                        172,
                        173,
                        174
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.io.monitor#FileAlterationObserver', None)": [
                        170,
                        171
                    ]
                }
            }
        }
    },
    "0fb14b1db8006e82fff3a10c2885bec469beabe9": {
        "authored_data": "2022 Jun 15 11:33",
        "commit.message": "Reuse ArrayUtils.EMPTY_BYTE_ARRAY in test",
        "commit.author.name": "Gary Gregory",
        "pcid": "26d7770afd1e54048276f56a08e68d2237734de8",
        "changes": {
            "src/test/java/org/apache/commons/io/input/MemoryMappedFileInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#MemoryMappedFileInputStreamTest', None)": [
                        42,
                        43
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ]
                }
            }
        }
    },
    "26d7770afd1e54048276f56a08e68d2237734de8": {
        "authored_data": "2022 Jun 15 11:19",
        "commit.message": "Try to better clean up test fixtures.",
        "commit.author.name": "Gary Gregory",
        "pcid": "6efad7916c68a34258b1ea2c866420fce23d529b",
        "changes": {
            "src/test/java/org/apache/commons/io/input/MemoryMappedFileInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.io.input#MemoryMappedFileInputStreamTest', 'afterEach')": [
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59
                    ]
                }
            }
        }
    },
    "6efad7916c68a34258b1ea2c866420fce23d529b": {
        "authored_data": "2022 Jun 15 11:10",
        "commit.message": "Simplify test fixture creation",
        "commit.author.name": "Gary Gregory",
        "pcid": "885c8a481882d41c685a363e8274adb007e411d9",
        "changes": {
            "src/test/java/org/apache/commons/io/input/MemoryMappedFileInputStreamTest.java": {
                "old": {
                    "(None, None)": [
                        22,
                        25
                    ],
                    "('org.apache.commons.io.input#MemoryMappedFileInputStreamTest', 'createTestFile(int)')": [
                        56,
                        57,
                        58,
                        59,
                        60
                    ],
                    "('org.apache.commons.io.input#MemoryMappedFileInputStreamTest', 'testEmptyFile')": [
                        83
                    ],
                    "('org.apache.commons.io.input#MemoryMappedFileInputStreamTest', 'testSkipEmpty')": [
                        151
                    ],
                    "('org.apache.commons.io.input#MemoryMappedFileInputStreamTest', 'testSkipPastEof')": [
                        211
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#MemoryMappedFileInputStreamTest', None)": [
                        42,
                        43
                    ],
                    "('org.apache.commons.io.input#MemoryMappedFileInputStreamTest', 'createTestFile(int)')": [
                        56
                    ],
                    "('org.apache.commons.io.input#MemoryMappedFileInputStreamTest', 'testEmptyFile')": [
                        79
                    ],
                    "('org.apache.commons.io.input#MemoryMappedFileInputStreamTest', 'testSkipEmpty')": [
                        147
                    ],
                    "('org.apache.commons.io.input#MemoryMappedFileInputStreamTest', 'testSkipPastEof')": [
                        207
                    ]
                }
            }
        }
    },
    "885c8a481882d41c685a363e8274adb007e411d9": {
        "authored_data": "2022 Jun 14 23:30",
        "commit.message": "Enable PMD check in the default Maven goal.",
        "commit.author.name": "Gary Gregory",
        "pcid": "1bd3a1f35ea95d4847aef44fac5cdb60f366c328",
        "changes": {
            "src/main/java/org/apache/commons/io/file/PathUtils.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtils', 'fileContentEquals(Path,Path,LinkOption,OpenOption)')": [
                        724
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtils', 'fileContentEquals(Path,Path,LinkOption,OpenOption)')": [
                        724
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', None)": [
                        127
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', None)": [
                        127
                    ]
                }
            }
        }
    },
    "1bd3a1f35ea95d4847aef44fac5cdb60f366c328": {
        "authored_data": "2022 Jun 14 23:14",
        "commit.message": "PMD: Remove unnecessary final",
        "commit.author.name": "Gary Gregory",
        "pcid": "6d6096f9b12887e89de4414bb5d5432cf3834d47",
        "changes": {
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', 'copyURLToFile(URL,File)')": [
                        1071
                    ],
                    "('org.apache.commons.io#FileUtils', 'copyURLToFile(URL,File,int,int)')": [
                        1099,
                        1102
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', 'copyURLToFile(URL,File)')": [
                        1071
                    ],
                    "('org.apache.commons.io#FileUtils', 'copyURLToFile(URL,File,int,int)')": [
                        1099,
                        1102
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "old": {
                    "('org.apache.commons.io#IOUtils', 'toByteArray(InputStream)')": [
                        2488,
                        2489,
                        2490,
                        2491
                    ],
                    "('org.apache.commons.io#IOUtils', 'toByteArray(Reader,Charset)')": [
                        2592
                    ],
                    "('org.apache.commons.io#IOUtils', 'toByteArray(URL)')": [
                        2665
                    ],
                    "('org.apache.commons.io#IOUtils', 'toString(InputStream,Charset)')": [
                        2933
                    ],
                    "('org.apache.commons.io#IOUtils', 'toString(Reader)')": [
                        2978
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtils', 'toByteArray(InputStream)')": [
                        2488,
                        2489,
                        2490
                    ],
                    "('org.apache.commons.io#IOUtils', 'toByteArray(Reader,Charset)')": [
                        2591
                    ],
                    "('org.apache.commons.io#IOUtils', 'toByteArray(URL)')": [
                        2664
                    ],
                    "('org.apache.commons.io#IOUtils', 'toString(InputStream,Charset)')": [
                        2932
                    ],
                    "('org.apache.commons.io#IOUtils', 'toString(Reader)')": [
                        2977
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/file/PathUtils.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtils', 'copyFile(URL,Path,CopyOption)')": [
                        280
                    ],
                    "('org.apache.commons.io.file#PathUtils', 'copyFileToDirectory(URL,Path,CopyOption)')": [
                        311
                    ],
                    "('org.apache.commons.io.file#PathUtils', 'fileContentEquals(Path,Path,LinkOption,OpenOption)')": [
                        724,
                        725
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtils', 'copyFile(URL,Path,CopyOption)')": [
                        280
                    ],
                    "('org.apache.commons.io.file#PathUtils', 'copyFileToDirectory(URL,Path,CopyOption)')": [
                        311
                    ],
                    "('org.apache.commons.io.file#PathUtils', 'fileContentEquals(Path,Path,LinkOption,OpenOption)')": [
                        724,
                        725
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#MagicNumberFileFilter', 'accept(Path,BasicFileAttributes)')": [
                        295
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#MagicNumberFileFilter', 'accept(Path,BasicFileAttributes)')": [
                        295
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/TimestampedObserver.java": {
                "old": {
                    "(None, None)": [
                        34
                    ]
                },
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'toBufferedInputStream(InputStream,int)')": [
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'toBufferedInputStream(InputStream,int)')": [
                        81
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#UnsynchronizedByteArrayOutputStream', 'toBufferedInputStream(InputStream,int)')": [
                        74
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#UnsynchronizedByteArrayOutputStream', 'toBufferedInputStream(InputStream,int)')": [
                        74
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FileCleaningTrackerTest.java": {
                "old": {
                    "('org.apache.commons.io#FileCleaningTrackerTest', 'testFileCleanerDirectory_ForceStrategy')": [
                        130
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileCleaningTrackerTest', 'testFileCleanerDirectory_ForceStrategy')": [
                        130
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FileDeleteStrategyTest.java": {
                "old": {
                    "('org.apache.commons.io#FileDeleteStrategyTest', 'testDeleteForce')": [
                        52
                    ],
                    "('org.apache.commons.io#FileDeleteStrategyTest', 'testDeleteNormal')": [
                        78
                    ],
                    "('org.apache.commons.io#FileDeleteStrategyTest', 'testDeleteQuietlyNormal')": [
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileDeleteStrategyTest', 'testDeleteForce')": [
                        52
                    ],
                    "('org.apache.commons.io#FileDeleteStrategyTest', 'testDeleteNormal')": [
                        78
                    ],
                    "('org.apache.commons.io#FileDeleteStrategyTest', 'testDeleteQuietlyNormal')": [
                        117
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FileUtilsCopyDirectoryToDirectoryTest.java": {
                "old": {
                    "('org.apache.commons.io#FileUtilsCopyDirectoryToDirectoryTest', 'copyDirectoryToDirectoryThrowsIllegalExceptionWithCorrectMessageWhenSrcDirIsNotDirectory')": [
                        77
                    ],
                    "('org.apache.commons.io#FileUtilsCopyDirectoryToDirectoryTest', 'copyFileAndCheckAcl')": [
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtilsCopyDirectoryToDirectoryTest', 'copyDirectoryToDirectoryThrowsIllegalExceptionWithCorrectMessageWhenSrcDirIsNotDirectory')": [
                        77
                    ],
                    "('org.apache.commons.io#FileUtilsCopyDirectoryToDirectoryTest', 'copyFileAndCheckAcl')": [
                        103
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FileUtilsFileNewerTest.java": {
                "old": {
                    "('org.apache.commons.io#FileUtilsFileNewerTest', 'setUp')": [
                        57,
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtilsFileNewerTest', 'setUp')": [
                        57,
                        63
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FileUtilsTest.java": {
                "old": {
                    "('org.apache.commons.io#FileUtilsTest', 'setUp')": [
                        321,
                        329,
                        339,
                        347
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testIsDirectory')": [
                        1631
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testIsEmptyDirectory')": [
                        1640
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testIterateFilesAndDirs')": [
                        1887
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testTouch')": [
                        2703
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtilsTest', 'setUp')": [
                        321,
                        329,
                        339,
                        347
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testIsDirectory')": [
                        1631
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testIsEmptyDirectory')": [
                        1640
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testIterateFilesAndDirs')": [
                        1887
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testTouch')": [
                        2703
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FilenameUtilsTest.java": {
                "old": {
                    "('org.apache.commons.io#FilenameUtilsTest', 'setUp')": [
                        68,
                        76,
                        84,
                        92
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FilenameUtilsTest', 'setUp')": [
                        68,
                        76,
                        84,
                        92
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/IOUtilsCopyTest.java": {
                "old": {
                    "('org.apache.commons.io#IOUtilsCopyTest', 'testCopy_URLToFile')": [
                        465
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtilsCopyTest', 'testCopy_URLToFile')": [
                        465
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/IOUtilsTest.java": {
                "old": {
                    "('org.apache.commons.io#IOUtilsTest', 'testAsWriterAppendable')": [
                        273
                    ],
                    "('org.apache.commons.io#IOUtilsTest', 'testAsWriterStringBuilder')": [
                        288
                    ],
                    "('org.apache.commons.io#IOUtilsTest', 'testToByteArray_URLConnection')": [
                        1484
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtilsTest', 'testAsWriterAppendable')": [
                        273
                    ],
                    "('org.apache.commons.io#IOUtilsTest', 'testAsWriterStringBuilder')": [
                        288
                    ],
                    "('org.apache.commons.io#IOUtilsTest', 'testToByteArray_URLConnection')": [
                        1484
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/LineIteratorTest.java": {
                "old": {
                    "('org.apache.commons.io#LineIteratorTest', 'doTestFileWithSpecifiedLines(int)')": [
                        125
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testCloseEarly')": [
                        150
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testNextOnly')": [
                        293
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testValidEncoding')": [
                        337
                    ]
                },
                "new": {
                    "('org.apache.commons.io#LineIteratorTest', 'doTestFileWithSpecifiedLines(int)')": [
                        125
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testCloseEarly')": [
                        150
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testNextOnly')": [
                        293
                    ],
                    "('org.apache.commons.io#LineIteratorTest', 'testValidEncoding')": [
                        337
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java": {
                "old": {
                    "('org.apache.commons.io.comparator#CompositeFileComparatorTest', 'setUp')": [
                        89,
                        97,
                        105,
                        113
                    ]
                },
                "new": {
                    "('org.apache.commons.io.comparator#CompositeFileComparatorTest', 'setUp')": [
                        89,
                        97,
                        105,
                        113
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/comparator/LastModifiedFileComparatorTest.java": {
                "old": {
                    "('org.apache.commons.io.comparator#LastModifiedFileComparatorTest', 'setUp')": [
                        41,
                        49,
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.io.comparator#LastModifiedFileComparatorTest', 'setUp')": [
                        41,
                        49,
                        61
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/comparator/SizeFileComparatorTest.java": {
                "old": {
                    "('org.apache.commons.io.comparator#SizeFileComparatorTest', 'setUp')": [
                        58,
                        66,
                        74
                    ]
                },
                "new": {
                    "('org.apache.commons.io.comparator#SizeFileComparatorTest', 'setUp')": [
                        58,
                        66,
                        74
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/CopyDirectoryVisitorTest.java": {
                "old": {
                    "('org.apache.commons.io.file#CopyDirectoryVisitorTest', 'testCopyDirectoryEmptyFolder(PathCounters)')": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#CopyDirectoryVisitorTest', 'testCopyDirectoryEmptyFolder(PathCounters)')": [
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/CountingPathVisitorTest.java": {
                "old": {
                    "('org.apache.commons.io.file#CountingPathVisitorTest', 'testCountEmptyFolder(CountingPathVisitor)')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#CountingPathVisitorTest', 'testCountEmptyFolder(CountingPathVisitor)')": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/DirectoryStreamFilterTest.java": {
                "old": {
                    "('org.apache.commons.io.file#DirectoryStreamFilterTest', 'testFilterByName')": [
                        44
                    ],
                    "('org.apache.commons.io.file#DirectoryStreamFilterTest', 'testFilterByNameNot')": [
                        57
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#DirectoryStreamFilterTest', 'testFilterByName')": [
                        44
                    ],
                    "('org.apache.commons.io.file#DirectoryStreamFilterTest', 'testFilterByNameNot')": [
                        57
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/PathUtilsCountingTest.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtilsCountingTest', 'testCountEmptyFolder')": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtilsCountingTest', 'testCountEmptyFolder')": [
                        38
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/PathUtilsIsEmptyTest.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtilsIsEmptyTest', 'testIsEmpty')": [
                        44
                    ],
                    "('org.apache.commons.io.file#PathUtilsIsEmptyTest', 'testIsEmptyDirectory')": [
                        52
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtilsIsEmptyTest', 'testIsEmpty')": [
                        44
                    ],
                    "('org.apache.commons.io.file#PathUtilsIsEmptyTest', 'testIsEmptyDirectory')": [
                        52
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/PathUtilsTest.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtilsTest', 'testCopyDirectoryForDifferentFilesystemsWithAbsolutePath')": [
                        114
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', 'testCopyDirectoryForDifferentFilesystemsWithAbsolutePathReverse')": [
                        129
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', 'testCopyDirectoryForDifferentFilesystemsWithRelativePath')": [
                        147
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', 'testCopyDirectoryForDifferentFilesystemsWithRelativePathReverse')": [
                        165
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', 'testIsDirectory')": [
                        241,
                        245
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', 'testIsRegularFile')": [
                        270
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', 'testNewDirectoryStream')": [
                        281
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', 'testTouch')": [
                        432
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtilsTest', 'testCopyDirectoryForDifferentFilesystemsWithAbsolutePath')": [
                        114
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', 'testCopyDirectoryForDifferentFilesystemsWithAbsolutePathReverse')": [
                        129
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', 'testCopyDirectoryForDifferentFilesystemsWithRelativePath')": [
                        147
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', 'testCopyDirectoryForDifferentFilesystemsWithRelativePathReverse')": [
                        165
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', 'testIsDirectory')": [
                        241,
                        245
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', 'testIsRegularFile')": [
                        270
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', 'testNewDirectoryStream')": [
                        281
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', 'testTouch')": [
                        432
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/TempDirectoryTest.java": {
                "old": {
                    "('org.apache.commons.io.file#TempDirectoryTest', 'testCreatePath')": [
                        39
                    ],
                    "('org.apache.commons.io.file#TempDirectoryTest', 'testCreateString')": [
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#TempDirectoryTest', 'testCreatePath')": [
                        39
                    ],
                    "('org.apache.commons.io.file#TempDirectoryTest', 'testCreateString')": [
                        54
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/TempFileTest.java": {
                "old": {
                    "('org.apache.commons.io.file#TempFileTest', 'testCreatePath')": [
                        38
                    ],
                    "('org.apache.commons.io.file#TempFileTest', 'testCreateString')": [
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#TempFileTest', 'testCreatePath')": [
                        38
                    ],
                    "('org.apache.commons.io.file#TempFileTest', 'testCreateString')": [
                        53
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/filefilter/FileFilterTest.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testAgeFilter')": [
                        71,
                        84,
                        101
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testCanExecute')": [
                        200,
                        202
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testCanRead')": [
                        221
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testCanWrite')": [
                        241
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testEmpty')": [
                        394,
                        414
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testMagicNumberFileFilterBytes')": [
                        729
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testMagicNumberFileFilterBytesOffset')": [
                        770,
                        778
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testMagicNumberFileFilterString')": [
                        808
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testMagicNumberFileFilterStringOffset')": [
                        838,
                        846
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testMakeCVSAware')": [
                        888,
                        898,
                        908
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testMakeDirectoryOnly')": [
                        936,
                        942
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testMakeFileOnly')": [
                        975,
                        981
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testMakeSVNAware')": [
                        1007,
                        1017,
                        1027
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testSizeFilterOnFiles')": [
                        1228,
                        1235
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testAgeFilter')": [
                        71,
                        84,
                        101
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testCanExecute')": [
                        200,
                        202
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testCanRead')": [
                        221
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testCanWrite')": [
                        241
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testEmpty')": [
                        394,
                        414
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testMagicNumberFileFilterBytes')": [
                        729
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testMagicNumberFileFilterBytesOffset')": [
                        770,
                        778
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testMagicNumberFileFilterString')": [
                        808
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testMagicNumberFileFilterStringOffset')": [
                        838,
                        846
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testMakeCVSAware')": [
                        888,
                        898,
                        908
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testMakeDirectoryOnly')": [
                        936,
                        942
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testMakeFileOnly')": [
                        975,
                        981
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testMakeSVNAware')": [
                        1007,
                        1017,
                        1027
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTest', 'testSizeFilterOnFiles')": [
                        1228,
                        1235
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/function/IOFunctionTest.java": {
                "old": {
                    "('org.apache.commons.io.function#IOFunctionTest', 'testIdentity')": [
                        161
                    ]
                },
                "new": {
                    "('org.apache.commons.io.function#IOFunctionTest', 'testIdentity')": [
                        161
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'doesSaxSupportCharacterSet(String)')": [
                        158
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'readBOMInputStreamTwice(String)')": [
                        187,
                        189
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'skipReturnValueWithBom')": [
                        211
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'skipReturnValueWithoutBom')": [
                        220
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testAvailableWithBOM')": [
                        229
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testAvailableWithoutBOM')": [
                        237
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testClose')": [
                        245,
                        246
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testEmptyBufferWithBOM')": [
                        256
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testEmptyBufferWithoutBOM')": [
                        265
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testGetBOMFirstThenRead')": [
                        274
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testGetBOMFirstThenReadInclude')": [
                        288
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testLargeBufferWithBOM')": [
                        305
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testLargeBufferWithoutBOM')": [
                        314
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testLeadingNonBOMBufferedRead')": [
                        323
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testLeadingNonBOMSingleRead')": [
                        332
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testMarkResetAfterReadWithBOM')": [
                        343
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testMarkResetAfterReadWithoutBOM')": [
                        359
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testMarkResetBeforeReadWithBOM')": [
                        375
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testMarkResetBeforeReadWithoutBOM')": [
                        390
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadEmpty')": [
                        412
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadSmall')": [
                        423
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMInclude')": [
                        446
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMUtf16Be')": [
                        463
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMUtf16Le')": [
                        481
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMUtf32Be')": [
                        500
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMUtf32Le')": [
                        526
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMUtf8')": [
                        551
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithMultipleBOM')": [
                        566
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithoutBOM')": [
                        582
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testSkipWithBOM')": [
                        698
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testSkipWithoutBOM')": [
                        707
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testSmallBufferWithBOM')": [
                        716
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testSmallBufferWithoutBOM')": [
                        726
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testSupportCode')": [
                        736
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'doesSaxSupportCharacterSet(String)')": [
                        158
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'readBOMInputStreamTwice(String)')": [
                        187,
                        189
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'skipReturnValueWithBom')": [
                        211
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'skipReturnValueWithoutBom')": [
                        220
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testAvailableWithBOM')": [
                        229
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testAvailableWithoutBOM')": [
                        237
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testClose')": [
                        245,
                        246
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testEmptyBufferWithBOM')": [
                        256
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testEmptyBufferWithoutBOM')": [
                        265
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testGetBOMFirstThenRead')": [
                        274
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testGetBOMFirstThenReadInclude')": [
                        288
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testLargeBufferWithBOM')": [
                        305
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testLargeBufferWithoutBOM')": [
                        314
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testLeadingNonBOMBufferedRead')": [
                        323
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testLeadingNonBOMSingleRead')": [
                        332
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testMarkResetAfterReadWithBOM')": [
                        343
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testMarkResetAfterReadWithoutBOM')": [
                        359
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testMarkResetBeforeReadWithBOM')": [
                        375
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testMarkResetBeforeReadWithoutBOM')": [
                        390
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadEmpty')": [
                        412
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadSmall')": [
                        423
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMInclude')": [
                        446
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMUtf16Be')": [
                        463
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMUtf16Le')": [
                        481
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMUtf32Be')": [
                        500
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMUtf32Le')": [
                        526
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMUtf8')": [
                        551
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithMultipleBOM')": [
                        566
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithoutBOM')": [
                        582
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testSkipWithBOM')": [
                        698
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testSkipWithoutBOM')": [
                        707
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testSmallBufferWithBOM')": [
                        716
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testSmallBufferWithoutBOM')": [
                        726
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testSupportCode')": [
                        736
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/BoundedReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#BoundedReaderTest', 'closeTest')": [
                        53,
                        61
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markReset')": [
                        70
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markResetFromOffset1')": [
                        85
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markResetMarkMore')": [
                        100
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markResetWithMarkOutsideBoundedReaderMax')": [
                        115
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset')": [
                        126
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'readMulti')": [
                        137
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'readMultiWithOffset')": [
                        151
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'readTillEnd')": [
                        165
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'shortReader')": [
                        175
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'skipTest')": [
                        184
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'testLineNumberReaderAndFileReaderLastLine(String)')": [
                        200
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#BoundedReaderTest', 'closeTest')": [
                        53,
                        61
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markReset')": [
                        70
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markResetFromOffset1')": [
                        85
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markResetMarkMore')": [
                        100
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markResetWithMarkOutsideBoundedReaderMax')": [
                        115
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset')": [
                        126
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'readMulti')": [
                        137
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'readMultiWithOffset')": [
                        151
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'readTillEnd')": [
                        165
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'shortReader')": [
                        175
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'skipTest')": [
                        184
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'testLineNumberReaderAndFileReaderLastLine(String)')": [
                        200
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testIO_356(int,int,int,String)')": [
                        200
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testIO_356(int,int,int,String)')": [
                        200
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testMark')": [
                        78,
                        89
                    ],
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testMarkSupported')": [
                        104
                    ],
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testRead(CharSequence)')": [
                        119,
                        126
                    ],
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testReadCharArray(CharSequence)')": [
                        144,
                        156
                    ],
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testReadCharArrayPortion(CharSequence)')": [
                        181,
                        189
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testMark')": [
                        78,
                        89
                    ],
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testMarkSupported')": [
                        104
                    ],
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testRead(CharSequence)')": [
                        119,
                        126
                    ],
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testReadCharArray(CharSequence)')": [
                        144,
                        156
                    ],
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testReadCharArrayPortion(CharSequence)')": [
                        181,
                        189
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/CharacterSetFilterReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#CharacterSetFilterReaderTest', 'testInputSize1FilterSize1')": [
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#CharacterSetFilterReaderTest', 'testInputSize1FilterSize1')": [
                        67
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', 'testExpected')": [
                        92
                    ],
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', 'testLong')": [
                        110
                    ],
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', 'testObject1')": [
                        129
                    ],
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', 'testObject2')": [
                        148
                    ],
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', 'testPrimitiveLong')": [
                        167
                    ],
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', 'testResolveProxyClass')": [
                        183
                    ],
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', 'testResolveProxyClassWithMultipleInterfaces')": [
                        199
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', 'testExpected')": [
                        92
                    ],
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', 'testLong')": [
                        110
                    ],
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', 'testObject1')": [
                        129
                    ],
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', 'testObject2')": [
                        148
                    ],
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', 'testPrimitiveLong')": [
                        167
                    ],
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', 'testResolveProxyClass')": [
                        183
                    ],
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', 'testResolveProxyClassWithMultipleInterfaces')": [
                        199
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ClosedInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#ClosedInputStreamTest', 'testRead')": [
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ClosedInputStreamTest', 'testRead')": [
                        30
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ClosedReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#ClosedReaderTest', 'testRead')": [
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ClosedReaderTest', 'testRead')": [
                        30
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testCounting')": [
                        37
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testEOF1')": [
                        70
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testEOF2')": [
                        87
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testEOF3')": [
                        100
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testResetting')": [
                        137
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testSkipping')": [
                        153
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testZeroLength1')": [
                        168
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testZeroLength2')": [
                        179
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testZeroLength3')": [
                        192
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testCounting')": [
                        37
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testEOF1')": [
                        70
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testEOF2')": [
                        87
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testEOF3')": [
                        100
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testResetting')": [
                        137
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testSkipping')": [
                        153
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testZeroLength1')": [
                        168
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testZeroLength2')": [
                        179
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testZeroLength3')": [
                        192
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/MarkShieldInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#MarkShieldInputStreamTest', 'markIsNoOpWhenUnderlyingDoesNotSupport')": [
                        53
                    ],
                    "('org.apache.commons.io.input#MarkShieldInputStreamTest', 'markIsNoOpWhenUnderlyingSupports')": [
                        65
                    ],
                    "('org.apache.commons.io.input#MarkShieldInputStreamTest', 'markSupportedIsFalseWhenUnderlyingFalse')": [
                        78,
                        81
                    ],
                    "('org.apache.commons.io.input#MarkShieldInputStreamTest', 'markSupportedIsFalseWhenUnderlyingTrue')": [
                        90,
                        93
                    ],
                    "('org.apache.commons.io.input#MarkShieldInputStreamTest', 'resetThrowsExceptionWhenUnderylingDoesNotSupport')": [
                        102
                    ],
                    "('org.apache.commons.io.input#MarkShieldInputStreamTest', 'resetThrowsExceptionWhenUnderylingSupports')": [
                        111
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#MarkShieldInputStreamTest', 'markIsNoOpWhenUnderlyingDoesNotSupport')": [
                        53
                    ],
                    "('org.apache.commons.io.input#MarkShieldInputStreamTest', 'markIsNoOpWhenUnderlyingSupports')": [
                        65
                    ],
                    "('org.apache.commons.io.input#MarkShieldInputStreamTest', 'markSupportedIsFalseWhenUnderlyingFalse')": [
                        78,
                        81
                    ],
                    "('org.apache.commons.io.input#MarkShieldInputStreamTest', 'markSupportedIsFalseWhenUnderlyingTrue')": [
                        90,
                        93
                    ],
                    "('org.apache.commons.io.input#MarkShieldInputStreamTest', 'resetThrowsExceptionWhenUnderylingDoesNotSupport')": [
                        102
                    ],
                    "('org.apache.commons.io.input#MarkShieldInputStreamTest', 'resetThrowsExceptionWhenUnderylingSupports')": [
                        111
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/MessageDigestCalculatingInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#MessageDigestCalculatingInputStreamTest', 'test')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#MessageDigestCalculatingInputStreamTest', 'test')": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/NullInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#NullInputStreamTest', 'testEOFException')": [
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#NullInputStreamTest', 'testEOFException')": [
                        63
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/NullReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#NullReaderTest', 'testEOFException')": [
                        63
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#NullReaderTest', 'testEOFException')": [
                        63
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testBrokenInputStreamRead')": [
                        132
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testBrokenInputStreamReadBuffer')": [
                        139
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testBrokenInputStreamReadSubBuffer')": [
                        146
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testDataByteCalled_add')": [
                        159
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testDataByteCalled_ctor')": [
                        191
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testDataBytesCalled')": [
                        221
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testGetObservers0')": [
                        256
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testGetObservers1')": [
                        264
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testGetObserversOrder')": [
                        273
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testNotificationCallbacks(int)')": [
                        283
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testBrokenInputStreamRead')": [
                        132
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testBrokenInputStreamReadBuffer')": [
                        139
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testBrokenInputStreamReadSubBuffer')": [
                        146
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testDataByteCalled_add')": [
                        159
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testDataByteCalled_ctor')": [
                        191
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testDataBytesCalled')": [
                        221
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testGetObservers0')": [
                        256
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testGetObservers1')": [
                        264
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testGetObserversOrder')": [
                        273
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testNotificationCallbacks(int)')": [
                        283
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ProxyReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#ProxyReaderTest', 'testNullCharArray')": [
                        56
                    ],
                    "('org.apache.commons.io.input#ProxyReaderTest', 'testNullCharBuffer')": [
                        64
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ProxyReaderTest', 'testNullCharArray')": [
                        56
                    ],
                    "('org.apache.commons.io.input#ProxyReaderTest', 'testNullCharBuffer')": [
                        64
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/QueueInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#QueueInputStreamTest', 'bufferedReads(String)')": [
                        68
                    ],
                    "('org.apache.commons.io.input#QueueInputStreamTest', 'bufferedReadWrite(String)')": [
                        80
                    ],
                    "('org.apache.commons.io.input#QueueInputStreamTest', 'bufferedWrites(String)')": [
                        93
                    ],
                    "('org.apache.commons.io.input#QueueInputStreamTest', 'unbufferedReadWrite(String)')": [
                        123
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#QueueInputStreamTest', 'bufferedReads(String)')": [
                        68
                    ],
                    "('org.apache.commons.io.input#QueueInputStreamTest', 'bufferedReadWrite(String)')": [
                        80
                    ],
                    "('org.apache.commons.io.input#QueueInputStreamTest', 'bufferedWrites(String)')": [
                        93
                    ],
                    "('org.apache.commons.io.input#QueueInputStreamTest', 'unbufferedReadWrite(String)')": [
                        123
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/RandomAccessFileInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testAvailable')": [
                        45
                    ],
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testAvailableLong')": [
                        53
                    ],
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testCtorCloseOnCloseFalse')": [
                        62
                    ],
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testCtorCloseOnCloseTrue')": [
                        72
                    ],
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testGetters')": [
                        87
                    ],
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testRead')": [
                        96
                    ],
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testReadByteArray')": [
                        118
                    ],
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testReadByteArrayBounds')": [
                        133
                    ],
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testSkip')": [
                        149
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testAvailable')": [
                        45
                    ],
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testAvailableLong')": [
                        53
                    ],
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testCtorCloseOnCloseFalse')": [
                        62
                    ],
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testCtorCloseOnCloseTrue')": [
                        72
                    ],
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testGetters')": [
                        87
                    ],
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testRead')": [
                        96
                    ],
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testReadByteArray')": [
                        118
                    ],
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testReadByteArrayBounds')": [
                        133
                    ],
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testSkip')": [
                        149
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testReadZero')": [
                        170
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testReadZeroEmptyString')": [
                        182
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testWithBufferedRead(String,String)')": [
                        209
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testWithSingleByteRead(String,String)')": [
                        234
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testReadZero')": [
                        170
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testReadZeroEmptyString')": [
                        182
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testWithBufferedRead(String,String)')": [
                        209
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testWithSingleByteRead(String,String)')": [
                        234
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/SequenceReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testClose')": [
                        60
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testMarkSupported')": [
                        69
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testRead')": [
                        76
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadCharArray')": [
                        89
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadCharArrayPortion')": [
                        106
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadCollection')": [
                        130
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadIterable')": [
                        143
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadLength0Readers')": [
                        152
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadLength1Readers')": [
                        160
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadList')": [
                        179
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testSkip')": [
                        188
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testClose')": [
                        60
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testMarkSupported')": [
                        69
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testRead')": [
                        76
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadCharArray')": [
                        89
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadCharArrayPortion')": [
                        106
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadCollection')": [
                        130
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadIterable')": [
                        143
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadLength0Readers')": [
                        152
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadLength1Readers')": [
                        160
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadList')": [
                        179
                    ],
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testSkip')": [
                        188
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/StringInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#StringInputStreamTest', 'testStrinConstructorString')": [
                        36
                    ],
                    "('org.apache.commons.io.input#StringInputStreamTest', 'testStrinConstructorStringCharset')": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#StringInputStreamTest', 'testStrinConstructorString')": [
                        36
                    ],
                    "('org.apache.commons.io.input#StringInputStreamTest', 'testStrinConstructorStringCharset')": [
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/TaggedReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#TaggedReaderTest', 'testEmptyReader')": [
                        87
                    ],
                    "('org.apache.commons.io.input#TaggedReaderTest', 'testNormalReader')": [
                        97
                    ],
                    "('org.apache.commons.io.input#TaggedReaderTest', 'testOtherException')": [
                        112
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#TaggedReaderTest', 'testEmptyReader')": [
                        87
                    ],
                    "('org.apache.commons.io.input#TaggedReaderTest', 'testNormalReader')": [
                        97
                    ],
                    "('org.apache.commons.io.input#TaggedReaderTest', 'testOtherException')": [
                        112
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/TailerTest.java": {
                "old": {
                    "('org.apache.commons.io.input#TailerTest', 'createFile(File,long)')": [
                        196
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testBuilderWithNonStandardTailable')": [
                        248
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testCreate')": [
                        259
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testCreaterWithDelayAndFromStartWithReopen')": [
                        269
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testCreateWithDelay')": [
                        279
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testCreateWithDelayAndFromStart')": [
                        289
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testCreateWithDelayAndFromStartWithBufferSize')": [
                        299
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testCreateWithDelayAndFromStartWithReopenAndBufferSize')": [
                        309
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testCreateWithDelayAndFromStartWithReopenAndBufferSizeAndCharset')": [
                        319
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testLongFile')": [
                        382
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testSimpleConstructor')": [
                        454
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testSimpleConstructorWithDelay')": [
                        466
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testSimpleConstructorWithDelayAndFromStart')": [
                        478
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testSimpleConstructorWithDelayAndFromStartWithBufferSize')": [
                        490
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testSimpleConstructorWithDelayAndFromStartWithReopen')": [
                        502
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testSimpleConstructorWithDelayAndFromStartWithReopenAndBufferSize')": [
                        514
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testSimpleConstructorWithDelayAndFromStartWithReopenAndBufferSizeAndCharset')": [
                        526
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#TailerTest', 'createFile(File,long)')": [
                        196
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testBuilderWithNonStandardTailable')": [
                        248
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testCreate')": [
                        259
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testCreaterWithDelayAndFromStartWithReopen')": [
                        269
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testCreateWithDelay')": [
                        279
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testCreateWithDelayAndFromStart')": [
                        289
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testCreateWithDelayAndFromStartWithBufferSize')": [
                        299
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testCreateWithDelayAndFromStartWithReopenAndBufferSize')": [
                        309
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testCreateWithDelayAndFromStartWithReopenAndBufferSizeAndCharset')": [
                        319
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testLongFile')": [
                        382
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testSimpleConstructor')": [
                        454
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testSimpleConstructorWithDelay')": [
                        466
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testSimpleConstructorWithDelayAndFromStart')": [
                        478
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testSimpleConstructorWithDelayAndFromStartWithBufferSize')": [
                        490
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testSimpleConstructorWithDelayAndFromStartWithReopen')": [
                        502
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testSimpleConstructorWithDelayAndFromStartWithReopenAndBufferSize')": [
                        514
                    ],
                    "('org.apache.commons.io.input#TailerTest', 'testSimpleConstructorWithDelayAndFromStartWithReopenAndBufferSizeAndCharset')": [
                        526
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/TimestampedObserverTest.java": {
                "old": {
                    "('org.apache.commons.io.input#TimestampedObserverTest', 'test')": [
                        48
                    ],
                    "('org.apache.commons.io.input#TimestampedObserverTest', 'testExample')": [
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#TimestampedObserverTest', 'test')": [
                        48
                    ],
                    "('org.apache.commons.io.input#TimestampedObserverTest', 'testExample')": [
                        65
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/UncheckedBufferedReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#UncheckedBufferedReaderTest', 'testRead')": [
                        85
                    ],
                    "('org.apache.commons.io.input#UncheckedBufferedReaderTest', 'testReadCharArray')": [
                        95
                    ],
                    "('org.apache.commons.io.input#UncheckedBufferedReaderTest', 'testReadCharArrayIndexed')": [
                        112
                    ],
                    "('org.apache.commons.io.input#UncheckedBufferedReaderTest', 'testReadCharBuffer')": [
                        139
                    ],
                    "('org.apache.commons.io.input#UncheckedBufferedReaderTest', 'testReadLine')": [
                        165
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#UncheckedBufferedReaderTest', 'testRead')": [
                        85
                    ],
                    "('org.apache.commons.io.input#UncheckedBufferedReaderTest', 'testReadCharArray')": [
                        95
                    ],
                    "('org.apache.commons.io.input#UncheckedBufferedReaderTest', 'testReadCharArrayIndexed')": [
                        112
                    ],
                    "('org.apache.commons.io.input#UncheckedBufferedReaderTest', 'testReadCharBuffer')": [
                        139
                    ],
                    "('org.apache.commons.io.input#UncheckedBufferedReaderTest', 'testReadLine')": [
                        165
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/UncheckedFilterInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#UncheckedFilterInputStreamTest', 'testRead')": [
                        69
                    ],
                    "('org.apache.commons.io.input#UncheckedFilterInputStreamTest', 'testReadByteArray')": [
                        79
                    ],
                    "('org.apache.commons.io.input#UncheckedFilterInputStreamTest', 'testReadByteArrayIndexed')": [
                        96
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#UncheckedFilterInputStreamTest', 'testRead')": [
                        69
                    ],
                    "('org.apache.commons.io.input#UncheckedFilterInputStreamTest', 'testReadByteArray')": [
                        79
                    ],
                    "('org.apache.commons.io.input#UncheckedFilterInputStreamTest', 'testReadByteArrayIndexed')": [
                        96
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/UncheckedFilterReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#UncheckedFilterReaderTest', 'testRead')": [
                        78
                    ],
                    "('org.apache.commons.io.input#UncheckedFilterReaderTest', 'testReadCharArray')": [
                        88
                    ],
                    "('org.apache.commons.io.input#UncheckedFilterReaderTest', 'testReadCharArrayIndexed')": [
                        105
                    ],
                    "('org.apache.commons.io.input#UncheckedFilterReaderTest', 'testReadCharBuffer')": [
                        132
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#UncheckedFilterReaderTest', 'testRead')": [
                        78
                    ],
                    "('org.apache.commons.io.input#UncheckedFilterReaderTest', 'testReadCharArray')": [
                        88
                    ],
                    "('org.apache.commons.io.input#UncheckedFilterReaderTest', 'testReadCharArrayIndexed')": [
                        105
                    ],
                    "('org.apache.commons.io.input#UncheckedFilterReaderTest', 'testReadCharBuffer')": [
                        132
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#WindowsLineEndingInputStreamTest', 'roundtrip(String,boolean)')": [
                        59
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#WindowsLineEndingInputStreamTest', 'roundtrip(String,boolean)')": [
                        59
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'getXmlInputStream(String,String,String,String)')": [
                        137
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'testHttpContent')": [
                        276
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'testLowerCaseEncodingWithTurkishLocale_IO_557')": [
                        329
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'testRawContent')": [
                        429
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'getXmlInputStream(String,String,String,String)')": [
                        137
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'testHttpContent')": [
                        276
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'testLowerCaseEncodingWithTurkishLocale_IO_557')": [
                        329
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'testRawContent')": [
                        429
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStreamTest', 'testIO683')": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStreamTest', 'testIO683')": [
                        44
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java": {
                "old": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReaderUtilitiesCompatibilityTest', 'calculateHttpEncoding(String,String,String,String,boolean,String)')": [
                        38
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReaderUtilitiesCompatibilityTest', 'calculateRawEncoding(String,String,String,String)')": [
                        49
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReaderUtilitiesCompatibilityTest', 'calculateHttpEncoding(String,String,String,String,boolean,String)')": [
                        38
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReaderUtilitiesCompatibilityTest', 'calculateRawEncoding(String,String,String,String)')": [
                        49
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testInvalidWriteLenUnder(String,BAOSFactory)')": [
                        134
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testInvalidWriteOffsetAndLenOver(String,BAOSFactory)')": [
                        142
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testInvalidWriteOffsetAndLenUnder(String,BAOSFactory)')": [
                        150
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testInvalidWriteOffsetOver(String,BAOSFactory)')": [
                        158
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testInvalidWriteOffsetUnder(String,BAOSFactory)')": [
                        166
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testStream(String,BAOSFactory)')": [
                        178,
                        208,
                        221
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testToBufferedInputStream(String,IOFunction)')": [
                        234,
                        237
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testToBufferedInputStreamEmpty(String,IOFunction)')": [
                        250,
                        253
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testToInputStream(String,BAOSFactory)')": [
                        263,
                        273,
                        285
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testToInputStreamEmpty(String,BAOSFactory)')": [
                        298
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testToInputStreamWithReset(String,BAOSFactory)')": [
                        310,
                        320,
                        334
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testWriteZero(String,BAOSFactory)')": [
                        347
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testInvalidWriteLenUnder(String,BAOSFactory)')": [
                        134
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testInvalidWriteOffsetAndLenOver(String,BAOSFactory)')": [
                        142
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testInvalidWriteOffsetAndLenUnder(String,BAOSFactory)')": [
                        150
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testInvalidWriteOffsetOver(String,BAOSFactory)')": [
                        158
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testInvalidWriteOffsetUnder(String,BAOSFactory)')": [
                        166
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testStream(String,BAOSFactory)')": [
                        178,
                        208,
                        221
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testToBufferedInputStream(String,IOFunction)')": [
                        234,
                        237
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testToBufferedInputStreamEmpty(String,IOFunction)')": [
                        250,
                        253
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testToInputStream(String,BAOSFactory)')": [
                        263,
                        273,
                        285
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testToInputStreamEmpty(String,BAOSFactory)')": [
                        298
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testToInputStreamWithReset(String,BAOSFactory)')": [
                        310,
                        320,
                        334
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTest', 'testWriteZero(String,BAOSFactory)')": [
                        347
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ChunkedOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'defaultConstructor')": [
                        35
                    ],
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'write_four_chunks')": [
                        60
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'defaultConstructor')": [
                        35
                    ],
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'write_four_chunks')": [
                        60
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ChunkedWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#ChunkedWriterTest', 'write_four_chunks')": [
                        49,
                        50
                    ],
                    "('org.apache.commons.io.output#ChunkedWriterTest', 'write_two_chunks_default_constructor')": [
                        61,
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ChunkedWriterTest', 'write_four_chunks')": [
                        49,
                        50
                    ],
                    "('org.apache.commons.io.output#ChunkedWriterTest', 'write_two_chunks_default_constructor')": [
                        61,
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#CountingOutputStreamTest', 'testCounting')": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#CountingOutputStreamTest', 'testCounting')": [
                        43
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java": {
                "old": {
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_Charset_constructor')": [
                        125
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_CharsetEncoder_constructor')": [
                        132
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_null_Charset_constructor')": [
                        139
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_null_CharsetEncoder_constructor')": [
                        146
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_null_CharsetName_constructor')": [
                        153
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_Charset_constructor')": [
                        160
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_CharsetEncoder_constructor')": [
                        167
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_constructor')": [
                        174
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_string_constructor')": [
                        181
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_Charset_constructor')": [
                        125
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_CharsetEncoder_constructor')": [
                        132
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_null_Charset_constructor')": [
                        139
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_null_CharsetEncoder_constructor')": [
                        146
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_null_CharsetName_constructor')": [
                        153
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_Charset_constructor')": [
                        160
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_CharsetEncoder_constructor')": [
                        167
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_constructor')": [
                        174
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_string_constructor')": [
                        181
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/NullOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#NullOutputStreamTest', 'testNewInstance')": [
                        43
                    ],
                    "('org.apache.commons.io.output#NullOutputStreamTest', 'testSingleton')": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#NullOutputStreamTest', 'testNewInstance')": [
                        43
                    ],
                    "('org.apache.commons.io.output#NullOutputStreamTest', 'testSingleton')": [
                        50
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/NullPrintStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#NullPrintStreamTest', 'testNullNewInstance')": [
                        43
                    ],
                    "('org.apache.commons.io.output#NullPrintStreamTest', 'testNullSingleton')": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#NullPrintStreamTest', 'testNullNewInstance')": [
                        43
                    ],
                    "('org.apache.commons.io.output#NullPrintStreamTest', 'testNullSingleton')": [
                        50
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/NullWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#NullWriterTest', 'testNull')": [
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#NullWriterTest', 'testNull')": [
                        30
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ProxyCollectionWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#ProxyCollectionWriterTest', 'testConstructorsNull')": [
                        397,
                        402
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ProxyCollectionWriterTest', 'testConstructorsNull')": [
                        397,
                        402
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ProxyWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#ProxyWriterTest', 'appendChar')": [
                        37
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'appendCharSequence')": [
                        46
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'appendCharSequence_with_offset')": [
                        55
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_append_char')": [
                        65
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_append_charSequence')": [
                        80
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_append_charSequence_offset')": [
                        94
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_close')": [
                        109,
                        115
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_flush')": [
                        124
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_char_array')": [
                        138
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_int')": [
                        152
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_offset_char_array')": [
                        166
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_string')": [
                        180
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_string_offset')": [
                        194
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'nullCharArray')": [
                        208
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'nullCharSequence')": [
                        216
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'nullString')": [
                        223
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'writeCharArray')": [
                        231
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'writeCharArrayPartial')": [
                        240
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'writeInt')": [
                        249
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'writeString')": [
                        258
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'writeStringPartial')": [
                        267
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ProxyWriterTest', 'appendChar')": [
                        37
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'appendCharSequence')": [
                        46
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'appendCharSequence_with_offset')": [
                        55
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_append_char')": [
                        65
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_append_charSequence')": [
                        80
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_append_charSequence_offset')": [
                        94
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_close')": [
                        109,
                        115
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_flush')": [
                        124
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_char_array')": [
                        138
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_int')": [
                        152
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_offset_char_array')": [
                        166
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_string')": [
                        180
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_string_offset')": [
                        194
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'nullCharArray')": [
                        208
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'nullCharSequence')": [
                        216
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'nullString')": [
                        223
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'writeCharArray')": [
                        231
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'writeCharArrayPartial')": [
                        240
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'writeInt')": [
                        249
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'writeString')": [
                        258
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'writeStringPartial')": [
                        267
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/QueueOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#QueueOutputStreamTest', 'writeInterrupted')": [
                        70
                    ],
                    "('org.apache.commons.io.output#QueueOutputStreamTest', 'writeString')": [
                        101
                    ],
                    "('org.apache.commons.io.output#QueueOutputStreamTest', 'writeStringMultiThread')": [
                        111
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#QueueOutputStreamTest', 'writeInterrupted')": [
                        70
                    ],
                    "('org.apache.commons.io.output#QueueOutputStreamTest', 'writeString')": [
                        101
                    ],
                    "('org.apache.commons.io.output#QueueOutputStreamTest', 'writeStringMultiThread')": [
                        111
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendChar')": [
                        36
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendCharSequence')": [
                        44
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendCharSequencePortion')": [
                        52
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendConstructCapacity')": [
                        60
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendConstructNull')": [
                        68
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendConstructStringBuilder')": [
                        77
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testClose')": [
                        86
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testWriteChar')": [
                        96
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testWriteCharArray')": [
                        108
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testWriteCharArrayPortion')": [
                        118
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testWriteString')": [
                        128
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testWriteStringPortion')": [
                        138
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendChar')": [
                        36
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendCharSequence')": [
                        44
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendCharSequencePortion')": [
                        52
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendConstructCapacity')": [
                        60
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendConstructNull')": [
                        68
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendConstructStringBuilder')": [
                        77
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testClose')": [
                        86
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testWriteChar')": [
                        96
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testWriteCharArray')": [
                        108
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testWriteCharArrayPortion')": [
                        118
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testWriteString')": [
                        128
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testWriteStringPortion')": [
                        138
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#TaggedOutputStreamTest', 'testNormalStream')": [
                        86,
                        87
                    ],
                    "('org.apache.commons.io.output#TaggedOutputStreamTest', 'testOtherException')": [
                        105
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#TaggedOutputStreamTest', 'testNormalStream')": [
                        86,
                        87
                    ],
                    "('org.apache.commons.io.output#TaggedOutputStreamTest', 'testOtherException')": [
                        105
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/TaggedWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#TaggedWriterTest', 'testNormalWriter')": [
                        86,
                        87
                    ],
                    "('org.apache.commons.io.output#TaggedWriterTest', 'testOtherException')": [
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#TaggedWriterTest', 'testNormalWriter')": [
                        86,
                        87
                    ],
                    "('org.apache.commons.io.output#TaggedWriterTest', 'testOtherException')": [
                        103
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/TeeOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#TeeOutputStreamTest', 'testTee')": [
                        83
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#TeeOutputStreamTest', 'testTee')": [
                        83
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/TeeWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#TeeWriterTest', 'testConstructorsNull')": [
                        377,
                        382
                    ],
                    "('org.apache.commons.io.output#TeeWriterTest', 'testTee')": [
                        396
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#TeeWriterTest', 'testConstructorsNull')": [
                        377,
                        382
                    ],
                    "('org.apache.commons.io.output#TeeWriterTest', 'testTee')": [
                        396
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ThresholdingOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#ThresholdingOutputStreamTest', 'testSetByteCount')": [
                        35
                    ],
                    "('org.apache.commons.io.output#ThresholdingOutputStreamTest', 'testThresholdIOConsumer')": [
                        62,
                        71,
                        79
                    ],
                    "('org.apache.commons.io.output#ThresholdingOutputStreamTest', 'testThresholdIOConsumerIOException')": [
                        90
                    ],
                    "('org.apache.commons.io.output#ThresholdingOutputStreamTest', 'testThresholdIOConsumerUncheckedException')": [
                        100
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ThresholdingOutputStreamTest', 'testSetByteCount')": [
                        35
                    ],
                    "('org.apache.commons.io.output#ThresholdingOutputStreamTest', 'testThresholdIOConsumer')": [
                        62,
                        71,
                        79
                    ],
                    "('org.apache.commons.io.output#ThresholdingOutputStreamTest', 'testThresholdIOConsumerIOException')": [
                        90
                    ],
                    "('org.apache.commons.io.output#ThresholdingOutputStreamTest', 'testThresholdIOConsumerUncheckedException')": [
                        100
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testFlush')": [
                        50
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWithBufferedWrite(String,String)')": [
                        148
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWithSingleByteWrite(String,Charset)')": [
                        163
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWithSingleByteWrite(String,CharsetDecoder)')": [
                        174
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWithSingleByteWrite(String,String)')": [
                        185
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWriteImmediately')": [
                        196
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testFlush')": [
                        50
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWithBufferedWrite(String,String)')": [
                        148
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWithSingleByteWrite(String,Charset)')": [
                        163
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWithSingleByteWrite(String,CharsetDecoder)')": [
                        174
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWithSingleByteWrite(String,String)')": [
                        185
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWriteImmediately')": [
                        196
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/XmlStreamWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testEmpty')": [
                        95
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#XmlStreamWriterTest', 'testEmpty')": [
                        95
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/test/TestUtils.java": {
                "old": {
                    "('org.apache.commons.io.test#TestUtils', 'createFile(File,long)')": [
                        173
                    ],
                    "('org.apache.commons.io.test#TestUtils', 'createLineBasedFile(File,String)')": [
                        183
                    ],
                    "('org.apache.commons.io.test#TestUtils', 'generateTestData(File,long)')": [
                        197
                    ],
                    "('org.apache.commons.io.test#TestUtils', 'generateTestData(long)')": [
                        204
                    ]
                },
                "new": {
                    "('org.apache.commons.io.test#TestUtils', 'createFile(File,long)')": [
                        173
                    ],
                    "('org.apache.commons.io.test#TestUtils', 'createLineBasedFile(File,String)')": [
                        183
                    ],
                    "('org.apache.commons.io.test#TestUtils', 'generateTestData(File,long)')": [
                        197
                    ],
                    "('org.apache.commons.io.test#TestUtils', 'generateTestData(long)')": [
                        204
                    ]
                }
            }
        }
    },
    "6d6096f9b12887e89de4414bb5d5432cf3834d47": {
        "authored_data": "2022 Jun 14 23:13",
        "commit.message": "PMD: Remove unnecessary parentheses",
        "commit.author.name": "Gary Gregory",
        "pcid": "62ff89308f8efd326b84c79aef0531bebdc5ac2a",
        "changes": {
            "src/main/java/org/apache/commons/io/EndianUtils.java": {
                "old": {
                    "('org.apache.commons.io#EndianUtils', 'readSwappedInteger(byte,int)')": [
                        112,
                        115
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedUnsignedInteger(byte,int)')": [
                        196,
                        198
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedUnsignedInteger(InputStream)')": [
                        218
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedUnsignedShort(byte,int)')": [
                        234,
                        235
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedUnsignedShort(InputStream)')": [
                        249
                    ],
                    "('org.apache.commons.io#EndianUtils', 'swapInteger(int)')": [
                        277,
                        278,
                        279,
                        280
                    ],
                    "('org.apache.commons.io#EndianUtils', 'swapLong(long)')": [
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297
                    ],
                    "('org.apache.commons.io#EndianUtils', 'swapShort(short)')": [
                        306,
                        307
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedInteger(byte,int,int)')": [
                        362,
                        363,
                        364,
                        365
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedInteger(OutputStream,int)')": [
                        376,
                        377,
                        378,
                        379
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedLong(byte,int,long)')": [
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedLong(OutputStream,long)')": [
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedShort(byte,int,short)')": [
                        426,
                        427
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedShort(OutputStream,short)')": [
                        438,
                        439
                    ]
                },
                "new": {
                    "('org.apache.commons.io#EndianUtils', 'readSwappedInteger(byte,int)')": [
                        112,
                        115
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedUnsignedInteger(byte,int)')": [
                        196,
                        198
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedUnsignedInteger(InputStream)')": [
                        218
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedUnsignedShort(byte,int)')": [
                        234,
                        235
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedUnsignedShort(InputStream)')": [
                        249
                    ],
                    "('org.apache.commons.io#EndianUtils', 'swapInteger(int)')": [
                        277,
                        278,
                        279,
                        280
                    ],
                    "('org.apache.commons.io#EndianUtils', 'swapLong(long)')": [
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        296,
                        297
                    ],
                    "('org.apache.commons.io#EndianUtils', 'swapShort(short)')": [
                        306,
                        307
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedInteger(byte,int,int)')": [
                        362,
                        363,
                        364,
                        365
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedInteger(OutputStream,int)')": [
                        376,
                        377,
                        378,
                        379
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedLong(byte,int,long)')": [
                        390,
                        391,
                        392,
                        393,
                        394,
                        395,
                        396,
                        397
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedLong(OutputStream,long)')": [
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedShort(byte,int,short)')": [
                        426,
                        427
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedShort(OutputStream,short)')": [
                        438,
                        439
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/FilenameUtils.java": {
                "old": {
                    "('org.apache.commons.io#FilenameUtils', 'doNormalize(String,char,boolean)')": [
                        361
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'isIPv6Address(String)')": [
                        1110,
                        1113,
                        1114
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FilenameUtils', 'doNormalize(String,char,boolean)')": [
                        361
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'isIPv6Address(String)')": [
                        1110,
                        1113,
                        1114
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/file/attribute/FileTimes.java": {
                "old": {
                    "('org.apache.commons.io.file.attribute#FileTimes', 'toNtfsTime(FileTime)')": [
                        219
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file.attribute#FileTimes', 'toNtfsTime(FileTime)')": [
                        219
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/BoundedReader.java": {
                "old": {
                    "('org.apache.commons.io.input#BoundedReader', 'read')": [
                        105
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#BoundedReader', 'read')": [
                        105
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ReaderInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ReaderInputStream', 'read(byte,int,int)')": [
                        331
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReaderInputStream', 'read(byte,int,int)')": [
                        331
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#UnsynchronizedByteArrayOutputStream', 'write(byte,int,int)')": [
                        126
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#UnsynchronizedByteArrayOutputStream', 'write(byte,int,int)')": [
                        126
                    ]
                }
            }
        }
    },
    "62ff89308f8efd326b84c79aef0531bebdc5ac2a": {
        "authored_data": "2022 Jun 14 22:53",
        "commit.message": "No need for an empty block\n\nUse inline comments",
        "commit.author.name": "Gary Gregory",
        "pcid": "bc73e5bde0a1ab0c08040b7e1a32cce753f5ae46",
        "changes": {
            "src/main/java/org/apache/commons/io/monitor/FileAlterationObserver.java": {
                "old": {
                    "('org.apache.commons.io.monitor#FileAlterationObserver', 'checkAndNotify')": [
                        235,
                        240,
                        246,
                        247,
                        248,
                        249,
                        250
                    ]
                },
                "new": {
                    "('org.apache.commons.io.monitor#FileAlterationObserver', 'checkAndNotify')": [
                        235,
                        240,
                        246,
                        247,
                        248,
                        249
                    ]
                }
            }
        }
    },
    "bc73e5bde0a1ab0c08040b7e1a32cce753f5ae46": {
        "authored_data": "2022 Jun 14 22:50",
        "commit.message": "Remove obsolete comments and code",
        "commit.author.name": "Gary Gregory",
        "pcid": "4947b5735a97f965bf37da1c296398cd17664ec5",
        "changes": {
            "src/main/java/org/apache/commons/io/file/PathUtils.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtils', 'newOutputStream(Path,LinkOption,OpenOption)')": [
                        1096,
                        1097,
                        1098,
                        1099
                    ],
                    "('org.apache.commons.io.file#PathUtils', None)": [
                        1270,
                        1271,
                        1272,
                        1273,
                        1274,
                        1275,
                        1276,
                        1277,
                        1282,
                        1283,
                        1284,
                        1285,
                        1301,
                        1302,
                        1303,
                        1304,
                        1305,
                        1306,
                        1307,
                        1308,
                        1309,
                        1310,
                        1311
                    ],
                    "('org.apache.commons.io.file#PathUtils', 'requireCanWrite(Path,String)')": [
                        1278,
                        1279,
                        1280,
                        1281
                    ],
                    "('org.apache.commons.io.file#PathUtils', 'requireExists(Path,String,LinkOption)')": [
                        1299,
                        1300
                    ],
                    "('org.apache.commons.io.file#PathUtils', 'requireFile(Path,String)')": [
                        1312,
                        1313,
                        1314,
                        1315
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtils', 'newOutputStream(Path,LinkOption,OpenOption)')": [
                        1096
                    ]
                }
            }
        }
    },
    "4947b5735a97f965bf37da1c296398cd17664ec5": {
        "authored_data": "2022 Jun 14 22:50",
        "commit.message": "Reuse IOUtils.consume() which also avoids a PMD empty loop body error.",
        "commit.author.name": "Gary Gregory",
        "pcid": "0732b44ae2706681a0bc4b8e9d66f0040ff3b3d7",
        "changes": {
            "src/main/java/org/apache/commons/io/input/ObservableInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ObservableInputStream', 'consume')": [
                        172,
                        173
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', None)": [
                        174,
                        175
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ObservableInputStream', 'consume')": [
                        172
                    ]
                }
            }
        }
    }
}