{
    "02c1b678a50501cbbfcf1e584a99ebeac4832c79": {
        "authored_data": "2021 Mar 05 22:34",
        "commit.message": "No need to nest in else.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "a08f241ca008d93800b2e4af350a9716eff77b5c",
        "changes": {
            "src/main/java/org/apache/commons/io/FileSystemUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileSystemUtils', 'freeSpaceUnix(String,boolean,boolean,Duration)')": [
                        429,
                        430,
                        431,
                        432
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileSystemUtils', 'freeSpaceUnix(String,boolean,boolean,Duration)')": [
                        429,
                        434,
                        435
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', 'moveDirectoryToDirectory(File,File,boolean)')": [
                        2254,
                        2255,
                        2256
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', 'moveDirectoryToDirectory(File,File,boolean)')": [
                        2254,
                        2255,
                        2259
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/FilenameUtils.java": {
                "old": {
                    "('org.apache.commons.io#FilenameUtils', 'getPrefixLength(String)')": [
                        670,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680,
                        681,
                        682,
                        683,
                        684,
                        685,
                        686
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FilenameUtils', 'getPrefixLength(String)')": [
                        670,
                        671,
                        676,
                        677,
                        680,
                        681,
                        682,
                        683,
                        684,
                        685,
                        686,
                        687,
                        688,
                        689
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/LineIterator.java": {
                "old": {
                    "('org.apache.commons.io#LineIterator', 'hasNext')": [
                        91,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        105,
                        106,
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.io#LineIterator', 'hasNext')": [
                        91,
                        92,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        102,
                        103,
                        104,
                        105,
                        107,
                        108,
                        109
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java": {
                "old": {
                    "('org.apache.commons.io.comparator#LastModifiedFileComparator', 'compare(File,File)')": [
                        73,
                        75,
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.io.comparator#LastModifiedFileComparator', 'compare(File,File)')": [
                        73,
                        74,
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java": {
                "old": {
                    "('org.apache.commons.io.comparator#SizeFileComparator', 'compare(File,File)')": [
                        126,
                        128,
                        129
                    ]
                },
                "new": {
                    "('org.apache.commons.io.comparator#SizeFileComparator', 'compare(File,File)')": [
                        126,
                        127,
                        130
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/file/PathUtils.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtils', 'directoryAndFileContentEquals(Path,Path,LinkOption,OpenOption,FileVisitOption)')": [
                        544,
                        545,
                        546,
                        547,
                        548
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtils', 'directoryAndFileContentEquals(Path,Path,LinkOption,OpenOption,FileVisitOption)')": [
                        544,
                        546,
                        547,
                        548
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/NullInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#NullInputStream', 'available')": [
                        143,
                        145,
                        146
                    ],
                    "('org.apache.commons.io.input#NullInputStream', None)": [
                        147
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#NullInputStream', 'available')": [
                        143,
                        144,
                        146,
                        147
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ObservableInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ObservableInputStream', 'notify(byte,int,int,IOException)')": [
                        248
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read')": [
                        267
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ObservableInputStream', 'notify(byte,int,int,IOException)')": [
                        248,
                        249
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read')": [
                        268,
                        269
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', 'readLine')": [
                        406,
                        407,
                        408
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', 'readLine')": [
                        406,
                        410
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/SequenceReader.java": {
                "old": {
                    "('org.apache.commons.io.input#SequenceReader', 'read')": [
                        86,
                        87,
                        88
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#SequenceReader', 'read')": [
                        86,
                        89
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#WindowsLineEndingInputStream', 'read')": [
                        79,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#WindowsLineEndingInputStream', 'read')": [
                        79,
                        80,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStream', 'fillBuffer')": [
                        87
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStream', 'fillBuffer')": [
                        87,
                        88
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'write(byte,int,int)')": [
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'write(byte,int,int)')": [
                        62,
                        63
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#DeferredFileOutputStream', 'toInputStream')": [
                        278,
                        279
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStream', None)": [
                        280
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#DeferredFileOutputStream', 'toInputStream')": [
                        278,
                        279
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java": {
                "old": {
                    "('org.apache.commons.io.output#FileWriterWithEncoding', 'initWriter(File,Object,boolean)')": [
                        233,
                        235,
                        236
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#FileWriterWithEncoding', 'initWriter(File,Object,boolean)')": [
                        233,
                        234,
                        237
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/UnsynchronizedByteArrayOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#UnsynchronizedByteArrayOutputStream', 'write(byte,int,int)')": [
                        58
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#UnsynchronizedByteArrayOutputStream', 'write(byte,int,int)')": [
                        58,
                        59
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStreamTest', 'testRandomRead')": [
                        61,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStreamTest', 'testRandomRead')": [
                        61,
                        62,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java": {
                "old": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', 'calculateHttpEncoding(String,String,String,String,String,InputStream,boolean)')": [
                        519,
                        520,
                        521,
                        522,
                        523,
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558,
                        559,
                        560,
                        561
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', 'calculateHttpEncoding(String,String,String,String,String,InputStream,boolean)')": [
                        519,
                        524,
                        525,
                        526,
                        527,
                        528,
                        529,
                        530,
                        531,
                        532,
                        533,
                        534,
                        535,
                        536,
                        537,
                        538,
                        539,
                        540,
                        541,
                        542,
                        543,
                        544,
                        545,
                        546,
                        547,
                        548,
                        549,
                        550,
                        551,
                        552,
                        553,
                        554,
                        555,
                        556,
                        557,
                        558,
                        559,
                        560,
                        561,
                        562
                    ]
                }
            }
        }
    },
    "dbbfa753e0e4e8345314901d63f3e2ea92437b69": {
        "authored_data": "2021 Feb 28 21:54",
        "commit.message": "Use varargs.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "0a7b4f51fd69f439aee960780e39d8110c50cd7e",
        "changes": {
            "src/test/java/org/apache/commons/io/FileUtilsTestCase.java": {
                "old": {
                    "('org.apache.commons.io#FileUtilsTestCase', 'testCopyDirectoryFiltered')": [
                        735
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtilsTestCase', 'testCopyDirectoryFiltered')": [
                        735
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java": {
                "old": {
                    "('org.apache.commons.io#FilenameUtilsTestCase', 'testIsExtensionArray')": [
                        1092,
                        1095,
                        1096,
                        1099,
                        1102,
                        1105,
                        1108,
                        1111,
                        1114,
                        1117,
                        1120,
                        1123
                    ],
                    "('org.apache.commons.io#FilenameUtilsTestCase', 'testIsExtensionCollection')": [
                        1159,
                        1160,
                        1161,
                        1162,
                        1166,
                        1167,
                        1168,
                        1172,
                        1173,
                        1174,
                        1178,
                        1179,
                        1180,
                        1184,
                        1185,
                        1186,
                        1187,
                        1188,
                        1189
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FilenameUtilsTestCase', 'testIsExtensionArray')": [
                        1092,
                        1095,
                        1096,
                        1099,
                        1102,
                        1105,
                        1108,
                        1111,
                        1114,
                        1117,
                        1120,
                        1123
                    ],
                    "('org.apache.commons.io#FilenameUtilsTestCase', 'testIsExtensionCollection')": [
                        1159,
                        1160,
                        1161,
                        1162,
                        1166,
                        1167,
                        1168,
                        1172,
                        1173,
                        1174,
                        1178,
                        1179,
                        1180,
                        1184,
                        1185,
                        1186,
                        1187,
                        1188,
                        1189
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java": {
                "old": {
                    "('org.apache.commons.io.comparator#CompositeFileComparatorTest', 'setUp')": [
                        42,
                        43,
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.io.comparator#CompositeFileComparatorTest', 'setUp')": [
                        42
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testDeprecatedWildcard')": [
                        463
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testNameFilter')": [
                        1261
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testPrefix')": [
                        1370
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testSuffix')": [
                        1600
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testWildcard')": [
                        1772
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testDeprecatedWildcard')": [
                        463
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testNameFilter')": [
                        1261
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testPrefix')": [
                        1370
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testSuffix')": [
                        1600
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testWildcard')": [
                        1772
                    ]
                }
            }
        }
    }
}