{
    "34686ed175a04091e3082faadf0adf1d44510bd3": {
        "authored_data": "2020 Jul 22 19:20",
        "commit.message": "Remove unused exceptions. Use try-with-resoruces.\nClean ups. Formatting.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "b30513182c8546c5602cc0ed035f8cd1f7d048c2",
        "changes": {
            "src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', None)": [
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        161,
                        162,
                        164,
                        165,
                        169
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', None)": [
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        161,
                        162,
                        164,
                        165,
                        169
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/BoundedReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#BoundedReaderTest', 'testLineNumberReaderAndStringReaderLastLineEolYes')": [
                        206
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'testLineNumberReaderAndFileReaderLastLineEolNo')": [
                        211
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'testLineNumberReaderAndFileReaderLastLineEolYes')": [
                        216
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'testReadBytesEOF')": [
                        234
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#BoundedReaderTest', 'testLineNumberReaderAndStringReaderLastLineEolYes')": [
                        206
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'testLineNumberReaderAndFileReaderLastLineEolNo')": [
                        211
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'testLineNumberReaderAndFileReaderLastLineEolYes')": [
                        216
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'testReadBytesEOF')": [
                        234
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testDataBytesCalled')": [
                        120,
                        121,
                        122,
                        123,
                        131,
                        132,
                        133,
                        134
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testDataBytesCalled')": [
                        121,
                        122,
                        123,
                        131,
                        132,
                        133
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testWithBufferedRead(String,String)')": [
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testWithBufferedRead(String,String)')": [
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'closeReader')": [
                        74
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'closeReader')": [
                        74,
                        75
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', None)": [
                        76
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamFile', 'testDataIntegrityWithBufferedReader(String,String,Integer,boolean)')": [
                        64,
                        65,
                        66,
                        77,
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamFile', None)": [
                        39
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamFile', 'testDataIntegrityWithBufferedReader(String,String,Integer,boolean)')": [
                        65,
                        66,
                        77,
                        78
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/SequenceReaderTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#SwappedDataInputStreamTest', 'testReadBoolean')": [
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75
                    ],
                    "('org.apache.commons.io.input#SwappedDataInputStreamTest', 'testReadUTF')": [
                        139
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#SwappedDataInputStreamTest', 'testReadBoolean')": [
                        65,
                        66,
                        67,
                        68,
                        69,
                        70
                    ],
                    "('org.apache.commons.io.input#SwappedDataInputStreamTest', None)": [
                        71
                    ],
                    "('org.apache.commons.io.input#SwappedDataInputStreamTest', 'testReadUTF')": [
                        135
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'testNullFileInput')": [
                        86
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'testNullInputStreamInput')": [
                        91
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'testNullURLInput')": [
                        96
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'testNullURLConnectionInput')": [
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'testNullFileInput')": [
                        86
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'testNullInputStreamInput')": [
                        91
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'testNullURLInput')": [
                        96
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'testNullURLConnectionInput')": [
                        101
                    ]
                }
            }
        }
    },
    "7ef6a88f7d8f6c21e62bad287fb79a8a9cd637b4": {
        "authored_data": "2020 Jul 18 21:01",
        "commit.message": "Javadoc.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "bf3108c1fa0831cb86dc263f5391c3708475c714",
        "changes": {
            "src/main/java/org/apache/commons/io/output/NullOutputStream.java": {
                "old": {
                    "(None, None)": [
                        23,
                        25,
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        25
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/NullPrintStream.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                },
                "new": {
                    "(None, None)": [
                        23
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/NullWriter.java": {
                "old": {
                    "(None, None)": [
                        22,
                        24,
                        25,
                        26
                    ]
                },
                "new": {
                    "(None, None)": [
                        22,
                        24,
                        25
                    ]
                }
            }
        }
    },
    "1e3642f3f7ec11be0e465ee64638b0295407ff23": {
        "authored_data": "2020 Jul 16 14:31",
        "commit.message": "Minor formatting.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "c60a04a0b771bb86cb66849d5f1abec30132f0c4",
        "changes": {
            "src/main/java/org/apache/commons/io/filefilter/AgeFileFilter.java": {
                "new": {
                    "('org.apache.commons.io.filefilter#AgeFileFilter', None)": [
                        56
                    ]
                }
            }
        }
    },
    "c60a04a0b771bb86cb66849d5f1abec30132f0c4": {
        "authored_data": "2020 Jul 15 14:05",
        "commit.message": "Simpler lambdas.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "a2c7165721d14ac65627856acc61e7e93a9713e2",
        "changes": {
            "src/main/java/org/apache/commons/io/input/ProxyInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ProxyInputStream', 'close')": [
                        147
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ProxyInputStream', 'close')": [
                        147
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/ProxyOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#ProxyOutputStream', 'close')": [
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ProxyOutputStream', 'close')": [
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/ProxyWriter.java": {
                "old": {
                    "('org.apache.commons.io.output#ProxyWriter', 'close')": [
                        208
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ProxyWriter', 'close')": [
                        208
                    ]
                }
            }
        }
    },
    "6c06f5bb4e0acf385113b59de4bda321bbb6f210": {
        "authored_data": "2020 Jul 09 22:34",
        "commit.message": "Implemented CharSequenceReader.ready (#122)\n\n",
        "commit.author.name": "Rob Spoor",
        "pcid": "2fd345578627290e3e6e713a1e1ea1b540f756f7",
        "changes": {
            "src/main/java/org/apache/commons/io/input/CharSequenceReader.java": {
                "new": {
                    "('org.apache.commons.io.input#CharSequenceReader', None)": [
                        169,
                        170,
                        171,
                        172,
                        173,
                        176,
                        177,
                        178
                    ],
                    "('org.apache.commons.io.input#CharSequenceReader', 'ready')": [
                        174,
                        175
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java": {
                "new": {
                    "(None, None)": [
                        20
                    ],
                    "('org.apache.commons.io.input#CharSequenceReaderTest', None)": [
                        53,
                        54,
                        55
                    ],
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testReady')": [
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ]
                }
            }
        }
    }
}