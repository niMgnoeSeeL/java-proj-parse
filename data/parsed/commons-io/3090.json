{
    "c9348861506b7fa79c3b89107adb574613b3abc6": {
        "authored_data": "2007 Oct 24 15:47",
        "commit.message": "Add @version to javadocs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@587913 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "fb24a474dee4ca92f28d5d589f38d11d635b543b",
        "changes": {
            "src/java/org/apache/commons/io/input/AutoCloseInputStream.java": {
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/java/org/apache/commons/io/input/CloseShieldInputStream.java": {
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/java/org/apache/commons/io/input/ClosedInputStream.java": {
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            },
            "src/java/org/apache/commons/io/input/TeeInputStream.java": {
                "new": {
                    "(None, None)": [
                        34
                    ]
                }
            },
            "src/java/org/apache/commons/io/output/CloseShieldOutputStream.java": {
                "new": {
                    "(None, None)": [
                        28
                    ]
                }
            },
            "src/java/org/apache/commons/io/output/ClosedOutputStream.java": {
                "new": {
                    "(None, None)": [
                        30
                    ]
                }
            }
        }
    },
    "fb24a474dee4ca92f28d5d589f38d11d635b543b": {
        "authored_data": "2007 Oct 20 05:12",
        "commit.message": "IO-130 Add support for temporary files to DeferredFileOutputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@586668 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "d2bd4422c37efd98bcf11009d5eba0d91f891118",
        "changes": {
            "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#DeferredFileOutputStream', None)": [
                        165,
                        166
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#DeferredFileOutputStream', None)": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStream', 'thresholdReached')": [
                        161,
                        162,
                        163
                    ]
                }
            },
            "src/test/org/apache/commons/io/output/DeferredFileOutputStreamTest.java": {
                "new": {
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', None)": [
                        241,
                        242,
                        261,
                        262,
                        263,
                        264,
                        265,
                        294,
                        295,
                        296,
                        297,
                        298,
                        326,
                        327,
                        328,
                        329,
                        330,
                        341,
                        342,
                        343,
                        344,
                        345,
                        346,
                        347
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileBelowThreshold')": [
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileAboveThreshold')": [
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileAboveThresholdPrefixOnly')": [
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', 'testTempFileError')": [
                        331,
                        332,
                        333,
                        334,
                        335,
                        336,
                        337,
                        338,
                        339,
                        340
                    ]
                }
            }
        }
    },
    "d2bd4422c37efd98bcf11009d5eba0d91f891118": {
        "authored_data": "2007 Oct 15 17:02",
        "commit.message": "IO-127 - add ant build script to check JDK 1.3 compatibility and remove references to JDK 1.4 dependant class from FileFilterUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584823 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "91e47f76a97d4e549a92f0a01137529e9bee257f",
        "changes": {
            "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#FileFilterUtils', None)": [
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        319,
                        320
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'regex(String)')": [
                        291,
                        292
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'regex(String,IOCase)')": [
                        304,
                        305
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'regex(String,int)')": [
                        317,
                        318
                    ]
                }
            },
            "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testRegex')": [
                        826,
                        831,
                        841,
                        846,
                        852,
                        859,
                        866
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testRegex')": [
                        826,
                        831,
                        841,
                        846,
                        852,
                        859,
                        866
                    ]
                }
            }
        }
    },
    "91e47f76a97d4e549a92f0a01137529e9bee257f": {
        "authored_data": "2007 Oct 15 11:37",
        "commit.message": "IO-129 Add a configurable option to close the OutputStream - patch from Jukka Zitting\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584746 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "422ce6fa23b426ab71f271d4643ce9163cf707d3",
        "changes": {
            "src/java/org/apache/commons/io/input/TeeInputStream.java": {
                "old": {
                    "(None, None)": [
                        30,
                        31
                    ],
                    "('org.apache.commons.io.input#TeeInputStream', None)": [
                        45
                    ]
                },
                "new": {
                    "(None, None)": [
                        30,
                        31,
                        32
                    ],
                    "('org.apache.commons.io.input#TeeInputStream', None)": [
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        52,
                        53,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        93,
                        94
                    ],
                    "('org.apache.commons.io.input#TeeInputStream', 'close')": [
                        87,
                        88,
                        89,
                        90,
                        91,
                        92
                    ]
                }
            }
        }
    },
    "1b4e77faebd6a9c43fc57a6aeefb605c9188acfe": {
        "authored_data": "2007 Oct 13 01:34",
        "commit.message": "IO-74 Rename RegexFilter to RegexFileFilter to conform to the naming convention of other implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584359 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "d82a2bac09321150fc38e342ccf572e6561f9a23",
        "changes": {
            "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'regex(String)')": [
                        292
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'regex(String,IOCase)')": [
                        305
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'regex(String,int)')": [
                        318
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'regex(String)')": [
                        292
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'regex(String,IOCase)')": [
                        305
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'regex(String,int)')": [
                        318
                    ]
                }
            },
            "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testRegex')": [
                        836,
                        873
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testRegex')": [
                        836,
                        873
                    ]
                }
            }
        }
    },
    "d82a2bac09321150fc38e342ccf572e6561f9a23": {
        "authored_data": "2007 Oct 13 01:16",
        "commit.message": "IO-122 add Helper classes for controlling closing of streams - thanks to Jukka Zitting\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584357 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "4a02524aef7f78af52cc7c7beedfa1eb83f8ccb5",
        "changes": {
            "src/test/org/apache/commons/io/input/PackageTestSuite.java": {
                "new": {
                    "('org.apache.commons.io.input#PackageTestSuite', 'suite')": [
                        36,
                        38,
                        39
                    ]
                }
            },
            "src/test/org/apache/commons/io/output/PackageTestSuite.java": {
                "new": {
                    "('org.apache.commons.io.output#PackageTestSuite', 'suite')": [
                        37,
                        38
                    ]
                }
            }
        }
    },
    "4a02524aef7f78af52cc7c7beedfa1eb83f8ccb5": {
        "authored_data": "2007 Oct 12 23:36",
        "commit.message": "IO-128 - currently file name \"normalization\" errors in the equals method causes a mis-leading NullPointerException. Adding a check for this and throwing an IllegalArgumentException with a better message should improve the user experience.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584325 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "ea3781d3e141599cb3a36f8a236366927a9d10fe",
        "changes": {
            "src/java/org/apache/commons/io/FilenameUtils.java": {
                "new": {
                    "('org.apache.commons.io#FilenameUtils', 'equals(String,String,boolean,IOCase)')": [
                        980,
                        981,
                        982,
                        983
                    ]
                }
            },
            "src/test/org/apache/commons/io/FilenameUtilsTestCase.java": {
                "new": {
                    "('org.apache.commons.io#FilenameUtilsTestCase', None)": [
                        787,
                        788,
                        789,
                        806,
                        807,
                        808,
                        809,
                        810
                    ],
                    "('org.apache.commons.io#FilenameUtilsTestCase', 'testEqualsNormalizedError_IO_128')": [
                        790,
                        791,
                        792,
                        793,
                        794,
                        795,
                        796,
                        797,
                        798,
                        799,
                        800,
                        801,
                        802,
                        803,
                        804,
                        805
                    ]
                }
            }
        }
    },
    "ea3781d3e141599cb3a36f8a236366927a9d10fe": {
        "authored_data": "2007 Oct 12 22:26",
        "commit.message": "Add messages to IllegalArgumentExceptions, add tests for thrown expections\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584302 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "17929c2789dfa7e6fd4404c2806ff3b12ba88efe",
        "changes": {
            "src/java/org/apache/commons/io/filefilter/RegexFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#RegexFilter', None)": [
                        57,
                        72,
                        90,
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#RegexFilter', None)": [
                        57,
                        72,
                        90,
                        103
                    ]
                }
            },
            "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java": {
                "new": {
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testRegex')": [
                        850,
                        851,
                        852,
                        853,
                        854,
                        855,
                        856,
                        857,
                        858,
                        859,
                        860,
                        861,
                        862,
                        863,
                        864,
                        865,
                        866,
                        867,
                        868,
                        869,
                        870,
                        871,
                        872,
                        873,
                        874
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', None)": [
                        875,
                        876,
                        877
                    ]
                }
            }
        }
    },
    "17929c2789dfa7e6fd4404c2806ff3b12ba88efe": {
        "authored_data": "2007 Oct 12 21:30",
        "commit.message": "IO-74 Refactor RegexFilter - add ability to construct instances with either pattern flags or case sensitivity. Also simplify by removing the array/list of String patterns constructors since adding all variants with flags/case sensitivity would be cumbersome and also the logic is limited to \"OR\" and some users may want \"AND\" - AND/OR logic can be achieved by combining RegexFilter instances using the AndFileFilter and OrFileFilter implementations.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@584278 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "2aaaa2a2582e8a6f14a85c0e49164583e0fa6b1e",
        "changes": {
            "src/java/org/apache/commons/io/filefilter/FileFilterUtils.java": {
                "new": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', None)": [
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        293,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        306,
                        307,
                        308,
                        309,
                        310,
                        311,
                        312,
                        313,
                        314,
                        315,
                        316,
                        319,
                        320
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'regex(String)')": [
                        291,
                        292
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'regex(String,IOCase)')": [
                        304,
                        305
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'regex(String,int)')": [
                        317,
                        318
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/RegexFilter.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21
                    ],
                    "('org.apache.commons.io.filefilter#RegexFilter', None)": [
                        47,
                        48,
                        51,
                        61,
                        65,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163
                    ],
                    "('org.apache.commons.io.filefilter#RegexFilter', 'accept(File,String)')": [
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155
                    ],
                    "('org.apache.commons.io.filefilter#RegexFilter', 'accept(File)')": [
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.io.filefilter#RegexFilter', None)": [
                        46,
                        47,
                        50,
                        60,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        106
                    ],
                    "('org.apache.commons.io.filefilter#RegexFilter', 'accept(File,String)')": [
                        117
                    ]
                }
            },
            "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testRegex')": [
                        826,
                        831,
                        841,
                        842,
                        843,
                        844,
                        845,
                        846,
                        847,
                        848,
                        852,
                        853,
                        854,
                        855,
                        856,
                        857,
                        858,
                        859,
                        860,
                        861,
                        862,
                        863,
                        864,
                        868,
                        869,
                        870,
                        871,
                        872,
                        873,
                        874,
                        875,
                        876,
                        877,
                        878,
                        879,
                        880,
                        881,
                        882,
                        883,
                        884,
                        885,
                        886,
                        887,
                        888,
                        889,
                        890,
                        891
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testRegex')": [
                        826,
                        831,
                        841,
                        845,
                        846
                    ]
                }
            }
        }
    }
}