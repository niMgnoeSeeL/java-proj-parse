{
    "e49cbb31c4c0551327eb8ee3161490c80214cf2f": {
        "authored_data": "2021 Oct 28 17:49",
        "commit.message": "We had the same test twice, replace with another bounfary condition.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "a7319d27002ef5b71e0bea932c59ebcd042ac8ff",
        "changes": {
            "src/test/java/org/apache/commons/io/FileUtilsWaitForTest.java": {
                "old": {
                    "('org.apache.commons.io#FileUtilsWaitForTest', 'testWaitFor')": [
                        36,
                        37
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtilsWaitForTest', 'testWaitFor0')": [
                        36,
                        37
                    ]
                }
            }
        }
    },
    "8f7a6430d535b0227fc25cb917af94b9339c3b19": {
        "authored_data": "2021 Oct 19 15:21",
        "commit.message": "Sort new method.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "3c20580ba7533e15957a1b5c431b5c589d266cbd",
        "changes": {
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "old": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        984,
                        985,
                        986,
                        987,
                        988,
                        989,
                        990,
                        991,
                        992,
                        993,
                        994,
                        995,
                        996,
                        997,
                        998,
                        999,
                        1000,
                        1001,
                        1002,
                        1003,
                        1004,
                        1005,
                        1006,
                        1014,
                        1015,
                        1016
                    ],
                    "('org.apache.commons.io#IOUtils', 'copy(java)')": [
                        1007,
                        1008,
                        1009,
                        1010,
                        1011,
                        1012,
                        1013
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        1080,
                        1081,
                        1082,
                        1083,
                        1084,
                        1085,
                        1086,
                        1087,
                        1088,
                        1089,
                        1090,
                        1091,
                        1092,
                        1093,
                        1094,
                        1095,
                        1096,
                        1097,
                        1098,
                        1099,
                        1100,
                        1101,
                        1102,
                        1103,
                        1104,
                        1105
                    ],
                    "('org.apache.commons.io#IOUtils', 'copy(java)')": [
                        1106,
                        1107,
                        1108,
                        1109,
                        1110,
                        1111,
                        1112
                    ]
                }
            }
        }
    },
    "276bd98be670c7271814023d5306fe4838d49b93": {
        "authored_data": "2021 Oct 19 15:17",
        "commit.message": "[IO-753] Add IOUtils method to copy output stream to input stream (#281)\n\n* IO-753 - added method to copy ByteArrayOutputStream to InputStream\r\n\r\n* IO-753 fixed auto-indentation and organize-import changes\r\n\r\n* IO-753 fixed organize-import changes\r\n\r\n* IO-753 fixed checkstyle warnings\r\n\r\n* IO-753 fixed javadoc errors\r\n\r\n* IO-753 fixed PR remarks",
        "commit.author.name": "Sebastian Dietrich",
        "pcid": "bc53cdac20a0ad72af09ffc8f11504feee850f25",
        "changes": {
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "new": {
                    "(None, None)": [
                        54
                    ],
                    "('org.apache.commons.io#IOUtils', None)": [
                        984,
                        985,
                        986,
                        987,
                        988,
                        989,
                        990,
                        991,
                        992,
                        993,
                        994,
                        995,
                        996,
                        997,
                        998,
                        999,
                        1000,
                        1001,
                        1002,
                        1003,
                        1004,
                        1005,
                        1006,
                        1014,
                        1015,
                        1016
                    ],
                    "('org.apache.commons.io#IOUtils', 'copy(java)')": [
                        1007,
                        1008,
                        1009,
                        1010,
                        1011,
                        1012,
                        1013
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/IOUtilsCopyTest.java": {
                "new": {
                    "('org.apache.commons.io#IOUtilsCopyTest', None)": [
                        83,
                        84,
                        97,
                        98,
                        99,
                        102,
                        103
                    ],
                    "('org.apache.commons.io#IOUtilsCopyTest', 'testCopy_byteArrayOutputStreamToInputStream')": [
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96
                    ],
                    "('org.apache.commons.io#IOUtilsCopyTest', 'testCopy_byteArrayOutputStreamToInputStream_nullOutputStream')": [
                        100,
                        101
                    ]
                }
            }
        }
    },
    "931dc2483e8c45284aea3b8dcdf4d7ee5c07f1bb": {
        "authored_data": "2021 Oct 19 10:49",
        "commit.message": "Minor changes: (#287)\n\n* Simplify assertions.\r\n* Replace lambda for reference.\r\n* Remove Unnecessary interface modifier.",
        "commit.author.name": "Arturo Bernal",
        "pcid": "7cba8ae576cf34b260450e076519ba197553ef4a",
        "changes": {
            "src/main/java/org/apache/commons/io/output/UncheckedAppendable.java": {
                "old": {
                    "(None, None)": [
                        39
                    ]
                },
                "new": {
                    "(None, None)": [
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FileUtilsTest.java": {
                "old": {
                    "('org.apache.commons.io#FileUtilsTest', 'iterateFilesAndDirs(File,IOFileFilter,IOFileFilter,Collection)')": [
                        273
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testIterateFilesOnlyNoDirs')": [
                        1928
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testListFiles')": [
                        1962,
                        1976
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testListFilesOnlyNoDirs')": [
                        1990
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtilsTest', 'iterateFilesAndDirs(File,IOFileFilter,IOFileFilter,Collection)')": [
                        273
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testIterateFilesOnlyNoDirs')": [
                        1928
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testListFiles')": [
                        1962,
                        1976
                    ],
                    "('org.apache.commons.io#FileUtilsTest', 'testListFilesOnlyNoDirs')": [
                        1990
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/LineIteratorTest.java": {
                "old": {
                    "('org.apache.commons.io#LineIteratorTest', 'testNextWithException')": [
                        311,
                        312
                    ],
                    "('org.apache.commons.io#LineIteratorTest', None)": [
                        313
                    ]
                },
                "new": {
                    "('org.apache.commons.io#LineIteratorTest', 'testNextWithException')": [
                        311
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/PathUtilsTest.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtilsTest', 'testSetReadOnlyFile')": [
                        275,
                        276,
                        284,
                        285,
                        294,
                        295,
                        296
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtilsTest', 'testSetReadOnlyFile')": [
                        275,
                        276,
                        284,
                        285,
                        294,
                        295,
                        296
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/function/IOFunctionTest.java": {
                "old": {
                    "('org.apache.commons.io.function#IOFunctionTest', 'testComposeIOSupplier')": [
                        140
                    ]
                },
                "new": {
                    "('org.apache.commons.io.function#IOFunctionTest', 'testComposeIOSupplier')": [
                        140
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/MarkShieldInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#MarkShieldInputStreamTest', 'resetThrowsExceptionWhenUnderylingDoesNotSupport')": [
                        104
                    ],
                    "('org.apache.commons.io.input#MarkShieldInputStreamTest', 'resetThrowsExceptionWhenUnderylingSupports')": [
                        113
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#MarkShieldInputStreamTest', 'resetThrowsExceptionWhenUnderylingDoesNotSupport')": [
                        104
                    ],
                    "('org.apache.commons.io.input#MarkShieldInputStreamTest', 'resetThrowsExceptionWhenUnderylingSupports')": [
                        113
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testBrokenInputStreamRead')": [
                        133
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testBrokenInputStreamRead')": [
                        133
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/RandomAccessFileInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testCtorCloseOnCloseTrue')": [
                        75
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#RandomAccessFileInputStreamTest', 'testCtorCloseOnCloseTrue')": [
                        75
                    ]
                }
            }
        }
    }
}