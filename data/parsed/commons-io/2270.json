{
    "6832476769432948acafe7c6d27d3ad13a145c60": {
        "authored_data": "2013 Feb 01 00:52",
        "commit.message": "Fix warning:\nType safety: A generic array of Comparator<File> is created for a varargs parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441284 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "f42abad400cebaa3f8b0e2a3b323d733f55a6340",
        "changes": {
            "src/test/java/org/apache/commons/io/comparator/CompositeFileComparatorTest.java": {
                "old": {
                    "('org.apache.commons.io.comparator#CompositeFileComparatorTest', 'setUp')": [
                        42,
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.io.comparator#CompositeFileComparatorTest', 'setUp')": [
                        42,
                        43,
                        44,
                        45
                    ]
                }
            }
        }
    },
    "f42abad400cebaa3f8b0e2a3b323d733f55a6340": {
        "authored_data": "2013 Feb 01 00:48",
        "commit.message": "Remove unused parameter from private method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441283 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "da93d3a20a78d9f53c17367567b79c7ef14c87c9",
        "changes": {
            "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java": {
                "old": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', None)": [
                        181,
                        249
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', 'doRawStream(InputStream,boolean)')": [
                        416
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', None)": [
                        181,
                        249
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', 'doRawStream(InputStream)')": [
                        416
                    ]
                }
            }
        }
    },
    "da93d3a20a78d9f53c17367567b79c7ef14c87c9": {
        "authored_data": "2013 Feb 01 00:43",
        "commit.message": "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441282 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "88c4d3ec549cae81d67845e3dfcc038986eb7c19",
        "changes": {
            "src/test/java/org/apache/commons/io/input/ClosedInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#ClosedInputStreamTest', 'testRead')": [
                        29,
                        30
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ClosedInputStreamTest', 'testRead')": [
                        29,
                        30,
                        31,
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamBlockSize.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUnsupportedEncodingUTF16')": [
                        164
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUnsupportedEncodingBig5')": [
                        170
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUnsupportedEncodingUTF16')": [
                        164
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamBlockSize', 'testUnsupportedEncodingBig5')": [
                        170
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestSimple.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestSimple', 'testUnsupportedEncodingUTF16')": [
                        56
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestSimple', 'testUnsupportedEncodingBig5')": [
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestSimple', 'testUnsupportedEncodingUTF16')": [
                        56
                    ],
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestSimple', 'testUnsupportedEncodingBig5')": [
                        62
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/XmlStreamReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#XmlStreamReaderTest', '_testRawBomInvalid(String,String,String)')": [
                        133
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#XmlStreamReaderTest', '_testRawNoBomValid(String)')": [
                        49,
                        54,
                        59,
                        64,
                        69
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', '_testRawBomValid(String)')": [
                        132
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', '_testRawBomInvalid(String,String,String)')": [
                        138,
                        140,
                        147,
                        148,
                        149
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', '_testAlternateDefaultEncoding(String,String,String,String,String)')": [
                        319
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', '_testHttpValid(String,String,String,String)')": [
                        336
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', '_testHttpLenient(String,String,String,String,String)')": [
                        359
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderTest', 'testEncodingAttributeXML')": [
                        375
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/XmlStreamReaderUtilitiesTest.java": {
                "old": {
                    "('org.apache.commons.io.input#XmlStreamReaderUtilitiesTest', 'calculateRawEncoding(String,String,String,String)')": [
                        226
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderUtilitiesTest', 'calculateHttpEncoding(String,String,String,String,boolean,String)')": [
                        309
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#XmlStreamReaderUtilitiesTest', 'calculateRawEncoding(String,String,String,String)')": [
                        226,
                        227,
                        228
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderUtilitiesTest', 'calculateHttpEncoding(String,String,String,String,boolean,String)')": [
                        311,
                        312,
                        313
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java": {
                "old": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReaderUtilitiesCompatibilityTest', 'calculateRawEncoding(String,String,String,String)')": [
                        33
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReaderUtilitiesCompatibilityTest', 'calculateHttpEncoding(String,String,String,String,boolean,String)')": [
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReaderUtilitiesCompatibilityTest', 'calculateRawEncoding(String,String,String,String)')": [
                        33,
                        34,
                        35
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReaderUtilitiesCompatibilityTest', 'calculateHttpEncoding(String,String,String,String,boolean,String)')": [
                        41,
                        45,
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java": {
                "old": {
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'testStream')": [
                        143,
                        144
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'testStream')": [
                        143,
                        144,
                        145,
                        146,
                        147
                    ]
                }
            }
        }
    },
    "88c4d3ec549cae81d67845e3dfcc038986eb7c19": {
        "authored_data": "2013 Jan 31 23:16",
        "commit.message": "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441255 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "c636df05463b66e5463af8cfd51844cda1c4ee04",
        "changes": {
            "src/test/java/org/apache/commons/io/output/TaggedOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#TaggedOutputStreamTest', 'testOtherException')": [
                        98
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#TaggedOutputStreamTest', 'testOtherException')": [
                        98,
                        119
                    ]
                }
            }
        }
    },
    "c636df05463b66e5463af8cfd51844cda1c4ee04": {
        "authored_data": "2013 Jan 31 23:14",
        "commit.message": "Overriding synch. method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441254 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "cc0d68819f41dbc2789dd00890f826e6170b6f70",
        "changes": {
            "src/main/java/org/apache/commons/io/input/BrokenInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#BrokenInputStream', 'reset')": [
                        94
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#BrokenInputStream', 'reset')": [
                        94
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/IOUtilsTestCase.java": {
                "old": {
                    "('org.apache.commons.io#IOUtilsTestCase', 'testCloseQuietly_SocketIOException')": [
                        189
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtilsTestCase', 'testCloseQuietly_SocketIOException')": [
                        189
                    ]
                }
            }
        }
    },
    "cc0d68819f41dbc2789dd00890f826e6170b6f70": {
        "authored_data": "2013 Jan 31 23:14",
        "commit.message": "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441253 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "f5c7e09482c838b61e032db4efefd0dcd183fa4f",
        "changes": {
            "src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', 'testExpected')": [
                        56
                    ],
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', 'testResolveProxyClass')": [
                        71
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/SwappedDataInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.io.input#SwappedDataInputStreamTest', 'testReadBoolean')": [
                        74
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/CountingOutputStreamTest.java": {
                "new": {
                    "('org.apache.commons.io.output#CountingOutputStreamTest', 'testCounting')": [
                        74
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/StringBuilderWriterTest.java": {
                "new": {
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendConstructCapacity')": [
                        45
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendConstructStringBuilder')": [
                        55
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendConstructNull')": [
                        63
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendChar')": [
                        71
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendCharSequence')": [
                        79
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testAppendCharSequencePortion')": [
                        87
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testWriteChar')": [
                        112
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testWriteCharArray')": [
                        122
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testWriteCharArrayPortion')": [
                        132
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testWriteString')": [
                        142
                    ],
                    "('org.apache.commons.io.output#StringBuilderWriterTest', 'testWriteStringPortion')": [
                        152
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java": {
                "new": {
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testFlush')": [
                        112
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testWriteImmediately')": [
                        120
                    ]
                }
            }
        }
    },
    "f5c7e09482c838b61e032db4efefd0dcd183fa4f": {
        "authored_data": "2013 Jan 31 23:02",
        "commit.message": "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441248 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "812feb984875881325a1f4ba0b917bc405f146e5",
        "changes": {
            "src/test/java/org/apache/commons/io/input/CharSequenceReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testMarkSupported')": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testMarkSupported')": [
                        46,
                        49
                    ],
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testRead')": [
                        92
                    ],
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testReadCharArray')": [
                        109
                    ],
                    "('org.apache.commons.io.input#CharSequenceReaderTest', 'testReadCharArrayPortion')": [
                        122
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testCounting')": [
                        69
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testResetting')": [
                        119
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testZeroLength1')": [
                        129
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testZeroLength2')": [
                        141
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testZeroLength3')": [
                        153
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testEOF1')": [
                        169
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testEOF2')": [
                        181
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testEOF3')": [
                        193
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testSkipping')": [
                        209
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/NullInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.io.input#NullInputStreamTest', 'testEOFException')": [
                        138
                    ],
                    "('org.apache.commons.io.input#NullInputStreamTest', 'testMarkAndReset')": [
                        192
                    ],
                    "('org.apache.commons.io.input#NullInputStreamTest', 'testMarkNotSupported')": [
                        215
                    ],
                    "('org.apache.commons.io.input#NullInputStreamTest', 'testSkip')": [
                        237
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/NullReaderTest.java": {
                "new": {
                    "('org.apache.commons.io.input#NullReaderTest', 'testEOFException')": [
                        135
                    ],
                    "('org.apache.commons.io.input#NullReaderTest', 'testMarkAndReset')": [
                        189
                    ],
                    "('org.apache.commons.io.input#NullReaderTest', 'testMarkNotSupported')": [
                        212
                    ],
                    "('org.apache.commons.io.input#NullReaderTest', 'testSkip')": [
                        234
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ProxyReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#ProxyReaderTest', 'testNullCharArray')": [
                        37
                    ],
                    "('org.apache.commons.io.input#ProxyReaderTest', 'testNullCharBuffer')": [
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ProxyReaderTest', 'testNullCharArray')": [
                        37,
                        52
                    ],
                    "('org.apache.commons.io.input#ProxyReaderTest', 'testNullCharBuffer')": [
                        56,
                        65
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ReaderInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testWithSingleByteRead(String,String)')": [
                        54
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testWithBufferedRead(String,String)')": [
                        80
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testReadZero')": [
                        117
                    ],
                    "('org.apache.commons.io.input#ReaderInputStreamTest', 'testReadZeroEmptyString')": [
                        129
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/TaggedInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#TaggedInputStreamTest', 'testOtherException')": [
                        112
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#TaggedInputStreamTest', 'testOtherException')": [
                        112,
                        133
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ProxyWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#ProxyWriterTest', 'testAppendCharSequence')": [
                        33
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', None)": [
                        42,
                        55,
                        68,
                        81,
                        94
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'testWriteString')": [
                        46
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'testWriteStringPartial')": [
                        59
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'testWriteCharArray')": [
                        72
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'testWriteCharArrayPartial')": [
                        85
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'testNullString')": [
                        98
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'testNullCharArray')": [
                        116
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'testNullCharSequencec')": [
                        134
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ProxyWriterTest', 'testAppendCharSequence')": [
                        33,
                        42
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'testWriteString')": [
                        46,
                        55
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'testWriteStringPartial')": [
                        59,
                        68
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'testWriteCharArray')": [
                        72,
                        81
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'testWriteCharArrayPartial')": [
                        85,
                        94
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'testNullString')": [
                        98,
                        113
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'testNullCharArray')": [
                        117,
                        132
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'testNullCharSequencec')": [
                        136,
                        145
                    ]
                }
            }
        }
    },
    "812feb984875881325a1f4ba0b917bc405f146e5": {
        "authored_data": "2013 Jan 31 23:01",
        "commit.message": "Suppress warnings for streams deliberately left unclosed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441247 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "88c45dc9b3cbbb0e90abaa041f2ffa0b3ecbdfdf",
        "changes": {
            "src/test/java/org/apache/commons/io/IOUtilsWriteTestCase.java": {
                "new": {
                    "('org.apache.commons.io#IOUtilsWriteTestCase', 'testWrite_byteArrayToWriter')": [
                        96
                    ],
                    "('org.apache.commons.io#IOUtilsWriteTestCase', 'testWrite_byteArrayToWriter_nullData')": [
                        110
                    ],
                    "('org.apache.commons.io#IOUtilsWriteTestCase', 'testWrite_byteArrayToWriter_Encoding')": [
                        131
                    ],
                    "('org.apache.commons.io#IOUtilsWriteTestCase', 'testWrite_byteArrayToWriter_Encoding_nullData')": [
                        146
                    ],
                    "('org.apache.commons.io#IOUtilsWriteTestCase', 'testWrite_byteArrayToWriter_Encoding_nullEncoding')": [
                        166
                    ],
                    "('org.apache.commons.io#IOUtilsWriteTestCase', 'testWrite_charSequenceToWriter')": [
                        265
                    ],
                    "('org.apache.commons.io#IOUtilsWriteTestCase', 'testWrite_charSequenceToWriter_Encoding_nullData')": [
                        279
                    ],
                    "('org.apache.commons.io#IOUtilsWriteTestCase', 'testWrite_stringToWriter')": [
                        385
                    ],
                    "('org.apache.commons.io#IOUtilsWriteTestCase', 'testWrite_stringToWriter_Encoding_nullData')": [
                        399
                    ],
                    "('org.apache.commons.io#IOUtilsWriteTestCase', 'testWrite_charArrayToWriter')": [
                        506
                    ],
                    "('org.apache.commons.io#IOUtilsWriteTestCase', 'testWrite_charArrayToWriter_Encoding_nullData')": [
                        520
                    ],
                    "('org.apache.commons.io#IOUtilsWriteTestCase', 'testWriteLines_Writer')": [
                        674
                    ],
                    "('org.apache.commons.io#IOUtilsWriteTestCase', 'testWriteLines_Writer_nullData')": [
                        690
                    ],
                    "('org.apache.commons.io#IOUtilsWriteTestCase', 'testWriteLines_Writer_nullSeparator')": [
                        706
                    ]
                }
            }
        }
    },
    "88c45dc9b3cbbb0e90abaa041f2ffa0b3ecbdfdf": {
        "authored_data": "2013 Jan 31 22:47",
        "commit.message": "Ensure stream is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441241 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "38e33010a472dcba109bfd26c761805902b723d4",
        "changes": {
            "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testAvailableWithBOM')": [
                        198
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testAvailableWithoutBOM')": [
                        206
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testEmptyBufferWithBOM')": [
                        225
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testEmptyBufferWithoutBOM')": [
                        234
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testGetBOMFirstThenRead')": [
                        248
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testGetBOMFirstThenReadInclude')": [
                        265
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testLargeBufferWithBOM')": [
                        274
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testLargeBufferWithoutBOM')": [
                        283
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testLeadingNonBOMBufferedRead')": [
                        292
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testLeadingNonBOMSingleRead')": [
                        303
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testMarkResetAfterReadWithBOM')": [
                        319
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testMarkResetAfterReadWithoutBOM')": [
                        335
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testMarkResetBeforeReadWithBOM')": [
                        350
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testMarkResetBeforeReadWithoutBOM')": [
                        365
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadEmpty')": [
                        393
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadSmall')": [
                        406
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMInclude')": [
                        433
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMUtf16Be')": [
                        456
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMUtf16Le')": [
                        479
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMUtf32Be')": [
                        509
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMUtf32Le')": [
                        539
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithBOMUtf8')": [
                        559
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithMultipleBOM')": [
                        575
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testReadWithoutBOM')": [
                        589
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testSkipWithBOM')": [
                        674
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testSkipWithoutBOM')": [
                        683
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testSmallBufferWithBOM')": [
                        693
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testSmallBufferWithoutBOM')": [
                        703
                    ]
                }
            }
        }
    },
    "38e33010a472dcba109bfd26c761805902b723d4": {
        "authored_data": "2013 Jan 31 22:30",
        "commit.message": "Suppress warnings for streams deliberately left unclosed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1441231 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "a4fb10de761f6f6608f5f42dcc4c0983e246cadf",
        "changes": {
            "src/test/java/org/apache/commons/io/CopyUtilsTest.java": {
                "new": {
                    "('org.apache.commons.io#CopyUtilsTest', None)": [
                        109,
                        125,
                        150,
                        171
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java": {
                "new": {
                    "('org.apache.commons.io#IOUtilsCopyTestCase', None)": [
                        74,
                        108,
                        159,
                        196,
                        233,
                        252,
                        282,
                        294,
                        321,
                        332,
                        350,
                        378
                    ]
                }
            }
        }
    }
}