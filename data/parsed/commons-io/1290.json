{
    "3839bf6edff42919dbcc96fcfee9a18b58818ee1": {
        "authored_data": "2020 Aug 11 10:54",
        "commit.message": "IO683 - Fix broken test\n",
        "commit.author.name": "Sebb",
        "pcid": "0d2bd41ab6a18c9ab8f6cddde6a14d8e5aac483a",
        "changes": {
            "src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStreamTest', 'testRandomRead')": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStreamTest', 'testRandomRead')": [
                        50
                    ]
                }
            }
        }
    },
    "b2fd8c72e62fd5447c6f690842e421694b0e9a51": {
        "authored_data": "2020 Aug 11 00:26",
        "commit.message": "Javadoc.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "b99b3f9f484074454c6d67ec658a4e0e8555ffd2",
        "changes": {
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', None)": [
                        1380
                    ]
                }
            }
        }
    },
    "b99b3f9f484074454c6d67ec658a4e0e8555ffd2": {
        "authored_data": "2020 Aug 11 00:15",
        "commit.message": "Throw an IOException if calling setLastModified() fails.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "f07581306e3d9ef098c0b50edb4a781b86d455ca",
        "changes": {
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', None)": [
                        1329
                    ],
                    "('org.apache.commons.io#FileUtils', 'doCopyDirectory(File,File,FileFilter,boolean,List,CopyOption)')": [
                        1332,
                        1365,
                        1366,
                        1367
                    ],
                    "('org.apache.commons.io#FileUtils', 'doCopyFile(File,File,boolean,CopyOption)')": [
                        1389,
                        1405
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', 'doCopyDirectory(File,File,FileFilter,boolean,List,CopyOption)')": [
                        1331,
                        1364
                    ],
                    "('org.apache.commons.io#FileUtils', None)": [
                        1365,
                        1405,
                        1406,
                        1407,
                        1408,
                        1409,
                        1410,
                        1411,
                        1412,
                        1413,
                        1414,
                        1418
                    ],
                    "('org.apache.commons.io#FileUtils', 'doCopyFile(File,File,boolean,CopyOption)')": [
                        1387,
                        1403,
                        1404
                    ],
                    "('org.apache.commons.io#FileUtils', 'setLastModified(File,File)')": [
                        1415,
                        1416,
                        1417
                    ]
                }
            }
        }
    },
    "f07581306e3d9ef098c0b50edb4a781b86d455ca": {
        "authored_data": "2020 Aug 10 22:50",
        "commit.message": "Ensure Reversed reader has read all the lines\n",
        "commit.author.name": "Sebb",
        "pcid": "a521b43e774a92f4c07461536ffc810715c762d8",
        "changes": {
            "src/test/java/org/apache/commons/io/input/ReversedLinesFileReaderTestParamFile.java": {
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReaderTestParamFile', 'testDataIntegrityWithBufferedReader(String,String,Integer,boolean)')": [
                        95
                    ]
                }
            }
        }
    },
    "a521b43e774a92f4c07461536ffc810715c762d8": {
        "authored_data": "2020 Aug 10 20:40",
        "commit.message": "IO-683 failure to convert byte to unsigned\n\nCircularBufferInputStream.read() fails to convert byte to unsigned int\n",
        "commit.author.name": "Sebb",
        "pcid": "d7fa1f624ec0ba09cd3cbfba9913d51afc8f59c3",
        "changes": {
            "src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStream', 'read')": [
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStream', 'read')": [
                        107
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java": {
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        23
                    ],
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStreamTest', 'testRandomRead')": [
                        77
                    ],
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStreamTest', None)": [
                        78,
                        79,
                        80,
                        94
                    ],
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStreamTest', 'testIO683')": [
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93
                    ]
                }
            }
        }
    }
}