{
    "863808f1b8359ab9a79b206cf743db728ac17d48": {
        "authored_data": "2017 Oct 01 12:04",
        "commit.message": "add javadoc comment to ByteOrderUtils constructor (fixes checkstyle violation)\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "928da12b15c987e16b2481c43614c8e868be1c04",
        "changes": {
            "src/main/java/org/apache/commons/io/ByteOrderUtils.java": {
                "new": {
                    "('org.apache.commons.io#ByteOrderUtils', None)": [
                        42,
                        43,
                        44
                    ]
                }
            }
        }
    },
    "bfe3c22bc3e866fc499433faf57a9239d4f6e1f2": {
        "authored_data": "2017 Sep 30 13:49",
        "commit.message": "IO-506: Deprecate FileSystemUtils class\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "72499caf6f7905122c97987953a313bf1c95901a",
        "changes": {
            "src/main/java/org/apache/commons/io/FileSystemUtils.java": {
                "new": {
                    "(None, None)": [
                        44,
                        45,
                        46,
                        47,
                        49
                    ]
                }
            }
        }
    },
    "72499caf6f7905122c97987953a313bf1c95901a": {
        "authored_data": "2017 Sep 30 13:48",
        "commit.message": "Make ByteOrderFactory a static util class\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "56f2a758983611adea7308e90ae9934c973efa72",
        "changes": {
            "src/main/java/org/apache/commons/io/ByteOrderFactory.java": {
                "old": {
                    "('org.apache.commons.io#ByteOrderFactory', None)": [
                        28
                    ]
                },
                "new": {
                    "('org.apache.commons.io#ByteOrderFactory', None)": [
                        28,
                        41,
                        42,
                        43
                    ]
                }
            }
        }
    },
    "56f2a758983611adea7308e90ae9934c973efa72": {
        "authored_data": "2017 Sep 28 21:03",
        "commit.message": "Consistently use the final modifier with local variables.",
        "commit.author.name": "Gary Gregory",
        "pcid": "36940b6418283806ed10292776c9c4269923e1ca",
        "changes": {
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', 'copyToDirectory(Iterable,File)')": [
                        1598
                    ],
                    "('org.apache.commons.io#FileUtils', 'waitFor(File,int)')": [
                        1769,
                        1773
                    ],
                    "('org.apache.commons.io#FileUtils', 'readFileToByteArray(File)')": [
                        1852
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', 'copyToDirectory(Iterable,File)')": [
                        1598
                    ],
                    "('org.apache.commons.io#FileUtils', 'waitFor(File,int)')": [
                        1769,
                        1773
                    ],
                    "('org.apache.commons.io#FileUtils', 'readFileToByteArray(File)')": [
                        1852
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/FilenameUtils.java": {
                "old": {
                    "('org.apache.commons.io#FilenameUtils', 'getPrefix(String)')": [
                        775
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'doGetPath(String,int)')": [
                        855
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'failIfNullBytePresent(String)')": [
                        986
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FilenameUtils', 'getPrefix(String)')": [
                        775
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'doGetPath(String,int)')": [
                        855
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'failIfNullBytePresent(String)')": [
                        986
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/IOCase.java": {
                "old": {
                    "(None, None)": [
                        80
                    ]
                },
                "new": {
                    "(None, None)": [
                        80
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "old": {
                    "('org.apache.commons.io#IOUtils', 'writeChunked(byte,OutputStream)')": [
                        1709
                    ],
                    "('org.apache.commons.io#IOUtils', 'writeChunked(char,Writer)')": [
                        1816
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtils', 'writeChunked(byte,OutputStream)')": [
                        1709
                    ],
                    "('org.apache.commons.io#IOUtils', 'writeChunked(char,Writer)')": [
                        1816
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/ThreadMonitor.java": {
                "old": {
                    "('org.apache.commons.io#ThreadMonitor', 'sleep(long)')": [
                        125
                    ]
                },
                "new": {
                    "('org.apache.commons.io#ThreadMonitor', 'sleep(long)')": [
                        125
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/BOMInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#BOMInputStream', None)": [
                        172
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#BOMInputStream', None)": [
                        172
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStream', 'resolveClass(ObjectStreamClass)')": [
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStream', 'resolveClass(ObjectStreamClass)')": [
                        69
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ObservableInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ObservableInputStream', 'read')": [
                        119
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read(byte)')": [
                        138
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read(byte,int,int)')": [
                        157
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'noteDataBytes(byte,int,int)')": [
                        179
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'noteFinished')": [
                        189
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'noteDataByte(int)')": [
                        201
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'noteError(IOException)')": [
                        214
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'noteClosed')": [
                        224
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'close')": [
                        241
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ObservableInputStream', 'read')": [
                        119
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read(byte)')": [
                        138
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read(byte,int,int)')": [
                        157
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'noteDataBytes(byte,int,int)')": [
                        179
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'noteFinished')": [
                        189
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'noteDataByte(int)')": [
                        201
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'noteError(IOException)')": [
                        214
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'noteClosed')": [
                        224
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'close')": [
                        241
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/Tailer.java": {
                "old": {
                    "('org.apache.commons.io.input#Tailer', 'run')": [
                        442
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#Tailer', 'run')": [
                        442
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#UnixLineEndingInputStream', 'read')": [
                        72,
                        77
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#UnixLineEndingInputStream', 'read')": [
                        72,
                        77
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#WindowsLineEndingInputStream', 'read')": [
                        79,
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#WindowsLineEndingInputStream', 'read')": [
                        79,
                        80
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/ByteArrayOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'reset')": [
                        243
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'reset')": [
                        243
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/ChunkedOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#ChunkedOutputStream', 'write(byte,int,int)')": [
                        80
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ChunkedOutputStream', 'write(byte,int,int)')": [
                        80
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/ChunkedWriter.java": {
                "old": {
                    "('org.apache.commons.io.output#ChunkedWriter', 'write(char,int,int)')": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ChunkedWriter', 'write(char,int,int)')": [
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#DeferredFileOutputStream', 'thresholdReached')": [
                        226
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#DeferredFileOutputStream', 'thresholdReached')": [
                        226
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/WriterOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#WriterOutputStream', 'checkIbmJdkWithBrokenUTF16(Charset)')": [
                        323,
                        326,
                        327,
                        334
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#WriterOutputStream', 'checkIbmJdkWithBrokenUTF16(Charset)')": [
                        323,
                        326,
                        327,
                        334
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/serialization/ValidatingObjectInputStream.java": {
                "old": {
                    "('org.apache.commons.io.serialization#ValidatingObjectInputStream', 'validateClassName(String)')": [
                        68,
                        75
                    ],
                    "('org.apache.commons.io.serialization#ValidatingObjectInputStream', 'accept(Class)')": [
                        112
                    ],
                    "('org.apache.commons.io.serialization#ValidatingObjectInputStream', 'reject(Class)')": [
                        126
                    ],
                    "('org.apache.commons.io.serialization#ValidatingObjectInputStream', 'accept(String)')": [
                        141
                    ],
                    "('org.apache.commons.io.serialization#ValidatingObjectInputStream', 'reject(String)')": [
                        156
                    ]
                },
                "new": {
                    "('org.apache.commons.io.serialization#ValidatingObjectInputStream', 'validateClassName(String)')": [
                        68,
                        75
                    ],
                    "('org.apache.commons.io.serialization#ValidatingObjectInputStream', 'accept(Class)')": [
                        112
                    ],
                    "('org.apache.commons.io.serialization#ValidatingObjectInputStream', 'reject(Class)')": [
                        126
                    ],
                    "('org.apache.commons.io.serialization#ValidatingObjectInputStream', 'accept(String)')": [
                        141
                    ],
                    "('org.apache.commons.io.serialization#ValidatingObjectInputStream', 'reject(String)')": [
                        156
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/DemuxTestCase.java": {
                "old": {
                    "('org.apache.commons.io#DemuxTestCase', 'doStart')": [
                        70
                    ],
                    "('org.apache.commons.io#DemuxTestCase', 'doJoin')": [
                        78
                    ]
                },
                "new": {
                    "('org.apache.commons.io#DemuxTestCase', 'doStart')": [
                        70
                    ],
                    "('org.apache.commons.io#DemuxTestCase', 'doJoin')": [
                        78
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/DirectoryWalkerTestCaseJava4.java": {
                "old": {
                    "('org.apache.commons.io#DirectoryWalkerTestCaseJava4', 'directoriesOnly(Collection)')": [
                        239
                    ],
                    "('org.apache.commons.io#DirectoryWalkerTestCaseJava4', 'filesOnly(Collection)')": [
                        252
                    ]
                },
                "new": {
                    "('org.apache.commons.io#DirectoryWalkerTestCaseJava4', 'directoriesOnly(Collection)')": [
                        239
                    ],
                    "('org.apache.commons.io#DirectoryWalkerTestCaseJava4', 'filesOnly(Collection)')": [
                        252
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FileSystemUtilsTestCase.java": {
                "old": {
                    "('org.apache.commons.io#FileSystemUtilsTestCase', 'testGetFreeSpace_String')": [
                        76,
                        86
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileSystemUtilsTestCase', 'testGetFreeSpace_String')": [
                        76,
                        86
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FileUtilsDirectoryContainsTestCase.java": {
                "old": {
                    "('org.apache.commons.io#FileUtilsDirectoryContainsTestCase', 'testIO466')": [
                        142
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtilsDirectoryContainsTestCase', 'testIO466')": [
                        142
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FileUtilsTestCase.java": {
                "old": {
                    "('org.apache.commons.io#FileUtilsTestCase', 'testCopyToDirectoryWithIterable')": [
                        1618
                    ],
                    "('org.apache.commons.io#FileUtilsTestCase', 'testIncorrectOutputSize')": [
                        3087,
                        3088,
                        3092
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtilsTestCase', 'testCopyToDirectoryWithIterable')": [
                        1618
                    ],
                    "('org.apache.commons.io#FileUtilsTestCase', 'testIncorrectOutputSize')": [
                        3087,
                        3088,
                        3092
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FileUtilsWaitForTestCase.java": {
                "old": {
                    "('org.apache.commons.io#FileUtilsWaitForTestCase', 'testWaitForInterrupted')": [
                        47,
                        55
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtilsWaitForTestCase', 'testWaitForInterrupted')": [
                        47,
                        55
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FilenameUtilsTestCase.java": {
                "old": {
                    "('org.apache.commons.io#FilenameUtilsTestCase', 'testNormalize_with_nullbytes')": [
                        253
                    ],
                    "('org.apache.commons.io#FilenameUtilsTestCase', None)": [
                        258,
                        628,
                        717,
                        825,
                        845,
                        1004
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FilenameUtilsTestCase', 'testNormalize_with_nullbytes')": [
                        253
                    ],
                    "('org.apache.commons.io#FilenameUtilsTestCase', None)": [
                        258,
                        628,
                        717,
                        825,
                        845,
                        1004
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/IOUtilsTestCase.java": {
                "old": {
                    "('org.apache.commons.io#IOUtilsTestCase', 'testResourceToString_NullResource')": [
                        1217
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testResourceToString_NullResource_WithClassLoader')": [
                        1231
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testResourceToByteArray_Null')": [
                        1289
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testResourceToByteArray_Null_WithClassLoader')": [
                        1303
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testResourceToURL_Null')": [
                        1353
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testResourceToURL_Null_WithClassLoader')": [
                        1367
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedNull')": [
                        1379,
                        1385,
                        1391
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', None)": [
                        1397
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedInputStream')": [
                        1403
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedInputStreamWithBufferSize')": [
                        1415
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedOutputStream')": [
                        1428
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedOutputStreamWithBufferSize')": [
                        1438
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedReader')": [
                        1449
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedReaderWithBufferSize')": [
                        1463
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedWriter')": [
                        1478
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedWriterWithBufferSize')": [
                        1498
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtilsTestCase', 'testResourceToString_NullResource')": [
                        1217
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testResourceToString_NullResource_WithClassLoader')": [
                        1231
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testResourceToByteArray_Null')": [
                        1289
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testResourceToByteArray_Null_WithClassLoader')": [
                        1303
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testResourceToURL_Null')": [
                        1353
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testResourceToURL_Null_WithClassLoader')": [
                        1367
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedNull')": [
                        1379,
                        1385,
                        1391
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', None)": [
                        1397
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedInputStream')": [
                        1403
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedInputStreamWithBufferSize')": [
                        1415
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedOutputStream')": [
                        1428
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedOutputStreamWithBufferSize')": [
                        1438
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedReader')": [
                        1449
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedReaderWithBufferSize')": [
                        1463
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedWriter')": [
                        1478
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testAsBufferedWriterWithBufferSize')": [
                        1498
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/filefilter/AndFileFilterTestCase.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#AndFileFilterTestCase', 'buildFilterUsingAdd(List)')": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#AndFileFilterTestCase', 'buildFilterUsingAdd(List)')": [
                        38
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/filefilter/ConditionalFileFilterAbstractTestCase.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#ConditionalFileFilterAbstractTestCase', 'testRemove')": [
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#ConditionalFileFilterAbstractTestCase', 'testRemove')": [
                        81
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/filefilter/OrFileFilterTestCase.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#OrFileFilterTestCase', 'buildFilterUsingAdd(List)')": [
                        38
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#OrFileFilterTestCase', 'buildFilterUsingAdd(List)')": [
                        38
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/BOMInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'skipReturnValueWithBom')": [
                        701,
                        702
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'skipReturnValueWithoutBom')": [
                        710,
                        711
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'doesSaxSupportCharacterSet(String)')": [
                        766
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'skipReturnValueWithBom')": [
                        701,
                        702
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'skipReturnValueWithoutBom')": [
                        710,
                        711
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'doesSaxSupportCharacterSet(String)')": [
                        766
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/BoundedReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#BoundedReaderTest', 'readTillEnd')": [
                        40
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'shortReader')": [
                        50
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'readMulti')": [
                        59,
                        60
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'readMultiWithOffset')": [
                        76,
                        77
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markReset')": [
                        92
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markResetWithMarkOutsideBoundedReaderMax')": [
                        108
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset')": [
                        119
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markResetFromOffset1')": [
                        130
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markResetMarkMore')": [
                        145
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'skipTest')": [
                        160
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'closeTest')": [
                        180
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'testReadBytesEOF')": [
                        187
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#BoundedReaderTest', 'readTillEnd')": [
                        40
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'shortReader')": [
                        50
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'readMulti')": [
                        59,
                        60
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'readMultiWithOffset')": [
                        76,
                        77
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markReset')": [
                        92
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markResetWithMarkOutsideBoundedReaderMax')": [
                        108
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markResetWithMarkOutsideBoundedReaderMaxAndInitialOffset')": [
                        119
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markResetFromOffset1')": [
                        130
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'markResetMarkMore')": [
                        145
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'skipTest')": [
                        160
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'closeTest')": [
                        180
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'testReadBytesEOF')": [
                        187
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/CharSequenceInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'checkAvail(InputStream,int)')": [
                        359
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testAvailable')": [
                        406
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'checkAvail(InputStream,int)')": [
                        359
                    ],
                    "('org.apache.commons.io.input#CharSequenceInputStreamTest', 'testAvailable')": [
                        406
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ClassLoaderObjectInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', None)": [
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStreamTest', None)": [
                        116
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/InfiniteCircularInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'should_cycle_bytes')": [
                        30,
                        31
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'should_handle_whole_range_of_bytes')": [
                        38,
                        39,
                        45
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'assertStreamOutput(byte,byte)')": [
                        51,
                        54
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'should_cycle_bytes')": [
                        30,
                        31
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'should_handle_whole_range_of_bytes')": [
                        38,
                        39,
                        45
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'assertStreamOutput(byte,byte)')": [
                        51,
                        54
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testDataBytesCalled')": [
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testDataBytesCalled')": [
                        101
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/TailerTest.java": {
                "old": {
                    "('org.apache.commons.io.input#TailerTest', 'testMultiByteBreak')": [
                        146,
                        157
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#TailerTest', 'testMultiByteBreak')": [
                        146,
                        157
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/UnixLineEndingInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#UnixLineEndingInputStreamTest', 'roundtrip(String,boolean)')": [
                        80,
                        81,
                        82
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#UnixLineEndingInputStreamTest', 'roundtrip(String,boolean)')": [
                        80,
                        81,
                        82
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/WindowsLineEndingInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#WindowsLineEndingInputStreamTest', 'roundtrip(String,boolean)')": [
                        70,
                        71,
                        72
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#WindowsLineEndingInputStreamTest', 'roundtrip(String,boolean)')": [
                        70,
                        71,
                        72
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReaderUtilitiesCompatibilityTest.java": {
                "old": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReaderUtilitiesCompatibilityTest', 'calculateHttpEncoding(String,String,String,String,boolean,String)')": [
                        41
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReaderUtilitiesCompatibilityTest', 'calculateHttpEncoding(String,String,String,String,boolean,String)')": [
                        41
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/AppendableOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#AppendableOutputStreamTest', 'testWriteStringBuilder')": [
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#AppendableOutputStreamTest', 'testWriteStringBuilder')": [
                        39
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java": {
                "old": {
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'testToInputStream')": [
                        100,
                        101,
                        110
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'testToInputStreamWithReset')": [
                        133,
                        134,
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'testToInputStream')": [
                        100,
                        101,
                        110
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'testToInputStreamWithReset')": [
                        133,
                        134,
                        143
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ChunkedOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'write_four_chunks')": [
                        34,
                        35
                    ],
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'negative_chunksize_not_permitted')": [
                        43
                    ],
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'defaultConstructor')": [
                        50,
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'write_four_chunks')": [
                        34,
                        35
                    ],
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'negative_chunksize_not_permitted')": [
                        43
                    ],
                    "('org.apache.commons.io.output#ChunkedOutputStreamTest', 'defaultConstructor')": [
                        50,
                        51
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ChunkedWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#ChunkedWriterTest', 'write_four_chunks')": [
                        31,
                        33
                    ],
                    "('org.apache.commons.io.output#ChunkedWriterTest', 'write_two_chunks_default_constructor')": [
                        43,
                        45
                    ],
                    "('org.apache.commons.io.output#ChunkedWriterTest', 'getOutputStreamWriter(AtomicInteger)')": [
                        53
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ChunkedWriterTest', 'write_four_chunks')": [
                        31,
                        33
                    ],
                    "('org.apache.commons.io.output#ChunkedWriterTest', 'write_two_chunks_default_constructor')": [
                        43,
                        45
                    ],
                    "('org.apache.commons.io.output#ChunkedWriterTest', 'getOutputStreamWriter(AtomicInteger)')": [
                        53
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java": {
                "old": {
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_CharsetEncoder_constructor')": [
                        97
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_CharsetEncoder_constructor')": [
                        103
                    ],
                    "(None, None)": [
                        258
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_CharsetEncoder_constructor')": [
                        97
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_CharsetEncoder_constructor')": [
                        103
                    ],
                    "(None, None)": [
                        258
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ProxyWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_append_char')": [
                        139
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_append_charSequence')": [
                        152
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_append_charSequence_offset')": [
                        165
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_int')": [
                        178
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_char_array')": [
                        191
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_offset_char_array')": [
                        204
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_string')": [
                        217
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_string_offset')": [
                        230
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_flush')": [
                        243
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_close')": [
                        256
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_append_char')": [
                        139
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_append_charSequence')": [
                        152
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_append_charSequence_offset')": [
                        165
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_int')": [
                        178
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_char_array')": [
                        191
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_offset_char_array')": [
                        204
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_string')": [
                        217
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_write_string_offset')": [
                        230
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_flush')": [
                        243
                    ],
                    "('org.apache.commons.io.output#ProxyWriterTest', 'exceptions_in_close')": [
                        256
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ThresholdingOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#ThresholdingOutputStreamTest', 'testSetByteCount')": [
                        32
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ThresholdingOutputStreamTest', 'testSetByteCount')": [
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/WriterOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF16WithSingleByteWrite')": [
                        91
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF16WithBufferedWrite')": [
                        102
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF16WithSingleByteWrite')": [
                        91
                    ],
                    "('org.apache.commons.io.output#WriterOutputStreamTest', 'testUTF16WithBufferedWrite')": [
                        102
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/serialization/ClosingBase.java": {
                "old": {
                    "('org.apache.commons.io.serialization#ClosingBase', 'cleanup')": [
                        47
                    ],
                    "(None, None)": [
                        50
                    ]
                },
                "new": {
                    "('org.apache.commons.io.serialization#ClosingBase', 'cleanup')": [
                        47
                    ],
                    "(None, None)": [
                        50
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/serialization/RegexpClassNameMatcherTest.java": {
                "old": {
                    "('org.apache.commons.io.serialization#RegexpClassNameMatcherTest', 'testSimplePatternFromString')": [
                        32
                    ],
                    "('org.apache.commons.io.serialization#RegexpClassNameMatcherTest', 'testSimplePatternFromPattern')": [
                        39
                    ],
                    "('org.apache.commons.io.serialization#RegexpClassNameMatcherTest', 'testOrPattern')": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.io.serialization#RegexpClassNameMatcherTest', 'testSimplePatternFromString')": [
                        32
                    ],
                    "('org.apache.commons.io.serialization#RegexpClassNameMatcherTest', 'testSimplePatternFromPattern')": [
                        39
                    ],
                    "('org.apache.commons.io.serialization#RegexpClassNameMatcherTest', 'testOrPattern')": [
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.serialization#ValidatingObjectInputStreamTest', 'exceptionIncludesClassName')": [
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.io.serialization#ValidatingObjectInputStreamTest', 'exceptionIncludesClassName')": [
                        76
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/serialization/WildcardClassNameMatcherTest.java": {
                "old": {
                    "('org.apache.commons.io.serialization#WildcardClassNameMatcherTest', 'noPattern')": [
                        30
                    ],
                    "('org.apache.commons.io.serialization#WildcardClassNameMatcherTest', 'star')": [
                        38
                    ],
                    "('org.apache.commons.io.serialization#WildcardClassNameMatcherTest', 'starAndQuestionMark')": [
                        45
                    ]
                },
                "new": {
                    "('org.apache.commons.io.serialization#WildcardClassNameMatcherTest', 'noPattern')": [
                        30
                    ],
                    "('org.apache.commons.io.serialization#WildcardClassNameMatcherTest', 'star')": [
                        38
                    ],
                    "('org.apache.commons.io.serialization#WildcardClassNameMatcherTest', 'starAndQuestionMark')": [
                        45
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/testtools/TestUtils.java": {
                "old": {
                    "('org.apache.commons.io.testtools#TestUtils', 'sleep(long)')": [
                        226
                    ],
                    "(None, None)": [
                        237
                    ]
                },
                "new": {
                    "('org.apache.commons.io.testtools#TestUtils', 'sleep(long)')": [
                        226
                    ],
                    "(None, None)": [
                        237
                    ]
                }
            }
        }
    },
    "36940b6418283806ed10292776c9c4269923e1ca": {
        "authored_data": "2017 Sep 28 19:07",
        "commit.message": "FileWriterWithEncodingTest: simplify setUp method\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "2341c409ad30a83ea49d95c4b6571ae4479db887",
        "changes": {
            "src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java": {
                "old": {
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'setUp')": [
                        59,
                        61,
                        62,
                        63,
                        65,
                        66,
                        67,
                        68
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'setUp')": [
                        59,
                        61
                    ]
                }
            }
        }
    },
    "2341c409ad30a83ea49d95c4b6571ae4479db887": {
        "authored_data": "2017 Sep 28 19:03",
        "commit.message": "IOUtilsCopyTestCase: remove unused import statement\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "c40faa90f9cc73045995133714111bb6cb344ec2",
        "changes": {
            "src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java": {
                "old": {
                    "(None, None)": [
                        23
                    ]
                }
            }
        }
    },
    "c40faa90f9cc73045995133714111bb6cb344ec2": {
        "authored_data": "2017 Sep 28 18:52",
        "commit.message": "enable doclint on java 8+\n\nfix errors reported by java 8 doclint\n",
        "commit.author.name": "pascalschumacher",
        "pcid": "958657f3c7cdf1f1d81a139b312c032020d582f0",
        "changes": {
            "src/main/java/org/apache/commons/io/input/BoundedReader.java": {
                "old": {
                    "('org.apache.commons.io.input#BoundedReader', None)": [
                        98
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#BoundedReader', None)": [
                        98
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ObservableInputStream.java": {
                "old": {
                    "(None, None)": [
                        29
                    ]
                },
                "new": {
                    "(None, None)": [
                        29
                    ]
                }
            }
        }
    }
}