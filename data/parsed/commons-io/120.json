{
    "99106fd1670193815411b931556bdc39f86ba9bd": {
        "authored_data": "2022 Jun 21 12:03",
        "commit.message": "Whitespace and name tweaks",
        "commit.author.name": "Gary Gregory",
        "pcid": "92a67fccf7396845b27801cd07480cfed30589b9",
        "changes": {
            "src/main/java/org/apache/commons/io/input/XmlStreamReader.java": {
                "old": {
                    "('org.apache.commons.io.input#XmlStreamReader', None)": [
                        101,
                        456,
                        550,
                        583,
                        584,
                        586,
                        588,
                        589,
                        590,
                        829,
                        830,
                        831,
                        832,
                        834,
                        835
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'processHttpStream(BOMInputStream,BOMInputStream,String,boolean)')": [
                        839,
                        840,
                        841,
                        842,
                        843
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#XmlStreamReader', None)": [
                        101,
                        581,
                        582,
                        584,
                        586,
                        587,
                        588,
                        827,
                        828,
                        829,
                        830,
                        832
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'processHttpStream(BOMInputStream,BOMInputStream,String,boolean)')": [
                        836,
                        837,
                        838,
                        839,
                        840
                    ]
                }
            }
        }
    },
    "92a67fccf7396845b27801cd07480cfed30589b9": {
        "authored_data": "2022 Jun 21 11:55",
        "commit.message": "Format tweak",
        "commit.author.name": "Gary Gregory",
        "pcid": "950fc0a47428d64dfb01c62099af30ea30de6cb9",
        "changes": {
            "src/main/java/org/apache/commons/io/input/XmlStreamReader.java": {
                "old": {
                    "('org.apache.commons.io.input#XmlStreamReader', 'doRawStream(BOMInputStream,BOMInputStream,boolean)')": [
                        792,
                        793,
                        794
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#XmlStreamReader', 'doRawStream(BOMInputStream,BOMInputStream,boolean)')": [
                        792,
                        793
                    ]
                }
            }
        }
    },
    "950fc0a47428d64dfb01c62099af30ea30de6cb9": {
        "authored_data": "2022 Jun 21 11:50",
        "commit.message": "Inline single constant reference to other constant\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "42574b3b442e42d898ea8304f42e66b24e0559f8",
        "changes": {
            "src/main/java/org/apache/commons/io/output/XmlStreamWriter.java": {
                "old": {
                    "(None, None)": [
                        29
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriter', None)": [
                        43,
                        44
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriter', 'detectEncoding(char,int,int)')": [
                        143
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#XmlStreamWriter', None)": [
                        41
                    ],
                    "('org.apache.commons.io.output#XmlStreamWriter', 'detectEncoding(char,int,int)')": [
                        141
                    ]
                }
            }
        }
    },
    "42574b3b442e42d898ea8304f42e66b24e0559f8": {
        "authored_data": "2022 Jun 21 11:47",
        "commit.message": "Javadoc",
        "commit.author.name": "Gary Gregory",
        "pcid": "f2ee0df41f31bebc2694e55954e8dfd2e9787603",
        "changes": {
            "src/main/java/org/apache/commons/io/input/XmlStreamReader.java": {
                "old": {
                    "('org.apache.commons.io.input#XmlStreamReader', None)": [
                        138,
                        159,
                        179,
                        233,
                        245,
                        246,
                        247,
                        248,
                        268,
                        284,
                        299,
                        330,
                        369,
                        391,
                        430,
                        475,
                        493,
                        515,
                        551,
                        709,
                        765,
                        777,
                        786,
                        812
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'isAppXml(String)')": [
                        244
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'isTextXml(String)')": [
                        258
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#XmlStreamReader', None)": [
                        74,
                        139,
                        160,
                        180,
                        234,
                        246,
                        247,
                        248,
                        249,
                        269,
                        273,
                        277,
                        287,
                        290,
                        294,
                        304,
                        307,
                        311,
                        315,
                        318,
                        321,
                        324,
                        328,
                        342,
                        345,
                        349,
                        353,
                        356,
                        359,
                        362,
                        366,
                        388,
                        395,
                        399,
                        412,
                        419,
                        423,
                        427,
                        430,
                        433,
                        436,
                        440,
                        458,
                        465,
                        469,
                        473,
                        476,
                        479,
                        482,
                        486,
                        510,
                        514,
                        518,
                        530,
                        534,
                        539,
                        543,
                        555,
                        560,
                        565,
                        569,
                        594,
                        752,
                        808,
                        812,
                        821,
                        830,
                        856,
                        857
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'isAppXml(String)')": [
                        245
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'isTextXml(String)')": [
                        259
                    ]
                }
            }
        }
    },
    "f2ee0df41f31bebc2694e55954e8dfd2e9787603": {
        "authored_data": "2022 Jun 21 11:40",
        "commit.message": "Javadoc\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "751e7bc1d5c85969189cfa223741db50ce1b1639",
        "changes": {
            "src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java": {
                "old": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30,
                        31
                    ],
                    "('org.apache.commons.io.input#MessageDigestCalculatingInputStream', None)": [
                        71,
                        82,
                        97,
                        107,
                        109,
                        110,
                        112,
                        119
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38
                    ],
                    "('org.apache.commons.io.input#MessageDigestCalculatingInputStream', None)": [
                        44,
                        45,
                        46,
                        81,
                        92,
                        93,
                        108,
                        109,
                        110,
                        111,
                        121,
                        123,
                        131,
                        132,
                        134,
                        139,
                        140
                    ]
                }
            }
        }
    },
    "751e7bc1d5c85969189cfa223741db50ce1b1639": {
        "authored_data": "2022 Jun 20 20:29",
        "commit.message": "[IO-755] Using FileUtils.listFiles() with background changes fails on\nLinux",
        "commit.author.name": "Gary Gregory",
        "pcid": "8b47fc56a3a286d96dbd4537ea48efd65b9316c4",
        "changes": {
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "(None, None)": [
                        81
                    ],
                    "('org.apache.commons.io#FileUtils', 'listAccumulate(File,IOFileFilter,IOFileFilter,FileVisitOption)')": [
                        2178
                    ]
                },
                "new": {
                    "(None, None)": [
                        40
                    ],
                    "('org.apache.commons.io#FileUtils', 'listAccumulate(File,IOFileFilter,IOFileFilter,FileVisitOption)')": [
                        2178,
                        2179
                    ]
                }
            }
        }
    },
    "8b47fc56a3a286d96dbd4537ea48efd65b9316c4": {
        "authored_data": "2022 Jun 20 18:40",
        "commit.message": "Format tweaks",
        "commit.author.name": "Gary Gregory",
        "pcid": "e7bbb248ff9e7e677ad3b8c286eec63c911bd9b0",
        "changes": {
            "src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#AbstractByteArrayOutputStream', None)": [
                        164
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#AbstractByteArrayOutputStream', None)": [
                        83,
                        86,
                        89,
                        92,
                        95
                    ]
                }
            }
        }
    },
    "cddd19d0826091713993727fafff11ac3849b088": {
        "authored_data": "2022 Jun 20 18:29",
        "commit.message": "[IO-564] Pick up Javadoc from super for override write() methods in\nAbstractByteArrayOutputStream and ByteArrayOutputStream",
        "commit.author.name": "Gary Gregory",
        "pcid": "c0d254dffe7e39eaf219f6eb9dfba9f9369f435b",
        "changes": {
            "src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#AbstractByteArrayOutputStream', None)": [
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        294,
                        295,
                        296,
                        297,
                        298,
                        299,
                        316,
                        317,
                        318,
                        319
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#AbstractByteArrayOutputStream', None)": [
                        98,
                        99,
                        100,
                        101,
                        102,
                        103
                    ]
                }
            }
        }
    },
    "c0d254dffe7e39eaf219f6eb9dfba9f9369f435b": {
        "authored_data": "2022 Jun 20 18:10",
        "commit.message": "Whitespace and Javadoc",
        "commit.author.name": "Gary Gregory",
        "pcid": "9d221a222f605f4feb8828efbda95de75bd352f9",
        "changes": {
            "src/main/java/org/apache/commons/io/EndianUtils.java": {
                "old": {
                    "(None, None)": [
                        27
                    ],
                    "('org.apache.commons.io#EndianUtils', 'read(InputStream)')": [
                        50,
                        54
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedDouble(byte,int)')": [
                        66
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedFloat(byte,int)')": [
                        88
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedInteger(byte,int)')": [
                        110,
                        111,
                        112,
                        113
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedInteger(InputStream)')": [
                        128
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedShort(byte,int)')": [
                        168,
                        169
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedUnsignedInteger(byte,int)')": [
                        192,
                        193,
                        194,
                        195,
                        196,
                        197
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedUnsignedInteger(InputStream)')": [
                        213,
                        215,
                        217
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedUnsignedShort(byte,int)')": [
                        230,
                        231
                    ],
                    "('org.apache.commons.io#EndianUtils', 'swapDouble(double)')": [
                        254
                    ],
                    "('org.apache.commons.io#EndianUtils', 'swapFloat(float)')": [
                        263
                    ],
                    "('org.apache.commons.io#EndianUtils', 'swapInteger(int)')": [
                        273,
                        274,
                        275,
                        276
                    ],
                    "('org.apache.commons.io#EndianUtils', 'swapLong(long)')": [
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293
                    ],
                    "('org.apache.commons.io#EndianUtils', 'swapShort(short)')": [
                        302,
                        303
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedDouble(byte,int,double)')": [
                        314
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedFloat(byte,int,float)')": [
                        336
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedInteger(byte,int,int)')": [
                        358,
                        359,
                        360,
                        361
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedLong(byte,int,long)')": [
                        386,
                        387,
                        388,
                        389,
                        390,
                        391,
                        392,
                        393
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedShort(byte,int,short)')": [
                        422,
                        423
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        35,
                        38
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedDouble(byte,int)')": [
                        66
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedFloat(byte,int)')": [
                        88
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedInteger(byte,int)')": [
                        110,
                        111,
                        112,
                        113
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedShort(byte,int)')": [
                        167,
                        168
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedUnsignedInteger(byte,int)')": [
                        191,
                        192,
                        193,
                        194
                    ],
                    "('org.apache.commons.io#EndianUtils', 'readSwappedUnsignedShort(byte,int)')": [
                        224,
                        225
                    ],
                    "('org.apache.commons.io#EndianUtils', 'swapDouble(double)')": [
                        248
                    ],
                    "('org.apache.commons.io#EndianUtils', 'swapFloat(float)')": [
                        257
                    ],
                    "('org.apache.commons.io#EndianUtils', 'swapInteger(int)')": [
                        267,
                        268,
                        269,
                        270
                    ],
                    "('org.apache.commons.io#EndianUtils', 'swapLong(long)')": [
                        280,
                        281,
                        282,
                        283,
                        284,
                        285,
                        286,
                        287
                    ],
                    "('org.apache.commons.io#EndianUtils', 'swapShort(short)')": [
                        296,
                        297
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedDouble(byte,int,double)')": [
                        308
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedFloat(byte,int,float)')": [
                        330
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedInteger(byte,int,int)')": [
                        352,
                        353,
                        354,
                        355
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedLong(byte,int,long)')": [
                        380,
                        381,
                        382,
                        383,
                        384,
                        385,
                        386,
                        387
                    ],
                    "('org.apache.commons.io#EndianUtils', 'writeSwappedShort(byte,int,short)')": [
                        416,
                        417
                    ]
                }
            }
        }
    }
}