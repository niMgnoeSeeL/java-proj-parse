{
    "41f13afe45c47b00aaf3709f0d5f0de11493275e": {
        "authored_data": "2004 Oct 24 00:06",
        "commit.message": "Directories should not be included when looking for empty files.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140608 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Martin Cooper",
        "pcid": "bf190d699ef669c058ee62a8f7ab7220b6684b78",
        "changes": {
            "src/java/org/apache/commons/io/find/FindingFilter.java": {
                "old": {
                    "('org.apache.commons.io.find#EmptyFilter', 'accept(File)')": [
                        209
                    ]
                },
                "new": {
                    "('org.apache.commons.io.find#EmptyFilter', 'accept(File)')": [
                        209
                    ]
                }
            }
        }
    },
    "bf190d699ef669c058ee62a8f7ab7220b6684b78": {
        "authored_data": "2004 Oct 11 04:29",
        "commit.message": "Use the Commons IO ByteArrayOutputStream instead of the java.io one, so\nthat we don't have to preallocate the entire memory size up front. This\nfixes bug #24306 filed against Commons FileUpload.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140607 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Martin Cooper",
        "pcid": "400e99de58edf0d46a2b22818c37384a3ec9d122",
        "changes": {
            "src/java/org/apache/commons/io/output/DeferredFileOutputStream.java": {
                "old": {
                    "(None, None)": [
                        20,
                        39
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStream', None)": [
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        38
                    ],
                    "('org.apache.commons.io.output#DeferredFileOutputStream', None)": [
                        90
                    ]
                }
            }
        }
    },
    "400e99de58edf0d46a2b22818c37384a3ec9d122": {
        "authored_data": "2004 Sep 22 04:12",
        "commit.message": "More tests for WildcardUtils.match and a new implementation of the match method.\nMostly the same as Bugzilla #31115, though the old tests were kept and they\nshowed a bug.\n\nSubmitted by:\tJason Anderson\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140606 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "a3ddcc7f216e8551937586b949444a481854b425",
        "changes": {
            "src/java/org/apache/commons/io/find/WildcardUtils.java": {
                "old": {
                    "('org.apache.commons.io.find#WildcardUtils', 'match(String,String)')": [
                        31,
                        32,
                        33,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        47,
                        48,
                        49,
                        50,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.io.find#WildcardUtils', 'match(String,String)')": [
                        32,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40,
                        41,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89
                    ]
                }
            },
            "src/test/org/apache/commons/io/find/WildcardUtilsTest.java": {
                "new": {
                    "('org.apache.commons.io.find#WildcardUtilsTest', 'assertMatch(String,String,boolean)')": [
                        65,
                        66
                    ],
                    "('org.apache.commons.io.find#WildcardUtilsTest', None)": [
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.io.find#WildcardUtilsTest', 'testMatch2')": [
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95
                    ],
                    "(None, None)": [
                        96,
                        97
                    ]
                }
            }
        }
    },
    "1d40fcea1b4b48076b0b880ad4db78e8a8d05fc5": {
        "authored_data": "2004 Sep 22 02:04",
        "commit.message": "WildcardFilter (Bugzilla #31115)\n\nSubmitted by:\tJason Anderson\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140604 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "c7cb6d1831629a3b54b33fc949d3ccb816c727ce",
        "changes": {
            "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java": {
                "old": {
                    "(None, None)": [
                        3,
                        7,
                        9
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', None)": [
                        32,
                        36,
                        122
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'assertFiltering(IOFileFilter,File,boolean)')": [
                        48
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testSuffix')": [
                        74,
                        78
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testPrefix')": [
                        111,
                        115
                    ]
                },
                "new": {
                    "(None, None)": [
                        3,
                        7,
                        9,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        231
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', None)": [
                        32,
                        36,
                        122,
                        200
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'assertFiltering(IOFileFilter,File,boolean)')": [
                        48
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testSuffix')": [
                        74,
                        78
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testPrefix')": [
                        111,
                        115
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testWildcard')": [
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223
                    ]
                }
            }
        }
    },
    "c7cb6d1831629a3b54b33fc949d3ccb816c727ce": {
        "authored_data": "2004 Sep 22 02:02",
        "commit.message": "still had old subversion tests in. switched to ignore CVS directory and to expect an extra file in the type test\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140603 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "4fbac940f62e0e5196498c3b7cb4ab909ce1a337",
        "changes": {
            "src/test/org/apache/commons/io/find/FileFinderTest.java": {
                "old": {
                    "('org.apache.commons.io.find#FileFinderTest', 'setUp')": [
                        42
                    ],
                    "('org.apache.commons.io.find#FileFinderTest', 'testFindTypeF')": [
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.io.find#FileFinderTest', 'setUp')": [
                        42
                    ],
                    "('org.apache.commons.io.find#FileFinderTest', None)": [
                        105,
                        106
                    ],
                    "('org.apache.commons.io.find#FileFinderTest', 'testFindTypeF')": [
                        110
                    ]
                }
            }
        }
    },
    "0720518d0a128c823b93b8b8449e47921859098f": {
        "authored_data": "2004 Aug 24 19:13",
        "commit.message": "Add toCharArray()\nbug 28979, from Gareth Davis\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/io/trunk@140600 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Stephen Colebourne",
        "pcid": "3d206883644d0f97197a4107b2a2174e2548cd5e",
        "changes": {
            "src/java/org/apache/commons/io/IOUtils.java": {
                "old": {
                    "(None, None)": [
                        64
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        65,
                        66
                    ],
                    "('org.apache.commons.io#IOUtils', None)": [
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        273,
                        274,
                        275,
                        276,
                        277,
                        278,
                        279,
                        280,
                        281,
                        282,
                        283,
                        284,
                        285
                    ],
                    "('org.apache.commons.io#IOUtils', 'toCharArray(InputStream)')": [
                        247,
                        248,
                        249,
                        250
                    ],
                    "('org.apache.commons.io#IOUtils', 'toCharArray(InputStream,String)')": [
                        269,
                        270,
                        271,
                        272
                    ],
                    "('org.apache.commons.io#IOUtils', 'toCharArray(Reader)')": [
                        286,
                        287,
                        288,
                        289
                    ]
                }
            },
            "src/test/org/apache/commons/io/IOUtilsTestCase.java": {
                "old": {
                    "(None, None)": [
                        283
                    ]
                },
                "new": {
                    "(None, None)": [
                        44,
                        326,
                        327
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testInputStreamToCharArray')": [
                        282,
                        283,
                        284,
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', None)": [
                        295,
                        296,
                        297,
                        311,
                        312,
                        313
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testInputStreamToCharArrayWithEncoding')": [
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308,
                        309,
                        310
                    ],
                    "('org.apache.commons.io#IOUtilsTestCase', 'testReaderToCharArray')": [
                        314,
                        315,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        324,
                        325
                    ]
                }
            },
            "src/test/org/apache/commons/io/testtools/FileBasedTestCase.java": {
                "new": {
                    "(None, None)": [
                        23,
                        38
                    ],
                    "('org.apache.commons.io.testtools#FileBasedTestCase', None)": [
                        165,
                        181,
                        182,
                        183
                    ],
                    "('org.apache.commons.io.testtools#FileBasedTestCase', 'assertEqualContent(char,File)')": [
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173,
                        174,
                        175,
                        176,
                        177,
                        178,
                        179,
                        180
                    ]
                }
            }
        }
    }
}