{
    "ade3895ef543dc5a9cf2ebc254253155383bca0f": {
        "authored_data": "2020 Nov 20 22:04",
        "commit.message": "Normalize spelling of 'Initialize'.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "397f69d2438f95f7946d83f1b7f240f93febbb3a",
        "changes": {
            "src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java": {
                "old": {
                    "('org.apache.commons.io.output#FileWriterWithEncoding', None)": [
                        217
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#FileWriterWithEncoding', None)": [
                        217
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/LockableFileWriter.java": {
                "old": {
                    "('org.apache.commons.io.output#LockableFileWriter', None)": [
                        256
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#LockableFileWriter', None)": [
                        256
                    ]
                }
            }
        }
    },
    "397f69d2438f95f7946d83f1b7f240f93febbb3a": {
        "authored_data": "2020 Nov 14 14:17",
        "commit.message": "Add PathUtils.createParentDirectories(Path, FileAttribute...).\n\nFix XML attribute syntax error in changes.xml.",
        "commit.author.name": "Gary Gregory",
        "pcid": "8e83b1344fed97b13a3fdfe51c93497aa17173ae",
        "changes": {
            "src/main/java/org/apache/commons/io/file/PathUtils.java": {
                "new": {
                    "(None, None)": [
                        40
                    ],
                    "('org.apache.commons.io.file#PathUtils', None)": [
                        285,
                        286,
                        287,
                        288,
                        289,
                        290,
                        291,
                        292,
                        293,
                        294,
                        295,
                        305,
                        306,
                        307
                    ],
                    "('org.apache.commons.io.file#PathUtils', 'createParentDirectories(Path,FileAttribute)')": [
                        296,
                        297,
                        298,
                        299,
                        300,
                        301,
                        302,
                        303,
                        304
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/PathUtilsTest.java": {
                "new": {
                    "(None, None)": [
                        33,
                        35,
                        36,
                        37
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        65,
                        66,
                        67,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', 'testCreateDirectoriesAlreadyExists')": [
                        63,
                        64
                    ],
                    "('org.apache.commons.io.file#PathUtilsTest', 'testCreateDirectoriesNew')": [
                        68,
                        69
                    ]
                }
            }
        }
    },
    "8e83b1344fed97b13a3fdfe51c93497aa17173ae": {
        "authored_data": "2020 Nov 06 17:04",
        "commit.message": "Remove trailing whitespace.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "ce61df6a84bccbb24a42468122a0dfb1ffe9396a",
        "changes": {
            "src/main/java/org/apache/commons/io/file/PathUtils.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtils', None)": [
                        285,
                        293
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtils', None)": [
                        285,
                        293
                    ]
                }
            }
        }
    },
    "1ac7befa44528dab09fb4864be9d7a95db8a25b6": {
        "authored_data": "2020 Nov 01 03:42",
        "commit.message": "Fix possible NPEs in some file filters when paths have no parent or no\nelements.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "89bfb64c1091ca80e407077707c6121228db5329",
        "changes": {
            "src/main/java/org/apache/commons/io/IOCase.java": {
                "old": {
                    "(None, None)": [
                        174,
                        175,
                        176,
                        177,
                        180,
                        190,
                        191,
                        192,
                        193
                    ]
                },
                "new": {
                    "(None, None)": [
                        174,
                        175,
                        176,
                        179,
                        189,
                        190,
                        191,
                        194,
                        195,
                        196
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/NameFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#NameFileFilter', 'accept(Path,BasicFileAttributes)')": [
                        190
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.io.filefilter#NameFileFilter', 'accept(Path,BasicFileAttributes)')": [
                        191
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/PrefixFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#PrefixFileFilter', 'accept(File)')": [
                        171
                    ],
                    "('org.apache.commons.io.filefilter#PrefixFileFilter', 'accept(Path,BasicFileAttributes)')": [
                        195
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#PrefixFileFilter', 'accept(File)')": [
                        171
                    ],
                    "('org.apache.commons.io.filefilter#PrefixFileFilter', 'accept(Path,BasicFileAttributes)')": [
                        195,
                        196
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#SuffixFileFilter', 'accept(Path,BasicFileAttributes)')": [
                        196
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.io.filefilter#SuffixFileFilter', 'accept(Path,BasicFileAttributes)')": [
                        197
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/WildcardFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#WildcardFileFilter', 'accept(Path,BasicFileAttributes)')": [
                        198
                    ]
                },
                "new": {
                    "(None, None)": [
                        25
                    ],
                    "('org.apache.commons.io.filefilter#WildcardFileFilter', 'accept(Path,BasicFileAttributes)')": [
                        199
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/WildcardFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#WildcardFilter', 'accept(Path,BasicFileAttributes)')": [
                        161
                    ]
                },
                "new": {
                    "(None, None)": [
                        26
                    ],
                    "('org.apache.commons.io.filefilter#WildcardFilter', 'accept(Path,BasicFileAttributes)')": [
                        162
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/IOCaseTestCase.java": {
                "old": {
                    "('org.apache.commons.io#IOCaseTestCase', 'test_checkStartsWith_functionality')": [
                        176,
                        177,
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186
                    ],
                    "('org.apache.commons.io#IOCaseTestCase', None)": [
                        187,
                        226
                    ],
                    "('org.apache.commons.io#IOCaseTestCase', 'test_checkEndsWith_functionality')": [
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOCaseTestCase', 'test_checkStartsWith_functionality')": [
                        176,
                        177,
                        178
                    ],
                    "('org.apache.commons.io#IOCaseTestCase', 'test_checkEndsWith_functionality')": [
                        206,
                        207,
                        208
                    ]
                }
            }
        }
    },
    "8cbe3734f83b9d760eaf07c03d19348327efa14a": {
        "authored_data": "2020 Oct 30 01:27",
        "commit.message": "[IO-510] Add and adapt ReadAheadInputStream and\nBufferedFileChannelInputStream from Apache Spark.\n\nJavadoc and better method names.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "0cc94ec855aaca26bb13a206874612f0381e4c9a",
        "changes": {
            "src/main/java/org/apache/commons/io/input/BufferedFileChannelInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#BufferedFileChannelInputStream', None)": [
                        105,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172
                    ],
                    "('org.apache.commons.io.input#BufferedFileChannelInputStream', 'bufferCleaner(DirectBuffer)')": [
                        106
                    ],
                    "('org.apache.commons.io.input#BufferedFileChannelInputStream', 'close')": [
                        162
                    ],
                    "('org.apache.commons.io.input#BufferedFileChannelInputStream', 'dispose(ByteBuffer)')": [
                        173,
                        174,
                        175
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#BufferedFileChannelInputStream', None)": [
                        101,
                        102,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        112,
                        113,
                        114,
                        115,
                        120,
                        121,
                        122
                    ],
                    "('org.apache.commons.io.input#BufferedFileChannelInputStream', 'clean(ByteBuffer)')": [
                        109,
                        110,
                        111
                    ],
                    "('org.apache.commons.io.input#BufferedFileChannelInputStream', 'clean(DirectBuffer)')": [
                        123
                    ],
                    "('org.apache.commons.io.input#BufferedFileChannelInputStream', 'close')": [
                        179
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java": {
                "new": {
                    "('org.apache.commons.io.input#ReadAheadInputStream', None)": [
                        396,
                        397,
                        398
                    ]
                }
            }
        }
    },
    "0cc94ec855aaca26bb13a206874612f0381e4c9a": {
        "authored_data": "2020 Oct 30 01:01",
        "commit.message": "[IO-510] Add and adapt ReadAheadInputStream and\nBufferedFileChannelInputStream from Apache Spark.\n\nLowest level ctor does not need to be public for now.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "82b029164480169f4857527d1307e3ef46d50534",
        "changes": {
            "src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ReadAheadInputStream', None)": [
                        57,
                        143
                    ],
                    "('org.apache.commons.io.input#ReadAheadInputStream', 'newThread(Runnable)')": [
                        61
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReadAheadInputStream', None)": [
                        57,
                        143
                    ],
                    "('org.apache.commons.io.input#ReadAheadInputStream', 'newThread(Runnable)')": [
                        61
                    ]
                }
            }
        }
    },
    "82b029164480169f4857527d1307e3ef46d50534": {
        "authored_data": "2020 Oct 30 01:00",
        "commit.message": "[IO-510] Add and adapt ReadAheadInputStream and\nBufferedFileChannelInputStream from Apache Spark.\n\nOnly shutdown the executor service if we own it.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "2f1e3544a8f85de762f9750235f70b90e41445da",
        "changes": {
            "src/main/java/org/apache/commons/io/input/ReadAheadInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ReadAheadInputStream', None)": [
                        117,
                        133,
                        136
                    ],
                    "('org.apache.commons.io.input#ReadAheadInputStream', 'close')": [
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189
                    ]
                },
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.io.input#ReadAheadInputStream', None)": [
                        109,
                        110,
                        120,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        149,
                        150,
                        151,
                        208
                    ],
                    "('org.apache.commons.io.input#ReadAheadInputStream', 'close')": [
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207
                    ]
                }
            }
        }
    }
}