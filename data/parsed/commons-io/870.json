{
    "40b9af504c8c9cb313869786516348775443c086": {
        "authored_data": "2021 Feb 06 19:31",
        "commit.message": "Add IOUtils.copy(URL, File) and copy(URL, OutputStream).\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "1d39856e13b0b7cf739b4dcc59418d266bfa986d",
        "changes": {
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.io#IOUtils', None)": [
                        1195,
                        1196,
                        1197,
                        1198,
                        1199,
                        1200,
                        1201,
                        1202,
                        1203,
                        1204,
                        1205,
                        1206,
                        1207,
                        1208,
                        1209,
                        1210,
                        1214,
                        1215,
                        1216,
                        1217,
                        1218,
                        1219,
                        1220,
                        1221,
                        1222,
                        1223,
                        1224,
                        1225,
                        1226,
                        1227,
                        1228,
                        1229,
                        1230,
                        1231,
                        1232,
                        1233,
                        1237,
                        1238,
                        1239,
                        1240
                    ],
                    "('org.apache.commons.io#IOUtils', 'copy(URL,File)')": [
                        1211,
                        1212,
                        1213
                    ],
                    "('org.apache.commons.io#IOUtils', 'copy(URL,OutputStream)')": [
                        1234,
                        1235,
                        1236
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java": {
                "new": {
                    "(None, None)": [
                        19,
                        21,
                        32,
                        34,
                        35,
                        36,
                        466,
                        467
                    ],
                    "('org.apache.commons.io#IOUtilsCopyTestCase', None)": [
                        440,
                        453,
                        454,
                        455,
                        456
                    ],
                    "('org.apache.commons.io#IOUtilsCopyTestCase', 'testCopy_URLToFile')": [
                        441,
                        442,
                        443,
                        444,
                        445,
                        446,
                        447,
                        448,
                        449,
                        450,
                        451,
                        452
                    ],
                    "('org.apache.commons.io#IOUtilsCopyTestCase', 'testCopy_URLToOutputStream')": [
                        457,
                        458,
                        459,
                        460,
                        461,
                        462,
                        463,
                        464,
                        465
                    ]
                }
            }
        }
    },
    "1d39856e13b0b7cf739b4dcc59418d266bfa986d": {
        "authored_data": "2021 Feb 06 18:39",
        "commit.message": "Remove dead comments. Javadoc.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "06741008dd0771b04c6ae3e72f91543c28abeed3",
        "changes": {
            "src/test/java/org/apache/commons/io/IOUtilsCopyTestCase.java": {
                "old": {
                    "('org.apache.commons.io#IOUtilsCopyTestCase', None)": [
                        62,
                        80,
                        146,
                        166,
                        289,
                        312,
                        383
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtilsCopyTestCase', None)": [
                        79
                    ]
                }
            }
        }
    },
    "06741008dd0771b04c6ae3e72f91543c28abeed3": {
        "authored_data": "2021 Feb 06 18:31",
        "commit.message": "Sort members.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "29b70e156f9241b0c3e25896c931d1ef8725ad66",
        "changes": {
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "old": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153
                    ]
                }
            }
        }
    },
    "29b70e156f9241b0c3e25896c931d1ef8725ad66": {
        "authored_data": "2021 Feb 02 22:37",
        "commit.message": "Use the scale in the var name.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "af5f764aa3eef21f4bd7d8b404c5d6d3b7c02eab",
        "changes": {
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', 'waitFor(File,int)')": [
                        3142,
                        3146,
                        3147,
                        3151
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', 'waitFor(File,int)')": [
                        3142,
                        3146,
                        3147,
                        3151
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/ThreadMonitor.java": {
                "old": {
                    "('org.apache.commons.io#ThreadMonitor', None)": [
                        121
                    ],
                    "('org.apache.commons.io#ThreadMonitor', 'sleep(long)')": [
                        124,
                        125,
                        126,
                        128,
                        129,
                        130
                    ]
                },
                "new": {
                    "('org.apache.commons.io#ThreadMonitor', None)": [
                        121
                    ],
                    "('org.apache.commons.io#ThreadMonitor', 'sleep(long)')": [
                        124,
                        125,
                        126,
                        128,
                        129,
                        130
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FileUtilsTestCase.java": {
                "old": {
                    "('org.apache.commons.io#FileUtilsTestCase', 'testCopyFile2WithoutFileDatePreservation')": [
                        1068,
                        1073,
                        1074,
                        1076,
                        1077,
                        1078
                    ],
                    "('org.apache.commons.io#FileUtilsTestCase', 'testMoveFile_CopyDelete_WithoutFileDatePreservation')": [
                        2268,
                        2280,
                        2288,
                        2289,
                        2290,
                        2291
                    ],
                    "('org.apache.commons.io#FileUtilsTestCase', 'testTouch')": [
                        2781,
                        2785,
                        2786
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtilsTestCase', 'testCopyFile2WithoutFileDatePreservation')": [
                        1068,
                        1073,
                        1074,
                        1076,
                        1077,
                        1078,
                        1079,
                        1080
                    ],
                    "('org.apache.commons.io#FileUtilsTestCase', 'testMoveFile_CopyDelete_WithoutFileDatePreservation')": [
                        2270,
                        2282,
                        2290,
                        2291,
                        2292,
                        2293,
                        2294,
                        2295
                    ],
                    "('org.apache.commons.io#FileUtilsTestCase', 'testTouch')": [
                        2785,
                        2789,
                        2790,
                        2791
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/filefilter/AgeFileFilterTest.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#AgeFileFilterTest', 'testJavadocExampleUsingIo')": [
                        49,
                        50
                    ],
                    "('org.apache.commons.io.filefilter#AgeFileFilterTest', 'testJavadocExampleUsingNio')": [
                        67,
                        68
                    ],
                    "('org.apache.commons.io.filefilter#AgeFileFilterTest', 'testNoCounting')": [
                        99,
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#AgeFileFilterTest', 'testJavadocExampleUsingIo')": [
                        49,
                        50
                    ],
                    "('org.apache.commons.io.filefilter#AgeFileFilterTest', 'testJavadocExampleUsingNio')": [
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.io.filefilter#AgeFileFilterTest', 'testNoCounting')": [
                        100,
                        102
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/test/TestUtils.java": {
                "old": {
                    "('org.apache.commons.io.test#TestUtils', None)": [
                        218,
                        228,
                        229
                    ],
                    "('org.apache.commons.io.test#TestUtils', 'sleep(long)')": [
                        221,
                        222,
                        223,
                        225,
                        226,
                        227
                    ],
                    "('org.apache.commons.io.test#TestUtils', 'sleepQuietly(long)')": [
                        230,
                        231,
                        232
                    ]
                },
                "new": {
                    "('org.apache.commons.io.test#TestUtils', None)": [
                        218,
                        228,
                        229
                    ],
                    "('org.apache.commons.io.test#TestUtils', 'sleep(long)')": [
                        221,
                        222,
                        223,
                        225,
                        226,
                        227
                    ],
                    "('org.apache.commons.io.test#TestUtils', 'sleepQuietly(long)')": [
                        230,
                        231,
                        232
                    ]
                }
            }
        }
    },
    "af5f764aa3eef21f4bd7d8b404c5d6d3b7c02eab": {
        "authored_data": "2021 Feb 01 21:30",
        "commit.message": "Fix infinite loops in ObservableInputStream read(*) when an exception is\ncaught but not re-thrown.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "29e4f8548e86c9a78b09f11908c0d8815f985d73",
        "changes": {
            "src/main/java/org/apache/commons/io/input/ObservableInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ObservableInputStream', 'read')": [
                        260,
                        261
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read(byte)')": [
                        279,
                        280
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read(byte,int,int)')": [
                        292,
                        293
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ObservableInputStream', 'notify(byte,int,int,IOException)')": [
                        247
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read')": [
                        261,
                        262,
                        266
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read(byte)')": [
                        281,
                        282
                    ],
                    "('org.apache.commons.io.input#ObservableInputStream', 'read(byte,int,int)')": [
                        294,
                        295
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java": {
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', None)": [
                        127,
                        128,
                        129,
                        133,
                        134,
                        135,
                        136,
                        140,
                        141,
                        142,
                        143,
                        147
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testBrokenInputStreamRead')": [
                        130,
                        131,
                        132
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testBrokenInputStreamReadBuffer')": [
                        137,
                        138,
                        139
                    ],
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testBrokenInputStreamReadSubBuffer')": [
                        144,
                        145,
                        146
                    ]
                }
            }
        }
    },
    "29e4f8548e86c9a78b09f11908c0d8815f985d73": {
        "authored_data": "2021 Feb 01 16:43",
        "commit.message": "Make public and reuse IOUtils.EMPTY_BYTE_ARRAY.",
        "commit.author.name": "Gary Gregory",
        "pcid": "e59563dd94b435849a8fdf9270c7aed79d7e58da",
        "changes": {
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "old": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        108
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        108,
                        109,
                        110,
                        111,
                        112,
                        113
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#AbstractByteArrayOutputStream', None)": [
                        64,
                        65,
                        66
                    ],
                    "('org.apache.commons.io.output#AbstractByteArrayOutputStream', 'toByteArrayImpl')": [
                        366
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#AbstractByteArrayOutputStream', 'toByteArrayImpl')": [
                        363
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/CharsetsTestCase.java": {
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/FileUtilsDeleteDirectoryBaseTestCase.java": {
                "new": {
                    "(None, None)": [
                        25
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/PathUtilsDeleteFileTest.java": {
                "new": {
                    "(None, None)": [
                        25,
                        32
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/function/IOFunctionTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        29,
                        30
                    ]
                },
                "new": {
                    "(None, None)": [
                        20,
                        21,
                        30
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/BoundedInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#BoundedInputStreamTest', 'testReadArray')": [
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#BoundedInputStreamTest', 'testReadArray')": [
                        71
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/CountingInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testZeroLength1')": [
                        121
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testZeroLength2')": [
                        132
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testZeroLength3')": [
                        145
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testZeroLength1')": [
                        121
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testZeroLength2')": [
                        132
                    ],
                    "('org.apache.commons.io.input#CountingInputStreamTest', 'testZeroLength3')": [
                        145
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/MarkShieldInputStreamTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        24
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        27
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/QueueInputStreamTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        38,
                        39,
                        40
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        33,
                        34,
                        35,
                        36,
                        37,
                        38,
                        39,
                        40
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/TimestampedObserverTest.java": {
                "old": {
                    "(None, None)": [
                        21
                    ]
                },
                "new": {
                    "(None, None)": [
                        20
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/UnsynchronizedByteArrayInputStreamTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testConstructor1')": [
                        36
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testConstructor2')": [
                        56
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testConstructor3')": [
                        85
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testInvalidConstructor2OffsetUnder')": [
                        140
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testInvalidConstructor3LengthUnder')": [
                        147
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testInvalidConstructor3OffsetUnder')": [
                        154
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testInvalidReadArrayExplicitLenUnder')": [
                        161
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testInvalidReadArrayExplicitOffsetUnder')": [
                        170
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testInvalidReadArrayExplicitRangeOver')": [
                        180
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testReadArray')": [
                        237,
                        242
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testReadArrayExplicit')": [
                        271,
                        277,
                        283,
                        288
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testReadSingle')": [
                        308
                    ]
                },
                "new": {
                    "(None, None)": [
                        27,
                        28,
                        29
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testConstructor1')": [
                        37
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testConstructor2')": [
                        57
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testConstructor3')": [
                        86
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testInvalidConstructor2OffsetUnder')": [
                        141
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testInvalidConstructor3LengthUnder')": [
                        148
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testInvalidConstructor3OffsetUnder')": [
                        155
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testInvalidReadArrayExplicitLenUnder')": [
                        162
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testInvalidReadArrayExplicitOffsetUnder')": [
                        171
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testInvalidReadArrayExplicitRangeOver')": [
                        181
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testReadArray')": [
                        238,
                        243
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testReadArrayExplicit')": [
                        272,
                        278,
                        284,
                        289
                    ],
                    "('org.apache.commons.io.input#UnsynchronizedByteArrayInputStreamTest', 'testReadSingle')": [
                        309
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ByteArrayOutputStreamTestCase.java": {
                "old": {
                    "(None, None)": [
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        36
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'testWriteZero(String,BAOSFactory)')": [
                        109
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'testInvalidWriteOffsetOver(String,BAOSFactory)')": [
                        126
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'testToBufferedInputStreamEmpty(String,IOFunction)')": [
                        177
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'testWriteZero(String,BAOSFactory)')": [
                        109
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'testInvalidWriteOffsetOver(String,BAOSFactory)')": [
                        126
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStreamTestCase', 'testToBufferedInputStreamEmpty(String,IOFunction)')": [
                        177
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/QueueOutputStreamTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        33,
                        34,
                        35,
                        36,
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        20,
                        21,
                        22,
                        23,
                        33,
                        34,
                        35,
                        36,
                        37
                    ]
                }
            }
        }
    },
    "e59563dd94b435849a8fdf9270c7aed79d7e58da": {
        "authored_data": "2021 Feb 01 16:30",
        "commit.message": "Add and use IOUtils.byteArray(*).\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "31668fded0153d70f74e763a9575d4ba40aea80b",
        "changes": {
            "src/main/java/org/apache/commons/io/ByteOrderMark.java": {
                "old": {
                    "('org.apache.commons.io#ByteOrderMark', 'getBytes')": [
                        125
                    ]
                },
                "new": {
                    "('org.apache.commons.io#ByteOrderMark', 'getBytes')": [
                        125
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/CopyUtils.java": {
                "old": {
                    "('org.apache.commons.io#CopyUtils', None)": [
                        117,
                        118,
                        119,
                        120,
                        121
                    ],
                    "('org.apache.commons.io#CopyUtils', 'copy(InputStream,OutputStream)')": [
                        175
                    ],
                    "('org.apache.commons.io#CopyUtils', 'copy(Reader,Writer)')": [
                        200
                    ]
                },
                "new": {
                    "('org.apache.commons.io#CopyUtils', 'copy(InputStream,OutputStream)')": [
                        170
                    ],
                    "('org.apache.commons.io#CopyUtils', 'copy(Reader,Writer)')": [
                        195
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "old": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        175
                    ],
                    "('org.apache.commons.io#IOUtils', 'contentEquals(InputStream,InputStream)')": [
                        757,
                        758
                    ],
                    "('org.apache.commons.io#IOUtils', 'copy(InputStream,OutputStream,int)')": [
                        928
                    ],
                    "('org.apache.commons.io#IOUtils', 'copyLarge(InputStream,OutputStream,long,long)')": [
                        1246
                    ],
                    "('org.apache.commons.io#IOUtils', 'readFully(InputStream,int)')": [
                        1733
                    ],
                    "('org.apache.commons.io#IOUtils', 'toByteArray(InputStream,int)')": [
                        2320
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        175,
                        316,
                        317,
                        318,
                        319,
                        320,
                        321,
                        322,
                        323,
                        326,
                        327,
                        328,
                        329,
                        330,
                        331,
                        332,
                        333,
                        334,
                        335,
                        336
                    ],
                    "('org.apache.commons.io#IOUtils', 'byteArray')": [
                        324,
                        325
                    ],
                    "('org.apache.commons.io#IOUtils', 'byteArray(int)')": [
                        337,
                        338
                    ],
                    "('org.apache.commons.io#IOUtils', 'contentEquals(InputStream,InputStream)')": [
                        780,
                        781
                    ],
                    "('org.apache.commons.io#IOUtils', 'copy(InputStream,OutputStream,int)')": [
                        951
                    ],
                    "('org.apache.commons.io#IOUtils', 'copyLarge(InputStream,OutputStream,long,long)')": [
                        1269
                    ],
                    "('org.apache.commons.io#IOUtils', 'readFully(InputStream,int)')": [
                        1756
                    ],
                    "('org.apache.commons.io#IOUtils', 'toByteArray(InputStream,int)')": [
                        2343
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#MagicNumberFileFilter', None)": [
                        174
                    ],
                    "('org.apache.commons.io.filefilter#MagicNumberFileFilter', 'accept(File)')": [
                        261
                    ]
                },
                "new": {
                    "(None, None)": [
                        31,
                        32
                    ],
                    "('org.apache.commons.io.filefilter#MagicNumberFileFilter', None)": [
                        176
                    ],
                    "('org.apache.commons.io.filefilter#MagicNumberFileFilter', 'accept(File)')": [
                        263
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ObservableInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ObservableInputStream', 'consume')": [
                        167
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ObservableInputStream', 'consume')": [
                        167
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', None)": [
                        93,
                        152
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', None)": [
                        93,
                        152
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/Tailer.java": {
                "old": {
                    "('org.apache.commons.io.input#Tailer', None)": [
                        262
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#Tailer', None)": [
                        262
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/XmlStreamReader.java": {
                "old": {
                    "('org.apache.commons.io.input#XmlStreamReader', 'getXmlProlog(InputStream,String)')": [
                        189
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#XmlStreamReader', 'getXmlProlog(InputStream,String)')": [
                        189
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/buffer/CircularBufferInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStream', 'fillBuffer')": [
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStream', 'fillBuffer')": [
                        81
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/buffer/CircularByteBuffer.java": {
                "old": {
                    "('org.apache.commons.io.input.buffer#CircularByteBuffer', None)": [
                        42
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input.buffer#CircularByteBuffer', None)": [
                        42
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#AbstractByteArrayOutputStream', 'needNewBuffer(int)')": [
                        106
                    ],
                    "('org.apache.commons.io.output#AbstractByteArrayOutputStream', 'toByteArrayImpl')": [
                        367
                    ]
                },
                "new": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.io.output#AbstractByteArrayOutputStream', 'needNewBuffer(int)')": [
                        107
                    ],
                    "('org.apache.commons.io.output#AbstractByteArrayOutputStream', 'toByteArrayImpl')": [
                        368
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/WriterOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#WriterOutputStream', 'write(int)')": [
                        248
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#WriterOutputStream', 'write(int)')": [
                        248
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/ObservableInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testNotificationCallbacks(int)')": [
                        257
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ObservableInputStreamTest', 'testNotificationCallbacks(int)')": [
                        257
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/compatibility/XmlStreamReader.java": {
                "old": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', None)": [
                        71,
                        72
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', 'doRawStream(InputStream)')": [
                        424
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', 'doHttpStream(InputStream,String,boolean)')": [
                        434
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', 'getXmlProlog(BufferedInputStream,String)')": [
                        672,
                        673,
                        675,
                        679
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', 'doRawStream(InputStream)')": [
                        422
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', 'doHttpStream(InputStream,String,boolean)')": [
                        432
                    ],
                    "('org.apache.commons.io.input.compatibility#XmlStreamReader', 'getXmlProlog(BufferedInputStream,String)')": [
                        670,
                        671,
                        673,
                        677
                    ]
                }
            }
        }
    }
}