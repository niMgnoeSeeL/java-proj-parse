{
    "e589115b6443b328c7863b34455ed76f9cec06cc": {
        "authored_data": "2020 Jun 11 15:01",
        "commit.message": "Simplify lambads.",
        "commit.author.name": "Gary Gregory",
        "pcid": "08a31960ce6afe0f407307b550eaabb078b4f5f0",
        "changes": {
            "src/test/java/org/apache/commons/io/function/IOFunctionTest.java": {
                "old": {
                    "('org.apache.commons.io.function#IOFunctionTest', 'testApply')": [
                        36
                    ],
                    "('org.apache.commons.io.function#IOFunctionTest', 'testComposeIOFunction')": [
                        58
                    ],
                    "('org.apache.commons.io.function#IOFunctionTest', 'testAndThenIOFunction')": [
                        102
                    ],
                    "('org.apache.commons.io.function#IOFunctionTest', 'testAndThenFunction')": [
                        113
                    ],
                    "('org.apache.commons.io.function#IOFunctionTest', 'testAndThenIOConsumer')": [
                        125
                    ],
                    "('org.apache.commons.io.function#IOFunctionTest', 'testAndThenConsumer')": [
                        141
                    ]
                },
                "new": {
                    "('org.apache.commons.io.function#IOFunctionTest', 'testApply')": [
                        36
                    ],
                    "('org.apache.commons.io.function#IOFunctionTest', 'testComposeIOFunction')": [
                        58
                    ],
                    "('org.apache.commons.io.function#IOFunctionTest', 'testAndThenIOFunction')": [
                        102
                    ],
                    "('org.apache.commons.io.function#IOFunctionTest', 'testAndThenFunction')": [
                        113
                    ],
                    "('org.apache.commons.io.function#IOFunctionTest', 'testAndThenIOConsumer')": [
                        125
                    ],
                    "('org.apache.commons.io.function#IOFunctionTest', 'testAndThenConsumer')": [
                        141
                    ]
                }
            }
        }
    },
    "bcc9f755ae8f2ec4552708f0b1f893e515720fe7": {
        "authored_data": "2020 Jun 11 12:43",
        "commit.message": "Better name to reflect that we are populating the map based on the JRE's\nStandardCharsets.",
        "commit.author.name": "Gary Gregory",
        "pcid": "7ad1704f25172754f1cdb3435189593c7d0d082c",
        "changes": {
            "src/main/java/org/apache/commons/io/Charsets.java": {
                "old": {
                    "(None, None)": [
                        54
                    ],
                    "('org.apache.commons.io#Charsets', None)": [
                        62,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.io#Charsets', 'requiredCharsets')": [
                        88
                    ]
                },
                "new": {
                    "('org.apache.commons.io#Charsets', None)": [
                        56,
                        62,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.io#Charsets', 'requiredCharsets')": [
                        88
                    ]
                }
            }
        }
    },
    "7ad1704f25172754f1cdb3435189593c7d0d082c": {
        "authored_data": "2020 Jun 11 12:40",
        "commit.message": "Add caching for required charsets (#120)\n\n* Add caching for required charsets\r\n",
        "commit.author.name": "Jerome Wolff",
        "pcid": "cd7787277b170d5f439df03850ca0c574566e539",
        "changes": {
            "src/main/java/org/apache/commons/io/Charsets.java": {
                "old": {
                    "('org.apache.commons.io#Charsets', 'requiredCharsets')": [
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83
                    ]
                },
                "new": {
                    "('org.apache.commons.io#Charsets', None)": [
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74
                    ],
                    "('org.apache.commons.io#Charsets', 'requiredCharsets')": [
                        88
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/CharsetsTestCase.java": {
                "old": {
                    "(None, None)": [
                        24
                    ]
                }
            }
        }
    },
    "401d17349e7ec52d8fa866c35efd24103f332c29": {
        "authored_data": "2020 May 31 12:11",
        "commit.message": "[IO-669] Fix code smells; fix typos (#115)\n\n* fix code smells\r\n\r\n* fix typos\r\n\r\n* l to L\r\n\r\n* use Arrays.fill\r\n\r\n* revert deleting boxing",
        "commit.author.name": "XenoAmess",
        "pcid": "0dc3422df450450281c82062856a69666bfad978",
        "changes": {
            "src/main/java/org/apache/commons/io/ByteOrderParser.java": {
                "old": {
                    "('org.apache.commons.io#ByteOrderParser', 'parseByteOrder(String)')": [
                        62
                    ]
                },
                "new": {
                    "('org.apache.commons.io#ByteOrderParser', 'parseByteOrder(String)')": [
                        62
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/IOIndexedException.java": {
                "old": {
                    "('org.apache.commons.io#IOIndexedException', None)": [
                        44
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOIndexedException', None)": [
                        44
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/IOUtils.java": {
                "old": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        885,
                        2896
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtils', None)": [
                        885,
                        2896
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/TaggedIOException.java": {
                "old": {
                    "('org.apache.commons.io#TaggedIOException', None)": [
                        52,
                        84
                    ]
                },
                "new": {
                    "('org.apache.commons.io#TaggedIOException', None)": [
                        52,
                        84
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/file/PathUtils.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtils', 'directoryAndFileContentEquals(Path,Path,LinkOption,OpenOption,FileVisitOption)')": [
                        344
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtils', 'directoryAndFileContentEquals(Path,Path,LinkOption,OpenOption,FileVisitOption)')": [
                        344
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#CharSequenceInputStream', 'reset')": [
                        255
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#CharSequenceInputStream', 'reset')": [
                        255
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/Tailer.java": {
                "old": {
                    "('org.apache.commons.io.input#Tailer', None)": [
                        133
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#Tailer', None)": [
                        133
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/TeeReader.java": {
                "old": {
                    "('org.apache.commons.io.input#TeeReader', None)": [
                        93
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#TeeReader', None)": [
                        93
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/AbstractByteArrayOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#AbstractByteArrayOutputStream', None)": [
                        342
                    ],
                    "('org.apache.commons.io.output#AbstractByteArrayOutputStream', 'toByteArrayImpl')": [
                        366
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#AbstractByteArrayOutputStream', None)": [
                        342
                    ],
                    "('org.apache.commons.io.output#AbstractByteArrayOutputStream', 'toByteArrayImpl')": [
                        366
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/DeferredFileOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#DeferredFileOutputStream', 'writeTo(OutputStream)')": [
                        311
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#DeferredFileOutputStream', 'writeTo(OutputStream)')": [
                        311
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/output/FilterCollectionWriter.java": {
                "old": {
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(char,int,int)')": [
                        192
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#FilterCollectionWriter', 'write(char,int,int)')": [
                        192
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/CleaningPathVisitorTest.java": {
                "old": {
                    "('org.apache.commons.io.file#CleaningPathVisitorTest', None)": [
                        116
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#CleaningPathVisitorTest', None)": [
                        116
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/CopyDirectoryVisitorTest.java": {
                "old": {
                    "('org.apache.commons.io.file#CopyDirectoryVisitorTest', None)": [
                        91
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#CopyDirectoryVisitorTest', None)": [
                        91
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/CountingPathVisitorTest.java": {
                "old": {
                    "('org.apache.commons.io.file#CountingPathVisitorTest', None)": [
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#CountingPathVisitorTest', None)": [
                        73
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/DeletingPathVisitorTest.java": {
                "old": {
                    "('org.apache.commons.io.file#DeletingPathVisitorTest', None)": [
                        121
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#DeletingPathVisitorTest', None)": [
                        121
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/PathUtilsCleanDirectoryTest.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtilsCleanDirectoryTest', None)": [
                        73
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtilsCleanDirectoryTest', None)": [
                        73
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/PathUtilsCountingTest.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtilsCountingTest', None)": [
                        70
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtilsCountingTest', None)": [
                        70
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/file/PathUtilsDeleteDirectoryTest.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtilsDeleteDirectoryTest', None)": [
                        74
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtilsDeleteDirectoryTest', None)": [
                        74
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/filefilter/FileFilterTestCase.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testFilterListNullParameters')": [
                        1409
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testFilterSetNullParameters')": [
                        1470
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testFilterListNullParameters')": [
                        1409
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testFilterSetNullParameters')": [
                        1470
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/BoundedReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#BoundedReaderTest', 'readMulti')": [
                        73,
                        74,
                        75
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'readMultiWithOffset')": [
                        89,
                        90,
                        91
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'readMulti')": [
                        74
                    ],
                    "('org.apache.commons.io.input#BoundedReaderTest', 'readMultiWithOffset')": [
                        88
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/NullInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#NullInputStreamTest', 'testRead')": [
                        46
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#NullInputStreamTest', 'testRead')": [
                        46
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/buffer/CircularBufferInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStreamTest', None)": [
                        26
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input.buffer#CircularBufferInputStreamTest', None)": [
                        26
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/FileWriterWithEncodingTest.java": {
                "old": {
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_constructor')": [
                        72
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_string_constructor')": [
                        77
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_Charset_constructor')": [
                        82
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_Charset_constructor')": [
                        87
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_CharsetEncoder_constructor')": [
                        93
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_CharsetEncoder_constructor')": [
                        99
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', None)": [
                        100,
                        101
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'succesfulRun(FileWriterWithEncoding)')": [
                        102
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_null_Charset_constructor')": [
                        251
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_constructor')": [
                        72
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_string_constructor')": [
                        77
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_Charset_constructor')": [
                        82
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_Charset_constructor')": [
                        87
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_CharsetEncoder_constructor')": [
                        93
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_string_CharsetEncoder_constructor')": [
                        99
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', None)": [
                        100,
                        101
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'successfulRun(FileWriterWithEncoding)')": [
                        102
                    ],
                    "('org.apache.commons.io.output#FileWriterWithEncodingTest', 'sameEncoding_null_Charset_constructor')": [
                        251
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/LockableFileWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#LockableFileWriterTest', 'testFileLocked')": [
                        61
                    ],
                    "('org.apache.commons.io.output#LockableFileWriterTest', 'testAlternateLockDir')": [
                        94
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#LockableFileWriterTest', 'testFileLocked')": [
                        61
                    ],
                    "('org.apache.commons.io.output#LockableFileWriterTest', 'testAlternateLockDir')": [
                        94
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/ProxyWriterTest.java": {
                "old": {
                    "('org.apache.commons.io.output#ProxyWriterTest', 'nullCharSequencec')": [
                        126
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ProxyWriterTest', 'nullCharSequence')": [
                        126
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/serialization/ValidatingObjectInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.serialization#ValidatingObjectInputStreamTest', None)": [
                        43
                    ]
                },
                "new": {
                    "('org.apache.commons.io.serialization#ValidatingObjectInputStreamTest', None)": [
                        43
                    ]
                }
            }
        }
    }
}