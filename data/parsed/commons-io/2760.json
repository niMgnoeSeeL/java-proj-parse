{
    "5b4212d98988e6798d1ced601a2036f7e98b70e0": {
        "authored_data": "2010 Oct 04 04:48",
        "commit.message": "Add @since tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004112 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "e8703179767272e33bc097c730606ee03476c44b",
        "changes": {
            "src/java/org/apache/commons/io/input/XmlStreamReader.java": {
                "new": {
                    "(None, None)": [
                        64
                    ]
                }
            },
            "src/java/org/apache/commons/io/input/XmlStreamReaderException.java": {
                "new": {
                    "(None, None)": [
                        33
                    ]
                }
            },
            "src/java/org/apache/commons/io/output/XmlStreamWriter.java": {
                "new": {
                    "(None, None)": [
                        39
                    ]
                }
            }
        }
    },
    "e8703179767272e33bc097c730606ee03476c44b": {
        "authored_data": "2010 Oct 04 04:35",
        "commit.message": "IO-162 Refactoring to remove the InputStream from XmlStreamReaderException\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004109 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "a2800c889834ee30b5e8c0971cd1efbfa980bf9a",
        "changes": {
            "src/java/org/apache/commons/io/input/XmlStreamReader.java": {
                "old": {
                    "('org.apache.commons.io.input#XmlStreamReader', None)": [
                        187,
                        234,
                        236,
                        237,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        250,
                        252,
                        324
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'doLenientDetection(String,XmlStreamReaderException)')": [
                        375,
                        383,
                        398
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'calculateRawEncoding(String,String,String,InputStream)')": [
                        541,
                        546,
                        558,
                        564
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'calculateHttpEncoding(String,String,String,String,String,InputStream,boolean)')": [
                        607,
                        615,
                        624
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#XmlStreamReader', None)": [
                        187,
                        234,
                        235,
                        236,
                        238,
                        240,
                        244,
                        246,
                        318,
                        366
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'doLenientDetection(String,InputStream,XmlStreamReaderException)')": [
                        370,
                        378,
                        393
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'calculateRawEncoding(String,String,String,InputStream)')": [
                        536,
                        541,
                        553,
                        559
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'calculateHttpEncoding(String,String,String,String,String,InputStream,boolean)')": [
                        602,
                        610,
                        619
                    ]
                }
            },
            "src/java/org/apache/commons/io/input/XmlStreamReaderException.java": {
                "old": {
                    "(None, None)": [
                        19,
                        148
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderException', None)": [
                        45,
                        46,
                        58,
                        61,
                        62,
                        77,
                        80,
                        87,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145
                    ],
                    "('org.apache.commons.io.input#XmlStreamReaderException', 'getInputStream')": [
                        146,
                        147
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#XmlStreamReaderException', None)": [
                        35,
                        36,
                        37,
                        60,
                        61,
                        78
                    ]
                }
            }
        }
    },
    "a2800c889834ee30b5e8c0971cd1efbfa980bf9a": {
        "authored_data": "2010 Oct 04 04:01",
        "commit.message": "IO-162 Javadocs improvements and add @Override tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004103 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "2fbbf47aaf12f3efc333caf06bb61d63472d610e",
        "changes": {
            "src/java/org/apache/commons/io/input/XmlStreamReader.java": {
                "old": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', None)": [
                        458,
                        504,
                        551,
                        565,
                        566,
                        585,
                        634,
                        644,
                        653,
                        656,
                        659,
                        662,
                        665
                    ]
                },
                "new": {
                    "(None, None)": [
                        63
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', None)": [
                        308,
                        367,
                        368,
                        369,
                        370,
                        371,
                        372,
                        373,
                        374,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        418,
                        419,
                        429,
                        434,
                        435,
                        436,
                        437,
                        438,
                        439,
                        440,
                        441,
                        453,
                        454,
                        455,
                        456,
                        457,
                        458,
                        459,
                        460,
                        461,
                        476,
                        477,
                        478,
                        479,
                        480,
                        481,
                        488,
                        489,
                        490,
                        491,
                        492,
                        493,
                        494,
                        501,
                        502,
                        503,
                        504,
                        505,
                        506,
                        507,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520,
                        521,
                        522,
                        523,
                        569,
                        570,
                        571,
                        572,
                        573,
                        574,
                        575,
                        576,
                        577,
                        578,
                        579,
                        580,
                        581,
                        582,
                        583,
                        630,
                        631,
                        632,
                        633,
                        634,
                        635,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        674,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680,
                        681,
                        730,
                        731,
                        732,
                        733,
                        734,
                        735,
                        736,
                        746,
                        747,
                        748,
                        749,
                        750,
                        751,
                        752,
                        761,
                        764,
                        767,
                        770,
                        773
                    ]
                }
            },
            "src/java/org/apache/commons/io/output/XmlStreamWriter.java": {
                "new": {
                    "('org.apache.commons.io.output#XmlStreamWriter', None)": [
                        51,
                        52,
                        53,
                        54,
                        55,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        71,
                        72,
                        73,
                        74,
                        75,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        107,
                        108,
                        109,
                        110,
                        111,
                        112,
                        113,
                        114,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172
                    ]
                }
            }
        }
    },
    "2fbbf47aaf12f3efc333caf06bb61d63472d610e": {
        "authored_data": "2010 Oct 04 03:04",
        "commit.message": "Replace BOM detection and XML guess logic with BOMInputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004092 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "5b75cf83b2db408f8228b26910a8d3d3633cd54f",
        "changes": {
            "src/java/org/apache/commons/io/input/XmlStreamReader.java": {
                "old": {
                    "('org.apache.commons.io.input#XmlStreamReader', 'doRawStream(InputStream,boolean)')": [
                        409,
                        410,
                        411
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'doHttpStream(InputStream,String,boolean)')": [
                        419,
                        422,
                        423
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', None)": [
                        559,
                        560,
                        586,
                        587,
                        588,
                        589,
                        615,
                        616
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'getBOMEncoding(BufferedInputStream)')": [
                        561,
                        562,
                        563,
                        564,
                        565,
                        566,
                        567,
                        568,
                        569,
                        570,
                        571,
                        572,
                        573,
                        574,
                        575,
                        576,
                        577,
                        578,
                        579,
                        580,
                        581,
                        582,
                        583,
                        584,
                        585
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'getXMLGuessEncoding(BufferedInputStream)')": [
                        590,
                        591,
                        592,
                        593,
                        594,
                        595,
                        596,
                        597,
                        598,
                        599,
                        600,
                        601,
                        602,
                        603,
                        604,
                        605,
                        606,
                        607,
                        608,
                        609,
                        610,
                        611,
                        612,
                        613,
                        614
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'getXmlProlog(BufferedInputStream,String)')": [
                        622
                    ]
                },
                "new": {
                    "(None, None)": [
                        34,
                        35
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', None)": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        438,
                        439,
                        444,
                        445
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'doRawStream(InputStream,boolean)')": [
                        417,
                        418,
                        419,
                        420
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'doHttpStream(InputStream,String,boolean)')": [
                        428,
                        429,
                        432,
                        433
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'createBomStream(InputStream)')": [
                        440,
                        441,
                        442,
                        443
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'createXmlStream(InputStream)')": [
                        446,
                        447,
                        448,
                        449
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'getXmlProlog(InputStream,String)')": [
                        586
                    ]
                }
            }
        }
    },
    "d43262058d2a3530c4d7305ea1a1e03d7001bd1d": {
        "authored_data": "2010 Oct 04 02:33",
        "commit.message": "IO-178 Fix Bug with firstBytes being consumed by getBOM()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004087 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "94d8c10b757a5f85012916255bb43d49f854a3c8",
        "changes": {
            "src/java/org/apache/commons/io/input/BOMInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#BOMInputStream', 'getBOM')": [
                        159,
                        160
                    ],
                    "('org.apache.commons.io.input#BOMInputStream', None)": [
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169,
                        170
                    ],
                    "('org.apache.commons.io.input#BOMInputStream', 'readFirstBytes')": [
                        171,
                        194
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#BOMInputStream', 'getBOM')": [
                        181
                    ],
                    "('org.apache.commons.io.input#BOMInputStream', None)": [
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190,
                        191
                    ],
                    "('org.apache.commons.io.input#BOMInputStream', 'readFirstBytes')": [
                        192,
                        193
                    ]
                }
            },
            "src/test/org/apache/commons/io/input/BOMInputStreamTest.java": {
                "new": {
                    "('org.apache.commons.io.input#BOMInputStreamTest', 'testGetBOMFirstThenReadInclude')": [
                        178,
                        179,
                        180,
                        181,
                        182,
                        183,
                        184,
                        185,
                        186,
                        187,
                        188,
                        189,
                        190
                    ],
                    "('org.apache.commons.io.input#BOMInputStreamTest', None)": [
                        191,
                        192
                    ]
                }
            }
        }
    },
    "94d8c10b757a5f85012916255bb43d49f854a3c8": {
        "authored_data": "2010 Oct 04 01:11",
        "commit.message": "IO-201 Fix inconsistent synchronization\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004079 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "79c97ab6a11d8c67914982bf2efdc82009de977b",
        "changes": {
            "src/java/org/apache/commons/io/input/CountingInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#CountingInputStream', 'skip(long)')": [
                        58
                    ],
                    "('org.apache.commons.io.input#CountingInputStream', 'afterRead(int)')": [
                        71
                    ],
                    "('org.apache.commons.io.input#CountingInputStream', 'getCount')": [
                        88
                    ],
                    "('org.apache.commons.io.input#CountingInputStream', 'resetCount')": [
                        106
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#CountingInputStream', 'skip(long)')": [
                        58
                    ],
                    "('org.apache.commons.io.input#CountingInputStream', 'afterRead(int)')": [
                        71
                    ],
                    "('org.apache.commons.io.input#CountingInputStream', 'getCount')": [
                        88
                    ],
                    "('org.apache.commons.io.input#CountingInputStream', 'resetCount')": [
                        106
                    ]
                }
            },
            "src/java/org/apache/commons/io/output/CountingOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#CountingOutputStream', 'beforeWrite(int)')": [
                        53
                    ],
                    "('org.apache.commons.io.output#CountingOutputStream', 'getCount')": [
                        68
                    ],
                    "('org.apache.commons.io.output#CountingOutputStream', 'resetCount')": [
                        86
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#CountingOutputStream', 'beforeWrite(int)')": [
                        53
                    ],
                    "('org.apache.commons.io.output#CountingOutputStream', 'getCount')": [
                        68
                    ],
                    "('org.apache.commons.io.output#CountingOutputStream', 'resetCount')": [
                        86
                    ]
                }
            }
        }
    },
    "79c97ab6a11d8c67914982bf2efdc82009de977b": {
        "authored_data": "2010 Oct 04 00:58",
        "commit.message": "Fix some issues identified by FindBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004077 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "218a9e687dd42de2d2bc43eadec6f02ab685f410",
        "changes": {
            "src/java/org/apache/commons/io/FilenameUtils.java": {
                "old": {
                    "('org.apache.commons.io#FilenameUtils', 'equals(String,String,boolean,IOCase)')": [
                        1084
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FilenameUtils', 'equals(String,String,boolean,IOCase)')": [
                        1084
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/MagicNumberFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#MagicNumberFileFilter', None)": [
                        212
                    ],
                    "('org.apache.commons.io.filefilter#MagicNumberFileFilter', 'accept(File)')": [
                        240
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#MagicNumberFileFilter', None)": [
                        212,
                        213
                    ],
                    "('org.apache.commons.io.filefilter#MagicNumberFileFilter', 'accept(File)')": [
                        241,
                        242,
                        243,
                        244
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/NameFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#NameFileFilter', None)": [
                        106
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#NameFileFilter', None)": [
                        106,
                        107
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#PrefixFileFilter', None)": [
                        111
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#PrefixFileFilter', None)": [
                        111,
                        112
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#SuffixFileFilter', None)": [
                        112
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#SuffixFileFilter', None)": [
                        112,
                        113
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#WildcardFileFilter', None)": [
                        111
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#WildcardFileFilter', None)": [
                        111,
                        112
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/WildcardFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#WildcardFilter', None)": [
                        82
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#WildcardFilter', None)": [
                        82,
                        83
                    ]
                }
            },
            "src/test/org/apache/commons/io/filefilter/FileFilterTestCase.java": {
                "new": {
                    "('org.apache.commons.io.filefilter#FileFilterTestCase', 'testMagicNumberFileFilterBytes')": [
                        945,
                        955,
                        961,
                        963,
                        969
                    ]
                }
            }
        }
    },
    "218a9e687dd42de2d2bc43eadec6f02ab685f410": {
        "authored_data": "2010 Oct 04 00:53",
        "commit.message": "Minor Javadoc correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@1004076 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "ea84049a791cfe83d9fb93e0cdea74dd362b0692",
        "changes": {
            "src/java/org/apache/commons/io/ByteOrderMark.java": {
                "old": {
                    "(None, None)": [
                        27
                    ]
                },
                "new": {
                    "(None, None)": [
                        27
                    ]
                }
            }
        }
    }
}