{
    "68a73b54d6fd08ea2951ea1911e035a2390119bc": {
        "authored_data": "2018 Mar 06 21:00",
        "commit.message": "Redundant superinterface Serializable for the type IOCase, already\ndefined by Enum<IOCase>.",
        "commit.author.name": "Gary Gregory",
        "pcid": "91a94d9f47b2bc928eaaf83d7c9dd06c235a2824",
        "changes": {
            "src/main/java/org/apache/commons/io/IOCase.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20
                    ]
                }
            }
        }
    },
    "91a94d9f47b2bc928eaaf83d7c9dd06c235a2824": {
        "authored_data": "2018 Mar 06 20:56",
        "commit.message": "Unnecessary semicolon.",
        "commit.author.name": "Gary Gregory",
        "pcid": "c329443d7d50b4d891bc8229988b838642a132cf",
        "changes": {
            "src/main/java/org/apache/commons/io/output/WriterOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#WriterOutputStream', 'checkIbmJdkWithBrokenUTF16(Charset)')": [
                        344
                    ]
                },
                "new": {
                    "(None, None)": [
                        344
                    ]
                }
            }
        }
    },
    "c329443d7d50b4d891bc8229988b838642a132cf": {
        "authored_data": "2018 Mar 06 20:54",
        "commit.message": "Add missing Javadoc tag.",
        "commit.author.name": "Gary Gregory",
        "pcid": "48f7e179e4c5f4e59afdf0bfb4ec5228692e00ec",
        "changes": {
            "src/main/java/org/apache/commons/io/output/AppendableOutputStream.java": {
                "new": {
                    "(None, None)": [
                        32
                    ]
                }
            }
        }
    },
    "48f7e179e4c5f4e59afdf0bfb4ec5228692e00ec": {
        "authored_data": "2018 Mar 06 20:52",
        "commit.message": "Redundant superinterface Serializable for the type IOCase, already\ndefined by Enum<IOCase>.",
        "commit.author.name": "Gary Gregory",
        "pcid": "8993c0060e4eb2d5bca20e3529a829a9dd90efdf",
        "changes": {
            "src/main/java/org/apache/commons/io/IOCase.java": {
                "old": {
                    "(None, None)": [
                        36
                    ]
                },
                "new": {
                    "(None, None)": [
                        36
                    ]
                }
            }
        }
    },
    "8993c0060e4eb2d5bca20e3529a829a9dd90efdf": {
        "authored_data": "2018 Mar 06 17:00",
        "commit.message": "Don't need to nest else clause. Refactor magic numbers into constants.",
        "commit.author.name": "Gary Gregory",
        "pcid": "f03149e07dee90b23369d1cdb7f15c142df5e31d",
        "changes": {
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', 'toFile(URL)')": [
                        826,
                        827,
                        828,
                        829
                    ],
                    "('org.apache.commons.io#FileUtils', None)": [
                        830,
                        2547,
                        2580,
                        2643,
                        2699
                    ],
                    "('org.apache.commons.io#FileUtils', 'sizeOf(File)')": [
                        2545,
                        2546
                    ],
                    "('org.apache.commons.io#FileUtils', 'sizeOfAsBigInteger(File)')": [
                        2578,
                        2579
                    ],
                    "('org.apache.commons.io#FileUtils', 'sizeOf0(File)')": [
                        2641,
                        2642
                    ],
                    "('org.apache.commons.io#FileUtils', 'sizeOfBig0(File)')": [
                        2697,
                        2698
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', 'toFile(URL)')": [
                        826,
                        827,
                        828,
                        829
                    ],
                    "('org.apache.commons.io#FileUtils', 'sizeOf(File)')": [
                        2544,
                        2545
                    ],
                    "('org.apache.commons.io#FileUtils', 'sizeOfAsBigInteger(File)')": [
                        2576,
                        2577
                    ],
                    "('org.apache.commons.io#FileUtils', 'sizeOf0(File)')": [
                        2638,
                        2639
                    ],
                    "('org.apache.commons.io#FileUtils', 'sizeOfBig0(File)')": [
                        2693,
                        2694
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java": {
                "old": {
                    "('org.apache.commons.io.comparator#DirectoryFileComparator', 'getType(File)')": [
                        75,
                        76,
                        77,
                        78
                    ],
                    "(None, None)": [
                        79
                    ]
                },
                "new": {
                    "('org.apache.commons.io.comparator#DirectoryFileComparator', None)": [
                        47,
                        48,
                        49,
                        50
                    ],
                    "('org.apache.commons.io.comparator#DirectoryFileComparator', 'getType(File)')": [
                        79
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/DelegateFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#DelegateFileFilter', 'accept(File)')": [
                        77,
                        78
                    ],
                    "('org.apache.commons.io.filefilter#DelegateFileFilter', 'accept(File,String)')": [
                        93,
                        94
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#DelegateFileFilter', 'accept(File)')": [
                        78
                    ],
                    "('org.apache.commons.io.filefilter#DelegateFileFilter', 'accept(File,String)')": [
                        93
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/EmptyFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#EmptyFileFilter', 'accept(File)')": [
                        82,
                        83
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#EmptyFileFilter', 'accept(File)')": [
                        83
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'makeCVSAware(IOFileFilter)')": [
                        741,
                        742,
                        743,
                        744
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', None)": [
                        745,
                        762
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'makeSVNAware(IOFileFilter)')": [
                        758,
                        759,
                        760,
                        761
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'makeCVSAware(IOFileFilter)')": [
                        741
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'makeSVNAware(IOFileFilter)')": [
                        754
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/CharSequenceReader.java": {
                "old": {
                    "('org.apache.commons.io.input#CharSequenceReader', 'read')": [
                        87,
                        88
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#CharSequenceReader', 'read')": [
                        88
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/DemuxInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#DemuxInputStream', 'read')": [
                        78,
                        79,
                        80
                    ],
                    "(None, None)": [
                        81
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#DemuxInputStream', 'read')": [
                        78
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java": {
                "old": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', None)": [
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ReversedLinesFileReader', None)": [
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/UnixLineEndingInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#UnixLineEndingInputStream', 'read')": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        86,
                        87,
                        88,
                        90
                    ],
                    "('org.apache.commons.io.input#UnixLineEndingInputStream', None)": [
                        91
                    ],
                    "('org.apache.commons.io.input#UnixLineEndingInputStream', 'eofGame(boolean)')": [
                        106,
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#UnixLineEndingInputStream', 'read')": [
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        85,
                        86,
                        87,
                        89
                    ],
                    "('org.apache.commons.io.input#UnixLineEndingInputStream', 'eofGame(boolean)')": [
                        105
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/WindowsLineEndingInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#WindowsLineEndingInputStream', 'eofGame')": [
                        112,
                        113
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#WindowsLineEndingInputStream', 'eofGame')": [
                        113
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/XmlStreamReader.java": {
                "old": {
                    "('org.apache.commons.io.input#XmlStreamReader', 'doRawStream(BOMInputStream,BOMInputStream,boolean)')": [
                        433,
                        434
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', None)": [
                        435,
                        463
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'doHttpStream(BOMInputStream,BOMInputStream,String,boolean)')": [
                        461,
                        462
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'calculateHttpEncoding(String,String,String,String,boolean)')": [
                        604,
                        605,
                        606
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'getXmlProlog(InputStream,String)')": [
                        725,
                        726,
                        727,
                        728
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#XmlStreamReader', 'doRawStream(BOMInputStream,BOMInputStream,boolean)')": [
                        433,
                        434
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'doHttpStream(BOMInputStream,BOMInputStream,String,boolean)')": [
                        460,
                        461
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'calculateHttpEncoding(String,String,String,String,boolean)')": [
                        602,
                        603
                    ],
                    "('org.apache.commons.io.input#XmlStreamReader', 'getXmlProlog(InputStream,String)')": [
                        723,
                        724,
                        725
                    ]
                }
            }
        }
    },
    "f03149e07dee90b23369d1cdb7f15c142df5e31d": {
        "authored_data": "2018 Mar 06 16:51",
        "commit.message": "Refactor magic string into a constant.",
        "commit.author.name": "Gary Gregory",
        "pcid": "8f957f527b9048f51aad91b544bed35c48bcf3a9",
        "changes": {
            "src/main/java/org/apache/commons/io/FilenameUtils.java": {
                "old": {
                    "('org.apache.commons.io#FilenameUtils', 'doNormalize(String,char,boolean)')": [
                        433
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'doGetPath(String,int)')": [
                        862
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'getExtension(String)')": [
                        1059
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FilenameUtils', None)": [
                        84,
                        85
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'doNormalize(String,char,boolean)')": [
                        435
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'doGetPath(String,int)')": [
                        864
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'getExtension(String)')": [
                        1061
                    ]
                }
            }
        }
    },
    "8f957f527b9048f51aad91b544bed35c48bcf3a9": {
        "authored_data": "2018 Mar 06 16:46",
        "commit.message": "Simplify.",
        "commit.author.name": "Gary Gregory",
        "pcid": "0f98e790a43b17ae1bb60d264931fb4f13300762",
        "changes": {
            "src/main/java/org/apache/commons/io/FilenameUtils.java": {
                "old": {
                    "('org.apache.commons.io#FilenameUtils', 'separatorsToSystem(String)')": [
                        586,
                        587,
                        588,
                        589
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FilenameUtils', 'separatorsToSystem(String)')": [
                        586
                    ]
                }
            }
        }
    },
    "0f98e790a43b17ae1bb60d264931fb4f13300762": {
        "authored_data": "2018 Mar 06 16:45",
        "commit.message": "Don't need to nest else clause.",
        "commit.author.name": "Gary Gregory",
        "pcid": "a653a4487774f57a7aff2c9dc1fe40b9b221cb6b",
        "changes": {
            "src/main/java/org/apache/commons/io/FilenameUtils.java": {
                "old": {
                    "('org.apache.commons.io#FilenameUtils', 'concat(String,String)')": [
                        503,
                        504
                    ],
                    "('org.apache.commons.io#FilenameUtils', None)": [
                        505,
                        591,
                        685,
                        1069,
                        1087,
                        1088,
                        1120
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'separatorsToSystem(String)')": [
                        589,
                        590
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'getPrefixLength(String)')": [
                        651,
                        652,
                        653,
                        654,
                        655,
                        656,
                        657,
                        658,
                        659,
                        660,
                        661,
                        662,
                        663,
                        664,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671,
                        672,
                        673,
                        674,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680,
                        681,
                        682,
                        683,
                        684
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'doGetFullPath(String,boolean)')": [
                        952,
                        953,
                        954
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'getExtension(String)')": [
                        1067,
                        1068
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'getAdsCriticalOffset(String)')": [
                        1079,
                        1080,
                        1081,
                        1082,
                        1083,
                        1084,
                        1085,
                        1086
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'removeExtension(String)')": [
                        1118,
                        1119
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FilenameUtils', 'concat(String,String)')": [
                        503,
                        504
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'separatorsToSystem(String)')": [
                        588,
                        589
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'getPrefixLength(String)')": [
                        648,
                        649,
                        650,
                        651,
                        652,
                        653,
                        654,
                        655,
                        656,
                        657,
                        658,
                        659,
                        660,
                        661,
                        662,
                        663,
                        664,
                        665,
                        666,
                        667,
                        668,
                        669,
                        670,
                        671,
                        672,
                        673,
                        674,
                        675,
                        676,
                        677,
                        678,
                        679,
                        680,
                        682
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'doGetFullPath(String,boolean)')": [
                        949,
                        950
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'getExtension(String)')": [
                        1063,
                        1064
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'getAdsCriticalOffset(String)')": [
                        1074,
                        1075,
                        1076,
                        1077,
                        1078,
                        1079,
                        1080
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'removeExtension(String)')": [
                        1110,
                        1111
                    ]
                }
            }
        }
    },
    "a653a4487774f57a7aff2c9dc1fe40b9b221cb6b": {
        "authored_data": "2018 Mar 06 16:43",
        "commit.message": "Javadoc fixes on Java 8.",
        "commit.author.name": "Gary Gregory",
        "pcid": "9e405ca54138b63a4daff58d14d0527fef1e8e66",
        "changes": {
            "src/main/java/org/apache/commons/io/FilenameUtils.java": {
                "old": {
                    "('org.apache.commons.io#FilenameUtils', None)": [
                        729,
                        1057
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FilenameUtils', None)": [
                        729,
                        1057
                    ]
                }
            }
        }
    },
    "9e405ca54138b63a4daff58d14d0527fef1e8e66": {
        "authored_data": "2018 Mar 06 16:33",
        "commit.message": "Better ivar and param names.",
        "commit.author.name": "Gary Gregory",
        "pcid": "467386105ad855e793a09632142c00cd01c5dd10",
        "changes": {
            "src/main/java/org/apache/commons/io/input/Tailer.java": {
                "old": {
                    "('org.apache.commons.io.input#Tailer', None)": [
                        144,
                        244,
                        251,
                        264
                    ],
                    "('org.apache.commons.io.input#Tailer', 'readLines(RandomAccessFile)')": [
                        524,
                        537
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#Tailer', None)": [
                        144,
                        244,
                        251,
                        264
                    ],
                    "('org.apache.commons.io.input#Tailer', 'readLines(RandomAccessFile)')": [
                        524,
                        537
                    ]
                }
            }
        }
    }
}