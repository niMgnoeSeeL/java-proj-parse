{
    "ae8a261d47bec45e42904fd3e761860bab1e404c": {
        "authored_data": "2008 Feb 06 21:24",
        "commit.message": "IO-155 Use nio to copy files - based on a patch from Nicolas de Loof\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619156 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "f459805b3917cd01445f6f37d438484da8ae6bed",
        "changes": {
            "src/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', 'doCopyFile(File,File,boolean)')": [
                        669,
                        671,
                        673
                    ]
                },
                "new": {
                    "(None, None)": [
                        28
                    ],
                    "('org.apache.commons.io#FileUtils', 'doCopyFile(File,File,boolean)')": [
                        670,
                        672,
                        674
                    ]
                }
            },
            "src/java/org/apache/commons/io/IOUtils.java": {
                "new": {
                    "(None, None)": [
                        33
                    ],
                    "('org.apache.commons.io#IOUtils', None)": [
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168
                    ],
                    "('org.apache.commons.io#IOUtils', 'closeQuietly(Channel)')": [
                        158,
                        159,
                        160,
                        161
                    ]
                }
            }
        }
    },
    "f459805b3917cd01445f6f37d438484da8ae6bed": {
        "authored_data": "2008 Feb 06 20:23",
        "commit.message": "Javadoc corrections\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619144 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "1b497f6ceea71f03d4529b29af901f286ef9b44f",
        "changes": {
            "src/java/org/apache/commons/io/output/NullWriter.java": {
                "old": {
                    "('org.apache.commons.io.output#NullWriter', None)": [
                        45,
                        57,
                        67
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#NullWriter', None)": [
                        45,
                        46,
                        58,
                        59,
                        69,
                        70
                    ]
                }
            },
            "src/java/org/apache/commons/io/output/ProxyWriter.java": {
                "old": {
                    "('org.apache.commons.io.output#ProxyWriter', None)": [
                        49,
                        61,
                        71
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ProxyWriter', None)": [
                        49,
                        50,
                        51,
                        63,
                        64,
                        65,
                        75,
                        76,
                        77
                    ]
                }
            }
        }
    },
    "e3631718822db05a02cb7b086d6f28a0fae15f51": {
        "authored_data": "2008 Feb 06 20:09",
        "commit.message": "IO-140 JDK 1.5 changes: Add new JDK 1.5 methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619135 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "0b6d123bdba1acefb79fc22b4d7cb8aab20b08ed",
        "changes": {
            "src/java/org/apache/commons/io/input/ProxyReader.java": {
                "new": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.io.input#ProxyReader', None)": [
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        88,
                        89,
                        90
                    ],
                    "('org.apache.commons.io.input#ProxyReader', 'read(CharBuffer)')": [
                        86,
                        87
                    ]
                }
            },
            "src/java/org/apache/commons/io/output/NullWriter.java": {
                "new": {
                    "('org.apache.commons.io.output#NullWriter', None)": [
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68
                    ],
                    "('org.apache.commons.io.output#NullWriter', 'append(char)')": [
                        47,
                        48,
                        49
                    ],
                    "('org.apache.commons.io.output#NullWriter', 'append(CharSequence,int,int)')": [
                        59,
                        60,
                        61
                    ],
                    "('org.apache.commons.io.output#NullWriter', 'append(CharSequence)')": [
                        69,
                        70,
                        71
                    ]
                }
            },
            "src/java/org/apache/commons/io/output/ProxyWriter.java": {
                "new": {
                    "('org.apache.commons.io.output#ProxyWriter', None)": [
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72
                    ],
                    "('org.apache.commons.io.output#ProxyWriter', 'append(char)')": [
                        51,
                        52,
                        53
                    ],
                    "('org.apache.commons.io.output#ProxyWriter', 'append(CharSequence,int,int)')": [
                        63,
                        64,
                        65
                    ],
                    "('org.apache.commons.io.output#ProxyWriter', 'append(CharSequence)')": [
                        73,
                        74,
                        75
                    ]
                }
            }
        }
    },
    "6d6a73a689ce734d094f71723752cde23a1d9259": {
        "authored_data": "2008 Feb 06 19:25",
        "commit.message": "IO-140 JDK 1.5 changes: Use StringBuilder (not-sync) instead of StringBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619112 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "a74a5a0c6ff41a4ca0a08caf740ebce1dc3c6d10",
        "changes": {
            "src/java/org/apache/commons/io/FileSystemUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileSystemUtils', 'parseDir(String,String)')": [
                        286
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileSystemUtils', 'parseDir(String,String)')": [
                        286
                    ]
                }
            },
            "src/java/org/apache/commons/io/FilenameUtils.java": {
                "old": {
                    "('org.apache.commons.io#FilenameUtils', 'splitOnTokens(String)')": [
                        1236
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FilenameUtils', 'splitOnTokens(String)')": [
                        1236
                    ]
                }
            },
            "src/java/org/apache/commons/io/HexDump.java": {
                "old": {
                    "('org.apache.commons.io#HexDump', 'dump(byte,long,OutputStream,int)')": [
                        73
                    ],
                    "('org.apache.commons.io#HexDump', None)": [
                        121,
                        123,
                        125,
                        136,
                        138,
                        140
                    ],
                    "('org.apache.commons.io#HexDump', 'dump(StringBuffer,long)')": [
                        127
                    ],
                    "('org.apache.commons.io#HexDump', 'dump(StringBuffer,byte)')": [
                        142
                    ]
                },
                "new": {
                    "('org.apache.commons.io#HexDump', 'dump(byte,long,OutputStream,int)')": [
                        73
                    ],
                    "('org.apache.commons.io#HexDump', None)": [
                        121,
                        123,
                        125,
                        136,
                        138,
                        140
                    ],
                    "('org.apache.commons.io#HexDump', 'dump(StringBuilder,long)')": [
                        127
                    ],
                    "('org.apache.commons.io#HexDump', 'dump(StringBuilder,byte)')": [
                        142
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/AndFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#AndFileFilter', 'toString')": [
                        148
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#AndFileFilter', 'toString')": [
                        148
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/NameFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#NameFileFilter', 'toString')": [
                        176
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#NameFileFilter', 'toString')": [
                        176
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/OrFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#OrFileFilter', 'toString')": [
                        142
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#OrFileFilter', 'toString')": [
                        142
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#PrefixFileFilter', 'toString')": [
                        182
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#PrefixFileFilter', 'toString')": [
                        182
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#SuffixFileFilter', 'toString')": [
                        183
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#SuffixFileFilter', 'toString')": [
                        183
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#WildcardFileFilter', 'toString')": [
                        181
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#WildcardFileFilter', 'toString')": [
                        181
                    ]
                }
            }
        }
    },
    "a74a5a0c6ff41a4ca0a08caf740ebce1dc3c6d10": {
        "authored_data": "2008 Feb 06 19:01",
        "commit.message": "IO-140 JDK 1.5 changes: Use generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619103 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "a7628b03ac47459a47f2c340bb474afe50ea0a31",
        "changes": {
            "src/java/org/apache/commons/io/FileCleaningTracker.java": {
                "old": {
                    "('org.apache.commons.io#FileCleaningTracker', None)": [
                        51
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileCleaningTracker', None)": [
                        51
                    ]
                }
            },
            "src/java/org/apache/commons/io/FileSystemUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileSystemUtils', 'freeSpaceUnix(String,boolean,boolean)')": [
                        323,
                        330
                    ],
                    "('org.apache.commons.io#FileSystemUtils', 'performCommand(String,int)')": [
                        388,
                        397
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileSystemUtils', 'freeSpaceUnix(String,boolean,boolean)')": [
                        323,
                        330
                    ],
                    "('org.apache.commons.io#FileSystemUtils', 'performCommand(String,int)')": [
                        388,
                        397
                    ]
                }
            },
            "src/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', 'convertFileCollectionToFileArray(Collection)')": [
                        238,
                        239
                    ],
                    "('org.apache.commons.io#FileUtils', 'innerListFiles(Collection,File,IOFileFilter)')": [
                        251
                    ],
                    "('org.apache.commons.io#FileUtils', 'listFiles(File,IOFileFilter,IOFileFilter)')": [
                        290,
                        314
                    ],
                    "('org.apache.commons.io#FileUtils', 'copyDirectory(File,File,FileFilter,boolean)')": [
                        876,
                        880
                    ],
                    "('org.apache.commons.io#FileUtils', 'doCopyDirectory(File,File,FileFilter,boolean,List)')": [
                        902
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', 'convertFileCollectionToFileArray(Collection)')": [
                        238,
                        239
                    ],
                    "('org.apache.commons.io#FileUtils', 'innerListFiles(Collection,File,IOFileFilter)')": [
                        251
                    ],
                    "('org.apache.commons.io#FileUtils', 'listFiles(File,IOFileFilter,IOFileFilter)')": [
                        290,
                        314
                    ],
                    "('org.apache.commons.io#FileUtils', 'copyDirectory(File,File,FileFilter,boolean)')": [
                        876,
                        880
                    ],
                    "('org.apache.commons.io#FileUtils', 'doCopyDirectory(File,File,FileFilter,boolean,List)')": [
                        902
                    ]
                }
            },
            "src/java/org/apache/commons/io/FilenameUtils.java": {
                "old": {
                    "('org.apache.commons.io#FilenameUtils', 'wildcardMatch(String,String,IOCase)')": [
                        1155,
                        1160
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'splitOnTokens(String)')": [
                        1235,
                        1257
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FilenameUtils', 'wildcardMatch(String,String,IOCase)')": [
                        1155,
                        1160
                    ],
                    "('org.apache.commons.io#FilenameUtils', 'splitOnTokens(String)')": [
                        1235,
                        1257
                    ]
                }
            },
            "src/java/org/apache/commons/io/IOUtils.java": {
                "old": {
                    "('org.apache.commons.io#IOUtils', 'readLines(Reader)')": [
                        499,
                        501
                    ]
                },
                "new": {
                    "('org.apache.commons.io#IOUtils', 'readLines(Reader)')": [
                        499,
                        501
                    ]
                }
            },
            "src/java/org/apache/commons/io/LineIterator.java": {
                "old": {
                    "('org.apache.commons.io#LineIterator', None)": [
                        53
                    ],
                    "('org.apache.commons.io#LineIterator', 'next')": [
                        128
                    ]
                },
                "new": {
                    "('org.apache.commons.io#LineIterator', None)": [
                        53
                    ],
                    "('org.apache.commons.io#LineIterator', 'next')": [
                        128
                    ]
                }
            },
            "src/java/org/apache/commons/io/comparator/DefaultFileComparator.java": {
                "old": {
                    "('org.apache.commons.io.comparator#DefaultFileComparator', None)": [
                        47,
                        50,
                        53,
                        58,
                        59
                    ],
                    "('org.apache.commons.io.comparator#DefaultFileComparator', 'compare(Object,Object)')": [
                        63,
                        64,
                        65
                    ]
                },
                "new": {
                    "('org.apache.commons.io.comparator#DefaultFileComparator', None)": [
                        47,
                        50,
                        53,
                        58,
                        59
                    ],
                    "('org.apache.commons.io.comparator#DefaultFileComparator', 'compare(File,File)')": [
                        63
                    ]
                }
            },
            "src/java/org/apache/commons/io/comparator/ExtensionFileComparator.java": {
                "old": {
                    "('org.apache.commons.io.comparator#ExtensionFileComparator', None)": [
                        54,
                        57,
                        60,
                        63,
                        66,
                        70,
                        73,
                        97,
                        98
                    ],
                    "('org.apache.commons.io.comparator#ExtensionFileComparator', 'compare(Object,Object)')": [
                        105,
                        106,
                        107
                    ]
                },
                "new": {
                    "('org.apache.commons.io.comparator#ExtensionFileComparator', None)": [
                        54,
                        57,
                        60,
                        63,
                        66,
                        70,
                        73,
                        97,
                        98
                    ],
                    "('org.apache.commons.io.comparator#ExtensionFileComparator', 'compare(File,File)')": [
                        105
                    ]
                }
            },
            "src/java/org/apache/commons/io/comparator/LastModifiedFileComparator.java": {
                "old": {
                    "('org.apache.commons.io.comparator#LastModifiedFileComparator', None)": [
                        48,
                        51,
                        54,
                        59,
                        60
                    ],
                    "('org.apache.commons.io.comparator#LastModifiedFileComparator', 'compare(Object,Object)')": [
                        67,
                        68,
                        69
                    ]
                },
                "new": {
                    "('org.apache.commons.io.comparator#LastModifiedFileComparator', None)": [
                        48,
                        51,
                        54,
                        59,
                        60
                    ],
                    "('org.apache.commons.io.comparator#LastModifiedFileComparator', 'compare(File,File)')": [
                        67
                    ]
                }
            },
            "src/java/org/apache/commons/io/comparator/NameFileComparator.java": {
                "old": {
                    "('org.apache.commons.io.comparator#NameFileComparator', None)": [
                        52,
                        55,
                        58,
                        61,
                        64,
                        67,
                        70,
                        94,
                        95
                    ],
                    "('org.apache.commons.io.comparator#NameFileComparator', 'compare(Object,Object)')": [
                        101,
                        102,
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.io.comparator#NameFileComparator', None)": [
                        52,
                        55,
                        58,
                        61,
                        64,
                        67,
                        70,
                        94,
                        95
                    ],
                    "('org.apache.commons.io.comparator#NameFileComparator', 'compare(File,File)')": [
                        101
                    ]
                }
            },
            "src/java/org/apache/commons/io/comparator/PathFileComparator.java": {
                "old": {
                    "('org.apache.commons.io.comparator#PathFileComparator', None)": [
                        52,
                        55,
                        58,
                        61,
                        64,
                        67,
                        70,
                        94,
                        95
                    ],
                    "('org.apache.commons.io.comparator#PathFileComparator', 'compare(Object,Object)')": [
                        102,
                        103,
                        104
                    ]
                },
                "new": {
                    "('org.apache.commons.io.comparator#PathFileComparator', None)": [
                        52,
                        55,
                        58,
                        61,
                        64,
                        67,
                        70,
                        94,
                        95
                    ],
                    "('org.apache.commons.io.comparator#PathFileComparator', 'compare(File,File)')": [
                        102
                    ]
                }
            },
            "src/java/org/apache/commons/io/comparator/ReverseComparator.java": {
                "old": {
                    "('org.apache.commons.io.comparator#ReverseComparator', None)": [
                        29,
                        31,
                        38,
                        48,
                        49
                    ],
                    "('org.apache.commons.io.comparator#ReverseComparator', 'compare(Object,Object)')": [
                        53,
                        54
                    ]
                },
                "new": {
                    "(None, None)": [
                        21
                    ],
                    "('org.apache.commons.io.comparator#ReverseComparator', None)": [
                        30,
                        32,
                        39,
                        49,
                        50
                    ],
                    "('org.apache.commons.io.comparator#ReverseComparator', 'compare(File,File)')": [
                        54,
                        55
                    ]
                }
            },
            "src/java/org/apache/commons/io/comparator/SizeFileComparator.java": {
                "old": {
                    "('org.apache.commons.io.comparator#SizeFileComparator', None)": [
                        52,
                        55,
                        58,
                        64,
                        70,
                        100,
                        101
                    ],
                    "('org.apache.commons.io.comparator#SizeFileComparator', 'compare(Object,Object)')": [
                        108,
                        109,
                        110
                    ]
                },
                "new": {
                    "('org.apache.commons.io.comparator#SizeFileComparator', None)": [
                        52,
                        55,
                        58,
                        64,
                        70,
                        100,
                        101
                    ],
                    "('org.apache.commons.io.comparator#SizeFileComparator', 'compare(File,File)')": [
                        108
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/AndFileFilter.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.io.filefilter#AndFileFilter', None)": [
                        43,
                        51,
                        61,
                        63,
                        65,
                        80
                    ],
                    "('org.apache.commons.io.filefilter#AndFileFilter', 'getFileFilters')": [
                        95
                    ],
                    "('org.apache.commons.io.filefilter#AndFileFilter', 'setFileFilters(List)')": [
                        109,
                        110
                    ],
                    "('org.apache.commons.io.filefilter#AndFileFilter', 'accept(File)')": [
                        120,
                        121
                    ],
                    "('org.apache.commons.io.filefilter#AndFileFilter', 'accept(File,String)')": [
                        136,
                        137
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#AndFileFilter', None)": [
                        42,
                        50,
                        60,
                        62,
                        64,
                        79
                    ],
                    "('org.apache.commons.io.filefilter#AndFileFilter', 'getFileFilters')": [
                        94
                    ],
                    "('org.apache.commons.io.filefilter#AndFileFilter', 'setFileFilters(List)')": [
                        108,
                        109
                    ],
                    "('org.apache.commons.io.filefilter#AndFileFilter', 'accept(File)')": [
                        119
                    ],
                    "('org.apache.commons.io.filefilter#AndFileFilter', 'accept(File,String)')": [
                        134
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/ConditionalFileFilter.java": {
                "old": {
                    "(None, None)": [
                        46,
                        65
                    ]
                },
                "new": {
                    "(None, None)": [
                        46,
                        65
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/NameFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#NameFileFilter', None)": [
                        117,
                        129,
                        133
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#NameFileFilter', None)": [
                        117,
                        129,
                        133
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/OrFileFilter.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.io.filefilter#OrFileFilter', None)": [
                        43,
                        51,
                        61,
                        63,
                        65,
                        80
                    ],
                    "('org.apache.commons.io.filefilter#OrFileFilter', 'getFileFilters')": [
                        95
                    ],
                    "('org.apache.commons.io.filefilter#OrFileFilter', 'setFileFilters(List)')": [
                        109
                    ],
                    "('org.apache.commons.io.filefilter#OrFileFilter', 'accept(File)')": [
                        117,
                        118
                    ],
                    "('org.apache.commons.io.filefilter#OrFileFilter', 'accept(File,String)')": [
                        130,
                        131
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#OrFileFilter', None)": [
                        42,
                        50,
                        60,
                        62,
                        64,
                        79
                    ],
                    "('org.apache.commons.io.filefilter#OrFileFilter', 'getFileFilters')": [
                        94
                    ],
                    "('org.apache.commons.io.filefilter#OrFileFilter', 'setFileFilters(List)')": [
                        108
                    ],
                    "('org.apache.commons.io.filefilter#OrFileFilter', 'accept(File)')": [
                        116
                    ],
                    "('org.apache.commons.io.filefilter#OrFileFilter', 'accept(File,String)')": [
                        128
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/PrefixFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#PrefixFileFilter', None)": [
                        122,
                        136,
                        140
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#PrefixFileFilter', None)": [
                        122,
                        136,
                        140
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/SuffixFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#SuffixFileFilter', None)": [
                        123,
                        137,
                        141
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#SuffixFileFilter', None)": [
                        123,
                        137,
                        141
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/WildcardFileFilter.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#WildcardFileFilter', None)": [
                        122,
                        134,
                        138
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#WildcardFileFilter', None)": [
                        122,
                        134,
                        138
                    ]
                }
            },
            "src/java/org/apache/commons/io/filefilter/WildcardFilter.java": {
                "old": {
                    "(None, None)": [
                        35
                    ],
                    "('org.apache.commons.io.filefilter#WildcardFilter', None)": [
                        91,
                        95
                    ]
                },
                "new": {
                    "(None, None)": [
                        35
                    ],
                    "('org.apache.commons.io.filefilter#WildcardFilter', None)": [
                        91,
                        95
                    ]
                }
            },
            "src/java/org/apache/commons/io/input/ClassLoaderObjectInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStream', 'resolveClass(ObjectStreamClass)')": [
                        64
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#ClassLoaderObjectInputStream', 'resolveClass(ObjectStreamClass)')": [
                        64
                    ]
                }
            },
            "src/java/org/apache/commons/io/input/DemuxInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#DemuxInputStream', None)": [
                        32,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ],
                    "('org.apache.commons.io.input#DemuxInputStream', 'bindStream(InputStream)')": [
                        42
                    ],
                    "('org.apache.commons.io.input#DemuxInputStream', 'close')": [
                        55
                    ],
                    "('org.apache.commons.io.input#DemuxInputStream', 'read')": [
                        71
                    ],
                    "('org.apache.commons.io.input#DemuxInputStream', 'getStream')": [
                        87,
                        88,
                        89
                    ],
                    "(None, None)": [
                        90
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#DemuxInputStream', None)": [
                        32
                    ],
                    "('org.apache.commons.io.input#DemuxInputStream', 'bindStream(InputStream)')": [
                        42
                    ],
                    "('org.apache.commons.io.input#DemuxInputStream', 'close')": [
                        55
                    ],
                    "('org.apache.commons.io.input#DemuxInputStream', 'read')": [
                        71
                    ]
                }
            },
            "src/java/org/apache/commons/io/output/ByteArrayOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#ByteArrayOutputStream', None)": [
                        57,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        99,
                        100,
                        101
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'getBuffer(int)')": [
                        97,
                        98
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'needNewBuffer(int)')": [
                        113
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'reset')": [
                        235
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'writeTo(OutputStream)')": [
                        249
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'toByteArray')": [
                        274
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#ByteArrayOutputStream', None)": [
                        57
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'needNewBuffer(int)')": [
                        102
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'reset')": [
                        224
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'writeTo(OutputStream)')": [
                        238
                    ],
                    "('org.apache.commons.io.output#ByteArrayOutputStream', 'toByteArray')": [
                        263
                    ]
                }
            },
            "src/java/org/apache/commons/io/output/DemuxOutputStream.java": {
                "old": {
                    "('org.apache.commons.io.output#DemuxOutputStream', None)": [
                        32,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97
                    ],
                    "('org.apache.commons.io.output#DemuxOutputStream', 'bindStream(OutputStream)')": [
                        42
                    ],
                    "('org.apache.commons.io.output#DemuxOutputStream', 'close')": [
                        55
                    ],
                    "('org.apache.commons.io.output#DemuxOutputStream', 'flush')": [
                        70
                    ],
                    "('org.apache.commons.io.output#DemuxOutputStream', 'write(int)')": [
                        86
                    ],
                    "('org.apache.commons.io.output#DemuxOutputStream', 'getStream')": [
                        98,
                        99,
                        100
                    ],
                    "(None, None)": [
                        101
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#DemuxOutputStream', None)": [
                        32
                    ],
                    "('org.apache.commons.io.output#DemuxOutputStream', 'bindStream(OutputStream)')": [
                        42
                    ],
                    "('org.apache.commons.io.output#DemuxOutputStream', 'close')": [
                        55
                    ],
                    "('org.apache.commons.io.output#DemuxOutputStream', 'flush')": [
                        70
                    ],
                    "('org.apache.commons.io.output#DemuxOutputStream', 'write(int)')": [
                        86
                    ]
                }
            }
        }
    },
    "a7628b03ac47459a47f2c340bb474afe50ea0a31": {
        "authored_data": "2008 Feb 06 18:59",
        "commit.message": "Switch to JDK 1.5, remove JDK 1.3 logic from ant build\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@619102 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Niall Pemberton",
        "pcid": "651332ef291809e8271cec74fdd6691cfb725f9f",
        "changes": {
            "src/test/org/apache/commons/io/PackageTestSuite.java": {
                "new": {
                    "('org.apache.commons.io#PackageTestSuite', 'suite')": [
                        54
                    ]
                }
            },
            "src/test/org/apache/commons/io/filefilter/PackageTestSuite.java": {
                "new": {
                    "('org.apache.commons.io.filefilter#PackageTestSuite', 'suite')": [
                        39
                    ]
                }
            },
            "src/test/org/apache/commons/io/input/PackageTestSuite.java": {
                "new": {
                    "('org.apache.commons.io.input#PackageTestSuite', 'suite')": [
                        37
                    ]
                }
            },
            "src/test/org/apache/commons/io/output/PackageTestSuite.java": {
                "new": {
                    "('org.apache.commons.io.output#PackageTestSuite', 'suite')": [
                        41
                    ]
                }
            }
        }
    },
    "651332ef291809e8271cec74fdd6691cfb725f9f": {
        "authored_data": "2008 Feb 05 16:34",
        "commit.message": "Remove extraneous exec properties\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/io/trunk@618694 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "f672418289e4a909935bf1459a56e3f479260a13",
        "changes": {
            "src/java/org/apache/commons/io/filefilter/FileFileFilter.java": {
                "old": {
                    "(None, None)": [
                        37
                    ]
                },
                "new": {
                    "(None, None)": [
                        37
                    ]
                }
            }
        }
    }
}