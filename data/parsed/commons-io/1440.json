{
    "19319eada154fa9fdb41a72cc88be2aecf549355": {
        "authored_data": "2020 Jul 01 17:16",
        "commit.message": "Fix SpotBugs issues in org.apache.commons.io.FileUtils.",
        "commit.author.name": "Gary Gregory",
        "pcid": "6eb268945ade28e88b150313821d2daf197cc70c",
        "changes": {
            "src/main/java/org/apache/commons/io/FileUtils.java": {
                "old": {
                    "('org.apache.commons.io#FileUtils', 'doCopyDirectory(File,File,FileFilter,boolean,List)')": [
                        1243,
                        1276
                    ],
                    "('org.apache.commons.io#FileUtils', None)": [
                        1277
                    ],
                    "('org.apache.commons.io#FileUtils', 'doCopyFile(File,File,boolean)')": [
                        1297,
                        1313
                    ],
                    "('org.apache.commons.io#FileUtils', 'moveDirectoryToDirectory(File,File,boolean)')": [
                        1980
                    ],
                    "('org.apache.commons.io#FileUtils', 'moveFileToDirectory(File,File,boolean)')": [
                        2045
                    ]
                },
                "new": {
                    "('org.apache.commons.io#FileUtils', None)": [
                        1240,
                        1293
                    ],
                    "('org.apache.commons.io#FileUtils', 'doCopyDirectory(File,File,FileFilter,boolean,List)')": [
                        1244,
                        1277,
                        1278,
                        1279
                    ],
                    "('org.apache.commons.io#FileUtils', 'doCopyFile(File,File,boolean)')": [
                        1300,
                        1316
                    ],
                    "('org.apache.commons.io#FileUtils', 'moveDirectoryToDirectory(File,File,boolean)')": [
                        1983,
                        1984,
                        1985
                    ],
                    "('org.apache.commons.io#FileUtils', 'moveFileToDirectory(File,File,boolean)')": [
                        2050,
                        2051,
                        2052
                    ]
                }
            }
        }
    },
    "0de91c048fb575b9e7906e966a4428574fd03695": {
        "authored_data": "2020 Jul 01 14:49",
        "commit.message": "Tweak org.apache.commons.io.input.CircularInputStream.\n\n[IO-674] InfiniteCircularInputStream is not infinite if its input buffer\ncontains -1.\n\n[IO-675] InfiniteCircularInputStream throws a divide-by-zero exception\nwhen reading if its input buffer is size 0.\n\nUpdate version from 2.7.1-SNAPSHOT to 2.8-SNAPSHOT since we are adding a\nnew public class.\n\nmaven-checkstyle-plugin 3.1.0 -> 3.1.1.",
        "commit.author.name": "Gary Gregory",
        "pcid": "97ae01c95837f50a2e9be34c370b271c4d8fc88b",
        "changes": {
            "src/main/java/org/apache/commons/io/input/CircularInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#CircularInputStream', 'read')": [
                        74,
                        75,
                        76
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#CircularInputStream', None)": [
                        53
                    ]
                }
            }
        }
    },
    "97ae01c95837f50a2e9be34c370b271c4d8fc88b": {
        "authored_data": "2020 Jul 01 14:21",
        "commit.message": "Add org.apache.commons.io.input.CircularInputStream.\n\n[IO-674] InfiniteCircularInputStream is not infinite if its input buffer\ncontains -1.\n\n[IO-675] InfiniteCircularInputStream throws a divide-by-zero exception\nwhen reading if its input buffer is size 0.\n\nUpdate version from 2.7.1-SNAPSHOT to 2.8-SNAPSHOT since we are adding a\nnew public class.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "7371285a6c108a66f624651973bc255b26f8a909",
        "changes": {
            "src/main/java/org/apache/commons/io/input/InfiniteCircularInputStream.java": {
                "old": {
                    "(None, None)": [
                        23,
                        25,
                        26,
                        27
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStream', None)": [
                        31,
                        32,
                        33,
                        34,
                        37,
                        39,
                        40,
                        42,
                        43,
                        44,
                        45,
                        46
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStream', 'read')": [
                        47,
                        48,
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        19,
                        24,
                        26,
                        27,
                        29
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStream', None)": [
                        32,
                        35,
                        37,
                        39,
                        40,
                        41
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/InfiniteCircularInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', None)": [
                        29,
                        30,
                        36,
                        37,
                        38,
                        50
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'shouldCycleBytes')": [
                        31,
                        32,
                        33,
                        34,
                        35
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'shouldHandleWholeRangeOfBytes')": [
                        39,
                        40,
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49
                    ]
                },
                "new": {
                    "(None, None)": [
                        21,
                        27,
                        30,
                        31,
                        32,
                        101,
                        102
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'createInputStream(byte)')": [
                        46,
                        47
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', None)": [
                        48,
                        49,
                        50,
                        53,
                        54,
                        55,
                        58,
                        59,
                        60,
                        63,
                        64,
                        65,
                        66,
                        67,
                        72,
                        73,
                        74,
                        75,
                        81,
                        82,
                        83,
                        86,
                        87,
                        88
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'testContainsEofInputSize0')": [
                        51,
                        52
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'testCount0InputSize0')": [
                        56,
                        57
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'testCount0InputSize1')": [
                        61,
                        62
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'testCount1InputSize1')": [
                        68,
                        69,
                        70,
                        71
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'testCycleBytes')": [
                        76,
                        77,
                        78,
                        79,
                        80
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'testNullInputSize0')": [
                        84,
                        85
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'testWholeRangeOfBytes')": [
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100
                    ]
                }
            }
        }
    },
    "7371285a6c108a66f624651973bc255b26f8a909": {
        "authored_data": "2020 Jul 01 13:06",
        "commit.message": "Fix method names in test.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "1cf36951e7c480c31a7a36dd59744dd23f216197",
        "changes": {
            "src/test/java/org/apache/commons/io/input/InfiniteCircularInputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'should_cycle_bytes')": [
                        31
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'should_handle_whole_range_of_bytes')": [
                        39
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'shouldCycleBytes')": [
                        31
                    ],
                    "('org.apache.commons.io.input#InfiniteCircularInputStreamTest', 'shouldHandleWholeRangeOfBytes')": [
                        39
                    ]
                }
            }
        }
    },
    "e9d29f607171ab65b95a82ae2ed0ca0117aba66e": {
        "authored_data": "2020 Jun 22 13:36",
        "commit.message": "Make some simplifications (#121)\n\n",
        "commit.author.name": "Jerome Wolff",
        "pcid": "1d59399d6ddb1bf876e67fe3be61b91888ebf00a",
        "changes": {
            "src/main/java/org/apache/commons/io/comparator/SizeFileComparator.java": {
                "old": {
                    "('org.apache.commons.io.comparator#SizeFileComparator', 'compare(File,File)')": [
                        111,
                        117
                    ]
                },
                "new": {
                    "('org.apache.commons.io.comparator#SizeFileComparator', 'compare(File,File)')": [
                        111,
                        117
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/file/PathUtils.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtils', 'relativize(Collection,Path,boolean,Comparator)')": [
                        503
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtils', 'relativize(Collection,Path,boolean,Comparator)')": [
                        503
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/filefilter/FileFilterUtils.java": {
                "old": {
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'filterList(IOFileFilter,Iterable)')": [
                        153
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'filterSet(IOFileFilter,Iterable)')": [
                        244
                    ]
                },
                "new": {
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'filterList(IOFileFilter,Iterable)')": [
                        153
                    ],
                    "('org.apache.commons.io.filefilter#FileFilterUtils', 'filterSet(IOFileFilter,Iterable)')": [
                        244
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/BOMInputStream.java": {
                "old": {
                    "(None, None)": [
                        24,
                        27
                    ],
                    "('org.apache.commons.io.input#BOMInputStream', None)": [
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        170
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#BOMInputStream', None)": [
                        141,
                        162
                    ]
                }
            }
        }
    },
    "1d59399d6ddb1bf876e67fe3be61b91888ebf00a": {
        "authored_data": "2020 Jun 17 15:08",
        "commit.message": "Remove trailing whitespace.\n",
        "commit.author.name": "Gary Gregory",
        "pcid": "e589115b6443b328c7863b34455ed76f9cec06cc",
        "changes": {
            "src/main/java/org/apache/commons/io/file/AccumulatorPathVisitor.java": {
                "old": {
                    "('org.apache.commons.io.file#AccumulatorPathVisitor', None)": [
                        90,
                        99,
                        117,
                        130
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#AccumulatorPathVisitor', None)": [
                        90,
                        99,
                        117,
                        130
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/file/PathUtils.java": {
                "old": {
                    "('org.apache.commons.io.file#PathUtils', None)": [
                        56,
                        84,
                        292,
                        306,
                        353,
                        367,
                        494,
                        512
                    ]
                },
                "new": {
                    "('org.apache.commons.io.file#PathUtils', None)": [
                        56,
                        84,
                        292,
                        306,
                        353,
                        367,
                        494,
                        512
                    ]
                }
            },
            "src/main/java/org/apache/commons/io/input/MessageDigestCalculatingInputStream.java": {
                "old": {
                    "('org.apache.commons.io.input#MessageDigestCalculatingInputStream', None)": [
                        75,
                        89
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#MessageDigestCalculatingInputStream', None)": [
                        75,
                        89
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/input/SequenceReaderTest.java": {
                "old": {
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadLength1Readers')": [
                        163,
                        165
                    ]
                },
                "new": {
                    "('org.apache.commons.io.input#SequenceReaderTest', 'testReadLength1Readers')": [
                        163,
                        165
                    ]
                }
            },
            "src/test/java/org/apache/commons/io/output/DeferredFileOutputStreamTest.java": {
                "old": {
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', None)": [
                        324
                    ]
                },
                "new": {
                    "('org.apache.commons.io.output#DeferredFileOutputStreamTest', None)": [
                        324
                    ]
                }
            }
        }
    }
}