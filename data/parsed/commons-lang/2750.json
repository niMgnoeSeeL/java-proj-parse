{
    "7c8443f66c1a1852d31a4f3b9f096e5eecef5eb5": {
        "authored_data": "2015 Mar 02 16:29",
        "commit.message": "LANG-1089 FastDateParser does not handle excess hours as per SimpleDateFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1663348 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "6ec90c452fb1af67ede5720822d4503600522ff4",
        "changes": {
            "src/main/java/org/apache/commons/lang3/time/FastDateParser.java": {
                "old": {
                    "('org.apache.commons.lang3.time#FastDateParser', 'getStrategy(String,Calendar)')": [
                        490,
                        504,
                        506
                    ],
                    "('org.apache.commons.lang3.time#FastDateParser', None)": [
                        862,
                        865,
                        868,
                        871
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#FastDateParser', 'getStrategy(String,Calendar)')": [
                        490,
                        504,
                        506
                    ],
                    "('org.apache.commons.lang3.time#FastDateParser', None)": [
                        862,
                        865,
                        868,
                        871
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/time/FastDateParserSDFTest.java": {
                "new": {
                    "('org.apache.commons.lang3.time#FastDateParserSDFTest', 'data')": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        48,
                        49,
                        50,
                        51,
                        52,
                        53,
                        54,
                        55,
                        56,
                        57,
                        58,
                        59,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        72,
                        73,
                        74,
                        75,
                        76,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ]
                }
            }
        }
    },
    "6ec90c452fb1af67ede5720822d4503600522ff4": {
        "authored_data": "2015 Mar 02 16:10",
        "commit.message": "Docs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1663342 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "b321bde08dd2bb324d4742635f9e6ad70d58f2f2",
        "changes": {
            "src/main/java/org/apache/commons/lang3/time/FastDateParser.java": {
                "old": {
                    "('org.apache.commons.lang3.time#FastDateParser', 'getStrategy(String,Calendar)')": [
                        489,
                        491,
                        503,
                        505
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#FastDateParser', 'getStrategy(String,Calendar)')": [
                        489,
                        491,
                        503,
                        505
                    ]
                }
            }
        }
    },
    "b321bde08dd2bb324d4742635f9e6ad70d58f2f2": {
        "authored_data": "2015 Mar 01 23:18",
        "commit.message": "Generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1663177 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "fb6a62cab0abbe30464bd407a77ef0e6387fcba0",
        "changes": {
            "src/test/java/org/apache/commons/lang3/text/StrLookupTest.java": {
                "old": {
                    "('org.apache.commons.lang3.text#StrLookupTest', 'testSystemPropertiesLookupNotSingleton')": [
                        61,
                        66
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text#StrLookupTest', 'testSystemPropertiesLookupNotSingleton')": [
                        61,
                        66
                    ]
                }
            }
        }
    },
    "4d228ddfeaeeb98aee093dd3c79778ecdf5ffc08": {
        "authored_data": "2015 Mar 01 22:17",
        "commit.message": "Comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1663173 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "2367948a0f7bbcf42cb3ef9d97216319a526d3eb",
        "changes": {
            "src/test/java/org/apache/commons/lang3/time/FastDateParserSDFTest.java": {
                "old": {
                    "('org.apache.commons.lang3.time#FastDateParserSDFTest', 'data')": [
                        29
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#FastDateParserSDFTest', 'data')": [
                        29
                    ]
                }
            }
        }
    },
    "2367948a0f7bbcf42cb3ef9d97216319a526d3eb": {
        "authored_data": "2015 Mar 01 17:59",
        "commit.message": "LANG-1061 FastDateParser error - timezones not handled correctly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1663140 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Sebastian Bazley",
        "pcid": "45a6467088a08e447d7f2983551021b91c70ab49",
        "changes": {
            "src/main/java/org/apache/commons/lang3/time/FastDateParser.java": {
                "old": {
                    "('org.apache.commons.lang3.time#FastDateParser', None)": [
                        783
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#FastDateParser', None)": [
                        783,
                        784
                    ]
                }
            }
        }
    },
    "45a6467088a08e447d7f2983551021b91c70ab49": {
        "authored_data": "2015 Mar 01 16:48",
        "commit.message": "LANG-1087: NumberUtils#createNumber() returns positive BigDecimal when negative Float is expected. Thanks to Renat Zhilkibaev.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1663129 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "61836183b1d84a18dbcc084d1f41bcecf752f9fd",
        "changes": {
            "src/main/java/org/apache/commons/lang3/math/NumberUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.math#NumberUtils', 'createNumber(String)')": [
                        506,
                        513,
                        515
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.math#NumberUtils', 'createNumber(String)')": [
                        506,
                        513,
                        515
                    ],
                    "('org.apache.commons.lang3.math#NumberUtils', None)": [
                        624,
                        625,
                        626,
                        627,
                        628,
                        629,
                        630,
                        631,
                        632,
                        633,
                        636,
                        637,
                        638,
                        639,
                        640,
                        641,
                        642,
                        643,
                        644,
                        645,
                        646
                    ],
                    "('org.apache.commons.lang3.math#NumberUtils', 'getMantissa(String)')": [
                        634,
                        635
                    ],
                    "('org.apache.commons.lang3.math#NumberUtils', 'getMantissa(String,int)')": [
                        647,
                        648,
                        649,
                        650,
                        651
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/math/NumberUtilsTest.java": {
                "new": {
                    "('org.apache.commons.lang3.math#NumberUtilsTest', None)": [
                        247,
                        248,
                        249
                    ],
                    "('org.apache.commons.lang3.math#NumberUtilsTest', 'testLang1087')": [
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259
                    ]
                }
            }
        }
    },
    "61836183b1d84a18dbcc084d1f41bcecf752f9fd": {
        "authored_data": "2015 Feb 26 08:13",
        "commit.message": "Reverting changes from r1661762 (LANG-1086) for now until we have consensus about this change.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1662379 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Benedikt Ritter",
        "pcid": "4975b8903e359963eb48e2ad3d4095de0cfa8032",
        "changes": {
            "src/main/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializer.java": {
                "old": {
                    "(None, None)": [
                        19
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializer', None)": [
                        66,
                        67,
                        68,
                        69,
                        70,
                        71,
                        77,
                        78
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializer', 'get')": [
                        84,
                        86,
                        87,
                        88,
                        89,
                        90,
                        91,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializer', None)": [
                        70
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializer', 'get')": [
                        76,
                        78
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/concurrent/AbstractConcurrentInitializerTest.java": {
                "old": {
                    "(None, None)": [
                        21,
                        22
                    ],
                    "('org.apache.commons.lang3.concurrent#AbstractConcurrentInitializerTest', 'testGetConcurrent')": [
                        77,
                        78
                    ],
                    "('org.apache.commons.lang3.concurrent#AbstractConcurrentInitializerTest', None)": [
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        101,
                        102,
                        103,
                        156,
                        167,
                        168,
                        169,
                        170,
                        171,
                        172,
                        173
                    ],
                    "('org.apache.commons.lang3.concurrent#AbstractConcurrentInitializerTest', 'testGetConcurrentWithException(String,Exception)')": [
                        88,
                        89,
                        90,
                        91,
                        92
                    ],
                    "('org.apache.commons.lang3.concurrent#AbstractConcurrentInitializerTest', 'testGetConcurrentOptionallyWithException(boolean,String,Exception)')": [
                        104,
                        105,
                        106,
                        107,
                        108,
                        109,
                        110,
                        111,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155
                    ],
                    "('org.apache.commons.lang3.concurrent#AbstractConcurrentInitializerTest', 'createExceptionThrowingInitializer')": [
                        174
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.concurrent#AbstractConcurrentInitializerTest', 'testGetConcurrent')": [
                        75,
                        109,
                        110,
                        111
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/concurrent/AtomicInitializerTest.java": {
                "old": {
                    "(None, None)": [
                        19,
                        20,
                        70,
                        71
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicInitializerTest', None)": [
                        27,
                        28,
                        29,
                        30,
                        31,
                        32,
                        33,
                        34,
                        35,
                        40,
                        41,
                        56,
                        57,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        69
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicInitializerTest', 'testGetConcurrentWithException')": [
                        36,
                        37,
                        38,
                        39
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicInitializerTest', 'createExceptionThrowingInitializer')": [
                        58,
                        59
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/concurrent/AtomicSafeInitializerTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        21,
                        22,
                        24,
                        273,
                        274
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializerTest', None)": [
                        37,
                        40,
                        41,
                        42,
                        60,
                        61,
                        62,
                        63,
                        64,
                        65,
                        66,
                        67,
                        68,
                        85,
                        86,
                        87,
                        92,
                        93,
                        94,
                        95,
                        96,
                        97,
                        98,
                        99,
                        100,
                        103,
                        104,
                        105,
                        106,
                        107,
                        108,
                        111,
                        112,
                        113,
                        114,
                        115,
                        116,
                        117,
                        118,
                        119,
                        170,
                        189,
                        190,
                        191,
                        192,
                        193,
                        194,
                        195,
                        196,
                        197,
                        198,
                        199,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        209,
                        210,
                        211,
                        212,
                        213,
                        214,
                        215,
                        216,
                        217,
                        218,
                        219,
                        220,
                        221,
                        222,
                        223,
                        224,
                        225,
                        226,
                        227,
                        228,
                        229,
                        230,
                        231,
                        232,
                        233,
                        234,
                        235,
                        236,
                        237,
                        238,
                        239,
                        240,
                        241,
                        242,
                        243,
                        244,
                        245,
                        246,
                        247,
                        248,
                        249,
                        250,
                        251,
                        252,
                        253,
                        254,
                        255,
                        256,
                        257,
                        258,
                        259,
                        260,
                        261,
                        262,
                        263,
                        264,
                        265,
                        266,
                        267,
                        268,
                        269,
                        270,
                        271,
                        272
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializerTest', 'setUp')": [
                        47,
                        48,
                        49
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializerTest', 'createExceptionThrowingInitializer')": [
                        69,
                        70
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializerTest', 'testExceptionOnInitialize')": [
                        88,
                        89,
                        90,
                        91
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializerTest', 'testInterruptedWaitingOnInitialize')": [
                        101,
                        102
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializerTest', 'testOneThreadWaitingForAnotherToInitialize')": [
                        109,
                        110
                    ],
                    "('org.apache.commons.lang3.concurrent#AtomicSafeInitializerTest', 'execTestWithWaitingOnInitialize(boolean)')": [
                        120,
                        121,
                        122,
                        123,
                        124,
                        125,
                        126,
                        127,
                        128,
                        129,
                        130,
                        131,
                        132,
                        133,
                        134,
                        135,
                        136,
                        137,
                        138,
                        139,
                        140,
                        141,
                        142,
                        143,
                        144,
                        145,
                        146,
                        147,
                        148,
                        149,
                        150,
                        151,
                        152,
                        153,
                        154,
                        155,
                        156,
                        157,
                        158,
                        159,
                        160,
                        161,
                        162,
                        163,
                        164,
                        165,
                        166,
                        167,
                        168,
                        169
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/concurrent/LazyInitializerTest.java": {
                "old": {
                    "(None, None)": [
                        20,
                        87,
                        88
                    ],
                    "('org.apache.commons.lang3.concurrent#LazyInitializerTest', None)": [
                        30,
                        31,
                        32,
                        51,
                        52,
                        53,
                        56,
                        57,
                        58,
                        77,
                        78,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84,
                        85,
                        86
                    ],
                    "('org.apache.commons.lang3.concurrent#LazyInitializerTest', 'setUp')": [
                        37,
                        38,
                        39
                    ],
                    "('org.apache.commons.lang3.concurrent#LazyInitializerTest', 'createExceptionThrowingInitializer')": [
                        54,
                        55
                    ],
                    "('org.apache.commons.lang3.concurrent#LazyInitializerTest', 'testGetConcurrentWithException')": [
                        59,
                        60,
                        61,
                        62
                    ]
                }
            }
        }
    }
}