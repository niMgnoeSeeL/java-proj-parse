{
    "7c7fea8957ca3b8f6890dcc6b1ae5b3979cd6ccd": {
        "authored_data": "2009 May 15 07:34",
        "commit.message": "Commiting my variant patch from LANG-336 to Henrik Maryn's genericizing code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@775048 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "ed493782506d02f19c29f96d0983e51835acf764",
        "changes": {
            "src/java/org/apache/commons/lang/text/StrLookup.java": {
                "old": {
                    "('org.apache.commons.lang.text#StrLookup', None)": [
                        38,
                        43,
                        47,
                        125,
                        127,
                        130,
                        137
                    ],
                    "('org.apache.commons.lang.text#StrLookup', 'noneLookup')": [
                        65
                    ],
                    "('org.apache.commons.lang.text#StrLookup', 'systemPropertiesLookup')": [
                        80
                    ],
                    "('org.apache.commons.lang.text#StrLookup', 'mapLookup(Map)')": [
                        93,
                        94
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text#StrLookup', None)": [
                        38,
                        43,
                        47,
                        125,
                        127,
                        130,
                        137
                    ],
                    "('org.apache.commons.lang.text#StrLookup', 'noneLookup')": [
                        65
                    ],
                    "('org.apache.commons.lang.text#StrLookup', 'systemPropertiesLookup')": [
                        80
                    ],
                    "('org.apache.commons.lang.text#StrLookup', 'mapLookup(Map)')": [
                        93,
                        94
                    ]
                }
            },
            "src/java/org/apache/commons/lang/text/StrSubstitutor.java": {
                "old": {
                    "('org.apache.commons.lang.text#StrSubstitutor', 'replace(Object,Map)')": [
                        133
                    ],
                    "('org.apache.commons.lang.text#StrSubstitutor', 'replace(Object,Map,String,String)')": [
                        149
                    ],
                    "('org.apache.commons.lang.text#StrSubstitutor', None)": [
                        179,
                        191,
                        204
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.text#StrSubstitutor', 'replace(Object,Map)')": [
                        133
                    ],
                    "('org.apache.commons.lang.text#StrSubstitutor', 'replace(Object,Map,String,String)')": [
                        149
                    ],
                    "('org.apache.commons.lang.text#StrSubstitutor', None)": [
                        179,
                        191,
                        204
                    ]
                }
            }
        }
    },
    "ed493782506d02f19c29f96d0983e51835acf764": {
        "authored_data": "2009 May 15 07:33",
        "commit.message": "Genericizing per LANG-336. Removed two lines in the test that were trying to build a to string up to a class that was not in the hierarchy. The compiler now protects against this. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@775045 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "7a75f11d589ba4513daf70a2bbc9a5319b3c9538",
        "changes": {
            "src/java/org/apache/commons/lang/builder/HashCodeBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,Object,boolean,Class)')": [
                        306,
                        307
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,Object,boolean,Class,String)')": [
                        357,
                        358
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,T,boolean,Class)')": [
                        306,
                        307
                    ],
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionHashCode(int,int,T,boolean,Class,String)')": [
                        357,
                        358
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', None)": [
                        98,
                        386,
                        402,
                        422,
                        448,
                        469
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'toString(Object,ToStringStyle,boolean,boolean,Class)')": [
                        287,
                        288,
                        289
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'toStringExclude(Object,String)')": [
                        364,
                        365
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'reflectionAppendArray(Object)')": [
                        619
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'setExcludeFieldNames(String)')": [
                        656
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'setUpToClass(Class)')": [
                        674
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', None)": [
                        98,
                        386,
                        402,
                        422,
                        448,
                        469
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'toString(T,ToStringStyle,boolean,boolean,Class)')": [
                        287,
                        288,
                        289
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'toStringExclude(T,String)')": [
                        364,
                        365
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'reflectionAppendArray(Object)')": [
                        619
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'setExcludeFieldNames(String)')": [
                        656
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'setUpToClass(Class)')": [
                        674
                    ]
                }
            },
            "src/java/org/apache/commons/lang/builder/ToStringBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.builder#ToStringBuilder', None)": [
                        93,
                        194,
                        211,
                        227,
                        244
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'reflectionToString(Object,ToStringStyle,boolean,Class)')": [
                        165,
                        166,
                        169
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(boolean)')": [
                        267,
                        281
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(byte)')": [
                        295,
                        309
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(char)')": [
                        323,
                        337
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(double)')": [
                        351,
                        365
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(float)')": [
                        379,
                        393
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(int)')": [
                        407,
                        421
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(long)')": [
                        435,
                        449
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(Object)')": [
                        463,
                        477
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(short)')": [
                        491,
                        505
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,boolean)')": [
                        518,
                        531
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,boolean,boolean)')": [
                        551
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,byte)')": [
                        564,
                        576
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,byte,boolean)')": [
                        596
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,char)')": [
                        609,
                        622
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,char,boolean)')": [
                        642
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,double)')": [
                        655,
                        668
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,double,boolean)')": [
                        688
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,float)')": [
                        701,
                        714
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,float,boolean)')": [
                        734
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,int)')": [
                        747,
                        760
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,int,boolean)')": [
                        780
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,long)')": [
                        793,
                        806
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,long,boolean)')": [
                        826
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,Object)')": [
                        839,
                        867
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,Object,boolean)')": [
                        854,
                        887
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,short)')": [
                        900,
                        913
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,short,boolean)')": [
                        933
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'appendAsObjectToString(Object)')": [
                        947
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'appendSuper(String)')": [
                        966
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'appendToString(String)')": [
                        1000
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'getObject')": [
                        1013
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.builder#ToStringBuilder', None)": [
                        93,
                        194,
                        211,
                        227,
                        244
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'reflectionToString(T,ToStringStyle,boolean,Class)')": [
                        165,
                        166,
                        169
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(boolean)')": [
                        267,
                        281
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(byte)')": [
                        295,
                        309
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(char)')": [
                        323,
                        337
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(double)')": [
                        351,
                        365
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(float)')": [
                        379,
                        393
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(int)')": [
                        407,
                        421
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(long)')": [
                        435,
                        449
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(Object)')": [
                        463,
                        477
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(short)')": [
                        491,
                        505
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,boolean)')": [
                        518,
                        531
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,boolean,boolean)')": [
                        551
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,byte)')": [
                        564,
                        576
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,byte,boolean)')": [
                        596
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,char)')": [
                        609,
                        622
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,char,boolean)')": [
                        642
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,double)')": [
                        655,
                        668
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,double,boolean)')": [
                        688
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,float)')": [
                        701,
                        714
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,float,boolean)')": [
                        734
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,int)')": [
                        747,
                        760
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,int,boolean)')": [
                        780
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,long)')": [
                        793,
                        806
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,long,boolean)')": [
                        826
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,Object)')": [
                        839,
                        867
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,Object,boolean)')": [
                        854,
                        887
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,short)')": [
                        900,
                        913
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'append(String,short,boolean)')": [
                        933
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'appendAsObjectToString(Object)')": [
                        947
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'appendSuper(String)')": [
                        966
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'appendToString(String)')": [
                        1000
                    ],
                    "('org.apache.commons.lang.builder#ToStringBuilder', 'getObject')": [
                        1013
                    ]
                }
            },
            "src/test/org/apache/commons/lang/builder/ToStringBuilderTest.java": {
                "old": {
                    "('org.apache.commons.lang.builder#ToStringBuilderTest', 'testReflectionHierarchy')": [
                        343,
                        355
                    ]
                }
            }
        }
    },
    "a60f59ac93706db6a107a333dd0464aafc520486": {
        "authored_data": "2009 May 07 08:42",
        "commit.message": "Type doesn't need to be ArrayList, and updating for loops\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@772553 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "7d744b22679d0389f23d75c1bba1637f97d2f77c",
        "changes": {
            "src/java/org/apache/commons/lang/builder/ReflectionToStringBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'toNoNullStringArray(Object)')": [
                        343,
                        344,
                        345
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'appendFieldsIn(Class)')": [
                        529,
                        530
                    ]
                },
                "new": {
                    "(None, None)": [
                        23,
                        27
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'toNoNullStringArray(Object)')": [
                        345,
                        346
                    ],
                    "('org.apache.commons.lang.builder#ReflectionToStringBuilder', 'appendFieldsIn(Class)')": [
                        530
                    ]
                }
            }
        }
    },
    "7d744b22679d0389f23d75c1bba1637f97d2f77c": {
        "authored_data": "2009 May 07 08:41",
        "commit.message": "Genericizing excludeFieldList variable and updating for loop to foreach - LANG-336\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@772551 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "ca3a3baa651465310d31824250318bd500fa9e8b",
        "changes": {
            "src/java/org/apache/commons/lang/builder/HashCodeBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionAppend(Object,Class,HashCodeBuilder,boolean,String)')": [
                        182,
                        184,
                        185
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.builder#HashCodeBuilder', 'reflectionAppend(Object,Class,HashCodeBuilder,boolean,String)')": [
                        182,
                        184
                    ]
                }
            }
        }
    },
    "ca3a3baa651465310d31824250318bd500fa9e8b": {
        "authored_data": "2009 May 07 08:31",
        "commit.message": "Genericizing excludeFieldList variablle - LANG-336\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@772548 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "bab78e92bb785cbb847d361cfae157951d45e7ea",
        "changes": {
            "src/java/org/apache/commons/lang/builder/EqualsBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionAppend(Object,Object,Class,EqualsBuilder,boolean,String)')": [
                        321
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.builder#EqualsBuilder', 'reflectionAppend(Object,Object,Class,EqualsBuilder,boolean,String)')": [
                        321
                    ]
                }
            }
        }
    },
    "bab78e92bb785cbb847d361cfae157951d45e7ea": {
        "authored_data": "2009 May 07 08:28",
        "commit.message": "Type doesn't need tobe ArrayList\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@772544 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "97631fd6125b22853b08f0ad47c041258c6f0754",
        "changes": {
            "src/java/org/apache/commons/lang/exception/ExceptionUtils.java": {
                "old": {
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getRootCauseStackTrace(Throwable)')": [
                        809
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.exception#ExceptionUtils', 'getRootCauseStackTrace(Throwable)')": [
                        809
                    ]
                }
            }
        }
    },
    "97631fd6125b22853b08f0ad47c041258c6f0754": {
        "authored_data": "2009 May 07 08:12",
        "commit.message": "Adding generics - LANG-336\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@772541 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "a373714575fe012506713e15ba5ebec45ba23bf4",
        "changes": {
            "src/java/org/apache/commons/lang/builder/CompareToBuilder.java": {
                "old": {
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionAppend(Object,Object,Class,CompareToBuilder,boolean,String)')": [
                        358
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'append(Object,Object,Comparator)')": [
                        688
                    ]
                },
                "new": {
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'reflectionAppend(Object,Object,Class,CompareToBuilder,boolean,String)')": [
                        358
                    ],
                    "('org.apache.commons.lang.builder#CompareToBuilder', 'append(Object,Object,Comparator)')": [
                        688
                    ]
                }
            }
        }
    },
    "a373714575fe012506713e15ba5ebec45ba23bf4": {
        "authored_data": "2009 May 07 08:11",
        "commit.message": "Updating to java 5 foreach - LANG-336\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@772540 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "3d2c545acb66164dc127ad6b3abab44bbdb6de44",
        "changes": {
            "src/java/org/apache/commons/lang/ClassUtils.java": {
                "old": {
                    "(None, None)": [
                        23
                    ],
                    "('org.apache.commons.lang#ClassUtils', None)": [
                        90,
                        91
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getAllInterfaces(Class)')": [
                        292,
                        293,
                        294,
                        296,
                        297,
                        298,
                        299,
                        300
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'convertClassNamesToClasses(List)')": [
                        328,
                        329
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'convertClassesToClassNames(List)')": [
                        356,
                        357
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getPublicMethod(Class,String,Class)')": [
                        804,
                        805
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#ClassUtils', None)": [
                        89
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getAllInterfaces(Class)')": [
                        290,
                        291,
                        292,
                        294,
                        295,
                        296,
                        297
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'convertClassNamesToClasses(List)')": [
                        325
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'convertClassesToClassNames(List)')": [
                        352
                    ],
                    "('org.apache.commons.lang#ClassUtils', 'getPublicMethod(Class,String,Class)')": [
                        799
                    ]
                }
            }
        }
    },
    "3d2c545acb66164dc127ad6b3abab44bbdb6de44": {
        "authored_data": "2009 May 07 08:10",
        "commit.message": "Updating to java 5 foreach - LANG-336\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@772539 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Henri Yandell",
        "pcid": "73ac4a02898dcec70ae20e68dd21b2a23d08b478",
        "changes": {
            "src/java/org/apache/commons/lang/CharSet.java": {
                "old": {
                    "(None, None)": [
                        22
                    ],
                    "('org.apache.commons.lang#CharSet', 'contains(char)')": [
                        246,
                        247
                    ]
                },
                "new": {
                    "('org.apache.commons.lang#CharSet', 'contains(char)')": [
                        245
                    ]
                }
            }
        }
    }
}