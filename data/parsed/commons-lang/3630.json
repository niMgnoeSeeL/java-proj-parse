{
    "ff010a98f11931f2a4a4fb4bf5393a62428868a5": {
        "authored_data": "2011 Nov 10 06:14",
        "commit.message": "[LANG-762] Handle or document ReflectionToStringBuilder and ToStringBuilder for collections that are not thread safe. Better Javadocs. See Phil's comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1200177 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "fa35d13c66b4f44825b4d47b100c9a97f244058f",
        "changes": {
            "src/main/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java": {
                "old": {
                    "(None, None)": [
                        35,
                        42,
                        46,
                        49,
                        50,
                        51,
                        52,
                        53,
                        57,
                        59,
                        60,
                        61,
                        62,
                        71,
                        72,
                        73,
                        74,
                        79,
                        82,
                        83,
                        84,
                        85,
                        86,
                        87,
                        88,
                        89,
                        90
                    ]
                },
                "new": {
                    "(None, None)": [
                        41,
                        42,
                        43,
                        44,
                        45,
                        46,
                        47,
                        53,
                        54,
                        55,
                        60,
                        61,
                        70,
                        71,
                        76,
                        79,
                        80,
                        81,
                        82,
                        83,
                        84
                    ]
                }
            }
        }
    },
    "fa35d13c66b4f44825b4d47b100c9a97f244058f": {
        "authored_data": "2011 Nov 10 02:07",
        "commit.message": "Turn off long-running test for now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1200096 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "146065347504c8997f8a47fe1efaab69a19de15d",
        "changes": {
            "src/test/java/org/apache/commons/lang3/builder/ReflectionToStringBuilderConcurrencyTest.java": {
                "new": {
                    "('org.apache.commons.lang3.builder#ReflectionToStringBuilderConcurrencyTest', None)": [
                        77
                    ]
                }
            }
        }
    },
    "146065347504c8997f8a47fe1efaab69a19de15d": {
        "authored_data": "2011 Nov 09 21:41",
        "commit.message": "Use Collection.isEmpty() instead of size() == 0\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1199983 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "371e866442f46131cc38a9a5018e1703f52f9b60",
        "changes": {
            "src/main/java/org/apache/commons/lang3/Validate.java": {
                "old": {
                    "('org.apache.commons.lang3#Validate', 'notEmpty(T,String,Object)')": [
                        299,
                        348
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#Validate', 'notEmpty(T,String,Object)')": [
                        299,
                        348
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java": {
                "old": {
                    "('org.apache.commons.lang3.text#ExtendedMessageFormat', 'containsElements(Collection)')": [
                        525
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text#ExtendedMessageFormat', 'containsElements(Collection)')": [
                        525
                    ]
                }
            }
        }
    },
    "371e866442f46131cc38a9a5018e1703f52f9b60": {
        "authored_data": "2011 Nov 09 17:53",
        "commit.message": "Remove superfluous parens like:\nreturn (foo + 1);\nint len = (foo + 1);\nif ((foo + 1 > 2))\n((String) foo)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1199894 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "725ca3376984e5ec887a866cc44380b1ff465d36",
        "changes": {
            "src/main/java/org/apache/commons/lang3/BooleanUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#BooleanUtils', 'toBooleanObject(String)')": [
                        554,
                        555,
                        558,
                        559
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#BooleanUtils', 'toBooleanObject(String)')": [
                        554,
                        555,
                        558,
                        559
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/CharSequenceUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#CharSequenceUtils', 'regionMatches(CharSequence,boolean,int,CharSequence,int,int)')": [
                        190
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#CharSequenceUtils', 'regionMatches(CharSequence,boolean,int,CharSequence,int,int)')": [
                        190
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/CharSet.java": {
                "old": {
                    "('org.apache.commons.lang3#CharSet', 'add(String)')": [
                        181
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#CharSet', 'add(String)')": [
                        181
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/ClassUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#ClassUtils', 'isAssignable(Class,Class,boolean)')": [
                        625
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#ClassUtils', 'isAssignable(Class,Class,boolean)')": [
                        625
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/EnumUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#EnumUtils', 'generateBitVector(Class,Iterable)')": [
                        139
                    ],
                    "('org.apache.commons.lang3#EnumUtils', 'processBitVector(Class,long)')": [
                        182
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#EnumUtils', 'generateBitVector(Class,Iterable)')": [
                        139
                    ],
                    "('org.apache.commons.lang3#EnumUtils', 'processBitVector(Class,long)')": [
                        182
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/ObjectUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#ObjectUtils', 'equals(Object,Object)')": [
                        155
                    ],
                    "('org.apache.commons.lang3#ObjectUtils', 'hashCode(Object)')": [
                        199
                    ],
                    "('org.apache.commons.lang3#ObjectUtils', 'compare(T,T,boolean)')": [
                        412,
                        414
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#ObjectUtils', 'equals(Object,Object)')": [
                        155
                    ],
                    "('org.apache.commons.lang3#ObjectUtils', 'hashCode(Object)')": [
                        199
                    ],
                    "('org.apache.commons.lang3#ObjectUtils', 'compare(T,T,boolean)')": [
                        412,
                        414
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/RandomStringUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#RandomStringUtils', 'random(int,int,int,boolean,boolean,char,Random)')": [
                        230,
                        249,
                        250,
                        251
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#RandomStringUtils', 'random(int,int,int,boolean,boolean,char,Random)')": [
                        230,
                        249,
                        250,
                        251
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/Range.java": {
                "old": {
                    "('org.apache.commons.lang3#Range', 'contains(T)')": [
                        222
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#Range', 'contains(T)')": [
                        222
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/StringUtils.java": {
                "old": {
                    "('org.apache.commons.lang3#StringUtils', 'isBlank(CharSequence)')": [
                        228
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'stripStart(String,String)')": [
                        487,
                        493
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'stripEnd(String,String)')": [
                        532,
                        538
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'indexOfIgnoreCase(CharSequence,CharSequence,int)')": [
                        1090
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'lastIndexOfIgnoreCase(CharSequence,CharSequence,int)')": [
                        1336
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'indexOfAny(CharSequence,CharSequence)')": [
                        1949
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'mid(String,int,int)')": [
                        2215
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'substringAfterLast(String,String)')": [
                        2381
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'substringsBetween(String,String,String)')": [
                        2489
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitByWholeSeparatorWorker(String,String,int,boolean)')": [
                        2776
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitWorker(String,char,boolean)')": [
                        2935
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitWorker(String,String,int,boolean)')": [
                        3111
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'join(Object,char,int,int)')": [
                        3302
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'join(Object,String,int,int)')": [
                        3387
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'replace(String,String,String,int)')": [
                        3870,
                        3871
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'isAlphaSpace(CharSequence)')": [
                        5217
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'isAlphanumericSpace(CharSequence)')": [
                        5287
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'isNumericSpace(CharSequence)')": [
                        5399
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'isWhitespace(CharSequence)')": [
                        5432
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'abbreviate(String,int,int)')": [
                        5729,
                        5739
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'abbreviateMiddle(String,String,int)')": [
                        5779
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'indexOfDifference(CharSequence)')": [
                        5937
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'startsWith(CharSequence,CharSequence,boolean)')": [
                        6368
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#StringUtils', 'isBlank(CharSequence)')": [
                        228
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'stripStart(String,String)')": [
                        487,
                        493
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'stripEnd(String,String)')": [
                        532,
                        538
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'indexOfIgnoreCase(CharSequence,CharSequence,int)')": [
                        1090
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'lastIndexOfIgnoreCase(CharSequence,CharSequence,int)')": [
                        1336
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'indexOfAny(CharSequence,CharSequence)')": [
                        1949
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'mid(String,int,int)')": [
                        2215
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'substringAfterLast(String,String)')": [
                        2381
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'substringsBetween(String,String,String)')": [
                        2489
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitByWholeSeparatorWorker(String,String,int,boolean)')": [
                        2776
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitWorker(String,char,boolean)')": [
                        2935
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'splitWorker(String,String,int,boolean)')": [
                        3111
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'join(Object,char,int,int)')": [
                        3302
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'join(Object,String,int,int)')": [
                        3387
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'replace(String,String,String,int)')": [
                        3870,
                        3871
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'isAlphaSpace(CharSequence)')": [
                        5217
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'isAlphanumericSpace(CharSequence)')": [
                        5287
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'isNumericSpace(CharSequence)')": [
                        5399
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'isWhitespace(CharSequence)')": [
                        5432
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'abbreviate(String,int,int)')": [
                        5729,
                        5739
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'abbreviateMiddle(String,String,int)')": [
                        5779
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'indexOfDifference(CharSequence)')": [
                        5937
                    ],
                    "('org.apache.commons.lang3#StringUtils', 'startsWith(CharSequence,CharSequence,boolean)')": [
                        6368
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.concurrent#ConcurrentUtils', 'initialize(ConcurrentInitializer)')": [
                        184
                    ],
                    "('org.apache.commons.lang3.concurrent#ConcurrentUtils', 'putIfAbsent(ConcurrentMap,K,V)')": [
                        247
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.concurrent#ConcurrentUtils', 'initialize(ConcurrentInitializer)')": [
                        184
                    ],
                    "('org.apache.commons.lang3.concurrent#ConcurrentUtils', 'putIfAbsent(ConcurrentMap,K,V)')": [
                        247
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/concurrent/ConstantInitializer.java": {
                "old": {
                    "('org.apache.commons.lang3.concurrent#ConstantInitializer', 'hashCode')": [
                        91
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.concurrent#ConstantInitializer', 'hashCode')": [
                        91
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/concurrent/TimedSemaphore.java": {
                "old": {
                    "('org.apache.commons.lang3.concurrent#TimedSemaphore', 'getAverageCallsPerPeriod')": [
                        361
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.concurrent#TimedSemaphore', 'getAverageCallsPerPeriod')": [
                        361
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/exception/ExceptionUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'getRootCause(Throwable)')": [
                        181
                    ],
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'getRootCauseMessage(Throwable)')": [
                        693
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'getRootCause(Throwable)')": [
                        181
                    ],
                    "('org.apache.commons.lang3.exception#ExceptionUtils', 'getRootCauseMessage(Throwable)')": [
                        693
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/math/Fraction.java": {
                "old": {
                    "('org.apache.commons.lang3.math#Fraction', 'getFraction(double)')": [
                        250,
                        294
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'floatValue')": [
                        443
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'doubleValue')": [
                        454
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'pow(int)')": [
                        558
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'greatestCommonDivisor(int,int)')": [
                        578,
                        579,
                        604
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'mulAndCheck(int,int)')": [
                        640
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'mulPosAndCheck(int,int)')": [
                        659
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'addSub(Fraction,boolean)')": [
                        773
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'equals(Object)')": [
                        852,
                        853
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.math#Fraction', 'getFraction(double)')": [
                        250,
                        294
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'floatValue')": [
                        443
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'doubleValue')": [
                        454
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'pow(int)')": [
                        558
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'greatestCommonDivisor(int,int)')": [
                        578,
                        579,
                        604
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'mulAndCheck(int,int)')": [
                        640
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'mulPosAndCheck(int,int)')": [
                        659
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'addSub(Fraction,boolean)')": [
                        773
                    ],
                    "('org.apache.commons.lang3.math#Fraction', 'equals(Object)')": [
                        852,
                        853
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/mutable/MutableDouble.java": {
                "old": {
                    "('org.apache.commons.lang3.mutable#MutableDouble', 'equals(Object)')": [
                        274,
                        275
                    ],
                    "('org.apache.commons.lang3.mutable#MutableDouble', 'hashCode')": [
                        286
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.mutable#MutableDouble', 'equals(Object)')": [
                        274,
                        275
                    ],
                    "('org.apache.commons.lang3.mutable#MutableDouble', 'hashCode')": [
                        286
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/mutable/MutableFloat.java": {
                "old": {
                    "('org.apache.commons.lang3.mutable#MutableFloat', 'equals(Object)')": [
                        276,
                        277
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.mutable#MutableFloat', 'equals(Object)')": [
                        276,
                        277
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/text/StrSubstitutor.java": {
                "old": {
                    "('org.apache.commons.lang3.text#StrSubstitutor', 'substitute(StrBuilder,int,int,List)')": [
                        583,
                        659,
                        681
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text#StrSubstitutor', 'substitute(StrBuilder,int,int,List)')": [
                        583,
                        659,
                        681
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/text/StrTokenizer.java": {
                "old": {
                    "('org.apache.commons.lang3.text#StrTokenizer', 'readWithQuotes(char,int,int,StrBuilder,List,int,int)')": [
                        731,
                        749
                    ],
                    "('org.apache.commons.lang3.text#StrTokenizer', 'isQuote(char,int,int,int,int)')": [
                        823
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text#StrTokenizer', 'readWithQuotes(char,int,int,StrBuilder,List,int,int)')": [
                        731,
                        749
                    ],
                    "('org.apache.commons.lang3.text#StrTokenizer', 'isQuote(char,int,int,int,int)')": [
                        823
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/text/WordUtils.java": {
                "old": {
                    "('org.apache.commons.lang3.text#WordUtils', 'wrap(String,int,String,boolean)')": [
                        102
                    ],
                    "('org.apache.commons.lang3.text#WordUtils', 'capitalizeFully(String,char)')": [
                        270
                    ],
                    "('org.apache.commons.lang3.text#WordUtils', 'uncapitalize(String,char)')": [
                        326
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text#WordUtils', 'wrap(String,int,String,boolean)')": [
                        102
                    ],
                    "('org.apache.commons.lang3.text#WordUtils', 'capitalizeFully(String,char)')": [
                        270
                    ],
                    "('org.apache.commons.lang3.text#WordUtils', 'uncapitalize(String,char)')": [
                        326
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java": {
                "old": {
                    "('org.apache.commons.lang3.text.translate#NumericEntityUnescaper', 'isSet(OPTION)')": [
                        71
                    ],
                    "('org.apache.commons.lang3.text.translate#NumericEntityUnescaper', 'translate(CharSequence,int,Writer)')": [
                        98,
                        99,
                        100,
                        105,
                        135
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text.translate#NumericEntityUnescaper', 'isSet(OPTION)')": [
                        71
                    ],
                    "('org.apache.commons.lang3.text.translate#NumericEntityUnescaper', 'translate(CharSequence,int,Writer)')": [
                        98,
                        99,
                        100,
                        105,
                        135
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java": {
                "old": {
                    "('org.apache.commons.lang3.text.translate#UnicodeUnescaper', 'translate(CharSequence,int,Writer)')": [
                        37,
                        40,
                        44,
                        48
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text.translate#UnicodeUnescaper', 'translate(CharSequence,int,Writer)')": [
                        37,
                        40,
                        44,
                        48
                    ]
                }
            },
            "src/main/java/org/apache/commons/lang3/time/StopWatch.java": {
                "old": {
                    "('org.apache.commons.lang3.time#StopWatch', 'resume')": [
                        251
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.time#StopWatch', 'resume')": [
                        251
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/ArrayUtilsAddTest.java": {
                "old": {
                    "('org.apache.commons.lang3#ArrayUtilsAddTest', 'testAddObjectArrayObject')": [
                        200,
                        201,
                        206,
                        207,
                        212,
                        216,
                        221,
                        226
                    ],
                    "('org.apache.commons.lang3#ArrayUtilsAddTest', 'testAddObjectArrayToObjectArray')": [
                        259,
                        264,
                        267,
                        271,
                        275,
                        279,
                        283
                    ],
                    "('org.apache.commons.lang3#ArrayUtilsAddTest', 'testAddObjectAtIndex')": [
                        372,
                        373,
                        377,
                        380,
                        383,
                        386
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#ArrayUtilsAddTest', 'testAddObjectArrayObject')": [
                        200,
                        201,
                        206,
                        207,
                        212,
                        216,
                        221,
                        226
                    ],
                    "('org.apache.commons.lang3#ArrayUtilsAddTest', 'testAddObjectArrayToObjectArray')": [
                        259,
                        264,
                        267,
                        271,
                        275,
                        279,
                        283
                    ],
                    "('org.apache.commons.lang3#ArrayUtilsAddTest', 'testAddObjectAtIndex')": [
                        372,
                        373,
                        377,
                        380,
                        383,
                        386
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/BitFieldTest.java": {
                "old": {
                    "('org.apache.commons.lang3#BitFieldTest', 'testSetShortValue')": [
                        152
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#BitFieldTest', 'testSetShortValue')": [
                        152
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/CharUtilsPerfRun.java": {
                "old": {
                    "('org.apache.commons.lang3#CharUtilsPerfRun', 'run_inlined_CharUtils_isAsciiNumeric(int)')": [
                        151
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#CharUtilsPerfRun', 'run_inlined_CharUtils_isAsciiNumeric(int)')": [
                        151
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/RandomStringUtilsTest.java": {
                "old": {
                    "('org.apache.commons.lang3#RandomStringUtilsTest', 'chiSquare(int,int)')": [
                        289
                    ],
                    "('org.apache.commons.lang3#RandomStringUtilsTest', 'testLang100')": [
                        314,
                        315
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3#RandomStringUtilsTest', 'chiSquare(int,int)')": [
                        289
                    ],
                    "('org.apache.commons.lang3#RandomStringUtilsTest', 'testLang100')": [
                        314,
                        315
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/CompareToBuilderTest.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#CompareToBuilderTest', None)": [
                        49,
                        60,
                        82
                    ],
                    "('org.apache.commons.lang3.builder#CompareToBuilderTest', 'assertReflectionCompareContract(Object,Object,Object,boolean,String)')": [
                        234
                    ],
                    "('org.apache.commons.lang3.builder#CompareToBuilderTest', 'testMultiFloatArray')": [
                        826,
                        827,
                        828
                    ],
                    "('org.apache.commons.lang3.builder#CompareToBuilderTest', 'testMultiDoubleArray')": [
                        850,
                        851,
                        852
                    ],
                    "('org.apache.commons.lang3.builder#CompareToBuilderTest', 'testMultiBooleanArray')": [
                        874,
                        875,
                        876
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#CompareToBuilderTest', None)": [
                        49,
                        60,
                        82
                    ],
                    "('org.apache.commons.lang3.builder#CompareToBuilderTest', 'assertReflectionCompareContract(Object,Object,Object,boolean,String)')": [
                        234
                    ],
                    "('org.apache.commons.lang3.builder#CompareToBuilderTest', 'testMultiFloatArray')": [
                        826,
                        827,
                        828
                    ],
                    "('org.apache.commons.lang3.builder#CompareToBuilderTest', 'testMultiDoubleArray')": [
                        850,
                        851,
                        852
                    ],
                    "('org.apache.commons.lang3.builder#CompareToBuilderTest', 'testMultiBooleanArray')": [
                        874,
                        875,
                        876
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', None)": [
                        53,
                        83
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiBooleanArray')": [
                        715,
                        716
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', None)": [
                        53,
                        83
                    ],
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', 'testMultiBooleanArray')": [
                        715,
                        716
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/builder/HashCodeBuilderTest.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', None)": [
                        97,
                        134
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testSuper')": [
                        207
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testLong')": [
                        231
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testDouble')": [
                        266
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testObjectArray')": [
                        288
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testObjectArrayAsObject')": [
                        299
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testLongArray')": [
                        311,
                        313,
                        316
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testLongArrayAsObject')": [
                        323,
                        325,
                        328
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testIntArray')": [
                        336
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testIntArrayAsObject')": [
                        346
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testShortArray')": [
                        357
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testShortArrayAsObject')": [
                        367
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testCharArray')": [
                        378
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testCharArrayAsObject')": [
                        388
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testByteArray')": [
                        399
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testByteArrayAsObject')": [
                        409
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testDoubleArray')": [
                        420,
                        423,
                        427
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testDoubleArrayAsObject')": [
                        434,
                        437,
                        441
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testFloatArray')": [
                        449
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testFloatArrayAsObject')": [
                        461
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testBooleanMultiArray')": [
                        494,
                        504
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testReflectionHashCodeExcludeFields')": [
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', None)": [
                        97,
                        134
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testSuper')": [
                        207
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testLong')": [
                        231
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testDouble')": [
                        266
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testObjectArray')": [
                        288
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testObjectArrayAsObject')": [
                        299
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testLongArray')": [
                        311,
                        313,
                        316
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testLongArrayAsObject')": [
                        323,
                        325,
                        328
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testIntArray')": [
                        336
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testIntArrayAsObject')": [
                        346
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testShortArray')": [
                        357
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testShortArrayAsObject')": [
                        367
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testCharArray')": [
                        378
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testCharArrayAsObject')": [
                        388
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testByteArray')": [
                        399
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testByteArrayAsObject')": [
                        409
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testDoubleArray')": [
                        420,
                        423,
                        427
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testDoubleArrayAsObject')": [
                        434,
                        437,
                        441
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testFloatArray')": [
                        449
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testFloatArrayAsObject')": [
                        461
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testBooleanMultiArray')": [
                        494,
                        504
                    ],
                    "('org.apache.commons.lang3.builder#HashCodeBuilderTest', 'testReflectionHashCodeExcludeFields')": [
                        511,
                        512,
                        513,
                        514,
                        515,
                        516,
                        517,
                        518,
                        519,
                        520
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/concurrent/TimedSemaphoreTest.java": {
                "old": {
                    "('org.apache.commons.lang3.concurrent#TimedSemaphoreTest', None)": [
                        431
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.concurrent#TimedSemaphoreTest', None)": [
                        431
                    ]
                }
            },
            "src/test/java/org/apache/commons/lang3/text/StrTokenizerTest.java": {
                "old": {
                    "('org.apache.commons.lang3.text#StrTokenizerTest', 'testCloneNotSupportedException')": [
                        554,
                        559
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.text#StrTokenizerTest', 'testCloneNotSupportedException')": [
                        554,
                        559
                    ]
                }
            }
        }
    },
    "725ca3376984e5ec887a866cc44380b1ff465d36": {
        "authored_data": "2011 Nov 09 17:42",
        "commit.message": "Use blocks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1199893 13f79535-47bb-0310-9956-ffa450edef68\n",
        "commit.author.name": "Gary D. Gregory",
        "pcid": "57251859b6991277b65a2961b5fdbc5cd2a1a93a",
        "changes": {
            "src/test/java/org/apache/commons/lang3/builder/EqualsBuilderTest.java": {
                "old": {
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', None)": [
                        939,
                        941,
                        943,
                        962,
                        964,
                        966
                    ]
                },
                "new": {
                    "('org.apache.commons.lang3.builder#EqualsBuilderTest', None)": [
                        939,
                        941,
                        942,
                        944,
                        945,
                        947,
                        965,
                        967,
                        968,
                        970,
                        971,
                        973
                    ]
                }
            }
        }
    }
}